
#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область ПрограммныйИнтерфейс

Функция ПолучитьСтикерВФорматеPDF(НомерЗаказа, ЛичныйКабинет)Экспорт 
		
	HTTPСоединение = Новый HTTPСоединение(ПолучитьСерверОзон(), 443,,,,, Новый ЗащищенноеСоединениеOpenSSL());
	
	Заголовки = ПолучитьОбязательныеЗаголовкиОзон(ЛичныйКабинет);	
	HTTPЗапрос = Новый HTTPЗапрос("/v2/posting/fbs/package-label", Заголовки);
	
	
	Массив = Новый Массив;
	Массив.Добавить(НомерЗаказа);	
	Заказы = Новый Структура("posting_number", Массив);
	ЗаписьJSON = Новый ЗаписьJSON;
	ЗаписьJSON.УстановитьСтроку();
	
	ЗаписатьJSON(ЗаписьJSON, Заказы, Новый НастройкиСериализацииJSON, 
		"ФункцияПреобразованияЗаписи", Документы.mega_ЗаказПокупателя_FBS_OZON);
	
	СтрокаТелаЗапроса = ЗаписьJSON.Закрыть();
	
	HTTPЗапрос.УстановитьТелоИзСтроки(СтрокаТелаЗапроса, КодировкаТекста.UTF8, ИспользованиеByteOrderMark.НеИспользовать);	
	Результат = HTTPСоединение.ОтправитьДляОбработки(HTTPЗапрос);
	// ТелоКакСтрока = Результат.ПолучитьТелоКакСтроку();
	
	Стикеры = Неопределено;
	Если Результат.КодСостояния >= 200 И Результат.КодСостояния < 300 Тогда 
		
		Стикеры = Результат.ПолучитьТелоКакДвоичныеДанные();
	КонецЕсли;
	
	Возврат Стикеры;
КонецФункции

Функция ПолучитьСтатусЗаказаПоНомеру(НомерЗаказа, ЛичныйКабинет)Экспорт 
		
	HTTPСоединение = Новый HTTPСоединение(ПолучитьСерверОзон(), 443,,,,, Новый ЗащищенноеСоединениеOpenSSL());
	
	Заголовки = ПолучитьОбязательныеЗаголовкиОзон(ЛичныйКабинет);	
	HTTPЗапрос = Новый HTTPЗапрос("/v3/posting/fbs/get", Заголовки);
	
	
	ДополнительныеПоля = Новый Структура;
	ДополнительныеПоля.Вставить("analytics_data", Ложь);
	ДополнительныеПоля.Вставить("barcodes", Истина);
	ДополнительныеПоля.Вставить("financial_data", Ложь);
	ДополнительныеПоля.Вставить("product_exemplars", Ложь);
	ДополнительныеПоля.Вставить("translit", Ложь);
	
	Заказ = Новый Структура;
	Заказ.Вставить("posting_number", НомерЗаказа);
	Заказ.Вставить("with", ДополнительныеПоля);
	
	ЗаписьJSON = Новый ЗаписьJSON;
	ЗаписьJSON.УстановитьСтроку();
	
	ЗаписатьJSON(ЗаписьJSON, Заказ, Новый НастройкиСериализацииJSON,
		"ФункцияПреобразованияЗаписи", Документы.mega_ЗаказПокупателя_FBS_OZON);
	
	СтрокаТелаЗапроса = ЗаписьJSON.Закрыть();
	
	HTTPЗапрос.УстановитьТелоИзСтроки(СтрокаТелаЗапроса, КодировкаТекста.UTF8, ИспользованиеByteOrderMark.НеИспользовать);	
	Результат = HTTPСоединение.ОтправитьДляОбработки(HTTPЗапрос);
	ТелоКакСтрока = Результат.ПолучитьТелоКакСтроку();
	
	Если Результат.КодСостояния >= 200 И Результат.КодСостояния < 300 Тогда 
		
		ЧтениеJSON = Новый ЧтениеJSON;
		ЧтениеJSON.УстановитьСтроку(ТелоКакСтрока);
		СтруктураДанных = ПрочитатьJSON(ЧтениеJSON);
		ЧтениеJSON.Закрыть();                       
		
		Возврат ПеревестиСтатусЗаказнаРусский(Строка(СтруктураДанных.result.status));
	КонецЕсли;
	
	Возврат "Ошибка получения статуса";
КонецФункции

Функция ПолучитьСКЮЗаказаПоНомеру(НомерЗаказа, ЛичныйКабинет)Экспорт 
		
	HTTPСоединение = Новый HTTPСоединение(ПолучитьСерверОзон(), 443,,,,, Новый ЗащищенноеСоединениеOpenSSL());
	
	Заголовки = ПолучитьОбязательныеЗаголовкиОзон(ЛичныйКабинет);	
	HTTPЗапрос = Новый HTTPЗапрос("/v3/posting/fbs/get", Заголовки);
	
	
	ДополнительныеПоля = Новый Структура;
	ДополнительныеПоля.Вставить("analytics_data", Ложь);
	ДополнительныеПоля.Вставить("barcodes", Истина);
	ДополнительныеПоля.Вставить("financial_data", Ложь);
	ДополнительныеПоля.Вставить("product_exemplars", Ложь);
	ДополнительныеПоля.Вставить("translit", Ложь);
	
	Заказ = Новый Структура;
	Заказ.Вставить("posting_number", НомерЗаказа);
	Заказ.Вставить("with", ДополнительныеПоля);
	
	ЗаписьJSON = Новый ЗаписьJSON;
	ЗаписьJSON.УстановитьСтроку();
	
	ЗаписатьJSON(ЗаписьJSON, Заказ, Новый НастройкиСериализацииJSON, 
		"ФункцияПреобразованияЗаписи", Документы.mega_ЗаказПокупателя_FBS_OZON);
	
	СтрокаТелаЗапроса = ЗаписьJSON.Закрыть();
	
	HTTPЗапрос.УстановитьТелоИзСтроки(СтрокаТелаЗапроса, КодировкаТекста.UTF8, ИспользованиеByteOrderMark.НеИспользовать);	
	Результат = HTTPСоединение.ОтправитьДляОбработки(HTTPЗапрос);
	ТелоКакСтрока = Результат.ПолучитьТелоКакСтроку();
	
	СКЮ = Новый Массив;
	Если Результат.КодСостояния >= 200 И Результат.КодСостояния < 300 Тогда 
		
		ЧтениеJSON = Новый ЧтениеJSON;
		ЧтениеJSON.УстановитьСтроку(ТелоКакСтрока);
		СтруктураДанных = ПрочитатьJSON(ЧтениеJSON);
		ЧтениеJSON.Закрыть();                       
		
		Для Каждого ТекСтрока Из СтруктураДанных.result.products Цикл
			
			СКЮ.Добавить(ТекСтрока.sku);
		КонецЦикла;		
	КонецЕсли;
	
	Возврат СКЮ;
КонецФункции

Функция ПолучитьДанныеИзОзонПоСКЮ(СКЮ, ЛичныйКабинет)Экспорт 
		
	HTTPСоединение = Новый HTTPСоединение(ПолучитьСерверОзон(), 443,,,,, Новый ЗащищенноеСоединениеOpenSSL());
	
	Заголовки = ПолучитьОбязательныеЗаголовкиОзон(ЛичныйКабинет);	
	HTTPЗапрос = Новый HTTPЗапрос("/v2/product/info", Заголовки);
	
		
	СтруктураЗапроса = Новый Структура;
	СтруктураЗапроса.Вставить("offer_id", "");
	СтруктураЗапроса.Вставить("product_id", 0);
	СтруктураЗапроса.Вставить("sku", СКЮ);
	
	ЗаписьJSON = Новый ЗаписьJSON;
	ЗаписьJSON.УстановитьСтроку();
	
	ЗаписатьJSON(ЗаписьJSON, СтруктураЗапроса, Новый НастройкиСериализацииJSON, 
		"ФункцияПреобразованияЗаписи", Документы.mega_ЗаказПокупателя_FBS_OZON);
	
	СтрокаТелаЗапроса = ЗаписьJSON.Закрыть();
	
	HTTPЗапрос.УстановитьТелоИзСтроки(СтрокаТелаЗапроса, КодировкаТекста.UTF8, ИспользованиеByteOrderMark.НеИспользовать);	
	Результат = HTTPСоединение.ОтправитьДляОбработки(HTTPЗапрос);
	ТелоКакСтрока = Результат.ПолучитьТелоКакСтроку();
		
	Если Результат.КодСостояния >= 200 И Результат.КодСостояния < 300 Тогда 
		
		ЧтениеJSON = Новый ЧтениеJSON;
		ЧтениеJSON.УстановитьСтроку(ТелоКакСтрока);
		СтруктураДанных = ПрочитатьJSON(ЧтениеJSON);
		ЧтениеJSON.Закрыть();                       
		
		Возврат СтруктураДанных.result;
	КонецЕсли;
	
	Возврат Неопределено;
КонецФункции

Функция ПолучитьШтрикодыЗаказа(НомерЗаказа, ЛичныйКабинет)Экспорт 
	
	ШтрихкодыЗаказа = Новый Массив;
	
	СКЮЗаказа = ПолучитьСКЮЗаказаПоНомеру(НомерЗаказа, ЛичныйКабинет);
	Для Каждого СКЮ Из СКЮЗаказа Цикл
		
		ДанныеИзОзон = ПолучитьДанныеИзОзонПоСКЮ(СКЮ, ЛичныйКабинет);
		Если ДанныеИзОзон = Неопределено Тогда 
			
			Продолжить;
		КонецЕсли;
		
		Структура = Новый Соответствие;
		Структура.Вставить("sku", СКЮ);
		Структура.Вставить("barcode", ДанныеИзОзон.barcode);
		Структура.Вставить("name", ДанныеИзОзон.name);
		
		ШтрихкодыЗаказа.Добавить(Структура);
	КонецЦикла;
	
	Возврат ШтрихкодыЗаказа;
КонецФункции

Функция ПолучитьЗаказПокупателяФорматеJSON(ЗаказПокупателя)Экспорт 
	
	СтруктураЗаказ = Новый Структура("id,items", Строка(ЗаказПокупателя.УникальныйИдентификатор()), Новый Массив);
	Для Каждого ТекСтрока Из ЗаказПокупателя.Товары Цикл 
		
		СтруктураЗаказ.items.Добавить(Новый Структура("item,flag", ТекСтрока.НомерСтроки, ЗначениеЗаполнено(ТекСтрока.ДатаПечати)));
	КонецЦикла;
	
	ЗаписьJSON = Новый ЗаписьJSON;
	ЗаписьJSON.УстановитьСтроку();
	
	ЗаписатьJSON(ЗаписьJSON, СтруктураЗаказ, Новый НастройкиСериализацииJSON,
		"ФункцияПреобразованияЗаписи", Документы.mega_ЗаказПокупателя_FBS_OZON);
	
	Возврат ЗаписьJSON.Закрыть();
	
КонецФункции

#КонецОбласти

#Область ОбработчикиСобытий

// Код процедур и функций

#КонецОбласти

#Область СлужебныйПрограммныйИнтерфейс

Функция ФункцияПреобразованияЗаписи(Свойство, Значение, ДополнительныеПараметры, Отказ) Экспорт
	Если ТипЗнч(Значение) = Тип("УникальныйИдентификатор") Тогда
		Возврат Строка(Значение);
	КонецЕсли;
	Отказ = Истина;
КонецФункции

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

Функция ПеревестиСтатусЗаказнаРусский(Статус)
	
	Статусы = Новый Структура();
	Статусы.Вставить("acceptance_in_progress", "идёт приёмка");
	Статусы.Вставить("arbitration", "арбитраж");
	Статусы.Вставить("awaiting_approve", "ожидает подтверждения");
	Статусы.Вставить("awaiting_deliver", "ожидает отгрузки");
	Статусы.Вставить("awaiting_packaging", "ожидает упаковки");
	Статусы.Вставить("awaiting_registration", "ожидает регистрации");
	Статусы.Вставить("awaiting_verification", "создано");
	Статусы.Вставить("cancelled", "отменено");
	Статусы.Вставить("cancelled_from_split_pending", "отменено");
	Статусы.Вставить("client_arbitration", "клиентский арбитраж доставки");
	Статусы.Вставить("delivered", "доставлено");
	Статусы.Вставить("delivering", "доставляется");
	Статусы.Вставить("driver_pickup", "у водителя");
	Статусы.Вставить("not_accepted", "не принят на сортировочном центре");
	Статусы.Вставить("sent_by_seller", "отправлено продавцом");
	
	Если Статусы.Свойство(Статус) <> Неопределено Тогда 
		
		Возврат Статусы[Статус];
	КонецЕсли;
	Возврат "Неопределено";
КонецФункции

Функция ПолучитьСерверОзон()
	
	Возврат "api-seller.ozon.ru";
КонецФункции

Функция ПолучитьОбязательныеЗаголовкиОзон(ЛичныйКабинет)
	Заголовки = Новый Соответствие;
		
	Заголовки.Вставить("Client-Id", ОбщегоНазначения.ЗначениеРеквизитаОбъекта(ЛичныйКабинет, "Client_Id"));
	Заголовки.Вставить("Api-Key", ОбщегоНазначения.ЗначениеРеквизитаОбъекта(ЛичныйКабинет, "Api_Key"));
	Заголовки.Вставить("Content-Type", "application/json; charset=utf-8");
	
	Возврат Заголовки;
КонецФункции

#КонецОбласти

#КонецЕсли
