#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриЧтенииНаСервере(ТекущийОбъект)

	ЗаполнитьТЧКассыККМ();

	УзелУРМКСсылка 		= ПланыОбмена.ОбменСУРМК.НайтиПоРеквизиту("УРМК", ТекущийОбъект.Ссылка);

КонецПроцедуры

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	РазрешенРасширенныйРежимНастройкиОбменаУРМК = ИнтеграцияУРМКПереопределяемый.РазрешенРасширенныйРежимНастройкиОбменаУРМК();
	
	Если Не РазрешенРасширенныйРежимНастройкиОбменаУРМК Тогда
		ТекстСообщения = НСтр("ru = 'Форма не предназначена для непосредственного использования.'");
		ОбщегоНазначения.СообщитьПользователю(ТекстСообщения, , , , Отказ);
		Возврат;
	КонецЕсли;
	
	ИнтеграцияУРМКПереопределяемый.УстановитьПараметрыВыбораКассыККМ(ЭтотОбъект, "КассыККМКассаККМ");
	ИнтеграцияУРМКПереопределяемый.УстановитьПараметрыВыбораКассыККМ(ЭтотОбъект, "РаспределениеНоменклатурыКассаККМ");

КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	
    НастроитьФорму();
	
КонецПроцедуры

&НаКлиенте
Процедура ПриЗакрытии(ЗавершениеРаботы)
	
	Если Не ЗавершениеРаботы Тогда
		Оповестить("ОбновлениеОтборовНаУзле");
	КонецЕсли;	

КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовФормы

&НаСервере
Процедура ЗаполнитьТЧКассыККМ()
	
	ПустаяСсылкаКассаККМ = Метаданные.ОпределяемыеТипы.КассаККМУРМК.Тип.ПривестиЗначение();
	ПустаяСсылкаОрганизация = Метаданные.ОпределяемыеТипы.ОрганизацияУРМК.Тип.ПривестиЗначение();
	
	ОрганизацияТипРеквизитаСтрокой = ОбщегоНазначения.СтроковоеПредставлениеТипа(ТипЗнч(ПустаяСсылкаОрганизация));
	ИмяРеквизитаОрганизация = ИнтеграцияУРМКСлужебный.ИменаРеквизитовПоТипу(ПустаяСсылкаКассаККМ, Тип(ОрганизацияТипРеквизитаСтрокой));
	
	Если ИмяРеквизитаОрганизация = "" Тогда
		Возврат;
	КонецЕсли;

	Для Каждого СтрокаДанных Из Объект.КассыККМ Цикл
		СтрокаДанных.Организация = СтрокаДанных.КассаККМ[ИмяРеквизитаОрганизация];
	КонецЦикла;
	
КонецПроцедуры

&НаКлиенте
Процедура КассыККМПриИзменении(Элемент)
	ЗаполнитьТЧКассыККМ();
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовТаблицыФормыРаспределениеНоменклатуры

&НаКлиенте
Процедура ГруппыКатегорииПриИзменении(Элемент)
	
	Если Объект.РаспределениеНоменклатуры.Количество() > 0 Тогда
		Оповещение = Новый ОписаниеОповещения("ПослеВопросаОбОчисткеРаспределения", ЭтотОбъект);
		ПоказатьВопрос(Оповещение, НСтр("ru = 'Настройки распределения будут очищены. Продолжить?'"), РежимДиалогаВопрос.ДаНет);
	Иначе
		НастроитьФорму();
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура РаспределениеНоменклатурыГруппаНоменклатурыОбработкаВыбора(Элемент, ВыбранноеЗначение, СтандартнаяОбработка)
	
	НайденныеСтроки = Объект.РаспределениеНоменклатуры.НайтиСтроки(Новый Структура("ГруппаНоменклатуры", ВыбранноеЗначение));
	Если НайденныеСтроки.Количество() > 0 Тогда
		СтандартнаяОбработка = Ложь;
		ОбщегоНазначенияКлиент.СообщитьПользователю(НСтр("ru = 'Выбранная группа уже присутствует в таблице'"));
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура РаспределениеНоменклатурыКатегорияНоменклатурыОбработкаВыбора(Элемент, ВыбранноеЗначение, СтандартнаяОбработка)
	
	НайденныеСтроки = Объект.РаспределениеНоменклатуры.НайтиСтроки(Новый Структура("КатегорияНоменклатуры", ВыбранноеЗначение));
	Если НайденныеСтроки.Количество() > 0 Тогда
		СтандартнаяОбработка = Ложь;
		ОбщегоНазначенияКлиент.СообщитьПользователю(НСтр("ru = 'Выбранная категория уже присутствует в таблице'"));
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаКлиенте
Процедура НастроитьФорму()
	
	ОбщегоНазначенияКлиентСервер.УстановитьСвойствоЭлементаФормы(Элементы, "РаспределениеНоменклатурыГруппаНоменклатуры", "Видимость", Объект.ГруппыКатегории = 0);
	ОбщегоНазначенияКлиентСервер.УстановитьСвойствоЭлементаФормы(Элементы, "РаспределениеНоменклатурыКатегорияНоменклатуры", "Видимость", Объект.ГруппыКатегории = 1);
	ОбщегоНазначенияКлиентСервер.УстановитьСвойствоЭлементаФормы(Элементы, "СтраницаРаспределениеНоменклатуры", "Видимость", РазрешенРасширенныйРежимНастройкиОбменаУРМК);
	
КонецПроцедуры

&НаКлиенте
Процедура ПослеВопросаОбОчисткеРаспределения(Результат, ДополнительныеПараметры) Экспорт
	
	Если Результат = КодВозвратаДиалога.Да Тогда
		Объект.РаспределениеНоменклатуры.Очистить();
		НастроитьФорму();
	Иначе
		Объект.ГруппыКатегории = Число(Не Булево(Объект.ГруппыКатегории));
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

