
#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область ПрограммныйИнтерфейс

// Возвращает хеш настроек для переданной структуры настроек.
//
// Параметры:
//  СтруктураНастроек - Структура - структура с ключами настроек, см. СтрокаИменНастроекУчетнойЗаписи().
// 
// Возвращаемое значение:
//  ХешСумма - строковое представление хеш суммы.
//
Функция ПолучитьХешНастроек(СтруктураНастроек) Экспорт
	
	Возврат ИнтеграцияСМаркетплейсомOzonСервер.ПолучитьХешСтроки(ЗначениеВСтрокуВнутр(СтруктураНастроек));
	
КонецФункции

// Возвращает хеш настроек для учетной записи.
//
// Параметры:
//  УчетнаяЗапись - СправочникСсылка.УчетныеЗаписиМаркетплейсов - учетная запись, для которой необходимо вернуть хеш настроек.
// 
// Возвращаемое значение:
//  ХешСумма - строковое представление хеш суммы.
//
Функция ПолучитьХешНастроекПоСсылке(УчетнаяЗапись) Экспорт 
	
	Если Не ЗначениеЗаполнено(УчетнаяЗапись) Тогда 
		Возврат Неопределено;
	КонецЕсли;	
	
	СтруктураНастроек = ОбщегоНазначения.ЗначенияРеквизитовОбъекта(УчетнаяЗапись, СтрокаИменНастроекУчетнойЗаписи());
	
	СтруктураНастроек.Вставить("ВидыЦен", СтруктураНастроек.ВидыЦен.Выгрузить());
	
	Возврат ПолучитьХешНастроек(СтруктураНастроек);
	
КонецФункции

// Возвращает доступную учетную запись в случае, если она является единственной в справочнике.
//
//  В случае отсутствия записей или наличия более одной возвращается пустая ссылка.
//
// Параметры:
//  ВидМаркетплейса	 - ПеречислениеСсылка.ВидыМаркетплейсов - Вид маркетплейса для получения учетной записи.
//
// Возвращаемое значение:
//  СправочникСсылка.НастройкиИнтеграцииСМаркетплейсом - Учетная запись по-умолчанию.
//
Функция ОсновнаяУчетнаяЗапись(ВидМаркетплейса) Экспорт

	Запрос = Новый Запрос;
	Запрос.Текст =
	"ВЫБРАТЬ РАЗРЕШЕННЫЕ ПЕРВЫЕ 2
	|	УчетныеЗаписиМаркетплейсов.Ссылка КАК Ссылка
	|ИЗ
	|	Справочник.УчетныеЗаписиМаркетплейсов КАК УчетныеЗаписиМаркетплейсов
	|ГДЕ
	|	УчетныеЗаписиМаркетплейсов.ВидМаркетплейса = &ВидМаркетплейса
	|	И УчетныеЗаписиМаркетплейсов.ПометкаУдаления = ЛОЖЬ";
	Запрос.УстановитьПараметр("ВидМаркетплейса", ВидМаркетплейса);
	Результат = Запрос.Выполнить();
	Если Результат.Пустой() Тогда
		Возврат ПредопределенноеЗначение("Справочник.УчетныеЗаписиМаркетплейсов.ПустаяСсылка");
	КонецЕсли;

	Выборка = Результат.Выбрать();
	Если Выборка.Количество() = 2 Тогда
		Возврат ПредопределенноеЗначение("Справочник.УчетныеЗаписиМаркетплейсов.ПустаяСсылка");
	КонецЕсли;

	Выборка.Следующий();
	Возврат Выборка.Ссылка;

КонецФункции

// Возвращает структуру с настройками учетной записи.
//
// Параметры:
//  УчетнаяЗапись - СправочникСсылка.УчетныеЗаписиМаркетплейсов - Учетная запись для получения настроек.
// 
// Возвращаемое значение:
//  Структура - Настройки учетной записи, см. Справочники.УчетныеЗаписиМаркетплейсов.СтрокаИменНастроекУчетнойЗаписи()
//
Функция НастройкиУчетнойЗаписи(УчетнаяЗапись) Экспорт

	ЗначенияНастроек = ОбщегоНазначения.ЗначенияРеквизитовОбъекта(УчетнаяЗапись, СтрокаИменНастроекУчетнойЗаписи());

	ВидыЦен = Новый Структура;
	ОписаниеВидовЦен = ОписаниеВидовЦенУчетнойЗаписи(ЗначенияНастроек.ВидМаркетплейса);
	
	Для Каждого ОписаниеВидаЦен Из ОписаниеВидовЦен Цикл
		ВидыЦен.Вставить(ОписаниеВидаЦен.Ключ, ПредопределенноеЗначение("Справочник.ВидыЦен.ПустаяСсылка"));
	КонецЦикла;

	Если ЗначенияНастроек.ВидыЦен <> Неопределено Тогда
		Выборка = ЗначенияНастроек.ВидыЦен.Выбрать();
		Пока Выборка.Следующий() Цикл
			Если ВидыЦен.Свойство(Выборка.ИмяНастройки) Тогда
				ВидыЦен[Выборка.ИмяНастройки] = Выборка.ВидЦены;
			КонецЕсли;
		КонецЦикла;
	КонецЕсли;

	ЗначенияНастроек.ВидыЦен = ВидыЦен;

	Возврат ЗначенияНастроек;

КонецФункции

// Возвращает информацию по видам цен учетной записи.
//
// Параметры:
//  УчетнаяЗапись - СправочникСсылка.УчетныеЗаписиМаркетплейсов - учетная запись, для которой необходимо вернуть хеш настроек.
// 
// Возвращаемое значение:
//  Структура - ключом является идентификатор вида цены на маркетплейсе, значением информация по виду цены.
//
Функция ВидыЦенУчетнойЗаписи(УчетнаяЗапись) Экспорт

	ВидыЦенУчетнойЗаписи = Новый Структура;
	
	НастройкиУчетнойЗаписи = НастройкиУчетнойЗаписи(УчетнаяЗапись);
	ВидыЦен = НастройкиУчетнойЗаписи.ВидыЦен;
	ОписаниеВидовЦен = ОписаниеВидовЦенУчетнойЗаписи(НастройкиУчетнойЗаписи.ВидМаркетплейса);

	Для Каждого ДанныеВидаЦен Из ВидыЦен Цикл
		ОписаниеВидаЦен = ОбщегоНазначенияКлиентСервер.СвойствоСтруктуры(ОписаниеВидовЦен, ДанныеВидаЦен.Ключ, Неопределено);
		ТребуетсяПроверкаЗаполнения = ОбщегоНазначенияКлиентСервер.СвойствоСтруктуры(ОписаниеВидаЦен, "ПроверкаЗаполнения", Ложь);
		ПредставлениеВидаЦены = ОбщегоНазначенияКлиентСервер.СвойствоСтруктуры(ОписаниеВидаЦен, "ПредставлениеВидаЦены", "");

		СтруктураДанныхВидаЦен = Новый Структура;
		СтруктураДанныхВидаЦен.Вставить("ВидЦены", ДанныеВидаЦен.Значение);
		СтруктураДанныхВидаЦен.Вставить("ПроверкаЗаполнения", ТребуетсяПроверкаЗаполнения);
		СтруктураДанныхВидаЦен.Вставить("ПредставлениеВидаЦены", ПредставлениеВидаЦены);

		ВидыЦенУчетнойЗаписи.Вставить(ДанныеВидаЦен.Ключ, СтруктураДанныхВидаЦен);
	КонецЦикла;

	Возврат ВидыЦенУчетнойЗаписи;

КонецФункции

#Область ДляВызоваИзДругихПодсистем

// СтандартныеПодсистемы.УправлениеДоступом

// Параметры:
//   Ограничение - см. УправлениеДоступомПереопределяемый.ПриЗаполненииОграниченияДоступа.Ограничение.
//
Процедура ПриЗаполненииОграниченияДоступа(Ограничение) Экспорт
	
	Ограничение.Текст =
	"РазрешитьЧтениеИзменение
	|ГДЕ
	|	ЗначениеРазрешено(Организация)";
	
КонецПроцедуры

// Конец СтандартныеПодсистемы.УправлениеДоступом

#КонецОбласти

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

// Возвращает структуру с именами видов цен и признаком проверки заполнения цены.
//
// Возвращаемое значение:
//  Структура, где ключ - имя настройки с видом цен, значение - структура с ключами:
//								ПредставлениеВидаЦены - Строка - представление вида цены в форме настроек синхронизации,
//								ПроверкаЗаполнения - Булево - признак необходимости проверки заполнения цены.
//
Функция ОписаниеВидовЦенУчетнойЗаписи(ВидМаркетплейса)

	ОписаниеВидовЦен = Новый Структура;
	
	Если ВидМаркетплейса = ПредопределенноеЗначение("Перечисление.ВидыМаркетплейсов.МаркетплейсOzon")
		Или Не ЗначениеЗаполнено(ВидМаркетплейса) Тогда

		ТипыЦен = ИнтеграцияСМаркетплейсомOzonСервер.ТипыЦенOzon(Истина, Ложь);
		Для каждого ТипЦен Из ТипыЦен Цикл
			ДанныеВидаЦены = Новый Структура("ПредставлениеВидаЦены, ПроверкаЗаполнения",
					ТипЦен.Наименование, ТипЦен.ОбязательноеЗаполнение);
			ОписаниеВидовЦен.Вставить(ТипЦен.Идентификатор, ДанныеВидаЦены);
		КонецЦикла;
		
	КонецЕсли;

	Возврат ОписаниеВидовЦен;

КонецФункции

Функция СтрокаИменНастроекУчетнойЗаписи()
	
	СтрокаИменНастроекУчетнойЗаписи =
			"ВидМаркетплейса, Организация, ИдентификаторКлиента, ИсточникКатегории, ВалютаУчета, ВидыЦен";
	Возврат СтрокаИменНастроекУчетнойЗаписи;
	
КонецФункции

Процедура ОбработкаПолученияФормы(ВидФормы, Параметры, ВыбраннаяФорма, ДополнительнаяИнформация, СтандартнаяОбработка)
	
	Если ВидФормы = "ФормаСписка" Тогда
		ВидМаркетплейса = ИнтеграцияСМаркетплейсамиСервер.СтруктураСвойствоЗначениеПолучить( Параметры, "ВидМаркетплейса", Неопределено );
	
		ЕдинственнаяИнтеграция = ПолучитьЕдинственнуюИнтеграцию( ВидМаркетплейса );
		
		Если ЕдинственнаяИнтеграция <> Неопределено И ЗначениеЗаполнено( ВидМаркетплейса ) Тогда

			СтандартнаяОбработка = Ложь;

			Параметры.Вставить("УчетнаяЗапись", ЕдинственнаяИнтеграция);
		
			Если ВидМаркетплейса = Перечисления.ВидыМаркетплейсов.МаркетплейсOzon Тогда
				ОбработкаИмя = "МаркетплейсOzon";
			ИначеЕсли ВидМаркетплейса = Перечисления.ВидыМаркетплейсов.МаркетплейсЯндексМаркет Тогда
			    ОбработкаИмя = "МаркетплейсЯндексМаркет";
			КонецЕсли;
			
			Если ЗначениеЗаполнено( ОбработкаИмя ) Тогда
				ВыбраннаяФорма = Метаданные.Обработки[ ОбработкаИмя ].Формы.ФормаНастройки;
			КонецЕсли;
			
		КонецЕсли;
		
	КонецЕсли;
	
КонецПроцедуры

Функция ПолучитьЕдинственнуюИнтеграцию(ВидМаркетплейса)
	
	ЗапросТекст = 
	"ВЫБРАТЬ
	|	УчетныеЗаписиМаркетплейсов.Ссылка КАК Ссылка
	|ИЗ
	|	Справочник.УчетныеЗаписиМаркетплейсов КАК УчетныеЗаписиМаркетплейсов
	|ГДЕ
	|	НЕ УчетныеЗаписиМаркетплейсов.ПометкаУдаления
	|	И &УсловиеВидМаркетплейса
	|";
	
	Если ЗначениеЗаполнено( ВидМаркетплейса ) Тогда
		ЗапросТекст = СтрЗаменить( ЗапросТекст, "И &УсловиеВидМаркетплейса", "И УчетныеЗаписиМаркетплейсов.ВидМаркетплейса = &ВидМаркетплейса" );
	Иначе
		ЗапросТекст = СтрЗаменить( ЗапросТекст, "И &УсловиеВидМаркетплейса", "" );
	КонецЕсли;
	
	Запрос = Новый Запрос( ЗапросТекст );
	Запрос.УстановитьПараметр( "ВидМаркетплейса", ВидМаркетплейса );
	ЗапросВыборка = Запрос.Выполнить().Выбрать();
	
	Если ЗапросВыборка.Количество() = 0 Тогда
		Возврат Справочники.УчетныеЗаписиМаркетплейсов.ПустаяСсылка();
	ИначеЕсли ЗапросВыборка.Количество() > 1 Тогда
		Возврат Неопределено;
	КонецЕсли;
	
	ЗапросВыборка.Следующий();
	
	Возврат ЗапросВыборка.Ссылка;
	
КонецФункции

#КонецОбласти

#КонецЕсли


