#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область ПрограммныйИнтерфейс

Процедура ОбработкаПроверкиЗаполнения(Заказ, Состояние, ВариантЗавершения, ПроверяемыеРеквизиты, ВидЗаказа = Неопределено, ВидОперации = Неопределено) Экспорт
	
	Если ТипЗнч(Заказ) = Тип("ДокументСсылка.ЗаказПоставщику") Тогда
		Предмет = "ЗаказПоставщику";
	ИначеЕсли Заказ.ВидОперации = Перечисления.ВидыОперацийЗаказПокупателя.ЗаказНаряд Тогда
		Предмет = "ЗаказНаряд";
	Иначе
		Предмет = "ЗаказПокупателя";
	КонецЕсли;
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	ПроцессыСостоянийЗаказовОбработкаПроверкиЗаполнения.Ссылка КАК Ссылка,
	|	ПроцессыСостоянийЗаказовОбработкаПроверкиЗаполнения.НомерСтроки КАК НомерСтроки,
	|	ПроцессыСостоянийЗаказовОбработкаПроверкиЗаполнения.Состояние КАК Состояние,
	|	ПроцессыСостоянийЗаказовОбработкаПроверкиЗаполнения.ИмяРеквизита КАК ИмяРеквизита
	|ИЗ
	|	Справочник.ПроцессыСостоянийЗаказов.ОбработкаПроверкиЗаполнения КАК ПроцессыСостоянийЗаказовОбработкаПроверкиЗаполнения
	|ГДЕ
	|	(&ОтборПоВиду
	|				И ПроцессыСостоянийЗаказовОбработкаПроверкиЗаполнения.Ссылка.ВидЗаказа = &Вид
	|			ИЛИ НЕ &ОтборПоВиду)
	|	И ПроцессыСостоянийЗаказовОбработкаПроверкиЗаполнения.Состояние = &Состояние
	|	И ПроцессыСостоянийЗаказовОбработкаПроверкиЗаполнения.ВариантЗавершения = &ВариантЗавершения
	|	И ПроцессыСостоянийЗаказовОбработкаПроверкиЗаполнения.Ссылка.Предмет = &Предмет";
	
	Если ВидЗаказа = Неопределено Тогда
		Запрос.УстановитьПараметр("ОтборПоВиду", Истина);
	Иначе
		Запрос.УстановитьПараметр("ОтборПоВиду", Ложь);
	КонецЕсли;
	
	Запрос.УстановитьПараметр("Вид", ВидЗаказа);
	Запрос.УстановитьПараметр("Состояние", Состояние);
	Запрос.УстановитьПараметр("ВариантЗавершения", ВариантЗавершения);
	Запрос.УстановитьПараметр("Предмет", Предмет);

	ТаблицаПроверки = Запрос.Выполнить().Выгрузить();
	
	Если ТаблицаПроверки.Количество() = 0 Тогда
		Возврат;
	КонецЕсли;
	
	Для Каждого ПравилоСостояния Из ТаблицаПроверки Цикл
		ПроверяемыеРеквизиты.Добавить(ПравилоСостояния.ИмяРеквизита);
	КонецЦикла;
	
КонецПроцедуры

Процедура ОбработкаПроведения(Заказ, Отказ) Экспорт
	
	Если (ТипЗнч(Заказ) = Тип("ДокументСсылка.ЗаказПокупателя") И Заказ.СостояниеЗаказа <> Справочники.СостоянияЗаказовПокупателей.Завершен)
		ИЛИ (ТипЗнч(Заказ) = Тип("ДокументСсылка.ЗаказПоставщику") И Заказ.СостояниеЗаказа <> Справочники.СостоянияЗаказовПоставщикам.Завершен) Тогда
		Возврат;
	КонецЕсли;
	
	Если ТипЗнч(Заказ) = Тип("ДокументСсылка.ЗаказПоставщику") Тогда
		Предмет = "ЗаказПоставщику";
	ИначеЕсли Заказ.ВидОперации = Перечисления.ВидыОперацийЗаказПокупателя.ЗаказНаряд Тогда
		Предмет = "ЗаказНаряд";
	Иначе
		Предмет = "ЗаказПокупателя";
	КонецЕсли;
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	ВидыЗаказовПокупателейОбработкаПроведения.Ссылка КАК Ссылка,
	|	ВидыЗаказовПокупателейОбработкаПроведения.НомерСтроки КАК НомерСтроки,
	|	ВидыЗаказовПокупателейОбработкаПроведения.Состояние КАК Состояние,
	|	ВидыЗаказовПокупателейОбработкаПроведения.ВариантЗавершения КАК ВариантЗавершения,
	|	ВидыЗаказовПокупателейОбработкаПроведения.Свойство КАК Свойство
	|ИЗ
	|	Справочник.ПроцессыСостоянийЗаказов.ОбработкаПроведения КАК ВидыЗаказовПокупателейОбработкаПроведения
	|ГДЕ
	|	(&ОтборПоВиду
	|				И ВидыЗаказовПокупателейОбработкаПроведения.Ссылка.ВидЗаказа = &Вид
	|			ИЛИ НЕ &ОтборПоВиду)
	|	И ВидыЗаказовПокупателейОбработкаПроведения.Состояние = &Состояние
	|	И ВидыЗаказовПокупателейОбработкаПроведения.ВариантЗавершения = &ВариантЗавершения
	|	И ВидыЗаказовПокупателейОбработкаПроведения.Ссылка.Предмет = &Предмет";
	
	Если ТипЗнч(Заказ) = Тип("ДокументСсылка.ЗаказПоставщику") Тогда
		Запрос.УстановитьПараметр("ОтборПоВиду", Ложь);
		Запрос.УстановитьПараметр("Вид", Справочники.ВидыЗаказовПокупателей.ПустаяСсылка());
	Иначе
		Запрос.УстановитьПараметр("ОтборПоВиду", Истина);
		Запрос.УстановитьПараметр("Вид", Заказ.ВидЗаказа);
	КонецЕсли;
	
	Запрос.УстановитьПараметр("Предмет", Предмет);
	Запрос.УстановитьПараметр("Состояние", Заказ.СостояниеЗаказа);
	Запрос.УстановитьПараметр("ВариантЗавершения", Заказ.ВариантЗавершения);
	
	ТаблицаПроверки = Запрос.Выполнить().Выгрузить();
	
	Если ТаблицаПроверки.Количество() = 0 Тогда
		Возврат;
	КонецЕсли;
	
	Для Каждого Свойство Из ТаблицаПроверки Цикл
		Если Свойство.Свойство = "ПолностьюОтгружен" Тогда
			ПроверитьОтгрузкуЗаказа(Заказ, Отказ);
		КонецЕсли;
	КонецЦикла;
	
КонецПроцедуры

Процедура ПроверитьОтгрузкуЗаказа(Заказ, Отказ)
	
	Если ТипЗнч(Заказ) = Тип("ДокументСсылка.ЗаказПокупателя") Тогда 
		
		Запрос = Новый Запрос;
		Запрос.Текст = 
		"ВЫБРАТЬ РАЗРЕШЕННЫЕ
		|	ЗаказыПокупателейОстаткиИОбороты.Номенклатура КАК Номенклатура,
		|	ВЫБОР
		|		КОГДА ЗаказыПокупателейОстаткиИОбороты.Характеристика = ЗНАЧЕНИЕ(Справочник.ХарактеристикиНоменклатуры.ПустаяСсылка)
		|			ТОГДА NULL
		|		ИНАЧЕ ЗаказыПокупателейОстаткиИОбороты.Характеристика
		|	КОНЕЦ КАК Характеристика,
		|	ЗаказыПокупателейОстаткиИОбороты.КоличествоПриход КАК Заказано,
		|	ЗаказыПокупателейОстаткиИОбороты.КоличествоРасход КАК Отгружено,
		|	ЗаказыПокупателейОстаткиИОбороты.КоличествоКонечныйОстаток КАК КоличествоКонечныйОстаток
		|ИЗ
		|	РегистрНакопления.ЗаказыПокупателей.ОстаткиИОбороты(, , , , ЗаказПокупателя = &Заказ) КАК ЗаказыПокупателейОстаткиИОбороты
		|ГДЕ
		|	ЗаказыПокупателейОстаткиИОбороты.КоличествоКонечныйОстаток > 0";
		
	Иначе
		Запрос = Новый Запрос;
		Запрос.Текст = 
		"ВЫБРАТЬ РАЗРЕШЕННЫЕ
		|	ЗаказыПоставщикамОстаткиИОбороты.Номенклатура КАК Номенклатура,
		|	ВЫБОР
		|		КОГДА ЗаказыПоставщикамОстаткиИОбороты.Характеристика = ЗНАЧЕНИЕ(Справочник.ХарактеристикиНоменклатуры.ПустаяСсылка)
		|			ТОГДА NULL
		|		ИНАЧЕ ЗаказыПоставщикамОстаткиИОбороты.Характеристика
		|	КОНЕЦ КАК Характеристика,
		|	ЗаказыПоставщикамОстаткиИОбороты.КоличествоПриход КАК Заказано,
		|	ЗаказыПоставщикамОстаткиИОбороты.КоличествоРасход КАК Получено,
		|	ЗаказыПоставщикамОстаткиИОбороты.КоличествоКонечныйОстаток КАК КоличествоКонечныйОстаток
		|ИЗ
		|	РегистрНакопления.ЗаказыПоставщикам.ОстаткиИОбороты(, , , , ЗаказПоставщику = &Заказ) КАК ЗаказыПоставщикамОстаткиИОбороты
		|ГДЕ
		|	ЗаказыПоставщикамОстаткиИОбороты.КоличествоКонечныйОстаток > 0";
	КонецЕсли;
		
	Запрос.УстановитьПараметр("Заказ", Заказ.Ссылка);
	Результат = Запрос.Выполнить().Выгрузить();
	
	Если Результат.Количество() = 0 Тогда
		Возврат;
	КонецЕсли;
	
	Если ТипЗнч(Заказ) = Тип("ДокументСсылка.ЗаказПокупателя") Тогда
		ТекстСообщенияЗаголовок = НСтр("ru = 'Ошибка:
		|По заказу есть неотгруженные позиции'");
		ШаблонСообщения = НСтр("ru = 'Номенклатура: %1,
		|неотгружено: %2'");
		ТекстСообщенияПодвал = НСтр("ru = 'Заказ можно завершить только с полностью отгруженными/отмененными позициями'");
		
		ОбщегоНазначения.СообщитьПользователю(ТекстСообщенияЗаголовок, Заказ, , , Отказ);
	Иначе
		ТекстСообщенияЗаголовок = НСтр("ru = 'Ошибка:
		|По заказу есть неполученные позиции'");
		ШаблонСообщения = НСтр("ru = 'Номенклатура: %1,
		|осталось получить: %2'");
		ТекстСообщенияПодвал = НСтр("ru = 'Заказ можно завершить только с полностью полученными/отмененными позициями'");
		
		ОбщегоНазначения.СообщитьПользователю(ТекстСообщенияЗаголовок, Заказ, , , Отказ);
	КонецЕсли;

	Для Каждого СтрокаРезультата Из Результат Цикл
		Отказ = Истина; 
		Если ЗначениеЗаполнено(СтрокаРезультата.Характеристика) Тогда
			ПредставлениеНоменклатуры = СтрШаблон(НСтр("ru = '%1 %2'"), СтрокаРезультата.Номенклатура, СтрокаРезультата.Характеристика);
		Иначе
			ПредставлениеНоменклатуры = Строка(СтрокаРезультата.Номенклатура);
		КонецЕсли;
		
		ТекстСообщения = СтрШаблон(ШаблонСообщения, ПредставлениеНоменклатуры, СтрокаРезультата.КоличествоКонечныйОстаток);
		
		ОбщегоНазначения.СообщитьПользователю(ТекстСообщения, Заказ, , , Отказ);
	КонецЦикла;
	
	ОбщегоНазначения.СообщитьПользователю(ТекстСообщенияПодвал, Заказ, , , Отказ); 
	
КонецПроцедуры

Процедура УстановитьПризнакОбязательногоЗаполненияПоля(Элементы, ИмяРеквизита, Заказ) Экспорт
	
	Если ТипЗнч(Заказ) = Тип("ДокументСсылка.ЗаказПоставщику") Тогда
		Предмет = "ЗаказПоставщику";
	ИначеЕсли Заказ.ВидОперации = Перечисления.ВидыОперацийЗаказПокупателя.ЗаказНаряд Тогда
		Предмет = "ЗаказНаряд";
	Иначе
		Предмет = "ЗаказПокупателя";
	КонецЕсли;
	
	ИменаПолейПроверки = ИменаПолейПроверки(Предмет, ИмяРеквизита);
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	ПроцессыСостоянийЗаказов.Ссылка КАК Ссылка,
	|	ПроцессыОбработкаПроверкиЗаполнения.Состояние КАК Состояние,
	|	ПроцессыОбработкаПроверкиЗаполнения.ВариантЗавершения КАК ВариантЗавершения
	|ИЗ
	|	Справочник.ПроцессыСостоянийЗаказов КАК ПроцессыСостоянийЗаказов
	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.ПроцессыСостоянийЗаказов.ОбработкаПроверкиЗаполнения КАК ПроцессыОбработкаПроверкиЗаполнения
	|		ПО ПроцессыСостоянийЗаказов.Ссылка = ПроцессыОбработкаПроверкиЗаполнения.Ссылка
	|ГДЕ
	|	(&ОтборПоВиду
	|				И ПроцессыОбработкаПроверкиЗаполнения.Ссылка.ВидЗаказа = &Вид
	|			ИЛИ НЕ &ОтборПоВиду)
	|	И ПроцессыСостоянийЗаказов.Предмет = &Предмет
	|	И ПроцессыОбработкаПроверкиЗаполнения.ИмяРеквизита = &ИмяРеквизита";
	
	
	Если ТипЗнч(Заказ) = Тип("ДокументСсылка.ЗаказПоставщику") Тогда
		Запрос.УстановитьПараметр("ОтборПоВиду", Ложь);
		Запрос.УстановитьПараметр("Вид", Справочники.ВидыЗаказовПокупателей.ПустаяСсылка());
	Иначе
		Запрос.УстановитьПараметр("ОтборПоВиду", Истина);
		Запрос.УстановитьПараметр("Вид", Заказ.ВидЗаказа);
	КонецЕсли;
	
	Запрос.УстановитьПараметр("ИмяРеквизита", ИмяРеквизита);
	Запрос.УстановитьПараметр("Предмет", Предмет);
	
	ТаблицаСостоянийДляПроверки = Запрос.Выполнить().Выгрузить();
	СтруктураПоиска = Новый Структура("Состояние, ВариантЗавершения", Заказ.СостояниеЗаказа, Заказ.ВариантЗавершения);
	
	ПризнакОбязательностиЗаполнения = ТаблицаСостоянийДляПроверки.НайтиСтроки(СтруктураПоиска);
	ТребуетсяПроверкаОбязательностиЗаполнения = ПризнакОбязательностиЗаполнения.Количество() > 0;
		
	Для Каждого ИмяЭлемента Из ИменаПолейПроверки Цикл
		
		Элемент = Элементы.Найти(ИмяЭлемента);
		
		Если Элемент = Неопределено Тогда
			Возврат;
		КонецЕсли;
		
		ОбщегоНазначенияКлиентСервер.УстановитьСвойствоЭлементаФормы(Элементы, Элемент.Имя, "АвтоОтметкаНезаполненного", ТребуетсяПроверкаОбязательностиЗаполнения);
	КонецЦикла;
	
КонецПроцедуры

Функция ИменаПолейПроверки(Предмет, ИмяРеквизита)
	
	Соответствие = Новый Соответствие;
	
	Если Предмет = "ЗаказПокупателя" ИЛИ Предмет = "ЗаказПоставщику" Тогда
		
		МассивИмен = Новый Массив;
		МассивИмен.Добавить("ЗапасыПричинаОтмены");
		МассивИмен.Добавить("ОтмененныеЗапасыПричинаОтмены");
		Соответствие.Вставить("ОтмененныеЗапасы.ПричинаОтмены", МассивИмен);
		
	Иначе
		
		МассивИмен = Новый Массив;
		МассивИмен.Добавить("ЗапасыПричинаОтмены");
		МассивИмен.Добавить("ОтмененныеЗапасыПричинаОтмены"); 
		МассивИмен.Добавить("РаботыПричинаОтмены");
		
		Соответствие.Вставить("ОтмененныеЗапасы.ПричинаОтмены", МассивИмен);
		
	КонецЕсли;
	
	Возврат Соответствие[ИмяРеквизита];
КонецФункции

#КонецОбласти

#КонецЕсли

