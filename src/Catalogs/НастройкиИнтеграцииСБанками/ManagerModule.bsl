#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда	

#Область ПрограммныйИнтерфейс

// Возвращает Истина, если в базе есть хотя бы одна действующая настройка интеграции.
// 
// Возвращаемое значение:
//   Булево - признак действующей настройка интеграции.
//
Функция ИнтеграцияВИнформационнойБазеВключена() Экспорт
	
	Запрос = Новый Запрос;
	Запрос.Текст =
	"ВЫБРАТЬ ПЕРВЫЕ 1
	|	НастройкиИнтеграцииСБанками.Ссылка КАК Ссылка
	|ИЗ
	|	Справочник.НастройкиИнтеграцииСБанками КАК НастройкиИнтеграцииСБанками
	|ГДЕ
	|	НЕ НастройкиИнтеграцииСБанками.ПометкаУдаления";
	
	Возврат НЕ Запрос.Выполнить().Пустой();
	
КонецФункции

// Возвращает префикс информационной базы для платежных поручений из банка.
//
// Параметры:
//  Банк - СправочникСсылка.Банки - Банк, для которого нужно определить префикс.
//
// Возвращаемое значение:
//   Строка - префикс информационной базы для платежных поручений.
//
Функция ПрефиксБанкаИнтеграции(Банк) Экспорт
	
	Префикс = "";
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("Банк", Банк);
	Запрос.Текст =
	"ВЫБРАТЬ РАЗЛИЧНЫЕ ПЕРВЫЕ 1
	|	НастройкиИнтеграцииСБанкамиБанки.Ссылка.Префикс КАК Префикс
	|ИЗ
	|	Справочник.НастройкиИнтеграцииСБанками.Банки КАК НастройкиИнтеграцииСБанкамиБанки
	|ГДЕ
	|	НастройкиИнтеграцииСБанкамиБанки.Банк = &Банк
	|	И НЕ НастройкиИнтеграцииСБанкамиБанки.Ссылка.ПометкаУдаления";
	
	УстановитьПривилегированныйРежим(Истина);
	Выборка = Запрос.Выполнить().Выбрать();
	Если Выборка.Следующий() Тогда
		Префикс = Выборка.Префикс;
	КонецЕсли;
	
	Возврат Префикс;
	
КонецФункции

// Возвращает Истина, если для расчетного счета включена интеграция.
//
// Параметры:
//  СчетОрганизации	 - СправочникСсылка.БанковскиеСчета - Ссылка на расчетный счет организации.
// 
// Возвращаемое значение:
//   Булево - признак включенной интеграции.
//
Функция ИнтеграцияВключена(СчетОрганизации) Экспорт
	
	Если НЕ ЗначениеЗаполнено(СчетОрганизации) Тогда
		Возврат Ложь;
	КонецЕсли;
	
	Возврат ЗначениеЗаполнено(НастройкаИнтеграцииБанковскогоСчета(СчетОрганизации));
	
КонецФункции

// Возвращает настройку интеграции для банковского счета организации. Если настройки нет - возвращает Неопределено.
//
// Параметры:
//  СчетОрганизации - СправочникСсылка.БанковскиеСчета - Ссылка на банковский счет,
//		для которого нужно определить интеграцию.
// 
// Возвращаемое значение:
//   СправочникСсылка.НастройкиИнтеграцииСБанками, Неопределено - настройка интеграции для банковского счета
//
Функция НастройкаИнтеграцииБанковскогоСчета(СчетОрганизации) Экспорт
	
	Если Не ЗначениеЗаполнено(СчетОрганизации) Тогда
		Возврат Неопределено;
	КонецЕсли;
	
	Запрос = Новый Запрос();
	Запрос.Параметры.Вставить("БанковскийСчет", СчетОрганизации);
	Запрос.Текст =
	"ВЫБРАТЬ
	|	БанковскиеСчетаИнтеграцииСБанком.НастройкаИнтеграции КАК НастройкаИнтеграции
	|ИЗ
	|	РегистрСведений.БанковскиеСчетаИнтеграцииСБанком КАК БанковскиеСчетаИнтеграцииСБанком
	|ГДЕ
	|	БанковскиеСчетаИнтеграцииСБанком.БанковскийСчет = &БанковскийСчет";
	
	Выборка = Запрос.Выполнить().Выбрать();
	Если Выборка.Следующий() Тогда
		Возврат Выборка.НастройкаИнтеграции;
	Иначе
		Возврат Неопределено;
	КонецЕсли;
	
КонецФункции

// Возвращает префикс информационной базы для Настройки интеграции с банками.
//
// Возвращаемое значение:
//   Строка - префикс информационной базы для платежных поручений.
//
Функция НовыйПрефикс() Экспорт
	
	Результат = "";
	
	ВсеПрефиксыИБ = ВсеПрефиксыИБ();
	СтрокаЛатинскихБукв = "ABCDEFGHIJKLMNOPQRSTUVWXYZ";
	
	ПрефиксСгенерирован = Ложь;
	Для КодЦифры = 48 По 57 Цикл // от 0 до 9
		Символ1 = Символ(КодЦифры);
		Для Счетчик = 1 По СтрДлина(СтрокаЛатинскихБукв) Цикл
			Символ2 = Сред(СтрокаЛатинскихБукв, Счетчик, 1); // от A до Z
			Префикс = Символ1 + Символ2;
			Если ВсеПрефиксыИБ.Найти(Префикс) = Неопределено Тогда
				Результат = Префикс;
				ПрефиксСгенерирован = Истина;
				Прервать;
			КонецЕсли;
		КонецЦикла;
		
		Если ПрефиксСгенерирован Тогда
			Прервать;
		КонецЕсли;
	КонецЦикла;
	
	Если Не ПрефиксСгенерирован Тогда
		ВызватьИсключение НСтр("ru = 'Не удалось установить префикс для настройки интеграции'");
	КонецЕсли;
	
	Возврат Результат;
	
КонецФункции

#КонецОбласти

#Область СлужебныйПрограммныйИнтерфейс

Функция ВсеПрефиксы() Экспорт
	
	Запрос = Новый Запрос;
	Запрос.Текст =
	"ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	НастройкиИнтеграцииСБанками.Префикс КАК Префикс
	|ИЗ
	|	Справочник.НастройкиИнтеграцииСБанками КАК НастройкиИнтеграцииСБанками
	|ГДЕ
	|	НастройкиИнтеграцииСБанками.Префикс <> """"";
	
	ВсеПрефиксы = Запрос.Выполнить().Выгрузить().ВыгрузитьКолонку("Префикс");
	
	Возврат ВсеПрефиксы;
	
КонецФункции

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

Функция ВсеПрефиксыИБ()
	
	ПрефиксИнформационнойБазы = "";
	ПрефиксацияОбъектовСобытия.ПриОпределенииПрефиксаИнформационнойБазы(ПрефиксИнформационнойБазы);
	ВсеПрефиксы = ОбщегоНазначенияКлиентСервер.ЗначениеВМассиве(ПрефиксИнформационнойБазы);
	
	ОбщегоНазначенияКлиентСервер.ДополнитьМассив(
		ВсеПрефиксы,
		ВсеПрефиксы(),
		Истина);
	
	//ОбщегоНазначенияКлиентСервер.ДополнитьМассив(
	//	ВсеПрефиксы,
	//	РегистрыСведений.ПрефиксыИнформационныхБаз.ВсеПрефиксы(),
	//	Истина);
	
	Возврат ВсеПрефиксы;
	
КонецФункции

#КонецОбласти

#КонецЕсли	
