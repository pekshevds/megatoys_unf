
#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	Перем ПолныйПутьОбъектЗагрузки;

	Если Не Параметры.Свойство("ОбъектЗагрузки", ПолныйПутьОбъектЗагрузки) Тогда

		ВызватьИсключение НСтр("ru ='Самостоятельное использование формы не предусмотрено.'");

	КонецЕсли;

	КэшЗначений = Новый Структура;
	КэшЗначений.Вставить("ВыбранныеПоля", Неопределено);
	КэшЗначений.Вставить("ТекущийПользователь", Пользователи.АвторизованныйПользователь());
	КэшЗначений.Вставить("ПолныйПутьОбъектЗагрузки", ПолныйПутьОбъектЗагрузки);

	ОписаниеОбъектаЗагрузки = ЗагрузкаДанныхИзВнешнегоИсточника.ОбъектЗагрузкиПоПолномуИмени(ПолныйПутьОбъектЗагрузки);
	КэшЗначений.Вставить("ОбъектЗагрузки", ОписаниеОбъектаЗагрузки.ОбъектЗагрузки);
	КэшЗначений.Вставить("ИмяТабличнойЧасти", ОписаниеОбъектаЗагрузки.ИмяТабличнойЧасти);

	Параметры.Свойство("ВыбранныеПоля", КэшЗначений.ВыбранныеПоля);

	УстановитьОтборы();

	УстановитьОтборНедействительныеСоответствия(ЭтотОбъект);

	УстановитьУсловноеОформление();
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура Создать(Команда)
	
	ДанныеЗаполнения = Новый Структура;
	ДанныеЗаполнения.Вставить("ВыбранныеПоля", КэшЗначений.ВыбранныеПоля);
	ДанныеЗаполнения.Вставить("Пользователь", КэшЗначений.ТекущийПользователь);
	ДанныеЗаполнения.Вставить("ПолныйПутьОбъектЗагрузки", КэшЗначений.ПолныйПутьОбъектЗагрузки);
	ДанныеЗаполнения.Вставить("ОбъектЗагрузки", КэшЗначений.ОбъектЗагрузки);
	ДанныеЗаполнения.Вставить("ИмяТабличнойЧасти", КэшЗначений.ИмяТабличнойЧасти);
	
	ПараметрыОткрытия = Новый Структура;
	ПараметрыОткрытия.Вставить("ЗначенияЗаполнения", ДанныеЗаполнения);
	
	ОткрытьФорму("Справочник.СоответствиеПолейЗагрузкиДанныхИзВнешнегоИсточника.ФормаОбъекта", ПараметрыОткрытия, ЭтотОбъект);
	
КонецПроцедуры

&НаКлиенте
Процедура ПоказыватьНедействительные(Команда)
	
	Элементы.ПоказыватьНедействительные.Пометка = Не Элементы.ПоказыватьНедействительные.Пометка;
	
	УстановитьОтборНедействительныеСоответствия(ЭтотОбъект);
	
КонецПроцедуры

&НаКлиенте
Процедура СоздатьШаблоныПоУмолчанию(Команда)
	
	СоздатьШаблоныПоУмолчаниюНаСервере();
	Элементы.Список.Обновить();
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаСервере
Процедура УстановитьОтборы()
	
	Список.Отбор.Элементы.Очистить();
	
	МассивПользователей = Новый Массив;
	МассивПользователей.Добавить(КэшЗначений.ТекущийПользователь);
	МассивПользователей.Добавить(Справочники.Пользователи.ПустаяСсылка());
	ОбщегоНазначенияКлиентСервер.УстановитьЭлементОтбора(Список.Отбор, "Пользователь",
		МассивПользователей, ВидСравненияКомпоновкиДанных.ВСписке, НСтр("ru ='Пользователь'"), Истина,
		РежимОтображенияЭлементаНастройкиКомпоновкиДанных.Недоступный);
		
	ОбщегоНазначенияКлиентСервер.УстановитьЭлементОтбора(Список.Отбор, "ОбъектЗагрузки",
		КэшЗначений.ОбъектЗагрузки,		ВидСравненияКомпоновкиДанных.Равно, 
		НСтр("ru ='Объект загрузки'"), Истина, РежимОтображенияЭлементаНастройкиКомпоновкиДанных.Недоступный);
	
	ОбщегоНазначенияКлиентСервер.УстановитьЭлементОтбора(Список.Отбор, "ИмяТабличнойЧасти",
		КэшЗначений.ИмяТабличнойЧасти,		ВидСравненияКомпоновкиДанных.Равно, 
		НСтр("ru ='Имя табличной части'"), Истина, РежимОтображенияЭлементаНастройкиКомпоновкиДанных.Недоступный);
	
КонецПроцедуры

&НаКлиентеНаСервереБезКонтекста
Процедура УстановитьОтборНедействительныеСоответствия(Форма)
	
	ОбщегоНазначенияКлиентСервер.УстановитьЭлементОтбораДинамическогоСписка(
		Форма.Список,
		"Недействителен",
		Ложь,
		,
		,
		Не Форма.Элементы.ПоказыватьНедействительные.Пометка);
	
КонецПроцедуры

&НаСервере
Процедура УстановитьУсловноеОформление()
	
	// Недействительные отображаются серым
	НовоеУсловноеОформление = Список.КомпоновщикНастроек.ФиксированныеНастройки.УсловноеОформление.Элементы.Добавить();
	
	Оформление = НовоеУсловноеОформление.Оформление.Элементы.Найти("ЦветТекста");
	Оформление.Значение 		= ЦветаСтиля.ТекстЗапрещеннойЯчейкиЦвет;
	Оформление.Использование 	= Истина;
	
	Отбор = НовоеУсловноеОформление.Отбор.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));
	Отбор.ВидСравнения 		= ВидСравненияКомпоновкиДанных.Равно;
	Отбор.Использование 	= Истина;
	Отбор.ЛевоеЗначение 	= Новый ПолеКомпоновкиДанных("Недействителен");
	Отбор.ПравоеЗначение 	= Истина;
	
	// Настройки с общей доступностью
	НовоеУсловноеОформление = УсловноеОформление.Элементы.Добавить();
	РаботаСФормой.ДобавитьЭлементОтбораКомпоновкиДанных(НовоеУсловноеОформление.Отбор, "Список.Пользователь",
		Справочники.Пользователи.ПустаяСсылка(), ВидСравненияКомпоновкиДанных.Равно);
	РаботаСФормой.ДобавитьОформляемыеПоля(НовоеУсловноеОформление, "Пользователь");
	РаботаСФормой.ДобавитьЭлементУсловногоОформления(НовоеУсловноеОформление, "Текст", НСтр("ru='Всем пользователям'"));
	РаботаСФормой.ДобавитьЭлементУсловногоОформления(НовоеУсловноеОформление, "ЦветТекста",
		ЦветаСтиля.ТекстЗапрещеннойЯчейкиЦвет);
	
КонецПроцедуры

&НаСервереБезКонтекста
Процедура СоздатьШаблоныПоУмолчаниюНаСервере()
	
	ИдентификаторOzonПозаказный 
		= Справочники.СоответствиеПолейЗагрузкиДанныхИзВнешнегоИсточника.ИдентификаторOzonПозаказный();
		
	ИдентификаторOzonСводный
		= Справочники.СоответствиеПолейЗагрузкиДанныхИзВнешнегоИсточника.ИдентификаторOzonСводный();
		
	ИдентификаторWildberriesДетальный
		= Справочники.СоответствиеПолейЗагрузкиДанныхИзВнешнегоИсточника.ИдентификаторWildberriesДетальный();
		
	ИдентификаторWildberriesУведомлениеОВыкупе
		= Справочники.СоответствиеПолейЗагрузкиДанныхИзВнешнегоИсточника.ИдентификаторWildberriesУведомлениеОВыкупе();
		
	
	ЭлементOzonПозаказный = Справочники.СоответствиеПолейЗагрузкиДанныхИзВнешнегоИсточника
		.НайтиПоИдентификаторуПоставляемойНастройки(ИдентификаторOzonПозаказный, Ложь);
		
	ЭлементOzonСводный = Справочники.СоответствиеПолейЗагрузкиДанныхИзВнешнегоИсточника
		.НайтиПоИдентификаторуПоставляемойНастройки(ИдентификаторOzonСводный, Ложь);
		
	ЭлементWildberriesДетальный = Справочники.СоответствиеПолейЗагрузкиДанныхИзВнешнегоИсточника
		.НайтиПоИдентификаторуПоставляемойНастройки(ИдентификаторWildberriesДетальный, Ложь);
		
	ЭлементWildberriesУведомлениеОВыкупе = Справочники.СоответствиеПолейЗагрузкиДанныхИзВнешнегоИсточника
		.НайтиПоИдентификаторуПоставляемойНастройки(ИдентификаторWildberriesУведомлениеОВыкупе, Ложь);
		
	Если Не ЗначениеЗаполнено(ЭлементOzonПозаказный) 
		И Не ЗначениеЗаполнено(ЭлементOzonСводный) 
		И Не ЗначениеЗаполнено(ЭлементWildberriesДетальный) 
		И Не ЗначениеЗаполнено(ЭлементWildberriesУведомлениеОВыкупе) Тогда
		
		ЗаполнитьСоответствияПолейЗагрузкиИзВнешнегоИсточника(Новый Структура("ОбработкаЗавершена"));
		
	Иначе
		
		ОбщегоНазначения.СообщитьПользователю(НСтр("ru='Удалите существующие настройки для создания новых'"));
		
	КонецЕсли;
	
КонецПроцедуры 

&НаСервереБезКонтекста
Процедура ЗаполнитьСоответствияПолейЗагрузкиИзВнешнегоИсточника(ПараметрыОбработчика)
	
	МенеджерСправочника = Справочники.СоответствиеПолейЗагрузкиДанныхИзВнешнегоИсточника;
	ВерсияПоставляемойНастройки = МенеджерСправочника.ВерсияПоставляемойНастройки();
	
	ЕстьОшибки = Ложь;
	
	НачатьТранзакцию();
	Попытка
		// Wildberries уведомление о выкупе
		ИдентификаторWildberries = МенеджерСправочника.ИдентификаторWildberriesУведомлениеОВыкупе();
		ПоставляемаяНастройка = МенеджерСправочника.ПоставляемаяНастройкаПоИдентификатору(
		ИдентификаторWildberries).Настройка;
		НайденЭлемент = МенеджерСправочника.НайтиПоИдентификаторуПоставляемойНастройки(ИдентификаторWildberries);
		Если НайденЭлемент.Пустая() Тогда
			ОбъектСправочника = МенеджерСправочника.СоздатьЭлемент();
			ОбъектСправочника.ПоставляемаяНастройка = ПоставляемаяНастройка;
			ОбъектСправочника.ИдентификаторПоставляемогоЭлемента = ИдентификаторWildberries;
		Иначе
			ОбъектСправочника = НайденЭлемент.ПолучитьОбъект();
			ОбъектСправочника.Заблокировать();
		КонецЕсли;
		
		ОбъектСправочника.Наименование = НСтр("ru='Wildberries. Уведомление о выкупе'");
		ПолныйПутьОбъектаЗагрузки = "Документ.ОтчетКомиссионера.ТабличнаяЧасть.Запасы";
		ОписаниеОбъектаЗагрузки = ЗагрузкаДанныхИзВнешнегоИсточника.ОбъектЗагрузкиПоПолномуИмени(
		ПолныйПутьОбъектаЗагрузки);
		ОбъектСправочника.ОбъектЗагрузки = ОписаниеОбъектаЗагрузки.ОбъектЗагрузки;
		ОбъектСправочника.ИмяТабличнойЧасти = ОписаниеОбъектаЗагрузки.ИмяТабличнойЧасти;
		ОбъектСправочника.ЗаполнитьНастройкиПолей(ПоставляемаяНастройка);
		ОбъектСправочника.ПоставляемаяНастройка = ПоставляемаяНастройка;
		ОбъектСправочника.ВерсияПоставляемойНастройки = ВерсияПоставляемойНастройки;
		ОбъектСправочника.Записать();
		
		// Wildberries детальный
		ИдентификаторWildberries = МенеджерСправочника.ИдентификаторWildberriesДетальный();
		ПоставляемаяНастройка = МенеджерСправочника.ПоставляемаяНастройкаПоИдентификатору(
		ИдентификаторWildberries).Настройка;
		НайденЭлемент = МенеджерСправочника.НайтиПоИдентификаторуПоставляемойНастройки(ИдентификаторWildberries);
		Если НайденЭлемент.Пустая() Тогда
			ОбъектСправочника = МенеджерСправочника.СоздатьЭлемент();
			ОбъектСправочника.ПоставляемаяНастройка = ПоставляемаяНастройка;
			ОбъектСправочника.ИдентификаторПоставляемогоЭлемента = ИдентификаторWildberries;
		Иначе
			ОбъектСправочника = НайденЭлемент.ПолучитьОбъект();
			ОбъектСправочника.Заблокировать();
		КонецЕсли;
		
		ОбъектСправочника.Наименование = НСтр("ru='Wildberries. Детальный отчет о продажах'");
		ПолныйПутьОбъектаЗагрузки = "Документ.ОтчетКомиссионера.ТабличнаяЧасть.Запасы";
		ОписаниеОбъектаЗагрузки = ЗагрузкаДанныхИзВнешнегоИсточника.ОбъектЗагрузкиПоПолномуИмени(
		ПолныйПутьОбъектаЗагрузки);
		ОбъектСправочника.ОбъектЗагрузки = ОписаниеОбъектаЗагрузки.ОбъектЗагрузки;
		ОбъектСправочника.ИмяТабличнойЧасти = ОписаниеОбъектаЗагрузки.ИмяТабличнойЧасти;
		ОбъектСправочника.ЗаполнитьНастройкиПолей(ПоставляемаяНастройка);
		ОбъектСправочника.ПоставляемаяНастройка = ПоставляемаяНастройка;
		ОбъектСправочника.ВерсияПоставляемойНастройки = ВерсияПоставляемойНастройки;
		ОбъектСправочника.Записать();
		
		// Ozon позаказный
		ИдентификаторOzon = МенеджерСправочника.ИдентификаторOzonПозаказный();
		ПоставляемаяНастройка = МенеджерСправочника.ПоставляемаяНастройкаПоИдентификатору(ИдентификаторOzon).Настройка;
		НайденЭлемент = МенеджерСправочника.НайтиПоИдентификаторуПоставляемойНастройки(ИдентификаторOzon);
		Если НайденЭлемент.Пустая() Тогда
			ОбъектСправочника = МенеджерСправочника.СоздатьЭлемент();
			ОбъектСправочника.ПоставляемаяНастройка = ПоставляемаяНастройка;
			ОбъектСправочника.ИдентификаторПоставляемогоЭлемента = ИдентификаторOzon;
		Иначе
			ОбъектСправочника = НайденЭлемент.ПолучитьОбъект();
			ОбъектСправочника.Заблокировать();
		КонецЕсли;
		
		ОбъектСправочника.Наименование = НСтр("ru='Ozon. Отчет о продажах позаказный'");
		ПолныйПутьОбъектаЗагрузки = "Документ.ОтчетКомиссионера.ТабличнаяЧасть.Запасы";
		ОписаниеОбъектаЗагрузки = ЗагрузкаДанныхИзВнешнегоИсточника.ОбъектЗагрузкиПоПолномуИмени(
		ПолныйПутьОбъектаЗагрузки);
		ОбъектСправочника.ОбъектЗагрузки = ОписаниеОбъектаЗагрузки.ОбъектЗагрузки;
		ОбъектСправочника.ИмяТабличнойЧасти = ОписаниеОбъектаЗагрузки.ИмяТабличнойЧасти;
		ОбъектСправочника.ЗаполнитьНастройкиПолей(ПоставляемаяНастройка);
		ОбъектСправочника.ПоставляемаяНастройка = ПоставляемаяНастройка;
		ОбъектСправочника.ВерсияПоставляемойНастройки = ВерсияПоставляемойНастройки;
		ОбъектСправочника.Записать();
		
		// Ozon сводный
		ИдентификаторOzon = МенеджерСправочника.ИдентификаторOzonСводный();
		ПоставляемаяНастройка = МенеджерСправочника.ПоставляемаяНастройкаПоИдентификатору(ИдентификаторOzon).Настройка;
		НайденЭлемент = МенеджерСправочника.НайтиПоИдентификаторуПоставляемойНастройки(ИдентификаторOzon);
		Если НайденЭлемент.Пустая() Тогда
			ОбъектСправочника = МенеджерСправочника.СоздатьЭлемент();
			ОбъектСправочника.ПоставляемаяНастройка = ПоставляемаяНастройка;
			ОбъектСправочника.ИдентификаторПоставляемогоЭлемента = ИдентификаторOzon;
		Иначе
			ОбъектСправочника = НайденЭлемент.ПолучитьОбъект();
			ОбъектСправочника.Заблокировать();
		КонецЕсли;
		
		ОбъектСправочника.Наименование = НСтр("ru='Ozon. Отчет о продажах сводный'");
		ПолныйПутьОбъектаЗагрузки = "Документ.ОтчетКомиссионера.ТабличнаяЧасть.Запасы";
		ОписаниеОбъектаЗагрузки = ЗагрузкаДанныхИзВнешнегоИсточника.ОбъектЗагрузкиПоПолномуИмени(
		ПолныйПутьОбъектаЗагрузки);
		ОбъектСправочника.ОбъектЗагрузки = ОписаниеОбъектаЗагрузки.ОбъектЗагрузки;
		ОбъектСправочника.ИмяТабличнойЧасти = ОписаниеОбъектаЗагрузки.ИмяТабличнойЧасти;
		ОбъектСправочника.ЗаполнитьНастройкиПолей(ПоставляемаяНастройка);
		ОбъектСправочника.ПоставляемаяНастройка = ПоставляемаяНастройка;
		ОбъектСправочника.ВерсияПоставляемойНастройки = ВерсияПоставляемойНастройки;
		ОбъектСправочника.Записать();
		ЗафиксироватьТранзакцию();
	Исключение
		ОтменитьТранзакцию();
		ЕстьОшибки = Истина;
		
		ИмяСобытия = НСтр("ru = 'Выполнение обработчика ЗаполнитьСоответствияПолейЗагрузкиИзВнешнегоИсточника'",
		ОбщегоНазначения.КодОсновногоЯзыка());
		
		ЗаписьЖурналаРегистрации(ИмяСобытия, УровеньЖурналаРегистрации.Ошибка, , , 
			ПодробноеПредставлениеОшибки(ИнформацияОбОшибке()));
	КонецПопытки;
	
	ПараметрыОбработчика.ОбработкаЗавершена = Не ЕстьОшибки;
	
КонецПроцедуры


#КонецОбласти
