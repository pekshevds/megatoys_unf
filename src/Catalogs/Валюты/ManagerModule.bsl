///////////////////////////////////////////////////////////////////////////////////////////////////////
// Copyright (c) 2023, ООО 1С-Софт
// Все права защищены. Эта программа и сопроводительные материалы предоставляются 
// в соответствии с условиями лицензии Attribution 4.0 International (CC BY 4.0)
// Текст лицензии доступен по ссылке:
// https://creativecommons.org/licenses/by/4.0/legalcode
///////////////////////////////////////////////////////////////////////////////////////////////////////

#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область ПрограммныйИнтерфейс

#Область ДляВызоваИзДругихПодсистем

// СтандартныеПодсистемы.ГрупповоеИзменениеОбъектов

// Возвращает реквизиты объекта, которые разрешается редактировать
// с помощью обработки группового изменения реквизитов.
//
// Возвращаемое значение:
//  Массив из Строка
//
Функция РеквизитыРедактируемыеВГрупповойОбработке() Экспорт
	
	Результат = Новый Массив;
	Результат.Добавить("СпособУстановкиКурса");
	Результат.Добавить("Наценка");
	Результат.Добавить("ОсновнаяВалюта");
	Результат.Добавить("ФормулаРасчетаКурса");
	Возврат Результат;
	
КонецФункции

// Конец СтандартныеПодсистемы.ГрупповоеИзменениеОбъектов

#Область ОбновлениеВерсииИБ

// Смотри также ОбновлениеИнформационнойБазыПереопределяемый.ПриНастройкеНачальногоЗаполненияЭлементов
// 
// Параметры:
//  Настройки - см. ОбновлениеИнформационнойБазыПереопределяемый.ПриНастройкеНачальногоЗаполненияЭлементов.Настройки
//
Процедура ПриНастройкеНачальногоЗаполненияЭлементов(Настройки) Экспорт
	
	Настройки.ПриНачальномЗаполненииЭлемента = Ложь;
	
КонецПроцедуры

// Смотри также ОбновлениеИнформационнойБазыПереопределяемый.ПриНачальномЗаполненииЭлементов
// 
// Параметры:
//   КодыЯзыков - см. ОбновлениеИнформационнойБазыПереопределяемый.ПриНачальномЗаполненииЭлементов.КодыЯзыков
//   Элементы - см. ОбновлениеИнформационнойБазыПереопределяемый.ПриНачальномЗаполненииЭлементов.Элементы
//   ТабличныеЧасти - см. ОбновлениеИнформационнойБазыПереопределяемый.ПриНачальномЗаполненииЭлементов.ТабличныеЧасти
//
Процедура ПриНачальномЗаполненииЭлементов(КодыЯзыков, Элементы, ТабличныеЧасти) Экспорт
	
	Если Справочники.Валюты.Выбрать().Следующий() Тогда
		Возврат;
	КонецЕсли;
	
	КодРубляВКлассификаторе = "643";
	ОписаниеВалютыРубль = ОписаниеВалютыИзКлассификатора(КодРубляВКлассификаторе);
	Элемент = Элементы.Добавить();
	Элемент.Наименование = НСтр("ru='руб.'");
	Элемент.Ссылка = ОсновнаяВалютаНачальногоЗаполнения();
	ЗаполнитьЗначенияСвойств(Элемент, ОписаниеВалютыРубль, "Код,НаименованиеПолное,СпособУстановкиКурса,ПараметрыПрописи");
	
КонецПроцедуры

#КонецОбласти

#КонецОбласти

// Ссылка на Основную кассу, которая создается при начальном заполнении элементов.
// См. ПриНачальномЗаполненииЭлементов
// 
// Возвращаемое значение:
//  СправочникСсылка.Кассы
//
Функция ОсновнаяВалютаНачальногоЗаполнения() Экспорт
	
	Возврат Справочники.Валюты.ПолучитьСсылку(Новый УникальныйИдентификатор("c26a4d87-c6e2-4aca-ab05-1b02be6ecaec"));
	
КонецФункции

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

Функция КодыВалют() Экспорт
	
	ТекстЗапроса =
	"ВЫБРАТЬ
	|	Валюты.Ссылка КАК Ссылка,
	|	Валюты.Наименование КАК СимвольныйКод,
	|	Валюты.НаименованиеПолное КАК Представление
	|ИЗ
	|	Справочник.Валюты КАК Валюты
	|ГДЕ
	|	Валюты.СпособУстановкиКурса <> ЗНАЧЕНИЕ(Перечисление.СпособыУстановкиКурсаВалюты.НаценкаНаКурсДругойВалюты)
	|	И Валюты.СпособУстановкиКурса <> ЗНАЧЕНИЕ(Перечисление.СпособыУстановкиКурсаВалюты.РасчетПоФормуле)";
	
	Запрос = Новый Запрос(ТекстЗапроса);
	Возврат ОбщегоНазначения.ТаблицаЗначенийВМассив(Запрос.Выполнить().Выгрузить());
	
КонецФункции

Функция ОписаниеВалютыИзКлассификатора(КодВалюты)
	
	КлассификаторXML = Обработки.ЗагрузкаКурсовВалют.ПолучитьМакет("ОбщероссийскийКлассификаторВалют").ПолучитьТекст();
	КлассификаторТаблица = ОбщегоНазначения.ПрочитатьXMLВТаблицу(КлассификаторXML).Данные;
	ЗаписьОКВ = КлассификаторТаблица.Найти(КодВалюты, "Code"); 
	Если ЗаписьОКВ = Неопределено Тогда
		Возврат Неопределено;
	КонецЕсли;
	
	Если ЗаписьОКВ.RBCLoading Тогда
		СпособУстановкиКурса = Перечисления.СпособыУстановкиКурсаВалюты.ЗагрузкаИзИнтернета;
	Иначе
		СпособУстановкиКурса = Перечисления.СпособыУстановкиКурсаВалюты.РучнойВвод;
	КонецЕсли;
	
	Результат = Новый Структура;
	Результат.Вставить("Код", ЗаписьОКВ.Code);
	Результат.Вставить("Наименование", ЗаписьОКВ.CodeSymbol);
	Результат.Вставить("НаименованиеПолное", ЗаписьОКВ.Name);
	Результат.Вставить("СпособУстановкиКурса", СпособУстановкиКурса);
	Результат.Вставить("ПараметрыПрописи", ЗаписьОКВ.NumerationItemOptions);
	Возврат Результат;
	
КонецФункции

#КонецОбласти

#КонецЕсли