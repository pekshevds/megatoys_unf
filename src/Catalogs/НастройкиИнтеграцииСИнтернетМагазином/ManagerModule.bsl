#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область ПрограммныйИнтерфейс

Процедура СоздатьЭлементыСправочника() Экспорт
	
	УстановитьПривилегированныйРежим(Истина);
	
	Отбор = Новый Структура;
	Отбор.Вставить("Метаданные", Метаданные.РегламентныеЗадания.ОбменССайтом);
	
	МассивЗаданий = РегламентныеЗаданияСервер.НайтиЗадания(Отбор);
	
	Для Каждого СтрЗадания Из МассивЗаданий Цикл
		РегламентныеЗаданияСервер.УдалитьЗадание(СтрЗадания);
	КонецЦикла;
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	ОбменУправлениеНебольшойФирмойСайт.Ссылка КАК Ссылка,
		|	ОбменУправлениеНебольшойФирмойСайт.ИспользоватьРегламентныеЗадания КАК ИспользоватьРегламентныеЗадания,
		|	ОбменУправлениеНебольшойФирмойСайт.ИдентификаторРегламентногоЗадания КАК ИдентификаторРегламентногоЗадания,
		|	ОбменУправлениеНебольшойФирмойСайт.ИдентификаторРегламентногоЗаданияПечатьЧеков КАК ИдентификаторРегламентногоЗаданияПечатьЧеков,
		|	ОбменУправлениеНебольшойФирмойСайт.ИмяПользователя КАК Логин,
		|	ОбменУправлениеНебольшойФирмойСайт.ОбновлятьТолькоНеПроведенныеЗаказыПриЗагрузке КАК ОбновлятьТолькоНеПроведенныеЗаказыПриЗагрузке
		|ИЗ
		|	ПланОбмена.ОбменУправлениеНебольшойФирмойСайт КАК ОбменУправлениеНебольшойФирмойСайт
		|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.НастройкиИнтеграцииСИнтернетМагазином КАК НастройкиИнтеграцииСИнтернетМагазином
		|		ПО ОбменУправлениеНебольшойФирмойСайт.Ссылка = НастройкиИнтеграцииСИнтернетМагазином.УзелОбменаССайтом
		|			И (НЕ НастройкиИнтеграцииСИнтернетМагазином.ПометкаУдаления)
		|ГДЕ
		|	НЕ ОбменУправлениеНебольшойФирмойСайт.ЭтотУзел
		|	И НЕ ОбменУправлениеНебольшойФирмойСайт.ПометкаУдаления
		|	И НастройкиИнтеграцииСИнтернетМагазином.Ссылка ЕСТЬ NULL";
	
	РезультатЗапроса = Запрос.Выполнить();
	
	ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
	
	Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
		ТекОб = Справочники.НастройкиИнтеграцииСИнтернетМагазином.СоздатьЭлемент();
		ТекОб.Заполнить(Неопределено);
		
		ЗаполнитьЗначенияСвойств(ТекОб, ВыборкаДетальныеЗаписи.Ссылка,,
		"Код,Наименование,ИдентификаторРегламентногоЗадания,ИдентификаторРегламентногоЗаданияПечатьЧеков");
		
		Если РаботаВМоделиСервиса.РазделениеВключено() = Истина Тогда
			ТекОб.ВыгружатьНаСайт = Истина;
		КонецЕсли;
		
		ТекОб.Логин = ВыборкаДетальныеЗаписи.Логин;
		
		ТекОб.СоответствиеСтатусовЗаказов.Загрузить(ВыборкаДетальныеЗаписи.Ссылка.СоответствиеСтатусовЗаказов.Выгрузить());
		ТекОб.ВидыЦен.Загрузить(ВыборкаДетальныеЗаписи.Ссылка.ВидыЦен.Выгрузить());
		ТекОб.СоответствиеВидовОплат.Загрузить(ВыборкаДетальныеЗаписи.Ссылка.СоответствиеВидовОплат.Выгрузить());
		ТекОб.СоответствиеСлужбДоставки.Загрузить(ВыборкаДетальныеЗаписи.Ссылка.СоответствиеСлужбДоставки.Выгрузить());
		ТекОб.СтруктураКаталога.Загрузить(ВыборкаДетальныеЗаписи.Ссылка.СтруктураКаталога.Выгрузить());
		ТекОб.СоответствиеПолейНоменклатуры.Загрузить(ВыборкаДетальныеЗаписи.Ссылка.СоответствиеПолейНоменклатуры.Выгрузить());
		
		ТекОб.СпособУстановкиДатыОтгрузкиЗаказа
		= ПредопределенноеЗначение("Перечисление.СпособыУстановкиДатыДляМагазинаСоцСетей.ТекущаяДата");
		
		ТекОб.УчетнаяЗаписьДляОповещения
		= ПредопределенноеЗначение("Справочник.УчетныеЗаписиЭлектроннойПочты.СистемнаяУчетнаяЗаписьЭлектроннойПочты");
		
		ТекОб.ИспользоватьДоставку = ТекОб.СоответствиеСлужбДоставки.Количество();
		ТекОб.ОбмениватьсяСтатусамиЗаказа = ТекОб.СоответствиеСтатусовЗаказов.Количество();
		ТекОб.ТипИсточникаИнтеграции = ПредопределенноеЗначение("Перечисление.ТипыИсточниковИнтеграции.Сайт");
		ТекОб.ТипСайта = ТекОб.ПротоколОбменаCMS;
		ТекОб.ИспользоватьОповещения = Ложь;
		ТекОб.Пароль = ОбщегоНазначения.ПрочитатьДанныеИзБезопасногоХранилища(ВыборкаДетальныеЗаписи.Ссылка, "Пароль");
		ТекОб.ОтправлятьСкрытуюКопиюВПоддержку = Истина;
		ТекОб.УзелОбменаССайтом = ВыборкаДетальныеЗаписи.Ссылка;
		
		Если ВыборкаДетальныеЗаписи.ОбновлятьТолькоНеПроведенныеЗаказыПриЗагрузке Тогда
			ТекОб.ВариантОбновленияЗаказовИнтернетМагазина = Перечисления.ВариантыОбновленияЗаказовИнтернетМагазина.ОбновлятьТолькоНеПроведенные;
		Иначе
			ТекОб.ВариантОбновленияЗаказовИнтернетМагазина = Перечисления.ВариантыОбновленияЗаказовИнтернетМагазина.НеОбновлять;
		КонецЕсли;
		
		ТекОб.ДобавитьНастройкиСоздания();
		ТекОб.НастройкаЗавершена = Истина;
		ТекОб.ДатаСоздания = ТекущаяДатаСеанса();
		
		Если Не ЗначениеЗаполнено(ТекОб.ТипСайта) Тогда
			ТекОб.ТипСайта = ПредопределенноеЗначение("Перечисление.ПротоколыОбменаCMS.Другая");
		КонецЕсли;
		
		НаименованиеКраткое = "";
		Если ТекОб.ВыгружатьНаСайт Тогда
			НаименованиеКраткое = ТекОб.АдресСайта;
		Иначе
			НаименованиеКраткое = ТекОб.КаталогВыгрузки;
		КонецЕсли;
		
		ТекОб.Наименование = СтрШаблон("%1 (%2)", НаименованиеКраткое, ТекОб.ДатаСоздания);
		
		Если НЕ ТекОб.ПометкаУдаления И Не ЗначениеЗаполнено(ТекОб.УзелОбменаТовары) Тогда
			
			НовыйУзел = ПланыОбмена.ИнтеграцияСИнтернетМагазиномТовары.СоздатьУзел();
			НовыйУзел.УстановитьНовыйКод();
			НовыйУзел.Наименование = ТекОб.Наименование;
			НовыйУзел.Записать();
			
			ТекОб.УзелОбменаТовары = НовыйУзел.Ссылка;
			
		КонецЕсли;
		
		Если НЕ ТекОб.ПометкаУдаления И Не ЗначениеЗаполнено(ТекОб.УзелОбменаУслуги) Тогда
			
			НовыйУзел = ПланыОбмена.ИнтеграцияСИнтернетМагазиномУслуги.СоздатьУзел();
			НовыйУзел.УстановитьНовыйКод();
			НовыйУзел.Наименование = ТекОб.Наименование;
			НовыйУзел.Записать();
			
			ТекОб.УзелОбменаУслуги = НовыйУзел.Ссылка;
			
		КонецЕсли;
		
		Если НЕ ТекОб.ПометкаУдаления И Не ЗначениеЗаполнено(ТекОб.УзелОбменаЗаказы) Тогда
			
			НовыйУзел = ПланыОбмена.ИнтеграцияСИнтернетМагазиномЗаказы.СоздатьУзел();
			НовыйУзел.УстановитьНовыйКод();
			НовыйУзел.Наименование = ТекОб.Наименование;
			НовыйУзел.Записать();
			
			ТекОб.УзелОбменаЗаказы = НовыйУзел.Ссылка;
			
		КонецЕсли;
		
		Если НЕ ТекОб.ПометкаУдаления И Не ЗначениеЗаполнено(ТекОб.КлючИнтеграции) Тогда
			
			ТекОб.КлючИнтеграции = Справочники.НастройкиИнтеграцииСИнтернетМагазином.НайтиСоздатьКлючИнтеграции(НаименованиеКраткое,
			ТекОб.ТипИсточникаИнтеграции, ТекОб.ВыгружатьНаСайт);
			
		КонецЕсли;
		
		Если НЕ ТекОб.ВыгружатьНаСайт Тогда
			ТекОб.ИспользоватьОптимизированныйОбменКартинок = Ложь;
			ТекОб.ДобавлятьОтносительныеПутиИзображенийБезДвоичныхДанных = Ложь;
		КонецЕсли;
		
		ТекОб.ОбменДанными.Загрузка = Истина;
		ТекОб.Записать();
		
		НастройкаИнтеграции = ТекОб.Ссылка;
		
		ОбработатьРегистры(ВыборкаДетальныеЗаписи.Ссылка);
		ОбработатьРегламентныеЗадания(ВыборкаДетальныеЗаписи, НастройкаИнтеграции);
		
		УзелОбъект = ВыборкаДетальныеЗаписи.Ссылка.ПолучитьОбъект();
		УзелОбъект.УстановитьПометкуУдаления(Истина);
		
	КонецЦикла;
	
КонецПроцедуры

Процедура ОбработатьРегламентныеЗадания(ВыборкаДетальныеЗаписи, НастройкаИнтеграции)
	
	Если ВыборкаДетальныеЗаписи.ИспользоватьРегламентныеЗадания
		И (ЗначениеЗаполнено(ВыборкаДетальныеЗаписи.ИдентификаторРегламентногоЗадания)
		Или ЗначениеЗаполнено(ВыборкаДетальныеЗаписи.ИдентификаторРегламентногоЗаданияПечатьЧеков)) Тогда
		
		Если ЗначениеЗаполнено(ВыборкаДетальныеЗаписи.ИдентификаторРегламентногоЗадания) Тогда
			РегламентноеЗадание = ОбменССайтомРегламентныеЗадания.НайтиЗадание(ВыборкаДетальныеЗаписи.ИдентификаторРегламентногоЗадания);
			Если РегламентноеЗадание <> Неопределено Тогда
				ОбменССайтомРегламентныеЗадания.УдалитьЗадание(РегламентноеЗадание);
			КонецЕсли;
		КонецЕсли;
		
		Если ЗначениеЗаполнено(ВыборкаДетальныеЗаписи.ИдентификаторРегламентногоЗаданияПечатьЧеков) Тогда
			РегламентноеЗадание = ОбменССайтомРегламентныеЗадания.НайтиЗадание(ВыборкаДетальныеЗаписи.ИдентификаторРегламентногоЗаданияПечатьЧеков);
			Если РегламентноеЗадание <> Неопределено Тогда
				ОбменССайтомРегламентныеЗадания.УдалитьЗадание(РегламентноеЗадание);
			КонецЕсли;
		КонецЕсли;
		
		ИнтеграцияСИнтернетМагазиномСервер.СоздатьОбновитьРегламентноеЗаданиеОбмена(НастройкаИнтеграции, Истина);
		
	КонецЕсли;

КонецПроцедуры

Процедура ОбработатьРегистры(УзелОбменаССайтом)
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	ЗаказыПокупателейССайта.ЗаказПокупателя КАК ЗаказПокупателя,
		|	ЗаказыПокупателейССайта.НомерЗаказаНаСайте КАК НомерЗаказаНаСайте,
		|	ЗаказыПокупателейССайта.ДатаЗаказаНаСайте КАК ДатаЗаказаНаСайте,
		|	ЗаказыПокупателейССайта.УзелОбмена КАК УзелОбмена,
		|	НастройкиИнтеграцииСИнтернетМагазином.КлючИнтеграции КАК КлючИнтеграции,
		|	НастройкиИнтеграцииСИнтернетМагазином.Ссылка КАК НастройкаИнтеграции,
		|	ЗаказыПокупателейССайта.Идентификатор КАК Идентификатор
		|ИЗ
		|	РегистрСведений.ЗаказыПокупателейССайта КАК ЗаказыПокупателейССайта
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.НастройкиИнтеграцииСИнтернетМагазином КАК НастройкиИнтеграцииСИнтернетМагазином
		|		ПО ЗаказыПокупателейССайта.НастройкаИнтеграции = НастройкиИнтеграцииСИнтернетМагазином.Ссылка
		|ГДЕ
		|	НЕ НастройкиИнтеграцииСИнтернетМагазином.ПометкаУдаления
		|	И ЗаказыПокупателейССайта.УзелОбмена = &УзелОбменаССайтом
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ОплатыПокупателейССайта.ДокументОплаты КАК ДокументОплаты,
		|	ОплатыПокупателейССайта.НомерОплатыНаСайте КАК НомерОплатыНаСайте,
		|	ОплатыПокупателейССайта.ДатаОплатыНаСайте КАК ДатаОплатыНаСайте,
		|	ОплатыПокупателейССайта.УзелОбмена КАК УзелОбмена,
		|	НастройкиИнтеграцииСИнтернетМагазином.КлючИнтеграции КАК КлючИнтеграции,
		|	НастройкиИнтеграцииСИнтернетМагазином.Ссылка КАК НастройкаИнтеграции
		|ИЗ
		|	РегистрСведений.ОплатыПокупателейССайта КАК ОплатыПокупателейССайта
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.НастройкиИнтеграцииСИнтернетМагазином КАК НастройкиИнтеграцииСИнтернетМагазином
		|		ПО ОплатыПокупателейССайта.НастройкаИнтеграции = НастройкиИнтеграцииСИнтернетМагазином.Ссылка
		|ГДЕ
		|	НЕ НастройкиИнтеграцииСИнтернетМагазином.ПометкаУдаления
		|	И ОплатыПокупателейССайта.УзелОбмена = &УзелОбменаССайтом
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	НастройкиИнтеграцииСИнтернетМагазином.Ссылка КАК НастройкаИнтеграции,
		|	ОбменССайтомСтруктураКаталога.ИдентификаторКаталога КАК ИдентификаторКаталога,
		|	ОбменССайтомСтруктураКаталога.Номенклатура КАК Номенклатура,
		|	ОбменССайтомСтруктураКаталога.ГруппаКаталога КАК ГруппаКаталога,
		|	ОбменССайтомСтруктураКаталога.РодительИдентификатор КАК РодительИдентификатор,
		|	ОбменССайтомСтруктураКаталога.Идентификатор КАК Идентификатор,
		|	ОбменССайтомСтруктураКаталога.РодительГруппа КАК РодительГруппа,
		|	ОбменССайтомСтруктураКаталога.РодительКатегория КАК РодительКатегория,
		|	ОбменССайтомСтруктураКаталога.ЭтоГруппа КАК ЭтоГруппа
		|ИЗ
		|	РегистрСведений.ОбменССайтомСтруктураКаталога КАК ОбменССайтомСтруктураКаталога
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.НастройкиИнтеграцииСИнтернетМагазином КАК НастройкиИнтеграцииСИнтернетМагазином
		|		ПО ОбменССайтомСтруктураКаталога.УзелОбмена = НастройкиИнтеграцииСИнтернетМагазином.УзелОбменаССайтом
		|ГДЕ
		|	НЕ НастройкиИнтеграцииСИнтернетМагазином.ПометкаУдаления
		|	И ОбменССайтомСтруктураКаталога.УзелОбмена = &УзелОбменаССайтом
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	НастройкиИнтеграцииСИнтернетМагазином.КлючИнтеграции КАК КлючИнтеграции,
		|	СоответствияОбъектовСайта.УникальныйИдентификаторСайта КАК ИдентификаторМагазина,
		|	СоответствияОбъектовСайта.УникальныйИдентификаторИнформационнойБазы КАК ИдентификаторБазы,
		|	СоответствияОбъектовСайта.СсылкаНаОбъект КАК СсылкаНаОбъект,
		|	СоответствияОбъектовСайта.ОбъектВыгружен КАК ОбъектВыгружен,
		|	СоответствияОбъектовСайта.ТипОбъекта КАК ТипОбъекта,
		|	СоответствияОбъектовСайта.ДополнительныеПараметры КАК ДополнительныеПараметры
		|ИЗ
		|	РегистрСведений.СоответствияОбъектовСайта КАК СоответствияОбъектовСайта
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.НастройкиИнтеграцииСИнтернетМагазином КАК НастройкиИнтеграцииСИнтернетМагазином
		|		ПО СоответствияОбъектовСайта.УзелИнформационнойБазы = НастройкиИнтеграцииСИнтернетМагазином.УзелОбменаССайтом
		|ГДЕ
		|	НЕ НастройкиИнтеграцииСИнтернетМагазином.ПометкаУдаления
		|	И СоответствияОбъектовСайта.УзелИнформационнойБазы = &УзелОбменаССайтом
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	НастройкиИнтеграцииСИнтернетМагазином.Ссылка КАК НастройкаИнтеграции,
		|	СостоянияОбменовССайтами.ДействиеПриОбмене КАК ДействиеПриОбмене,
		|	СостоянияОбменовССайтами.РезультатВыполненияОбмена КАК РезультатВыполненияОбмена,
		|	СостоянияОбменовССайтами.ДатаНачала КАК ДатаНачала,
		|	СостоянияОбменовССайтами.ДатаОкончания КАК ДатаОкончания,
		|	СостоянияОбменовССайтами.ДанныеПоследнегоОбмена КАК ДанныеПоследнегоОбмена,
		|	СостоянияОбменовССайтами.ДанныеПоследнегоНепустогоОбмена КАК ДанныеПоследнегоНепустогоОбмена,
		|	СостоянияОбменовССайтами.ПоследнийТекстОшибки КАК ПоследнийТекстОшибки
		|ИЗ
		|	РегистрСведений.СостоянияОбменовССайтами КАК СостоянияОбменовССайтами
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.НастройкиИнтеграцииСИнтернетМагазином КАК НастройкиИнтеграцииСИнтернетМагазином
		|		ПО СостоянияОбменовССайтами.УзелИнформационнойБазы = НастройкиИнтеграцииСИнтернетМагазином.УзелОбменаССайтом
		|ГДЕ
		|	НЕ НастройкиИнтеграцииСИнтернетМагазином.ПометкаУдаления
		|	И СостоянияОбменовССайтами.УзелИнформационнойБазы = &УзелОбменаССайтом
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	НастройкиИнтеграцииСИнтернетМагазином.Ссылка КАК НастройкаИнтеграции,
		|	СостоянияУспешныхОбменовССайтами.ДействиеПриОбмене КАК ДействиеПриОбмене,
		|	СостоянияУспешныхОбменовССайтами.ДатаОкончания КАК ДатаОкончания
		|ИЗ
		|	РегистрСведений.СостоянияУспешныхОбменовССайтами КАК СостоянияУспешныхОбменовССайтами
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.НастройкиИнтеграцииСИнтернетМагазином КАК НастройкиИнтеграцииСИнтернетМагазином
		|		ПО СостоянияУспешныхОбменовССайтами.УзелИнформационнойБазы = НастройкиИнтеграцииСИнтернетМагазином.УзелОбменаССайтом
		|ГДЕ
		|	НЕ НастройкиИнтеграцииСИнтернетМагазином.ПометкаУдаления
		|	И СостоянияУспешныхОбменовССайтами.УзелИнформационнойБазы = &УзелОбменаССайтом
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	НастройкиИнтеграцииСИнтернетМагазином.Ссылка КАК НастройкаИнтеграции,
		|	НастройкиЗаписьНаУслуги.ИсточникЗаписи КАК ИсточникЗаписи,
		|	НастройкиЗаписьНаУслуги.Услуга КАК Услуга,
		|	НастройкиЗаписьНаУслуги.Ресурс КАК Ресурс,
		|	НастройкиЗаписьНаУслуги.Длительность КАК Длительность
		|ИЗ
		|	РегистрСведений.НастройкиЗаписьНаУслуги КАК НастройкиЗаписьНаУслуги
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.НастройкиИнтеграцииСИнтернетМагазином КАК НастройкиИнтеграцииСИнтернетМагазином
		|		ПО НастройкиЗаписьНаУслуги.УзелОбмена = НастройкиИнтеграцииСИнтернетМагазином.УзелОбменаССайтом
		|ГДЕ
		|	НЕ НастройкиИнтеграцииСИнтернетМагазином.ПометкаУдаления
		|	И НастройкиЗаписьНаУслуги.УзелОбмена = &УзелОбменаССайтом";
	
	Запрос.УстановитьПараметр("УзелОбменаССайтом", УзелОбменаССайтом);
	РезультатЗапроса = Запрос.ВыполнитьПакет();
	
	ВыборкаДетальныеЗаписи = РезультатЗапроса[0].Выбрать();
	Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
		МЗ = РегистрыСведений.ЗаказыПокупателейССайта.СоздатьМенеджерЗаписи();
		ЗаполнитьЗначенияСвойств(МЗ, ВыборкаДетальныеЗаписи);
		МЗ.Записать();
	КонецЦикла;
	
	ВыборкаДетальныеЗаписи = РезультатЗапроса[1].Выбрать();
	Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
		МЗ = РегистрыСведений.ОплатыПокупателейССайта.СоздатьМенеджерЗаписи();
		ЗаполнитьЗначенияСвойств(МЗ, ВыборкаДетальныеЗаписи);
		МЗ.Записать();
	КонецЦикла;
	
	ВыборкаДетальныеЗаписи = РезультатЗапроса[2].Выбрать();
	Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
		МЗ = РегистрыСведений.СтруктураКаталогаИнтернетМагазина.СоздатьМенеджерЗаписи();
		ЗаполнитьЗначенияСвойств(МЗ, ВыборкаДетальныеЗаписи);
		МЗ.Записать();
	КонецЦикла;
	
	ВыборкаДетальныеЗаписи = РезультатЗапроса[3].Выбрать();
	Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
		МЗ = РегистрыСведений.СоответствияОбъектовИнтернетМагазина.СоздатьМенеджерЗаписи();
		ЗаполнитьЗначенияСвойств(МЗ, ВыборкаДетальныеЗаписи);
		МЗ.Записать();
	КонецЦикла;
	
	ВыборкаДетальныеЗаписи = РезультатЗапроса[4].Выбрать();
	Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
		МЗ = РегистрыСведений.СостоянияОбменовИнтернетМагазина.СоздатьМенеджерЗаписи();
		ЗаполнитьЗначенияСвойств(МЗ, ВыборкаДетальныеЗаписи);
		МЗ.Записать();
	КонецЦикла;
	
	ВыборкаДетальныеЗаписи = РезультатЗапроса[5].Выбрать();
	Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
		МЗ = РегистрыСведений.СостоянияУспешныхОбменовИнтернетМагазина.СоздатьМенеджерЗаписи();
		ЗаполнитьЗначенияСвойств(МЗ, ВыборкаДетальныеЗаписи);
		МЗ.Записать();
	КонецЦикла;
	
	ВыборкаДетальныеЗаписи = РезультатЗапроса[6].Выбрать();
	Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
		МЗ = РегистрыСведений.НастройкиЗаписьНаУслугиИнтернетМагазина.СоздатьМенеджерЗаписи();
		ЗаполнитьЗначенияСвойств(МЗ, ВыборкаДетальныеЗаписи);
		МЗ.Записать();
	КонецЦикла;

	
КонецПроцедуры

Процедура СоздатьИнтеграцииСИнтернетМагазином(ПараметрыОбработчика) Экспорт
	
	СоздатьЭлементыСправочника();
	
	Константы.ИспользоватьИнтеграциюСИнтернетМагазином.Установить(Истина);
	
	ПараметрыОбработчика.ОбработкаЗавершена = Истина;
	
КонецПроцедуры

Процедура ОтключитьИнтеграцииСИнтернетМагазином() Экспорт
	
	УстановитьПривилегированныйРежим(Истина);
	
	Константы.ИспользоватьИнтеграциюСИнтернетМагазином.Установить(Ложь);
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	НастройкиИнтеграцииСИнтернетМагазином.Ссылка КАК Ссылка,
		|	НастройкиИнтеграцииСИнтернетМагазином.УзелОбменаССайтом КАК УзелОбменаССайтом,
		|	ЕСТЬNULL(НастройкиИнтеграцииСИнтернетМагазином.УзелОбменаССайтом.ИспользоватьРегламентныеЗадания, ЛОЖЬ) КАК ИспользоватьРегламентныеЗадания,
		|	НастройкиИнтеграцииСИнтернетМагазином.УзелОбменаССайтом.ИдентификаторРегламентногоЗадания КАК ИдентификаторРегламентногоЗадания,
		|	НастройкиИнтеграцииСИнтернетМагазином.УзелОбменаССайтом.ИдентификаторРегламентногоЗаданияПечатьЧеков КАК ИдентификаторРегламентногоЗаданияПечатьЧеков
		|ИЗ
		|	Справочник.НастройкиИнтеграцииСИнтернетМагазином КАК НастройкиИнтеграцииСИнтернетМагазином
		|ГДЕ
		|	НЕ НастройкиИнтеграцииСИнтернетМагазином.ПометкаУдаления
		|	И НастройкиИнтеграцииСИнтернетМагазином.ТипИсточникаИнтеграции = &ТипИсточникаИнтеграции";
	
	Запрос.УстановитьПараметр("ТипИсточникаИнтеграции", ПредопределенноеЗначение("Перечисление.ТипыИсточниковИнтеграции.Сайт"));
	
	РезультатЗапроса = Запрос.Выполнить();
	
	ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
	
	Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
		
		ТекОб = ВыборкаДетальныеЗаписи.Ссылка.ПолучитьОбъект();
		ТекОб.УстановитьПометкуУдаления(Истина);
		
		Если ЗначениеЗаполнено(ВыборкаДетальныеЗаписи.УзелОбменаССайтом) Тогда
			ТекОб = ВыборкаДетальныеЗаписи.УзелОбменаССайтом.ПолучитьОбъект();
			ТекОб.ПометкаУдаления = Ложь;
			ТекОб.ИспользоватьРегламентныеЗадания = Ложь;
			ТекОб.ИдентификаторРегламентногоЗадания = "";
			ТекОб.ИдентификаторРегламентногоЗаданияПечатьЧеков = "";
			ТекОб.ПробиватьЧекиПоОнлайнОплатам = Ложь;
			ТекОб.ОнлайнОплаты = Ложь;
			ТекОб.Записать();
		КонецЕсли;
		
	КонецЦикла;
	
	
КонецПроцедуры

Функция НайтиСоздатьКлючИнтеграции(СтрокаАдресПодключения, ТипИсточникаИнтеграции, ВыгружатьНаСайт = Истина) Экспорт
	
	УстановитьПривилегированныйРежим(Истина);
	
	ДоменноеИмяСайта = СтрокаАдресПодключения;
	Если ВыгружатьНаСайт Тогда
		СтруктураURI = ОбщегоНазначенияКлиентСервер.СтруктураURI(СтрокаАдресПодключения);
		
		ДоменноеИмяСайта = СтруктураURI.Хост;
	КонецЕсли;
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	КлючиИнтеграцийСИнтернетМагазином.Ссылка КАК Ссылка
	|ИЗ
	|	Справочник.КлючиИнтеграцийСИнтернетМагазином КАК КлючиИнтеграцийСИнтернетМагазином
	|ГДЕ
	|	НЕ КлючиИнтеграцийСИнтернетМагазином.ПометкаУдаления
	|	И КлючиИнтеграцийСИнтернетМагазином.ТипИсточникаИнтеграции = &ТипИсточникаИнтеграции
	|	И КлючиИнтеграцийСИнтернетМагазином.ДоменноеИмяСайта = &ДоменноеИмяСайта";
	
	Запрос.УстановитьПараметр("ДоменноеИмяСайта", ДоменноеИмяСайта);
	Запрос.УстановитьПараметр("ТипИсточникаИнтеграции", ТипИсточникаИнтеграции);
	
	РезультатЗапроса = Запрос.Выполнить();
	
	Результат = Неопределено;
	Если РезультатЗапроса.Пустой() Тогда
		
		НовыйКлюч = Справочники.КлючиИнтеграцийСИнтернетМагазином.СоздатьЭлемент();
		НовыйКлюч.Наименование = ДоменноеИмяСайта;
		НовыйКлюч.ДоменноеИмяСайта = ДоменноеИмяСайта;
		НовыйКлюч.ТипИсточникаИнтеграции = ТипИсточникаИнтеграции;
		НовыйКлюч.Записать();
		
		Результат = НовыйКлюч.Ссылка;
		
	Иначе
		
		ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
		ВыборкаДетальныеЗаписи.Следующий();
		
		Результат = ВыборкаДетальныеЗаписи.Ссылка;
		
	КонецЕсли;
	
	Возврат Результат;
	
КонецФункции

Процедура ОбработкаПолученияФормы(ВидФормы, Параметры, ВыбраннаяФорма, ДополнительнаяИнформация, СтандартнаяОбработка)
	
	Если ВидФормы = "ФормаСписка" Тогда
		
		ЕдинственнаяИнтегарция = ПолучитьЕдинственнуюИнтегарцию(
		ПредопределенноеЗначение("Перечисление.ТипыИсточниковИнтеграции.Сайт")
		);
		
		Если ЕдинственнаяИнтегарция <> Неопределено Тогда
			ВыбраннаяФорма = "ФормаНастройкиСайт";
			Параметры.Вставить("Ключ", ЕдинственнаяИнтегарция);
			СтандартнаяОбработка = Ложь;
			
		КонецЕсли;
		
	КонецЕсли;
	
КонецПроцедуры

Функция ПолучитьЕдинственнуюИнтегарцию(ТипИсточникаИнтеграции)
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	НастройкиИнтеграцииСИнтернетМагазином.Ссылка КАК Ссылка
	|ИЗ
	|	Справочник.НастройкиИнтеграцииСИнтернетМагазином КАК НастройкиИнтеграцииСИнтернетМагазином
	|ГДЕ
	|	НЕ НастройкиИнтеграцииСИнтернетМагазином.ПометкаУдаления
	|	И НастройкиИнтеграцииСИнтернетМагазином.ТипИсточникаИнтеграции = &ТипИсточникаИнтеграции";
	
	Запрос.УстановитьПараметр("ТипИсточникаИнтеграции", ТипИсточникаИнтеграции);
	РезультатЗапроса = Запрос.Выполнить();
	
	Если РезультатЗапроса.Пустой() Тогда
		Возврат ПредопределенноеЗначение("Справочник.НастройкиИнтеграцииСИнтернетМагазином.ПустаяСсылка");
	КонецЕсли;
	
	ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
	
	Если ВыборкаДетальныеЗаписи.Количество() > 1 Тогда
		Возврат Неопределено;
	КонецЕсли;
	
	ВыборкаДетальныеЗаписи.Следующий();
	
	Возврат ВыборкаДетальныеЗаписи.Ссылка;
	
КонецФункции

#КонецОбласти

#КонецЕсли
