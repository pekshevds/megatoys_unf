#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область ПрограммныйИнтерфейс

#Область ДляВызоваИзДругихПодсистем

#Область ОбновлениеВерсииИБ

// Определяет настройки начального заполнения элементов.
//
// Параметры:
//  Настройки - Структура - настройки заполнения
//   * ПриНачальномЗаполненииЭлемента - Булево - Если Истина, то для каждого элемента будет
//      вызвана процедура индивидуального заполнения ПриНачальномЗаполненииЭлемента.
Процедура ПриНастройкеНачальногоЗаполненияЭлементов(Настройки) Экспорт
	
	Настройки.ПриНачальномЗаполненииЭлемента = Истина;
	
КонецПроцедуры

// Смотри также ОбновлениеИнформационнойБазыПереопределяемый.ПриНачальномЗаполненииЭлементов
// 
// Параметры:
//   КодыЯзыков - см. ОбновлениеИнформационнойБазыПереопределяемый.ПриНачальномЗаполненииЭлементов.КодыЯзыков
//   Элементы - см. ОбновлениеИнформационнойБазыПереопределяемый.ПриНачальномЗаполненииЭлементов.Элементы
//   ТабличныеЧасти - см. ОбновлениеИнформационнойБазыПереопределяемый.ПриНачальномЗаполненииЭлементов.ТабличныеЧасти
//
Процедура ПриНачальномЗаполненииЭлементов(КодыЯзыков, Элементы, ТабличныеЧасти) Экспорт
	
	Если Не НачальноеЗаполнениеЭлементовВыполнено() Тогда
		Элемент = Элементы.Добавить();
		Элемент.Наименование = НСтр("ru='Сайт'");
		
		Элемент = Элементы.Добавить();
		Элемент.Наименование = НСтр("ru='E-mail'");
		
		Элемент = Элементы.Добавить();
		Элемент.Наименование = НСтр("ru='Звонок'");
		
		Элемент = Элементы.Добавить();
		Элемент.Наименование = НСтр("ru='Выставка'");
		
		Элемент = Элементы.Добавить();
		Элемент.Наименование = НСтр("ru='Рекламная кампания'");
	КонецЕсли;
	
КонецПроцедуры

// Смотри также ОбновлениеИнформационнойБазыПереопределяемый.ПриНастройкеНачальногоЗаполненияЭлемента
//
// Параметры:
//  Объект                  - СправочникОбъект.ВидыКонтактнойИнформации - заполняемый объект.
//  Данные                  - СтрокаТаблицыЗначений - данные заполнения объекта.
//  ДополнительныеПараметры - Структура:
//   * ПредопределенныеДанные - ТаблицаЗначений - данные заполненные в процедуре ПриНачальномЗаполненииЭлементов.
//
Процедура ПриНачальномЗаполненииЭлемента(Объект, Данные, ДополнительныеПараметры) Экспорт
	
	Объект.УстановитьНовыйКод();
	
КонецПроцедуры

#КонецОбласти

#КонецОбласти

#Область УстаревшиеПроцедурыИФункции

// Устарела. Будет удалена в следующей версии.
//
Процедура ЗаполнитьПоставляемыеИсточникиПривлеченияПокупателей() Экспорт
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ ПЕРВЫЕ 1
		|	ИсточникиПривлеченияПокупателей.Ссылка КАК Источник
		|ИЗ
		|	Справочник.ИсточникиПривлеченияПокупателей КАК ИсточникиПривлеченияПокупателей";
	
	РезультатЗапроса = Запрос.Выполнить();
	
	Если Не РезультатЗапроса.Пустой() Тогда
		Возврат;
	КонецЕсли;
	
	// 1. Сайт
	Источник = Справочники.ИсточникиПривлеченияПокупателей.СоздатьЭлемент();
	Источник.УстановитьНовыйКод();
	Источник.Наименование = НСтр("ru='Сайт'");
	
	ОбновлениеИнформационнойБазы.ЗаписатьДанные(Источник);
	
	// 2. E-mail
	Источник = Справочники.ИсточникиПривлеченияПокупателей.СоздатьЭлемент();
	Источник.УстановитьНовыйКод();
	Источник.Наименование = НСтр("ru='E-mail'");
	
	ОбновлениеИнформационнойБазы.ЗаписатьДанные(Источник);
	
	// 3. Звонок
	Источник = Справочники.ИсточникиПривлеченияПокупателей.СоздатьЭлемент();
	Источник.УстановитьНовыйКод();
	Источник.Наименование = НСтр("ru='Звонок'");
	
	ОбновлениеИнформационнойБазы.ЗаписатьДанные(Источник);
	
	// 4. Выставка
	Источник = Справочники.ИсточникиПривлеченияПокупателей.СоздатьЭлемент();
	Источник.УстановитьНовыйКод();
	Источник.Наименование = НСтр("ru='Выставка'");
	
	ОбновлениеИнформационнойБазы.ЗаписатьДанные(Источник);
	
	// 5. Рекламная кампания
	Источник = Справочники.ИсточникиПривлеченияПокупателей.СоздатьЭлемент();
	Источник.УстановитьНовыйКод();
	Источник.Наименование = НСтр("ru='Рекламная кампания'");
	
	ОбновлениеИнформационнойБазы.ЗаписатьДанные(Источник);
	
КонецПроцедуры

#КонецОбласти

#КонецОбласти

#Область ОбработчикиСобытий

Процедура ОбработкаПолученияДанныхВыбора(ДанныеВыбора, Параметры, СтандартнаяОбработка)
	
	Если Параметры.ВыборГруппИЭлементов <> ИспользованиеГруппИЭлементов.Группы Тогда
		
		Если Не Параметры.Отбор.Свойство("Недействителен") Тогда
			Параметры.Отбор.Вставить("Недействителен", Ложь);
		КонецЕсли;
		
	Иначе
		
		Для Каждого КлючИЗначение Из Параметры.Отбор Цикл
			НайденныйРеквизит = Метаданные.Справочники.ИсточникиПривлеченияПокупателей.Реквизиты.Найти(КлючИЗначение.Ключ);
			Если НайденныйРеквизит = Неопределено Тогда
				Продолжить;
			КонецЕсли;
			Если НайденныйРеквизит.Использование = Метаданные.СвойстваОбъектов.ИспользованиеРеквизита.ДляЭлемента Тогда
				Параметры.Отбор.Удалить(КлючИЗначение.Ключ);
			КонецЕсли;
		КонецЦикла;
		
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

Функция НачальноеЗаполнениеЭлементовВыполнено()
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	ИсточникиПривлеченияПокупателей.Ссылка КАК Ссылка
	|ИЗ
	|	Справочник.ИсточникиПривлеченияПокупателей КАК ИсточникиПривлеченияПокупателей
	|ГДЕ
	|	ИсточникиПривлеченияПокупателей.Предопределенный = ЛОЖЬ";
	
	Возврат Не Запрос.Выполнить().Пустой();
	
КонецФункции

#КонецОбласти

#КонецЕсли