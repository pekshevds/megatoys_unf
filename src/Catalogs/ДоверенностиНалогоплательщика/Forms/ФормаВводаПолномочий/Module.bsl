
#Область ОбработчикиСобытийФормы

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	
	УправлениеЭУ();
	
КонецПроцедуры

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	// Пропускаем инициализацию, чтобы гарантировать получение формы при передаче параметра "АвтоТест".
	Если Параметры.Свойство("АвтоТест") Тогда
		Возврат;
	КонецЕсли;
	
	// определяем возможные полномочия в таблице
	ОпределитьПолномочиеВТаблице("02", НСтр("ru = 'представлять налоговую декларацию, другую отчетность'"));
	ОпределитьПолномочиеВТаблице("03", НСтр("ru = 'получать документы в налоговом органе'"));
	ОпределитьПолномочиеВТаблице("05", НСтр("ru = 'подписывать документы, используемые при постановке на учет и снятии с учета и сообщении сведений, установленных Налоговым кодексом Российской Федерации'"));
	ОпределитьПолномочиеВТаблице("06", НСтр("ru = 'представлять документы, используемые при постановке на учет и снятии с учета и сообщении сведений, установленных Налоговым кодексом Российской Федерации'"));
	ОпределитьПолномочиеВТаблице("07", НСтр("ru = 'получать от налогового органа документы, подтверждающие постановку на учет и снятие с учета'"));
	ОпределитьПолномочиеВТаблице("08", НСтр("ru = 'подписывать документы, используемые при учете банковских счетов (в том числе открытых в банках и иных организациях финансового рынка за пределами территории Российской Федерации) и электронных средств платежа'"));
	ОпределитьПолномочиеВТаблице("09", НСтр("ru = 'представлять документы, используемые при учете банковских счетов (в том числе открытых в банках и иных организациях финансового рынка за пределами территории Российской Федерации) и электронных средств платежа'"));
	ОпределитьПолномочиеВТаблице("10", НСтр("ru = 'представлять документы по применению специальных налоговых режимов, документы по налогу на игорный бизнес'"));
	ОпределитьПолномочиеВТаблице("11", НСтр("ru = 'получать в налоговом органе документы по применению специальных налоговых режимов, документы по налогу на игорный бизнес'"));
	ОпределитьПолномочиеВТаблице("17", НСтр("ru = 'подписывать заявление на зачет/возврат налога'"));
	ОпределитьПолномочиеВТаблице("18", НСтр("ru = 'подписывать заявления о ввозе товаров и уплате косвенных налогов'"));
	ОпределитьПолномочиеВТаблице("19", НСтр("ru = 'получать заявления о ввозе товаров и уплате косвенных налогов'"));
	ОпределитьПолномочиеВТаблице("20", НСтр("ru = 'подписывать документы по применению специальных налоговых режимов, документы по налогу на игорный бизнес'"));
	ОпределитьПолномочиеВТаблице("21", НСтр("ru = 'подписывать документы (информацию)'"));
	ОпределитьПолномочиеВТаблице("22", НСтр("ru = 'представлять документы (информацию)'"));
	ОпределитьПолномочиеВТаблице("23", НСтр("ru = 'подписывать, представлять и получать от налогового органа документы по регистрации (перерегистрации) контрольно-кассовой техники'"));
	ОпределитьПолномочиеВТаблице("24", НСтр("ru = 'подписывать, представлять и получать от налогового органа документы по снятию контрольно-кассовой техники с регистрационного учета'"));
	ОпределитьПолномочиеВТаблице("25", НСтр("ru = 'подписывать и представлять перечень автоматических устройств для расчетов'"));
	ОпределитьПолномочиеВТаблице("26", НСтр("ru = 'подписывать уведомление банком налогового органа по месту учета налогоплательщика о факте выдачи банковской гарантии'"));
	ОпределитьПолномочиеВТаблице("28", НСтр("ru = 'подписывать и представлять отчет об операциях с товарами, подлежащими прослеживаемости, документы, содержащие реквизиты прослеживаемости, и иные документы (информацию) в рамках национальной системы прослеживаемости'"));
	ОпределитьПолномочиеВТаблице("29", НСтр("ru = 'получать от налогового органа квитанцию о присвоении регистрационного номера партии товара, подлежащего прослеживаемости'"));
	ОпределитьПолномочиеВТаблице("30", НСтр("ru = 'получать документы, используемые при учете и контроле банковских счетов и электронных средств платежа'"));
	ОпределитьПолномочиеВТаблице("31", НСтр("ru = 'подписывать, получать и представлять документы и информацию в рамках проверки соблюдения валютного законодательства Российской Федерации'"));
	ОпределитьПолномочиеВТаблице("32", НСтр("ru = 'получать запросы налогового органа и представлять документы и информацию по запросам в соответствии с валютным законодательством Российской Федерации'"));
	ОпределитьПолномочиеВТаблице("33", НСтр("ru = 'подписывать и представлять отчеты по зарубежным счетам, получать уведомления налогового органа о необходимости представления исправленного (уточненного) отчета и (или) надлежащим образом оформленных подтверждающих документов'"));
	ОпределитьПолномочиеВТаблице("35", НСтр("ru = 'подписывать, получать и представлять документы и информацию в рамках производства по делам об административных правонарушениях за нарушения валютного законодательства Российской Федерации, в том числе процессуальные документы'"));
	ОпределитьПолномочиеВТаблице("36", НСтр("ru = 'представлять заявление на получение доступа к Личному кабинету'"));
	ОпределитьПолномочиеВТаблице("37", НСтр("ru = 'подписывать и представлять согласие налогоплательщика (плательщика страховых взносов) на представление сведений, составляющих налоговую тайну, со стороны лица, раскрывающего сведения, составляющие налоговую тайну'"));
	ОпределитьПолномочиеВТаблице("38", НСтр("ru = 'подписывать и представлять согласие налогоплательщика (плательщика страховых взносов) на представление сведений, составляющих налоговую тайну, со стороны лица, запрашивающего сведения, составляющие налоговую тайну'"));
	ОпределитьПолномочиеВТаблице("39", НСтр("ru = 'подписывать и представлять запрос на представление сведений, составляющих налоговую тайну'"));
	
	// расставляем флажки
	ПолныеПолномочия = Параметры.ИсходныеДанныеСтроки.ПризнакПолныеПолномочия;
	Если НЕ ПолныеПолномочия Тогда
		Для Каждого СтрПолномочие Из Полномочия Цикл
			СтрПолномочие.Пометка = Параметры.ИсходныеДанныеСтроки["Признак" + СтрПолномочие.Код];
		КонецЦикла;
	КонецЕсли;
	
	// устанавливаем в исходное значение переключатель "Полные полномочия"
	ПереключательПолныеПолномочия = ?(ПолныеПолномочия, "0", "1");
	
	// инициализируем КПП
	ЭтоПБОЮЛ = НЕ РегламентированнаяОтчетностьВызовСервера.ЭтоЮридическоеЛицо(Параметры.Организация);
	Элементы.КПП.Видимость = НЕ ЭтоПБОЮЛ;
	КПП = Параметры.ИсходныеДанныеСтроки.КПП;
	
	// инициализируем ОКАТО
	ОКАТО = Параметры.ИсходныеДанныеСтроки.ОКАТО;
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовШапкиФормы

&НаКлиенте
Процедура РеквизитПереключательПолныеПолномочияПриИзменении(Элемент)
	
	ПолныеПолномочия = ?(ПереключательПолныеПолномочия = "0", Истина, Ложь);
	УправлениеЭУ();
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура УстановитьФлажки(Команда)
	
	Для Каждого Стр Из Полномочия Цикл
		Стр.Пометка = Истина;
	КонецЦикла;
	
КонецПроцедуры

&НаКлиенте
Процедура СнятьФлажки(Команда)
	
	Для Каждого Стр Из Полномочия Цикл
		Стр.Пометка = Ложь;
	КонецЦикла;
	
КонецПроцедуры

&НаКлиенте
Процедура ДействиеОК(Команда)
	
	Если НЕ СохранениеВозможно() Тогда
		Возврат;
	КонецЕсли;
	
	Результат = Новый Структура;
	Результат.Вставить("ПризнакПолныеПолномочия", ?(ПереключательПолныеПолномочия = "0", Истина, Ложь));
	Результат.Вставить("ОКАТО", СокрЛП(ОКАТО));
	Результат.Вставить("КПП", СокрЛП(КПП));
	Для Каждого Стр Из Полномочия Цикл
		Результат.Вставить("Признак" + Стр.Код, ?(ПереключательПолныеПолномочия = "0", Ложь, Стр.Пометка));
	КонецЦикла;
	
	Закрыть(Результат);
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаКлиенте
Процедура УправлениеЭУ()
	
	Элементы.ГруппаТаблицаПолномочий.Доступность = НЕ ПолныеПолномочия;
	
КонецПроцедуры

&НаСервере
Процедура ОпределитьПолномочиеВТаблице(КодПолномочия, НаименованиеПолномочия)
	
	НовСтр = Полномочия.Добавить();
	НовСтр.Код = КодПолномочия;
	НовСтр.Наименование = НаименованиеПолномочия;
	
КонецПроцедуры

&НаКлиенте
Функция СохранениеВозможно()
	
	Отказ = Ложь;
	
	ОчиститьСообщения();
	
	// проверяем полномочия
	Если ПереключательПолныеПолномочия <> "0" Тогда
		СтрокиИстина = Полномочия.НайтиСтроки(Новый Структура("Пометка", Истина));
		Если СтрокиИстина.Количество() = 0 Тогда
			ОбщегоНазначенияКлиент.СообщитьПользователю(НСтр("ru = 'Не выбран ни один вид полномочия.'"), , "Полномочия", , Отказ);
		КонецЕсли;
	КонецЕсли;
	
	// проверяем ОКАТО
	СокрЛПОКАТО = СокрЛП(ОКАТО);
	Если СтрДлина(СокрЛПОКАТО) <> 0 И СтрДлина(СокрЛПОКАТО) <> 11 Тогда
		ОбщегоНазначенияКлиент.СообщитьПользователю(НСтр("ru = 'Число цифр в ОКАТО должно быть равно 11.'"), , "ОКАТО", , Отказ);
	ИначеЕсли НЕ СтроковыеФункцииКлиентСервер.ТолькоЦифрыВСтроке(СокрЛПОКАТО) Тогда
		ОбщегоНазначенияКлиент.СообщитьПользователю(НСтр("ru = 'ОКАТО должен состоять только из цифр.'"), , "ОКАТО", , Отказ);
	КонецЕсли;
	
	// проверяем КПП
	Если Элементы.КПП.Видимость Тогда
		СокрЛПКПП = СокрЛП(КПП);
		Если СтрДлина(СокрЛПКПП) <> 0 И СтрДлина(СокрЛПКПП) <> 9 Тогда
			ОбщегоНазначенияКлиент.СообщитьПользователю(НСтр("ru = 'Число цифр в КПП должно быть равно 9.'"), , "КПП", , Отказ);
		ИначеЕсли НЕ СтроковыеФункцииКлиентСервер.ТолькоЦифрыВСтроке(СокрЛПКПП) Тогда
			ОбщегоНазначенияКлиент.СообщитьПользователю(НСтр("ru = 'КПП должен состоять только из цифр.'"), , "КПП", , Отказ);
		КонецЕсли;
	КонецЕсли;
	
	Возврат НЕ Отказ;
	
КонецФункции

#КонецОбласти
