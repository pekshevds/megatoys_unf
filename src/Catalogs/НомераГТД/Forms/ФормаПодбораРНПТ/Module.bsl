
#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	// СтандартныеПодсистемы.ПодключаемыеКоманды
	ПодключаемыеКоманды.ПриСозданииНаСервере(ЭтотОбъект);
	// Конец СтандартныеПодсистемы.ПодключаемыеКоманды
	
	АдресТаблицыРНПТВХранилище = Параметры.АдресТаблицыРНПТВХранилище;
	ТаблицаРНПТ = ПолучитьИзВременногоХранилища(АдресТаблицыРНПТВХранилище);
	ИмяТаблицы = Параметры.ИмяТаблицы;
	ЭтоВозврат = Параметры.ЭтоВозврат;
	ЭтоПоступление = Параметры.ЭтоПоступление;
	
	Если Параметры.Свойство("ПрослеживаемыйКомплект") Тогда
		ЭтоКомплект = Параметры.ПрослеживаемыйКомплект;
	КонецЕсли;
	
	Если Параметры.Свойство("СуммаБезНДС") Тогда
		СуммаБезНДС = Параметры.СуммаБезНДС;
	КонецЕсли;
	
	Если Не ЭтоКомплект И Номенклатура.ПрослеживаемыйКомплект Тогда
		Отказ = Истина;
		ТекстСообщения = НСтр("ru = 'В строке выбран прослеживаемый комплект. Операция для данного документа не поддерживается. Выберите другую номенклатуру.'");
		ОбщегоНазначения.СообщитьПользователю(ТекстСообщения);
		Возврат;
	КонецЕсли;
	
	Количество = Параметры.Количество;
	Если Параметры.Свойство("ЕдиницаИзмерения")
		И ЗначениеЗаполнено(Параметры.ЕдиницаИзмерения)
		И ТипЗнч(Параметры.ЕдиницаИзмерения) = Тип("СправочникСсылка.ЕдиницыИзмерения") Тогда
		Коэффициент = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(Параметры.ЕдиницаИзмерения, "Коэффициент");
		Количество = Количество * Коэффициент;
	КонецЕсли; 
	
	Параметры.Свойство("Период", Период);
	Параметры.Свойство("Номенклатура", Номенклатура);
	Параметры.Свойство("Характеристика", Характеристика);
	Параметры.Свойство("Партия", Партия);
	Параметры.Свойство("Организация", Организация);
	Параметры.Свойство("СтранаПроисхождения", СтранаПроисхождения);
	Параметры.Свойство("Документ", Документ);
	Параметры.Свойство("Контрагент", Контрагент);
	Параметры.Свойство("ОткрыватьДляПросмотра", ОткрыватьДляПросмотра);
	
	// Заголовок
	ПараметрыНоменклатуры = Новый Структура;
	ПараметрыНоменклатуры.Вставить("ПредставлениеНоменклатуры", Номенклатура);
	ПараметрыНоменклатуры.Вставить("ПредставлениеХарактеристики", Характеристика);
	ПараметрыНоменклатуры.Вставить("ПредставлениеПартии", Партия);
	ПредставлениеНоменклатуры = ПечатьДокументовУНФ.ПредставлениеНоменклатуры(ПараметрыНоменклатуры);
	Заголовок = СтрШаблон(НСтр("ru = 'Подбор РНПТ: %1'"), ПредставлениеНоменклатуры);
	
	Остатки.Параметры.УстановитьЗначениеПараметра("Период",
		Новый Граница(КонецДня(Период), ВидГраницы.Включая));
	Остатки.Параметры.УстановитьЗначениеПараметра("Номенклатура", Номенклатура);
	Остатки.Параметры.УстановитьЗначениеПараметра("Характеристика", Характеристика);
	Остатки.Параметры.УстановитьЗначениеПараметра("Партия", Партия);
	Остатки.Параметры.УстановитьЗначениеПараметра("Организация", Организация);
	
	Если Не ЭтоКомплект Тогда
		Остатки.Параметры.УстановитьЗначениеПараметра("СтранаПроисхождения", СтранаПроисхождения);
	КонецЕсли;
	
	Если ЗначениеЗаполнено(Документ) Тогда
		Остатки.Параметры.УстановитьЗначениеПараметра("Документ", Документ);
	Иначе
		Остатки.Параметры.УстановитьЗначениеПараметра("Документ", Неопределено);
	КонецЕсли; 
	
	Подбор.Очистить();
	Подбор.Загрузить(ТаблицаРНПТ);
	
	ОбновитьЗапросСпискаОстатков(Параметры);
	
	КоличествоПодобрано = Подбор.Итог("Количество");
	
	Если ЭтоКомплект Тогда
		СуммаБезНДСПодбор = Подбор.Итог("Сумма");
	КонецЕсли;
	
	УправлениеФормой();

КонецПроцедуры

&НаКлиенте
Процедура ПередЗакрытием(Отказ, ЗавершениеРаботы, ТекстПредупреждения, СтандартнаяОбработка)
	
	ЕстьОшибки = Ложь;
	Если Подбор.Количество() <> 0
		И Модифицированность Тогда
		// BG весь кусок до конца
		Если Не ЭтоКомплект Тогда 
			
			Если КоличествоПодобрано > Количество Тогда
				ЕстьОшибки = Истина;
				ТекстСообщения = ОбщегоНазначенияКлиентСервер.ТекстОшибкиЗаполнения(
				"Список", 
				"Корректность",,,
				НСтр("ru = 'Подбор'"), 
				НСтр("ru = 'Подобранное количество РНПТ превышает количество, указанное в документе'"));
			ИначеЕсли КоличествоПодобрано < Количество Тогда
				ЕстьОшибки = Истина;
				ТекстСообщения = ОбщегоНазначенияКлиентСервер.ТекстОшибкиЗаполнения(
				"Список", 
				"Корректность",,,
				НСтр("ru = 'Подбор'"), 
				НСтр("ru = 'Подобранное количество РНПТ меньше количества, указанного в документе'"));
			КонецЕсли;

		КонецЕсли;
		
		НомерСтроки = 1;
		Если ЭтоКомплект И ПеренестиВДокумент Тогда
			
			Если СуммаБезНДС > 0 И Подбор.Итог("Сумма") > СуммаБезНДС Тогда
				ЕстьОшибки = Истина;
				СтрокаСообщения = НСтр("ru = 'Сумма без НДС подобранных комплектующих превышает сумму без НДС в строке документа.'");
				ОбщегоНазначенияКлиент.СообщитьПользователю(СтрокаСообщения);
			КонецЕсли;
			
			Для Каждого СтрокаТаблицы Из Подбор Цикл
				Префикс = "Подбор[%1].";
				Префикс = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
				Префикс, Формат(НомерСтроки - 1, "ЧН=0; ЧГ="));
				
				Если Не ЗначениеЗаполнено(СтрокаТаблицы.Номенклатура) Тогда
					ЕстьОшибки = Истина;
					ТекстСообщения = ОбщегоНазначенияКлиентСервер.ТекстОшибкиЗаполнения("Колонка",, НСтр("ru = 'Комплектующие'"),
					НомерСтроки, НСтр("ru = 'Подбор'"));
					Поле = Префикс + "Номенклатура";
					ОбщегоНазначенияКлиент.СообщитьПользователю(ТекстСообщения,, Поле,, Отказ);
				КонецЕсли;
				
				Если Не ЗначениеЗаполнено(СтрокаТаблицы.СтранаПроисхождения) И Не ЭтоПоступление Тогда
					ЕстьОшибки = Истина;
					ТекстСообщения = ОбщегоНазначенияКлиентСервер.ТекстОшибкиЗаполнения("Колонка",, НСтр("ru = 'Страна происхождения'"),
					НомерСтроки, НСтр("ru = 'Подбор'"));
					Поле = Префикс + "СтранаПроисхождения";
					ОбщегоНазначенияКлиент.СообщитьПользователю(ТекстСообщения,, Поле,, Отказ);
				КонецЕсли;
				
				Если Не ЗначениеЗаполнено(СтрокаТаблицы.Сумма) Тогда
					ЕстьОшибки = Истина;
					ТекстСообщения = ОбщегоНазначенияКлиентСервер.ТекстОшибкиЗаполнения("Колонка",, НСтр("ru = 'Сумма без НДС''"),
					НомерСтроки, НСтр("ru = 'Подбор'"));
					Поле = Префикс + "Сумма";
					ОбщегоНазначенияКлиент.СообщитьПользователю(ТекстСообщения,, Поле,, Отказ);
				КонецЕсли;
				
			КонецЦикла;
			
		КонецЕсли;
		
		Если ЕстьОшибки Тогда
			Если ПеренестиВДокумент Тогда
				ПеренестиВДокумент = Ложь;
				
				Если Не ЭтоКомплект Тогда
					ОбщегоНазначенияКлиент.СообщитьПользователю(ТекстСообщения,,"Подбор",,Отказ);
				Иначе
					Отказ = ЕстьОшибки;
				КонецЕсли;
				
			КонецЕсли;
		Иначе
			Если Не ПеренестиВДокумент Тогда
				ТекстВопроса = НСтр("ru = 'Подобранные РНПТ не перенесены в документ.
				|
				|Перенести?'");
				Оповещение = Новый ОписаниеОповещения("ВопросПеренестиВДокументЗавершение", ЭтотОбъект);
				ПоказатьВопрос(Оповещение, ТекстВопроса, РежимДиалогаВопрос.ДаНетОтмена);
			КонецЕсли;
			
		КонецЕсли;
		//
		
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ПриЗакрытии(ЗавершениеРаботы)
	
	СтруктураВозврата = ПриЗакрытииНаСервере();
	
	Если ПеренестиВДокумент Тогда
		ОповеститьОВыборе(СтруктураВозврата);
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Функция ПриЗакрытииНаСервере()
	
	СтруктураВозврата = Новый Структура();
	
	Если ПеренестиВДокумент Тогда
		АдресТаблицыРНПТВХранилище = ПоместитьРНПТВХранилище();
		СтруктураВозврата.Вставить("АдресТаблицыРНПТВХранилище", АдресТаблицыРНПТВХранилище);
	КонецЕсли;
	
	Возврат СтруктураВозврата;
	
КонецФункции

#КонецОбласти

#Область ОбработчикиСобытийЭлементовШапкиФормы

&НаКлиенте
Процедура ПоказыватьТолькоОстаткиПриИзменении(Элемент)
	
	УстановитьЗначениеПараметраПоказыватьТолькоОстатки(ЭтаФорма);
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовТаблицыФормыОстатки

&НаКлиенте
Процедура ОстаткиВыбор(Элемент, ВыбраннаяСтрока, Поле, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	
	СтрокаПодбора = Элемент.ТекущиеДанные;
	
	Если СтрокаПодбора = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	ДобавитьСтроки(ОбщегоНазначенияКлиентСервер.ЗначениеВМассиве(СтрокаПодбора));
	
	Модифицированность = Истина;
	
КонецПроцедуры

&НаКлиенте
Процедура ОстаткиВыборЗначения(Элемент, Значение, СтандартнаяОбработка)
	
	Если Элемент.ВыделенныеСтроки.Количество() = 1 Тогда
		ОстаткиВыбор(Элемент, Значение, , СтандартнаяОбработка);
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ОстаткиНачалоПеретаскивания(Элемент, ПараметрыПеретаскивания, Выполнение)
	
	Структура = Новый Структура;
	Структура.Вставить("Строки", ВыделенныеСтрокиОстатков());
	ПараметрыПеретаскивания.Значение = Структура;
	
	ПараметрыПеретаскивания.ДопустимыеДействия = ДопустимыеДействияПеретаскивания.Копирование;
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовТаблицыФормыПодбор

&НаКлиенте
Процедура ПодборПриИзменении(Элемент)
	
	КоличествоПодобрано = Подбор.Итог("Количество");
	
	Если ЭтоКомплект Тогда
		СуммаБезНДСПодбор = Подбор.Итог("Сумма"); //BG
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ПодборПроверкаПеретаскивания(Элемент, ПараметрыПеретаскивания, СтандартнаяОбработка, Строка, Поле)
	
	СтандартнаяОбработка = Ложь;
	
	Если ТипЗнч(ПараметрыПеретаскивания.Значение) <> Тип("Структура")
		ИЛИ НЕ ПараметрыПеретаскивания.Значение.Свойство("Строки") Тогда
		ПараметрыПеретаскивания.Действие = ДействиеПеретаскивания.Отмена;
		Возврат;
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ПодборПеретаскивание(Элемент, ПараметрыПеретаскивания, СтандартнаяОбработка, Строка, Поле)
	
	ДобавитьСтроки(ПараметрыПеретаскивания.Значение.Строки);	
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура ПеренестиВДокумент(Команда)
	
	ПеренестиВДокумент = НЕ ЭтаФорма.ТолькоПросмотр;
	Закрыть(КодВозвратаДиалога.OK);

КонецПроцедуры

&НаКлиенте
Процедура Заполнить(Команда)
	
	ЗаполнитьСервер();
	
КонецПроцедуры

&НаСервере
Процедура ЗаполнитьСервер()
	
	Подбор.Очистить();
	ОсталосьПодобрать = Количество;
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("Период", Новый Граница(КонецДня(Период), ВидГраницы.Включая));
	Запрос.УстановитьПараметр("Номенклатура", Номенклатура);
	Запрос.УстановитьПараметр("Характеристика", Характеристика);
	Запрос.УстановитьПараметр("Партия", Партия);
	Запрос.УстановитьПараметр("Организация", Организация);
	Запрос.УстановитьПараметр("СтранаПроисхождения", СтранаПроисхождения);
	Если ЗначениеЗаполнено(Документ) Тогда
		Запрос.УстановитьПараметр("Документ", Документ);
	Иначе
		Запрос.УстановитьПараметр("Документ", Неопределено);
	КонецЕсли; 
	Запрос.Текст =  //BG
	"ВЫБРАТЬ
	|	ПрослеживаемыеТоварыОстатки.РНПТ КАК РНПТ,
	|	ПрослеживаемыеТоварыОстатки.КоличествоОстаток КАК КоличествоОстаток,
	|	ПрослеживаемыеТоварыОстатки.КоличествоПрослеживаемостиОстаток КАК КоличествоПрослеживаемостиОстаток,
	|	ПрослеживаемыеТоварыОстатки.Комплектующие КАК Комплектующие,
	|	ПрослеживаемыеТоварыОстатки.СтранаПроисхождения КАК СтранаПроисхождения
	|ПОМЕСТИТЬ ОстаткиРНПТ
	|ИЗ
	|	РегистрНакопления.ПрослеживаемыеТовары.Остатки(
	|			&Период,
	|			Организация = &Организация
	|				И СтранаПроисхождения = &СтранаПроисхождения
	|				И Номенклатура = &Номенклатура
	|				И Характеристика = &Характеристика
	|				И Партия = &Партия) КАК ПрослеживаемыеТоварыОстатки
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ПрослеживаемыеТовары.РНПТ,
	|	ВЫБОР
	|		КОГДА ПрослеживаемыеТовары.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход)
	|			ТОГДА ПрослеживаемыеТовары.Количество
	|		ИНАЧЕ -ПрослеживаемыеТовары.Количество
	|	КОНЕЦ,
	|	ВЫБОР
	|		КОГДА ПрослеживаемыеТовары.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход)
	|			ТОГДА ПрослеживаемыеТовары.КоличествоПрослеживаемости
	|		ИНАЧЕ -ПрослеживаемыеТовары.КоличествоПрослеживаемости
	|	КОНЕЦ,
	|	ПрослеживаемыеТовары.Комплектующие,
	|	ПрослеживаемыеТовары.СтранаПроисхождения
	|ИЗ
	|	РегистрНакопления.ПрослеживаемыеТовары КАК ПрослеживаемыеТовары
	|ГДЕ
	|	&Документ <> НЕОПРЕДЕЛЕНО
	|	И ПрослеживаемыеТовары.Регистратор = &Документ
	|	И ПрослеживаемыеТовары.Организация = &Организация
	|	И ПрослеживаемыеТовары.СтранаПроисхождения = &СтранаПроисхождения
	|	И ПрослеживаемыеТовары.Партия = &Партия
	|	И ПрослеживаемыеТовары.Номенклатура = &Номенклатура
	|	И ПрослеживаемыеТовары.Характеристика = &Характеристика
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ОстаткиРНПТ.РНПТ КАК РНПТ,
	|	СУММА(ЕСТЬNULL(ОстаткиРНПТ.КоличествоОстаток, 0)) КАК Количество,
	|	СУММА(ЕСТЬNULL(ОстаткиРНПТ.КоличествоПрослеживаемостиОстаток, 0)) КАК КоличествоПрослеживаемости,
	|	ОстаткиРНПТ.Комплектующие КАК Номенклатура,
	|	ОстаткиРНПТ.СтранаПроисхождения КАК СтранаПроисхождения
	|ИЗ
	|	ОстаткиРНПТ КАК ОстаткиРНПТ
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.СвойстваРНПТ КАК СвойстваРНПТ
	|		ПО ОстаткиРНПТ.РНПТ = СвойстваРНПТ.РНПТ
	|			И (СвойстваРНПТ.Организация = &Организация)
	|
	|СГРУППИРОВАТЬ ПО
	|	ОстаткиРНПТ.РНПТ,
	|	ЕСТЬNULL(СвойстваРНПТ.ДатаПоступления, ДАТАВРЕМЯ(1, 1, 1)),
	|	ОстаткиРНПТ.Комплектующие,
	|	ОстаткиРНПТ.СтранаПроисхождения
	|
	|УПОРЯДОЧИТЬ ПО
	|	ЕСТЬNULL(СвойстваРНПТ.ДатаПоступления, ДАТАВРЕМЯ(1, 1, 1))";
	Выборка = Запрос.Выполнить().Выбрать();
	Пока Выборка.Следующий() Цикл
		МинКоличество = Мин(Выборка.Количество, ОсталосьПодобрать);
		Если МинКоличество <= 0 Тогда
			Продолжить;
		КонецЕсли; 
		НоваяСтрока = Подбор.Добавить();
		НоваяСтрока.РНПТ = Выборка.РНПТ;
		НоваяСтрока.Количество = МинКоличество;
		Если МинКоличество = Выборка.Количество Тогда
			НоваяСтрока.КоличествоПрослеживаемости = Выборка.КоличествоПрослеживаемости;
		Иначе
			НоваяСтрока.КоличествоПрослеживаемости = Выборка.КоличествоПрослеживаемости * МинКоличество / Выборка.Количество;
		КонецЕсли;
		ОсталосьПодобрать = ОсталосьПодобрать - МинКоличество;
		
		Если ЭтоКомплект Тогда //BG
			НоваяСтрока.Номенклатура = Выборка.Номенклатура;
			НоваяСтрока.СтранаПроисхождения = Выборка.СтранаПроисхождения;
		КонецЕсли;
		
	КонецЦикла;
	КоличествоПодобрано = Подбор.Итог("Количество");
	
	Если ОсталосьПодобрать > 0 Тогда
		ТекстСообщения = ОбщегоНазначенияКлиентСервер.ТекстОшибкиЗаполнения(
		"Список", 
		"Корректность",,,
		НСтр("ru = 'Подбор'"), 
		НСтр("ru = 'Недостаточно остатков РНПТ для заполнения документа'"));
		ОбщегоНазначения.СообщитьПользователю(ТекстСообщения, , "Подбор");
	КонецЕсли; 
	
КонецПроцедуры

&НаКлиенте
Процедура ВыбратьРНПТ(Команда)
	
	ДобавитьСтроки(ВыделенныеСтрокиОстатков());	
	
КонецПроцедуры

&НаКлиенте
Процедура УбратьРНПТ(Команда)
	
	Идентификаторы = ОбщегоНазначенияКлиент.СкопироватьРекурсивно(Элементы.Подбор.ВыделенныеСтроки);
	Для каждого Идентификатор Из Идентификаторы Цикл
		СтрокаПодбора = Подбор.НайтиПоИдентификатору(Идентификатор);
		Подбор.Удалить(СтрокаПодбора);
	КонецЦикла; 	
	
КонецПроцедуры

&НаКлиенте
Процедура НовыйРНПТ(Команда)
	
	ОткрытьФорму("Справочник.НомераГТД.ФормаОбъекта");	
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаСервере
Процедура УправлениеФормой()
	
	ЭтоПриходная = (Параметры.ЭтоПоступление И НЕ Параметры.ЭтоВозврат);
	Элементы.ГруппаОстатки.Видимость = НЕ ОткрыватьДляПросмотра;
	Элементы.ГруппаСтрелки.Видимость = НЕ ОткрыватьДляПросмотра;
	Элементы.НовыйРНПТ.Видимость = ЭтоПриходная;
	Элементы.ГруппаПоказыватьОстатки.Видимость = НЕ ОткрыватьДляПросмотра И НЕ ЭтоПриходная;
	Элементы.ОстаткиКоличество.Видимость = НЕ ЭтоПриходная;
	Элементы.ОстаткиКоличествоПрослеживаемости.Видимость = НЕ ЭтоПриходная;
	ЭтаФорма.ТолькоПросмотр = ОткрыватьДляПросмотра;
	
	Порядок = Остатки.Порядок.Элементы.Добавить(Тип("ЭлементПорядкаКомпоновкиДанных"));
	Порядок.Поле = Новый ПолеКомпоновкиДанных("Период");
	
	Если ТипЗнч(Документ) <> Тип("ДокументСсылка.КорректировкаРеализации")
		И ТипЗнч(Документ) <> Тип("ДокументСсылка.КорректировкаПоступления") Тогда
		Элементы.ОстаткиГруппаКоличествоДоИзменения.Видимость = Ложь;
		Если НЕ ЭтоВозврат Тогда
			Элементы.Период.Заголовок = НСтр("ru = 'Дата поступления'");
			Порядок.ТипУпорядочивания = НаправлениеСортировкиКомпоновкиДанных.Возр;
		ИначеЕсли ЭтоПоступление Тогда 
			Элементы.Период.Заголовок = НСтр("ru = 'Дата отгрузки'");
			Порядок.ТипУпорядочивания = НаправлениеСортировкиКомпоновкиДанных.Убыв;
		Иначе 
			Элементы.Период.Заголовок = НСтр("ru = 'Дата поступления'");
			Порядок.ТипУпорядочивания = НаправлениеСортировкиКомпоновкиДанных.Убыв;
		КонецЕсли;
	КонецЕсли; 
	
	Если ОткрыватьДляПросмотра Тогда
		Элементы.ПеренестиВДокумент.Заголовок = НСтр("ru = 'ОК'");
	КонецЕсли;
	
	ПоказыватьТолькоОстатки = Истина;
	Если Параметры.ЭтоПоступление И НЕ Параметры.ЭтоВозврат Тогда
		ПоказыватьТолькоОстатки = Ложь;
	КонецЕсли; 
	
	Элементы.ГруппаКомплекты.Видимость  = ЭтоКомплект;
	Элементы.ПодборГруппаКомплекты.Видимость  = ЭтоКомплект;
	Элементы.ПодборСуммаБезНДС.Видимость  = ЭтоКомплект;
	Элементы.Итоги.Видимость  = Не ЭтоКомплект;
	Элементы.ИтогиКомплекты.Видимость = ЭтоКомплект;
	Элементы.ПодборСтранаПроисхождения.Видимость  = Не ЭтоПоступление;
	Элементы.СтранаПроисхождения.Видимость  = Не ЭтоПоступление;
	
	Если ЭтоКомплект Тогда
		Элементы.ГруппаКолонки.Группировка = ГруппировкаПодчиненныхЭлементовФормы.Вертикальная;
		Элементы.ГруппаСтрелки.Видимость = Ложь;
		Элементы.Заполнить.Видимость = Ложь;
		Элементы.ГруппаСтрелкиВертикальные.Видимость = НЕ ОткрыватьДляПросмотра;
	Иначе
		Элементы.ГруппаСтрелкиВертикальные.Видимость = Ложь;
		Элементы.Заполнить.Видимость  = НЕ ОткрыватьДляПросмотра И НЕ ЭтоПриходная;
	КонецЕсли;
	
	УстановитьЗначениеПараметраПоказыватьТолькоОстатки(ЭтотОбъект);
	УстановитьУсловноеОформление();
	
КонецПроцедуры

&НаСервере
Процедура ОбновитьЗапросСпискаОстатков(Параметры)
	
	Элементы.КоличествоДоИзменения.Заголовок = НСтр("ru = 'До изменения'");
	Элементы.ОстаткиКоличество.Заголовок = НСтр("ru = 'Остаток'");
	Элементы.ПодборКоличество.Заголовок = НСтр("ru = 'Количество'");
	Элементы.КоличествоПрослеживаемостиДоИзменения.Заголовок = НСтр("ru = 'По прослеживаемости'");
	Элементы.ОстаткиКоличествоПрослеживаемости.Заголовок = НСтр("ru = 'По прослеживаемости'");
	Элементы.ПодборКоличествоПрослеживаемости.Заголовок = НСтр("ru = 'По прослеживаемости'");
	
	Если ЭтоВозврат И ЭтоПоступление Тогда
		// Возврат от покупателя
		Остатки.ТекстЗапроса = ТекстЗапросаВозвратОтПокупателя();
		Если Параметры.Свойство("ДокументОснование")
			И ЗначениеЗаполнено(Параметры.ДокументОснование)
			И (ТипЗнч(Параметры.ДокументОснование) = Тип("ДокументСсылка.РасходнаяНакладная")
			ИЛИ ТипЗнч(Параметры.ДокументОснование) = Тип("ДокументСсылка.ОтчетОРозничныхПродажах")) Тогда
			Остатки.Параметры.УстановитьЗначениеПараметра("ДокументПродажи", Параметры.ДокументОснование);
		Иначе
			Остатки.Параметры.УстановитьЗначениеПараметра("ДокументПродажи", Неопределено);
		КонецЕсли;
		Элементы.ОстаткиКоличество.Заголовок = НСтр("ru = 'Отгружено'");
	ИначеЕсли ЭтоВозврат И НЕ ЭтоПоступление Тогда
		// Возврат поставщику
		Остатки.ТекстЗапроса = ТекстЗапросаВозвратПоставщику();
		Если Параметры.Свойство("ДокументОснование")
			И ЗначениеЗаполнено(Параметры.ДокументОснование)
			И ТипЗнч(Параметры.ДокументОснование) = Тип("ДокументСсылка.ПриходнаяНакладная") Тогда
			Остатки.Параметры.УстановитьЗначениеПараметра("ДокументПоступления", Параметры.ДокументОснование);
		Иначе
			Остатки.Параметры.УстановитьЗначениеПараметра("ДокументПоступления", Неопределено);
		КонецЕсли;
		Элементы.ОстаткиКоличество.Заголовок = НСтр("ru = 'Поступило'");
	ИначеЕсли ТипЗнч(Документ) = Тип("ДокументСсылка.КорректировкаРеализации")
		ИЛИ ТипЗнч(Документ) = Тип("ДокументСсылка.КорректировкаПоступления") Тогда
		Остатки.ТекстЗапроса = ТекстЗапросаКорректировка();
		ДокументОснование = ПрослеживаемостьФормыВызовСервераУНФ.ИсходныйДокументРекурсивно(Документ);
		Остатки.Параметры.УстановитьЗначениеПараметра("КорректируемыйДокумент", ДокументОснование);
	КонецЕсли;
	
	Если ЭтоВозврат Тогда
		Остатки.Параметры.УстановитьЗначениеПараметра("ДатаТекущегоДокумента", Период);
		Остатки.Параметры.УстановитьЗначениеПараметра("Контрагент", Контрагент);
	КонецЕсли;
	
	Если ЭтоКомплект Тогда
		Остатки.ТекстЗапроса = СтрЗаменить(Остатки.ТекстЗапроса, "И СтранаПроисхождения = &СтранаПроисхождения","");
		Остатки.ТекстЗапроса = СтрЗаменить(Остатки.ТекстЗапроса, "И ПрослеживаемыеТовары.СтранаПроисхождения = &СтранаПроисхождения","");
		Остатки.ТекстЗапроса = СтрЗаменить(Остатки.ТекстЗапроса, "И РеализованныеТовары.СтранаПроисхождения = &СтранаПроисхождения","");
		Остатки.ТекстЗапроса = СтрЗаменить(Остатки.ТекстЗапроса, "И ПоступившиеТовары.СтранаПроисхождения = &СтранаПроисхождения","");
		Остатки.ТекстЗапроса = СтрЗаменить(Остатки.ТекстЗапроса, "И ВозвращенныеТовары.СтранаПроисхождения = &СтранаПроисхождения","");
	КонецЕсли;
	
	ИспользуемыеЕдиницы = ЕдиницыНоменклатуры(Параметры.Номенклатура);
	РазныеЕдиницыИзмерения = ИспользуемыеЕдиницы.РазныеЕдиницы;
	Если ИспользуемыеЕдиницы.РазныеЕдиницы Тогда
		ДобавитьЕдиницуВЗаголовок(Элементы.КоличествоДоИзменения, ИспользуемыеЕдиницы.Единица);
		ДобавитьЕдиницуВЗаголовок(Элементы.ОстаткиКоличество, ИспользуемыеЕдиницы.Единица);
		ДобавитьЕдиницуВЗаголовок(Элементы.ПодборКоличество, ИспользуемыеЕдиницы.Единица);
		ДобавитьЕдиницуВЗаголовок(Элементы.КоличествоПрослеживаемостиДоИзменения, ИспользуемыеЕдиницы.ЕдиницаПрослеживаемости);
		ДобавитьЕдиницуВЗаголовок(Элементы.ОстаткиКоличествоПрослеживаемости, ИспользуемыеЕдиницы.ЕдиницаПрослеживаемости);
		ДобавитьЕдиницуВЗаголовок(Элементы.ПодборКоличествоПрослеживаемости, ИспользуемыеЕдиницы.ЕдиницаПрослеживаемости);
	КонецЕсли; 
	
КонецПроцедуры

&НаСервереБезКонтекста
Функция ЕдиницыНоменклатуры(Номенклатура)
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("Номенклатура", Номенклатура);
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	Номенклатура.ЕдиницаИзмерения КАК Единица,
	|	Номенклатура.ТоварнаяНоменклатураВЭД.ЕдиницаИзмерения КАК ЕдиницаПрослеживаемости
	|ИЗ
	|	Справочник.Номенклатура КАК Номенклатура
	|ГДЕ
	|	Номенклатура.Ссылка = &Номенклатура";
	Выборка = Запрос.Выполнить().Выбрать();
	Результат = Новый Структура;
	Если Выборка.Следующий() Тогда
		Результат.Вставить("Единица", Выборка.Единица);
		Результат.Вставить("ЕдиницаПрослеживаемости", Выборка.ЕдиницаПрослеживаемости);
		Результат.Вставить("РазныеЕдиницы", Выборка.Единица <> Выборка.ЕдиницаПрослеживаемости);
	Иначе
		Результат.Вставить("РазныеЕдиницы", Ложь);
	КонецЕсли;
	Возврат Результат;
	
КонецФункции

&НаСервере
Процедура ДобавитьЕдиницуВЗаголовок(Элемент, Единица)
	
	Шаблон = НСтр("ru = '%1 (%2)'");
	Элемент.Заголовок = СтрШаблон(Шаблон, Элемент.Заголовок, Единица);
	
КонецПроцедуры

&НаКлиенте
Функция ВыделенныеСтрокиОстатков()
		
	МассивСтрок = Новый Массив;
	Для каждого РНПТ Из Элементы.Остатки.ВыделенныеСтроки Цикл
		СтрокаОстаток = Элементы.Остатки.ДанныеСтроки(РНПТ);
		МассивСтрок.Добавить(СтрокаОстаток);
	КонецЦикла;
	Возврат МассивСтрок;
	
КонецФункции

&НаКлиенте
Процедура ДобавитьСтроки(МассивСтрок)
	
	Для каждого СтрокаПодбора Из МассивСтрок Цикл
		
		Индекс = МассивСтрок.Найти(СтрокаПодбора);
		КоличествоПодобрано = Подбор.Итог("Количество");
		
		Если НЕ ЭтоКомплект И СтрокаПодбора.Количество + КоличествоПодобрано > Количество Тогда
		
			КоличествоСкорректированное = Количество - КоличествоПодобрано;
			
			Если КоличествоСкорректированное <= 0 Тогда
				ТекстСообщения = НСтр("ru='Все РНПТ подобраны.'");
				ПоказатьОповещениеПользователя(ТекстСообщения);
				Возврат;
			КонецЕсли;
			
			СтрокиСРНПТ = Подбор.НайтиСтроки(Новый Структура("РНПТ", СтрокаПодбора.РНПТ));
			Если СтрокиСРНПТ.Количество() = 0 Тогда
				НоваяСтрока = Подбор.Добавить();
				ЗаполнитьЗначенияСвойств(НоваяСтрока, СтрокаПодбора);
				НоваяСтрока.Количество = КоличествоСкорректированное;
				НоваяСтрока.Номенклатура = СтрокаПодбора.Комплектующие;
				НоваяСтрока.КоличествоПрослеживаемости = КоличествоПрослеживаемости(
					СтрокаПодбора.Количество, СтрокаПодбора.КоличествоПрослеживаемости, КоличествоСкорректированное);
			Иначе
				СтрокиСРНПТ[0].Количество = СтрокиСРНПТ[0].Количество + КоличествоСкорректированное;
				СтрокиСРНПТ[0].КоличествоПрослеживаемости = СтрокиСРНПТ[0].КоличествоПрослеживаемости + КоличествоПрослеживаемости(
					СтрокаПодбора.Количество, СтрокаПодбора.КоличествоПрослеживаемости, КоличествоСкорректированное);
			КонецЕсли;
			
		Иначе
			
			СтрокиСРНПТ = Подбор.НайтиСтроки(Новый Структура("РНПТ", СтрокаПодбора.РНПТ));
			
			Если СтрокиСРНПТ.Количество() = 0 Тогда
				НоваяСтрока = Подбор.Добавить();
				ЗаполнитьЗначенияСвойств(НоваяСтрока, СтрокаПодбора);
				
				Если ЭтоКомплект И НоваяСтрока.Количество > 1 Тогда
					НоваяСтрока.Количество = 1;
				КонецЕсли;
				
				НоваяСтрока.Номенклатура = СтрокаПодбора.Комплектующие;
				Если ЭтоПоступление Тогда
					НоваяСтрока.СтранаПроисхождения = Неопределено
				КонецЕсли;
				
			Иначе
				Если ЭтоКомплект И СтрокаПодбора.Количество > 1 Тогда
					СтрокиСРНПТ[0].Количество = СтрокиСРНПТ[0].Количество + 1;
					СтрокиСРНПТ[0].КоличествоПрослеживаемости = СтрокиСРНПТ[0].КоличествоПрослеживаемости + 1;
				Иначе
					СтрокиСРНПТ[0].Количество = СтрокиСРНПТ[0].Количество + СтрокаПодбора.Количество;
					СтрокиСРНПТ[0].КоличествоПрослеживаемости = СтрокиСРНПТ[0].КоличествоПрослеживаемости + СтрокаПодбора.КоличествоПрослеживаемости;
				КонецЕсли;
			КонецЕсли;
			
			СуммаБезНДСПодбор = Подбор.Итог("Сумма");
			
		КонецЕсли;
		
	КонецЦикла; 
	
	КоличествоПодобрано = Подбор.Итог("Количество");
	
КонецПроцедуры

&НаСервере
Функция КоличествоПрослеживаемости(ОстатокВУчете, ОстатокВПрослеживаемости, ПодобранноеКоличество)
	
	МассивКоэффициентов = Новый Массив;
	МассивКоэффициентов.Добавить(ОстатокВУчете - ПодобранноеКоличество);
	МассивКоэффициентов.Добавить(ПодобранноеКоличество);
	МассивСумм = ОбщегоНазначения.РаспределитьСуммуПропорциональноКоэффициентам(
		ОстатокВПрослеживаемости, МассивКоэффициентов, 11);
	
	Возврат МассивСумм[1];
	
КонецФункции

&НаСервере
Функция ПоместитьРНПТВХранилище()
	
	Если НЕ РазныеЕдиницыИзмерения Тогда
		Для Каждого СтрокаРНПТ Из Подбор Цикл
			СтрокаРНПТ.КоличествоПрослеживаемости = СтрокаРНПТ.Количество;
		КонецЦикла;
	КонецЕсли;
	
	ТаблицаРНПТ = Подбор.Выгрузить();
	АдресТаблицыРНПТВХранилище = ПоместитьВоВременноеХранилище(ТаблицаРНПТ, УникальныйИдентификатор);
	
	Возврат АдресТаблицыРНПТВХранилище;
	
КонецФункции

&НаСервере
Процедура УстановитьУсловноеОформление()
	
	УсловноеОформление.Элементы.Очистить();
	
	// КоличествоПрослеживаемости в остатках
	ЭлементУО = УсловноеОформление.Элементы.Добавить();
	КомпоновкаДанныхКлиентСервер.ДобавитьОформляемоеПоле(ЭлементУО.Поля, "ОстаткиКоличествоПрослеживаемости");
	КомпоновкаДанныхКлиентСервер.ДобавитьОформляемоеПоле(ЭлементУО.Поля, "КоличествоПрослеживаемостиДоИзменения");
	
	ОбщегоНазначенияКлиентСервер.ДобавитьЭлементКомпоновки(ЭлементУО.Отбор,
		"РазныеЕдиницыИзмерения", ВидСравненияКомпоновкиДанных.Равно, Ложь);
	
	ЭлементУО.Оформление.УстановитьЗначениеПараметра("Видимость", Ложь);
	
	// КоличествоПрослеживаемости в подборе
	ЭлементУО = УсловноеОформление.Элементы.Добавить();
	КомпоновкаДанныхКлиентСервер.ДобавитьОформляемоеПоле(ЭлементУО.Поля, "ПодборКоличествоПрослеживаемости");
	
	ОбщегоНазначенияКлиентСервер.ДобавитьЭлементКомпоновки(ЭлементУО.Отбор,
		"РазныеЕдиницыИзмерения", ВидСравненияКомпоновкиДанных.Равно, Ложь);
	
	ЭлементУО.Оформление.УстановитьЗначениеПараметра("Видимость", Ложь);
	
КонецПроцедуры

&НаКлиентеНаСервереБезКонтекста
Процедура УстановитьЗначениеПараметраПоказыватьТолькоОстатки(Форма)

	ОбщегоНазначенияКлиентСервер.УдалитьЭлементыГруппыОтбора(
		Форма.Остатки.КомпоновщикНастроек.Настройки.Отбор, 
		"Количество");
	ОбщегоНазначенияКлиентСервер.УстановитьЭлементОтбора(
		Форма.Остатки.КомпоновщикНастроек.Настройки.Отбор, 
		"Количество", 
		0, 
		ВидСравненияКомпоновкиДанных.Больше, 
		РежимОтображенияЭлементаНастройкиКомпоновкиДанных.БыстрыйДоступ, 
		Форма.ПоказыватьТолькоОстатки); 

КонецПроцедуры

&НаКлиенте
Процедура ВопросПеренестиВДокументЗавершение(ОтветНаВопрос, ДополнительныеПараметры) Экспорт
	
	Если ОтветНаВопрос = КодВозвратаДиалога.Да Тогда
		ПеренестиВДокумент = Истина;
		Закрыть();
	ИначеЕсли ОтветНаВопрос = КодВозвратаДиалога.Нет Тогда
		ПеренестиВДокумент = Ложь;
		Закрыть();
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Функция ТекстЗапросаВозвратОтПокупателя()
	
	Возврат 
	"ВЫБРАТЬ
	|	РеализованныеТовары.Период КАК Период,
	|	РеализованныеТовары.Организация КАК Организация,
	|	РеализованныеТовары.Номенклатура КАК Номенклатура,
	|	РеализованныеТовары.СтранаПроисхождения КАК СтранаПроисхождения,
	|	РеализованныеТовары.Количество КАК Количество,
	|	РеализованныеТовары.КоличествоПрослеживаемости КАК КоличествоПрослеживаемости,
	|	РеализованныеТовары.РНПТ КАК РНПТ,
	|	РеализованныеТовары.Комплектующие КАК Комплектующие
	|ПОМЕСТИТЬ РеализованныеТовары
	|ИЗ
	|	РегистрНакопления.ПрослеживаемыеТовары КАК РеализованныеТовары
	|ГДЕ
	|	РеализованныеТовары.Период < &ДатаТекущегоДокумента
	|	И РеализованныеТовары.Организация = &Организация
	|	И РеализованныеТовары.СтранаПроисхождения = &СтранаПроисхождения
	|	И РеализованныеТовары.Партия = &Партия
	|	И РеализованныеТовары.Номенклатура = &Номенклатура
	|	И РеализованныеТовары.Характеристика = &Характеристика
	|	И РеализованныеТовары.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход)
	|	И (РеализованныеТовары.Контрагент = &Контрагент
	|			ИЛИ &Контрагент = ЗНАЧЕНИЕ(Справочник.Контрагенты.ПустаяСсылка))
	|	И РеализованныеТовары.Регистратор ССЫЛКА Документ.РасходнаяНакладная
	|	И (РеализованныеТовары.Регистратор = &ДокументПродажи
	|			ИЛИ &ДокументПродажи = НЕОПРЕДЕЛЕНО)
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ДАТАВРЕМЯ(1, 1, 1),
	|	ВозвращенныеТовары.Организация,
	|	ВозвращенныеТовары.Номенклатура,
	|	ВозвращенныеТовары.СтранаПроисхождения,
	|	ВЫБОР
	|		КОГДА ВозвращенныеТовары.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход)
	|			ТОГДА ВозвращенныеТовары.Количество
	|		ИНАЧЕ -ВозвращенныеТовары.Количество
	|	КОНЕЦ,
	|	ВЫБОР
	|		КОГДА ВозвращенныеТовары.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход)
	|			ТОГДА ВозвращенныеТовары.КоличествоПрослеживаемости
	|		ИНАЧЕ -ВозвращенныеТовары.КоличествоПрослеживаемости
	|	КОНЕЦ,
	|	ВозвращенныеТовары.РНПТ,
	|	ВозвращенныеТовары.Комплектующие
	|ИЗ
	|	РегистрНакопления.ПрослеживаемыеТовары КАК ВозвращенныеТовары
	|ГДЕ
	|	ВозвращенныеТовары.Организация = &Организация
	|	И ВозвращенныеТовары.СтранаПроисхождения = &СтранаПроисхождения
	|	И ВозвращенныеТовары.Партия = &Партия
	|	И ВозвращенныеТовары.Номенклатура = &Номенклатура
	|	И ВозвращенныеТовары.Характеристика = &Характеристика
	|	И (ВозвращенныеТовары.Контрагент = &Контрагент
	|			ИЛИ &Контрагент = ЗНАЧЕНИЕ(Справочник.Контрагенты.ПустаяСсылка))
	|	И (ВозвращенныеТовары.Регистратор ССЫЛКА Документ.ПриходнаяНакладная
	|			ИЛИ ВозвращенныеТовары.Регистратор ССЫЛКА Документ.КорректировкаРеализации)
	|	И ВозвращенныеТовары.Регистратор <> &Документ
	|	И (ВозвращенныеТовары.КорректируемыйДокумент = &ДокументПродажи
	|			ИЛИ &ДокументПродажи = НЕОПРЕДЕЛЕНО)
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	СправочникНомераГТД.Ссылка КАК РНПТ,
	|	ЕСТЬNULL(ПрослеживаемыеТоварыОстатки.Организация, ЗНАЧЕНИЕ(Справочник.Организации.ПустаяСсылка)) КАК Организация,
	|	ЕСТЬNULL(ПрослеживаемыеТоварыОстатки.СтранаПроисхождения, ЗНАЧЕНИЕ(Справочник.СтраныМира.ПустаяСсылка)) КАК СтранаПроисхождения,
	|	ЕСТЬNULL(ПрослеживаемыеТоварыОстатки.Номенклатура, ЗНАЧЕНИЕ(Справочник.Номенклатура.ПустаяСсылка)) КАК Номенклатура,
	|	ЕСТЬNULL(ПрослеживаемыеТоварыОстатки.Количество, 0) КАК Количество,
	|	ЕСТЬNULL(ПрослеживаемыеТоварыОстатки.КоличествоПрослеживаемости, 0) КАК КоличествоПрослеживаемости,
	|	0 КАК КоличествоДоИзменения,
	|	0 КАК КоличествоПрослеживаемостиДоИзменения,
	|	ЕСТЬNULL(ПрослеживаемыеТоварыОстатки.Период, ДАТАВРЕМЯ(1, 1, 1)) КАК Период,
	|	ПрослеживаемыеТоварыОстатки.Комплектующие КАК Комплектующие
	|ИЗ
	|	Справочник.НомераГТД КАК СправочникНомераГТД
	|		ЛЕВОЕ СОЕДИНЕНИЕ (ВЫБРАТЬ
	|			РеализованныеТовары.РНПТ КАК РНПТ,
	|			РеализованныеТовары.Организация КАК Организация,
	|			РеализованныеТовары.СтранаПроисхождения КАК СтранаПроисхождения,
	|			РеализованныеТовары.Номенклатура КАК Номенклатура,
	|			МАКСИМУМ(РеализованныеТовары.Период) КАК Период,
	|			СУММА(РеализованныеТовары.Количество) КАК Количество,
	|			СУММА(РеализованныеТовары.КоличествоПрослеживаемости) КАК КоличествоПрослеживаемости,
	|			РеализованныеТовары.Комплектующие КАК Комплектующие
	|		ИЗ
	|			РеализованныеТовары КАК РеализованныеТовары
	|		
	|		СГРУППИРОВАТЬ ПО
	|			РеализованныеТовары.РНПТ,
	|			РеализованныеТовары.СтранаПроисхождения,
	|			РеализованныеТовары.Номенклатура,
	|			РеализованныеТовары.Организация,
	|			РеализованныеТовары.Комплектующие) КАК ПрослеживаемыеТоварыОстатки
	|		ПО СправочникНомераГТД.Ссылка = ПрослеживаемыеТоварыОстатки.РНПТ";
	
КонецФункции

&НаСервере
Функция ТекстЗапросаВозвратПоставщику()
	
	Возврат 
	"ВЫБРАТЬ
	|	ПоступившиеТовары.Период КАК Период,
	|	ПоступившиеТовары.Организация КАК Организация,
	|	ПоступившиеТовары.Номенклатура КАК Номенклатура,
	|	ПоступившиеТовары.СтранаПроисхождения КАК СтранаПроисхождения,
	|	ПоступившиеТовары.Количество КАК Количество,
	|	ПоступившиеТовары.КоличествоПрослеживаемости КАК КоличествоПрослеживаемости,
	|	ПоступившиеТовары.РНПТ КАК РНПТ,
	|	ПоступившиеТовары.Комплектующие КАК Комплектующие
	|ПОМЕСТИТЬ ПоступившиеТовары
	|ИЗ
	|	РегистрНакопления.ПрослеживаемыеТовары КАК ПоступившиеТовары
	|ГДЕ
	|	ПоступившиеТовары.Период < &ДатаТекущегоДокумента
	|	И ПоступившиеТовары.Организация = &Организация
	|	И ПоступившиеТовары.СтранаПроисхождения = &СтранаПроисхождения
	|	И ПоступившиеТовары.Партия = &Партия
	|	И ПоступившиеТовары.Номенклатура = &Номенклатура
	|	И ПоступившиеТовары.Характеристика = &Характеристика
	|	И ПоступившиеТовары.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)
	|	И (ПоступившиеТовары.Контрагент = &Контрагент
	|			ИЛИ &Контрагент = ЗНАЧЕНИЕ(Справочник.Контрагенты.ПустаяСсылка))
	|	И ПоступившиеТовары.Регистратор ССЫЛКА Документ.ПриходнаяНакладная
	|	И (ПоступившиеТовары.Регистратор = &ДокументПоступления
	|			ИЛИ &ДокументПоступления = НЕОПРЕДЕЛЕНО)
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ДАТАВРЕМЯ(1, 1, 1),
	|	ВозвращенныеТовары.Организация,
	|	ВозвращенныеТовары.Номенклатура,
	|	ВозвращенныеТовары.СтранаПроисхождения,
	|	ВЫБОР
	|		КОГДА ВозвращенныеТовары.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход)
	|			ТОГДА -ВозвращенныеТовары.Количество
	|		ИНАЧЕ ВозвращенныеТовары.Количество
	|	КОНЕЦ,
	|	ВЫБОР
	|		КОГДА ВозвращенныеТовары.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход)
	|			ТОГДА -ВозвращенныеТовары.КоличествоПрослеживаемости
	|		ИНАЧЕ ВозвращенныеТовары.КоличествоПрослеживаемости
	|	КОНЕЦ,
	|	ВозвращенныеТовары.РНПТ,
	|	ВозвращенныеТовары.Комплектующие
	|ИЗ
	|	РегистрНакопления.ПрослеживаемыеТовары КАК ВозвращенныеТовары
	|ГДЕ
	|	ВозвращенныеТовары.Организация = &Организация
	|	И ВозвращенныеТовары.СтранаПроисхождения = &СтранаПроисхождения
	|	И ВозвращенныеТовары.Партия = &Партия
	|	И ВозвращенныеТовары.Номенклатура = &Номенклатура
	|	И ВозвращенныеТовары.Характеристика = &Характеристика
	|	И (ВозвращенныеТовары.Контрагент = &Контрагент
	|			ИЛИ &Контрагент = ЗНАЧЕНИЕ(Справочник.Контрагенты.ПустаяСсылка))
	|	И (ВозвращенныеТовары.Регистратор ССЫЛКА Документ.ПриходнаяНакладная
	|			ИЛИ ВозвращенныеТовары.Регистратор ССЫЛКА Документ.КорректировкаПоступления)
	|	И ВозвращенныеТовары.Регистратор <> &Документ
	|	И (ВозвращенныеТовары.КорректируемыйДокумент = &ДокументПоступления
	|			ИЛИ &ДокументПоступления = НЕОПРЕДЕЛЕНО)
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	СправочникНомераГТД.Ссылка КАК РНПТ,
	|	ЕСТЬNULL(ПрослеживаемыеТоварыОстатки.Организация, ЗНАЧЕНИЕ(Справочник.Организации.ПустаяСсылка)) КАК Организация,
	|	ЕСТЬNULL(ПрослеживаемыеТоварыОстатки.СтранаПроисхождения, ЗНАЧЕНИЕ(Справочник.СтраныМира.ПустаяСсылка)) КАК СтранаПроисхождения,
	|	ЕСТЬNULL(ПрослеживаемыеТоварыОстатки.Номенклатура, ЗНАЧЕНИЕ(Справочник.Номенклатура.ПустаяСсылка)) КАК Номенклатура,
	|	ЕСТЬNULL(ПрослеживаемыеТоварыОстатки.Количество, 0) КАК Количество,
	|	ЕСТЬNULL(ПрослеживаемыеТоварыОстатки.КоличествоПрослеживаемости, 0) КАК КоличествоПрослеживаемости,
	|	0 КАК КоличествоДоИзменения,
	|	0 КАК КоличествоПрослеживаемостиДоИзменения,
	|	ЕСТЬNULL(ПрослеживаемыеТоварыОстатки.Период, ДАТАВРЕМЯ(1, 1, 1)) КАК Период,
	|	ПрослеживаемыеТоварыОстатки.Комплектующие КАК Комплектующие
	|ИЗ
	|	Справочник.НомераГТД КАК СправочникНомераГТД
	|		ЛЕВОЕ СОЕДИНЕНИЕ (ВЫБРАТЬ
	|			ПоступившиеТовары.РНПТ КАК РНПТ,
	|			ПоступившиеТовары.Организация КАК Организация,
	|			ПоступившиеТовары.СтранаПроисхождения КАК СтранаПроисхождения,
	|			ПоступившиеТовары.Номенклатура КАК Номенклатура,
	|			МАКСИМУМ(ПоступившиеТовары.Период) КАК Период,
	|			СУММА(ПоступившиеТовары.Количество) КАК Количество,
	|			СУММА(ПоступившиеТовары.КоличествоПрослеживаемости) КАК КоличествоПрослеживаемости,
	|			ПоступившиеТовары.Комплектующие КАК Комплектующие
	|		ИЗ
	|			ПоступившиеТовары КАК ПоступившиеТовары
	|		
	|		СГРУППИРОВАТЬ ПО
	|			ПоступившиеТовары.РНПТ,
	|			ПоступившиеТовары.СтранаПроисхождения,
	|			ПоступившиеТовары.Номенклатура,
	|			ПоступившиеТовары.Организация,
	|			ПоступившиеТовары.Комплектующие) КАК ПрослеживаемыеТоварыОстатки
	|		ПО СправочникНомераГТД.Ссылка = ПрослеживаемыеТоварыОстатки.РНПТ";
	
КонецФункции

&НаСервере
Функция ТекстЗапросаКорректировка()
	
	Возврат 
	"ВЫБРАТЬ
	|	ПрослеживаемыеТоварыОстатки.Организация КАК Организация,
	|	ПрослеживаемыеТоварыОстатки.РНПТ КАК РНПТ,
	|	ПрослеживаемыеТоварыОстатки.СтранаПроисхождения КАК СтранаПроисхождения,
	|	ПрослеживаемыеТоварыОстатки.Номенклатура КАК Номенклатура,
	|	ПрослеживаемыеТоварыОстатки.КоличествоОстаток КАК КоличествоОстаток,
	|	ПрослеживаемыеТоварыОстатки.КоличествоПрослеживаемостиОстаток КАК КоличествоПрослеживаемостиОстаток,
	|	0 КАК КоличествоДоИзменения,
	|	0 КАК КоличествоПрослеживаемостиДоИзменения,
	|	ПрослеживаемыеТоварыОстатки.Комплектующие КАК Комплектующие
	|ПОМЕСТИТЬ ОстаткиРНПТ
	|ИЗ
	|	РегистрНакопления.ПрослеживаемыеТовары.Остатки(
	|			&Период,
	|			Организация = &Организация
	|				И СтранаПроисхождения = &СтранаПроисхождения
	|				И Номенклатура = &Номенклатура
	|				И Характеристика = &Характеристика
	|				И Партия = &Партия) КАК ПрослеживаемыеТоварыОстатки
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ПрослеживаемыеТовары.Организация,
	|	ПрослеживаемыеТовары.РНПТ,
	|	ПрослеживаемыеТовары.СтранаПроисхождения,
	|	ПрослеживаемыеТовары.Номенклатура,
	|	ВЫБОР
	|		КОГДА ПрослеживаемыеТовары.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход)
	|			ТОГДА ПрослеживаемыеТовары.Количество
	|		ИНАЧЕ -ПрослеживаемыеТовары.Количество
	|	КОНЕЦ,
	|	ВЫБОР
	|		КОГДА ПрослеживаемыеТовары.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход)
	|			ТОГДА ПрослеживаемыеТовары.КоличествоПрослеживаемости
	|		ИНАЧЕ -ПрослеживаемыеТовары.КоличествоПрослеживаемости
	|	КОНЕЦ,
	|	ПрослеживаемыеТовары.Количество,
	|	ПрослеживаемыеТовары.КоличествоПрослеживаемости,
	|	ПрослеживаемыеТовары.Комплектующие
	|ИЗ
	|	РегистрНакопления.ПрослеживаемыеТовары КАК ПрослеживаемыеТовары
	|ГДЕ
	|	&КорректируемыйДокумент <> НЕОПРЕДЕЛЕНО
	|	И ПрослеживаемыеТовары.Регистратор = &КорректируемыйДокумент
	|	И ПрослеживаемыеТовары.Организация = &Организация
	|	И ПрослеживаемыеТовары.СтранаПроисхождения = &СтранаПроисхождения
	|	И ПрослеживаемыеТовары.Партия = &Партия
	|	И ПрослеживаемыеТовары.Номенклатура = &Номенклатура
	|	И ПрослеживаемыеТовары.Характеристика = &Характеристика
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ПрослеживаемыеТовары.Организация,
	|	ПрослеживаемыеТовары.РНПТ,
	|	ПрослеживаемыеТовары.СтранаПроисхождения,
	|	ПрослеживаемыеТовары.Номенклатура,
	|	ВЫБОР
	|		КОГДА ПрослеживаемыеТовары.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход)
	|			ТОГДА ПрослеживаемыеТовары.Количество
	|		ИНАЧЕ -ПрослеживаемыеТовары.Количество
	|	КОНЕЦ,
	|	ВЫБОР
	|		КОГДА ПрослеживаемыеТовары.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход)
	|			ТОГДА ПрослеживаемыеТовары.КоличествоПрослеживаемости
	|		ИНАЧЕ -ПрослеживаемыеТовары.КоличествоПрослеживаемости
	|	КОНЕЦ,
	|	0,
	|	0,
	|	ПрослеживаемыеТовары.Комплектующие
	|ИЗ
	|	РегистрНакопления.ПрослеживаемыеТовары КАК ПрослеживаемыеТовары
	|ГДЕ
	|	&КорректируемыйДокумент <> НЕОПРЕДЕЛЕНО
	|	И ПрослеживаемыеТовары.КорректируемыйДокумент = &КорректируемыйДокумент
	|	И ПрослеживаемыеТовары.Организация = &Организация
	|	И ПрослеживаемыеТовары.СтранаПроисхождения = &СтранаПроисхождения
	|	И ПрослеживаемыеТовары.Партия = &Партия
	|	И ПрослеживаемыеТовары.Номенклатура = &Номенклатура
	|	И ПрослеживаемыеТовары.Характеристика = &Характеристика
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	СправочникНомераГТД.Ссылка КАК РНПТ,
	|	ЕСТЬNULL(ОстаткиРНПТ.Организация, ЗНАЧЕНИЕ(Справочник.Организации.ПустаяСсылка)) КАК Организация,
	|	ЕСТЬNULL(ОстаткиРНПТ.СтранаПроисхождения, ЗНАЧЕНИЕ(Справочник.СтраныМира.ПустаяСсылка)) КАК СтранаПроисхождения,
	|	ЕСТЬNULL(ОстаткиРНПТ.Номенклатура, ЗНАЧЕНИЕ(Справочник.Номенклатура.ПустаяСсылка)) КАК Номенклатура,
	|	СУММА(ЕСТЬNULL(ОстаткиРНПТ.КоличествоОстаток, 0)) КАК Количество,
	|	СУММА(ЕСТЬNULL(ОстаткиРНПТ.КоличествоПрослеживаемостиОстаток, 0)) КАК КоличествоПрослеживаемости,
	|	СУММА(ОстаткиРНПТ.КоличествоДоИзменения) КАК КоличествоДоИзменения,
	|	СУММА(ОстаткиРНПТ.КоличествоПрослеживаемостиДоИзменения) КАК КоличествоПрослеживаемостиДоИзменения,
	|	ЕСТЬNULL(СвойстваРНПТ.ДатаПоступления, ДАТАВРЕМЯ(1, 1, 1)) КАК Период,
	|	ОстаткиРНПТ.Комплектующие КАК Комплектующие
	|ИЗ
	|	Справочник.НомераГТД КАК СправочникНомераГТД
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.СвойстваРНПТ КАК СвойстваРНПТ
	|		ПО (СвойстваРНПТ.Организация = &Организация)
	|			И СправочникНомераГТД.Ссылка = СвойстваРНПТ.РНПТ
	|		ЛЕВОЕ СОЕДИНЕНИЕ ОстаткиРНПТ КАК ОстаткиРНПТ
	|		ПО СправочникНомераГТД.Ссылка = ОстаткиРНПТ.РНПТ
	|
	|СГРУППИРОВАТЬ ПО
	|	СправочникНомераГТД.Ссылка,
	|	ЕСТЬNULL(ОстаткиРНПТ.Организация, ЗНАЧЕНИЕ(Справочник.Организации.ПустаяСсылка)),
	|	ЕСТЬNULL(ОстаткиРНПТ.СтранаПроисхождения, ЗНАЧЕНИЕ(Справочник.СтраныМира.ПустаяСсылка)),
	|	ЕСТЬNULL(ОстаткиРНПТ.Номенклатура, ЗНАЧЕНИЕ(Справочник.Номенклатура.ПустаяСсылка)),
	|	ЕСТЬNULL(СвойстваРНПТ.ДатаПоступления, ДАТАВРЕМЯ(1, 1, 1)),
	|	ОстаткиРНПТ.Комплектующие";
	
КонецФункции

&НаКлиенте
Процедура ПодборКомплектующиеПриИзменении(Элемент)
	
	ТекущиеДанные = Элементы.Подбор.ТекущиеДанные;
	
	Если ТекущиеДанные = Неопределено Тогда
		Возврат
	КонецЕсли;
	
	Если ЗначениеЗаполнено(ТекущиеДанные.Номенклатура) И Не ЗначениеРевизитаНоменклатуры(ТекущиеДанные.Номенклатура, "ПрослеживаемыйТовар") Тогда
		ТекстСообщения = НСтр("ru = 'В качестве комплектующего может быть выбран только прослеживаемый товар.'");
		ОбщегоНазначенияКлиент.СообщитьПользователю(ТекстСообщения);
		ТекущиеДанные.СтранаПроисхождения = Неопределено;
		ТекущиеДанные.Номенклатура = Неопределено;
	ИначеЕсли Не ЭтоПоступление Тогда
		ТекущиеДанные.СтранаПроисхождения = ЗначениеРевизитаНоменклатуры(ТекущиеДанные.Номенклатура, "СтранаПроисхождения");
	КонецЕсли;
	
КонецПроцедуры 
			
&НаСервереБезКонтекста
Функция ЗначениеРевизитаНоменклатуры(Номенклатура, ИмяРекизита)
	Возврат Номенклатура[ИмяРекизита];
КонецФункции

#КонецОбласти

#Область ОбработчикиБиблиотек

// СтандартныеПодсистемы.ПодключаемыеКоманды
//@skip-check module-unused-method
&НаКлиенте
Процедура Подключаемый_ВыполнитьКоманду(Команда)
	ПодключаемыеКомандыКлиент.НачатьВыполнениеКоманды(ЭтотОбъект, Команда, Элементы.Остатки);
КонецПроцедуры

&НаКлиенте
Процедура Подключаемый_ПродолжитьВыполнениеКомандыНаСервере(ПараметрыВыполнения, ДополнительныеПараметры) Экспорт
	ВыполнитьКомандуНаСервере(ПараметрыВыполнения);
КонецПроцедуры

&НаСервере
Процедура ВыполнитьКомандуНаСервере(ПараметрыВыполнения)
	ПодключаемыеКоманды.ВыполнитьКоманду(ЭтотОбъект, ПараметрыВыполнения, Элементы.Остатки);
КонецПроцедуры

//@skip-check module-unused-method
&НаКлиенте
Процедура Подключаемый_ОбновитьКоманды()
	ПодключаемыеКомандыКлиентСервер.ОбновитьКоманды(ЭтотОбъект, Элементы.Остатки);
КонецПроцедуры
// Конец СтандартныеПодсистемы.ПодключаемыеКоманды

#КонецОбласти
