#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область ПрограммныйИнтерфейс

// Функция возвращает дерево значений с данными ОКЕИ.
//
Функция ПолучитьДанныеКлассификатора() Экспорт
	
	Текст = Новый ТекстовыйДокумент;
	Текст = Справочники.КлассификаторЕдиницИзмерения.ПолучитьМакет("КлассификаторЕдиницИзмерения");
	ТекстМакета = Текст.ПолучитьТекст();
	
	Возврат ОбщегоНазначения.ЗначениеИзСтрокиXML(ТекстМакета);
	
КонецФункции

// Выполняет поиск единицы измерения в справочнике "КлассификаторЕдиницИзмерения"
// если элемент в справочнике не найден, осуществляется попыка добавления элемента из ОКЕИ,
// если в ОКЕИ элемент не найден, то он не создается!
//
// Параметры:
// - КодПоОКЕИ - Строка(3), код единицы измерения по ОКЕИ (Обязательный)
//
// Возвращаемое значение:
//   Неопределено - если поиск не дал результатов
//   СправочникСсылка.КлассификаторЕдиницИзмерения - если поиск успешен
// 
Функция ЕдиницаИзмеренияПоКоду(КодПоОКЕИ) Экспорт

	// Если кодПоОКЕИ не заполнен то воврат
	Если НЕ ЗначениеЗаполнено(КодПоОКЕИ) Тогда
		
		Возврат Неопределено;
		
	Иначе
		
		// Сначала попытаемся найти единицу среди уже существующих в справочнике
		ЕдиницаИзмерения = Справочники.КлассификаторЕдиницИзмерения.НайтиПоКоду(КодПоОКЕИ);
		
		Если ЕдиницаИзмерения <> Справочники.КлассификаторЕдиницИзмерения.ПустаяСсылка() Тогда 
			
			// Если нашли возвращаем ссылку
			Возврат ЕдиницаИзмерения;
			
		Иначе
			
			ТаблицаКлассификатораЕдиницИзмерения = Справочники.КлассификаторЕдиницИзмерения.ТаблицаКлассификатораЕдиницИзмерения();
			СтруктураПоиска = Новый Структура("КодЧисловой", КодПоОКЕИ);
			СтрокиТаблицы = ТаблицаКлассификатораЕдиницИзмерения.НайтиСтроки(СтруктураПоиска);
			Если СтрокиТаблицы.Количество() > 0 Тогда
				НоваяЕдиницаИзмерения = Справочники.КлассификаторЕдиницИзмерения.СоздатьЭлемент();
				ЗаполнитьОбъектЕдиницыИзмерения(НоваяЕдиницаИзмерения, СтрокиТаблицы[0]);
				Попытка
					НоваяЕдиницаИзмерения.Записать();
					Возврат НоваяЕдиницаИзмерения.Ссылка;
				Исключение
				КонецПопытки;
			КонецЕсли;
			
			Возврат Неопределено;
			
		КонецЕсли;
		
	КонецЕсли;
	
	Возврат ЕдиницаИзмерения;
	
КонецФункции

Функция ТаблицаКлассификатораЕдиницИзмерения() Экспорт
	
	ДеревоКлассификатораЕдиницИзмерения = Справочники.КлассификаторЕдиницИзмерения.ПолучитьДанныеКлассификатора();
	
	ТаблицаКлассификатораЕдиницИзмерения = Новый ТаблицаЗначений;
	ТаблицаКлассификатораЕдиницИзмерения.Колонки.Добавить("Наименование", Новый ОписаниеТипов("Строка"));
	ТаблицаКлассификатораЕдиницИзмерения.Колонки.Добавить("КодЧисловой", Новый ОписаниеТипов("Строка"));
	ТаблицаКлассификатораЕдиницИзмерения.Колонки.Добавить("ТипИзмеряемойВеличины", Новый ОписаниеТипов("Строка"));
	ТаблицаКлассификатораЕдиницИзмерения.Колонки.Добавить("УсловноеОбозначениеНациональное", Новый ОписаниеТипов("Строка"));
	ТаблицаКлассификатораЕдиницИзмерения.Колонки.Добавить("УсловноеОбозначениеМеждународное", Новый ОписаниеТипов("Строка"));
	ТаблицаКлассификатораЕдиницИзмерения.Колонки.Добавить("КодовоеБуквенноеОбозначениеНациональное", Новый ОписаниеТипов("Строка"));
	ТаблицаКлассификатораЕдиницИзмерения.Колонки.Добавить("КодовоеБуквенноеОбозначениеМеждународное", Новый ОписаниеТипов("Строка"));
	
	ПреобразованиеДеревоКлассификатораЕдиницВТаблицу(ДеревоКлассификатораЕдиницИзмерения, ТаблицаКлассификатораЕдиницИзмерения);
	
	Возврат ТаблицаКлассификатораЕдиницИзмерения;
	
КонецФункции

Процедура ПреобразованиеДеревоКлассификатораЕдиницВТаблицу(ДеревоЗначений, ТаблицаЗначений) Экспорт
	
	Для Каждого СтрокаДерева Из ДеревоЗначений.Строки Цикл
		
		НоваяСтрокаТаблицы = ТаблицаЗначений.Добавить();
		НоваяСтрокаТаблицы.Наименование = СтрокаДерева.Наименование;
		НоваяСтрокаТаблицы.КодЧисловой = СтрокаДерева.КодЧисловой;
		НоваяСтрокаТаблицы.ТипИзмеряемойВеличины = СтрокаДерева.ТипИзмеряемойВеличины;
		НоваяСтрокаТаблицы.УсловноеОбозначениеНациональное = СтрокаДерева.УсловноеОбозначениеНациональное;
		НоваяСтрокаТаблицы.УсловноеОбозначениеМеждународное = СтрокаДерева.УсловноеОбозначениеМеждународное;
		НоваяСтрокаТаблицы.КодовоеБуквенноеОбозначениеНациональное = СтрокаДерева.КодовоеБуквенноеОбозначениеНациональное;
		НоваяСтрокаТаблицы.КодовоеБуквенноеОбозначениеМеждународное = СтрокаДерева.КодовоеБуквенноеОбозначениеМеждународное;
		
		Если СтрокаДерева.Строки.Количество() > 0 Тогда
			ПреобразованиеДеревоКлассификатораЕдиницВТаблицу(СтрокаДерева, ТаблицаЗначений);
		КонецЕсли;
		
	КонецЦикла;
	
КонецПроцедуры

Процедура ЗаполнитьОбъектЕдиницыИзмерения(СправочникОбъект, СправочникВыборка) Экспорт
	
	СправочникОбъект.Наименование = НаименованиеЕдиницыИзмерения(СправочникВыборка);
	СправочникОбъект.МеждународноеСокращение = СтрЗаменить(СправочникВыборка.КодовоеБуквенноеОбозначениеМеждународное, Символы.ПС, "/");
	СправочникОбъект.НаименованиеПолное = СтрЗаменить(СправочникВыборка.Наименование,Символы.ПС,"/");
	СправочникОбъект.Код = СокрЛП(СправочникВыборка.КодЧисловой);
	
	Если ЗначениеЗаполнено(СправочникВыборка.ТипИзмеряемойВеличины) Тогда
		СправочникОбъект.ТипИзмеряемойВеличины = Перечисления.ТипыИзмеряемыхВеличин[СправочникВыборка.ТипИзмеряемойВеличины];
	КонецЕсли;
	
КонецПроцедуры

#Область ДляВызоваИзДругихПодсистем

#Область ОбновлениеВерсииИБ

// Определяет настройки начального заполнения элементов.
//
// Параметры:
//  Настройки - Структура - настройки заполнения
//   * ПриНачальномЗаполненииЭлемента - Булево - Если Истина, то для каждого элемента будет
//      вызвана процедура индивидуального заполнения ПриНачальномЗаполненииЭлемента.
Процедура ПриНастройкеНачальногоЗаполненияЭлементов(Настройки) Экспорт

	Настройки.ПриНачальномЗаполненииЭлемента = Ложь;

КонецПроцедуры

// Смотри также ОбновлениеИнформационнойБазыПереопределяемый.ПриНачальномЗаполненииЭлементов
// 
// Параметры:
//   КодыЯзыков - см. ОбновлениеИнформационнойБазыПереопределяемый.ПриНачальномЗаполненииЭлементов.КодыЯзыков
//   Элементы - см. ОбновлениеИнформационнойБазыПереопределяемый.ПриНачальномЗаполненииЭлементов.Элементы
//   ТабличныеЧасти - см. ОбновлениеИнформационнойБазыПереопределяемый.ПриНачальномЗаполненииЭлементов.ТабличныеЧасти
//
Процедура ПриНачальномЗаполненииЭлементов(КодыЯзыков, Элементы, ТабличныеЧасти) Экспорт
	
	Элемент = Элементы.Добавить();
	Элемент.ИмяПредопределенныхДанных = "шт";
	Элемент.Наименование = НСтр("ru='шт'");
	Элемент.НаименованиеПолное = "Штука";
	Элемент.МеждународноеСокращение = "PCE";
	
	Элемент = Элементы.Добавить();
	Элемент.ИмяПредопределенныхДанных = "ч";
	Элемент.Наименование = НСтр("ru='ч'");
	Элемент.НаименованиеПолное = "Час";
	Элемент.МеждународноеСокращение = "HUR";
	
КонецПроцедуры

#КонецОбласти

#КонецОбласти

#КонецОбласти

#Область ОбработчикиСобытий

Процедура ОбработкаПолученияДанныхВыбора(ДанныеВыбора, Параметры, СтандартнаяОбработка)
	
	Если Параметры.Отбор.Свойство("Владелец") Тогда
	// Если задана связь параметров выбора по значению номенклатуры,
	// то данные выбора получим из справочника "ЕдиницыИзмерения".
		СтандартнаяОбработка = Ложь;
		ДанныеВыбора = Справочники.ЕдиницыИзмерения.ПолучитьДанныеВыбора(Параметры);
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

#Область ЕдиницаИзмерения

Функция НаименованиеЕдиницыИзмерения(Знач СтрокаУровень3)
	
	Если ЗначениеЗаполнено(СтрокаУровень3.УсловноеОбозначениеНациональное) Тогда
		Результат = СтрокаУровень3.УсловноеОбозначениеНациональное;
	ИначеЕсли ЗначениеЗаполнено(СтрокаУровень3.УсловноеОбозначениеМеждународное) Тогда
		Результат = СтрокаУровень3.УсловноеОбозначениеМеждународное;
	ИначеЕсли ЗначениеЗаполнено(СтрокаУровень3.КодовоеБуквенноеОбозначениеНациональное) Тогда
		Результат = СтрокаУровень3.КодовоеБуквенноеОбозначениеНациональное;
	ИначеЕсли ЗначениеЗаполнено(СтрокаУровень3.КодовоеБуквенноеОбозначениеМеждународное) Тогда
		Результат = СтрокаУровень3.КодовоеБуквенноеОбозначениеМеждународное;
	Иначе
		Результат = СтрокаУровень3.Наименование;
	КонецЕсли;
	
	Возврат СтрЗаменить(Результат, Символы.ПС, "/");
	
КонецФункции

#КонецОбласти

#КонецОбласти

#КонецЕсли