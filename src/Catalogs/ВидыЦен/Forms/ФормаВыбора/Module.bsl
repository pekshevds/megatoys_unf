
#Область ОбработчикиСобытийФормы

&НаСервере
// Процедура - обработчик события ПриСозданииНаСервере.
//
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	// Установка доступности цен для редактирования.
	РазрешеноРедактированиеЦенДокументов = УправлениеДоступомУНФ.РазрешеноРедактированиеЦенДокументов();
	
	Элементы.Список.ТолькоПросмотр = НЕ РазрешеноРедактированиеЦенДокументов;

	ЦенообразованиеСервер.УстановитьПараметрыДинамическогоСпискаВидовЦен(Список);
	
	// Выделение основного элемента.
	ДинамическиеСпискиУНФ.ВыделитьЖирнымОсновнойЭлемент(УправлениеНебольшойФирмойПовтИсп.ПолучитьЗначениеНастройки("ОсновнойВидЦенПродажи"), Список);
	
	ОбщегоНазначенияКлиентСервер.УстановитьЭлементОтбораДинамическогоСписка(Список, "Недействителен", Ложь,,,
		Не Элементы.ПоказыватьНедействительных.Пометка);
		
	Если ОбщегоНазначенияКлиентСервер.ЕстьРеквизитИлиСвойствоОбъекта(Параметры, "ПоказатьПодсказкуОтбора")
		И Параметры.ПоказатьПодсказкуОтбора Тогда
			
			ОбщегоНазначенияКлиентСервер.УстановитьСвойствоЭлементаФормы(Элементы, "ГруппаПанельИнформации",
			"Видимость", "Истина");
			
			ПрочитатьИУстановитьНастройкиФормы();
			
	КонецЕсли;
	
	УстановитьУсловноеОформление();
	
	ПрочитатьПрайсЛисты();
	
КонецПроцедуры // ПриСозданииНаСервере()

#КонецОбласти

#Область ОбработчикиСобытийЭлементовШапкиФормы

&НаКлиенте
Процедура СписокВыборЗначения(Элемент, Значение, СтандартнаяОбработка)
	
	ПараметрыВыбора = Новый Структура;
	ПараметрыВыбора.Вставить("ВидЦены", Значение);
	Оповестить("Выбор_ВидЦены", ПараметрыВыбора, ЭтотОбъект);
	
КонецПроцедуры

&НаКлиенте
Процедура ДекорацияЗакрытьНажатие(Элемент)
	
	ДекорацияИнформацияЗакрытьНаСервере();
	
КонецПроцедуры

&НаКлиенте
Процедура СписокПриАктивизацииСтроки(Элемент)
	
	ДанныеТекущейСтроки = Элементы.Список.ТекущиеДанные;
	Если ДанныеТекущейСтроки <> Неопределено Тогда 

		Элементы.Описание.Заголовок = ДанныеТекущейСтроки.Комментарий;
		ОбщегоНазначенияКлиентСервер.УстановитьСвойствоЭлементаФормы(Элементы, "ГруппаПодробноеОписание", "Видимость",
			ЗначениеЗаполнено(ДанныеТекущейСтроки.Комментарий));
				
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура ПоказыватьНедействительных(Команда)
	
	Элементы.ПоказыватьНедействительных.Пометка = Не Элементы.ПоказыватьНедействительных.Пометка;
	
	ОбщегоНазначенияКлиентСервер.УстановитьЭлементОтбораДинамическогоСписка(
		Список,
		"Недействителен",
		Ложь,
		,
		,
		Не Элементы.ПоказыватьНедействительных.Пометка);
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаСервере
// Процедура сохраняет выбранный элемент в настройки.
//
Процедура УстановитьОсновнойЭлемент(ВыбранныйЭлемент)
	
	Если ВыбранныйЭлемент <> УправлениеНебольшойФирмойПовтИсп.ПолучитьЗначениеНастройки("ОсновнойВидЦенПродажи") Тогда
		
		РегистрыСведений.НастройкиПользователей.Установить(ВыбранныйЭлемент, "ОсновнойВидЦенПродажи");
		ДинамическиеСпискиУНФ.ВыделитьЖирнымОсновнойЭлемент(ВыбранныйЭлемент, Список);
		
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
// Процедура - обработчик выполнения команды УстановитьОсновнойЭлемент.
//
Процедура КомандаУстановитьОсновнойЭлемент(Команда)
	
	ВыбранныйЭлемент = Элементы.Список.ТекущаяСтрока;
	Если ЗначениеЗаполнено(ВыбранныйЭлемент) Тогда
		
		УстановитьОсновнойЭлемент(ВыбранныйЭлемент);
		
	КонецЕсли; 
	
КонецПроцедуры

&НаСервере
Процедура УстановитьУсловноеОформление()

	// Недоступный текст для недействительных
	НовоеУсловноеОформление = Список.КомпоновщикНастроек.ФиксированныеНастройки.УсловноеОформление.Элементы.Добавить();
	
	Оформление = НовоеУсловноеОформление.Оформление.Элементы.Найти("ЦветТекста");
	Оформление.Значение 		= ЦветаСтиля.ТекстЗапрещеннойЯчейкиЦвет;
	Оформление.Использование 	= Истина;
	
	Отбор = НовоеУсловноеОформление.Отбор.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));
	Отбор.ВидСравнения 		= ВидСравненияКомпоновкиДанных.Равно;
	Отбор.Использование 	= Истина;
	Отбор.ЛевоеЗначение 	= Новый ПолеКомпоновкиДанных("Недействителен");
	Отбор.ПравоеЗначение 	= Истина;
	
КонецПроцедуры

&НаСервере
Процедура ДекорацияИнформацияЗакрытьНаСервере()
	
	Элементы.ГруппаПанельИнформации.Видимость = Ложь;
	
	КлючОбъекта			= ИмяФормы + "/НастройкиФормы";
	КлючНастройки = "ОтображатьПанельИнформации";
	ТекущиеНастройки 	= ХранилищеСистемныхНастроек.Загрузить(КлючОбъекта, КлючНастройки);
	
	Если ТекущиеНастройки = Неопределено Тогда
		ТекущиеНастройки = Новый ХранилищеЗначения(Новый Структура("Видимость", Ложь));
	КонецЕсли;
	
	ХранилищеСистемныхНастроек.Сохранить(КлючОбъекта, КлючНастройки, ТекущиеНастройки);

КонецПроцедуры

&НаСервере
Процедура ПрочитатьИУстановитьНастройкиФормы()
	
	КлючОбъекта			= ИмяФормы + "/НастройкиФормы";
	КлючНастройки = "ОтображатьПанельИнформации";
	ТекущиеНастройки 	= ХранилищеСистемныхНастроек.Загрузить(КлючОбъекта, КлючНастройки);
	
	Если ТекущиеНастройки <> Неопределено 
		И ТипЗнч(ТекущиеНастройки) = Тип("ХранилищеЗначения") Тогда
		
		Элементы.ГруппаПанельИнформации.Видимость = ТекущиеНастройки.Получить().Видимость;
		
	КонецЕсли;
	
КонецПроцедуры

#Область БыстрыйОтбор

&НаСервере
Процедура ПрочитатьПрайсЛисты()
	
	Запрос = Новый Запрос("ВЫБРАТЬ ЛОЖЬ КАК Флаг, ПЛ.Ссылка КАК ПрайсЛист ИЗ Справочник.ПрайсЛисты КАК ПЛ ГДЕ НЕ ПЛ.ПометкаУдаления");
	
	РезультатЗапроса = Запрос.Выполнить();
	Если РезультатЗапроса.Пустой() Тогда
		
		Элементы.ОтборПрайсЛисты.ОтображениеПодсказки = ОтображениеПодсказки.ОтображатьСверху;
		
	Иначе
		
		ЗначениеВРеквизитФормы(РезультатЗапроса.Выгрузить(ОбходРезультатаЗапроса.ПоГруппировкамСИерархией), "ОтборПрайсЛисты");
		
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ОтборПрайсЛистыФлагПриИзменении(Элемент)
	
	ТекущаяСтрокаДерева = ОтборПрайсЛисты.НайтиПоИдентификатору(Элементы.ОтборПрайсЛисты.ТекущиеДанные.ПолучитьИдентификатор());
	УстановитьФлагУПодчиненных(ТекущаяСтрокаДерева.ПолучитьЭлементы(), ТекущаяСтрокаДерева.Флаг);
	
	ПрайсЛисты	= НайтиВыбранныеСтроки(ОтборПрайсЛисты.ПолучитьЭлементы());
	ВидыЦен		= ВидыЦенПрайсЛистов(ПрайсЛисты);
	
	ОбщегоНазначенияКлиентСервер.УстановитьЭлементОтбораДинамическогоСписка(Список, "Ссылка", ВидыЦен, ВидСравненияКомпоновкиДанных.ВСписке, , (ВидыЦен.Количество() > 0));
	
КонецПроцедуры

&НаКлиентеНаСервереБезКонтекста
Процедура УстановитьФлагУПодчиненных(СписокЭлементов, Флаг)
	
	Для Каждого СтрокаДерева Из СписокЭлементов Цикл
		
		СтрокаДерева.Флаг = Флаг;
		
		ДочерниеСтроки = СтрокаДерева.ПолучитьЭлементы();
		Если ДочерниеСтроки.Количество() > 0 Тогда
			
			УстановитьФлагУПодчиненных(ДочерниеСтроки, Флаг);
			
		КонецЕсли;
		
	КонецЦикла;
	
КонецПроцедуры

&НаКлиенте
Функция НайтиВыбранныеСтроки(СписокЭлементов)
	
	ПрайсЛисты = Новый Массив;
	Для Каждого СтрокаДерева Из СписокЭлементов Цикл
		
		Если СтрокаДерева.Флаг Тогда
			
			ПрайсЛисты.Добавить(СтрокаДерева.ПрайсЛист);
			
		КонецЕсли;
		
	КонецЦикла;
	
	Возврат ПрайсЛисты;
	
КонецФункции

&НаСервере
Функция ВидыЦенПрайсЛистов(ПрайсЛисты)
	
	Запрос = Новый Запрос("ВЫБРАТЬ РАЗЛИЧНЫЕ ВидыЦен.ВидЦен КАК ВидЦен ИЗ Справочник.ПрайсЛисты.ВидыЦен КАК ВидыЦен ГДЕ ВидыЦен.Ссылка В(&ПрайсЛисты)");
	Запрос.УстановитьПараметр("ПрайсЛисты", ПрайсЛисты);
	
	Возврат Запрос.Выполнить().Выгрузить().ВыгрузитьКолонку("ВидЦен");
	
КонецФункции

#КонецОбласти

#КонецОбласти


