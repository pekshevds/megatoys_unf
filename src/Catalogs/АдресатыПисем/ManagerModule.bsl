#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область ОбработчикиСобытий

Процедура ОбработкаПолученияДанныхВыбора(ДанныеВыбора, Параметры, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	ДанныеВыбора = СписокАвтоПодбора(Параметры.СтрокаПоиска);
	
КонецПроцедуры

#КонецОбласти

#Область ПрограммныйИнтерфейс

// Адресаты писем по контактам CRM
//
// Параметры:
//  КонтактыCRM - Массив - массив объектов, для которых нужно получить адресатов писем
// 
// Возвращаемое значение:
//  РезультатЗапроса - ТаблицаЗначений
//
Функция АдресатыПисемПоКонтактамCRM(КонтактыCRM) Экспорт
		
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	СвязиАдресатКонтактCRM.Адресат КАК Адресат
	|ИЗ
	|	РегистрСведений.СвязиАдресатКонтактCRM КАК СвязиАдресатКонтактCRM
	|ГДЕ
	|	СвязиАдресатКонтактCRM.КонтактCRM В(&КонтактыCRM)";
	
	Запрос.УстановитьПараметр("КонтактыCRM", КонтактыCRM);
	РезультатЗапроса = Запрос.Выполнить().Выгрузить();
	
	Возврат РезультатЗапроса;
	
КонецФункции

// Адресаты писем по строке e-mail
//
// Параметры:
//  АдресатыПисем - Массив - массив строк, для которых нужно получить адресатов писем
// 
// Возвращаемое значение:
//  РезультатЗапроса - ТаблицаЗначений
//
Функция АдресатыПисемПоКакСвязаться(АдресатыПисем) Экспорт
	
	УстановитьПривилегированныйРежим(Истина);
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	АдресатыПисем.Ссылка КАК Ссылка,
	|	АдресатыПисем.Адресат КАК Адресат
	|ИЗ
	|	Справочник.АдресатыПисем КАК АдресатыПисем
	|ГДЕ
	|	АдресатыПисем.Адресат В(&АдресатыПисем)";
	
	Запрос.УстановитьПараметр("АдресатыПисем", АдресатыПисем);
	РезультатЗапроса = Запрос.Выполнить().Выгрузить();
	УстановитьПривилегированныйРежим(Ложь);
	
	Для Каждого Адресат Из РезультатЗапроса Цикл
		Адресат.Адресат = НРег(СокрЛП(Адресат.Адресат));
	КонецЦикла;
	
	Возврат РезультатЗапроса;
	
КонецФункции

// Адресаты писем по событию
//
// Параметры:
//  Событие - ДокументСсылка.Событие - событие для участников которого необходимо получить адресатов писем
// 
// Возвращаемое значение:
//  РезультатЗапроса - ТаблицаЗначений
//
Функция АдресатыПисемПоКакСвязатьсяЭлектронногоПисьма(Событие) Экспорт
	
	УстановитьПривилегированныйРежим(Истина);
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	АдресатыПисем.Адресат КАК Адресат
	|ИЗ
	|	Справочник.АдресатыПисем КАК АдресатыПисем
	|ГДЕ
	|	АдресатыПисем.Адресат В(&АдресатыПисем)";
	
	ПочтовыйАдресПолучателя = СтрСоединить(Событие.Участники.ВыгрузитьКолонку("КакСвязаться"), "; ");
	ПриведенныеПочтовыеАдреса = ОбщегоНазначенияКлиентСервер.РазобратьСтрокуСПочтовымиАдресами(ПочтовыйАдресПолучателя, Ложь);
	МассивКакСвязаться = Новый Массив;
	
	Для Каждого Адрес Из ПриведенныеПочтовыеАдреса Цикл
		МассивКакСвязаться.Добавить(Адрес.Адрес);
	КонецЦикла;
	
	Запрос.УстановитьПараметр("АдресатыПисем", МассивКакСвязаться);
	РезультатЗапроса = Запрос.Выполнить().Выгрузить();
	УстановитьПривилегированныйРежим(Ложь);
	
	Возврат РезультатЗапроса;
	
КонецФункции

// Новый адресат письма по данным контакта
//
// Параметры:
//  Контакт							 - ДокументСсылка.Событие	 - событие для участников которого необходимо получить адресатов писем
//  КакСвязаться					 - Строка	 - e-mail
//  ЭтоОбновлениеИнформационнойБазы	 - Булево	 - признак обновления информационной базы
// 
// Возвращаемое значение:
//  Адресат - СправочникСсылка.АдресатыПисем
//
Функция НовыйАдресатПисьмаПоДаннымКонтакта(Контакт, КакСвязаться, ЭтоОбновлениеИнформационнойБазы = Ложь) Экспорт
	
	УстановитьПривилегированныйРежим(Истина);

	ПараметрыАдресата = Новый Структура;
	ПараметрыАдресата.Вставить("Контакт", Контакт);
	ПараметрыАдресата.Вставить("КакСвязаться", КакСвязаться);
	
	НовыйАдресат = Справочники.АдресатыПисем.СоздатьЭлемент();
	НовыйАдресат.Заполнить(ПараметрыАдресата);
	
	Если ЭтоОбновлениеИнформационнойБазы Тогда
		НовыйАдресат.Код = ОбщегоНазначения.СократитьСтрокуКонтрольнойСуммой(НовыйАдресат.Адресат, 50);
		ОбновлениеИнформационнойБазы.ЗаписатьДанные(НовыйАдресат);
	Иначе
		НовыйАдресат.Записать();
	КонецЕсли;
	
	Адресат = НовыйАдресат.Ссылка;
	УстановитьПривилегированныйРежим(Ложь);
	
	Возврат Адресат;
	
КонецФункции

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

Функция СписокАвтоПодбора(СтрокаПоиска)
	
	Если ПустаяСтрока(СтрокаПоиска) Тогда
		Возврат Неопределено;
	КонецЕсли;
	
	Результат = Новый СписокЗначений;
	
	Запрос = Новый Запрос;
	Запрос.Текст =
	"ВЫБРАТЬ РАЗРЕШЕННЫЕ РАЗЛИЧНЫЕ ПЕРВЫЕ 30
	|	АдресатыПисем.Наименование КАК Представление,
	|	АдресатыПисем.Адресат КАК КакСвязаться,
	|	АдресатыПисем.Ссылка КАК СсылкаКакСвязаться,
	|	СвязиАдресатКонтактCRM.КонтактCRM КАК КонтактCRM
	|ИЗ
	|	Справочник.АдресатыПисем КАК АдресатыПисем
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.СвязиАдресатКонтактCRM КАК СвязиАдресатКонтактCRM
	|		ПО (СвязиАдресатКонтактCRM.Адресат = АдресатыПисем.Ссылка)
	|ГДЕ
	|	(АдресатыПисем.Адресат ПОДОБНО &СтрокаПоиска
	|			ИЛИ АдресатыПисем.Наименование ПОДОБНО &СтрокаПоиска)
	|	И СвязиАдресатКонтактCRM.КонтактCRM ЕСТЬ NULL";
	
	Запрос.УстановитьПараметр("СтрокаПоиска", "%" + СтрокаПоиска + "%");
	РезультатЗапроса = Запрос.Выполнить();
	Если РезультатЗапроса.Пустой() Тогда
		Возврат Результат;
	КонецЕсли;
	
	Выборка = РезультатЗапроса.Выбрать();
	
	Пока Выборка.Следующий() Цикл
		
		Представление = СтрШаблон("%1 <%2>", Строка(Выборка.Представление), Выборка.КакСвязаться);		
		ПредставлениеЭлемента = ПредставлениеЭлементаСписка(Представление, СтрокаПоиска);
		Результат.Добавить(Выборка.СсылкаКакСвязаться, ПредставлениеЭлемента);
		
	КонецЦикла;
	
	Возврат Результат;
	
КонецФункции

Функция ПредставлениеЭлементаСписка(Представление, СтрокаПоиска)
	
	Позиция = СтрНайти(НРег(Представление), НРег(СтрокаПоиска));
	Если Позиция > 0 Тогда
		ТекстДо = Лев(Представление, Позиция - 1);
		ТекстЦентр = Сред(Представление, Позиция, СтрДлина(СтрокаПоиска));
		ТекстПосле = Сред(Представление, Позиция + СтрДлина(СтрокаПоиска));
		ВыделенныйТекст = Новый ФорматированнаяСтрока(ТекстЦентр, Новый Шрифт(Новый Шрифт,
			,
			,
			Истина),
			WebЦвета.ЗеленыйЛес);
		Результат = Новый ФорматированнаяСтрока(ТекстДо, ВыделенныйТекст, ТекстПосле);
	Иначе
		Результат = Представление;
	КонецЕсли;
	
	Возврат Результат;
	
КонецФункции

#КонецОбласти

#КонецЕсли