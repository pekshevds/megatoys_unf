#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область ПрограммныйИнтерфейс

#Область ДляВызоваИзДругихПодсистем

// Определяет список команд заполнения.
//
// Параметры:
//   КомандыЗаполнения - ТаблицаЗначений - Таблица с командами заполнения. Для изменения.
//       См. описание 1 параметра процедуры ЗаполнениеОбъектовПереопределяемый.ПередДобавлениемКомандЗаполнения().
//   Параметры - Структура - Вспомогательные параметры. Для чтения.
//       См. описание 2 параметра процедуры ЗаполнениеОбъектовПереопределяемый.ПередДобавлениемКомандЗаполнения().
//
Процедура ДобавитьКомандыЗаполнения(КомандыЗаполнения, Параметры) Экспорт
	
КонецПроцедуры

#Область ОбновлениеВерсииИБ

// Определяет настройки начального заполнения элементов.
//
// Параметры:
//  Настройки - Структура - настройки заполнения
//   * ПриНачальномЗаполненииЭлемента - Булево - Если Истина, то для каждого элемента будет
//      вызвана процедура индивидуального заполнения ПриНачальномЗаполненииЭлемента.
Процедура ПриНастройкеНачальногоЗаполненияЭлементов(Настройки) Экспорт

	Настройки.ПриНачальномЗаполненииЭлемента = Ложь;

КонецПроцедуры

// Смотри также ОбновлениеИнформационнойБазыПереопределяемый.ПриНачальномЗаполненииЭлементов
// 
// Параметры:
//   КодыЯзыков - см. ОбновлениеИнформационнойБазыПереопределяемый.ПриНачальномЗаполненииЭлементов.КодыЯзыков
//   Элементы - см. ОбновлениеИнформационнойБазыПереопределяемый.ПриНачальномЗаполненииЭлементов.Элементы
//   ТабличныеЧасти - см. ОбновлениеИнформационнойБазыПереопределяемый.ПриНачальномЗаполненииЭлементов.ТабличныеЧасти
//
Процедура ПриНачальномЗаполненииЭлементов(КодыЯзыков, Элементы, ТабличныеЧасти) Экспорт
	
	Элемент = Элементы.Добавить();
	Элемент.ИмяПредопределенныхДанных = "ОплатаОтПокупателей";
	Элемент.Наименование = НСтр("ru='Оплата от покупателей'");
	Элемент.УчитыватьВНУ = Истина;
	
	Элемент = Элементы.Добавить();
	Элемент.ИмяПредопределенныхДанных = "ОплатаПоставщикам";
	Элемент.Наименование = НСтр("ru='Оплата поставщикам'");
	Элемент.УчитыватьВНУ = Истина;
	
	// Подсказку для групп верхнего уровня
	Элемент = Элементы.Добавить();
	Элемент.ИмяПредопределенныхДанных = "ОперационнаяДеятельность";
	Элемент.Наименование = НСтр("ru='Операционная деятельность'");
	Элемент.Описание = ПолучитьОписаниеПредопределеннойСтатьи(Справочники.СтатьиДвиженияДенежныхСредств.ОперационнаяДеятельность);
	Элемент.Порядок = 0;
	
	Элемент = Элементы.Добавить();
	Элемент.ИмяПредопределенныхДанных = "ИнвестиционнаяДеятельность";
	Элемент.Наименование = НСтр("ru='Инвестиционная деятельность'");
	Элемент.Описание = ПолучитьОписаниеПредопределеннойСтатьи(Справочники.СтатьиДвиженияДенежныхСредств.ИнвестиционнаяДеятельность);
	Элемент.Порядок = 1;
	
	Элемент = Элементы.Добавить();
	Элемент.ИмяПредопределенныхДанных = "ФинансоваяДеятельность";
	Элемент.Наименование = НСтр("ru='Финансовая деятельность'");
	Элемент.Описание = ПолучитьОписаниеПредопределеннойСтатьи(Справочники.СтатьиДвиженияДенежныхСредств.ФинансоваяДеятельность);
	Элемент.Порядок = 2;
	
	Элемент = Элементы.Добавить();
	Элемент.ИмяПредопределенныхДанных = "ПеремещенияКурсовыеРазницы";
	Элемент.Наименование = НСтр("ru='Перемещения'");
	Элемент.Описание = ПолучитьОписаниеПредопределеннойСтатьи(Справочники.СтатьиДвиженияДенежныхСредств.ПеремещенияКурсовыеРазницы);
	Элемент.Порядок = 3;

	Элемент = Элементы.Добавить();
	Элемент.ИмяПредопределенныхДанных = "ИнвестиционныеПлатежи";
	Элемент.Наименование = НСтр("ru='Инвестиционные платежи'");
	Элемент.Родитель = Справочники.СтатьиДвиженияДенежныхСредств.ИнвестиционнаяДеятельность;
	
	Элемент = Элементы.Добавить();
	Элемент.ИмяПредопределенныхДанных = "ИнвестиционныеПоступления";
	Элемент.Наименование = НСтр("ru='Инвестиционные поступления'");
	Элемент.Родитель = Справочники.СтатьиДвиженияДенежныхСредств.ИнвестиционнаяДеятельность;
	
	Элемент = Элементы.Добавить();
	Элемент.ИмяПредопределенныхДанных = "ОперационныеПлатежи";
	Элемент.Наименование = НСтр("ru='Операционные платежи'");
	Элемент.Родитель = Справочники.СтатьиДвиженияДенежныхСредств.ОперационнаяДеятельность;
	
	Элемент = Элементы.Добавить();
	Элемент.ИмяПредопределенныхДанных = "ОперационныеПоступления";
	Элемент.Наименование = НСтр("ru='Операционные поступления'");
	Элемент.Родитель = Справочники.СтатьиДвиженияДенежныхСредств.ОперационнаяДеятельность;
	
	Элемент = Элементы.Добавить();
	Элемент.ИмяПредопределенныхДанных = "ФинансовыеПлатежи";
	Элемент.Наименование = НСтр("ru='Финансовые платежи'");
	Элемент.Родитель = Справочники.СтатьиДвиженияДенежныхСредств.ФинансоваяДеятельность;
	
	Элемент = Элементы.Добавить();
	Элемент.ИмяПредопределенныхДанных = "ФинансовыеПоступления";
	Элемент.Наименование = НСтр("ru='Финансовые поступления'");
	Элемент.Родитель = Справочники.СтатьиДвиженияДенежныхСредств.ФинансоваяДеятельность;
	
	Элемент = Элементы.Добавить();
	Элемент.ИмяПредопределенныхДанных = "ВводНачальныхОстатков";
	Элемент.Наименование = НСтр("ru='Ввод начальных остатков'");
	Элемент.Родитель = Справочники.СтатьиДвиженияДенежныхСредств.ОперационныеПоступления;
	Элемент.УчитыватьВНУ = Истина;
	
	Элемент = Элементы.Добавить();
	Элемент.ИмяПредопределенныхДанных = "Прочее";
	Элемент.Наименование = НСтр("ru='Прочее'");
	Элемент.Родитель = Справочники.СтатьиДвиженияДенежныхСредств.ОперационнаяДеятельность;
	Элемент.УчитыватьВНУ = Истина;
	
	Элемент = Элементы.Добавить();
	Элемент.ИмяПредопределенныхДанных = "ОтрицательнаяКурсоваяРазница";
	Элемент.Наименование = НСтр("ru='Отрицательная курсовая разница'");
	Элемент.Родитель = Справочники.СтатьиДвиженияДенежныхСредств.ПеремещенияКурсовыеРазницы;
	Элемент.УчитыватьВНУ = Истина;
	
	Элемент = Элементы.Добавить();
	Элемент.ИмяПредопределенныхДанных = "ПоложительнаяКурсоваяРазница";
	Элемент.Наименование = НСтр("ru='Положительная курсовая разница'");
	Элемент.Родитель = Справочники.СтатьиДвиженияДенежныхСредств.ПеремещенияКурсовыеРазницы;
	Элемент.УчитыватьВНУ = Истина;
	
	// Поступления по инвестиционной деятельности
	Элемент = Элементы.Добавить();
	Элемент.Наименование = НСтр("ru='Поступления от продажи оборудования, помещений'");
	Элемент.Родитель = Справочники.СтатьиДвиженияДенежныхСредств.ИнвестиционныеПоступления;
	
	Элемент = Элементы.Добавить();
	Элемент.Наименование = НСтр("ru='Поступления от продажи других бизнесов'");
	Элемент.Родитель = Справочники.СтатьиДвиженияДенежныхСредств.ИнвестиционныеПоступления;
	
	// Платежи по инвестиционной деятельности
	Элемент = Элементы.Добавить();
	Элемент.Наименование = НСтр("ru='Покупка оборудования, помещений'");
	Элемент.Родитель = Справочники.СтатьиДвиженияДенежныхСредств.ИнвестиционныеПлатежи;
	
	Элемент = Элементы.Добавить();
	Элемент.Наименование = НСтр("ru='Покупка других бизнесов'");
	Элемент.Родитель = Справочники.СтатьиДвиженияДенежныхСредств.ИнвестиционныеПлатежи;
	
	// Поступления по финансовой деятельности
	Элемент = Элементы.Добавить();
	Элемент.Наименование = НСтр("ru='Получение кредитов и займов'");
	Элемент.Родитель = Справочники.СтатьиДвиженияДенежныхСредств.ФинансовыеПоступления;
	
	// Платежи по финансовой деятельности
	Элемент = Элементы.Добавить();
	Элемент.Наименование = НСтр("ru='Возврат кредита /займа'");
	Элемент.Родитель = Справочники.СтатьиДвиженияДенежныхСредств.ФинансовыеПлатежи;
	
	Элемент = Элементы.Добавить();
	Элемент.Наименование = НСтр("ru='Дивиденды'");
	Элемент.Родитель = Справочники.СтатьиДвиженияДенежныхСредств.ФинансовыеПлатежи;
	
	// Финансовая деятельность
	Элемент = Элементы.Добавить();
	Элемент.ИмяПредопределенныхДанных = "ЛичныеСредстваПредпринимателя";
	Элемент.Наименование = НСтр("ru='Личные средства предпринимателя'");
	Элемент.Родитель = Справочники.СтатьиДвиженияДенежныхСредств.ФинансоваяДеятельность;
	
	// Перемещения
	Элемент = Элементы.Добавить();
	Элемент.Наименование = НСтр("ru='Перемещение между кассами, счетами'");
	Элемент.Родитель = Справочники.СтатьиДвиженияДенежныхСредств.ПеремещенияКурсовыеРазницы;
	
	// Операционные платежи
	Элемент = Элементы.Добавить();
	Элемент.Наименование = НСтр("ru='Заработная плата'");
	Элемент.Родитель = Справочники.СтатьиДвиженияДенежныхСредств.ОперационныеПлатежи;
	
	Элемент = Элементы.Добавить();
	Элемент.Наименование = НСтр("ru='Реклама и маркетинг'");
	Элемент.Родитель = Справочники.СтатьиДвиженияДенежныхСредств.ОперационныеПлатежи;
	
	Элемент = Элементы.Добавить();
	Элемент.Наименование = НСтр("ru='Проценты по кредитам / займам'");
	Элемент.Родитель = Справочники.СтатьиДвиженияДенежныхСредств.ОперационныеПлатежи;
	
	Элемент = Элементы.Добавить();
	Элемент.Наименование = НСтр("ru='Командировки'");
	Элемент.Родитель = Справочники.СтатьиДвиженияДенежныхСредств.ОперационныеПлатежи;
	
	Элемент = Элементы.Добавить();
	Элемент.Наименование = НСтр("ru='Коммунальные платежи'");
	Элемент.Родитель = Справочники.СтатьиДвиженияДенежныхСредств.ОперационныеПлатежи;
	
	Элемент = Элементы.Добавить();
	Элемент.Наименование = НСтр("ru='Банковское обслуживание'");
	Элемент.Родитель = Справочники.СтатьиДвиженияДенежныхСредств.ОперационныеПлатежи;
	
	Элемент = Элементы.Добавить();
	Элемент.Наименование = НСтр("ru='Связь, интернет'");
	Элемент.Родитель = Справочники.СтатьиДвиженияДенежныхСредств.ОперационныеПлатежи;
	
	Элемент = Элементы.Добавить();
	Элемент.Наименование = НСтр("ru='Транспортные расходы'");
	Элемент.Родитель = Справочники.СтатьиДвиженияДенежныхСредств.ОперационныеПлатежи;
	
	Элемент = Элементы.Добавить();
	Элемент.Наименование = НСтр("ru='Аренда помещений'");
	Элемент.Родитель = Справочники.СтатьиДвиженияДенежныхСредств.ОперационныеПлатежи;
	
	Элемент = Элементы.Добавить();
	Элемент.Наименование = НСтр("ru='Обслуживание офиса'");
	Элемент.Родитель = Справочники.СтатьиДвиженияДенежныхСредств.ОперационныеПлатежи;
	
	Элемент = Элементы.Добавить();
	Элемент.Наименование = НСтр("ru='Налоги'");
	Элемент.Родитель = Справочники.СтатьиДвиженияДенежныхСредств.ОперационныеПлатежи;
	
КонецПроцедуры

#КонецОбласти

#КонецОбласти

// Проверяет является ли переданная ссылка предопределенной группой вида деятельности
//
// Параметры:
//   Ссылка - Справочник.СтатьиДвиженияДенежныхСредств.Ссылка - Ссылка на элемент, который нужно проверить
//
Функция ЭтоГруппаВидаДеятельности(Ссылка) Экспорт
	
	Результат = (Ссылка = Справочники.СтатьиДвиженияДенежныхСредств.ОперационнаяДеятельность
				ИЛИ Ссылка = Справочники.СтатьиДвиженияДенежныхСредств.ИнвестиционнаяДеятельность 
				ИЛИ Ссылка = Справочники.СтатьиДвиженияДенежныхСредств.ФинансоваяДеятельность
				ИЛИ Ссылка = Справочники.СтатьиДвиженияДенежныхСредств.ПеремещенияКурсовыеРазницы);
				
	Возврат Результат;
	
КонецФункции

// Проверяет был ли изменен родитель у переданной предопределенной группы
//
// Параметры:
//   Ссылка - Справочник.СтатьиДвиженияДенежныхСредств.Ссылка - Ссылка на элемент, который нужно проверить
//   Родитель - Справочник.СтатьиДвиженияДенежныхСредств.Ссылка - Текущий родитель элемента
//
Функция ИзмененРодительПредопределеннойГруппы(Ссылка, Родитель) Экспорт
	
	ЭтоИнвестиционнаяДеятельность = (Ссылка = Справочники.СтатьиДвиженияДенежныхСредств.ИнвестиционныеПлатежи
									ИЛИ Ссылка = Справочники.СтатьиДвиженияДенежныхСредств.ИнвестиционныеПоступления);
	ЭтоОперационнаяДеятельность = (Ссылка = Справочники.СтатьиДвиженияДенежныхСредств.ОперационныеПлатежи
									ИЛИ Ссылка = Справочники.СтатьиДвиженияДенежныхСредств.ОперационныеПоступления);
	ЭтоФинансоваяДеятельность = (Ссылка = Справочники.СтатьиДвиженияДенежныхСредств.ФинансовыеПлатежи
									ИЛИ Ссылка = Справочники.СтатьиДвиженияДенежныхСредств.ФинансовыеПоступления);
	
	Если ЭтоИнвестиционнаяДеятельность И Родитель <> Справочники.СтатьиДвиженияДенежныхСредств.ИнвестиционнаяДеятельность 
		ИЛИ ЭтоОперационнаяДеятельность И Родитель <> Справочники.СтатьиДвиженияДенежныхСредств.ОперационнаяДеятельность
		ИЛИ ЭтоФинансоваяДеятельность И Родитель <> Справочники.СтатьиДвиженияДенежныхСредств.ФинансоваяДеятельность Тогда
		
		Возврат Истина;
		
	Иначе
		
		Возврат Ложь;
		
	КонецЕсли;
	
КонецФункции

// Возвращает предопределенное описание статьи, которая соответствует виду деятельности
//
// Параметры:
//   Ссылка - Справочник.СтатьиДвиженияДенежныхСредств.Ссылка - Ссылка на элемент, описание которого нужно получить
//
Функция ПолучитьОписаниеПредопределеннойСтатьи(Ссылка) Экспорт
	
	Если Ссылка = Справочники.СтатьиДвиженияДенежныхСредств.ОперационнаяДеятельность Тогда
		
		Описание =  НСтр("ru = 'Поступления и платежи, связанные с основной ежедневной деятельностью компании: 
					|поступления от покупателей, оплата поставщикам за товар, услуги, связь, аренду, заработная плата, налоги. 
					|Поступлений по основной деятельности должно быть достаточно для закупки новых материалов, товаров и, при 
					|необходимости, компенсации отрицательных денежных потоков по инвестиционной и финансовой деятельности.  
					|Денежный поток по операционной деятельности - основной источник денежных средств компании.'");
		
	ИначеЕсли Ссылка = Справочники.СтатьиДвиженияДенежныхСредств.ФинансоваяДеятельность Тогда
		
		Описание =  НСтр("ru = 'Финансовая деятельность обеспечивает основную деятельность дополнительными финансовыми ресурсами. 
					|К финансовой деятельности относятся поступления и платежи по привлечению кредитов и займов, а также вложения собственников, выплата дивидендов. 
					|Финансовая деятельность является поставщиком денежных ресурсов для обеспечения основной и инвестиционной деятельности.'");
		
	ИначеЕсли Ссылка = Справочники.СтатьиДвиженияДенежныхСредств.ИнвестиционнаяДеятельность Тогда
		
		Описание =  НСтр("ru = 'Инвестиционная деятельность связана с развитием компании: приобретение помещений, техники, оборудования, развитие новых проектов, вложения в другие компании. 
					|Поступления по инвестиционной деятельности показывают продажу активов в связи с устареванием, ненужностью, сменой ассортимента. 
					|При развитии и росте компания направляет деньги на обновление и приобретение своих активов, что приводит к отрицательному потоку по инвестиционной деятельности. 
					|Такой отток денежных средств покрывается за счет основной и финансовой деятельности.'");
		
	ИначеЕсли Ссылка = Справочники.СтатьиДвиженияДенежныхСредств.ПеремещенияКурсовыеРазницы Тогда
		
		Описание =  НСтр("ru = 'Статьи, которые не должны влиять на суммы денежных потоков. 
					|Внутренние перемещения денежных средств между расчетными счетами и кассами вашей компании. 
					|И курсовая разница, возникающая при пересчете поступлений, выплат и остатков денежных средств по курсам на разные даты.'");
		
	Иначе
		
		Описание = "";
		
	КонецЕсли;
	
	Возврат Описание;
	
КонецФункции

// Возвращает строковый ключ объекта для сохранения настроек формы списка и формы выбора
//
//
Функция ПолучитьКлючОбъекта() Экспорт
	
	Возврат "СправочникСтатьиДвиженияДенежныхСредств"; // Не локализуется
	
КонецФункции

// Обновляет наименование группы "Перемещения" при включении учета валютных операций
//
//
Процедура ОбновитьНаименованиеГруппыПеремещения() Экспорт
	
	Если ПолучитьФункциональнуюОпцию("УчетВалютныхОпераций") 
		И Справочники.СтатьиДвиженияДенежныхСредств.ПеремещенияКурсовыеРазницы.Наименование = НСтр("ru = 'Перемещения'") Тогда
	
		Группа = Справочники.СтатьиДвиженияДенежныхСредств.ПеремещенияКурсовыеРазницы.ПолучитьОбъект();
	    Группа.Наименование = НСтр("ru = 'Перемещения и курсовые разницы'");
		Группа.Записать();
		
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытий

Процедура ОбработкаПолученияДанныхВыбора(ДанныеВыбора, Параметры, СтандартнаяОбработка)
	
	Если Не Параметры.Отбор.Свойство("Недействителен") Тогда
		Параметры.Отбор.Вставить("Недействителен", Ложь);
	КонецЕсли;

КонецПроцедуры

#КонецОбласти

#Область ИнтерфейсПечати

// Заполняет список команд печати.
// 
// Параметры:
//   КомандыПечати - ТаблицаЗначений - состав полей см. в функции УправлениеПечатью.СоздатьКоллекциюКомандПечати
//
Процедура ДобавитьКомандыПечати(КомандыПечати) Экспорт
	
	
	
КонецПроцедуры

#КонецОбласти

#КонецЕсли