
#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	Если Параметры.Свойство("ЗначенияЗаполнения") Тогда
		ЗаполнитьЗначенияСвойств(ЭтаФорма, Параметры.ЗначенияЗаполнения);
	КонецЕсли;
	
	Инициализация();
	
	УправлениеФормой(ЭтаФорма);
	УправлениеФормойПриСоздании();
	
КонецПроцедуры

&НаСервере
Процедура Инициализация()
	
	Если ЗначениеЗаполнено(Представитель)
		И ТипЗнч(Представитель) = Тип("СправочникСсылка.Контрагенты") Тогда
		
		ПредставительЮридическоеЛицо = 1;
		ЮридическоеЛицо	= Представитель;
		
	Иначе
		
		ПредставительЮридическоеЛицо = 0;
		ФизическоеЛицо	= Представитель;
		
	КонецЕсли;
	
	Руководитель = ЭлектронныйДокументооборотСКонтролирующимиОрганамиВызовСервераПереопределяемый.Руководитель(Владелец);
	
	ЗакрыватьПриВыборе	= Ложь;
	
КонецПроцедуры

&НаКлиенте
Процедура ПередЗакрытием(Отказ, ЗавершениеРаботы, ТекстПредупреждения, СтандартнаяОбработка)
	
	Если Модифицированность Тогда
		
		Отказ = Истина;
				
		Если ЗавершениеРаботы Тогда
		
			ТекстПредупреждения = НСтр("ru='Данные были изменены.
											|Перед завершением работы рекомендуется сохранить изменения,
											|иначе измененные данные будут утеряны.'");
			
			Возврат;
		
		КонецЕсли;
		
		ТекстВопроса = НСтр("ru='Данные были изменены. Сохранить изменения?'");
		Оповещение = Новый ОписаниеОповещения("ВопросСохранитьИзмененияЗавершение", ЭтотОбъект);
		ПоказатьВопрос(Оповещение, ТекстВопроса, РежимДиалогаВопрос.ДаНетОтмена);
		
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура ОбработкаПроверкиЗаполненияНаСервере(Отказ, ПроверяемыеРеквизиты)
	
	ОставитьДляПроверки = Новый Массив;
	
	Если НесколькоПодписантов Тогда
		ОставитьДляПроверки.Добавить("Пользователь");
		Если Руководитель = ФизическоеЛицо Тогда
			Отказ = Истина;
			Ошибка = НСтр("ru = 'Не нужно добавлять руководителя в таблицу подписантов. 
                           |Пользователи, не добавленные в таблицу, будут заполнять и подписывать отчетность от лица руководителя.'");
			ОбщегоНазначения.СообщитьПользователю(Ошибка);
		КонецЕсли;
	КонецЕсли;
			
	Если ПредставительЮридическоеЛицо = 1 Тогда
		ОставитьДляПроверки.Добавить("ЮридическоеЛицо");
	Иначе
		ОставитьДляПроверки.Добавить("ФизическоеЛицо");
	КонецЕсли;
	ОставитьДляПроверки.Добавить("ДокументПредставителя");
		
	МассивНепроверяемыхРеквизитов = ОбщегоНазначенияКлиентСервер.РазностьМассивов(
		ПроверяемыеРеквизиты, 
		ОставитьДляПроверки);
	
	РегламентированнаяОтчетность.УдалитьНепроверяемыеРеквизитыИзМассива(
		ПроверяемыеРеквизиты, 
		МассивНепроверяемыхРеквизитов);
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовФормы

&НаКлиенте
Процедура ПредставительЮридическоеЛицоПриИзменении(Элемент)
	
	Если ПредставительЮридическоеЛицо = 1 Тогда
		ФизическоеЛицо = Неопределено;
	Иначе
		ЮридическоеЛицо = Неопределено;
		УполномоченноеЛицоПредставителя = "";
	КонецЕсли;
	
	УправлениеФормой(ЭтаФорма);
	
КонецПроцедуры

&НаКлиенте
Процедура ЮридическоеЛицоПриИзменении(Элемент)
	
	Если ПредставительЮридическоеЛицо = 1 Тогда
		Представитель = ЮридическоеЛицо;
	КонецЕсли;
	
	УправлениеФормой(ЭтаФорма);
	
КонецПроцедуры

&НаКлиенте
Процедура ФизическоеЛицоПриИзменении(Элемент)
	
	Если ПредставительЮридическоеЛицо = 0 Тогда
		Представитель = ФизическоеЛицо;
	КонецЕсли;
	
	УправлениеФормой(ЭтаФорма);
	
КонецПроцедуры

&НаКлиенте
Процедура ДоверенностьПриИзменении(Элемент)
	
	Если ТипЗнч(Доверенность) = Тип("СправочникСсылка.МашиночитаемыеДоверенностиФНС")
		ИЛИ ТипЗнч(Доверенность) = Тип("СправочникСсылка.МашиночитаемыеДоверенностиРаспределенныйРеестр") Тогда
		
		МассивКодовНалоговыхОрганов = ДокументооборотСКОВызовСервера.КодыНалоговыхОргановМЧДФНС(
			Доверенность);
		
		Если ЗначениеЗаполнено(Код) И МассивКодовНалоговыхОрганов.Количество() <> 0
			И МассивКодовНалоговыхОрганов.Найти(Код) = Неопределено Тогда
			
			ТекстВопроса = СтрШаблон(
				НСтр("ru = 'Машиночитаемая доверенность не действует для налогового органа %1.
						   |
						   |Все равно выбрать доверенность?'"),
				Код);
			ДополнительныеПараметры = Новый Структура("Доверенность", Доверенность);
			Доверенность = Неопределено;
			Оповещение = Новый ОписаниеОповещения("ДоверенностьПриИзмененииПослеПодтверждения", ЭтотОбъект, ДополнительныеПараметры);
			ПоказатьВопрос(Оповещение, ТекстВопроса, РежимДиалогаВопрос.ДаНет,, КодВозвратаДиалога.Нет);
		КонецЕсли;
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ДоверенностьПриИзмененииПослеПодтверждения(Результат, ДополнительныеПараметры) Экспорт
	
	Если Результат = КодВозвратаДиалога.Да Тогда
		Доверенность = ДополнительныеПараметры.Доверенность;
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ПользовательПриИзменении(Элемент)
	
	Если НЕ ЗначениеЗаполнено(Представитель) И ЗначениеЗаполнено(Пользователь) Тогда
		
		ФизическоеЛицо = МультирежимВызовСервера.ФизЛицоПоПользователюИзСправочникаПользователи(Пользователь);
		ФизическоеЛицоПриИзменении(Неопределено);
		
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ДоверенностьОткрытие(Элемент, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	ПоказатьЗначение(, Доверенность);
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура Записать(Команда)
	
	Если ПроверитьЗаполнение() Тогда
		ЗаписатьДанные();
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ЗаписатьИЗакрыть(Команда)
	
	Если ПроверитьЗаполнение() Тогда
		Модифицированность = Ложь;
		ЗаписатьДанные();
		
		Закрыть();
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаКлиентеНаСервереБезКонтекста
Процедура УправлениеФормой(Форма)
	
	Элементы = Форма.Элементы;
	
	ПредставительЮрЛицо	= Форма.ПредставительЮридическоеЛицо = 1;
	
	Элементы.ФизическоеЛицо.Доступность	= НЕ ПредставительЮрЛицо;
	Элементы.ЮридическоеЛицо.Доступность = ПредставительЮрЛицо;
	Элементы.УполномоченноеЛицоПредставителя.Доступность = ПредставительЮрЛицо;
		
КонецПроцедуры

&НаСервере
Процедура УправлениеФормойПриСоздании()
	
	Элементы.ГруппаПользователь.Видимость = НесколькоПодписантов;
	
	КлючСохраненияПоложенияОкна = Строка(НесколькоПодписантов);
	
КонецПроцедуры

&НаКлиенте
Процедура ЗаписатьДанные()
	
	ЗначениеВыбора	= РегистрацияВНОКлиентСервер.ПараметрыПодписанта();
	ЗаполнитьЗначенияСвойств(ЗначениеВыбора, ЭтаФорма);
	
	Модифицированность = Ложь;
	
	ОповеститьОВыборе(ЗначениеВыбора);
	
КонецПроцедуры

&НаКлиенте
Процедура ВопросСохранитьИзмененияЗавершение(Результат, ДополнительныеПараметры) Экспорт

	Если Результат = КодВозвратаДиалога.Да Тогда
		Если ПроверитьЗаполнение() Тогда
			ЗаписатьДанные();
			Закрыть();
		КонецЕсли;
	ИначеЕсли Результат = КодВозвратаДиалога.Нет Тогда
		Модифицированность = Ложь;
		Закрыть();
	КонецЕсли;

КонецПроцедуры


#КонецОбласти