#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область ПрограммныйИнтерфейс

#Область ДляВызоваИзДругихПодсистем

// СтандартныеПодсистемы.ВерсионированиеОбъектов

// Определяет настройки объекта для подсистемы ВерсионированиеОбъектов.
//
// Параметры:
//  Настройки - Структура - настройки подсистемы.
Процедура ПриОпределенииНастроекВерсионированияОбъектов(Настройки) Экспорт

КонецПроцедуры
// Конец СтандартныеПодсистемы.ВерсионированиеОбъектов

// СтандартныеПодсистемы.УправлениеДоступом

// См. УправлениеДоступомПереопределяемый.ПриЗаполненииСписковСОграничениемДоступа.
Процедура ПриЗаполненииОграниченияДоступа(Ограничение) Экспорт

	Ограничение.Текст =
	"РазрешитьЧтениеИзменение
	|ГДЕ
	|	ЗначениеРазрешено(Организация)";

КонецПроцедуры

// Конец СтандартныеПодсистемы.УправлениеДоступом

#КонецОбласти

#КонецОбласти

#Область СлужебныйПрограммныйИнтерфейс

Функция СтруктураПараметровРасчетаРезервов() Экспорт
	
	СтруктураПараметров = Новый Структура;
	СтруктураПараметров.Вставить("Организация",   Справочники.Организации.ПустаяСсылка());
	СтруктураПараметров.Вставить("Резерв",        Справочники.Резервы.ПустаяСсылка());
	СтруктураПараметров.Вставить("ВидРезерва",    Перечисления.ВидыРезервовПоОплатеТруда.ПустаяСсылка());
	СтруктураПараметров.Вставить("НачалоПериода", Дата(1,1,1));
	СтруктураПараметров.Вставить("КонецПериода",  Дата(1,1,1));
	
	Возврат СтруктураПараметров;
	
КонецФункции

Функция ПлановыеНачисленияРезервов(Организация, Резерв, Период) Экспорт
	
	Возврат РезервыПоОплатеТруда.ПлановыеНачисленияРезервов(Организация, Резерв, Период);
	
КонецФункции

Функция ПараметрыРасчетаРезерва(Организация, Резерв, Период) Экспорт
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("Организация", Организация);
	Запрос.УстановитьПараметр("Резерв",      Резерв);
	Запрос.УстановитьПараметр("Период",      Период);
	Запрос.Текст =
	"ВЫБРАТЬ
	|	НастройкиРасчетаРезервовПоОплатеТруда.Ссылка КАК Ссылка,
	|	НастройкиРасчетаРезервовПоОплатеТруда.Организация КАК Организация,
	|	НастройкиРасчетаРезервовПоОплатеТруда.Резерв КАК Резерв,
	|	НастройкиРасчетаРезервовПоОплатеТруда.ВидРезерва КАК ВидРезерва,
	|	НастройкиРасчетаРезервовПоОплатеТруда.НачалоПериода КАК НачалоПериода,
	|	НастройкиРасчетаРезервовПоОплатеТруда.КонецПериода КАК КонецПериода
	|ИЗ
	|	Справочник.НастройкиРасчетаРезервовПоОплатеТруда КАК НастройкиРасчетаРезервовПоОплатеТруда
	|ГДЕ
	|	НастройкиРасчетаРезервовПоОплатеТруда.Организация = &Организация
	|	И НастройкиРасчетаРезервовПоОплатеТруда.Резерв = &Резерв
	|	И &Период МЕЖДУ НАЧАЛОПЕРИОДА(НастройкиРасчетаРезервовПоОплатеТруда.НачалоПериода, МЕСЯЦ) И КОНЕЦПЕРИОДА(НастройкиРасчетаРезервовПоОплатеТруда.КонецПериода, МЕСЯЦ)";
	
	Выборка = Запрос.Выполнить().Выбрать();
	
	ПараметрыРасчета = СтруктураПараметровРасчетаРезервов();
	Если Выборка.Следующий() Тогда
		ЗаполнитьЗначенияСвойств(ПараметрыРасчета, Выборка);
	КонецЕсли;
	
	Возврат ПараметрыРасчета;
	
КонецФункции

Функция ВидРезерва(Организация, Резервы) Экспорт
	
	УстановитьПривилегированныйРежим(Истина);
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("Организация", Организация);
	Запрос.УстановитьПараметр("Резерв",      Резервы);
	Запрос.Текст =
	"ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	НастройкиРасчетаРезервовПоОплатеТруда.Ссылка КАК Ссылка,
	|	НастройкиРасчетаРезервовПоОплатеТруда.ВидРезерва КАК ВидРезерва
	|ИЗ
	|	Справочник.НастройкиРасчетаРезервовПоОплатеТруда КАК НастройкиРасчетаРезервовПоОплатеТруда
	|ГДЕ
	|	НастройкиРасчетаРезервовПоОплатеТруда.Организация = &Организация
	|	И НастройкиРасчетаРезервовПоОплатеТруда.Резерв В(&Резерв)";
	
	Выборка = Запрос.Выполнить().Выбрать();
	
	Если Выборка.Следующий() Тогда
		ВидРезерва = Выборка.ВидРезерва;
	Иначе
		ВидРезерва = Перечисления.ВидыРезервовПоОплатеТруда.ПустаяСсылка();
	КонецЕсли;
	
	Возврат ВидРезерва;
	
КонецФункции

Процедура ПолучитьВТИсключаемыеНачисления(МенеджерВременныхТаблиц, Организация, Резерв, Период) Экспорт
	
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = МенеджерВременныхТаблиц;
	Запрос.УстановитьПараметр("Организация", Организация);
	Запрос.УстановитьПараметр("Резерв",      Резерв);
	Запрос.УстановитьПараметр("Период",      Период);
	Запрос.Текст =
	"ВЫБРАТЬ
	|	НастройкиРасчетаРезервовПоОплатеТруда.Ссылка КАК Ссылка
	|ПОМЕСТИТЬ ВТПараметрыРасчета
	|ИЗ
	|	Справочник.НастройкиРасчетаРезервовПоОплатеТруда КАК НастройкиРасчетаРезервовПоОплатеТруда
	|ГДЕ
	|	НастройкиРасчетаРезервовПоОплатеТруда.Организация = &Организация
	|	И НастройкиРасчетаРезервовПоОплатеТруда.Резерв = &Резерв
	|	И &Период МЕЖДУ НАЧАЛОПЕРИОДА(НастройкиРасчетаРезервовПоОплатеТруда.НачалоПериода, МЕСЯЦ) И КОНЕЦПЕРИОДА(НастройкиРасчетаРезервовПоОплатеТруда.КонецПериода, МЕСЯЦ)
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	НастройкиРасчетаРезервовПоОплатеТрудаИсключенияИзРасчетнойБазыФондаОплатыТруда.ВидРасчета КАК ВидРасчета
	|ПОМЕСТИТЬ ВТИсключаемыеНачисления
	|ИЗ
	|	Справочник.НастройкиРасчетаРезервовПоОплатеТруда.ИсключенияИзРасчетнойБазыФондаОплатыТруда КАК НастройкиРасчетаРезервовПоОплатеТрудаИсключенияИзРасчетнойБазыФондаОплатыТруда
	|ГДЕ
	|	НастройкиРасчетаРезервовПоОплатеТрудаИсключенияИзРасчетнойБазыФондаОплатыТруда.Ссылка В
	|			(ВЫБРАТЬ
	|				ВТПараметрыРасчета.Ссылка
	|			ИЗ
	|				ВТПараметрыРасчета)
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|УНИЧТОЖИТЬ ВТПараметрыРасчета";
	
	Запрос.Выполнить();
	
КонецПроцедуры

Функция НастройкаРезервов(Организация, Резерв, Период) Экспорт
	
	Возврат РезервыПоОплатеТруда.НастройкаРезервов(Организация, Резерв, Период);
	
КонецФункции

Функция СсылкаНаНастройкуРасчетаДляГоловнойОрганизации(ГоловнаяОрганизация, Резерв, Период) Экспорт
	
	УстановитьПривилегированныйРежим(Истина);
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("Организация", ГоловнаяОрганизация);
	Запрос.УстановитьПараметр("Резерв",      Резерв);
	Запрос.УстановитьПараметр("Период",      Период);
	Запрос.Текст =
	"ВЫБРАТЬ
	|	НастройкиРасчетаРезервовПоОплатеТруда.Ссылка КАК Ссылка
	|ИЗ
	|	Справочник.НастройкиРасчетаРезервовПоОплатеТруда КАК НастройкиРасчетаРезервовПоОплатеТруда
	|ГДЕ
	|	НастройкиРасчетаРезервовПоОплатеТруда.Организация = &Организация
	|	И НастройкиРасчетаРезервовПоОплатеТруда.Резерв = &Резерв
	|	И &Период МЕЖДУ НАЧАЛОПЕРИОДА(НастройкиРасчетаРезервовПоОплатеТруда.НачалоПериода, МЕСЯЦ) И КОНЕЦПЕРИОДА(НастройкиРасчетаРезервовПоОплатеТруда.КонецПериода, МЕСЯЦ)";
	
	Выборка = Запрос.Выполнить().Выбрать();
	
	Выборка.Следующий();
	
	Если Выборка.Количество() = 0 Тогда
		ВызватьИсключение НСтр("ru = 'Отсутствуют настройки для головной организации'");
	Иначе
		Возврат Выборка.Ссылка;
	КонецЕсли;
	
КонецФункции

Функция НастройкиДействующихРезервов(Организация, Период) Экспорт
	
	Возврат РезервыПоОплатеТруда.НастройкиДействующихРезервов(Организация, Период);
	
КонецФункции

Функция ОписаниеНастройкиДействующихРезервов() Экспорт
	
	Возврат РезервыПоОплатеТруда.ОписаниеНастройкиДействующихРезервов();
	
КонецФункции

Функция ВидыРасчетовТекущейНастройкиРезерва(Организация, Резерв, Период) Экспорт
	
	Результат = ПлановыеНачисленияРезервов(Организация, Резерв, Период);
	ВидыРасчетовРезерва = Результат.ВыгрузитьКолонку("ВидРасчетаРезерва");
	
	Возврат ВидыРасчетовРезерва;
	
КонецФункции

Процедура СинхронизироватьНастройки(Объект, Организации = Неопределено) Экспорт
	
	ГоловнаяОрганизация = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(Объект.Организация, "ГоловнаяОрганизация");
	
	Если Объект.Организация <> ГоловнаяОрганизация Тогда
		Возврат;
	КонецЕсли;
	
	УстановитьПривилегированныйРежим(Истина);
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("ГоловнаяОрганизация", ГоловнаяОрганизация);
	Запрос.УстановитьПараметр("Резерв",              Объект.Резерв);
	Запрос.УстановитьПараметр("ВидРезерва",          Объект.ВидРезерва);
	Запрос.УстановитьПараметр("НачалоПериода",       Объект.НачалоПериода);
	Запрос.УстановитьПараметр("КонецПериода",        Объект.КонецПериода);
	Запрос.УстановитьПараметр("ОтборПоОрганизации",  Организации);
	
	ТекстЗапроса =
	"ВЫБРАТЬ
	|	Организации.Ссылка КАК Организация
	|ПОМЕСТИТЬ ВТ_Организации
	|ИЗ
	|	Справочник.Организации КАК Организации
	|ГДЕ
	|	Организации.ГоловнаяОрганизация = &ГоловнаяОрганизация
	|	И Организации.Ссылка <> &ГоловнаяОрганизация
	|	И &УсловиеПоОрганизации
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	НастройкиРасчетаРезервовПоОплатеТруда.Организация КАК Организация,
	|	НастройкиРасчетаРезервовПоОплатеТруда.Ссылка КАК НастройкиРасчетаРезервовПоОплатеТруда
	|ПОМЕСТИТЬ ВТ_Настройки
	|ИЗ
	|	Справочник.НастройкиРасчетаРезервовПоОплатеТруда КАК НастройкиРасчетаРезервовПоОплатеТруда
	|ГДЕ
	|	НастройкиРасчетаРезервовПоОплатеТруда.Резерв = &Резерв
	|	И НастройкиРасчетаРезервовПоОплатеТруда.ВидРезерва = &ВидРезерва
	|	И НастройкиРасчетаРезервовПоОплатеТруда.НачалоПериода = &НачалоПериода
	|	И НастройкиРасчетаРезервовПоОплатеТруда.КонецПериода = &КонецПериода
	|	И НастройкиРасчетаРезервовПоОплатеТруда.Организация В
	|			(ВЫБРАТЬ
	|				ВТ_Организации.Организация
	|			ИЗ
	|				ВТ_Организации)
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВТ_Организации.Организация КАК Организация,
	|	ЕСТЬNULL(ВТ_Настройки.НастройкиРасчетаРезервовПоОплатеТруда, ЗНАЧЕНИЕ(Справочник.НастройкиРасчетаРезервовПоОплатеТруда.ПустаяСсылка)) КАК НастройкиРасчетаРезервовПоОплатеТруда
	|ИЗ
	|	ВТ_Организации КАК ВТ_Организации
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_Настройки КАК ВТ_Настройки
	|		ПО ВТ_Организации.Организация = ВТ_Настройки.Организация";
	
	Если ЗначениеЗаполнено(Организации) Тогда
		ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "&УсловиеПоОрганизации", "Организации.Ссылка В (&ОтборПоОрганизации)");
	Иначе
		ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "&УсловиеПоОрганизации", "Истина");
	КонецЕсли;
	
	Запрос.Текст = ТекстЗапроса;
	Выборка = Запрос.Выполнить().Выбрать();
	
	Пока Выборка.Следующий() Цикл
		
		Если ЗначениеЗаполнено(Выборка.НастройкиРасчетаРезервовПоОплатеТруда) Тогда
			НастройкаПодразделения = Выборка.НастройкиРасчетаРезервовПоОплатеТруда.ПолучитьОбъект();
		Иначе
			НастройкаПодразделения = Справочники.НастройкиРасчетаРезервовПоОплатеТруда.СоздатьЭлемент();
		КонецЕсли;
		
		ИсключаемыеСвойства = "Организация, ВидыРасчетовРезерва, ИсключенияИзРасчетнойБазыФондаОплатыТруда, ДополнительныеРеквизиты";
		Если ТипЗнч(Объект) = Тип("СправочникОбъект.НастройкиРасчетаРезервовПоОплатеТруда") Тогда
			ИсключаемыеСвойства = ИсключаемыеСвойства + ", Родитель, Владелец";
		КонецЕсли;
		ЗаполнитьЗначенияСвойств(НастройкаПодразделения, Объект, , ИсключаемыеСвойства);
		
		НастройкаПодразделения.Организация = Выборка.Организация;
		
		ОписаниеОбъекта = Новый Структура();
		ОписаниеОбъекта.Вставить("Организация",   НастройкаПодразделения.Организация);
		ОписаниеОбъекта.Вставить("Резерв",        НастройкаПодразделения.Резерв);
		ОписаниеОбъекта.Вставить("НачалоПериода", НастройкаПодразделения.НачалоПериода);
		ОписаниеОбъекта.Вставить("КонецПериода",  НастройкаПодразделения.КонецПериода);
		
		НастройкаПодразделения.Наименование       = РезервыПоОплатеТруда.НаименованиеНастройки(ОписаниеОбъекта);
		НастройкаПодразделения.ПолноеНаименование = РезервыПоОплатеТруда.ПолноеНаименованиеНастройки(ОписаниеОбъекта);
		СкопироватьВидыРасчетовРезерва(НастройкаПодразделения, Объект.ВидыРасчетовРезерва);
		СкопироватьТабличнуюЧасть(НастройкаПодразделения, Объект, "ИсключенияИзРасчетнойБазыФондаОплатыТруда");
		
		НастройкаПодразделения.Записать();
		
	КонецЦикла;
	
КонецПроцедуры

Процедура СкопироватьТабличнуюЧасть(Приемник, Источник, ИмяТаблицы) Экспорт
	
	Приемник[ИмяТаблицы].Очистить();
	Для Каждого СтрокаТаблицы Из Источник[ИмяТаблицы] Цикл
		ЗаполнитьЗначенияСвойств(Приемник[ИмяТаблицы].Добавить(), СтрокаТаблицы);
	КонецЦикла;
	
КонецПроцедуры

Процедура СкопироватьВидыРасчетовРезерва(Приемник, ТаблицаИсточник) Экспорт
	
	Приемник.ВидыРасчетовРезерва.Очистить();
	
	ЗначенияРеквизитов = ОбщегоНазначения.ЗначенияРеквизитовОбъектов(ОбщегоНазначения.ВыгрузитьКолонку(ТаблицаИсточник, "ВидРасчетаРезерва"), "ВидРасчета, ЭтоРасчетОтпуска");
	
	ОписаниеСтроки = Новый Структура("НомерСтроки, ВидРасчета, ВидРасчетаРезерва");
	Для Каждого СтрокаТаблицы Из ТаблицаИсточник Цикл
		ЭтоРасчетОтпуска = ЗначенияРеквизитов[СтрокаТаблицы.ВидРасчетаРезерва].ЭтоРасчетОтпуска;
		
		ОписаниеСтроки.НомерСтроки          = СтрокаТаблицы.НомерСтроки;
		ОписаниеСтроки.ВидРасчета = ЗначенияРеквизитов[СтрокаТаблицы.ВидРасчетаРезерва].ВидРасчета;
		ЗаполнитьВидРасчетаРезерваПоОписанию(ОписаниеСтроки,
			Приемник.Организация,
			Приемник.Резерв,
			Приемник.ВидыРасчетовРезерва,
			ЭтоРасчетОтпуска);
			
		Если Не ЭтоРасчетОтпуска Тогда
			ИсключаемыеСвойства = "Организация, Родитель, Владелец";
			ВидРасчетаРезерваОбъект = ОписаниеСтроки.ВидРасчетаРезерва.ПолучитьОбъект();
			ЗаполнитьЗначенияСвойств(ВидРасчетаРезерваОбъект, СтрокаТаблицы.ВидРасчетаРезерва, , ИсключаемыеСвойства);
			ВидРасчетаРезерваОбъект.Записать();
		КонецЕсли;
		
		НоваяСтрока = Приемник.ВидыРасчетовРезерва.Добавить();
		НоваяСтрока.ВидРасчетаРезерва = ОписаниеСтроки.ВидРасчетаРезерва;
	КонецЦикла;
	
КонецПроцедуры

Процедура ЗаполнитьВидРасчетаРезерваПоОписанию(СтрокаТаблицы, Организация, Резерв, ВидыРасчетовРезерва, ЭтоРасчетОтпуска) Экспорт
	
	Если НЕ ЗначениеЗаполнено(СтрокаТаблицы.ВидРасчета) Тогда
		Возврат;
	КонецЕсли;
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("Организация",          Организация);
	Запрос.УстановитьПараметр("Резерв",               Резерв);
	Запрос.УстановитьПараметр("ВидРасчета",           СтрокаТаблицы.ВидРасчета);
	Запрос.УстановитьПараметр("ЭтоРасчетОтпуска",     ЭтоРасчетОтпуска);
	Запрос.Текст = 
	"ВЫБРАТЬ ПЕРВЫЕ 1
	|	ВидыРасчетовРезервовПоОплатеТруда.Ссылка КАК Ссылка,
	|	ВидыРасчетовРезервовПоОплатеТруда.ВидРасчета КАК ВидРасчета
	|ИЗ
	|	Справочник.ВидыРасчетовРезервовПоОплатеТруда КАК ВидыРасчетовРезервовПоОплатеТруда
	|ГДЕ
	|	ВидыРасчетовРезервовПоОплатеТруда.Организация = &Организация
	|	И ВидыРасчетовРезервовПоОплатеТруда.Резерв = &Резерв
	|	И ВидыРасчетовРезервовПоОплатеТруда.ВидРасчета = &ВидРасчета
	|	И ВидыРасчетовРезервовПоОплатеТруда.ЭтоРасчетОтпуска = &ЭтоРасчетОтпуска
	|	И НЕ ВидыРасчетовРезервовПоОплатеТруда.ПометкаУдаления";
	
	Результат = Запрос.Выполнить();
	
	СоздатьНовыйЭлемент = Ложь;
	Если Результат.Пустой() Тогда
		СоздатьНовыйЭлемент = Истина;
	Иначе
		Выборка = Результат.Выбрать();
		Пока Выборка.Следующий() Цикл
			ВидРасчетаРезерва = Выборка.Ссылка;
			Если СоздатьНовыйЭлемент Тогда
				Прервать;
			КонецЕсли;
			МассивСтрок = ВидыРасчетовРезерва.НайтиСтроки(Новый Структура("ВидРасчетаРезерва", Выборка.Ссылка));
			Для Каждого СтрокаМассива Из МассивСтрок Цикл
				Если СтрокаМассива.НомерСтроки <> СтрокаТаблицы.НомерСтроки Тогда
					СоздатьНовыйЭлемент = Истина;
					Прервать;
				КонецЕсли;
			КонецЦикла;
		КонецЦикла;
	КонецЕсли;
	
	Если СоздатьНовыйЭлемент Тогда
		ВидРасчетаРезерва = НовыйВидРасчетаРезерва(СтрокаТаблицы.ВидРасчета,
			Организация,
			Резерв,
			ЭтоРасчетОтпуска);
	КонецЕсли;
	
	СтрокаТаблицы.ВидРасчетаРезерва = ВидРасчетаРезерва;
	
КонецПроцедуры

Функция НовыйВидРасчетаРезерва(ВидРасчета, Организация, Резерв, ЭтоРасчетОтпуска) Экспорт
	
	ОписаниеЭлемента = Новый Структура();
	ОписаниеЭлемента.Вставить("Организация",          Организация);
	ОписаниеЭлемента.Вставить("Резерв",               Резерв);
	ОписаниеЭлемента.Вставить("ВидРасчета",           ВидРасчета);
	ОписаниеЭлемента.Вставить("ЭтоРасчетОтпуска",     ЭтоРасчетОтпуска);
	
	ВидРасчетаРезерва = Справочники.ВидыРасчетовРезервовПоОплатеТруда.СоздатьЭлементПоОписанию(ОписаниеЭлемента);
	
	Возврат ВидРасчетаРезерва;
	
КонецФункции

#КонецОбласти

#КонецЕсли