
#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	Перем АктивнаяЗакладка, НастройкиКомпоновкиДанныхОтбор;
	
	КэшЗначений = Новый Структура;
	
	КэшЗначений.Вставить("ИспользоватьХарактеристики", ПолучитьФункциональнуюОпцию("ИспользоватьХарактеристики"));
	
	ЗаполнитьПрайсЛистПараметрами(Параметры, НастройкиКомпоновкиДанныхОтбор);
	
	КэшЗначений.Вставить("НастройкиКомпоновкиДанныхОтбор", НастройкиКомпоновкиДанныхОтбор);
	
	КэшЗначений.Вставить("ЭтоДиафильм", (ПрайсЛист.ПечатьПрайсЛиста = Перечисления.ВариантыПечатиПрайсЛиста.Диафильм));
	КэшЗначений.Вставить("ЭтоДвеКолонки", (ПрайсЛист.ПечатьПрайсЛиста
		= Перечисления.ВариантыПечатиПрайсЛиста.ДвеКолонки));
	КэшЗначений.Вставить("ЭтоПолотно", (ПрайсЛист.ПечатьПрайсЛиста = Перечисления.ВариантыПечатиПрайсЛиста.Полотно));
	
	ЗаполнитьРеквизитыПредставлений();
	
	ЗагрузитьТиповыеНастройкиОтбораНоменклатуры();
	
	ЗаполнитьЦены(Параметры);
	
	УстановитьВидимостьДоступностьЭлементов();
	
	Параметры.Свойство("АктивнаяЗакладка", АктивнаяЗакладка);
	Элементы.Страницы.ТекущаяСтраница = Элементы[АктивнаяЗакладка];
	
	МассивСтрок = ПрайсЛист.ПредставлениеНоменклатуры.НайтиСтроки(Новый Структура("РеквизитНоменклатуры",
		"Характеристика"));
	Если МассивСтрок.Количество() > 0 Тогда
		МассивСтрок[0].СлужебныйУправлениеВидимостью = КэшЗначений.ИспользоватьХарактеристики;
	КонецЕсли;
	
	ИмяВариантаСКД = Параметры.ИмяВариантаСКД;
	ИнициализироватьКомпоновщикНастроек(КомпоновщикНастроек, Параметры.АдресСхемыКомпоновкиДанныхКолонок,
		Параметры.ИмяВариантаСКД);
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовШапкиФормы

&НаКлиенте
Процедура ПрайсЛистКартинкаШиринаПриИзменении(Элемент)
	
	Если ПрайсЛист.ИзменятьРазмерПропорционально И Пропорция <> 0 Тогда
		
		ПрайсЛист.КартинкаВысота = ПрайсЛист.КартинкаШирина / Пропорция;
		
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ПрайсЛистКартинкаВысотаПриИзменении(Элемент)
	
	Если ПрайсЛист.ИзменятьРазмерПропорционально И Пропорция <> 0 Тогда
		
		ПрайсЛист.КартинкаШирина = ПрайсЛист.КартинкаВысота / Пропорция;
		
	КонецЕсли;

КонецПроцедуры

&НаКлиенте
Процедура ПрайсЛистКартинкаВысотаОкончаниеВводаТекста(Элемент, Текст, ДанныеВыбора, ПараметрыПолученияДанных, СтандартнаяОбработка)
	
	ПересчитатьПропорцию("КартинкаВысота", "КартинкаШирина");
	
	ПрайсЛист.КартинкаВысота = Число(Текст);
	
КонецПроцедуры

&НаКлиенте
Процедура ПрайсЛистКартинкаШиринаОкончаниеВводаТекста(Элемент, Текст, ДанныеВыбора, ПараметрыПолученияДанных, СтандартнаяОбработка)
	
	ПересчитатьПропорцию("КартинкаШирина", "КартинкаВысота");
	
	ПрайсЛист.КартинкаШирина = Число(Текст);
	
КонецПроцедуры

&НаКлиенте
Процедура ВыводитьОстаткиПриИзменении(Элемент)
	
	ОбщегоНазначенияКлиентСервер.УстановитьСвойствоЭлементаФормы(Элементы, "ГруппаТекстПредставлений", "Доступность", (ПрайсЛист.ПредставлениеОстатков = 2));
	
КонецПроцедуры

&НаКлиенте
Процедура ЗаголовкиКолонокСЦенамиПриИзменении(Элемент)
	
	ПрайсЛист.НазваниеЦеныПредставлением = (ЗаголовкиКолонокСЦенами = 1);
	
КонецПроцедуры

&НаКлиенте
Процедура КодАртикулПриИзменении(Элемент)
	
	МассивСтрок = ПрайсЛист.ПредставлениеНоменклатуры.НайтиСтроки(Новый Структура("РеквизитНоменклатуры", "Код"));
	МассивСтрок[0].Использование = (КодАртикул = "Код");
	
	МассивСтрок = ПрайсЛист.ПредставлениеНоменклатуры.НайтиСтроки(Новый Структура("РеквизитНоменклатуры", "Артикул"));
	МассивСтрок[0].Использование = (КодАртикул = "Артикул");
	
	МассивСтрок = ПрайсЛист.ПредставлениеНоменклатуры.НайтиСтроки(Новый Структура("РеквизитНоменклатуры",
		"ШтрихкодНоменклатуры"));
	МассивСтрок[0].Использование = (КодАртикул = "Штрихкод");
	
КонецПроцедуры

&НаКлиенте
Процедура ПредставлениеПриИзменении(Элемент)
	
	МассивСтрок = ПрайсЛист.ПредставлениеНоменклатуры.НайтиСтроки(Новый Структура("РеквизитНоменклатуры",
		"Наименование"));
	МассивСтрок[0].Использование = (Представление = НСтр("ru='Наименование'"));
	
	МассивСтрок = ПрайсЛист.ПредставлениеНоменклатуры.НайтиСтроки(Новый Структура("РеквизитНоменклатуры",
		"НаименованиеПолное"));
	МассивСтрок[0].Использование = (Представление = НСтр("ru='НаименованиеПолное'"));
	
	МассивСтрок = ПрайсЛист.ПредставлениеНоменклатуры.НайтиСтроки(Новый Структура("РеквизитНоменклатуры",
		"Комментарий"));
	МассивСтрок[0].Использование = (Представление = НСтр("ru='Описание'"));
	
КонецПроцедуры

&НаКлиенте
Процедура ВыводитьХарактеристикиПриИзменении(Элемент)
	
	МассивСтрок = ПрайсЛист.ПредставлениеНоменклатуры.НайтиСтроки(Новый Структура("РеквизитНоменклатуры",
		"Характеристика"));
	МассивСтрок[0].Использование = ВыводитьХарактеристики;
	
КонецПроцедуры

&НаКлиенте
Процедура ВыводитьПризнакНовинкаПриИзменении(Элемент)
	
	МассивСтрок = ПрайсЛист.ПредставлениеНоменклатуры.НайтиСтроки(Новый Структура("РеквизитНоменклатуры",
		"ПризнакНовинка"));
	МассивСтрок[0].Использование = ВыводитьПризнакНовинка;
	
КонецПроцедуры

&НаКлиенте
Процедура ВыбранныйВидЦенПриИзменении(Элемент)
	Если ПрайсЛист.ВидыЦен.Количество() > 0 Тогда
		ПрайсЛист.ВидыЦен[0].Использование = Истина;
	КонецЕсли;
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийТабличнойЧастиВыборДоступныеПоляВыбора

&НаКлиенте
Процедура ВыборДоступныеПоляВыбораВыбор(Элемент, ВыбраннаяСтрока, Поле, СтандартнаяОбработка)
	
	ПриВыбореКолонки(ВыбраннаяСтрока, СтандартнаяОбработка);
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийТабличнойЧастиДоступныеВидыЦен

&НаКлиенте
Процедура ДоступныеВидыЦенВыбор(Элемент, ВыбраннаяСтрока, Поле, СтандартнаяОбработка)
	СтандартнаяОбработка = Ложь;
	ВыбратьВидыЦен(ВыбраннаяСтрока);
КонецПроцедуры

&НаКлиенте
Процедура ДоступныеВидыЦенВыборЗначения(Элемент, Значение, СтандартнаяОбработка)
	СтандартнаяОбработка = Ложь;
	ВыбратьВидыЦен(Значение);
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура ВыбратьКолонку(Команда)
	
	ИдентификаторКомпоновкиДанных = Элементы.ВыборДоступныеПоляВыбора.ТекущаяСтрока;
	Если ИдентификаторКомпоновкиДанных <> Неопределено Тогда
		
		ПриВыбореКолонки(ИдентификаторКомпоновкиДанных, Неопределено)
		
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура УдалитьКолонку(Команда)
	
	ТекущиеДанные = Элементы.ПрайсЛистПредставлениеНоменклатуры.ТекущиеДанные;
	Если ТекущиеДанные <> Неопределено Тогда
		ПрайсЛист.ПредставлениеНоменклатуры.Удалить(ТекущиеДанные);
	КонецЕсли;

КонецПроцедуры

&НаКлиенте
Процедура ОК(Команда)
	
	МассивСтрок = ПрайсЛист.ПредставлениеНоменклатуры.НайтиСтроки(Новый Структура("Использование", Истина));
	Отказ = (МассивСтрок.Количество() = 0);
	Если Отказ Тогда
		
		ТекстОшибки = НСтр("ru ='Необходимо выбрать минимум одно поле...'");
		ОбщегоНазначенияКлиент.СообщитьПользователю(ТекстОшибки);
		
	Иначе
		
		ПараметрыЗакрытия = Новый Структура;
		ПараметрыЗакрытия.Вставить("РезультатЗакрытия", КодВозвратаДиалога.ОК);
		ПараметрыЗакрытия.Вставить("ПредставлениеНоменклатуры", ПрайсЛист.ПредставлениеНоменклатуры);
		ПараметрыЗакрытия.Вставить("КоличествоКолонок", ПрайсЛист.КоличествоКолонок);
		ПараметрыЗакрытия.Вставить("КартинкаШирина", ПрайсЛист.КартинкаШирина);
		ПараметрыЗакрытия.Вставить("КартинкаВысота", ПрайсЛист.КартинкаВысота);
		ПараметрыЗакрытия.Вставить("ИзменятьРазмерПропорционально", ПрайсЛист.ИзменятьРазмерПропорционально);
		ПараметрыЗакрытия.Вставить("ПредставлениеОстатков", ПрайсЛист.ПредставлениеОстатков);
		ПараметрыЗакрытия.Вставить("ОтборОрганизация", ПрайсЛист.ОтборОрганизация);
		ПараметрыЗакрытия.Вставить("ОтборСклад", ПрайсЛист.ОтборСклад);
		ПараметрыЗакрытия.Вставить("ТекстовоеПредставлениеОстатковМало", ПрайсЛист.ТекстовоеПредставлениеОстатковМало);
		ПараметрыЗакрытия.Вставить("ТекстовоеПредставлениеОстатковДостаточно", ПрайсЛист.ТекстовоеПредставлениеОстатковДостаточно);
		ПараметрыЗакрытия.Вставить("ТекстовоеПредставлениеОстатковМного", ПрайсЛист.ТекстовоеПредставлениеОстатковМного);
		ПараметрыЗакрытия.Вставить("НазваниеЦеныПредставлением", ПрайсЛист.НазваниеЦеныПредставлением);
		ПараметрыЗакрытия.Вставить("ВыводитьЦенуСЕдиницейИзмерения", ПрайсЛист.ВыводитьЦенуСЕдиницейИзмерения);
		ПараметрыЗакрытия.Вставить("НастройкиСКД", НастройкиОтбораНоменклатуры.Настройки);
		
		МассивВидовЦен = Новый Массив;
		Для Каждого СтрокаТаблицы Из ПрайсЛист.ВидыЦен Цикл

			Если Не ЗначениеЗаполнено(СтрокаТаблицы.ВидЦен) Тогда
				Продолжить;
			КонецЕсли;

			СтруктураВидаЦен = Новый Структура("Использование, ВидЦен", СтрокаТаблицы.Использование,
				СтрокаТаблицы.ВидЦен);
			МассивВидовЦен.Добавить(СтруктураВидаЦен);

		КонецЦикла;
		ПараметрыЗакрытия.Вставить("МассивВидовЦен", МассивВидовЦен);
		
		Закрыть(ПараметрыЗакрытия);
		
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаСервереБезКонтекста
Процедура ИнициализироватьКомпоновщикНастроек(КомпоновщикНастроек, АдресСхемыКомпоновкиДанных, ИмяВариантаСКД)
	
	Попытка
		КомпоновщикНастроек.Инициализировать(Новый ИсточникДоступныхНастроекКомпоновкиДанных(АдресСхемыКомпоновкиДанных));
		СхемаКомпоновкиДанных = ПолучитьИзВременногоХранилища(АдресСхемыКомпоновкиДанных);
		КомпоновщикНастроек.ЗагрузитьНастройки(СхемаКомпоновкиДанных.ВариантыНастроек[ИмяВариантаСКД].Настройки);
		КомпоновщикНастроек.Восстановить();
	Исключение
		ОбработкаОшибок.ПодробноеПредставлениеОшибки(ИнформацияОбОшибке());
	КонецПопытки;
	
КонецПроцедуры

&НаКлиенте
Процедура ПриВыбореКолонки(ВыбраннаяСтрока, СтандартнаяОбработка)
	
	ВыбранноеПоле = КомпоновщикНастроек.Настройки.ДоступныеПоляВыбора.ПолучитьОбъектПоИдентификатору(ВыбраннаяСтрока);
	ПутьПоля = Строка(ВыбранноеПоле.Поле);
	
	ОтборСтрокСлужебный = Новый Структура("СлужебныйПолеКомпоновкиПуть", ПутьПоля);
	Строки = ПрайсЛист.ПредставлениеНоменклатуры.НайтиСтроки(ОтборСтрокСлужебный);
	Если Строки.Количество() = 0 Тогда
		
		ПолеКомпоновкиПуть = СтрЗаменить(ПутьПоля, ".", "");
		ПолеКомпоновкиПуть = СтрЗаменить(ПолеКомпоновкиПуть, " ", "");
		
		Поле = Строка(ВыбранноеПоле.Поле);
		ЗаголовокПоля = ВыбранноеПоле.Заголовок;
		
		НоваяЗапись = ПрайсЛист.ПредставлениеНоменклатуры.Добавить();
		НоваяЗапись.Использование = Истина;
		НоваяЗапись.СлужебныйПолеКомпоновкиПуть = Поле;
		НоваяЗапись.РеквизитНоменклатуры = ЗаменитьСпецСимволы(ПолеКомпоновкиПуть);
		НоваяЗапись.СлужебныйУправлениеВидимостью = Истина;
		ПозицияТочки = СтрНайти(ЗаголовокПоля, ".", НаправлениеПоиска.СКонца);
		ЗаголовокПоля = Прав(ЗаголовокПоля, СтрДлина(ЗаголовокПоля) - ПозицияТочки);
		НоваяЗапись.РеквизитПредставление = ЗаголовокПоля;
		НоваяЗапись.ПараметрРасшифровки = Поле;
		НоваяЗапись.Ширина = 10;
		
	КонецЕсли;
	
КонецПроцедуры

&НаКлиентеНаСервереБезКонтекста
Функция ЗаменитьСпецСимволы(ПолеКомпоновкиПуть)
	
	Результат = Строка(ПолеКомпоновкиПуть);
	МассивСимволов = Новый Массив;
	МассивСимволов.Добавить("[");
	МассивСимволов.Добавить("]");
	МассивСимволов.Добавить("""");
	МассивСимволов.Добавить("(");
	МассивСимволов.Добавить(")");
	
	Для Каждого Символ Из МассивСимволов Цикл
		Результат = СтрЗаменить(Результат, Символ, "_");
	КонецЦикла;
	Возврат Результат;
	
КонецФункции

&НаСервере
Процедура ЗаполнитьСписокДоступныхВидовЦен()
	
	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ РАЗРЕШЕННЫЕ
	               |	ВидыЦен.Ссылка КАК ВидЦены
	               |ИЗ
	               |	Справочник.ВидыЦен КАК ВидыЦен
	               |ГДЕ
	               |	НЕ ВидыЦен.ПометкаУдаления
	               |	И НЕ ВидыЦен.Недействителен";
	ДоступныеВидыЦен.Загрузить(Запрос.Выполнить().Выгрузить());
	
КонецПроцедуры

&НаСервере
Процедура ЗаполнитьВидыЦен(ВидыЦен)
	
	Для Каждого СтрокаВидыЦен Из ВидыЦен Цикл
		ЗаполнитьЗначенияСвойств(ПрайсЛист.ВидыЦен.Добавить(), СтрокаВидыЦен);
	КонецЦикла;
	
КонецПроцедуры

&НаКлиенте
Процедура ВыбратьВидыЦен(МассивИдентификаторов)
	
	Для Каждого ИдентификаторСтроки Из МассивИдентификаторов Цикл
		
		СтрокаДоступногоВидаЦен = ДоступныеВидыЦен.НайтиПоИдентификатору(ИдентификаторСтроки);
		Отбор = Новый Структура("ВидЦен", СтрокаДоступногоВидаЦен.ВидЦены);
		НайденыСтроки = ПрайсЛист.ВидыЦен.НайтиСтроки(Отбор);
		Если НайденыСтроки.Количество() > 0 Тогда
			
			Для Каждого НайденаСтрока Из НайденыСтроки Цикл
				Если Не НайденаСтрока.Использование Тогда
					НайденаСтрока.Использование = Истина;
				КонецЕсли;
			КонецЦикла;
			Продолжить;
			
		КонецЕсли;
		
		НоваяЗапись = ПрайсЛист.ВидыЦен.Добавить();
		НоваяЗапись.Использование = Истина;
		НоваяЗапись.ВидЦен = СтрокаДоступногоВидаЦен.ВидЦены;
		
	КонецЦикла;
	
КонецПроцедуры

&НаСервере
Процедура ЗагрузитьТиповыеНастройкиОтбораНоменклатуры()
	
	СсылкаВоВременномХранилище	= ПрайсЛистыСлужебный.ИнициализироватьНастройкиОтбораПрайсЛиста(УникальныйИдентификатор);
	ИсточникДоступныхНастроекКД = Новый ИсточникДоступныхНастроекКомпоновкиДанных(СсылкаВоВременномХранилище);
	
	НастройкиОтбораНоменклатуры.Инициализировать(ИсточникДоступныхНастроекКД);
	НастройкиОтбораНоменклатуры.ЗагрузитьНастройки(КэшЗначений.НастройкиКомпоновкиДанныхОтбор);
	
КонецПроцедуры

&НаСервере
Процедура ЗаполнитьРеквизитыПредставлений()
	Перем Строка;
	Для Каждого Строка Из ПрайсЛист.ПредставлениеНоменклатуры Цикл
			
			Если Строка.Использование Тогда
				
				Если Строка.РеквизитНоменклатуры = "Артикул" Тогда 
					КодАртикул = "Артикул";
				КонецЕсли;
				
				Если Строка.РеквизитНоменклатуры = "Код" Тогда 
					КодАртикул = "Код";
				КонецЕсли;
				
				Если Строка.РеквизитНоменклатуры = "ШтрихкодНоменклатуры" Тогда 
					КодАртикул = "Штрихкод";
				КонецЕсли;
				
				Если Строка.РеквизитНоменклатуры = "Наименование"
					ИЛИ Строка.РеквизитНоменклатуры = "НаименованиеПолное" Тогда
					
					Представление = Строка.РеквизитНоменклатуры;
					
				ИначеЕсли Строка.РеквизитНоменклатуры = "Комментарий" Тогда
					
					Представление = НСтр("ru='Описание'");
					
				КонецЕсли;
				
			КонецЕсли;
			
			Если Строка.РеквизитНоменклатуры = "Характеристика"
				И КэшЗначений.ЭтоДиафильм Тогда
				
				ВыводитьХарактеристики = Строка.Использование;
				
			КонецЕсли;
			
			Если Строка.РеквизитНоменклатуры = "ПризнакНовинка" Тогда
				
				ВыводитьПризнакНовинка = Строка.Использование;
				
			КонецЕсли;
			
		КонецЦикла;
КонецПроцедуры

&НаСервере
Процедура ЗаполнитьПрайсЛистПараметрами(Параметры, НастройкиКомпоновкиДанныхОтбор)
		
	ПрайсЛист.ПредставлениеНоменклатуры.Загрузить(Параметры.ПредставлениеНоменклатуры.Выгрузить());
	ПрайсЛист.ПредставлениеОстатков = Параметры.ПредставлениеОстатков;
	ПрайсЛист.ПечатьПрайсЛиста = Параметры.ПечатьПрайсЛиста;
	
	Параметры.Свойство("ОтборОрганизация", ПрайсЛист.ОтборОрганизация);
	Параметры.Свойство("ОтборСклад", ПрайсЛист.ОтборСклад);
	
	Параметры.Свойство("ТекстовоеПредставлениеОстатковМало", ПрайсЛист.ТекстовоеПредставлениеОстатковМало);
	Параметры.Свойство("ТекстовоеПредставлениеОстатковДостаточно", ПрайсЛист.ТекстовоеПредставлениеОстатковДостаточно);
	Параметры.Свойство("ТекстовоеПредставлениеОстатковМного", ПрайсЛист.ТекстовоеПредставлениеОстатковМного);
	
	Параметры.Свойство("НазваниеЦеныПредставлением",	ПрайсЛист.НазваниеЦеныПредставлением);
	Параметры.Свойство("ВыводитьЦенуСЕдиницейИзмерения", ПрайсЛист.ВыводитьЦенуСЕдиницейИзмерения);
	
	Параметры.Свойство("КоличествоКолонок", ПрайсЛист.КоличествоКолонок);
	Параметры.Свойство("КартинкаШирина", ПрайсЛист.КартинкаШирина);
	Параметры.Свойство("КартинкаВысота", ПрайсЛист.КартинкаВысота);
	Параметры.Свойство("ИзменятьРазмерПропорционально", ПрайсЛист.ИзменятьРазмерПропорционально);
	
	Параметры.Свойство("НастройкиКомпоновкиДанных", НастройкиКомпоновкиДанныхОтбор);
	
КонецПроцедуры

&НаСервере
Процедура ЗаполнитьЦены(Параметры)
	Перем ВидыЦен;
	ЗаголовкиКолонокСЦенами = (ПрайсЛист.НазваниеЦеныПредставлением = 1);
	
	Параметры.Свойство("ВидыЦен", ВидыЦен);
	Если ВидыЦен <> Неопределено Тогда
		ЗаполнитьВидыЦен(ВидыЦен);
	КонецЕсли;
	
	ЗаполнитьСписокДоступныхВидовЦен();
	
	Если ПрайсЛист.ВидыЦен.Количество() = 0 Тогда
		ПрайсЛист.ВидыЦен.Добавить();
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура УстановитьВидимостьДоступностьЭлементов()
	
	ОбщегоНазначенияКлиентСервер.УстановитьСвойствоЭлементаФормы(Элементы, "ГруппаТекстПредставлений", "Доступность",
		(ПрайсЛист.ПредставлениеОстатков = 2));
		
	ОбщегоНазначенияКлиентСервер.УстановитьСвойствоЭлементаФормы(Элементы, "ГруппаКолонкиСхема", "Видимость",
		КэшЗначений.ЭтоПолотно);
		
	ОбщегоНазначенияКлиентСервер.УстановитьСвойствоЭлементаФормы(Элементы, "ГруппаКолонкиНесколькоВидовЦен", "Видимость",
		КэшЗначений.ЭтоПолотно);
		
	ОбщегоНазначенияКлиентСервер.УстановитьСвойствоЭлементаФормы(Элементы, "ГруппаКолонкиУпрощенная", "Видимость",
		КэшЗначений.ЭтоДвеКолонки ИЛИ КэшЗначений.ЭтоДиафильм);
		
	ОбщегоНазначенияКлиентСервер.УстановитьСвойствоЭлементаФормы(Элементы, "ГруппаКолонкиВидыЦенУпрощенная", "Видимость",
		КэшЗначений.ЭтоДвеКолонки Или КэшЗначений.ЭтоДиафильм);
		
	ОбщегоНазначенияКлиентСервер.УстановитьСвойствоЭлементаФормы(Элементы, "ГруппаОстатки", "Видимость",
		НЕ (КэшЗначений.ЭтоДвеКолонки Или КэшЗначений.ЭтоДиафильм));
		
	ОбщегоНазначенияКлиентСервер.УстановитьСвойствоЭлементаФормы(Элементы, "ДекорацияПодсказкаРазмерКартинки", "Видимость",
		КэшЗначений.ЭтоПолотно);
		
	ОбщегоНазначенияКлиентСервер.УстановитьСвойствоЭлементаФормы(Элементы, "ГруппаНастройкаКолонок", "Видимость",
		КэшЗначений.ЭтоДиафильм);

		ОбщегоНазначенияКлиентСервер.УстановитьСвойствоЭлементаФормы(Элементы, "ГруппаКартинка", "Видимость", 
			КэшЗначений.ЭтоДиафильм Или КэшЗначений.ЭтоПолотно);		

	РедактированиеДоступно = ПравоДоступа("Редактирование", Метаданные.Справочники.ПрайсЛисты);
	ОбщегоНазначенияКлиентСервер.УстановитьСвойствоЭлементаФормы(Элементы, "Страницы", "ТолькоПросмотр",
		Не РедактированиеДоступно);
	
	ОбщегоНазначенияКлиентСервер.УстановитьСвойствоЭлементаФормы(Элементы, "ГруппаХарактеристики", "Видимость",
		КэшЗначений.ИспользоватьХарактеристики И КэшЗначений.ЭтоДиафильм);
		
	Если ОбщегоНазначения.ЭтоМобильныйКлиент() Тогда
		
		ПоложениеКоманднойПанели = ПоложениеКоманднойПанелиФормы.Авто;
		ОбщегоНазначенияКлиентСервер.УстановитьСвойствоЭлементаФормы(Элементы, "Декорация2", "Видимость", Ложь);
		
	КонецЕсли;

КонецПроцедуры

&НаКлиенте
Процедура ПересчитатьПропорцию(Делимое, Делитель)
	Если ПрайсЛист.ИзменятьРазмерПропорционально И ПрайсЛист[Делитель] <> 0 Тогда
		Пропорция = ПрайсЛист[Делимое] / ПрайсЛист[Делитель];
	Иначе
		Пропорция = 1;
	КонецЕсли;
КонецПроцедуры
	

#КонецОбласти