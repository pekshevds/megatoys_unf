#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область СлужебныеПроцедурыИФункции

Функция КоличествоПрайсЛистовПользователя(ПользовательСсылка = Неопределено) Экспорт
	
	Если НЕ ЗначениеЗаполнено(ПользовательСсылка) Тогда
		
		ПользовательСсылка = Пользователи.АвторизованныйПользователь();
		
	КонецЕсли;
	
	Запрос = Новый Запрос("ВЫБРАТЬ Количество(1) КАК КоличествоПрайсЛистов ИЗ Справочник.ПрайсЛисты КАК Прайсы ГДЕ Прайсы.Автор = &ТекущийПользователь ИЛИ НЕ Прайсы.УдалитьИндивидуальный");
	Запрос.УстановитьПараметр("ТекущийПользователь", ПользовательСсылка);
	РезультатЗапроса = Запрос.Выполнить();
	
	Если РезультатЗапроса.Пустой() Тогда
		
		Возврат 0;
		
	КонецЕсли;
	
	Выборка = РезультатЗапроса.Выбрать();
	Возврат ?(Выборка.Следующий(), Выборка.КоличествоПрайсЛистов, 0);
	
КонецФункции

// СтандартныеПодсистемы.ВерсионированиеОбъектов

// Определяет настройки объекта для подсистемы ВерсионированиеОбъектов.
//
// Параметры:
//   Настройки - Структура - настройки подсистемы.
Процедура ПриОпределенииНастроекВерсионированияОбъектов(Настройки) Экспорт

КонецПроцедуры

// Конец СтандартныеПодсистемы.ВерсионированиеОбъектов

#Область ПредставлениеНоменклатуры

Процедура СоздатьНовуюТаблицуРеквизитов(ДоступныеПоля)
	
	ДоступныеПоля = Новый ТаблицаЗначений;
	ДоступныеПоля.Колонки.Добавить("Использование");
	ДоступныеПоля.Колонки.Добавить("РеквизитНоменклатуры");
	ДоступныеПоля.Колонки.Добавить("РеквизитПредставление");
	ДоступныеПоля.Колонки.Добавить("ПараметрРасшифровки");
	ДоступныеПоля.Колонки.Добавить("Ширина");
	ДоступныеПоля.Колонки.Добавить("СлужебныйУправлениеВидимостью");
	
КонецПроцедуры

Процедура ДоступныеПоляНоменклатуры(ДоступныеПоля) Экспорт
	
	СоздатьНовуюТаблицуРеквизитов(ДоступныеПоля);
	
	ИспользованиеХарактеристик = ПолучитьФункциональнуюОпцию("ИспользоватьХарактеристики");
	
	СтруктураПараметров = СтруктураПараметровТаблицыРеквизитов();
	СтруктураПараметров.Использование = Истина;
	СтруктураПараметров.РеквизитНоменклатуры = "КартинкаНоменклатуры";
	СтруктураПараметров.РеквизитПредставление = НСтр("ru='Картинка номенклатуры'");
	СтруктураПараметров.ПараметрРасшифровки = "НоменклатураСсылка";
	СтруктураПараметров.Ширина = 8;
	СтруктураПараметров.СлужебныйУправлениеВидимостью = Истина;
	ЗаполнитьЗначенияСвойств(ДоступныеПоля.Добавить(), СтруктураПараметров);
	
	СтруктураПараметров = СтруктураПараметровТаблицыРеквизитов();
	СтруктураПараметров.Использование = Истина;
	СтруктураПараметров.РеквизитНоменклатуры = "Код";
	СтруктураПараметров.РеквизитПредставление = НСтр("ru='Код'");
	СтруктураПараметров.ПараметрРасшифровки = "НоменклатураСсылка";
	СтруктураПараметров.Ширина = 11;
	СтруктураПараметров.СлужебныйУправлениеВидимостью = Истина;
	ЗаполнитьЗначенияСвойств(ДоступныеПоля.Добавить(), СтруктураПараметров);
	
	СтруктураПараметров = СтруктураПараметровТаблицыРеквизитов();
	СтруктураПараметров.Использование = Истина;
	СтруктураПараметров.РеквизитНоменклатуры = "Артикул";
	СтруктураПараметров.РеквизитПредставление = НСтр("ru='Артикул'");
	СтруктураПараметров.ПараметрРасшифровки = "НоменклатураСсылка";
	СтруктураПараметров.Ширина = 11;
	СтруктураПараметров.СлужебныйУправлениеВидимостью = Истина;
	ЗаполнитьЗначенияСвойств(ДоступныеПоля.Добавить(), СтруктураПараметров);
	
	СтруктураПараметров = СтруктураПараметровТаблицыРеквизитов();
	СтруктураПараметров.Использование = Истина;
	СтруктураПараметров.РеквизитНоменклатуры = "ШтрихкодНоменклатуры";
	СтруктураПараметров.РеквизитПредставление = НСтр("ru='Штрихкод номенклатуры'");
	СтруктураПараметров.ПараметрРасшифровки = "НоменклатураСсылка";
	СтруктураПараметров.Ширина = 11;
	СтруктураПараметров.СлужебныйУправлениеВидимостью = Истина;
	ЗаполнитьЗначенияСвойств(ДоступныеПоля.Добавить(), СтруктураПараметров);
	
	СтруктураПараметров = СтруктураПараметровТаблицыРеквизитов();
	СтруктураПараметров.Использование = Истина;
	СтруктураПараметров.РеквизитНоменклатуры = "Наименование";
	СтруктураПараметров.РеквизитПредставление = НСтр("ru='Наименование'");
	СтруктураПараметров.ПараметрРасшифровки = "НоменклатураСсылка";
	СтруктураПараметров.Ширина = 30;
	СтруктураПараметров.СлужебныйУправлениеВидимостью = Истина;
	ЗаполнитьЗначенияСвойств(ДоступныеПоля.Добавить(), СтруктураПараметров);
		
	СтруктураПараметров = СтруктураПараметровТаблицыРеквизитов();
	СтруктураПараметров.Использование = Истина;
	СтруктураПараметров.РеквизитНоменклатуры = "НаименованиеПолное";
	СтруктураПараметров.РеквизитПредставление = НСтр("ru='НаименованиеПолное'");
	СтруктураПараметров.ПараметрРасшифровки = "НоменклатураСсылка";
	СтруктураПараметров.Ширина = 30;
	СтруктураПараметров.СлужебныйУправлениеВидимостью = Истина;
	ЗаполнитьЗначенияСвойств(ДоступныеПоля.Добавить(), СтруктураПараметров);
	
	СтруктураПараметров = СтруктураПараметровТаблицыРеквизитов();
	СтруктураПараметров.Использование = Истина;
	СтруктураПараметров.РеквизитНоменклатуры = "Комментарий";
	СтруктураПараметров.РеквизитПредставление = НСтр("ru='Описание'");
	СтруктураПараметров.ПараметрРасшифровки = "НоменклатураСсылка";
	СтруктураПараметров.Ширина = 30;
	СтруктураПараметров.СлужебныйУправлениеВидимостью = Истина;
	ЗаполнитьЗначенияСвойств(ДоступныеПоля.Добавить(), СтруктураПараметров);
	
	СтруктураПараметров = СтруктураПараметровТаблицыРеквизитов();
	СтруктураПараметров.Использование = ИспользованиеХарактеристик;
	СтруктураПараметров.РеквизитНоменклатуры = "Характеристика";
	СтруктураПараметров.РеквизитПредставление = НСтр("ru='Характеристика'");
	СтруктураПараметров.ПараметрРасшифровки = "РасшифровкаХарактеристика";
	СтруктураПараметров.Ширина = 14;
	СтруктураПараметров.СлужебныйУправлениеВидимостью = ИспользованиеХарактеристик;
	ЗаполнитьЗначенияСвойств(ДоступныеПоля.Добавить(), СтруктураПараметров);
	
	СтруктураПараметров = СтруктураПараметровТаблицыРеквизитов();
	СтруктураПараметров.Использование = Истина;
	СтруктураПараметров.РеквизитНоменклатуры = "СтранаПроисхождения";
	СтруктураПараметров.РеквизитПредставление = НСтр("ru='Страна'");
	СтруктураПараметров.ПараметрРасшифровки = "НоменклатураСсылка";
	СтруктураПараметров.Ширина = 7;
	СтруктураПараметров.СлужебныйУправлениеВидимостью = Истина;
	ЗаполнитьЗначенияСвойств(ДоступныеПоля.Добавить(), СтруктураПараметров);
	
	СтруктураПараметров = СтруктураПараметровТаблицыРеквизитов();
	СтруктураПараметров.Использование = Истина;
	СтруктураПараметров.РеквизитНоменклатуры = "СвободныйОстаток";
	СтруктураПараметров.РеквизитПредставление = НСтр("ru='Свободный остаток'");
	СтруктураПараметров.ПараметрРасшифровки = "НоменклатураСсылка";
	СтруктураПараметров.Ширина = 10;
	СтруктураПараметров.СлужебныйУправлениеВидимостью = Истина;
	ЗаполнитьЗначенияСвойств(ДоступныеПоля.Добавить(), СтруктураПараметров);
	
	СтруктураПараметров = СтруктураПараметровТаблицыРеквизитов();
	СтруктураПараметров.Использование = Истина;
	СтруктураПараметров.РеквизитНоменклатуры = "ПризнакНовинка";
	СтруктураПараметров.РеквизитПредставление = НСтр("ru='Признак ""Новинка""'");
	СтруктураПараметров.ПараметрРасшифровки = "НоменклатураСсылка";
	СтруктураПараметров.Ширина = 10;
	СтруктураПараметров.СлужебныйУправлениеВидимостью = Истина;
	ЗаполнитьЗначенияСвойств(ДоступныеПоля.Добавить(), СтруктураПараметров);
	
КонецПроцедуры

Функция СтруктураПараметровТаблицыРеквизитов()
	
	СтруктураПараметров = Новый Структура;
	СтруктураПараметров.Вставить("Использование", );
	СтруктураПараметров.Вставить("РеквизитНоменклатуры", );
	СтруктураПараметров.Вставить("РеквизитПредставление", );
	СтруктураПараметров.Вставить("ПараметрРасшифровки", );
	СтруктураПараметров.Вставить("Ширина", );
	СтруктураПараметров.Вставить("СлужебныйУправлениеВидимостью", Истина);
	Возврат СтруктураПараметров;
		
КонецФункции

#КонецОбласти

#КонецОбласти

#Область ОбработчикиСобытий

// См. АвтоподборКонтактовКлиент.Подключаемый_АвтоПодбор
Процедура ОбработкаПолученияДанныхВыбора(ДанныеВыбора, Параметры, СтандартнаяОбработка)
	
	Если Параметры.Свойство("ВыборГруппИЭлементов") И Параметры.ВыборГруппИЭлементов <> ИспользованиеГруппИЭлементов.Группы Тогда
		
		Если Не Параметры.Отбор.Свойство("Недействителен") Тогда
			Параметры.Отбор.Вставить("Недействителен", Ложь);
		КонецЕсли;
		
	Иначе
		
		Для Каждого КлючИЗначение Из Параметры.Отбор Цикл
			НайденныйРеквизит = Метаданные.Справочники.Контрагенты.Реквизиты.Найти(КлючИЗначение.Ключ);
			Если НайденныйРеквизит = Неопределено Тогда
				Продолжить;
			КонецЕсли;
			Если НайденныйРеквизит.Использование = Метаданные.СвойстваОбъектов.ИспользованиеРеквизита.ДляЭлемента Тогда
				Параметры.Отбор.Удалить(КлючИЗначение.Ключ);
			КонецЕсли;
		КонецЦикла;
		
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#КонецЕсли