#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область СлужебныйПрограммныйИнтерфейс

#Область ЗагрузкаДанныхИзВнешнегоИсточника

// Поля загрузки данных из внешнего источника.
// 
// Параметры:
//  ТаблицаПолейЗагрузки - см. ЗагрузкаДанныхИзВнешнегоИсточника.СоздатьТаблицуПолейОписанияЗагрузки
//  НастройкиЗагрузкиДанных - см. ЗагрузкаДанныхИзВнешнегоИсточника.ПриСозданииНаСервере
//
Процедура ПоляЗагрузкиДанныхИзВнешнегоИсточника(ТаблицаПолейЗагрузки, НастройкиЗагрузкиДанных) Экспорт

	ОписанияТиповПолей = ЗагрузкаДанныхИзВнешнегоИсточника.НовыйОписанияТиповПолейЗагрузки();

	ПолноеИмяОбъектаЗаполнения = НастройкиЗагрузкиДанных.ПолноеИмяОбъектаЗаполнения;

	Если ПустаяСтрока(ПолноеИмяОбъектаЗаполнения) Или ПолноеИмяОбъектаЗаполнения
		= "Справочник.ШаблоныКалькуляций.ТабличнаяЧасть.Запасы" Тогда

		ОписаниеТиповКолонка = Новый ОписаниеТипов("СправочникСсылка.Номенклатура");
		ЗагрузкаДанныхИзВнешнегоИсточника.ДобавитьПолеОписанияЗагрузки(ТаблицаПолейЗагрузки, "Штрихкод", НСтр(
			"ru = 'Штрихкод'"), ОписанияТиповПолей.ОписаниеТиповСтрока200, ОписаниеТиповКолонка, "Номенклатура", 1, ,
			Истина);
		ЗагрузкаДанныхИзВнешнегоИсточника.ДобавитьПолеОписанияЗагрузки(ТаблицаПолейЗагрузки, "Артикул", НСтр(
			"ru = 'Артикул'"), ОписанияТиповПолей.ОписаниеТиповСтрока50, ОписаниеТиповКолонка, "Номенклатура", 2, ,
			Истина);
		ЗагрузкаДанныхИзВнешнегоИсточника.ДобавитьПолеОписанияЗагрузки(ТаблицаПолейЗагрузки,
			"НоменклатураНаименование", НСтр("ru = 'Номенклатура (наименование)'"),
			ОписанияТиповПолей.ОписаниеТиповСтрока100, ОписаниеТиповКолонка, "Номенклатура", 3, , Истина);
		ЗагрузкаДанныхИзВнешнегоИсточника.ДобавитьПолеОписанияЗагрузки(ТаблицаПолейЗагрузки,
			"НоменклатураНаименованиеПолное", НСтр("ru = 'Номенклатура (полное наименование)'"),
			ОписанияТиповПолей.ОписаниеТиповСтрока1000, ОписаниеТиповКолонка, "Номенклатура", 5, , Истина);

		Если ПолучитьФункциональнуюОпцию("ИспользоватьХарактеристики") Тогда

			ОписаниеТиповКолонка = Новый ОписаниеТипов("СправочникСсылка.ХарактеристикиНоменклатуры");
			ЗагрузкаДанныхИзВнешнегоИсточника.ДобавитьПолеОписанияЗагрузки(ТаблицаПолейЗагрузки,
				"ХарактеристикаНаименование", НСтр("ru = 'Характеристика (наименование)'"),
				ОписанияТиповПолей.ОписаниеТиповСтрока150, ОписаниеТиповКолонка, "Характеристика", 1);
			ЗагрузкаДанныхИзВнешнегоИсточника.ДобавитьПолеОписанияЗагрузки(ТаблицаПолейЗагрузки,
				"ХарактеристикаАртикул", НСтр("ru = 'Характеристика (артикул)'"),
				ОписанияТиповПолей.ОписаниеТиповСтрока25, ОписаниеТиповКолонка, "Характеристика", 2);
				
			ПредставлениеКод = НСтр("ru = 'Характеристика (код)'");
			ПредставлениеГруппы = НСтр("ru='Характеристика'");
			ЗагрузкаДанныхИзВнешнегоИсточника.ДобавитьПолеОписанияЗагрузки(ТаблицаПолейЗагрузки, "ХарактеристикаКод", ПредставлениеКод,
			ОписанияТиповПолей.ОписаниеТиповСтрока11, ОписаниеТиповКолонка, "Характеристика", 4, ,
			, , , , ПредставлениеГруппы);
			
		КонецЕсли;

		Если ПолучитьФункциональнуюОпцию("ИспользоватьПодсистемуРаботы") Или ПолучитьФункциональнуюОпцию(
			"ИспользоватьПодсистемуПроизводство") Тогда

			ОписаниеТиповКолонка = Новый ОписаниеТипов("СправочникСсылка.Спецификации");
			ЗагрузкаДанныхИзВнешнегоИсточника.ДобавитьПолеОписанияЗагрузки(ТаблицаПолейЗагрузки, "Спецификация", НСтр(
				"ru = 'Спецификация (наименование)'"), ОписанияТиповПолей.ОписаниеТиповСтрока150, ОписаниеТиповКолонка);

		КонецЕсли;

		ЗагрузкаДанныхИзВнешнегоИсточника.ДобавитьПолеОписанияЗагрузки(ТаблицаПолейЗагрузки, "Количество", НСтр(
			"ru = 'Количество'"), ОписанияТиповПолей.ОписаниеТиповСтрока25, ОписанияТиповПолей.ОписаниеТиповЧисло15_3,
			, , Истина);

		Если ПолучитьФункциональнуюОпцию("УчетВРазличныхЕдиницахИзмерения") Тогда

			ОписаниеТиповКолонка = Новый ОписаниеТипов("СправочникСсылка.КлассификаторЕдиницИзмерения, СправочникСсылка.ЕдиницыИзмерения");
			ЗагрузкаДанныхИзВнешнегоИсточника.ДобавитьПолеОписанияЗагрузки(ТаблицаПолейЗагрузки, "ЕдиницаИзмерения",
				НСтр("ru = 'Ед. изм.'"), ОписанияТиповПолей.ОписаниеТиповСтрока25, ОписаниеТиповКолонка, , , , ,
				ПолучитьФункциональнуюОпцию("УчетВРазличныхЕдиницахИзмерения"));

		КонецЕсли;

	ИначеЕсли ПолноеИмяОбъектаЗаполнения = "Справочник.ШаблоныКалькуляций.ТабличнаяЧасть.Расходы" Тогда

		ОписаниеТиповКолонка = Новый ОписаниеТипов("ПланСчетовСсылка.Управленческий");
		ЗагрузкаДанныхИзВнешнегоИсточника.ДобавитьПолеОписанияЗагрузки(ТаблицаПолейЗагрузки, "Расход", НСтр(
			"ru = 'Статья расходов'"), ОписанияТиповПолей.ОписаниеТиповСтрока150, ОписаниеТиповКолонка, , , Истина);

		ЗагрузкаДанныхИзВнешнегоИсточника.ДобавитьПолеОписанияЗагрузки(ТаблицаПолейЗагрузки, "Значение", НСтр(
			"ru = 'Сумма'"), ОписанияТиповПолей.ОписаниеТиповСтрока25, ОписанияТиповПолей.ОписаниеТиповЧисло15_2);

		ОписаниеТиповКолонка = Новый ОписаниеТипов("СправочникСсылка.Валюты");
		ЗагрузкаДанныхИзВнешнегоИсточника.ДобавитьПолеОписанияЗагрузки(ТаблицаПолейЗагрузки, "Валюта", НСтр(
			"ru = 'Валюта'"), ОписанияТиповПолей.ОписаниеТиповСтрока150, ОписаниеТиповКолонка);

	КонецЕсли;

КонецПроцедуры

Процедура ПриОпределенииОбразцовЗагрузкиДанных(НастройкиЗагрузкиДанных, УникальныйИдентификатор) Экспорт
	
	ПолноеИмяОбъектаЗаполнения = НастройкиЗагрузкиДанных.ПолноеИмяОбъектаЗаполнения;
	
	Если ПустаяСтрока(ПолноеИмяОбъектаЗаполнения) 
		ИЛИ ПолноеИмяОбъектаЗаполнения="Справочник.ШаблоныКалькуляций.ТабличнаяЧасть.Запасы" Тогда
	
		Образец_xlsx = ПолучитьМакет("ОбразецЗагрузкиДанныхЗапасы_xlsx");
		ОбразецЗагрузкиДанных_xlsx = ПоместитьВоВременноеХранилище(Образец_xlsx, УникальныйИдентификатор);
		НастройкиЗагрузкиДанных.Вставить("ОбразецЗагрузкиДанных_xlsx", ОбразецЗагрузкиДанных_xlsx);
		
		НастройкиЗагрузкиДанных.Вставить("ОбразецЗагрузкиДанных_mxl", "ОбразецЗагрузкиДанныхЗапасы_mxl");
		
		Образец_csv = ПолучитьМакет("ОбразецЗагрузкиДанныхЗапасы_csv");
		ОбразецЗагрузкиДанных_csv = ПоместитьВоВременноеХранилище(Образец_csv, УникальныйИдентификатор);
		НастройкиЗагрузкиДанных.Вставить("ОбразецЗагрузкиДанных_csv", ОбразецЗагрузкиДанных_csv);
		
	ИначеЕсли ПолноеИмяОбъектаЗаполнения="Справочник.ШаблоныКалькуляций.ТабличнаяЧасть.Расходы" Тогда
		
		Образец_xlsx = ПолучитьМакет("ОбразецЗагрузкиДанныхРасходы_xlsx");
		ОбразецЗагрузкиДанных_xlsx = ПоместитьВоВременноеХранилище(Образец_xlsx, УникальныйИдентификатор);
		НастройкиЗагрузкиДанных.Вставить("ОбразецЗагрузкиДанных_xlsx", ОбразецЗагрузкиДанных_xlsx);
		
		НастройкиЗагрузкиДанных.Вставить("ОбразецЗагрузкиДанных_mxl", "ОбразецЗагрузкиДанныхРасходы_mxl");
		
		Образец_csv = ПолучитьМакет("ОбразецЗагрузкиДанныхРасходы_csv");
		ОбразецЗагрузкиДанных_csv = ПоместитьВоВременноеХранилище(Образец_csv, УникальныйИдентификатор);
		НастройкиЗагрузкиДанных.Вставить("ОбразецЗагрузкиДанных_csv", ОбразецЗагрузкиДанных_csv);
		
	КонецЕсли;
	
КонецПроцедуры

Процедура СопоставитьЗагружаемыеДанныеИзВнешнегоИсточника(ПараметрыСопоставления, АдресРезультата) Экспорт
	
	ТаблицаСопоставленияДанных	= ПараметрыСопоставления.ТаблицаСопоставленияДанных;
	РазмерТаблицыДанных			= ТаблицаСопоставленияДанных.Количество();
	НастройкиЗагрузкиДанных		= ПараметрыСопоставления.НастройкиЗагрузкиДанных;
	НастройкиПоиска				= НастройкиЗагрузкиДанных.НастройкиПоиска;
	
	ПолноеИмяОбъектаЗаполнения = НастройкиЗагрузкиДанных.ПолноеИмяОбъектаЗаполнения;
	
	// ТаблицаСопоставленияДанных - Тип ДанныеФормыКоллекция
	Для каждого СтрокаТаблицыФормы Из ТаблицаСопоставленияДанных Цикл
		
		Если ПустаяСтрока(ПолноеИмяОбъектаЗаполнения) 
			ИЛИ ПолноеИмяОбъектаЗаполнения="Справочник.ШаблоныКалькуляций.ТабличнаяЧасть.Запасы" Тогда
		
			// Номенклатура по ШтрихКоду, Артикулу, Наименованию, НаименованиеПолное
			ЗагрузкаДанныхИзВнешнегоИсточникаПереопределяемый.СопоставитьНоменклатуру(СтрокаТаблицыФормы, НастройкиПоиска);
			
			// Характеристика по Владельцу и Наименованию
			Если ПолучитьФункциональнуюОпцию("ИспользоватьХарактеристики") Тогда
				
				Если ЗначениеЗаполнено(СтрокаТаблицыФормы.Номенклатура) Тогда
					
					ЗагрузкаДанныхИзВнешнегоИсточникаПереопределяемый.СопоставитьХарактеристику(СтрокаТаблицыФормы);
					
				КонецЕсли;
				
			КонецЕсли;
			
			// Спецификация
			Если ПолучитьФункциональнуюОпцию("ИспользоватьПодсистемуРаботы")
				ИЛИ ПолучитьФункциональнуюОпцию("ИспользоватьПодсистемуПроизводство") Тогда
				
				Если ЗначениеЗаполнено(СтрокаТаблицыФормы.Номенклатура) Тогда
					
					ЗагрузкаДанныхИзВнешнегоИсточникаПереопределяемый.СопоставитьСпецификацию(СтрокаТаблицыФормы.Спецификация, СтрокаТаблицыФормы.Спецификация_ВходящиеДанные, СтрокаТаблицыФормы.Номенклатура);
					
				КонецЕсли;
				
			КонецЕсли;
				
			// Количество
			ЗагрузкаДанныхИзВнешнегоИсточникаПереопределяемый.ПреобразоватьСтрокуВЧисло(СтрокаТаблицыФормы.Количество, СтрокаТаблицыФормы.Количество_ВходящиеДанные, 1);
			
			// ЕдиницыИзмерения по Наименованию (так же рассмотреть возможность прикрутить пользовательские ЕИ)
			Если ПолучитьФункциональнуюОпцию("УчетВРазличныхЕдиницахИзмерения") Тогда
				
				ЗначениеПоУмолчанию = ?(ЗначениеЗаполнено(СтрокаТаблицыФормы.Номенклатура), СтрокаТаблицыФормы.Номенклатура.ЕдиницаИзмерения, Справочники.КлассификаторЕдиницИзмерения.шт);
				ЗагрузкаДанныхИзВнешнегоИсточникаПереопределяемый.СопоставитьЕдиницыИзмерения(СтрокаТаблицыФормы.Номенклатура, СтрокаТаблицыФормы.ЕдиницаИзмерения, СтрокаТаблицыФормы.ЕдиницаИзмерения_ВходящиеДанные, ЗначениеПоУмолчанию);
				
			КонецЕсли;
				
			ПроверитьКорректностьДанныхВСтрокеТаблицы(СтрокаТаблицыФормы);
			
		ИначеЕсли ПолноеИмяОбъектаЗаполнения="Справочник.ШаблоныКалькуляций.ТабличнаяЧасть.Расходы" Тогда
			
			// Расход по наименованию
			ЗагрузкаДанныхИзВнешнегоИсточникаПереопределяемый.СопоставитьСчетУчетаЗатрат(СтрокаТаблицыФормы.Расход, СтрокаТаблицыФормы.Расход_ВходящиеДанные, ПланыСчетов.Управленческий.ПустаяСсылка());
			
			// Сумма
			ЗагрузкаДанныхИзВнешнегоИсточникаПереопределяемый.ПреобразоватьСтрокуВЧисло(СтрокаТаблицыФормы.Значение, СтрокаТаблицыФормы.Значение_ВходящиеДанные, 0);
			
			// Валюта
			ЗагрузкаДанныхИзВнешнегоИсточникаПереопределяемый.СопоставитьВалюту(СтрокаТаблицыФормы.Расход, СтрокаТаблицыФормы.Расход_ВходящиеДанные);
			
			ПроверитьКорректностьДанныхВСтрокеТаблицы(СтрокаТаблицыФормы, ПолноеИмяОбъектаЗаполнения);
			
		КонецЕсли;
		
		ЗагрузкаДанныхИзВнешнегоИсточника.ПрогрессСопоставленияДанных(ТаблицаСопоставленияДанных.Индекс(СтрокаТаблицыФормы), РазмерТаблицыДанных);
		
	КонецЦикла;
	
	ПоместитьВоВременноеХранилище(ТаблицаСопоставленияДанных, АдресРезультата);
	
КонецПроцедуры

Процедура ПроверитьКорректностьДанныхВСтрокеТаблицы(СтрокаТаблицыФормы, ПолноеИмяОбъектаЗаполнения = "") Экспорт
	
	ИмяСлужебногоПоля = ЗагрузкаДанныхИзВнешнегоИсточника.ИмяСлужебногоПоляЗагрузкаВПриложениеВозможна();
	
	Если ПустаяСтрока(ПолноеИмяОбъектаЗаполнения) 
		ИЛИ ПолноеИмяОбъектаЗаполнения="Справочник.ШаблоныКалькуляций.ТабличнаяЧасть.Запасы" Тогда
		
		СтрокаТаблицыФормы[ИмяСлужебногоПоля] = ЗначениеЗаполнено(СтрокаТаблицыФормы.Номенклатура)
			И СтрокаТаблицыФормы.Количество <> 0;
		
	ИначеЕсли ПолноеИмяОбъектаЗаполнения="Справочник.ШаблоныКалькуляций.ТабличнаяЧасть.Расходы" Тогда
		
		СтрокаТаблицыФормы[ИмяСлужебногоПоля] = ЗначениеЗаполнено(СтрокаТаблицыФормы.Расход);
				
	КонецЕсли; 
	
КонецПроцедуры

#КонецОбласти

#КонецОбласти 	
	
#КонецЕсли
