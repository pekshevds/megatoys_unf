#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	// СтандартныеПодсистемы.ПодключаемыеКоманды
	ПодключаемыеКоманды.ПриСозданииНаСервере(ЭтотОбъект);
	// Конец СтандартныеПодсистемы.ПодключаемыеКоманды
	ПечатьДокументовУНФ.УстановитьОтображениеПодменюПечати(Элементы.ПодменюПечать);

	УстановитьУсловноеОформление();

	Список.Параметры.УстановитьЗначениеПараметра("ОсновнойОтветственный",
		УправлениеНебольшойФирмойПовтИсп.ПолучитьЗначениеНастройки("ОсновнойОтветственный"));

	УстановитьОтборНедействительные(ЭтотОбъект);

	ДоступныКадровыеДанныеСотрудников = ПравоДоступа("Просмотр",
		Метаданные.РегистрыСведений.ТекущиеКадровыеДанныеСотрудниковУНФ);
	ОбщегоНазначенияКлиентСервер.УстановитьСвойствоЭлементаФормы(Элементы, "ФормаСправка2НДФЛДляСотрудников",
		"Видимость", ДоступныКадровыеДанныеСотрудников);

КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура ПоказыватьНедействительных(Команда)

	Элементы.ПоказыватьНедействительных.Пометка = Не Элементы.ПоказыватьНедействительных.Пометка;

	УстановитьОтборНедействительные(ЭтотОбъект);

КонецПроцедуры

&НаКлиенте
Процедура ИспользоватьКакОсновного(Команда)

	Если ТипЗнч(Элементы.Список.ТекущаяСтрока) = Тип("СтрокаГруппировкиДинамическогоСписка")
		Или Элементы.Список.ТекущиеДанные = Неопределено Или Элементы.Список.ТекущиеДанные.ЭтоОсновнойОтветственный
		Или Элементы.Список.ТекущиеДанные.ЭтоГруппа Тогда

		Возврат;
	КонецЕсли;

	УстановитьОсновногоОтветственного(Элементы.Список.ТекущиеДанные.Ссылка);
	Элементы.ФормаИспользоватьКакОсновного.Доступность = Не Элементы.Список.ТекущиеДанные.ЭтоОсновнойОтветственный;

КонецПроцедуры

&НаКлиенте
Процедура Справка2НДФЛДляСотрудников(Команда)

	Если ТипЗнч(Элементы.Список.ТекущаяСтрока) = Тип("СтрокаГруппировкиДинамическогоСписка")
		Или Элементы.Список.ТекущиеДанные = Неопределено Тогда

		Возврат;
	КонецЕсли;
	ТекущиеДанные = Элементы.Список.ТекущиеДанные;

	ТекущаяОрганизация = ТекущиеДанные.Организация;
	Если Не ЗначениеЗаполнено(ТекущаяОрганизация) Тогда
		ТекущаяОрганизация = РегламентированнаяОтчетностьУСН.ПолучитьТекущуюОрганизациюДляЦелейЗадачОтчетности();
	КонецЕсли;

	ДатаПроверки = ОбщегоНазначенияКлиент.ДатаСеанса();
	Если ПроверкаДанныхКлиент.ВыполнитьПроверкуДанныхДляСправки2НФДЛ(ДатаПроверки, ТекущаяОрганизация,
		ТекущиеДанные.Ссылка) Тогда
		ПараметрыФормы = Новый Структура("Сотрудник, Организация", ТекущиеДанные.Ссылка, ТекущаяОрганизация);
		ОткрытьФорму("Документ.СправкаНДФЛУНФ.Форма.ФормаДокумента", ПараметрыФормы, ЭтотОбъект, УникальныйИдентификатор);
	КонецЕсли;

КонецПроцедуры

// СтандартныеПодсистемы.ПодключаемыеКоманды
//@skip-check module-unused-method
&НаКлиенте
Процедура Подключаемый_ВыполнитьКоманду(Команда)
	ПодключаемыеКомандыКлиент.НачатьВыполнениеКоманды(ЭтотОбъект, Команда, Элементы.Список);
КонецПроцедуры

&НаКлиенте
Процедура Подключаемый_ПродолжитьВыполнениеКомандыНаСервере(ПараметрыВыполнения, ДополнительныеПараметры) Экспорт
	ВыполнитьКомандуНаСервере(ПараметрыВыполнения);
КонецПроцедуры

&НаСервере
Процедура ВыполнитьКомандуНаСервере(ПараметрыВыполнения)
	ПодключаемыеКоманды.ВыполнитьКоманду(ЭтотОбъект, ПараметрыВыполнения, Элементы.Список);
КонецПроцедуры

//@skip-check module-unused-method
&НаКлиенте
Процедура Подключаемый_ОбновитьКоманды()
	ПодключаемыеКомандыКлиентСервер.ОбновитьКоманды(ЭтотОбъект, Элементы.Список);
КонецПроцедуры
// Конец СтандартныеПодсистемы.ПодключаемыеКоманды

#КонецОбласти

#Область ОбработчикиСобытийЭлементовФормы

&НаКлиенте
Процедура СписокПриАктивизацииСтроки(Элемент)

	Если ТипЗнч(Элементы.Список.ТекущаяСтрока) <> Тип("СтрокаГруппировкиДинамическогоСписка")
		И Элементы.Список.ТекущиеДанные <> Неопределено Тогда

		Элементы.ФормаИспользоватьКакОсновного.Доступность = Не Элементы.Список.ТекущиеДанные.ЭтоОсновнойОтветственный
			И Не Элементы.Список.ТекущиеДанные.ЭтоГруппа;
	КонецЕсли;
	
	// СтандартныеПодсистемы.ПодключаемыеКоманды
	ПодключаемыеКомандыКлиент.НачатьОбновлениеКоманд(ЭтотОбъект);
	// Конец СтандартныеПодсистемы.ПодключаемыеКоманды

КонецПроцедуры

&НаКлиенте
Процедура СписокПередНачаломИзменения(Элемент, Отказ)

	ОценкаПроизводительностиКлиент.ЗамерВремени("ОткрытиеФормы"
		+ РаботаСФормойДокументаКлиентСервер.ПолучитьИмяФормыСтрокой(ЭтотОбъект.ИмяФормы));

КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаСервере
Процедура УстановитьОсновногоОтветственного(Знач НовыйОсновнойОтветственный)

	РегистрыСведений.НастройкиПользователей.Установить(НовыйОсновнойОтветственный, "ОсновнойОтветственный");
	Список.Параметры.УстановитьЗначениеПараметра("ОсновнойОтветственный", НовыйОсновнойОтветственный);

КонецПроцедуры

&НаСервере
Процедура УстановитьУсловноеОформление()
	
	// 1. Недействительная номенклатура отображается серым
	НовоеУсловноеОформление = Список.КомпоновщикНастроек.ФиксированныеНастройки.УсловноеОформление.Элементы.Добавить();

	Оформление = НовоеУсловноеОформление.Оформление.Элементы.Найти("ЦветТекста");
	Оформление.Значение 		= ЦветаСтиля.ТекстЗапрещеннойЯчейкиЦвет;
	Оформление.Использование 	= Истина;

	Отбор = НовоеУсловноеОформление.Отбор.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));
	Отбор.ВидСравнения 		= ВидСравненияКомпоновкиДанных.Равно;
	Отбор.Использование 	= Истина;
	Отбор.ЛевоеЗначение 	= Новый ПолеКомпоновкиДанных("Недействителен");
	Отбор.ПравоеЗначение 	= Истина;

КонецПроцедуры

&НаКлиентеНаСервереБезКонтекста
Процедура УстановитьОтборНедействительные(Форма)

	ОбщегоНазначенияКлиентСервер.УстановитьЭлементОтбораДинамическогоСписка(
		Форма.Список, "Недействителен", Ложь, , , Не Форма.Элементы.ПоказыватьНедействительных.Пометка);

КонецПроцедуры

#КонецОбласти