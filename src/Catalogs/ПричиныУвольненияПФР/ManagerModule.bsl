
#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область ПрограммныйИнтерфейс

#Область ДляВызоваИзДругихПодсистем

// ТехнологияСервиса.ВыгрузкаЗагрузкаДанных

// Возвращает реквизиты справочника, которые образуют естественный ключ для элементов справочника.
//
// Возвращаемое значение:
//  Массив из Строка - имена реквизитов, образующих естественный ключ.
//
Функция ПоляЕстественногоКлюча() Экспорт
	
	Результат = Новый Массив;
	
	Результат.Добавить("Код");
	
	Возврат Результат;
	
КонецФункции

// Конец ТехнологияСервиса.ВыгрузкаЗагрузкаДанных

#КонецОбласти

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

#Область ПервоначальноеЗаполнениеИОбновлениеИнформационнойБазы

Процедура НачальноеЗаполнение() Экспорт
	
	Если ОбщегоНазначения.ЭтоПодчиненныйУзелРИБ() Тогда
		Возврат;
	КонецЕсли;	
	
	Запрос = Новый Запрос;
	Запрос.Текст =
		"ВЫБРАТЬ
		|	ПричиныУвольненияПФР.Ссылка КАК Ссылка,
		|	ПричиныУвольненияПФР.Код КАК Код,
		|	ПричиныУвольненияПФР.Наименование КАК Наименование,
		|	ПричиныУвольненияПФР.Основание КАК Основание
		|ИЗ
		|	Справочник.ПричиныУвольненияПФР КАК ПричиныУвольненияПФР";
	
	ИзвестныеПричины = Запрос.Выполнить().Выгрузить();
	ДанныеМакетаКлассификатора = ОбщегоНазначения.ПрочитатьXMLВТаблицу(ПолучитьМакет("ПричиныУвольненияПФР").ПолучитьТекст()).Данные;
	
	Для Каждого ЭлементКлассификатора Из ДанныеМакетаКлассификатора Цикл
		
		ИзвестнаяПричина = ИзвестныеПричины.Найти(ЭлементКлассификатора.Code, "Код");
		Если ИзвестнаяПричина = Неопределено Тогда
			ОбъектСправочника = Справочники.ПричиныУвольненияПФР.СоздатьЭлемент();
			ОбъектСправочника.Код = ЭлементКлассификатора.Code;
		Иначе
			ОбъектСправочника = ИзвестнаяПричина.Ссылка.ПолучитьОбъект();
		КонецЕсли;
		
		Если ЗначениеЗаполнено(ЭлементКлассификатора.Id) Тогда
			ОбъектСправочника.ИмяПредопределенныхДанных = ЭлементКлассификатора.Id;
		КонецЕсли;
		
		ОбъектСправочника.Наименование = ЭлементКлассификатора.Title;
		ОбъектСправочника.Основание = ЭлементКлассификатора.Reason;
		
		ОбъектСправочника.ДополнительныеСвойства.Вставить("ЗаписьОбщихДанных");
		ОбъектСправочника.ДополнительныеСвойства.Вставить("ПроверятьБизнесЛогикуПриЗаписи");
		
		ОбновлениеИнформационнойБазы.ЗаписатьОбъект(ОбъектСправочника, Истина);
		
	КонецЦикла;
	
КонецПроцедуры

#КонецОбласти

#КонецОбласти

#КонецЕсли