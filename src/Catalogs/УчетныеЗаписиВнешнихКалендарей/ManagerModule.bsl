#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область СлужебныйПрограммныйИнтерфейс

Функция НайтиПоКлючевымПолям(Логин, Провайдер) Экспорт
	
	Запрос = Новый Запрос(
	"ВЫБРАТЬ ПЕРВЫЕ 1
	|	УчетныеЗаписиВнешнихКалендарей.Код КАК Код,
	|	УчетныеЗаписиВнешнихКалендарей.Наименование КАК Наименование,
	|	УчетныеЗаписиВнешнихКалендарей.Провайдер КАК Провайдер,
	|	УчетныеЗаписиВнешнихКалендарей.Ссылка КАК Ссылка
	|ИЗ
	|	Справочник.УчетныеЗаписиВнешнихКалендарей КАК УчетныеЗаписиВнешнихКалендарей
	|ГДЕ
	|	УчетныеЗаписиВнешнихКалендарей.Наименование = &Наименование
	|	И УчетныеЗаписиВнешнихКалендарей.Провайдер = &Провайдер");
	Запрос.УстановитьПараметр("Наименование", Логин);
	Запрос.УстановитьПараметр("Провайдер", Провайдер);
	РезультатЗапроса = Запрос.Выполнить();
	
	Если РезультатЗапроса.Пустой() Тогда
		Возврат Справочники.УчетныеЗаписиВнешнихКалендарей.ПустаяСсылка();
	Иначе
		Выборка = РезультатЗапроса.Выбрать();
		Пока Выборка.Следующий() Цикл
			Возврат Выборка.Ссылка;
		КонецЦикла;
	КонецЕсли;
	
КонецФункции

Функция ДанныеАвторизации(УчетнаяЗапись) Экспорт
	
	ДанныеАвторизации = Новый Структура;
	Если Не УчетнаяЗапись.Пустая() Тогда
		
		УстановитьПривилегированныйРежим(Истина);
		Пароль = ОбщегоНазначения.ПрочитатьДанныеИзБезопасногоХранилища(УчетнаяЗапись, "Пароль");
		УстановитьПривилегированныйРежим(Ложь);
		
		ДанныеАвторизации.Вставить("Сервер", УчетнаяЗапись.Сервер);
		ДанныеАвторизации.Вставить("Логин", УчетнаяЗапись.Наименование);
		ДанныеАвторизации.Вставить("Пароль", Пароль);
		ДанныеАвторизации.Вставить("КорневойКаталог", "");
		ДанныеАвторизации.Вставить("КаталогКалендарей",	УчетнаяЗапись.КаталогКалендарей);
		ДанныеАвторизации.Вставить("УчетнаяЗаписьВнешнегоКалендаря", УчетнаяЗапись.Ссылка);
		
	КонецЕсли;
	
	Возврат ДанныеАвторизации;
	
КонецФункции

Функция УчетныеЗаписиПользователя(Пользователь) Экспорт
	Возврат НастройкиУчетныхЗаписей(Пользователь);
КонецФункции

Функция УчетныеЗаписиПользователей() Экспорт
	Возврат НастройкиУчетныхЗаписей();
КонецФункции

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

Функция НастройкиУчетныхЗаписей(Пользователь = Неопределено)
	
	УстановитьПривилегированныйРежим(Истина);
	
	Запрос = Новый Запрос(
	"ВЫБРАТЬ
	|	УчетныеЗаписиВнешнихКалендарей.Наименование КАК Наименование,
	|	УчетныеЗаписиВнешнихКалендарей.Сервер КАК Сервер,
	|	УчетныеЗаписиВнешнихКалендарей.Провайдер КАК Провайдер,
	|	УчетныеЗаписиВнешнихКалендарей.Статус КАК Статус,
	|	УчетныеЗаписиВнешнихКалендарей.Код КАК Код,
	|	УчетныеЗаписиВнешнихКалендарей.Ссылка КАК Ссылка
	|ИЗ
	|	Справочник.УчетныеЗаписиВнешнихКалендарей КАК УчетныеЗаписиВнешнихКалендарей
	|ГДЕ
	|	(НЕ &ИспользоватьОтборПоПользователю
	|			ИЛИ УчетныеЗаписиВнешнихКалендарей.Пользователь = &Пользователь)
	|	И УчетныеЗаписиВнешнихКалендарей.Статус = ИСТИНА
	|	И УчетныеЗаписиВнешнихКалендарей.ПометкаУдаления = ЛОЖЬ");
	Запрос.УстановитьПараметр("Пользователь", Пользователи.ТекущийПользователь());
	Запрос.УстановитьПараметр("ИспользоватьОтборПоПользователю", ЗначениеЗаполнено(Пользователь));
	
	РезультатЗапроса = Запрос.Выполнить();
	Если РезультатЗапроса.Пустой() Тогда
		Возврат Новый ТаблицаЗначений;
	КонецЕсли;
	
	Возврат РезультатЗапроса.Выгрузить();
	
КонецФункции

#КонецОбласти

#КонецЕсли

