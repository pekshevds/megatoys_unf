///////////////////////////////////////////////////////////////////////////////////////////////////////
// Copyright (c) 2023, ООО 1С-Софт
// Все права защищены. Эта программа и сопроводительные материалы предоставляются 
// в соответствии с условиями лицензии Attribution 4.0 International (CC BY 4.0)
// Текст лицензии доступен по ссылке:
// https://creativecommons.org/licenses/by/4.0/legalcode
///////////////////////////////////////////////////////////////////////////////////////////////////////

#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	Если Не ЗначениеЗаполнено(Объект.Ссылка) Тогда
		ВызватьИсключение НСтр("ru = 'Создание объекта через форму элемента запрещено.'");
	КонецЕсли;
	
	Элементы.ГруппаНастройкиПодключения.ТолькоПросмотр = Не СистемаБыстрыхПлатежей.НастройкаПодключенияДоступна();
	Элементы.ГруппаНастройкиОплаты.ТолькоПросмотр = Не СистемаБыстрыхПлатежей.НастройкаПодключенияДоступна();
	
	КлючиПоиска = Новый Структура;
	КлючиПоиска.Вставить("СверкаВзаиморасчетов", Истина);
	
	УчастникиСПоддержкойСверки = СистемаБыстрыхПлатежейСлужебный.УчастникиСБППоНастройкам(КлючиПоиска);
	
	Если ОбщегоНазначения.ПодсистемаСуществует("ИнтернетПоддержкаПользователей.СистемаБыстрыхПлатежей.ПереводыСБПc2b") Тогда
		МодульПереводыСБПc2b = ОбщегоНазначения.ОбщийМодуль("ПереводыСБПc2b");
		Элементы.ФормаРеестрОперацийc2b.Видимость = (
			УчастникиСПоддержкойСверки.Найти(Объект.ИдентификаторУчастника) <> Неопределено
			И МодульПереводыСБПc2b.ПереводыСБПДоступны());
	Иначе
		Элементы.ФормаРеестрОперацийc2b.Видимость = Ложь;
	КонецЕсли;
	
	// Видимость должна быть включена в переопределении.
	Элементы.ДекорацияДополнительнаяИнформация.Видимость = Ложь;
	
	СистемаБыстрыхПлатежейСлужебный.ДобавитьНастройкиАутентификации(
		ЭтотОбъект,
		Элементы.ГруппаНастройкиПодключения,
		Объект.Ссылка,
		Объект.ИдентификаторУчастника,
		СистемаБыстрыхПлатежейСлужебный.НовыйПараметрПодсказки());
	
	СистемаБыстрыхПлатежейСлужебный.ДобавитьНастройкиОплаты(
		ЭтотОбъект,
		Элементы.ГруппаНастройкиОплаты,
		Объект.Ссылка);
	
	СистемаБыстрыхПлатежейСлужебный.НастроитьЭлементыФормыПодключения(
		ЭтотОбъект);
	
КонецПроцедуры

&НаСервере
Процедура ОбработкаПроверкиЗаполненияНаСервере(Отказ, ПроверяемыеРеквизиты)
	
	СистемаБыстрыхПлатежейСлужебный.ПроверитьНастройкиАутентификации(
		ЭтотОбъект,
		Отказ);
	
	СистемаБыстрыхПлатежейСлужебный.ПроверитьНастройкиОплаты(
		ЭтотОбъект,
		Отказ);
	
КонецПроцедуры

&НаСервере
Процедура ПередЗаписьюНаСервере(Отказ, ТекущийОбъект, ПараметрыЗаписи)
	
	НастройкиАутентификации = СистемаБыстрыхПлатежейСлужебный.НастройкиАутентификацииПоДаннымФормы(
		ЭтотОбъект);
	ТекущийОбъект.ИдентификаторМерчанта = СистемаБыстрыхПлатежейСлужебный.ИдентификаторМерчантаПоДаннымАутентификации(
		НастройкиАутентификации);
	
КонецПроцедуры

&НаСервере
Процедура ПриЗаписиНаСервере(Отказ, ТекущийОбъект, ПараметрыЗаписи)
	
	НастройкиОплаты = СистемаБыстрыхПлатежейСлужебный.НастройкиОплатыПоДаннымФормы(
		ЭтотОбъект);
	
	Результат = СистемаБыстрыхПлатежейСлужебный.ЗаписатьНастройкиОплаты(
		НастройкиОплаты,
		ТекущийОбъект.Ссылка);
	
	Если Результат.Отказ Тогда
		Отказ = Истина;
		ОбщегоНазначения.СообщитьПользователю(Результат.СообщениеОбОшибке);
		Возврат;
	КонецЕсли;
	
	НастройкиАутентификации = СистемаБыстрыхПлатежейСлужебный.НастройкиАутентификацииПоДаннымФормы(
		ЭтотОбъект);
	
	СистемаБыстрыхПлатежейСлужебный.СохранитьНастройкиАутентификации(
		ТекущийОбъект.Ссылка,
		НастройкиАутентификации,
		Объект.ИдентификаторУчастника);
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовШапкиФормы

//@skip-warning
&НаКлиенте
Процедура Подключаемый_ПриИзмененииНастройкиОплаты(Элемент)
	
	ПриИзмененииНастройкиОплатыНаСервере();
	
КонецПроцедуры

//@skip-warning
&НаКлиенте
Процедура Подключаемый_ПриИзмененииНастройкиАутентификации(
		Элемент,
		Текст,
		СтандартнаяОбработка)
	
	ИнтернетПоддержкаПользователейКлиент.ПриИзмененииСекретныхДанных(
		Элемент);
	
КонецПроцедуры

//@skip-warning
&НаКлиенте
Процедура Подключаемый_НачалоВыбораНастройкиАутентификации(
		Элемент,
		ДанныеВыбора,
		СтандартнаяОбработка)
	
	ИнтернетПоддержкаПользователейКлиент.ОтобразитьСекретныеДанные(
		ЭтотОбъект,
		Элемент,
		Элемент.Имя);
	
КонецПроцедуры

&НаКлиенте
Процедура ДекорацияДополнительнаяИнформацияОбработкаНавигационнойСсылки(
		Элемент,
		НавигационнаяСсылкаФорматированнойСтроки,
		СтандартнаяОбработка)
	
	
	СистемаБыстрыхПлатежейКлиент.ПриОбработкеНавигационнойСсылкиДополнительнойИнформации(
		Элемент,
		НавигационнаяСсылкаФорматированнойСтроки,
		СтандартнаяОбработка);
	
КонецПроцедуры

&НаКлиенте
Процедура ДекорацияНастройкиШаблоновНажатие(Элемент)
	
	ПараметрыФормы = Новый Структура;
	ПараметрыФормы.Вставить("НастройкаПодключения", Объект.Ссылка);
	
	ОписаниеОповещения = Новый ОписаниеОповещения(
		"ДекорацияНастройкиШаблоновЗавершение",
		ЭтотОбъект);
	
	ОткрытьФорму(
		"Справочник.НастройкиПодключенияКСистемеБыстрыхПлатежей.Форма.ФормаНастройкиНазначенияПлатежа",
		ПараметрыФормы,
		ЭтотОбъект,
		ЭтотОбъект.УникальныйИдентификатор,
		,
		,
		ОписаниеОповещения);
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура ПроверитьПодключение(Команда)
	
	Если ЭтотОбъект.Модифицированность Тогда
		ОбщегоНазначенияКлиент.СообщитьПользователю(
			НСтр("ru = 'Перед проверкой настроек необходимо записать изменения.'"));
		Возврат;
	КонецЕсли;
	
	ПараметрыОжидания = ДлительныеОперацииКлиент.ПараметрыОжидания(ЭтотОбъект);
	ПараметрыОжидания.ВыводитьОкноОжидания = Истина;
	ПараметрыОжидания.ТекстСообщения = НСтр("ru = 'Проверка параметров подключения к Системе быстрых платежей.'");
	
	РезультатВыполнения = ПроверитьПараметрыПодключенияЗапускЗадания();
	
	ОповещениеОЗавершении = Новый ОписаниеОповещения(
		"ПроверитьПараметрыПодключенияЗавершение",
		ЭтотОбъект);
		
	Если РезультатВыполнения.Статус = "Выполнено" Или РезультатВыполнения.Статус = "Ошибка" Тогда
		ПроверитьПараметрыПодключенияЗавершение(РезультатВыполнения, Неопределено);
		Возврат;
	КонецЕсли;
	
	ДлительныеОперацииКлиент.ОжидатьЗавершение(
		РезультатВыполнения,
		ОповещениеОЗавершении,
		ПараметрыОжидания);
	
КонецПроцедуры

&НаКлиенте
Процедура РеестрОперацийc2b(Команда)
	
	Отбор = Новый Структура;
	Отбор.Вставить("НастройкаПодключения", Объект.Ссылка);
	
	ПараметрыФормы = Новый Структура;
	ПараметрыФормы.Вставить("СформироватьПриОткрытии", Ложь);
	ПараметрыФормы.Вставить("Отбор",                   Отбор);
	
	ОткрытьФорму(
		"Отчет.РеестрОперацийСБПc2b.ФормаОбъекта",
		ПараметрыФормы,
		ЭтотОбъект);
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаСервере
Процедура ПриИзмененииНастройкиОплатыНаСервере()
	
	СистемаБыстрыхПлатежейСлужебный.НастроитьЭлементыФормыПодключения(
		ЭтотОбъект);
	
КонецПроцедуры

&НаСервере
Функция ПроверитьПараметрыПодключенияЗапускЗадания()
	
	ПараметрыАутентификации = СистемаБыстрыхПлатежейСлужебный.НастройкиАутентификацииПоДаннымФормы(
		ЭтотОбъект);
	
	ПараметрыПроцедуры = Новый Структура;
	ПараметрыПроцедуры.Вставить("НастройкаПодключения", Объект.Ссылка);
	
	ПараметрыВыполнения = ДлительныеОперации.ПараметрыВыполненияВФоне(
		ЭтотОбъект.УникальныйИдентификатор);
	ПараметрыВыполнения.НаименованиеФоновогоЗадания
		= НСтр("ru = 'Проверка параметров подключения к Системе быстрых платежей.'");
	
	РезультатВыполнения = ДлительныеОперации.ВыполнитьВФоне(
		"СистемаБыстрыхПлатежейСлужебный.ПроверитьПараметрыПодключенияОбъект",
		ПараметрыПроцедуры,
		ПараметрыВыполнения);
	
	Возврат РезультатВыполнения;
	
КонецФункции

&НаКлиенте
Процедура ПроверитьПараметрыПодключенияЗавершение(
		Результат,
		ДополнительныеПараметры) Экспорт
	
	Если Результат = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	Если Результат.Статус = "Выполнено" Тогда
		
		РезультатОперации = ПолучитьИзВременногоХранилища(Результат.АдресРезультата);
		Если ЗначениеЗаполнено(РезультатОперации.КодОшибки) Тогда
			ПоказатьПредупреждение(
				Неопределено,
				РезультатОперации.СообщениеОбОшибке);
		Иначе
			ПоказатьПредупреждение(
				Неопределено,
				НСтр("ru = 'Подключение завершено успешно.'"));
		КонецЕсли;
		
	ИначеЕсли Результат.Статус = "Ошибка" Тогда
		ПоказатьПредупреждение(
			Неопределено,
			Результат.КраткоеПредставлениеОшибки);
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ДекорацияНастройкиШаблоновЗавершение(
		Результат,
		ДополнительныеПараметры) Экспорт
	
	Если ТипЗнч(Результат) = Тип("Число") Тогда
		Элементы.ДекорацияНастройкиШаблонов.Заголовок = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
			НСтр("ru = 'Шаблоны назначений платежей (%1)'"),
			Результат);
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти