
#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	Если Не ПравоДоступа("Добавление", Метаданные.Справочники.МетодыПрогнозаПродаж) Тогда
		Элементы.ФормаЗаписатьИЗакрыть.Доступность = Ложь;
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)

	УстановитьИдентификаторДляРасчетаВРасширении();
	
КонецПроцедуры

&НаКлиенте
Процедура ОбработкаНавигационнойСсылки(НавигационнаяСсылкаФорматированнойСтроки, СтандартнаяОбработка)

	СтандартнаяОбработка = ЛожЬ;
	
	ПараметрыОткрытия 	 = Новый Структура;
	ПараметрыОткрытия.Вставить("ИдентификаторМетодаПрогнозаПотребностей", ИдентификаторДляРасчетаВРасширении);
	ОткрытьФорму("ОбщаяФорма.ПомощникПодключенияПроцедурыРасширения", 
		ПараметрыОткрытия, , , , , , РежимОткрытияОкнаФормы.БлокироватьОкноВладельца);
	
КонецПроцедуры
#КонецОбласти

#Область ОбработчикиКомандФормы                      

&НаКлиенте
Процедура ЗаписатьИЗакрыть(Команда)
	
	Если ПроверитьЗаполнение() Тогда
		ЗначениеВыбора = ЗаписатьИЗакрытьНаСервере();
		ОповеститьОВыборе(ЗначениеВыбора);
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаКлиенте
Процедура УстановитьИдентификаторДляРасчетаВРасширении()
	
	Если НЕ ЗначениеЗаполнено(ИдентификаторДляРасчетаВРасширении) Тогда
		
		АдаптированныйИдентификатор = СтрЗаменить(Новый УникальныйИдентификатор(), "-", "_");
		ИдентификаторДляРасчетаВРасширении = АдаптированныйИдентификатор;
		
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Функция ЗаписатьИЗакрытьНаСервере()
	
	НовыйСправочник = Справочники.МетодыПрогнозаПродаж.СоздатьЭлемент();
	НовыйСправочник.Наименование 						= Наименование;
	НовыйСправочник.ИдентификаторДляРасчетаВРасширении  = ИдентификаторДляРасчетаВРасширении;

	НовыйСправочник.Записать();

	Возврат НовыйСправочник.Ссылка;
	
КонецФункции

#КонецОбласти
