
#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	// СтандартныеПодсистемы.КонтактнаяИнформация
	ПараметрыКонтактнойИнформации = УправлениеКонтактнойИнформацией.ПараметрыКонтактнойИнформации();
	ПараметрыКонтактнойИнформации.ИмяЭлементаДляРазмещения = Элементы.КонтактнаяИнформация.Имя;
	ПараметрыКонтактнойИнформации.РазрешитьДобавлениеПолей = Ложь;
	УправлениеКонтактнойИнформацией.ПриСозданииНаСервере(ЭтотОбъект, Объект, ПараметрыКонтактнойИнформации);
	// Конец СтандартныеПодсистемы.КонтактнаяИнформация
	
	Если Объект.Ссылка.Пустая() И Не ЗначениеЗаполнено(Объект.Владелец) Тогда
		Объект.Владелец = Параметры.Организация;
	КонецЕсли;
	
	Элементы.ДатаОкончания.Доступность = НЕ Объект.Актуально;
	
	УстановитьВидимостьОКУН();
	СформироватьСтрокуОКУН();
	
	Если Параметры.ОшибкиЗаполнения Тогда
		ПроверкаДанных.ВывестиСообщенияОбОшибкахЗаполнения("Объект", Параметры.ПереченьОшибок);
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура ПередЗаписьюНаСервере(Отказ, ТекущийОбъект, ПараметрыЗаписи)
	
	// СтандартныеПодсистемы.КонтактнаяИнформация
	УправлениеКонтактнойИнформацией.ПередЗаписьюНаСервере(ЭтотОбъект, ТекущийОбъект);
	// Конец СтандартныеПодсистемы.КонтактнаяИнформация
	
	СформироватьСтрокуНаименования(ТекущийОбъект);
	
КонецПроцедуры

&НаСервере
Процедура ПриЧтенииНаСервере(ТекущийОбъект)
	
	// СтандартныеПодсистемы.КонтактнаяИнформация
	УправлениеКонтактнойИнформацией.ПриЧтенииНаСервере(ЭтотОбъект, ТекущийОбъект);
	// Конец СтандартныеПодсистемы.КонтактнаяИнформация
	
	// СтандартныеПодсистемы.УправлениеДоступом
	Если ОбщегоНазначения.ПодсистемаСуществует("СтандартныеПодсистемы.УправлениеДоступом") Тогда
		МодульУправлениеДоступом = ОбщегоНазначения.ОбщийМодуль("УправлениеДоступом");
		МодульУправлениеДоступом.ПриЧтенииНаСервере(ЭтотОбъект, ТекущийОбъект);
	КонецЕсли;
	// Конец СтандартныеПодсистемы.УправлениеДоступом
	
КонецПроцедуры

&НаСервере
Процедура ОбработкаПроверкиЗаполненияНаСервере(Отказ, ПроверяемыеРеквизиты)
	
	// СтандартныеПодсистемы.КонтактнаяИнформация
	УправлениеКонтактнойИнформацией.ОбработкаПроверкиЗаполненияНаСервере(ЭтотОбъект, Объект, Отказ);
	// Конец СтандартныеПодсистемы.КонтактнаяИнформация
	
КонецПроцедуры

&НаСервере
Процедура ПослеЗаписиНаСервере(ТекущийОбъект, ПараметрыЗаписи)
	
	// СтандартныеПодсистемы.УправлениеДоступом
	УправлениеДоступом.ПослеЗаписиНаСервере(ЭтотОбъект, ТекущийОбъект, ПараметрыЗаписи);
	// Конец СтандартныеПодсистемы.УправлениеДоступом
	
КонецПроцедуры

&НаКлиенте
Процедура ПослеЗаписи(ПараметрыЗаписи)
	Оповестить("ЗаписьВидаДеятельностиЕНВД",Новый Структура("Организация", объект.Владелец));
КонецПроцедуры

&НаКлиенте
Процедура ОбработкаВыбора(ВыбранноеЗначение, ИсточникВыбора)
	Если ИсточникВыбора.ИмяФормы = "Справочник.ВидыДеятельностиЕНВД.Форма.ФормаПодбораОКУН" Тогда
		Объект.ЗначенияОКУН.Очистить();
		Для Каждого Элемент Из ВыбранноеЗначение Цикл
			Найденные = Объект.ЗначенияОКУН.НайтиСтроки(Новый Структура("ОКУН", Элемент));
			Если Найденные.Количество() > 0 Тогда
				Продолжить;
			КонецЕсли;
			
			Объект.ЗначенияОКУН.Добавить().ОКУН = Элемент;
			
		КонецЦикла;
		СформироватьСтрокуОКУН();
		Модифицированность = Истина;
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовШапкиФормы

&НаКлиенте
Процедура СсылкаЗаполненияОКУННажатие(Элемент)
	
	МассивОкунов = Новый Массив;
	Для Каждого Строка Из Объект.ЗначенияОКУН Цикл
		МассивОкунов.Добавить(Строка.ОКУН);
	КонецЦикла;
	
	МассивОкуновФ = Новый ФиксированныйМассив(МассивОкунов);
	
	ОткрытьФорму(
		"Справочник.ВидыДеятельностиЕНВД.Форма.ФормаПодбораОКУН",
		Новый Структура("МассивОКУНОВ,КодПД",
			МассивОкунов,
			ПолучитьКодВидаПредпринимательскойДеятельности(Объект.ВидПредпринимательскойДеятельности)),
		ЭтотОбъект);
	
КонецПроцедуры

&НаКлиенте
Процедура ВидПредпринимательскойДеятельностиПриИзменении(Элемент)
	
	ВидДеятельностиПриИзмененииНаСервере();
	
КонецПроцедуры

&НаКлиенте
Процедура КодНалоговогоОрганаПолучателяПриИзменении(Элемент)
	Если ЗначениеЗаполнено(Объект.КодНалоговогоОрганаПолучателя) Тогда
		ВыполнитьЗаполнениеСведенийОНалоговойИнспекции();
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура АктуальноПриИзменении(Элемент)
	Элементы.ДатаОкончания.Доступность = НЕ Объект.Актуально;
КонецПроцедуры

&НаКлиенте
Процедура Декорация8ОбработкаНавигационнойСсылки(Элемент, НавигационнаяСсылка, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	
	Если ПустаяСтрока(Объект.КодНалоговогоОрганаПолучателя) Тогда
		ОбщегоНазначенияКлиент.СообщитьПользователю(
			НСтр("ru='Заполните код ИФНС и мы тогда сможем определить ссылку для поиска'"),
			,
			"Объект.КодНалоговогоОрганаПолучателя");
		Возврат;
	КонецЕсли;
	
	АдресСайтаНалоговой = "http://www.nalog.ru/rn"+Лев(Объект.КодНалоговогоОрганаПолучателя, 2)+"/";
	ФайловаяСистемаКлиент.ОткрытьНавигационнуюСсылку(АдресСайтаНалоговой);
	
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаСервере
Процедура ВидДеятельностиПриИзмененииНаСервере()
	
	СформироватьСтрокуНаименования(Объект);
	УстановитьВидимостьОКУН();
	
КонецПроцедуры

&НаСервере
Процедура УстановитьВидимостьОКУН()
	
	Если Объект.ВидПредпринимательскойДеятельности.Пустая() Тогда
		Элементы.СсылкаЗаполненияОКУН.Видимость = Ложь;
	КонецЕсли;
	
	КодВида = Объект.ВидПредпринимательскойДеятельности.Код;
	
	Если КодВида = "01"
		ИЛИ КодВида = "02"
		ИЛИ КодВида = "03" Тогда
		
		Элементы.СсылкаЗаполненияОКУН.Видимость = Истина;
	Иначе
		Элементы.СсылкаЗаполненияОКУН.Видимость = Ложь;
	КонецЕсли;
	
КонецПроцедуры 

&НаСервере
Процедура СформироватьСтрокуОКУН()
	
	Если Объект.ЗначенияОКУН.Количество() = 0 Тогда
		Элементы.СсылкаЗаполненияОКУН.Заголовок = (НСтр("ru='<<Заполнить ОКУН>>'"));
		Возврат;
	КонецЕсли;
	
	Запрос = Новый Запрос(
	"ВЫБРАТЬ
	|	ОКУН.Код КАК Код
	|ИЗ
	|	Справочник.ОКУН КАК ОКУН
	|ГДЕ
	|	ОКУН.Ссылка В(&Ссылки)");
	
	Запрос.УстановитьПараметр("Ссылки", Объект.ЗначенияОКУН.Выгрузить().ВыгрузитьКолонку("ОКУН"));
	Выборка = Запрос.Выполнить().Выгрузить();
	РезСтрока = НСтр("ru='ОКУН: '");
	Если Выборка.Количество() < 4 Тогда
		Для Каждого Строка Из Выборка Цикл
			РезСтрока = РезСтрока+Строка.Код+"; ";
		КонецЦикла;
	Иначе
		РезСтрока = 
			СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
				НСтр("ru='Выбрано %1 кода ОКУН'"),
				Выборка.Количество() );
				
				
	КонецЕсли;
	
	Элементы.СсылкаЗаполненияОКУН.Заголовок = РезСтрока;
	
КонецПроцедуры

&НаСервереБезКонтекста
Процедура СформироватьСтрокуНаименования(Объект)
	
	
	Если Объект.КонтактнаяИнформация.Количество()>0 Тогда
		
		Представление = УправлениеКонтактнойИнформацией.ПредставлениеКонтактнойИнформации(
			Объект.КонтактнаяИнформация[0].Значение);
			
		
	КонецЕсли;
	
	Объект.Наименование = ?(ПустаяСтрока(Представление), "", Представление + ", ") + Сред(
		Объект.ВидПредпринимательскойДеятельности, 6);
	
КонецПроцедуры

&НаКлиенте
Процедура ВыполнитьЗаполнениеСведенийОНалоговойИнспекции()
	
	ОписаниеОшибки = "";
	ЗаполнитьСведенияОНалоговойИнспекцииПоКоду(ОписаниеОшибки);
	
	// Обработка ошибок
	Если ЗначениеЗаполнено(ОписаниеОшибки) Тогда
		Если ОписаниеОшибки = "НеУказаныПараметрыАутентификации" Тогда
			
			ТекстВопроса = НСтр("ru='Для автоматического создания налогового органа
				|в справочнике «Контрагенты» необходимо подключиться к Интернет-поддержке
				|пользователей. Данные по налоговому органу пригодятся при уплате налогов.
				|Подключиться сейчас?'");
				
			ПараметрыВопроса = Новый Структура("ВызовПослеПодключения", "ЗаполнитьСведенияОНалоговойИнспекцииПоКоду");
			ОписаниеОповещения = Новый ОписаниеОповещения("ПодключитьИнтернетПоддержку", ЭтотОбъект, ПараметрыВопроса);
			ПоказатьВопрос(ОписаниеОповещения, ТекстВопроса, РежимДиалогаВопрос.ДаНет);
			
		Иначе
			ПоказатьПредупреждение(, ОписаниеОшибки);
		КонецЕсли;
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура ЗаполнитьСведенияОНалоговойИнспекцииПоКоду(ОписаниеОшибки = "")
	
	Если НЕ ЗначениеЗаполнено(Объект.КодНалоговогоОрганаПолучателя) Тогда
		Возврат;
	КонецЕсли;
	
	РеквизитыНалоговогоОргана = ДанныеГосударственныхОрганов.РеквизитыНалоговогоОрганаПоКоду(
		Объект.КодНалоговогоОрганаПолучателя);
	
	Если ЗначениеЗаполнено(РеквизитыНалоговогоОргана.ОписаниеОшибки) Тогда
		ОписаниеОшибки = РеквизитыНалоговогоОргана.ОписаниеОшибки;
		Возврат;
	КонецЕсли;
	
	Если НЕ ЗначениеЗаполнено(РеквизитыНалоговогоОргана.Ссылка) Тогда
		ДанныеГосударственныхОрганов.ОбновитьДанныеГосударственногоОргана(РеквизитыНалоговогоОргана);
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ПодключитьИнтернетПоддержку(Ответ, ДополнительныеПараметры) Экспорт
	
	Если Ответ = КодВозвратаДиалога.Да Тогда
		
		Оповещение = Новый ОписаниеОповещения("ПодключитьИнтернетПоддержкуЗавершение", ЭтотОбъект,
			ДополнительныеПараметры);
		ИнтернетПоддержкаПользователейКлиент.ПодключитьИнтернетПоддержкуПользователей(Оповещение, ЭтотОбъект);
		
	КонецЕсли;

КонецПроцедуры

&НаКлиенте
Процедура ПодключитьИнтернетПоддержкуЗавершение(Результат, ДополнительныеПараметры) Экспорт
	
	Если Результат <> Неопределено Тогда
		
		Если ДополнительныеПараметры.Свойство("ВызовПослеПодключения") Тогда
			
			Если ДополнительныеПараметры.ВызовПослеПодключения = "ЗаполнитьСведенияОНалоговойИнспекцииПоКоду" Тогда
				
				ЗаполнитьСведенияОНалоговойИнспекцииПоКоду();
				
				
			КонецЕсли;
			
		КонецЕсли;
		
	КонецЕсли;
	
КонецПроцедуры

&НаСервереБезКонтекста
Функция ПолучитьКодВидаПредпринимательскойДеятельности(Деятельность)
	Возврат ОбщегоНазначения.ЗначениеРеквизитаОбъекта(Деятельность,"Код");
КонецФункции

// СтандартныеПодсистемы.КонтактнаяИнформация
&НаКлиенте
Процедура Подключаемый_КонтактнаяИнформацияПриИзменении(Элемент)
	УправлениеКонтактнойИнформациейКлиент.НачатьИзменение(ЭтотОбъект, Элемент);
КонецПроцедуры
&НаКлиенте
Процедура Подключаемый_КонтактнаяИнформацияНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	УправлениеКонтактнойИнформациейКлиент.НачатьВыбор(ЭтотОбъект, Элемент, , СтандартнаяОбработка);
КонецПроцедуры
&НаКлиенте
Процедура Подключаемый_КонтактнаяИнформацияПриНажатии(Элемент, СтандартнаяОбработка)
	УправлениеКонтактнойИнформациейКлиент.НачатьВыбор(ЭтотОбъект, Элемент, , СтандартнаяОбработка);
КонецПроцедуры
&НаКлиенте
Процедура Подключаемый_КонтактнаяИнформацияОчистка(Элемент, СтандартнаяОбработка)
	УправлениеКонтактнойИнформациейКлиент.НачатьОчистку(ЭтотОбъект, Элемент.Имя);
КонецПроцедуры
&НаКлиенте
Процедура Подключаемый_КонтактнаяИнформацияВыполнитьКоманду(Команда)
	УправлениеКонтактнойИнформациейКлиент.НачатьВыполнениеКоманды(ЭтотОбъект, Команда.Имя);
КонецПроцедуры
&НаКлиенте
Процедура Подключаемый_КонтактнаяИнформацияАвтоПодбор(Элемент, Текст, ДанныеВыбора, ПараметрыПолученияДанных, Ожидание, СтандартнаяОбработка)
	УправлениеКонтактнойИнформациейКлиент.АвтоПодборАдреса(Элемент, Текст, ДанныеВыбора, ПараметрыПолученияДанных, Ожидание, СтандартнаяОбработка);
КонецПроцедуры
&НаКлиенте
Процедура Подключаемый_КонтактнаяИнформацияОбработкаВыбора(Элемент, ВыбранноеЗначение, СтандартнаяОбработка)
	УправлениеКонтактнойИнформациейКлиент.ОбработкаВыбора(ЭтотОбъект, ВыбранноеЗначение, Элемент.Имя, СтандартнаяОбработка);
КонецПроцедуры
&НаКлиенте
Процедура Подключаемый_КонтактнаяИнформацияОбработкаНавигационнойСсылки(Элемент, НавигационнаяСсылкаФорматированнойСтроки, СтандартнаяОбработка)
	УправлениеКонтактнойИнформациейКлиент.НачатьОбработкуНавигационнойСсылки(ЭтотОбъект, Элемент, НавигационнаяСсылкаФорматированнойСтроки, СтандартнаяОбработка);
КонецПроцедуры
&НаКлиенте
Процедура Подключаемый_ПродолжитьОбновлениеКонтактнойИнформации(Результат, ДополнительныеПараметры) Экспорт
	ОбновитьКонтактнуюИнформацию(Результат);
КонецПроцедуры
&НаСервере
Процедура ОбновитьКонтактнуюИнформацию(Результат)
	УправлениеКонтактнойИнформацией.ОбновитьКонтактнуюИнформацию(ЭтотОбъект, Объект, Результат);
	УправлениеКонтактнойИнформациейУНФ.ОбновитьКонтактнуюИнформацию(ЭтотОбъект, Объект, НастройкиПереопределенияКонтактнойИнформации(), Результат);
КонецПроцедуры
// Конец СтандартныеПодсистемы.КонтактнаяИнформация

&НаСервере
Функция НастройкиПереопределенияКонтактнойИнформации()
	
	НастройкиПереопределения = УправлениеКонтактнойИнформациейУНФ.НастройкиПереопределения();
	НастройкиПереопределения.ИспользоватьСтандартнуюШирину = Ложь;
	Возврат НастройкиПереопределения;
	
КонецФункции

#КонецОбласти
