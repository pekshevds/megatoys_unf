
#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	// СтандартныеПодсистемы.ВерсионированиеОбъектов
	ВерсионированиеОбъектов.ПриСозданииНаСервере(ЭтотОбъект);
	// Конец СтандартныеПодсистемы.ВерсионированиеОбъектов
	
	// СтандартныеПодсистемы.ПодключаемыеКоманды
	ПодключаемыеКоманды.ПриСозданииНаСервере(ЭтотОбъект);
	// Конец СтандартныеПодсистемы.ПодключаемыеКоманды
	
	// СтандартныеПодсистемы.Свойства
	ДополнительныеПараметры = Новый Структура;
	ДополнительныеПараметры.Вставить("Объект", Объект);
	ДополнительныеПараметры.Вставить("ИмяЭлементаДляРазмещения", "ГруппаДополнительныеРеквизиты");
	УправлениеСвойствами.ПриСозданииНаСервере(ЭтотОбъект, ДополнительныеПараметры);
	// Конец СтандартныеПодсистемы.Свойства
	
	// СтандартныеПодсистемы.СклонениеПредставленийОбъектов
	СклонениеПредставленийОбъектов.ПриСозданииНаСервере(ЭтотОбъект, Объект.Наименование);
	// Конец СтандартныеПодсистемы.СклонениеПредставленийОбъектов
	
	УстановитьДоступностьЭлементов(ЭтотОбъект, Объект.ОбособленноеПодразделение);
	
	Если Параметры.Ключ.Пустая() Тогда
		
		Если Не ЗначениеЗаполнено(Объект.Владелец) Тогда
			
			ЗначенияДляЗаполнения = Новый Структура;
			ЗначенияДляЗаполнения.Вставить("Организация",	"Объект.Владелец");
		
			ЗарплатаКадры.ЗаполнитьЗначенияВФорме(ЭтотОбъект, ЗначенияДляЗаполнения);
		
			Если Не ЗначениеЗаполнено(Объект.Владелец) Тогда
				Объект.Владелец = ЗарплатаКадры.ПерваяДоступнаяОрганизация();
			КонецЕсли;
			
		КонецЕсли; 
		
		СсылкаНаОбъект = ОбщегоНазначения.МенеджерОбъектаПоСсылке(Объект.Ссылка).ПолучитьСсылку();
		
		РедактированиеПериодическихСведений.ИнициализироватьЗаписьДляРедактированияВФорме(ЭтотОбъект, "ТерриториальныеУсловияПФР", СсылкаНаОбъект);
		ЗаполнитьЗначенияРегистрацииИКоэффициентов();
		ЗаполнитьСамостоятельнуюКлассификационнуюЕдиницу();
		
		ПриПолученииДанныхНаСервере(Объект);
		НастроитьПоляВводаТерриториальныхУсловий();
		
	КонецЕсли;
	
	ДоступностьПризнакаОбособленноеПодразделение = Истина;
	ЗарплатаКадрыПереопределяемый.УстановитьДоступностьИзмененияЭтоОбособленноеПодразделениеВФормеПодразделения(ДоступностьПризнакаОбособленноеПодразделение);
	ОбщегоНазначенияКлиентСервер.УстановитьСвойствоЭлементаФормы(
		Элементы,
		"ОбособленноеПодразделениеГруппа",
		"Доступность",
		ДоступностьПризнакаОбособленноеПодразделение);
		
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	
	// СтандартныеПодсистемы.Свойства
	УправлениеСвойствамиКлиент.ПослеЗагрузкиДополнительныхРеквизитов(ЭтотОбъект);
	// Конец СтандартныеПодсистемы.Свойства
	
	// СтандартныеПодсистемы.ПодключаемыеКоманды
	ПодключаемыеКомандыКлиент.НачатьОбновлениеКоманд(ЭтотОбъект);
	// Конец СтандартныеПодсистемы.ПодключаемыеКоманды
КонецПроцедуры

&НаСервере
Процедура ПриПолученииДанныхНаСервере(ТекущийОбъект)
	
	ОрганизацияФормы = Объект.Владелец;
	
	УстановитьПараметрыФункциональныхОпцийФормы(Новый Структура("Организация", Объект.Владелец));
	
	ОбособленноеПодразделениеПриЧтении = ТекущийОбъект.ОбособленноеПодразделение;
	ПрочитатьТерриториальныеУсловияПФР();
	УстановитьПредставлениеРегистрацииВНалоговомОргане(ЭтотОбъект);
	УстановитьПредставлениеСамостоятельнойКлассификационнойЕдиницы(ЭтотОбъект);
	
КонецПроцедуры

&НаСервере
Процедура ПриЧтенииНаСервере(ТекущийОбъект)
	
	// СтандартныеПодсистемы.Свойства
	УправлениеСвойствами.ПриЧтенииНаСервере(ЭтотОбъект, ТекущийОбъект);
	// Конец СтандартныеПодсистемы.Свойства
	
	СсылкаНаОбъект = Объект.Ссылка;
	ПриПолученииДанныхНаСервере(ТекущийОбъект);
	УстановитьВидПоляОрганизация();
	
	// СтандартныеПодсистемы.ПодключаемыеКоманды
	ПодключаемыеКомандыКлиентСервер.ОбновитьКоманды(ЭтотОбъект, Объект);
	// Конец СтандартныеПодсистемы.ПодключаемыеКоманды
	
	// СтандартныеПодсистемы.УправлениеДоступом
	УправлениеДоступом.ПриЧтенииНаСервере(ЭтотОбъект, ТекущийОбъект);
	// Конец СтандартныеПодсистемы.УправлениеДоступом
	
КонецПроцедуры

&НаКлиенте
Процедура ПередЗакрытием(Отказ, ЗавершениеРаботы, ТекстПредупреждения, СтандартнаяОбработка)
	
	Оповещение = Новый ОписаниеОповещения("ЗаписатьИЗакрытьНаКлиенте", ЭтотОбъект);
	ОбщегоНазначенияКлиент.ПоказатьПодтверждениеЗакрытияФормы(Оповещение, Отказ, ЗавершениеРаботы);
	
КонецПроцедуры

&НаКлиенте
Процедура ПередЗаписью(Отказ, ПараметрыЗаписи)
	
	Если Не ПараметрыЗаписи.Свойство("ПроверкаПередЗаписьюВыполнена") Тогда 
		Отказ = Истина;
		ЗаписатьНаКлиенте(Ложь);
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура ПередЗаписьюНаСервере(Отказ, ТекущийОбъект, ПараметрыЗаписи)
	
	Если Параметры.Ключ.Пустая() Тогда
		ТекущийОбъект.УстановитьСсылкуНового(СсылкаНаОбъект);
	КонецЕсли;
	
	ЗаписатьТерриториальныеУсловияПФР();
	
	// СтандартныеПодсистемы.Свойства
	УправлениеСвойствами.ПередЗаписьюНаСервере(ЭтотОбъект, ТекущийОбъект);
	// Конец СтандартныеПодсистемы.Свойства
	
КонецПроцедуры

&НаСервере
Процедура ПриЗаписиНаСервере(Отказ, ТекущийОбъект, ПараметрыЗаписи)
	
	// СтандартныеПодсистемы.СклонениеПредставленийОбъектов
	СклонениеПредставленийОбъектов.ПриЗаписиФормыОбъектаСклонения(ЭтотОбъект, Объект.Наименование, ТекущийОбъект.Ссылка);
	// Конец СтандартныеПодсистемы.СклонениеПредставленийОбъектов

КонецПроцедуры

&НаСервере
Процедура ПослеЗаписиНаСервере(ТекущийОбъект, ПараметрыЗаписи)
	
	// СтандартныеПодсистемы.УправлениеДоступом
	УправлениеДоступом.ПослеЗаписиНаСервере(ЭтотОбъект, ТекущийОбъект, ПараметрыЗаписи);
	// Конец СтандартныеПодсистемы.УправлениеДоступом
	
	ПриПолученииДанныхНаСервере(ТекущийОбъект);
	УстановитьВидПоляОрганизация();
КонецПроцедуры

&НаКлиенте
Процедура ОбработкаОповещения(ИмяСобытия, Параметр, Источник)
	
	// СтандартныеПодсистемы.Свойства 
	Если УправлениеСвойствамиКлиент.ОбрабатыватьОповещения(ЭтотОбъект, ИмяСобытия, Параметр) Тогда
	    ОбновитьЭлементыДополнительныхРеквизитов();
	    УправлениеСвойствамиКлиент.ПослеЗагрузкиДополнительныхРеквизитов(ЭтотОбъект);
	КонецЕсли;
	// Конец СтандартныеПодсистемы.Свойства	

	Если ИмяСобытия = "ИзмененаРегистрацияВНалоговомОргане" И Источник = ЭтотОбъект Тогда
		
		Объект.РегистрацияВНалоговомОргане = Параметр.Ссылка;
		УстановитьПредставлениеРегистрацииВНалоговомОргане(ЭтотОбъект);
		
	КонецЕсли;	
		
	Если ИмяСобытия = "ИзмененаСамостоятельнаяКлассификационнаяЕдиница" И Источник = ЭтотОбъект Тогда
		Объект.СамостоятельнаяКлассификационнаяЕдиница = Параметр.Ссылка;
		УстановитьПредставлениеСамостоятельнойКлассификационнойЕдиницы(ЭтотОбъект);
		РедактированиеПериодическихСведенийКлиент.ОбработкаОповещения(ЭтотОбъект, СсылкаНаОбъект, ИмяСобытия, Параметр, Источник);
	КонецЕсли;
	
	Если ИмяСобытия = "ОтредактированаИстория" И Параметр.ИмяРегистра = "ТерриториальныеУсловияПФР" Тогда
		РедактированиеПериодическихСведенийКлиент.ОбработкаОповещения(ЭтотОбъект, СсылкаНаОбъект, ИмяСобытия, Параметр, Источник);
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура ОбработкаПроверкиЗаполненияНаСервере(Отказ, ПроверяемыеРеквизиты)
	
	// СтандартныеПодсистемы.Свойства
	УправлениеСвойствами.ОбработкаПроверкиЗаполнения(ЭтотОбъект, Отказ, ПроверяемыеРеквизиты);
	// Конец СтандартныеПодсистемы.Свойства
	
	РедактированиеПериодическихСведений.ПроверитьЗаписьВФорме(ЭтотОбъект, "ТерриториальныеУсловияПФР", СсылкаНаОбъект, Отказ);
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовШапкиФормы

&НаКлиенте
Процедура РодительПриИзменении(Элемент)
	ЗаполнитьЗначенияРеквизитовПоРодителюНаКлиенте();
КонецПроцедуры

&НаКлиенте
Процедура ВладелецПриИзменении(Элемент)
	
	Объект.Владелец = ОрганизацияФормы;
	
	УстановитьПараметрыФункциональныхОпцийФормы(Новый Структура("Организация", Объект.Владелец));
	ЗаполнитьЗначенияРеквизитовПоРодителюНаКлиенте();
	НастроитьПоляВводаТерриториальныхУсловий();
	
КонецПроцедуры

&НаКлиенте
Процедура ОбособленноеПодразделениеПриИзменении(Элемент)
	
	УстановитьДоступностьЭлементов(ЭтотОбъект, Объект.ОбособленноеПодразделение);
	ЗаполнитьЗначенияРеквизитовПоРодителюНаКлиенте();
	ЗаполнитьСамостоятельнуюКлассификационнуюЕдиницу()
	
КонецПроцедуры

&НаКлиенте
Процедура ТерриториальныеУсловияПФРПриИзменении(Элемент)
	РедактированиеПериодическихСведенийКлиентСервер.ОбновитьОтображениеПолейВвода(ЭтотОбъект, "ТерриториальныеУсловияПФР", СсылкаНаОбъект);
КонецПроцедуры

&НаКлиенте
Процедура РайонныйКоэффициентРФПриИзменении(Элемент)
	
	ПриИзмененииРайонногоКоэффициента();
	
КонецПроцедуры

&НаКлиенте
Процедура РайонныйКоэффициентПриИзменении(Элемент)
	
	ПриИзмененииРайонногоКоэффициента();
	
КонецПроцедуры

&НаКлиенте
Процедура НаименованиеПриИзменении(Элемент)
	
	// СтандартныеПодсистемы.СклонениеПредставленийОбъектов
	СклонениеПредставленийОбъектовКлиент.ПросклонятьПредставление(ЭтотОбъект, Объект.Наименование);
	// Конец СтандартныеПодсистемы.СклонениеПредставленийОбъектов
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы

// СтандартныеПодсистемы.Свойства

&НаКлиенте
Процедура Подключаемый_СвойстваВыполнитьКоманду(ЭлементИлиКоманда, НавигационнаяСсылка = Неопределено, СтандартнаяОбработка = Неопределено)
    УправлениеСвойствамиКлиент.ВыполнитьКоманду(ЭтотОбъект, ЭлементИлиКоманда, СтандартнаяОбработка);
КонецПроцедуры

// Конец СтандартныеПодсистемы.Свойства

&НаКлиенте
Процедура ИзменитьРегистрациюВНалоговомОргане(Команда)
	
	ДополнительныеПараметры = Новый Структура("ЗаписатьЭлемент", Истина);
	
	Если Объект.ОбособленноеПодразделение
		И Объект.ОбособленноеПодразделение <> ОбособленноеПодразделениеПриЧтении Тогда
		
		Оповещение = Новый ОписаниеОповещения("ИзменитьРегистрациюВНалоговомОрганеЗавершение", ЭтотОбъект, ДополнительныеПараметры);
		ТекстВопроса = НСтр("ru='Был установлен признак обособленного подразделения.
			|Перед продолжением необходимо сохранить изменения.
			|Записать?'");
			
		ПоказатьВопрос(Оповещение, ТекстВопроса, РежимДиалогаВопрос.ДаНетОтмена, , КодВозвратаДиалога.Отмена);	
		
	Иначе 
		
		ДополнительныеПараметры.ЗаписатьЭлемент = Ложь;
		ИзменитьРегистрациюВНалоговомОрганеЗавершение(КодВозвратаДиалога.Да, ДополнительныеПараметры);
		
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ИзменитьРегистрациюВНалоговомОрганеЗавершение(Ответ, ДополнительныеПараметры) Экспорт 
	
	Если Ответ <> КодВозвратаДиалога.Да Тогда 
		Возврат;
	КонецЕсли;
	
	Если ДополнительныеПараметры.ЗаписатьЭлемент И Не Записать() Тогда
		Оповещение = Новый ОписаниеОповещения("ОткрытьФормуИзмененияРегистрацииВНалоговомОргане", ЭтотОбъект);
		ЗаписатьНаКлиенте(Ложь, Оповещение);
	Иначе
		ОткрытьФормуИзмененияРегистрацииВНалоговомОргане(Истина);
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ИзменитьСамостоятельнуюКлассификационнуюЕдиницуЗавершение(Ответ, ДополнительныеПараметры) Экспорт 
	
	Если Ответ <> КодВозвратаДиалога.Да Тогда
		Возврат;
	КонецЕсли;
	
	Если ДополнительныеПараметры.ЗаписатьПодразделение И Не Записать() Тогда
		Оповещение = Новый ОписаниеОповещения("ОткрытьФормуИзмененияСамостоятельнойКлассификационнойЕдиницы", ЭтотОбъект);
		ЗаписатьНаКлиенте(Ложь, Оповещение);
	Иначе
		ОткрытьФормуИзмененияСамостоятельнойКлассификационнойЕдиницы(Истина);
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ОткрытьФормуИзмененияРегистрацииВНалоговомОргане(Результат, ДополнительныеПараметры = Неопределено) Экспорт 
	
	Если Результат <> Неопределено Тогда
		ЗарплатаКадрыКлиент.ОткрытьФормуРедактированияРегистрацииВНалоговомОргане(ЭтотОбъект);
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ОткрытьФормуИзмененияСамостоятельнойКлассификационнойЕдиницы(Результат, ДополнительныеПараметры = Неопределено) Экспорт 
	
	Если Результат <> Неопределено Тогда
		ЗарплатаКадрыКлиент.ОткрытьФормуРедактированияСамостоятельнойКлассификационнойЕдиницы(ЭтотОбъект);
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ТерриториальныеУсловияПФРИстория(Команда)
	
	ДополнительныеПараметры = Новый Структура("ЗаписатьЭлемент", Истина);
	Если Параметры.Ключ.Пустая() Тогда
		
		ТекстВопроса = НСтр("ru = 'Данные еще не записаны.
			|Переход к истории изменения территориальных условий возможен только после записи данных.
			|Записать данные?'");
			
		Оповещение = Новый ОписаниеОповещения("ТерриториальныеУсловияПФРИсторияЗавершение", ЭтотОбъект, ДополнительныеПараметры);
		ПоказатьВопрос(Оповещение, ТекстВопроса, РежимДиалогаВопрос.ДаНетОтмена);
		
	Иначе
		
		ДополнительныеПараметры.ЗаписатьЭлемент = Ложь;
		ТерриториальныеУсловияПФРИсторияЗавершение(КодВозвратаДиалога.Да, ДополнительныеПараметры);
		
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ТерриториальныеУсловияПФРИсторияЗавершение(Результат, ДополнительныеПараметры) Экспорт
	
	Если Результат <> КодВозвратаДиалога.Да Тогда
		Возврат;
	КонецЕсли;
	
	Если ДополнительныеПараметры.ЗаписатьЭлемент И Не Записать() Тогда
		Возврат;
	КонецЕсли;
	
	РедактированиеПериодическихСведенийКлиент.ОткрытьИсторию("ТерриториальныеУсловияПФР", СсылкаНаОбъект, ЭтотОбъект, ТолькоПросмотр);
	
КонецПроцедуры

&НаКлиенте
Процедура КомандаЗаписатьИЗакрыть(Команда)
	
	ЗаписатьНаКлиенте(Истина);
	
КонецПроцедуры

&НаКлиенте
Процедура КомандаЗаписать(Команда)
	
	ЗаписатьНаКлиенте(Ложь);
	
КонецПроцедуры

&НаКлиенте
Процедура Склонения(Команда)
	
	// СтандартныеПодсистемы.СклонениеПредставленийОбъектов
	СклонениеПредставленийОбъектовКлиент.ПоказатьСклонение(ЭтотОбъект, Объект.Наименование);
	// Конец СтандартныеПодсистемы.СклонениеПредставленийОбъектов
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

// СтандартныеПодсистемы.Свойства 

&НаСервере
Процедура ОбновитьЭлементыДополнительныхРеквизитов()
    УправлениеСвойствами.ОбновитьЭлементыДополнительныхРеквизитов(ЭтотОбъект);
КонецПроцедуры

&НаКлиенте
Процедура ОбновитьЗависимостиДополнительныхРеквизитов()
    УправлениеСвойствамиКлиент.ОбновитьЗависимостиДополнительныхРеквизитов(ЭтотОбъект);
КонецПроцедуры

&НаКлиенте
Процедура Подключаемый_ПриИзмененииДополнительногоРеквизита(Элемент)
    УправлениеСвойствамиКлиент.ОбновитьЗависимостиДополнительныхРеквизитов(ЭтотОбъект);
КонецПроцедуры

// Конец СтандартныеПодсистемы.Свойства

&НаСервереБезКонтекста
Функция ПолучитьЗначенияРеквизитовРодителя(Родитель, СписокРеквизитов)
	Возврат ОбщегоНазначения.ЗначенияРеквизитовОбъекта(Родитель, СписокРеквизитов);	
КонецФункции	

&НаКлиентеНаСервереБезКонтекста
Процедура УстановитьДоступностьЭлементов(Форма, ЭтоОбособленноеПодразделение)
	
	ОбщегоНазначенияКлиентСервер.УстановитьСвойствоЭлементаФормы(
		Форма.Элементы,
		"РайонныйКоэффициентГруппа",
		"Доступность",
		ЭтоОбособленноеПодразделение);
	
	ОбщегоНазначенияКлиентСервер.УстановитьСвойствоЭлементаФормы(
		Форма.Элементы,
		"ГруппаРегистрацияВНОиСКЕ",
		"Видимость",
		ЭтоОбособленноеПодразделение);
	
	ОбщегоНазначенияКлиентСервер.УстановитьСвойствоЭлементаФормы(
		Форма.Элементы,
		"ПрименяемыйЛьготныйТерриториальныйТариф",
		"Доступность",
		ЭтоОбособленноеПодразделение);
	
	ОбщегоНазначенияКлиентСервер.УстановитьСвойствоЭлементаФормы(
		Форма.Элементы,
		"ГруппаТерриториальныеУсловияПФР",
		"Доступность",
		ЭтоОбособленноеПодразделение);
		
КонецПроцедуры

&НаКлиенте
Процедура ЗаполнитьЗначенияРеквизитовПоРодителюНаКлиенте()
	
	ЗаполнитьЗначенияРегистрацииИКоэффициентов();
	УстановитьПредставлениеРегистрацииВНалоговомОргане(ЭтотОбъект);
	УстановитьПредставлениеСамостоятельнойКлассификационнойЕдиницы(ЭтотОбъект);
	
КонецПроцедуры

&НаСервере
Процедура ЗаполнитьЗначенияРегистрацииИКоэффициентов()
	
	Если Объект.ОбособленноеПодразделение
		И ОбособленноеПодразделениеПриЧтении Тогда
		
		Если ОбособленноеПодразделениеПриЧтении Тогда
			
			Запрос = Новый Запрос;
			Запрос.УстановитьПараметр("СтруктурнаяЕдиница", Объект.Ссылка);
			
			Запрос.Текст =
				"ВЫБРАТЬ
				|	ИсторияРегистрацийВНалоговомОрганеСрезПоследних.РегистрацияВНалоговомОргане
				|ИЗ
				|	РегистрСведений.ИсторияРегистрацийВНалоговомОргане.СрезПоследних(, СтруктурнаяЕдиница = &СтруктурнаяЕдиница) КАК ИсторияРегистрацийВНалоговомОрганеСрезПоследних";
			
			Выборка = Запрос.Выполнить().Выбрать();
			Если Выборка.Следующий() Тогда
				Объект.РегистрацияВНалоговомОргане = Выборка.РегистрацияВНалоговомОргане;
			КонецЕсли;
			
		КонецЕсли;
		
	Иначе
		
		ЗаполненРодительОбъекта = ЗначениеЗаполнено(Объект.Родитель);
		Если ЗаполненРодительОбъекта Тогда
			ИсточникСведений = Объект.Родитель;
		Иначе
			ИсточникСведений = Объект.Владелец;
		КонецЕсли;
		
		ЗначенияРеквизитовРодителя = ПолучитьЗначенияРеквизитовРодителя(ИсточникСведений,
			"РегистрацияВНалоговомОргане,РайонныйКоэффициент,РайонныйКоэффициентРФ");
		
		Объект.РегистрацияВНалоговомОргане = ЗначенияРеквизитовРодителя.РегистрацияВНалоговомОргане;
		
		Объект.РайонныйКоэффициент = ЗначенияРеквизитовРодителя.РайонныйКоэффициент;
		Объект.РайонныйКоэффициентРФ = ЗначенияРеквизитовРодителя.РайонныйКоэффициентРФ;
		
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура ЗаполнитьСамостоятельнуюКлассификационнуюЕдиницу()
	
	Если Объект.ОбособленноеПодразделение
		И ОбособленноеПодразделениеПриЧтении Тогда
		
			Запрос = Новый Запрос;
			Запрос.УстановитьПараметр("СтруктурнаяЕдиница", Объект.Ссылка);
			
			Запрос.Текст =
				"ВЫБРАТЬ
				|	ИсторияСамостоятельныхКлассификационныхЕдиницВторичный.СКЕ КАК СКЕ
				|ИЗ
				|	РегистрСведений.ИсторияСамостоятельныхКлассификационныхЕдиницВторичный КАК ИсторияСамостоятельныхКлассификационныхЕдиницВторичный
				|ГДЕ
				|	ИсторияСамостоятельныхКлассификационныхЕдиницВторичный.ДатаОкончания = ДАТАВРЕМЯ(3999, 12, 31, 23, 59, 59)
				|	И ИсторияСамостоятельныхКлассификационныхЕдиницВторичный.СтруктурнаяЕдиница = &СтруктурнаяЕдиница";
			
			Выборка = Запрос.Выполнить().Выбрать();
			Если Выборка.Следующий() Тогда
				Объект.СамостоятельнаяКлассификационнаяЕдиница = Выборка.СКЕ;
			КонецЕсли;
			
	Иначе
		
		ЗаполненРодительОбъекта = ЗначениеЗаполнено(Объект.Родитель);
		Если ЗаполненРодительОбъекта Тогда
			ЗначенияРеквизитовРодителя = ПолучитьЗначенияРеквизитовРодителя(Объект.Родитель,
			"СамостоятельнаяКлассификационнаяЕдиница");
		 	Объект.СамостоятельнаяКлассификационнаяЕдиница = ЗначенияРеквизитовРодителя.СамостоятельнаяКлассификационнаяЕдиница;
		КонецЕсли;
		
	КонецЕсли;
	
	УстановитьПредставлениеСамостоятельнойКлассификационнойЕдиницы(ЭтотОбъект);
	
КонецПроцедуры

&НаСервере
Процедура ПрочитатьТерриториальныеУсловияПФР()
	
	Если Параметры.Ключ.Пустая() Тогда
		
		ЗаполненРодительОбъекта = ЗначениеЗаполнено(Объект.Родитель);
		Если ЗаполненРодительОбъекта Тогда
			ИсточникСведений = Объект.Родитель;
		Иначе
			ИсточникСведений = Объект.Владелец;
		КонецЕсли;
		
	Иначе
		ИсточникСведений = СсылкаНаОбъект;
	КонецЕсли;
	
	РедактированиеПериодическихСведений.ПрочитатьЗаписьДляРедактированияВФорме(ЭтотОбъект, "ТерриториальныеУсловияПФР", ИсточникСведений);
	ТерриториальныеУсловияПФР.СтруктурнаяЕдиница = СсылкаНаОбъект;
	
	НастроитьПоляВводаТерриториальныхУсловий();
	
КонецПроцедуры

&НаСервере
Процедура НастроитьПоляВводаТерриториальныхУсловий()
	
	МассивПараметровВыбора = Новый Массив;
	МассивПараметровВыбора.Добавить(Новый ПараметрВыбора("ВыбиратьТерриторииСОсобымиКлиматическимиУсловиями", ПолучитьФункциональнуюОпциюФормы("ПрименятьСевернуюНадбавку")));
	МассивПараметровВыбора.Добавить(Новый ПараметрВыбора("ВыбиратьЗаграничныеТерритории", Истина));
	
	ОбщегоНазначенияКлиентСервер.УстановитьСвойствоЭлементаФормы(
		Элементы,
		"ТерриториальныеУсловияПФРТерриториальныеУсловияПФР",
		"ПараметрыВыбора",
		Новый ФиксированныйМассив(МассивПараметровВыбора));
		
КонецПроцедуры

&НаСервере
Процедура ЗаписатьТерриториальныеУсловияПФР()
	
	Если Не Параметры.Ключ.Пустая()
		Или ЗначениеЗаполнено(ТерриториальныеУсловияПФР.Период) Тогда
		
		РедактированиеПериодическихСведений.ЗаписатьЗаписьПослеРедактированияВФорме(ЭтотОбъект, "ТерриториальныеУсловияПФР", СсылкаНаОбъект);
		
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура ПрочитатьНаборЗаписейПериодическихСведений(ИмяРегистра, ВедущийОбъект) Экспорт
	
	РедактированиеПериодическихСведений.ПрочитатьНаборЗаписей(ЭтотОбъект, ИмяРегистра, ВедущийОбъект);
	
КонецПроцедуры

&НаСервере
Процедура УстановитьВидПоляОрганизация()
	
	ОбщегоНазначенияКлиентСервер.УстановитьСвойствоЭлементаФормы(
		Элементы,
		"Владелец",
		"ТолькоПросмотр",
		Истина);
	
КонецПроцедуры

&НаКлиентеНаСервереБезКонтекста
Процедура УстановитьПредставлениеРегистрацииВНалоговомОргане(Форма)
	
	Форма.ПредставлениеРегистрацииВНалоговомОргане =
		ЗарплатаКадрыКлиентСервер.ПредставлениеРегистрацииВНалоговомОргане(Форма.Объект.Ссылка, Форма.Объект.РегистрацияВНалоговомОргане);
	
КонецПроцедуры
	
&НаКлиентеНаСервереБезКонтекста
Процедура УстановитьПредставлениеСамостоятельнойКлассификационнойЕдиницы(Форма)
	
	Если Не ОбщегоНазначенияКлиентСервер.ЗначениеСвойстваЭлементаФормы(Форма.Элементы, "ГруппаСамостоятельнаяКлассификационнаяЕдиница", "Видимость") Тогда
		Возврат;
	КонецЕсли;
	
	Форма.ПредставлениеСамостоятельнойКлассификационнойЕдиницы = УчетСтраховыхВзносовКлиентСервер.ПредставлениеСамостоятельнойКлассификационнойЕдиницы(Форма.Объект.Ссылка, Форма.Объект.СамостоятельнаяКлассификационнаяЕдиница);
	
КонецПроцедуры

// СтандартныеПодсистемы.ПодключаемыеКоманды
&НаКлиенте
Процедура Подключаемый_ВыполнитьКоманду(Команда)
	ПодключаемыеКомандыКлиент.ВыполнитьКоманду(ЭтотОбъект, Команда, Объект);
КонецПроцедуры

&НаСервере
Процедура Подключаемый_ВыполнитьКомандуНаСервере(Контекст, Результат) Экспорт
	ПодключаемыеКоманды.ВыполнитьКоманду(ЭтотОбъект, Контекст, Объект, Результат);
КонецПроцедуры

&НаКлиенте
Процедура Подключаемый_ОбновитьКоманды()
	ПодключаемыеКомандыКлиентСервер.ОбновитьКоманды(ЭтотОбъект, Объект);
КонецПроцедуры
// Конец СтандартныеПодсистемы.ПодключаемыеКоманды

#Область ЗаписьЭлемента

&НаКлиенте
Процедура ЗаписатьИЗакрытьНаКлиенте(Результат, ДополнительныеПараметры) Экспорт 
	
	ЗаписатьНаКлиенте(Истина);
	
КонецПроцедуры

&НаКлиенте
Процедура ЗаписатьНаКлиенте(ЗакрытьПослеЗаписи, ОповещениеЗавершения = Неопределено) Экспорт 

	ОценкаПроизводительностиКлиент.ЗамерВремени("ЗаписьЭлементаСправочникаПодразделенияОрганизаций");
	
	ДополнительныеПараметры = Новый Структура;
	ДополнительныеПараметры.Вставить("ЗакрытьПослеЗаписи", ЗакрытьПослеЗаписи);
	ДополнительныеПараметры.Вставить("ОповещениеЗавершения", ОповещениеЗавершения);
	
	Оповещение = Новый ОписаниеОповещения("ЗаписатьНаКлиентеЗавершение", ЭтотОбъект, ДополнительныеПараметры);
	
	ТекстКнопкиДа = НСтр("ru = 'Изменились сведения о территориальных условиях ПФР'");
	ТекстВопроса = СтрШаблон(
		НСтр("ru = 'При редактировании Вы изменили сведения о территориальных условиях ПФР.
		           |Если Вы исправили прежние сведения о территориальных условиях (они были ошибочными), нажмите ""Исправлена ошибка"".
		           |Если сведения о территориальных условиях ПФР изменились с %1, нажмите ""%2""'"), 
		Формат(ТерриториальныеУсловияПФР.Период, "ДФ='к ""кв."" ггг ""г.""'"),
		ТекстКнопкиДа);
	
	РедактированиеПериодическихСведенийКлиент.ЗапроситьРежимИзмененияРегистра(
		ЭтотОбъект, 
		"ТерриториальныеУсловияПФР", 
		ТекстВопроса, 
		ТекстКнопкиДа, 
		Ложь, 
		Оповещение);
	
КонецПроцедуры

&НаКлиенте
Процедура ЗаписатьНаКлиентеЗавершение(Отказ, ДополнительныеПараметры) Экспорт 
	
	Если Отказ Тогда
		Возврат;
	КонецЕсли;
	
	ПараметрыЗаписи = Новый Структура("ПроверкаПередЗаписьюВыполнена", Истина);
	
	Если ДополнительныеПараметры.ОповещениеЗавершения <> Неопределено Тогда 
		ВыполнитьОбработкуОповещения(ДополнительныеПараметры.ОповещениеЗавершения, ПараметрыЗаписи);
	ИначеЕсли Записать(ПараметрыЗаписи) И ДополнительныеПараметры.ЗакрытьПослеЗаписи Тогда 
		Закрыть();
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ПриИзмененииРайонногоКоэффициента()
	
	Если Объект.РайонныйКоэффициент < Объект.РайонныйКоэффициентРФ Тогда
		Объект.РайонныйКоэффициент = Объект.РайонныйКоэффициентРФ;
	КонецЕсли; 
	
КонецПроцедуры		

&НаКлиенте
Процедура ИзменитьСамостоятельнуюКлассификационнуюЕдиницу(Команда)
	
	ДополнительныеПараметры = Новый Структура("ЗаписатьПодразделение", Истина);
	
	Если Объект.ОбособленноеПодразделение
		И Объект.ОбособленноеПодразделение <> ОбособленноеПодразделениеПриЧтении Тогда
		
		ТекстВопроса = НСтр("ru='Был установлен признак обособленного подразделения.
			|Перед продолжением необходимо сохранить изменения.
			|Записать?'");
			
		Оповещение = Новый ОписаниеОповещения("ИзменитьСамостоятельнуюКлассификационнуюЕдиницуЗавершение", ЭтотОбъект, ДополнительныеПараметры);
		ПоказатьВопрос(Оповещение, ТекстВопроса, РежимДиалогаВопрос.ДаНетОтмена, , КодВозвратаДиалога.Отмена);
		
	Иначе 
		
		ДополнительныеПараметры.ЗаписатьПодразделение = Ложь;
		ИзменитьСамостоятельнуюКлассификационнуюЕдиницуЗавершение(КодВозвратаДиалога.Да, ДополнительныеПараметры);
		
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#КонецОбласти
