
#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область СлужебныйПрограммныйИнтерфейс

Процедура ЗагрузитьНастройкиИзXML(ТекстXML, ЕстьОшибки, НастройкаРМКОбъект) Экспорт
	
	Попытка
		СтруктураНастроек = ОбщегоНазначения.ЗначениеИзСтрокиXML(ТекстXML);
	Исключение
		
		ЕстьОшибки = Истина;
		ИмяСобытия = НСтр("ru = 'Загрузка настроек РМК из файла.'",
			ОбщегоНазначения.КодОсновногоЯзыка());
		ТекстОшибки = ПодробноеПредставлениеОшибки(ИнформацияОбОшибке());
		ЗаписьЖурналаРегистрации(
			ИмяСобытия,
			УровеньЖурналаРегистрации.Ошибка,,, ТекстОшибки);
		Возврат;
		
	КонецПопытки;
	
	Для Каждого ЭлементНастройки Из СтруктураНастроек Цикл
		
		Попытка
			
			Если Лев(ЭлементНастройки.Ключ, 9) = "Константа" Тогда
				
				ИмяКонстанты = Сред(ЭлементНастройки.Ключ, 11);
				Константы[ИмяКонстанты].Установить(ЭлементНастройки.Значение);
				
			ИначеЕсли ЭлементНастройки.Ключ = "НастройкаРМК_ГорячиеКлавиши" Тогда
				НастройкаРМКОбъект.ГорячиеКлавиши.Загрузить(ЭлементНастройки.Значение);
			ИначеЕсли ЭлементНастройки.Ключ = "НастройкаРМК_БыстрыеТовары" Тогда
				
				ТаблицаБыстрыеТовары = ЭлементНастройки.Значение;
				НастройкаРМКОбъект.БыстрыеТовары.Очистить();
				
				Для Каждого СтрокаБыстрыеТовары Из ТаблицаБыстрыеТовары Цикл
					
					Если НЕ ОбщегоНазначения.СсылкаСуществует(СтрокаБыстрыеТовары.Номенклатура)
						Или (НЕ СтрокаБыстрыеТовары.Характеристика.Пустая()
							И НЕ ОбщегоНазначения.СсылкаСуществует(СтрокаБыстрыеТовары.Характеристика)) Тогда
							Продолжить;
					КонецЕсли;
						
					НоваяСтрока = НастройкаРМКОбъект.БыстрыеТовары.Добавить();
					ЗаполнитьЗначенияСвойств(НоваяСтрока, СтрокаБыстрыеТовары);
					
				КонецЦикла;
				
			ИначеЕсли ЭлементНастройки.Ключ = "НастройкаРМК_ВводНаличных" Тогда
				ЗагрузитьТаблицуВводаНаличных(НастройкаРМКОбъект, ЭлементНастройки.Значение);
			ИначеЕсли Лев(ЭлементНастройки.Ключ, 12) = "НастройкаРМК" Тогда
				
				ИмяРеквизита = Сред(ЭлементНастройки.Ключ, 14);
				НастройкаРМКОбъект[ИмяРеквизита] = ЭлементНастройки.Значение;
				
			ИначеЕсли ЭлементНастройки.Ключ = "ШаблоныЧеков" Тогда
				
				Для Каждого СтрокаШаблонаЧека Из ЭлементНастройки.Значение Цикл
					
					СсылкаШаблона = СтрокаШаблонаЧека.Ссылка;
					
					Если НЕ СсылкаШаблона.Пустая() И НЕ ОбщегоНазначения.СсылкаСуществует(СсылкаШаблона) Тогда
						
						СтрокаGUID = СсылкаШаблона.УникальныйИдентификатор();
						НовыйGUID = Новый УникальныйИдентификатор(СтрокаGUID);
						НоваяСсылка = Справочники.ХранилищеШаблонов.ПолучитьСсылку(НовыйGUID);
						ОбъектШаблонЧека = Справочники.ХранилищеШаблонов.СоздатьЭлемент();
						ОбъектШаблонЧека.УстановитьСсылкуНового(НоваяСсылка);
						ЗаполнитьЗначенияСвойств(ОбъектШаблонЧека, СтрокаШаблонаЧека, , "Ссылка");
						ОбъектШаблонЧека.Записать();
						
					КонецЕсли;
					
				КонецЦикла;
				
			ИначеЕсли ЭлементНастройки.Ключ ="ПалитраБыстрыхТоваров" Тогда
				
				Для Каждого СтрокаПалитры Из ЭлементНастройки.Значение Цикл
					
					СсылкаПалитраТоваров = СтрокаПалитры.Ссылка;
					
					Если НЕ СсылкаПалитраТоваров.Пустая() Тогда
							
						Если НЕ ОбщегоНазначения.СсылкаСуществует(СсылкаПалитраТоваров) Тогда
						
							СтрокаGUID = СсылкаПалитраТоваров.УникальныйИдентификатор();
							НовыйGUID = Новый УникальныйИдентификатор(СтрокаGUID);
							НоваяСсылка = Справочники.ПалитраТоваровРМК.ПолучитьСсылку(НовыйGUID);
							ОбъектПалитраТоваров = Справочники.ПалитраТоваровРМК.СоздатьЭлемент();
							ОбъектПалитраТоваров.УстановитьСсылкуНового(НоваяСсылка);
							
						Иначе
							ОбъектПалитраТоваров = СсылкаПалитраТоваров.ПолучитьОбъект();
						КонецЕсли;
						
						Попытка
							ОбъектПалитраТоваров.Заблокировать();
						Исключение
							ТекстОшибки = НСтр("ru = 'Ошибка блокировки палитры товаров, при загрузке из файла настроек.'", ОбщегоНазначения.КодОсновногоЯзыка());
							ЗаписьЖурналаРегистрации(ТекстОшибки,
								УровеньЖурналаРегистрации.Ошибка, ,
								ОбъектПалитраТоваров,
								ПодробноеПредставлениеОшибки(ИнформацияОбОшибке()));
							Продолжить;
						КонецПопытки;
		
						ЗаполнитьЗначенияСвойств(ОбъектПалитраТоваров, СтрокаПалитры, , "Ссылка, Состав");
						
						ОбъектПалитраТоваров.Состав.Очистить();
						Для Каждого СтрокаСостава Из СтрокаПалитры.Состав Цикл
							
							Если (НЕ СтрокаСостава.Номенклатура.Пустая() И НЕ ОбщегоНазначения.СсылкаСуществует(СтрокаСостава.Номенклатура))
								Или (НЕ СтрокаСостава.Характеристика.Пустая() И НЕ ОбщегоНазначения.СсылкаСуществует(СтрокаСостава.Характеристика)) Тогда
								Продолжить;
							КонецЕсли;
							
							НоваяСтрока = ОбъектПалитраТоваров.Состав.Добавить();
							ЗаполнитьЗначенияСвойств(НоваяСтрока, СтрокаСостава);
						КонецЦикла;
						
						ОбъектПалитраТоваров.Записать();
						
					КонецЕсли;
				
				КонецЦикла;
				
			ИначеЕсли ЭлементНастройки.Ключ = "ФайлыПалитрыБыстрыхТоваров" Тогда
				
				Для Каждого СтрокаФайла Из ЭлементНастройки.Значение Цикл
					
					СсылкаФайла = СтрокаФайла.Ссылка;
					
					Если НЕ СсылкаФайла.Пустая() Тогда
						
						Если НЕ ОбщегоНазначения.СсылкаСуществует(СсылкаФайла) Тогда
						
							СтрокаGUID = СсылкаФайла.УникальныйИдентификатор();
							НовыйGUID = Новый УникальныйИдентификатор(СтрокаGUID);
							НоваяСсылка = Справочники.ПалитраТоваровРМКПрисоединенныеФайлы.ПолучитьСсылку(НовыйGUID);
							ОбъектФайл = Справочники.ПалитраТоваровРМКПрисоединенныеФайлы.СоздатьЭлемент();
							ОбъектФайл.УстановитьСсылкуНового(НоваяСсылка);
							
							ЗаполнитьЗначенияСвойств(ОбъектФайл, СтрокаФайла, , "Ссылка");
							ОбъектФайл.Записать();
							
						Иначе
							ОбъектФайл = СсылкаФайла.ПолучитьОбъект();
						КонецЕсли;
					
						Если ЗначениеЗаполнено(СтрокаФайла.ДвоичныеДанные) Тогда
							АдресВременногоХранилищаФайла = ПоместитьВоВременноеХранилище(СтрокаФайла.ДвоичныеДанные);
							
							ИнформацияОФайле = Новый Структура;
							ИнформацияОФайле.Вставить("АдресФайлаВоВременномХранилище", АдресВременногоХранилищаФайла);
							ИнформацияОФайле.Вставить("АдресВременногоХранилищаТекста", "");
							ИнформацияОФайле.Вставить("ИмяБезРасширения"              , СтрокаФайла.Наименование);
							ИнформацияОФайле.Вставить("ДатаМодификацииУниверсальная"  , СтрокаФайла.ДатаМодификацииУниверсальная);
							ИнформацияОФайле.Вставить("Расширение"                    , СтрЗаменить(СтрокаФайла.Расширение,".",""));
							ИнформацияОФайле.Вставить("Редактирует"                   , Неопределено);
							
							РаботаСФайлами.ОбновитьФайл(ОбъектФайл.Ссылка, ИнформацияОФайле);
							
						КонецЕсли;
							
					КонецЕсли;
					
				КонецЦикла;
				
			КонецЕсли;
			
		Исключение
			
			ЕстьОшибки = Истина;
			ИмяСобытия = НСтр("ru = 'Сохранение настроек РМК при загрузке из файла настроек.'",
				ОбщегоНазначения.КодОсновногоЯзыка());
			ТекстОшибки = ПодробноеПредставлениеОшибки(ИнформацияОбОшибке());
			ЗаписьЖурналаРегистрации(
				ИмяСобытия,
				УровеньЖурналаРегистрации.Ошибка,,, ТекстОшибки);
				
		КонецПопытки;
			
	КонецЦикла;
	
	Попытка
		НастройкаРМКОбъект.Записать();
	Исключение
		
		ЕстьОшибки = Истина;
		ИмяСобытия = НСтр("ru = 'Запись справочника НастройкиРМК при загрузке из файла настроек.'",
			ОбщегоНазначения.КодОсновногоЯзыка());
		МетаданныеОбъекта = Метаданные.Справочники.НастройкиРабочегоМестаКассира;
		ТекстОшибки = ПодробноеПредставлениеОшибки(ИнформацияОбОшибке());
		ЗаписьЖурналаРегистрации(
			ИмяСобытия,
			УровеньЖурналаРегистрации.Ошибка, МетаданныеОбъекта,
			НастройкаРМКОбъект.Ссылка, ТекстОшибки);
			
	КонецПопытки;
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

Процедура ЗагрузитьТаблицуВводаНаличных(НастройкаРМКОбъект, ТаблицаНоминаловКупюр)
	
	НастройкаРМКОбъект.ВводНаличных.Очистить();
	ОписаниеТипаЧисло = Новый ОписаниеТипов("Число");
	
	МассивНоминаловКупюр = ОбщегоНазначенияРМККлиентСервер.НоминалыКупюр();
	ИндексСтроки = 0;
	ТекущаяСтрокаНоминала = Неопределено;
	КоличествоСтрокТаблицы = ТаблицаНоминаловКупюр.Количество();
	Для Каждого ЭлементНоминала Из МассивНоминаловКупюр Цикл
		
		НоминалЧислом = ОписаниеТипаЧисло.ПривестиЗначение(ЭлементНоминала);
		Если НоминалЧислом > 0 Тогда
			
			ТекущийНоминалТаблицы = 0;
			Пока ТекущийНоминалТаблицы < НоминалЧислом И ИндексСтроки < КоличествоСтрокТаблицы Цикл
				ТекущаяСтрокаНоминала = ТаблицаНоминаловКупюр[ИндексСтроки];
				ТекущийНоминалТаблицы = ОписаниеТипаЧисло.ПривестиЗначение(ТекущаяСтрокаНоминала.Номинал);
				ИндексСтроки = ИндексСтроки + 1;
			КонецЦикла;
			КлавишаКупюры = ИнтерфейсРМКСлужебныйКлиентСервер.ПредставлениеПустойКлавиши();
			ИспользованиеНоминала = Истина;
			Если ТекущийНоминалТаблицы = НоминалЧислом Тогда
				ИспользованиеНоминала = ТекущаяСтрокаНоминала.Использование;
				Если Не ТаблицаНоминаловКупюр.Колонки.Найти("Клавиша") = Неопределено Тогда
					КлавишаКупюры = ТекущаяСтрокаНоминала.Клавиша;
				КонецЕсли;
			КонецЕсли;
			НоваяСтрока = НастройкаРМКОбъект.ВводНаличных.Добавить();
			НоваяСтрока.Номинал = ЭлементНоминала;
			НоваяСтрока.Использование = ИспользованиеНоминала;
			НоваяСтрока.Клавиша = КлавишаКупюры;
		
		КонецЕсли;
	КонецЦикла;
	
КонецПроцедуры

#КонецОбласти

#КонецЕсли