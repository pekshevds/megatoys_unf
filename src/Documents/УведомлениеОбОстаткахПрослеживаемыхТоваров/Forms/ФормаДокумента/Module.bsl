
#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	ПодготовитьФормуНаСервере();

КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура ОткрытьДокумент(Команда)
	
	СтрокаТаблицы = Элементы.СписокВидовУведомлений.ТекущиеДанные;
	
	Если НЕ СтрокаТаблицы = Неопределено Тогда
		
		ОткрытьДокументВида(СтрокаТаблицы.Значение);
		
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаСервере
Процедура ПодготовитьФормуНаСервере()
	
	Если Параметры.Свойство("ЗначениеКопирования") Тогда
		ЗначениеКопирования = Параметры.ЗначениеКопирования;
	КонецЕсли;
	Если Параметры.Свойство("ЗначенияЗаполнения") Тогда
		ЗначенияЗаполнения  = Параметры.ЗначенияЗаполнения;
	КонецЕсли;
	Если Параметры.Свойство("Основание") Тогда
		Основание           = Параметры.Основание;
	КонецЕсли;
	Если Параметры.Свойство("Ключ") Тогда
		Ключ 				= Параметры.Ключ;
	КонецЕсли;
	Если Параметры.Свойство("ИзменитьВидУведомления") Тогда
		ИзменитьВидУведомления = Истина;
	КонецЕсли;
	
	ФормыДокумента   = Новый ФиксированноеСоответствие(
		Документы.УведомлениеОбОстаткахПрослеживаемыхТоваров.ПолучитьСоответствиеВидовУведомленийФормам());
		
	ВидыУведомлений = ПолучитьСписокВидовУведомлений();
	Для Каждого ВидУведомления Из ВидыУведомлений Цикл
		НоваяСтрока = СписокВидовУведомлений.Добавить();
		ЗаполнитьЗначенияСвойств(НоваяСтрока, ВидУведомления);
	КонецЦикла;
	
	Если Параметры.Свойство("ВидУведомления") Тогда
		ВидУведомленияПриОткрытии = Параметры.ВидУведомления;
		ВыделенныйЭлементСписка = СписокВидовУведомлений.НайтиПоЗначению(ВидУведомленияПриОткрытии);
		Если ВыделенныйЭлементСписка <> Неопределено Тогда
			Элементы.СписокВидовУведомлений.ТекущаяСтрока = ВыделенныйЭлементСписка.ПолучитьИдентификатор();
		КонецЕсли;
	КонецЕсли;
	
КонецПроцедуры

&НаСервереБезКонтекста
Функция ПолучитьСписокВидовУведомлений()
	
	Возврат ПрослеживаемостьПереопределяемый.СписокВидовУведомленийОбОстатках();

КонецФункции

&НаКлиенте
Процедура СписокВидовУведомленийВыбор(Элемент, ВыбраннаяСтрока, Поле, СтандартнаяОбработка)
	
	СтрокаТаблицы = СписокВидовУведомлений.НайтиПоИдентификатору(ВыбраннаяСтрока);
	
	ОткрытьДокументВида(СтрокаТаблицы.Значение);

КонецПроцедуры

&НаКлиенте
Процедура ОткрытьДокументВида(ВыбранныйВидУведомления)
	
	Если ТипЗнч(ЗначенияЗаполнения) <> Тип("Структура") Тогда
		ЗначенияЗаполнения = Новый Структура();
	КонецЕсли;

	ЗначенияЗаполнения.Вставить("ВидУведомления", ВыбранныйВидУведомления);
	ЗначенияЗаполнения.Вставить("ВидОперации", 
		ПрослеживаемостьФормыВызовСервера.ОпределитьВидОперацииПоУведомлению(ВыбранныйВидУведомления));
	
	Если ЗначениеЗаполнено(Основание) Тогда
		ЗначенияЗаполнения.Вставить("Основание", Основание);
	КонецЕсли;
	
	СтруктураПараметров = Новый Структура;
	СтруктураПараметров.Вставить("Ключ",                Ключ);
	СтруктураПараметров.Вставить("ЗначенияЗаполнения",  ЗначенияЗаполнения);
	Если ЗначениеЗаполнено(ЗначениеКопирования) Тогда
		СтруктураПараметров.Вставить("ЗначениеКопирования", ЗначениеКопирования);
	КонецЕсли;
	Если ИзменитьВидУведомления И ВыбранныйВидУведомления <> ВидУведомленияПриОткрытии Тогда
		СтруктураПараметров.Вставить("ИзменитьВидУведомления", ИзменитьВидУведомления);
	КонецЕсли;
	
	Модифицированность = Ложь;
	Закрыть();
	
	Если ВыбранныйВидУведомления = "КорректировочноеУведомлениеОбОстатках" Тогда
		
		КлючеваяОперация = "СоздатьФормыДокументаКорректировочная";
	Иначе
		КлючеваяОперация = "СозданиеФормыДокументаОсновная";
	КонецЕсли;
	
	ОценкаПроизводительностиКлиент.НачатьЗамерВремени(Истина, КлючеваяОперация);
	
	Если ФормыДокумента[ВыбранныйВидУведомления] = "ФормаДокументаКорректировочная"
		И НЕ ЗначениеЗаполнено(Основание) Тогда
		
		ОткрытьФорму("Документ.УведомлениеОбОстаткахПрослеживаемыхТоваров.Форма." + "ФормаПодбора", СтруктураПараметров, ВладелецФормы);
		
	Иначе
		
		ОткрытьФорму("Документ.УведомлениеОбОстаткахПрослеживаемыхТоваров.Форма." + ФормыДокумента[ВыбранныйВидУведомления], СтруктураПараметров, ВладелецФормы);
		
	КонецЕсли;
		
КонецПроцедуры

#КонецОбласти
