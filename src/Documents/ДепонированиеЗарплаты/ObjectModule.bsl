#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область ОбработчикиСобытий

Процедура ОбработкаЗаполнения(ДанныеЗаполнения, СтандартнаяОбработка)
	
	Если ЗначениеЗаполнено(ДанныеЗаполнения) И Метаданные().Реквизиты.Ведомость.Тип.СодержитТип(ТипЗнч(ДанныеЗаполнения)) Тогда
		ЗаполнитьПоОснованию(ДанныеЗаполнения);
	КонецЕсли
	
КонецПроцедуры

Процедура ОбработкаПроверкиЗаполнения(Отказ, ПроверяемыеРеквизиты)
	
	ДепонированияФизлиц = Новый Соответствие;
	Для Каждого Депонент Из Депоненты Цикл
		Если ДепонированияФизлиц[Депонент.ФизическоеЛицо] = Неопределено Тогда
			ДепонированияФизлиц.Вставить(Депонент.ФизическоеЛицо, Депонент)
		Иначе
			ОбщегоНазначения.СообщитьПользователю(
				СтрШаблон(НСтр("ru = '%1 повторяется в списке депонентов'"), Депонент.ФизическоеЛицо), 
				ЭтотОбъект, 
				ОбщегоНазначенияКлиентСервер.ПутьКТабличнойЧасти("Депоненты", Депонент.НомерСтроки, "ФизическоеЛицо"),,
				Отказ);
		КонецЕсли	
	КонецЦикла;	
	
КонецПроцедуры

Процедура ОбработкаПроведения(Отказ, РежимПроведения)
	УчетДепонированнойЗарплаты.ДепонированиеЗарплатыОбработкаПроведения(ЭтотОбъект, Отказ);
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

Процедура ЗаполнитьПоОснованию(ДокументОснование)
	
	ОрганизацияДокументаОснования = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(ДокументОснование, "Организация");	
	
	Организация = ОрганизацияДокументаОснования;
	Ведомость   = ДокументОснование;
	
	ПолучитьСообщенияПользователю(Истина);
	
	Если МожноЗаполнитьПоВедомости() Тогда
		ЗаполнитьПоВедомости();
	КонецЕсли;	
	
	Сообщения = ПолучитьСообщенияПользователю(Истина); 
	Если Сообщения.Количество() > 0 Тогда 
		СообщениеОбОшибке = "";
		Для Каждого Сообщение Из Сообщения Цикл
			СообщениеОбОшибке = СообщениеОбОшибке + Сообщение.Текст + Символы.ПС
		КонецЦикла;	
		ВызватьИсключение СообщениеОбОшибке;
	КонецЕсли;	
	
КонецПроцедуры

Процедура ЗаполнитьПоВедомости()
	
	// Очищаем текущие строки документа.
	Депоненты.Очистить();
	
	// Получаем невыплаченные строки ведомости.
	ДанныеВедомости = ВзаиморасчетыССотрудниками.ДанныеВедомостейДляОплатыДокументом(Ссылка, ОбщегоНазначенияКлиентСервер.ЗначениеВМассиве(Ведомость),, Ложь);
	Если ДанныеВедомости.Количество() = 0 Тогда 
		СообщениеОбОшибке = НСтр("ru='Зарплата по ведомости полностью выдана (депонирована)'");
		ОбщегоНазначения.СообщитьПользователю(СообщениеОбОшибке, ЭтотОбъект, "Ведомость");
		Возврат
	КонецЕсли;
	ВзаиморасчетыССотрудниками.УпорядочитьДанныеВедомостейДляОплаты(ДанныеВедомости);
	
	// Заполняем по невыплаченным строкам ведомости.
	Для Каждого СтрокаЗарплаты Из ДанныеВедомости Цикл
		Если СтрокаЗарплаты.СуммаКВыплате > 0 Тогда
			СтрокаТЧ = Депоненты.Добавить();
			СтрокаТЧ.ФизическоеЛицо =  СтрокаЗарплаты.ФизическоеЛицо;
		КонецЕсли
	КонецЦикла;
	
КонецПроцедуры	

Функция МожноЗаполнитьПоВедомости()
	
	МетаданныеВедомости = Метаданные.НайтиПоТипу(ТипЗнч(Ведомость));
	Проводится = МетаданныеВедомости.Проведение = Метаданные.СвойстваОбъектов.Проведение.Разрешить;
	
	Запрос = Новый Запрос;
	
	Запрос.УстановитьПараметр("Ссылка",		Ведомость);
	Запрос.УстановитьПараметр("Проводится",	Проводится);
	
	Запрос.Текст =
	"ВЫБРАТЬ
	|	ВЫБОР
	|		КОГДА &Проводится
	|			ТОГДА Ведомость.Ссылка.Проведен
	|		ИНАЧЕ ИСТИНА
	|	КОНЕЦ КАК Проведен,
	|	ЕСТЬNULL(КОЛИЧЕСТВО(ВедомостьЗарплата.НомерСтроки), 0) КАК ЧислоСтрок
	|ИЗ
	|	#ВедомостьДокумент КАК Ведомость
	|		ЛЕВОЕ СОЕДИНЕНИЕ #ВедомостьЗарплата КАК ВедомостьЗарплата
	|		ПО Ведомость.Ссылка = ВедомостьЗарплата.Ссылка
	|ГДЕ
	|	Ведомость.Ссылка = &Ссылка
	|
	|СГРУППИРОВАТЬ ПО
	|	Ведомость.Ссылка.Проведен,
	|	Ведомость.Ссылка.Организация";
	Запрос.Текст = СтрЗаменить(Запрос.Текст, "#ВедомостьДокумент", МетаданныеВедомости.ПолноеИмя());
	Запрос.Текст = СтрЗаменить(Запрос.Текст, "#ВедомостьЗарплата", МетаданныеВедомости.ПолноеИмя()+".Зарплата");
	
	ДанныеВедомости = Запрос.Выполнить().Выгрузить()[0];
	
	МожноЗаполнитьПоВедомости = Истина;
	
	Если НЕ ДанныеВедомости.Проведен Тогда
		МожноЗаполнитьПоВедомости = Ложь;
		СообщениеОбОшибке = НСтр("ru='Ведомость не проведена'");
		ОбщегоНазначения.СообщитьПользователю(СообщениеОбОшибке, ЭтотОбъект, "Ведомость");
	КонецЕсли;	
	
	Если ДанныеВедомости.ЧислоСтрок = 0 Тогда
		МожноЗаполнитьПоВедомости = Ложь;
		СообщениеОбОшибке = НСтр("ru='Ведомость пуста'");
		ОбщегоНазначения.СообщитьПользователю(СообщениеОбОшибке, ЭтотОбъект, "Ведомость");
	КонецЕсли;	
	
	Возврат МожноЗаполнитьПоВедомости 
	
КонецФункции

#КонецОбласти

#Иначе
ВызватьИсключение НСтр("ru = 'Недопустимый вызов объекта на клиенте.'");
#КонецЕсли