#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область ОбработчикиСобытий

Процедура ОбработкаЗаполнения(ДанныеЗаполнения, ТекстЗаполнения, СтандартнаяОбработка)
	
	Если ТипЗнч(ДанныеЗаполнения) = Тип("ДокументСсылка.ФормированиеПартийЗЕРНО") Тогда
		ОформитьСДИЗПоИмпорту(ДанныеЗаполнения);
	КонецЕсли;
	
	ИнтеграцияЗЕРНОПереопределяемый.ОбработкаЗаполненияДокумента(ЭтотОбъект, ДанныеЗаполнения, ТекстЗаполнения, СтандартнаяОбработка);
	
	ЗаполнитьОбъектПоСтатистике();
	
КонецПроцедуры

Процедура ОбработкаПроверкиЗаполнения(Отказ, ПроверяемыеРеквизиты)
	
	МассивНепроверяемыхРеквизитов = Новый Массив;
	
	Если Операция = Перечисления.ВидыОперацийЗЕРНО.ОформлениеСДИЗРФ 
		Или Операция = Перечисления.ВидыОперацийЗЕРНО.ОформлениеСДИЗЭлеватор Тогда
		МассивНепроверяемыхРеквизитов.Добавить("Лаборатория");
		МассивНепроверяемыхРеквизитов.Добавить("НомерПротоколаИспытаний");
		МассивНепроверяемыхРеквизитов.Добавить("ДатаПротоколаИспытаний");
		МассивНепроверяемыхРеквизитов.Добавить("ДатаКонтрактаВЭД");
		МассивНепроверяемыхРеквизитов.Добавить("НомерКонтрактаВЭД");
	Иначе
		ОбработкаПроверкиЗаполненияЛаборатияПротоколИспытаний(МассивНепроверяемыхРеквизитов, Отказ);
	КонецЕсли;
	
	Если Не (Операция = Перечисления.ВидыОперацийЗЕРНО.ОформлениеСДИЗЭлеватор И Приемка) Тогда
		МассивНепроверяемыхРеквизитов.Добавить("ДоговорХраненияПартий");
	КонецЕсли;
	
	Если Не Реализация Тогда
		МассивНепроверяемыхРеквизитов.Добавить("ДатаГПД");
		МассивНепроверяемыхРеквизитов.Добавить("НомерГПД");
		МассивНепроверяемыхРеквизитов.Добавить("Покупатель");
	КонецЕсли;
	
	Если Не ПеремещениеПартийЗерна Тогда
		МассивНепроверяемыхРеквизитов.Добавить("ДатаПеремещения");
		МассивНепроверяемыхРеквизитов.Добавить("МестоХраненияПриПеремещенииСтрокой");
		МассивНепроверяемыхРеквизитов.Добавить("ТипХраненияПриПеремещении");
		МассивНепроверяемыхРеквизитов.Добавить("УсловияХраненияПриПеремещении");
	КонецЕсли;
	
	Если Операция = Перечисления.ВидыОперацийЗЕРНО.ОформлениеСДИЗЭлеватор
		Или Не (Перевозка Или Приемка) Тогда
		МассивНепроверяемыхРеквизитов.Добавить("ПунктНазначенияСтрокой");
	КонецЕсли;
	
	ИнтеграцияЗЕРНОПереопределяемый.ПриОпределенииОбработкиПроверкиЗаполнения(ЭтотОбъект, Отказ, ПроверяемыеРеквизиты, МассивНепроверяемыхРеквизитов);
	
	ОбщегоНазначения.УдалитьНепроверяемыеРеквизитыИзМассива(ПроверяемыеРеквизиты, МассивНепроверяемыхРеквизитов);
	
	ТоварыПроверка = Товары.Выгрузить(, "Партия");
	ТоварыПроверка.Колонки.Добавить("Количество");
	ТоварыПроверка.ЗаполнитьЗначения(1, "Количество");
	ТоварыПроверка.Свернуть("Партия", "Количество");
	
	Отбор = Новый Структура("Партия");
	Для Каждого СтрокаТаблицыПроверки Из ТоварыПроверка Цикл
		Если СтрокаТаблицыПроверки.Количество = 1
			Или Не ЗначениеЗаполнено(СтрокаТаблицыПроверки.Партия) Тогда
			Продолжить;
		КонецЕсли;
		Отбор.Партия = СтрокаТаблицыПроверки.Партия;
		СтрокиТоваров = Товары.НайтиСтроки(Отбор);
		Для Каждого СтрокаТовары Из СтрокиТоваров Цикл
			ТекстСообщения = СтрШаблон(
				НСтр("ru = 'В строке %1 списка ""Товары"" дублируется партия %2'"),
				СтрокаТовары.НомерСтроки,
				СтрокаТовары.Партия);
			ОбщегоНазначения.СообщитьПользователю(ТекстСообщения,
				ЭтотОбъект,
				ОбщегоНазначенияКлиентСервер.ПутьКТабличнойЧасти(
					"Товары", СтрокаТовары.НомерСтроки, "Партия"),,
				Отказ);
		КонецЦикла;
	КонецЦикла;
	
	Если Операция = Перечисления.ВидыОперацийЗЕРНО.ОформлениеСДИЗИмпорт
		Или Операция = Перечисления.ВидыОперацийЗЕРНО.ОформлениеСДИЗЭкспорт
		Или Операция = Перечисления.ВидыОперацийЗЕРНО.ОформлениеСДИЗРФ И Реализация Тогда
		
		ПараметрыОтбора = Новый Структура("ИдентификаторСтрокиТоваров");
		
		ПредставлениеТиповДокументов = ПредставлениеТиповДокументовДляОписанияОшибок();
		
		Для Каждого СтрокаТовары Из Товары Цикл
			
			ПараметрыОтбора.ИдентификаторСтрокиТоваров = СтрокаТовары.Идентификатор;
			
			СтрокиСертификации = ДокументыСертификации.НайтиСтроки(ПараметрыОтбора);
			Если СтрокиСертификации.Количество() = 0 Тогда
				
				ОбщегоНазначения.СообщитьПользователю(
					НСтр("ru = 'Укажите декларацию соответствия!'"),
					ЭтотОбъект, 
					ОбщегоНазначенияКлиентСервер.ПутьКТабличнойЧасти(
						"Товары", СтрокаТовары.НомерСтроки, "ДокументыСертификацииПредставление"),,
					Отказ);
				
			Иначе
				
				ЕстьДекларацияСоответствия = Ложь;
				МассивОшибок = Новый Массив;
				Для Каждого СтрокаСертификации Из СтрокиСертификации Цикл
					
					Если Не ЗначениеЗаполнено(СтрокаСертификации.Номер) Тогда
						МассивОшибок.Добавить(
							СтрШаблон(
								НСтр("ru = 'Не заполнен номер %1!'"),
								ПредставлениеТиповДокументов[СтрокаСертификации.ТипДокумента]));
					КонецЕсли;
					
					Если Не ЗначениеЗаполнено(СтрокаСертификации.Дата) Тогда
						МассивОшибок.Добавить(
							СтрШаблон(
								НСтр("ru = 'Не заполнена дата %1!'"),
								ПредставлениеТиповДокументов[СтрокаСертификации.ТипДокумента]));
					КонецЕсли;
					
					Если Не ЗначениеЗаполнено(СтрокаСертификации.ТипДокумента) Тогда
						МассивОшибок.Добавить(
							СтрШаблон(
								НСтр("ru = 'Не заполнен тип %1!'"),
								ПредставлениеТиповДокументов[СтрокаСертификации.ТипДокумента]));
					ИначеЕсли СтрокаСертификации.ТипДокумента = Справочники.КлассификаторНСИЗЕРНО.ДокументНаПартиюДекларацияСоответствия Тогда
						ЕстьДекларацияСоответствия = Истина;
						Если Не ЗначениеЗаполнено(СтрокаСертификации.СрокДействия) Тогда
							МассивОшибок.Добавить(
								СтрШаблон(
									НСтр("ru = 'Не заполнен срок действия %1!'"),
									ПредставлениеТиповДокументов[СтрокаСертификации.ТипДокумента]));
						КонецЕсли;
					КонецЕсли;
					
				КонецЦикла;
				
				Если Не ЕстьДекларацияСоответствия Тогда
					МассивОшибок.Добавить(НСтр("ru = 'Не указана декларация соотвествия!'"));
				КонецЕсли;
				
				Если МассивОшибок.Количество() Тогда
					
					ОбщегоНазначения.СообщитьПользователю(
						СтрСоединить(МассивОшибок, Символы.ПС),
						ЭтотОбъект, 
						ОбщегоНазначенияКлиентСервер.ПутьКТабличнойЧасти(
							"Товары", СтрокаТовары.НомерСтроки, "ДокументыСертификацииПредставление"),,
						Отказ);
					
				КонецЕсли;
				
			КонецЕсли;
			
		КонецЦикла;
		
	КонецЕсли;
	
	Если Перевозка Тогда
		
		Если ТранспортныеСредства.Количество() = 0 Тогда
			ОбщегоНазначения.СообщитьПользователю(
				НСтр("ru = 'Укажите транспортные средства!'"),
				Ссылка,,
				"Маршрут",
				Отказ);
		Иначе
			
			Для Каждого СтрокаТранспортногоСредства Из ТранспортныеСредства Цикл
				
				МассивОшибок = Новый Массив;
				
				Если Не ЗначениеЗаполнено(СтрокаТранспортногоСредства.Перевозчик) Тогда
					МассивОшибок.Добавить(
						СтрШаблон(
							НСтр("ru = 'Не заполнен перевозчик для транспортного средства %1, %2!'"),
							СтрокаТранспортногоСредства.ТипТранспорта,
							СтрокаТранспортногоСредства.НомерТранспортногоСредства));
				КонецЕсли;
				
				Если Не ЗначениеЗаполнено(СтрокаТранспортногоСредства.ТипТранспорта) Тогда
					МассивОшибок.Добавить(
						СтрШаблон(
							НСтр("ru = 'Не заполнен тип транспорта для перевозчика %1!'"),
							СтрокаТранспортногоСредства.Перевозчик));
				КонецЕсли;
				
				Если Не ЗначениеЗаполнено(СтрокаТранспортногоСредства.НомерТранспортногоСредства) Тогда
					МассивОшибок.Добавить(
						СтрШаблон(
							НСтр("ru = 'Не заполнен номер транспортного средства %1 для перевозчика %2!'"),
							СтрокаТранспортногоСредства.ТипТранспорта,
							СтрокаТранспортногоСредства.Перевозчик));
				КонецЕсли;
				
				Если МассивОшибок.Количество() Тогда
					
					ОбщегоНазначения.СообщитьПользователю(
						СтрСоединить(МассивОшибок, Символы.ПС),
						Ссылка,,
						"Маршрут",
						Отказ);
					
				КонецЕсли;
				
			КонецЦикла;
			
		КонецЕсли;
		
	КонецЕсли;
	
КонецПроцедуры

Процедура ПередЗаписью(Отказ, РежимЗаписи, РежимПроведения)
	
	Если ОбменДанными.Загрузка Тогда
		Возврат;
	КонецЕсли;
	
	ОбновлениеИнформационнойБазы.ПроверитьОбъектОбработан(ЭтотОбъект);
	
	ДополнительныеСвойства.Вставить("ЭтоНовый",    ЭтоНовый());
	ДополнительныеСвойства.Вставить("РежимЗаписи", РежимЗаписи);
	
	ИнтеграцияЗЕРНО.ЗаписатьСоответствиеНоменклатуры(ЭтотОбъект);
	ИнтеграцияИСПереопределяемый.ПередЗаписьюОбъекта(ЭтотОбъект, Отказ, РежимЗаписи, РежимПроведения);
	
КонецПроцедуры

Процедура ПриЗаписи(Отказ)
	
	Если ОбменДанными.Загрузка Тогда
		Возврат;
	КонецЕсли;
	
	ИнтеграцияЗЕРНО.ЗаписатьСтатусДокументаЗЕРНОПоУмолчанию(ЭтотОбъект);
	
КонецПроцедуры

Процедура ПриКопировании(ОбъектКопирования)
	
	Для Каждого СтрокаТоваров Из Товары Цикл
		СтрокаТоваров.Партия           = Неопределено;
		СтрокаТоваров.СДИЗ             = Неопределено;
		СтрокаТоваров.ВыделеннаяПартия = Неопределено;
		СтрокаТоваров.НоваяПартия      = Неопределено;
	КонецЦикла;
	
КонецПроцедуры

Процедура ОбработкаПроведения(Отказ, РежимПроведения)
	
	// Инициализация дополнительных свойств для проведения документа
	ИнтеграцияИС.ИнициализироватьДополнительныеСвойстваДляПроведения(Ссылка, ДополнительныеСвойства, РежимПроведения);
	
	// Инициализация данных документа
	Документы.ОформлениеСДИЗЗЕРНО.ИнициализироватьДанныеДокумента(Ссылка, ДополнительныеСвойства);
	
	// Подготовка наборов записей
	ИнтеграцияИС.ПодготовитьНаборыЗаписейКРегистрацииДвижений(ЭтотОбъект);
	
	РегистрыНакопления.ОстаткиПартийЗЕРНО.ОтразитьДвижения(ДополнительныеСвойства, Движения, Отказ);
	ИнтеграцияИСПереопределяемый.ОтразитьДвижения(ДополнительныеСвойства, Движения, Отказ);
	
	ИнтеграцияИС.ЗаписатьНаборыЗаписей(ЭтотОбъект);
	
	ИнтеграцияИСПереопределяемый.ОбработкаПроведения(ЭтотОбъект, Отказ, РежимПроведения);
	
	ИнтеграцияИС.ОчиститьДополнительныеСвойстваДляПроведения(ДополнительныеСвойства);
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

#Область ОбработкаЗаполнения

Процедура ЗаполнитьОбъектПоСтатистике()
	
	ДанныеСтатистики = ЗаполнениеОбъектовПоСтатистикеЗЕРНО.ДанныеЗаполненияОформлениеСДИЗЗЕРНО(Организация);
	
	Для Каждого КлючИЗначение Из ДанныеСтатистики Цикл
		ЗаполнениеОбъектовПоСтатистикеЗЕРНО.ЗаполнитьПустойРеквизит(ЭтотОбъект, ДанныеСтатистики, КлючИЗначение.Ключ);
	КонецЦикла;
	
КонецПроцедуры

Процедура ОформитьСДИЗПоИмпорту(ДанныеЗаполнения)
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("Ссылка", Ссылка);
	Запрос.УстановитьПараметр("ДокументОснование", ДанныеЗаполнения);
	Запрос.Текст =
	"ВЫБРАТЬ
	|	ФормированиеПартийЗЕРНО.Организация КАК Организация,
	|	ФормированиеПартийЗЕРНО.ВидПродукции КАК ВидПродукции
	|ИЗ
	|	Документ.ФормированиеПартийЗЕРНО КАК ФормированиеПартийЗЕРНО
	|ГДЕ
	|	ФормированиеПартийЗЕРНО.Ссылка = &ДокументОснование";
	Выборка = Запрос.Выполнить().Выбрать();
	
	Операция = Перечисления.ВидыОперацийЗЕРНО.ОформлениеСДИЗИмпорт;
	Если Выборка.Следующий() Тогда
		ВидПродукции = Выборка.ВидПродукции;
		Организация = Выборка.Организация;
		Перевозка = Истина;
	КонецЕсли;
	
	Запрос.Текст =
	"ВЫБРАТЬ
	|	ФормированиеПартийЗЕРНОТовары.ОКПД2,
	|	ФормированиеПартийЗЕРНОТовары.Номенклатура,
	|	ФормированиеПартийЗЕРНОТовары.Характеристика,
	|	ФормированиеПартийЗЕРНОТовары.Серия,
	|	ФормированиеПартийЗЕРНОТовары.СтатусУказанияСерий,
	|	ФормированиеПартийЗЕРНОТовары.КодТНВЭД,
	|	ФормированиеПартийЗЕРНОТовары.Количество,
	|	ФормированиеПартийЗЕРНОТовары.КоличествоЗЕРНО,
	|	ФормированиеПартийЗЕРНОТовары.Партия
	|ПОМЕСТИТЬ ОжидаемыеПартии
	|ИЗ
	|	Документ.ФормированиеПартийЗЕРНО.Товары КАК ФормированиеПартийЗЕРНОТовары
	|ГДЕ
	|	ФормированиеПартийЗЕРНОТовары.Ссылка = &ДокументОснование
	|	И ФормированиеПартийЗЕРНОТовары.Партия <> ЗНАЧЕНИЕ(Справочник.РеестрПартийЗЕРНО.ПустаяСсылка)
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ОформлениеСДИЗЗЕРНО.Ссылка КАК Ссылка
	|ПОМЕСТИТЬ ОформленныеДокументы
	|ИЗ
	|	Документ.ОформлениеСДИЗЗЕРНО КАК ОформлениеСДИЗЗЕРНО
	|ГДЕ
	|	ОформлениеСДИЗЗЕРНО.Ссылка <> &Ссылка
	|	И ОформлениеСДИЗЗЕРНО.Проведен
	|	И ОформлениеСДИЗЗЕРНО.ДокументОснование = &ДокументОснование
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Ссылка
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ОформлениеСДИЗЗЕРНОТовары.Партия,
	|	СУММА(ОформлениеСДИЗЗЕРНОТовары.Количество) КАК Количество,
	|	СУММА(ОформлениеСДИЗЗЕРНОТовары.КоличествоЗЕРНО) КАК КоличествоЗЕРНО
	|ПОМЕСТИТЬ ОформленныеТовары
	|ИЗ
	|	Документ.ОформлениеСДИЗЗЕРНО.Товары КАК ОформлениеСДИЗЗЕРНОТовары
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ОформленныеДокументы КАК ОформленныеДокументы
	|		ПО ОформлениеСДИЗЗЕРНОТовары.Ссылка = ОформленныеДокументы.Ссылка
	|СГРУППИРОВАТЬ ПО
	|	ОформлениеСДИЗЗЕРНОТовары.Партия
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ОжидаемыеПартии.Номенклатура КАК Номенклатура,
	|	ОжидаемыеПартии.Характеристика КАК Характеристика,
	|	ОжидаемыеПартии.Серия КАК Серия,
	|	ОжидаемыеПартии.СтатусУказанияСерий КАК СтатусУказанияСерий,
	|	ОжидаемыеПартии.ОКПД2 КАК ОКПД2,
	|	ОжидаемыеПартии.КодТНВЭД КАК КодТНВЭД,
	|	ОжидаемыеПартии.Партия КАК Партия,
	|	ОжидаемыеПартии.Количество - ЕСТЬNULL(ОформленныеТовары.Количество, 0) КАК Количество,
	|	ОжидаемыеПартии.КоличествоЗЕРНО - ЕСТЬNULL(ОформленныеТовары.КоличествоЗЕРНО, 0) КАК КоличествоЗЕРНО
	|ИЗ
	|	ОжидаемыеПартии КАК ОжидаемыеПартии
	|		ЛЕВОЕ СОЕДИНЕНИЕ ОформленныеТовары КАК ОформленныеТовары
	|		ПО ОжидаемыеПартии.Партия = ОформленныеТовары.Партия
	|ГДЕ
	|	ОжидаемыеПартии.КоличествоЗЕРНО > ЕСТЬNULL(ОформленныеТовары.КоличествоЗЕРНО, 0)";
	
	Выборка = Запрос.Выполнить().Выбрать();
	
	Если Выборка.Количество() = 0 Тогда
		ВызватьИсключение СтрШаблон(НСтр("ru='В %1 отсутствует продукция для заполнения.'"), ДанныеЗаполнения);
	КонецЕсли;
	
	Товары.Очистить();
	
	Пока Выборка.Следующий() Цикл
		
		НоваяСтрока = Товары.Добавить();
		ЗаполнитьЗначенияСвойств(НоваяСтрока, Выборка);
		НоваяСтрока.Идентификатор = Новый УникальныйИдентификатор;
		
	КонецЦикла;
	
	НоменклатураСертификатов = Новый Массив();
	СтрокиПоНоменклатурам    = Новый Соответствие();
	
	Для Каждого СтрокаТаблицы Из Товары Цикл
		Если ЗначениеЗаполнено(СтрокаТаблицы.Номенклатура) Тогда
			НоменклатураСертификатов.Добавить(СтрокаТаблицы.Номенклатура);
			СтрокиПоНоменклатуре = СтрокиПоНоменклатурам[СтрокаТаблицы.Номенклатура];
			Если СтрокиПоНоменклатуре = Неопределено Тогда
				СтрокиПоНоменклатуре = Новый Массив();
				СтрокиПоНоменклатурам[СтрокаТаблицы.Номенклатура] = СтрокиПоНоменклатуре;
			КонецЕсли;
			СтрокиПоНоменклатуре.Добавить(СтрокаТаблицы);
		КонецЕсли;
	КонецЦикла;
	
	СертификатыНоменклатуры = Новый Соответствие;
	ИнтеграцияИСПереопределяемый.ПриЗаполненииСертификатовНоменклатуры(НоменклатураСертификатов, СертификатыНоменклатуры);
	
	Если СертификатыНоменклатуры.Количество() Тогда
		
		ДобавленныеТипыПоСтрокам = Новый Соответствие();
		
		Для Каждого КлючИЗначение Из СертификатыНоменклатуры Цикл
			
			Для Каждого СтрокаТовары Из СтрокиПоНоменклатурам[КлючИЗначение.Ключ] Цикл
				
				Для Каждого ДанныеСертификата Из КлючИЗначение.Значение Цикл
					
					Если Не ДанныеСертификата.Бессрочный
						И ЗначениеЗаполнено(ДанныеСертификата.СрокДействия)
						И ДанныеСертификата.СрокДействия < ТекущаяДатаСеанса() Тогда
						Продолжить;
					КонецЕсли;
					
					СтруктураПоиска = Новый Структура;
					СтруктураПоиска.Вставить("ИдентификаторСтрокиТоваров", СтрокаТовары.Идентификатор);
					СтруктураПоиска.Вставить("ТипДокумента",               Неопределено);
					СтруктураПоиска.Вставить("Номер",                      ДанныеСертификата.НомерСертификации);
					СтруктураПоиска.Вставить("Дата",                       ДанныеСертификата.ДатаСертификации);
					СтруктураПоиска.Вставить("СрокДействия",               ДанныеСертификата.СрокДействия);
					
					Если ДанныеСертификата.ВидСертификации = Перечисления.ВидыДокументовОбязательнойСертификацииИС.СертификатСоответствия Тогда
						СтруктураПоиска.ТипДокумента = Справочники.КлассификаторНСИЗЕРНО.ДокументНаПартиюФитосанитарныйСертификат;
					ИначеЕсли ДанныеСертификата.ВидСертификации = Перечисления.ВидыДокументовОбязательнойСертификацииИС.ДекларацияСоответствия Тогда
						СтруктураПоиска.ТипДокумента = Справочники.КлассификаторНСИЗЕРНО.ДокументНаПартиюДекларацияСоответствия;
					КонецЕсли;
					
					ДобавленныеТипыПоСтроке = ДобавленныеТипыПоСтрокам[СтрокаТовары];
					Если ДобавленныеТипыПоСтроке = Неопределено Тогда
						ДобавленныеТипыПоСтроке = Новый Массив();
						ДобавленныеТипыПоСтрокам[СтрокаТовары] = ДобавленныеТипыПоСтроке;
					КонецЕсли;
					
					Если ДобавленныеТипыПоСтроке.Найти(СтруктураПоиска.ТипДокумента) = Неопределено
						И ДокументыСертификации.НайтиСтроки(СтруктураПоиска).Количество() = 0 Тогда
							
						НоваяСтрока = ДокументыСертификации.Добавить();
						ЗаполнитьЗначенияСвойств(НоваяСтрока, СтруктураПоиска);
						ДобавленныеТипыПоСтроке.Добавить(СтруктураПоиска.ТипДокумента);
						
					КонецЕсли;
					
				КонецЦикла;
				
			КонецЦикла;
			
		КонецЦикла;
	
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

Функция ПредставлениеТиповДокументовДляОписанияОшибок()
	
	Результат = Новый Соответствие();
	Результат.Вставить(
		Справочники.КлассификаторНСИЗЕРНО.ДокументНаПартиюДекларацияСоответствия,
		НСтр("ru = 'декларации соответствия'"));
	
	Результат.Вставить(
		Справочники.КлассификаторНСИЗЕРНО.ДокументНаПартиюФитосанитарныйСертификат,
		НСтр("ru = 'фитосанитарного сертификата'"));
	
	Результат.Вставить(
		Справочники.КлассификаторНСИЗЕРНО.ДокументНаПартиюВетеринарныйСертификат,
		НСтр("ru = 'ветеринарного сертификата'"));
	
	Результат.Вставить(
		Справочники.КлассификаторНСИЗЕРНО.ПустаяСсылка(),
		НСтр("ru = 'документа сертификации'"));
	
	Возврат Результат
	
КонецФункции

Процедура ОбработкаПроверкиЗаполненияЛаборатияПротоколИспытаний(МассивНепроверяемыхРеквизитов, Отказ)
	
	Если Не ЗначениеЗаполнено(Лаборатория) Тогда
		Отбор = Новый Структура("Лаборатория", ИнтеграцияИС.ПустоеЗначениеОпределяемогоТипа("КонтрагентГосИС"));
		СтрокиТоваров = Товары.НайтиСтроки(Отбор);
		ЕстьОшибки = Ложь;
		Для Каждого СтрокаТовары Из СтрокиТоваров Цикл
			ТекстСообщения = СтрШаблон(
				НСтр("ru = 'В строке %1 списка ""Товары"" не заполнена Лаборатория'"),
				СтрокаТовары.НомерСтроки);
			ОбщегоНазначения.СообщитьПользователю(ТекстСообщения,
				ЭтотОбъект,
				ОбщегоНазначенияКлиентСервер.ПутьКТабличнойЧасти(
					"Товары", СтрокаТовары.НомерСтроки, "Лаборатория"),,
				Отказ);
			ЕстьОшибки = Истина;
		КонецЦикла;
		Если ЕстьОшибки Тогда
			ОбщегоНазначения.СообщитьПользователю(
				НСтр("ru = 'Укажите Лаборатию или заполните реквизиты в табличной части ""Товары""'"),
				ЭтотОбъект,
				"Лаборатория",,
				Отказ);
		КонецЕсли;
		МассивНепроверяемыхРеквизитов.Добавить("Лаборатория");
	КонецЕсли;
	
	Если Не ЗначениеЗаполнено(НомерПротоколаИспытаний) 
		Или Не ЗначениеЗаполнено(ДатаПротоколаИспытаний) Тогда
		
		Отбор = Новый Структура("НомерПротоколаИспытаний", "");
		СтрокиТоваров = Товары.НайтиСтроки(Отбор);
		ЕстьОшибки = Ложь;
		Для Каждого СтрокаТовары Из СтрокиТоваров Цикл
			ТекстСообщения = СтрШаблон(
				НСтр("ru = 'В строке %1 списка ""Товары"" не заполнен Номер протокола испытаний'"),
				СтрокаТовары.НомерСтроки);
			ОбщегоНазначения.СообщитьПользователю(ТекстСообщения,
				ЭтотОбъект,
				ОбщегоНазначенияКлиентСервер.ПутьКТабличнойЧасти(
					"Товары", СтрокаТовары.НомерСтроки, "НомерПротоколаИспытаний"),,
				Отказ);
			ЕстьОшибки = Истина;
		КонецЦикла;
		
		Отбор = Новый Структура("ДатаПротоколаИспытаний", Дата(1,1,1));
		СтрокиТоваров = Товары.НайтиСтроки(Отбор);
		Для Каждого СтрокаТовары Из СтрокиТоваров Цикл
			ТекстСообщения = СтрШаблон(
				НСтр("ru = 'В строке %1 списка ""Товары"" не заполнена Дата протокола испытаний'"),
				СтрокаТовары.НомерСтроки);
			ОбщегоНазначения.СообщитьПользователю(ТекстСообщения,
				ЭтотОбъект,
				ОбщегоНазначенияКлиентСервер.ПутьКТабличнойЧасти(
					"Товары", СтрокаТовары.НомерСтроки, "ДатаПротоколаИспытаний"),,
				Отказ);
			ЕстьОшибки = Истина;
		КонецЦикла;
		
		ИмяПоля = Неопределено;
		Если ЗначениеЗаполнено(ДатаПротоколаИспытаний) Тогда
			ИмяПоля = "НомерПротоколаИспытаний";
		ИначеЕсли ЗначениеЗаполнено(НомерПротоколаИспытаний) Тогда
			ИмяПоля = "ДатаПротоколаИспытаний";
		КонецЕсли;
		
		Если ЕстьОшибки Тогда
			ОбщегоНазначения.СообщитьПользователю(
				НСтр("ru = 'Укажите номер и дату протокола испытаний или заполните реквизиты в табличной части ""Товары""'"),
				ЭтотОбъект,
				"НомерПротоколаИспытаний",,
				Отказ);
		ИначеЕсли ИмяПоля <> Неопределено Тогда
			// Реквизиты Дата и Номер протокола испытаний в шапке должны быть заполнены или быть пустыми.
			ОбщегоНазначения.СообщитьПользователю(
				НСтр("ru = 'Укажите номер и дату протокола испытаний'"),
				ЭтотОбъект,
				ИмяПоля,,
				Отказ);
		КонецЕсли;
		
		МассивНепроверяемыхРеквизитов.Добавить("НомерПротоколаИспытаний");
		МассивНепроверяемыхРеквизитов.Добавить("ДатаПротоколаИспытаний");
		
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#КонецЕсли
