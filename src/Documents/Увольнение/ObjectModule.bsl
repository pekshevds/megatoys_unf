#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область ОбработчикиСобытий

Процедура ОбработкаПроведения(Отказ, РежимПроведения)
	
	ПроведениеСервер.ПодготовитьНаборыЗаписейКРегистрацииДвижений(ЭтотОбъект, , ,
		ДополнительныеСвойства.Свойство("ОтключитьПроверкуДатыЗапретаИзменения"));
	
	ДанныеДляПроведения = ПолучитьДанныеДляПроведения();
	
	КадровыйУчет.СформироватьКадровыеДвижения(ЭтотОбъект, Движения, ДанныеДляПроведения.КадровыеДвижения);
	
	УчетСтажаПФР.ЗарегистрироватьПериодыВУчетеСтажаПФР(Движения, ДанныеДляРегистрацииВУчетаСтажаПФР());
	
	Если Не ПрименятьВычетыПослеУвольнения Тогда
		
		КадровыйУчет.СформироватьПрекращениеВычетовСтандартныхИНаДетей(
			Движения, ФизическоеЛицо, Организация, КонецМесяца(ДатаУвольнения) + 1, Отказ, ОбщегоНазначенияКлиентСервер.ЗначениеВМассиве(Ссылка));
		
	КонецЕсли;
	
	Документы.Увольнение.СформироватьДвиженияМероприятийТрудовойДеятельности(
		Движения.МероприятияТрудовойДеятельности, ДанныеДляПроведения.МероприятияТрудовойДеятельности);
	
КонецПроцедуры

Процедура ОбработкаЗаполнения(ДанныеЗаполнения, СтандартнаяОбработка)
	
	Если ТипЗнч(ДанныеЗаполнения) = Тип("СправочникСсылка.Сотрудники") Тогда
		ЗарплатаКадры.ЗаполнитьПоОснованиюСотрудником(ЭтотОбъект, ДанныеЗаполнения);
	КонецЕсли;
	
КонецПроцедуры

Процедура ОбработкаПроверкиЗаполнения(Отказ, ПроверяемыеРеквизиты)
	
	КадровыйУчет.ПроверитьВозможностьПроведенияПоКадровомуУчету(
		ДатаУвольнения,
		Сотрудник,
		Ссылка,
		Отказ,
		Перечисления.ВидыКадровыхСобытий.Увольнение);
		
	Если НЕ ДокументЗаполненПравильно() Тогда
		Отказ = Истина;
	КонецЕсли;
	
	Если ОтразитьВТрудовойКнижке Тогда
		
		ЭлектронныеТрудовыеКнижки.ПроверкаЗаполненияВторогоДокументаОснования(ЭтотОбъект, Ссылка, Отказ);
		
		СотрудникиДаты = ЭлектронныеТрудовыеКнижки.ПустаяТаблицаСотрудникиДатыДляПроверкиПоследовательностиМероприятий();
		ЭлектронныеТрудовыеКнижки.ДобавитьСотрудникаВТаблицуСотрудникиДаты(
			СотрудникиДаты, Сотрудник, ДатаУвольнения);
		
		ИсключаемыеРегистраторы = Новый Массив;
		ИсключаемыеРегистраторы.Добавить(Ссылка);
		
		ЭлектронныеТрудовыеКнижки.ПроверкаВозможностиРегистрацииМероприятияУвольнения(
			СотрудникиДаты, Ссылка, ИсключаемыеРегистраторы, Отказ);
		
	КонецЕсли;
	
КонецПроцедуры

Процедура ПередЗаписью(Отказ, РежимЗаписи, РежимПроведения)
	
	Если ЗарплатаКадры.ОтключитьБизнесЛогикуПриЗаписи(ЭтотОбъект) Тогда
		Возврат;
	КонецЕсли;
	
	Документы.Увольнение.ЗаполнитьДатуЗапретаРедактирования(ЭтотОбъект);
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

Функция ПолучитьДанныеДляПроведения()
	
	ДатаСобытия = КонецДня(ДатаУвольнения) + 1;
	
	Запрос = Новый Запрос;
	
	Запрос.МенеджерВременныхТаблиц = Новый МенеджерВременныхТаблиц;
	
	УсловияОтбора = Новый Массив;
	ЗарплатаКадрыОбщиеНаборыДанных.ДобавитьВКоллекциюОтбор(УсловияОтбора, "Регистратор", "<>", Ссылка);
	
	ПоляОтбораПериодическихДанных = Новый Структура;
	ПоляОтбораПериодическихДанных.Вставить("КадроваяИсторияСотрудников", УсловияОтбора);
	
	КадровыйУчет.СоздатьНаДатуВТКадровыеДанныеСотрудников(
		Запрос.МенеджерВременныхТаблиц,
		Ложь,
		Сотрудник,
		"ГоловнаяОрганизация,Организация,Подразделение,Должность,ВидЗанятости,ФизическоеЛицо,КоличествоСтавок",
		ДатаСобытия,
		ПоляОтбораПериодическихДанных);
		
	Запрос.УстановитьПараметр("ДатаСобытия", ДатаСобытия);
	
	Запрос.Текст =
	"ВЫБРАТЬ
	|	&ДатаСобытия КАК ДатаСобытия,
	|	КадровыеДанныеСотрудников.Сотрудник КАК Сотрудник,
	|	КадровыеДанныеСотрудников.ГоловнаяОрганизация КАК ГоловнаяОрганизация,
	|	КадровыеДанныеСотрудников.Организация КАК Организация,
	|	КадровыеДанныеСотрудников.Подразделение КАК Подразделение,
	|	КадровыеДанныеСотрудников.Должность КАК Должность,
	|	КадровыеДанныеСотрудников.ВидЗанятости КАК ВидЗанятости,
	|	ЗНАЧЕНИЕ(Перечисление.ВидыКадровыхСобытий.Увольнение) КАК ВидСобытия,
	|	КадровыеДанныеСотрудников.ФизическоеЛицо КАК ФизическоеЛицо,
	|	КадровыеДанныеСотрудников.КоличествоСтавок КАК КоличествоСтавок
	|ИЗ
	|	ВТКадровыеДанныеСотрудников КАК КадровыеДанныеСотрудников";
	
	РезультатыЗапроса = Запрос.ВыполнитьПакет();
	
	ДанныеДляПроведения = Новый Структура; 
	
	// Первый набор данных для проведения - таблица для формирования кадровых движений, истории графиков, авансов.
	ДанныеДляПроведения.Вставить("КадровыеДвижения", РезультатыЗапроса[0].Выгрузить());
	
	ДанныеДляПроведения.Вставить("МероприятияТрудовойДеятельности",
		Документы.Увольнение.ДанныеДляПроведенияМероприятияТрудовойДеятельности(Ссылка).Получить(Ссылка));
	
	Возврат ДанныеДляПроведения;

КонецФункции

Функция ДокументЗаполненПравильно(ТихийРежим = Ложь) Экспорт
	
	ТекстСообщения = "";
	СтруктураСообщений  = Новый Соответствие;
	ДокументЗаполненПравильно = Истина;
	
	Если НЕ ЗначениеЗаполнено(Организация) Тогда
		ТекстСообщения = НСтр("ru = 'Поле ""Организация"" обязательно к заполнению.'");
		СтруктураСообщений.Вставить("Организация",ТекстСообщения);
	КонецЕсли;
	
	Если НЕ ЗначениеЗаполнено(Сотрудник) Тогда
		ТекстСообщения = НСтр("ru = 'Поле ""Сотрудник"" обязательно к заполнению.'");
		СтруктураСообщений.Вставить("Сотрудник",ТекстСообщения);
	КонецЕсли;
	
	Если НЕ ЗначениеЗаполнено(ДатаУвольнения) Тогда
		ТекстСообщения = НСтр("ru = 'Поле ""Дата увольнения"" обязательно к заполнению.'");
		СтруктураСообщений.Вставить("ДатаУвольнения",ТекстСообщения);
	КонецЕсли;
	
	ДокументЗаполненПравильно = СтруктураСообщений.Количество() = 0;
	
	Если НЕ ТихийРежим И НЕ ДокументЗаполненПравильно Тогда
		Для каждого Сообщение Из СтруктураСообщений Цикл
			ОбщегоНазначения.СообщитьПользователю(Сообщение.Значение,,"Объект" + ?(Сообщение.Ключ = "","",".") + Сообщение.Ключ);
		КонецЦикла;
	КонецЕсли;
	
	Возврат ДокументЗаполненПравильно;	
	
КонецФункции

Функция ДанныеДляРегистрацииВУчетаСтажаПФР()
	МассивСсылок = Новый Массив;
	МассивСсылок.Добавить(Ссылка);
	
	ДанныеДляРегистрацииВУчете = Документы.Увольнение.ДанныеДляРегистрацииВУчетаСтажаПФР(МассивСсылок);
		
	Возврат ДанныеДляРегистрацииВУчете[Ссылка];
														
КонецФункции

#КонецОбласти

#Иначе
ВызватьИсключение НСтр("ru = 'Недопустимый вызов объекта на клиенте.'");
#КонецЕсли