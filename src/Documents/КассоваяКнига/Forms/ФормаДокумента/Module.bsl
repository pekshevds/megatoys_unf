
#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	#Область БиблиотекаСтандартныхПодсистем
	
	// СтандартныеПодсистемы.ВерсионированиеОбъектов
	ВерсионированиеОбъектов.ПриСозданииНаСервере(ЭтотОбъект);
	// Конец СтандартныеПодсистемы.ВерсионированиеОбъектов
	
	// СтандартныеПодсистемы.ПодключаемыеКоманды
	ПодключаемыеКоманды.ПриСозданииНаСервере(ЭтотОбъект);
	// Конец СтандартныеПодсистемы.ПодключаемыеКоманды
	
	#КонецОбласти
	
	УчетПоКомпании = Константы.УчетПоКомпании.Получить();
	Если УчетПоКомпании Тогда
		Компания = Справочники.Организации.ОрганизацияКомпания();
		Объект.Организация = Документы.КассоваяКнига.ПолучитьОрганизацию(Объект.Ответственный, Объект.Организация);
	КонецЕсли;
	ОбновитьПредупреждениеУчетПоКомпании();
	
	ИспользоватьДоговор = ПолучитьФункциональнуюОпцию("ИспользоватьАгентскиеПлатежиИРазделениеВыручки");
	ОбщегоНазначенияКлиентСервер.УстановитьСвойствоЭлементаФормы(Элементы, "ДоговорКонтрагента", "видимость", ИспользоватьДоговор);
	
	ПечатьДокументовУНФ.УстановитьОтображениеПодменюПечати(Элементы.ПодменюПечать);
	ПечатьДокументовУНФ.КорректировкаРазмещениеПодчиненнойГруппыКомандПечати(ЭтотОбъект, Элементы.ПодменюПечать, Элементы.ПодменюПечатьФаксимиле);
	НапоминанияПользователяУНФ.УстановитьОтображениеКомандОрганайзера(Элементы);
	ЭлектроннаяПочтаУНФ.УстановитьОтображениеКомандОтправкиСообщений(Элементы);
	
КонецПроцедуры

&НаСервере
Процедура ПриЧтенииНаСервере(ТекущийОбъект)

	// СтандартныеПодсистемы.УправлениеДоступом
	Если ОбщегоНазначения.ПодсистемаСуществует("СтандартныеПодсистемы.УправлениеДоступом") Тогда
		МодульУправлениеДоступом = ОбщегоНазначения.ОбщийМодуль("УправлениеДоступом");
		МодульУправлениеДоступом.ПриЧтенииНаСервере(ЭтотОбъект, ТекущийОбъект);
	КонецЕсли;
	// Конец СтандартныеПодсистемы.УправлениеДоступом
	
	// СтандартныеПодсистемы.Свойства
	УправлениеСвойствами.ПриЧтенииНаСервере(ЭтотОбъект, ТекущийОбъект);
	// Конец СтандартныеПодсистемы.Свойства 
	
	// СтандартныеПодсистемы.ПодключаемыеКоманды
	ПодключаемыеКомандыКлиентСервер.ОбновитьКоманды(ЭтотОбъект, Объект);
	// Конец СтандартныеПодсистемы.ПодключаемыеКоманды
	
	ДатыЗапретаИзменения.ОбъектПриЧтенииНаСервере(ЭтотОбъект, ТекущийОбъект);
	
КонецПроцедуры

&НаКлиенте
Процедура ПослеЗаписи(ПараметрыЗаписи)
	
	ПодключаемыеКомандыКлиент.ПослеЗаписи(ЭтотОбъект, Объект, ПараметрыЗаписи);		
	
КонецПроцедуры

&НаКлиенте
Процедура ПередЗаписью(Отказ, ПараметрыЗаписи)
	
	// СтандартныеПодсистемы.ОценкаПроизводительности
	Если ПараметрыЗаписи.РежимЗаписи = РежимЗаписиДокумента.Проведение Тогда
		ОценкаПроизводительностиКлиент.ЗамерВремени("Проведение"+ РаботаСФормойДокументаКлиентСервер.ПолучитьИмяФормыСтрокой(ЭтотОбъект.ИмяФормы));
	КонецЕсли;
	// СтандартныеПодсистемы.ОценкаПроизводительности	
	
КонецПроцедуры


#Область ОбработчикиСобытийЭлементовШапки

&НаКлиенте
Процедура ДатаПриИзменении(Элемент)
	
	ДатаПриИзмененииСервер();
КонецПроцедуры

&НаКлиенте
Процедура ОрганизацияПриИзменении(Элемент)
	
	ОрганизацияПриИзмененииСервер();
	
КонецПроцедуры

&НаКлиенте
Процедура КассаПриИзменении(Элемент)
	
	КассаПриИзмененииНаСервере();

КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	// СтандартныеПодсистемы.ПодключаемыеКоманды
	ПодключаемыеКомандыКлиент.НачатьОбновлениеКоманд(ЭтотОбъект);
	// Конец СтандартныеПодсистемы.ПодключаемыеКоманды
КонецПроцедуры

#КонецОбласти

&НаСервере
Процедура ПослеЗаписиНаСервере(ТекущийОбъект, ПараметрыЗаписи)
	// СтандартныеПодсистемы.УправлениеДоступом
	УправлениеДоступом.ПослеЗаписиНаСервере(ЭтотОбъект, ТекущийОбъект, ПараметрыЗаписи);
	// Конец СтандартныеПодсистемы.УправлениеДоступом
КонецПроцедуры

&НаКлиенте
Процедура ОбработатьИзмененияРеквизитовПечати(Результат, ДополнительныеПараметры) Экспорт
	
	Если ТипЗнч(Результат) = Тип("Структура") Тогда
		
		ПечатьДокументовУНФКлиент.ОбновитьЗначенияРеквизитовПечати(ЭтотОбъект, Результат.ИзмененныеРеквизиты);
		
		Если Результат.Свойство("Команда") Тогда
			
			Подключаемый_ВыполнитьКоманду(Результат.Команда);
			
		КонецЕсли;
				
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура КомментарийНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	
	ОбщегоНазначенияКлиент.ПоказатьФормуРедактированияКомментария(Элемент.ТекстРедактирования, ЭтотОбъект, "Объект.Комментарий");
	СтатистикаИспользованияФормКлиент.ПриИнтерактивномДействии(ЭтотОбъект, Элемент, "НачалоВыбора");
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовТаблицыФормыДокументы

&НаКлиенте
Процедура ДокументыВыбор(Элемент, ВыбраннаяСтрока, Поле, СтандартнаяОбработка)
	
	Если Поле.Имя = "КассовыйОрдер" И ЗначениеЗаполнено(Элемент.ТекущиеДанные.КассовыйОрдер) Тогда
		ПоказатьЗначение(,Элемент.ТекущиеДанные.КассовыйОрдер);
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура ДокументыПередНачаломДобавления(Элемент, Отказ, Копирование, Родитель, Группа)
	
	Отказ = Истина;
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура ЗаполнитьДокументы(Команда)

	ВызватьПроцедуруЗаполненияТабличнойЧасти = Истина;
	
	Если НЕ ЗначениеЗаполнено(Объект.Организация) Тогда
		
		ТекстСообщения	= НСтр("ru = 'Неверно заполнена дата окончания периода.'");
		ПолеСообщения	= "Объект.КонецПериода";
		
		ОбщегоНазначенияКлиент.СообщитьПользователю(ТекстСообщения, , ПолеСообщения);
		
		ВызватьПроцедуруЗаполненияТабличнойЧасти = Ложь;
		
	КонецЕсли;
	
	Если ВызватьПроцедуруЗаполненияТабличнойЧасти Тогда
		
		Если Объект.КассовыеОрдера.Количество() > 0 Тогда
			
			ТестВопроса	= НСтр("ru = 'Табличная часть будет очищена и заполнена повторно. Продолжить?'");
			ОписаниеОповещения = Новый ОписаниеОповещения("ПослеПроверкиВозможностиЗаполнения", ЭтотОбъект, "ДанныеОрганизации");
			ПоказатьВопрос(ОписаниеОповещения, ТестВопроса, РежимДиалогаВопрос.ДаНет, 0);
			
		Иначе
			
			ПослеПроверкиВозможностиЗаполнения(КодВозвратаДиалога.Да);
			
		КонецЕсли;
		
	КонецЕсли;

КонецПроцедуры

// СтандартныеПодсистемы.ПодключаемыеКоманды
&НаКлиенте
Процедура Подключаемый_ВыполнитьКоманду(Команда)
	ПодключаемыеКомандыКлиент.НачатьВыполнениеКоманды(ЭтотОбъект, Команда, Объект)
КонецПроцедуры

&НаКлиенте
Процедура Подключаемый_ПродолжитьВыполнениеКомандыНаСервере(ПараметрыВыполнения, ДополнительныеПараметры) Экспорт
	ВыполнитьКомандуНаСервере(ПараметрыВыполнения);
КонецПроцедуры

&НаСервере
Процедура ВыполнитьКомандуНаСервере(ПараметрыВыполнения)
	ПодключаемыеКоманды.ВыполнитьКоманду(ЭтотОбъект, ПараметрыВыполнения, Объект);
КонецПроцедуры

&НаКлиенте
Процедура Подключаемый_ОбновитьКоманды()
	ПодключаемыеКомандыКлиентСервер.ОбновитьКоманды(ЭтотОбъект, Объект);
КонецПроцедуры
// Конец СтандартныеПодсистемы.ПодключаемыеКоманды

&НаКлиенте
Процедура ДекорацияРеквизитыПечатиНажатие(Элемент)
	ОткрытьФормуРеквизитыПечати();
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаКлиенте
Процедура ПослеПроверкиВозможностиЗаполнения(ЗаполнятьТабличнуюЧасть, ДополнительныеПараметры = неопределено) Экспорт
	
	Если ЗаполнятьТабличнуюЧасть = КодВозвратаДиалога.Да Тогда
		ЗаполнитьДокументыСервер();
	КонецЕсли;
КонецПроцедуры

&НаСервере
Процедура ЗаполнитьДокументыСервер()
	
	Объект.КассовыеОрдера.Очистить();
	
	Запрос = Новый Запрос("
	|ВЫБРАТЬ ПЕРВЫЕ 1
	|	КассоваяКнига.Ссылка КАК Ссылка
	|ИЗ
	|	Документ.КассоваяКнига КАК КассоваяКнига
	|ГДЕ
	|	КассоваяКнига.Ссылка <> &ТекущийДокумент
	|	И КассоваяКнига.Организация = &Организация
	|	И КассоваяКнига.ДоговорКонтрагента = &ДоговорКонтрагента
	|	И КассоваяКнига.Касса = &Касса
	|	И КассоваяКнига.Проведен
	|	И НачалоПериода(КассоваяКнига.Дата, ДЕНЬ) = &ДатаНач
	|");
	
	Запрос.УстановитьПараметр("ТекущийДокумент", Объект.Ссылка);
	Запрос.УстановитьПараметр("Организация", Объект.Организация);
	Запрос.УстановитьПараметр("ДоговорКонтрагента", Объект.ДоговорКонтрагента);
	Запрос.УстановитьПараметр("Касса", Объект.Касса);
	Запрос.УстановитьПараметр("ДатаНач", НачалоДня(Объект.Дата));
	
	Результат = Запрос.Выполнить();
	Если НЕ Результат.Пустой() Тогда
		Выборка = Результат.Выбрать();
		Выборка.Следующий();
		
		ОбщегоНазначения.СообщитьПользователю(
			СтрШаблон(НСтр("ru = 'На дату %1 уже существует документ: %2'"), Формат(Объект.Дата, "ДЛФ=D"), Выборка.Ссылка)
			,, "Объект.Дата");
		
		Возврат;
		
	КонецЕсли;
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("ДатаНачала", НачалоДня(Объект.Дата));
	Запрос.УстановитьПараметр("ДатаОкончания", КонецДня(Объект.Дата));
	Запрос.УстановитьПараметр("Организация", Объект.Организация);
	Запрос.УстановитьПараметр("ДоговорКонтрагента", Объект.ДоговорКонтрагента);
	
	ТекстЗапроса = 
	"ВЫБРАТЬ
	|	ДенежныеСредства.Регистратор КАК КассовыйОрдер,
	|	ДенежныеСредства.Период КАК Период,
	|	СУММА(ВЫБОР
	|			КОГДА ДенежныеСредства.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)
	|				ТОГДА ДенежныеСредства.Сумма
	|			ИНАЧЕ 0
	|		КОНЕЦ) КАК Приход,
	|	СУММА(ВЫБОР
	|			КОГДА ДенежныеСредства.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход)
	|				ТОГДА ДенежныеСредства.Сумма
	|			ИНАЧЕ 0
	|		КОНЕЦ) КАК Расход,
	|	МАКСИМУМ(СтатьиДДС.КорреспондирующийСчет) КАК КорреспондирующийСчет
	|ИЗ
	|	РегистрНакопления.ДенежныеСредства КАК ДенежныеСредства
	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.СтатьиДвиженияДенежныхСредств КАК СтатьиДДС
	|		ПО (СтатьиДДС.Ссылка = ДенежныеСредства.Статья)
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.ПоступлениеВКассу КАК ПКО
	|		ПО ДенежныеСредства.Регистратор = ПКО.Ссылка
	|ГДЕ
	|	ДенежныеСредства.Период МЕЖДУ &ДатаНачала И &ДатаОкончания
	|	И ПКО.Организация = &Организация
	|	И ДенежныеСредства.ДоговорКонтрагента = &ДоговорКонтрагента
	|	И ДенежныеСредства.ТипДенежныхСредств = ЗНАЧЕНИЕ(Перечисление.ТипыДенежныхСредств.Наличные)
	|
	|СГРУППИРОВАТЬ ПО
	|	ДенежныеСредства.Регистратор,
	|	ДенежныеСредства.Период
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ДенежныеСредства.Регистратор,
	|	ДенежныеСредства.Период,
	|	СУММА(ВЫБОР
	|			КОГДА ДенежныеСредства.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)
	|				ТОГДА ДенежныеСредства.Сумма
	|			ИНАЧЕ 0
	|		КОНЕЦ),
	|	СУММА(ВЫБОР
	|			КОГДА ДенежныеСредства.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход)
	|				ТОГДА ДенежныеСредства.Сумма
	|			ИНАЧЕ 0
	|		КОНЕЦ),
	|	МАКСИМУМ(СтатьиДДС.КорреспондирующийСчет)
	|ИЗ
	|	РегистрНакопления.ДенежныеСредства КАК ДенежныеСредства
	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.СтатьиДвиженияДенежныхСредств КАК СтатьиДДС
	|		ПО (СтатьиДДС.Ссылка = ДенежныеСредства.Статья)
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.РасходИзКассы КАК РКО
	|		ПО ДенежныеСредства.Регистратор = РКО.Ссылка
	|ГДЕ
	|	ДенежныеСредства.Период МЕЖДУ &ДатаНачала И &ДатаОкончания
	|	И РКО.Организация = &Организация
	|	И ДенежныеСредства.ДоговорКонтрагента = &ДоговорКонтрагента
	|	И ДенежныеСредства.ТипДенежныхСредств = ЗНАЧЕНИЕ(Перечисление.ТипыДенежныхСредств.Наличные)
	|
	|СГРУППИРОВАТЬ ПО
	|	ДенежныеСредства.Регистратор,
	|	ДенежныеСредства.Период";
	
	Если ЗначениеЗаполнено(Объект.Касса) Тогда
		
		Запрос.УстановитьПараметр("Касса", Объект.Касса);
		
		ТекстЗапроса = 
		"ВЫБРАТЬ
		|	КассовыеОрдера.Ссылка КАК Ссылка
		|ПОМЕСТИТЬ ПеремещенияДС
		|ИЗ
		|	Документ.ПеремещениеДС КАК КассовыеОрдера
		|ГДЕ
		|	КассовыеОрдера.Дата МЕЖДУ &ДатаНачала И &ДатаОкончания
		|	И КассовыеОрдера.Организация = &Организация
		|	И КассовыеОрдера.КассаПолучатель = &Касса
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ
		|	КассовыеОрдера.Ссылка
		|ИЗ
		|	Документ.ПеремещениеДС КАК КассовыеОрдера
		|ГДЕ
		|	КассовыеОрдера.Дата МЕЖДУ &ДатаНачала И &ДатаОкончания
		|	И КассовыеОрдера.Организация = &Организация
		|	И КассовыеОрдера.Касса = &Касса
		|
		|ИНДЕКСИРОВАТЬ ПО
		|	Ссылка
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ДенежныеСредства.Регистратор КАК КассовыйОрдер,
		|	ДенежныеСредства.Период КАК Период,
		|	СУММА(ВЫБОР
		|			КОГДА ДенежныеСредства.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)
		|				ТОГДА ДенежныеСредства.Сумма
		|			ИНАЧЕ 0
		|		КОНЕЦ) КАК Приход,
		|	СУММА(ВЫБОР
		|			КОГДА ДенежныеСредства.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход)
		|				ТОГДА ДенежныеСредства.Сумма
		|			ИНАЧЕ 0
		|		КОНЕЦ) КАК Расход,
		|	МАКСИМУМ(СтатьиДДС.КорреспондирующийСчет) КАК КорреспондирующийСчет
		|ИЗ
		|	РегистрНакопления.ДенежныеСредства КАК ДенежныеСредства
		|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.СтатьиДвиженияДенежныхСредств КАК СтатьиДДС
		|		ПО (СтатьиДДС.Ссылка = ДенежныеСредства.Статья)
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.ПоступлениеВКассу КАК ПКО
		|		ПО ДенежныеСредства.Регистратор = ПКО.Ссылка
		|ГДЕ
		|	ДенежныеСредства.Период МЕЖДУ &ДатаНачала И &ДатаОкончания
		|	И ПКО.Организация = &Организация
		|	И ДенежныеСредства.ДоговорКонтрагента = &ДоговорКонтрагента
		|	И ДенежныеСредства.БанковскийСчетКасса = &Касса
		|	И ДенежныеСредства.ТипДенежныхСредств = ЗНАЧЕНИЕ(Перечисление.ТипыДенежныхСредств.Наличные)
		|
		|СГРУППИРОВАТЬ ПО
		|	ДенежныеСредства.Регистратор,
		|	ДенежныеСредства.Период
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ
		|	ДенежныеСредства.Регистратор,
		|	ДенежныеСредства.Период,
		|	СУММА(ВЫБОР
		|			КОГДА ДенежныеСредства.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)
		|				ТОГДА ДенежныеСредства.Сумма
		|			ИНАЧЕ 0
		|		КОНЕЦ),
		|	СУММА(ВЫБОР
		|			КОГДА ДенежныеСредства.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход)
		|				ТОГДА ДенежныеСредства.Сумма
		|			ИНАЧЕ 0
		|		КОНЕЦ),
		|	МАКСИМУМ(СтатьиДДС.КорреспондирующийСчет)
		|ИЗ
		|	РегистрНакопления.ДенежныеСредства КАК ДенежныеСредства
		|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.СтатьиДвиженияДенежныхСредств КАК СтатьиДДС
		|		ПО (СтатьиДДС.Ссылка = ДенежныеСредства.Статья)
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.РасходИзКассы КАК РКО
		|		ПО ДенежныеСредства.Регистратор = РКО.Ссылка
		|ГДЕ
		|	ДенежныеСредства.Период МЕЖДУ &ДатаНачала И &ДатаОкончания
		|	И РКО.Организация = &Организация
		|	И ДенежныеСредства.ДоговорКонтрагента = &ДоговорКонтрагента
		|	И ДенежныеСредства.БанковскийСчетКасса = &Касса
		|	И ДенежныеСредства.ТипДенежныхСредств = ЗНАЧЕНИЕ(Перечисление.ТипыДенежныхСредств.Наличные)
		|
		|СГРУППИРОВАТЬ ПО
		|	ДенежныеСредства.Регистратор,
		|	ДенежныеСредства.Период
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ
		|	ДенежныеСредства.Регистратор,
		|	ДенежныеСредства.Период,
		|	СУММА(ВЫБОР
		|			КОГДА ДенежныеСредства.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)
		|				ТОГДА ДенежныеСредства.Сумма
		|			ИНАЧЕ 0
		|		КОНЕЦ),
		|	СУММА(ВЫБОР
		|			КОГДА ДенежныеСредства.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход)
		|				ТОГДА ДенежныеСредства.Сумма
		|			ИНАЧЕ 0
		|		КОНЕЦ),
		|	МАКСИМУМ(СтатьиДДС.КорреспондирующийСчет)
		|ИЗ
		|	РегистрНакопления.ДенежныеСредства КАК ДенежныеСредства
		|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.СтатьиДвиженияДенежныхСредств КАК СтатьиДДС
		|		ПО (СтатьиДДС.Ссылка = ДенежныеСредства.Статья)
		|ГДЕ
		|	ДенежныеСредства.Регистратор В
		|			(ВЫБРАТЬ
		|				ПеремещенияДС.Ссылка
		|			ИЗ
		|				ПеремещенияДС)
		|	И ДенежныеСредства.БанковскийСчетКасса = &Касса
		|	И ДенежныеСредства.ТипДенежныхСредств = ЗНАЧЕНИЕ(Перечисление.ТипыДенежныхСредств.Наличные)
		|
		|СГРУППИРОВАТЬ ПО
		|	ДенежныеСредства.Регистратор,
		|	ДенежныеСредства.Период
		|
		|УПОРЯДОЧИТЬ ПО
		|	ДенежныеСредства.Период";
		
	КонецЕсли;
	
	Запрос.Текст = ТекстЗапроса;
	
	РезультатЗапроса = Запрос.Выполнить();
	Если РезультатЗапроса.Пустой() Тогда
		ОбщегоНазначения.СообщитьПользователю(
			СтрШаблон(НСтр("ru = 'На дату %1 нет документов для заполнения листа кассовой книги'"), Формат(Объект.Дата,"ДЛФ=D"))
			,, "Дата");
	Иначе
		
		Объект.КассовыеОрдера.Загрузить(РезультатЗапроса.Выгрузить());
	КонецЕсли;
КонецПроцедуры

&НаСервере
Процедура ДатаПриИзмененииСервер()
	
	Объект.КассовыеОрдера.Очистить();
КонецПроцедуры

&НаСервере
Процедура ОрганизацияПриИзмененииСервер()
	
	Объект.КассовыеОрдера.Очистить();	
	ОбновитьПредупреждениеУчетПоКомпании();
	ЗаполнитьРеквизитыПечати();
	
КонецПроцедуры

&НаСервере
Процедура КассаПриИзмененииНаСервере()
	
	Объект.КассовыеОрдера.Очистить();
	СтруктураДанных = ПолучитьДанныеКассыПриИзменении(Объект.Касса);	
	Объект.ПодписьКассира = СтруктураДанных.ПодписьКассира;

КонецПроцедуры

&НаСервере
Процедура ОбновитьПредупреждениеУчетПоКомпании()
	ОтображатьПредупреждение = ложь;
	Если ЗначениеЗаполнено(Компания) Тогда		
		ОтображатьПредупреждение = Истина;
	КонецЕсли;
	Элементы.КартинкаПодсказкаДляЗаполнения.Видимость = ОтображатьПредупреждение ;
КонецПроцедуры

&НаКлиенте
Процедура ОткрытьФормуРеквизитыПечати(ПараметрыФормы = Неопределено)
	
	ПараметрыОткрытия = Новый Структура;
	ПараметрыОткрытия.Вставить("КонтекстПечати", Объект);
	
	Если ПараметрыФормы <> Неопределено Тогда
		
		Если ПараметрыФормы.Свойство("ТекущийЭлемент") Тогда
			ПараметрыОткрытия.Вставить("ТекущийЭлемент", ПараметрыФормы.ТекущийЭлемент);
		КонецЕсли;
		
		Если ПараметрыФормы.Свойство("РазвернутьГруппы") Тогда
			ПараметрыОткрытия.Вставить("РазвернутьГруппы", ПараметрыФормы.РазвернутьГруппы);
		КонецЕсли;
		
	КонецЕсли;
	
	ПараметрыОткрытия.Вставить("КонтекстПечати", Объект);
	
	ОписаниеОповещения = Новый ОписаниеОповещения("ОбработатьИзмененияРеквизитовПечати", ЭтотОбъект);
	ОткрытьФорму("Обработка.РеквизитыПечати.Форма.РеквизитыПечатиКассоваяКнига", ПараметрыОткрытия, ЭтотОбъект, , , , ОписаниеОповещения);	
	
КонецПроцедуры

&НаСервере
Процедура ЗаполнитьРеквизитыПечати()
	
	Объект.ПодписьГлавногоБухгалтера = УправлениеНебольшойФирмойПовтИсп.ПолучитьЗначениеНастройки("ПодписьГлавногоБухгалтера", Объект.Организация);
	Объект.ПодписьРуководителя = УправлениеНебольшойФирмойПовтИсп.ПолучитьЗначениеНастройки("ПодписьРуководителя", Объект.Организация);
	СтруктураДанных = ПолучитьДанныеКассыПриИзменении(Объект.Касса);	
	Объект.ПодписьКассира = СтруктураДанных.ПодписьКассира;
	//Объект.УсловияСчетаЗаказа = УправлениеНебольшойФирмойПовтИсп.ПолучитьЗначениеНастройки("УсловияСчетаЗаказа", Объект.Организация);
	//Объект.УсловияГарантийногоТалона = УправлениеНебольшойФирмойПовтИсп.ПолучитьЗначениеНастройки("УсловияГарантии", Объект.Организация);
	//Объект.Автомобиль = УправлениеНебольшойФирмойПовтИсп.ПолучитьЗначениеНастройки("ОсновнойАвтомобиль", Объект.Организация);
	//Объект.Водитель = УправлениеНебольшойФирмойПовтИсп.ПолучитьЗначениеНастройки("ОсновнойВодитель", Объект.Организация);
	//Объект.Перевозчик = УправлениеНебольшойФирмойПовтИсп.ПолучитьЗначениеНастройки("ОсновнойПеревозчик", Объект.Организация);
	//Объект.ОрганизацияОплачиваетПеревозку = УправлениеНебольшойФирмойПовтИсп.ПолучитьЗначениеНастройки("ОрганизацияОплачиваетПеревозку", Объект.Организация);
	//Объект.ПодписьКладовщика = УправлениеНебольшойФирмойПовтИсп.ПолучитьЗначениеНастройки("ПодписьМОЛ", Объект.Организация);
	
КонецПроцедуры   

&НаСервереБезКонтекста
Функция ПолучитьДанныеКассыПриИзменении(Касса)
	
	СтруктураДанных = Новый Структура;
	
	СтруктураДанных.Вставить("ВалютаПоУмолчанию", Касса.ВалютаПоУмолчанию);
	СтруктураДанных.Вставить("ПодписьКассира", Касса.ПодписьКассира);
	
	Возврат СтруктураДанных;
	
КонецФункции

#КонецОбласти
