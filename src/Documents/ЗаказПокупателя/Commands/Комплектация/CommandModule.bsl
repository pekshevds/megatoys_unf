
#Область ПрограммныйИнтерфейс

&НаКлиенте
Процедура СоздатьКомплектацияЗаказовПослеУточнения(Результат, ДополнительныеПараметры) Экспорт
	
	Если Результат = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	Основание = Новый Структура();
	Основание.Вставить("АдресТовары", Результат.АдресТовары);
	Основание.Вставить("Основание", Результат.Основание);
	
	ПараметрыОткрытия = Новый Структура("Основание", Основание);
	Если Результат.КоличествоИзделий = 1 Тогда
		ОткрытьФорму("Документ.КомплектацияЗапасов.Форма.ФормаДокумента",
		ПараметрыОткрытия,
		,
		Новый УникальныйИдентификатор);
	Иначе
		МассивКомплектаций = СоздатьДокументыКомплектации(Основание); 
		
		Текст = НСтр("ru='Создание:'");
		Для каждого СтрокаКомплектация Из МассивКомплектаций Цикл
			
			ПоказатьОповещениеПользователя(Текст, ПолучитьНавигационнуюСсылку(СтрокаКомплектация), СтрокаКомплектация, БиблиотекаКартинок.Информация32);
			
		КонецЦикла;
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытий
&НаКлиенте
Процедура ОбработкаКоманды(ПараметрКоманды, ПараметрыВыполненияКоманды)
	
	ПараметрыФормы = Новый Структура;
	ПараметрыФормы.Вставить("Основание", ПараметрКоманды);
	ПараметрыФормы.Вставить("ИмяМенеджераДокумента","КомплектацияЗапасов");
	
	КоличествоКомплектов = ПолучитьКоличествоКомплектов(ПараметрКоманды); 
	
	ОписаниеОповещенияОЗакрытии = Новый ОписаниеОповещения(
	"СоздатьКомплектацияЗаказовПослеУточнения",
	ЭтотОбъект,
	ПараметрыВыполненияКоманды);
	
	Если КоличествоКомплектов = 0 Тогда
		ПоказатьПредупреждение(,НСтр("ru = 'В Заказе покупателю нет комплектов для сборки'"),10);
	ИначеЕсли КоличествоКомплектов = 1 Тогда
		ОткрытьФорму("Документ.КомплектацияЗапасов.ФормаОбъекта",
		ПараметрыФормы,
		ПараметрыВыполненияКоманды.Источник,
		ПараметрыВыполненияКоманды.Уникальность,
		ПараметрыВыполненияКоманды.Окно,
		ПараметрыВыполненияКоманды.НавигационнаяСсылка,
		);
	Иначе
		ОткрытьФорму("ОбщаяФорма.СозданиеНаОснованииУточнениеКоличества",
		ПараметрыФормы,
		ПараметрыВыполненияКоманды.Источник,
		ПараметрыВыполненияКоманды.Уникальность,
		ПараметрыВыполненияКоманды.Окно,
		ПараметрыВыполненияКоманды.НавигационнаяСсылка,
		ОписаниеОповещенияОЗакрытии);
	КонецЕсли;
КонецПроцедуры  

#КонецОбласти 

#Область СлужебныеПроцедурыИФункции
 &НаСервере
Функция ПолучитьКоличествоКомплектов(ПараметрКоманды)
	Запрос = Новый Запрос("ВЫБРАТЬ
	                      |	ЗаказПокупателяЗапасы.Номенклатура КАК Номенклатура
	                      |ИЗ
	                      |	Документ.ЗаказПокупателя.Запасы КАК ЗаказПокупателяЗапасы
	                      |		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.КомплектацииПоУмолчанию КАК КомплектацииПоУмолчанию
	                      |		ПО ЗаказПокупателяЗапасы.Номенклатура = КомплектацииПоУмолчанию.Номенклатура
	                      |			И ЗаказПокупателяЗапасы.Характеристика = КомплектацииПоУмолчанию.Характеристика
	                      |ГДЕ
	                      |	ЗаказПокупателяЗапасы.Ссылка = &Ссылка
	                      |
	                      |СГРУППИРОВАТЬ ПО
	                      |	ЗаказПокупателяЗапасы.Номенклатура");  
	Запрос.УстановитьПараметр("Ссылка",ПараметрКоманды);
	Результат = Запрос.Выполнить().Выгрузить();
	Возврат Результат.Количество();
КонецФункции  

&НаСервере
Функция СоздатьДокументыКомплектации(Основание)
	МассивКомплектаций = Новый Массив();
	
	ЗапасыККомплектации = ПолучитьИзВременногоХранилища(Основание.АдресТовары);
	
	Для Каждого Запас Из ЗапасыККомплектации Цикл 
		ДанныеДляЗаполнения = Новый Структура();
		ДанныеДляЗаполнения.Вставить("Основание",Основание.Основание); 
		МассивЗапасов = Новый Массив;
		МассивЗапасов.Добавить(Запас);
		АдресТовары = ПоместитьВоВременноеХранилище(МассивЗапасов);
		ДанныеДляЗаполнения.Вставить("АдресТовары", АдресТовары);
		НоваяКомплектация = Документы.КомплектацияЗапасов.СоздатьДокумент();
		НоваяКомплектация.Дата = ТекущаяДатаСеанса();
		НоваяКомплектация.Заполнить(ДанныеДляЗаполнения);
		НоваяКомплектация.ЗаполнитьТабличнуюЧастьПоКомплектации();
		НоваяКомплектация.Записать();
		МассивКомплектаций.Добавить(НоваяКомплектация.Ссылка);
	КонецЦикла; 
	
	Возврат МассивКомплектаций;

КонецФункции
#КонецОбласти

