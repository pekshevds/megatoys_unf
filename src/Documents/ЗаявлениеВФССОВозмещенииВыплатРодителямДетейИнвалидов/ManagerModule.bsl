#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область ПрограммныйИнтерфейс

#Область ДляВызоваИзДругихПодсистем

// СтандартныеПодсистемы.ВерсионированиеОбъектов

// Определяет настройки объекта для подсистемы ВерсионированиеОбъектов.
//
// Параметры:
//  Настройки - Структура - настройки подсистемы.
Процедура ПриОпределенииНастроекВерсионированияОбъектов(Настройки) Экспорт
	
КонецПроцедуры

// Конец СтандартныеПодсистемы.ВерсионированиеОбъектов

// СтандартныеПодсистемы.Печать

// Заполняет список команд печати.
//
// Параметры:
//   КомандыПечати - ТаблицаЗначений - состав полей см. в функции УправлениеПечатью.СоздатьКоллекциюКомандПечати.
//
Процедура ДобавитьКомандыПечати(КомандыПечати) Экспорт
	
	// Печать заявления о выплате пособия.
	КомандаПечати = КомандыПечати.Добавить();
	КомандаПечати.Обработчик = "УправлениеПечатьюБЗККлиент.ВыполнитьКомандуПечати";
	КомандаПечати.Идентификатор = ИмяАктуальногоМакета();
	КомандаПечати.Представление = НСтр("ru = 'Заявление о возмещении расходов'");
	КомандаПечати.ПроверкаПроведенияПередПечатью = Истина;
	
КонецПроцедуры

// См. УправлениеПечатьюПереопределяемый.ПриПечати.
Процедура Печать(МассивСсылок, ПараметрыПечати, КоллекцияПечатныхФорм, ОбъектыПечати, ПараметрыВывода) Экспорт
	
	ПараметрыВывода.ДоступнаПечатьПоКомплектно = Истина;
	ИмяАктуальногоМакета = ИмяАктуальногоМакета();
	
	Если УправлениеПечатью.НужноПечататьМакет(КоллекцияПечатныхФорм, ИмяАктуальногоМакета) Тогда
		ТабличныйДокумент = ТабличныйДокументДополнительныеДниОтпуска(МассивСсылок, ОбъектыПечати);
		УправлениеПечатью.ВывестиТабличныйДокументВКоллекцию(
			КоллекцияПечатныхФорм,
			ИмяАктуальногоМакета,
			НСтр("ru = 'Заявление о возмещении расходов'"),
			ТабличныйДокумент);
	КонецЕсли;
	
КонецПроцедуры

// Конец СтандартныеПодсистемы.Печать

// СтандартныеПодсистемы.УправлениеДоступом

// См. УправлениеДоступомПереопределяемый.ПриЗаполненииСписковСОграничениемДоступа.
Процедура ПриЗаполненииОграниченияДоступа(Ограничение) Экспорт
	Ограничение.Текст =
	"РазрешитьЧтениеИзменение
	|ГДЕ
	|	ДляВсехСтрок( ЗначениеРазрешено(ФизическиеЛица.ФизическоеЛицо, NULL КАК ИСТИНА)
	|	) И ЗначениеРазрешено(Организация)";
КонецПроцедуры

// Конец СтандартныеПодсистемы.УправлениеДоступом

#КонецОбласти

#КонецОбласти

#Область СлужебныйПрограммныйИнтерфейс

#Область ЗащитаПерсональныхДанных

// См. ЗащитаПерсональныхДанныхПереопределяемый.ЗаполнитьСведенияОПерсональныхДанных.
Процедура ЗаполнитьСведенияОПерсональныхДанных(ТаблицаСведений) Экспорт
	
	Объект = Метаданные.Документы.ЗаявлениеВФССОВозмещенииВыплатРодителямДетейИнвалидов.ПолноеИмя();
	
	НовыеСведения = ТаблицаСведений.Добавить();
	НовыеСведения.Объект          = Объект;
	НовыеСведения.ПоляРегистрации = "Оплаты.Сотрудник";
	НовыеСведения.ПоляДоступа     = "Оплаты.СотрудникФамилия,Оплаты.СотрудникИмя,Оплаты.СотрудникОтчество,Оплаты.СотрудникСНИЛС";
	НовыеСведения.ОбластьДанных   = "ЛичныеДанные";
	
	НовыеСведения = ТаблицаСведений.Добавить();
	НовыеСведения.Объект          = Объект;
	НовыеСведения.ПоляРегистрации = "Оплаты.Ребенок";
	НовыеСведения.ПоляДоступа     = "Оплаты.РебенокФамилия,Оплаты.РебенокИмя,Оплаты.РебенокОтчество,Оплаты.РебенокДатаРождения,Оплаты.РебенокСНИЛС,Оплаты.Статус";
	НовыеСведения.ОбластьДанных   = "ЛичныеДанные";
	
	НовыеСведения = ТаблицаСведений.Добавить();
	НовыеСведения.Объект          = Объект;
	НовыеСведения.ПоляРегистрации = "Оплаты.Сотрудник";
	НовыеСведения.ПоляДоступа     = "Оплаты.СреднедневнойЗаработок,Оплаты.СуммаПособия,Оплаты.СуммаВзносов,Оплаты.КоличествоДней";
	НовыеСведения.ОбластьДанных   = "Доходы";
	
КонецПроцедуры

#КонецОбласти

// Возвращает описание состава документа
//
// Возвращаемое значение:
//  Структура - см. ЗарплатаКадрыСоставДокументов.НовоеОписаниеСоставаОбъекта.
Функция ОписаниеСоставаОбъекта() Экспорт
	
	МетаданныеДокумента = Метаданные.Документы.ЗаявлениеВФССОВозмещенииВыплатРодителямДетейИнвалидов;
	Возврат ЗарплатаКадрыСоставДокументов.ОписаниеСоставаОбъектаПоМетаданнымФизическиеЛицаВТабличныхЧастях(МетаданныеДокумента);
	
КонецФункции

#Область ФиксацияВторичныхДанныхВДокументах

Функция ПараметрыФиксацииВторичныхДанных() Экспорт
	Возврат ФиксацияВторичныхДанныхВДокументах.ПараметрыФиксации(ФиксируемыеРеквизиты(), ФиксируемыеТаблицы());
КонецФункции

#КонецОбласти

#Область ОбновлениеИнформационнойБазы

// Заполнение вторичных данных необходимых для печати.
//
// Параметры:
//   ПараметрыОбновления - Структура - Параметры отложенного обновления.
//
Процедура АдаптироватьКФорме2022(ПараметрыОбновления = Неопределено) Экспорт
	ОбработкаЗавершена   = Истина;
	ОбработчикОтложенный = (ПараметрыОбновления <> Неопределено);
	МетаданныеДокумента  = Метаданные.Документы.ЗаявлениеВФССОВозмещенииВыплатРодителямДетейИнвалидов;
	ПолеБлокировки       = "Ссылка";
	ТаблицаБлокировки    = МетаданныеДокумента.ПолноеИмя();
	
	НастройкиЗапроса = ЗапросыБЗК.НастройкиЗапросаКТаблице();
	НастройкиЗапроса.Порядок    = "Дата УБЫВ, Проведен УБЫВ, Ссылка УБЫВ";
	НастройкиЗапроса.Количество = ?(ОбработчикОтложенный, 1000, 0);
	ЗапросыБЗК.ДобавитьОтбор(НастройкиЗапроса.Отбор, "СтраховательНаименование", "=", "");
	ЗапросыБЗК.ДобавитьОтбор(НастройкиЗапроса.Отбор, "Организация", "<>", Справочники.Организации.ПустаяСсылка());
	Запрос = ЗапросыБЗК.ЗапросКТаблице(ТаблицаБлокировки, ПолеБлокировки, НастройкиЗапроса);
	
	МассивСсылок = Запрос.Выполнить().Выгрузить().ВыгрузитьКолонку(ПолеБлокировки);
	
	Если ОбработчикОтложенный И МассивСсылок.Количество() = НастройкиЗапроса.Количество Тогда
		ОбработкаЗавершена = Ложь;
	КонецЕсли;
	
	Запрос.МенеджерВременныхТаблиц = Новый МенеджерВременныхТаблиц;
	Запрос.УстановитьПараметр("МассивСсылок", МассивСсылок);
	
	СоздатьВТКадровыхДанных(Запрос);
	
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	Шапка.Ссылка КАК Ссылка,
	|	Шапка.Дата КАК Дата,
	|	ВЫБОР
	|		КОГДА (ВЫРАЗИТЬ(Организации.НаименованиеПолное КАК СТРОКА(1000))) = """"
	|			ТОГДА Организации.НаименованиеСокращенное
	|		ИНАЧЕ ВЫРАЗИТЬ(Организации.НаименованиеПолное КАК СТРОКА(1000))
	|	КОНЕЦ КАК СтраховательНаименование,
	|	ЕСТЬNULL(КадровыеДанныеРуководителей.ФИОПолные, """") КАК РуководительФИО,
	|	ЕСТЬNULL(ТЧОплаты.НомерСтроки, 0) КАК НомерСтроки,
	|	ЕСТЬNULL(ТЧОплаты.Сотрудник, НЕОПРЕДЕЛЕНО) КАК Сотрудник,
	|	ЕСТЬNULL(ВТКадровыеДанныеСотрудников.Фамилия, """") КАК СотрудникФамилия,
	|	ЕСТЬNULL(ВТКадровыеДанныеСотрудников.Имя, """") КАК СотрудникИмя,
	|	ЕСТЬNULL(ВТКадровыеДанныеСотрудников.Отчество, """") КАК СотрудникОтчество,
	|	ЕСТЬNULL(ТЧОплаты.Сотрудник.ФизическоеЛицо.СтраховойНомерПФР, """") КАК СотрудникСНИЛС
	|ИЗ
	|	Документ.ЗаявлениеВФССОВозмещенииВыплатРодителямДетейИнвалидов КАК Шапка
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТКадровыеДанныеФизическихЛиц КАК КадровыеДанныеРуководителей
	|		ПО Шапка.Руководитель = КадровыеДанныеРуководителей.ФизическоеЛицо
	|			И Шапка.Дата = КадровыеДанныеРуководителей.Период
	|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.ЗаявлениеВФССОВозмещенииВыплатРодителямДетейИнвалидов.Оплаты КАК ТЧОплаты
	|			ЛЕВОЕ СОЕДИНЕНИЕ ВТКадровыеДанныеСотрудников КАК ВТКадровыеДанныеСотрудников
	|			ПО ТЧОплаты.Сотрудник = ВТКадровыеДанныеСотрудников.Сотрудник
	|				И ТЧОплаты.Ссылка.Дата = ВТКадровыеДанныеСотрудников.Период
	|		ПО Шапка.Ссылка = ТЧОплаты.Ссылка
	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.Организации КАК Организации
	|		ПО Шапка.Организация = Организации.Ссылка
	|ГДЕ
	|	Шапка.Ссылка В(&МассивСсылок)
	|
	|УПОРЯДОЧИТЬ ПО
	|	Ссылка УБЫВ,
	|	НомерСтроки";
	
	Выборка = Запрос.Выполнить().Выбрать();
	
	ТаблицаСтрок = Новый ТаблицаЗначений;
	ИменаКолонок = Новый Массив;
	Для Каждого КолонкаРезультатаЗапроса Из Выборка.Владелец().Колонки Цикл
		ТаблицаСтрок.Колонки.Добавить(КолонкаРезультатаЗапроса.Имя, КолонкаРезультатаЗапроса.ТипЗначения);
		ИменаКолонок.Добавить(КолонкаРезультатаЗапроса.Имя);
	КонецЦикла;
	ИменаКолонок = СтрСоединить(ИменаКолонок, ",");
	
	Пока Выборка.СледующийПоЗначениюПоля("Ссылка") Цикл
		Если ОбработчикОтложенный Тогда
			Если Не ОбновлениеИнформационнойБазыЗарплатаКадрыБазовый.ПодготовитьОбновлениеДанных(
					ПараметрыОбновления,
					ТаблицаБлокировки,
					ПолеБлокировки,
					Выборка.Ссылка) Тогда
				ОбработкаЗавершена = Ложь; // Объект заблокирован, требуется повторная обработка.
				Продолжить;
			КонецЕсли;
		КонецЕсли;
		
		ЕстьИзменения = Ложь;
		Документ = Выборка.Ссылка.ПолучитьОбъект();
		
		Если РеквизитШапкиЗаполненИНеЗафкисирован(Документ, "НомерЛицевогоСчета")
			Или РеквизитШапкиЗаполненИНеЗафкисирован(Документ, "КБК") Тогда
			ЕстьИзменения = Истина;
			ФиксацияВторичныхДанныхВДокументах.ЗафиксироватьРеквизитШапки(Документ, "НомерЛицевогоСчета");
			ФиксацияВторичныхДанныхВДокументах.ЗафиксироватьРеквизитШапки(Документ, "КБК");
		КонецЕсли;
		
		Пока Выборка.Следующий() Цикл
			
			Если ЗначениеЗаполнено(Выборка.СтраховательНаименование)
				И РеквизитШапкиНеЗаполненИНеЗафкисирован(Документ, "СтраховательНаименование") Тогда
				ЕстьИзменения = Истина;
				Документ.СтраховательНаименование = Выборка.СтраховательНаименование;
				ФиксацияВторичныхДанныхВДокументах.ЗафиксироватьРеквизитШапки(Документ, "СтраховательНаименование");
			КонецЕсли;
			
			Если ЗначениеЗаполнено(Выборка.РуководительФИО)
				И РеквизитШапкиНеЗаполненИНеЗафкисирован(Документ, "РуководительФИО") Тогда
				ЕстьИзменения = Истина;
				Документ.РуководительФИО = Выборка.РуководительФИО;
				ФиксацияВторичныхДанныхВДокументах.ЗафиксироватьРеквизитШапки(Документ, "РуководительФИО");
			КонецЕсли;
			
			Если ЗначениеЗаполнено(Выборка.Сотрудник) Тогда
				Фильтр = Новый Структура("НомерСтроки, Сотрудник", Выборка.НомерСтроки, Выборка.Сотрудник);
				Найденные = Документ.Оплаты.НайтиСтроки(Фильтр);
				Для Каждого Строка Из Найденные Цикл
					
					Если ЗначениеЗаполнено(Выборка.СотрудникФамилия)
						И ЗначениеЗаполнено(Выборка.СотрудникИмя)
						И Не ЗначениеЗаполнено(Строка.СотрудникФамилия)
						И Не ЗначениеЗаполнено(Строка.СотрудникИмя) Тогда
						ЕстьИзменения = Истина;
						Строка.СотрудникФамилия  = Выборка.СотрудникФамилия;
						Строка.СотрудникИмя      = Выборка.СотрудникИмя;
						Строка.СотрудникОтчество = Выборка.СотрудникОтчество;
						ФиксацияВторичныхДанныхВДокументах.ЗафиксироватьРеквизитТаблицы(Документ, "Оплаты", Строка, "СотрудникФамилия");
						ФиксацияВторичныхДанныхВДокументах.ЗафиксироватьРеквизитТаблицы(Документ, "Оплаты", Строка, "СотрудникИмя");
						ФиксацияВторичныхДанныхВДокументах.ЗафиксироватьРеквизитТаблицы(Документ, "Оплаты", Строка, "СотрудникОтчество");
					КонецЕсли;
					
					Если ЗначениеЗаполнено(Выборка.СотрудникСНИЛС)
						И Не ЗначениеЗаполнено(Строка.СотрудникСНИЛС) Тогда
						ЕстьИзменения = Истина;
						Строка.СотрудникСНИЛС  = Выборка.СотрудникСНИЛС;
						ФиксацияВторичныхДанныхВДокументах.ЗафиксироватьРеквизитТаблицы(Документ, "Оплаты", Строка, "СотрудникСНИЛС");
					КонецЕсли;
					
				КонецЦикла;
			КонецЕсли;
		КонецЦикла;
		
		Для Каждого Строка Из Документ.Оплаты Цикл
			Если ЗначениеЗаполнено(Строка.Статус)
				И Не ЗначениеЗаполнено(Строка.Ребенок)
				И Не ФиксацияВторичныхДанныхВДокументах.РеквизитТаблицыЗафиксирован(Документ, "Оплаты", Строка, "Статус") Тогда
				ЕстьИзменения = Истина;
				ФиксацияВторичныхДанныхВДокументах.ЗафиксироватьРеквизитТаблицы(Документ, "Оплаты", Строка, "Статус");
			КонецЕсли;
		КонецЦикла;
		
		Если ЕстьИзменения Тогда
			ОбновлениеИнформационнойБазы.ЗаписатьОбъект(Документ);
		КонецЕсли;
		
		Если ОбработчикОтложенный Тогда
			Если ЕстьИзменения Тогда
				ОбновлениеИнформационнойБазыЗарплатаКадрыБазовый.ЗавершитьОбновлениеДанных(ПараметрыОбновления);
			Иначе
				ОтменитьТранзакцию();
			КонецЕсли;
		КонецЕсли;
	КонецЦикла;
	
	Если ОбработчикОтложенный Тогда
		ПараметрыОбновления.ОбработкаЗавершена = ОбработкаЗавершена;
	КонецЕсли;
КонецПроцедуры

#КонецОбласти

// Возвращает строку - краткое имя актуального макета печатной формы.
Функция ИмяАктуальногоМакета() Экспорт
	Если ТекущаяДатаСеанса() > ДатаФорм2022() Тогда
		Возврат "ПФ_MXL_ДополнительныеДниОтпуска_2022";
	Иначе
		Возврат "ЗаявлениеВФССДополнительныеДниОтпуска_2021";
	КонецЕсли;
КонецФункции

// Возвращает дату начала действия печатной формы 2022 г.
Функция ДатаФорм2022() Экспорт
	Возврат ЗарплатаКадрыПовтИсп.ДатаВступленияВСилуНА("ФормаВозмещенияВыплатРодителямДетейИнвалидов2022");
КонецФункции

// Возвращает Истина если поле "ДокументОснование" таблицы "Оплаты" документа можно показывать пользователю.
//
// Возвращаемое значение:
//   Булево
//
Функция ВидимостьОснования() Экспорт
	ОпределяемыйТип = Метаданные.ОпределяемыеТипы.ДокументыОснованияЗаявлениеВФССОВозмещенииВыплатРодителямДетейИнвалидов;
	Возврат Не ОпределяемыйТип.Тип.СодержитТип(Тип("Строка"));
КонецФункции

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

#Область ФиксацияВторичныхДанныхВДокументах

Функция ФиксируемыеРеквизиты()
	ФиксируемыеРеквизиты = Новый Соответствие;
	
	// Реквизиты организации.
	Шаблон = ФиксацияВторичныхДанныхВДокументах.ОписаниеФиксируемогоРеквизита();
	Шаблон.ИмяГруппы           = "Организация";
	Шаблон.ОснованиеЗаполнения = "Организация";
	
	ДобавитьФиксируемыйРеквизит(ФиксируемыеРеквизиты, Шаблон, "НаименованиеТерриториальногоОрганаФСС");
	ДобавитьФиксируемыйРеквизит(ФиксируемыеРеквизиты, Шаблон, "РегистрационныйНомерФСС");
	ДобавитьФиксируемыйРеквизит(ФиксируемыеРеквизиты, Шаблон, "ДополнительныйКодФСС");
	ДобавитьФиксируемыйРеквизит(ФиксируемыеРеквизиты, Шаблон, "КодПодчиненностиФСС");
	ДобавитьФиксируемыйРеквизит(ФиксируемыеРеквизиты, Шаблон, "СтраховательНаименование");
	ДобавитьФиксируемыйРеквизит(ФиксируемыеРеквизиты, Шаблон, "ИНН");
	ДобавитьФиксируемыйРеквизит(ФиксируемыеРеквизиты, Шаблон, "КПП");
	ДобавитьФиксируемыйРеквизит(ФиксируемыеРеквизиты, Шаблон, "АдресОрганизации");
	ДобавитьФиксируемыйРеквизит(ФиксируемыеРеквизиты, Шаблон, "АдресЭлектроннойПочтыОрганизации");
	ДобавитьФиксируемыйРеквизит(ФиксируемыеРеквизиты, Шаблон, "ТелефонСоставителя");
	ДобавитьФиксируемыйРеквизит(ФиксируемыеРеквизиты, Шаблон, "НомерЛицевогоСчета", Ложь);
	ДобавитьФиксируемыйРеквизит(ФиксируемыеРеквизиты, Шаблон, "КБК", Ложь);
	
	// Роль подписанта Руководитель.
	Шаблон = ФиксацияВторичныхДанныхВДокументах.ОписаниеФиксируемогоРеквизита();
	Шаблон.ОснованиеЗаполнения      = "Организация";
	Шаблон.ИмяГруппы                = "Руководитель";
	Шаблон.ФиксацияГруппы           = Истина;
	Шаблон.ОтображатьПредупреждение = Ложь;
	
	ДобавитьФиксируемыйРеквизит(ФиксируемыеРеквизиты, Шаблон, "Руководитель");
	ДобавитьФиксируемыйРеквизит(ФиксируемыеРеквизиты, Шаблон, "ДолжностьРуководителя");
	ДобавитьФиксируемыйРеквизит(ФиксируемыеРеквизиты, Шаблон, "ОснованиеПодписиРуководителя");
	
	// Роль подписанта Руководитель.
	Шаблон = ФиксацияВторичныхДанныхВДокументах.ОписаниеФиксируемогоРеквизита();
	Шаблон.ОснованиеЗаполнения = "Руководитель";
	Шаблон.ИмяГруппы           = "СведенияОРуководителе";
	
	ДобавитьФиксируемыйРеквизит(ФиксируемыеРеквизиты, Шаблон, "РуководительФИО");
	
	// Реквизиты документа-основания.
	Шаблон = ФиксацияВторичныхДанныхВДокументах.ОписаниеФиксируемогоРеквизита();
	Шаблон.ОснованиеЗаполнения = "ДокументОснование";
	Шаблон.ИмяГруппы           = "ДокументОснование";
	Шаблон.РеквизитСтроки      = Истина;
	Шаблон.Путь                = "Оплаты";
	Шаблон.Используется        = ВидимостьОснования();
	
	ДобавитьФиксируемыйРеквизит(ФиксируемыеРеквизиты, Шаблон, "Сотрудник", Ложь);
	ДобавитьФиксируемыйРеквизит(ФиксируемыеРеквизиты, Шаблон, "СреднедневнойЗаработок");
	ДобавитьФиксируемыйРеквизит(ФиксируемыеРеквизиты, Шаблон, "КоличествоСтраниц");
	ДобавитьФиксируемыйРеквизит(ФиксируемыеРеквизиты, Шаблон, "СуммаПособия");
	ДобавитьФиксируемыйРеквизит(ФиксируемыеРеквизиты, Шаблон, "СуммаВзносов");
	
	// Сотрудник.
	Шаблон = ФиксацияВторичныхДанныхВДокументах.ОписаниеФиксируемогоРеквизита();
	Шаблон.ОснованиеЗаполнения = "Сотрудник";
	Шаблон.ИмяГруппы           = "СотрудникКадровыеДанные";
	Шаблон.РеквизитСтроки      = Истина;
	Шаблон.Путь                = "Оплаты";
	
	ДобавитьФиксируемыйРеквизит(ФиксируемыеРеквизиты, Шаблон, "СотрудникФамилия");
	ДобавитьФиксируемыйРеквизит(ФиксируемыеРеквизиты, Шаблон, "СотрудникИмя");
	ДобавитьФиксируемыйРеквизит(ФиксируемыеРеквизиты, Шаблон, "СотрудникОтчество");
	ДобавитьФиксируемыйРеквизит(ФиксируемыеРеквизиты, Шаблон, "СотрудникСНИЛС");
	
	// Ребенок.
	Шаблон = ФиксацияВторичныхДанныхВДокументах.ОписаниеФиксируемогоРеквизита();
	Шаблон.ОснованиеЗаполнения = "Ребенок";
	Шаблон.ИмяГруппы           = "РебенокКадровыеДанные";
	Шаблон.РеквизитСтроки      = Истина;
	Шаблон.Путь                = "Оплаты";
	Шаблон.Используется        = СЭДОФСС.ВидимостьПоляРодственник();
	
	ДобавитьФиксируемыйРеквизит(ФиксируемыеРеквизиты, Шаблон, "РебенокФамилия");
	ДобавитьФиксируемыйРеквизит(ФиксируемыеРеквизиты, Шаблон, "РебенокИмя");
	ДобавитьФиксируемыйРеквизит(ФиксируемыеРеквизиты, Шаблон, "РебенокОтчество");
	ДобавитьФиксируемыйРеквизит(ФиксируемыеРеквизиты, Шаблон, "РебенокДатаРождения");
	ДобавитьФиксируемыйРеквизит(ФиксируемыеРеквизиты, Шаблон, "РебенокСНИЛС");
	ДобавитьФиксируемыйРеквизит(ФиксируемыеРеквизиты, Шаблон, "Статус", Ложь);
	
	Возврат Новый ФиксированноеСоответствие(ФиксируемыеРеквизиты);
КонецФункции

Функция ФиксируемыеТаблицы()
	Возврат Новый Структура("Оплаты", СтрРазделить("ДокументОснование,Сотрудник,Месяц", ","));
КонецФункции

Процедура ДобавитьФиксируемыйРеквизит(ФиксируемыеРеквизиты, Группа, ИмяРеквизита, ОтображатьПредупреждение = Неопределено) Экспорт
	ФиксацияВторичныхДанныхВДокументах.ДобавитьФиксируемыйРеквизит(
		ФиксируемыеРеквизиты,
		Группа,
		ИмяРеквизита,
		ОтображатьПредупреждение);
КонецПроцедуры

#КонецОбласти

#Область ОбновлениеИнформационнойБазы

Процедура СоздатьВТКадровыхДанных(Запрос)
	Запрос.Текст =
	"ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	Оплаты.Сотрудник,
	|	Оплаты.Ссылка.Дата КАК Период
	|ПОМЕСТИТЬ ВТСотрудникиОбщийСписок
	|ИЗ
	|	Документ.ЗаявлениеВФССОВозмещенииВыплатРодителямДетейИнвалидов.Оплаты КАК Оплаты
	|ГДЕ
	|	Оплаты.Ссылка В(&МассивСсылок)
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ЗаявлениеВФССОВозмещенииВыплатРодителямДетейИнвалидов.Руководитель КАК ФизическоеЛицо,
	|	ЗаявлениеВФССОВозмещенииВыплатРодителямДетейИнвалидов.Дата КАК Период
	|ПОМЕСТИТЬ ВТФизическиеЛицаОбщийСписок
	|ИЗ
	|	Документ.ЗаявлениеВФССОВозмещенииВыплатРодителямДетейИнвалидов КАК ЗаявлениеВФССОВозмещенииВыплатРодителямДетейИнвалидов
	|ГДЕ
	|	ЗаявлениеВФССОВозмещенииВыплатРодителямДетейИнвалидов.Ссылка В(&МассивСсылок)
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ЗаявлениеВФССОВозмещенииВыплатРодителямДетейИнвалидов.ЗаявлениеСоставил,
	|	ЗаявлениеВФССОВозмещенииВыплатРодителямДетейИнвалидов.Дата
	|ИЗ
	|	Документ.ЗаявлениеВФССОВозмещенииВыплатРодителямДетейИнвалидов КАК ЗаявлениеВФССОВозмещенииВыплатРодителямДетейИнвалидов
	|ГДЕ
	|	ЗаявлениеВФССОВозмещенииВыплатРодителямДетейИнвалидов.Ссылка В(&МассивСсылок)
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ВТСотрудникиОбщийСписок.Сотрудник,
	|	ВТСотрудникиОбщийСписок.Период
	|ПОМЕСТИТЬ ВТСотрудники
	|ИЗ
	|	ВТСотрудникиОбщийСписок КАК ВТСотрудникиОбщийСписок
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ВТФизическиеЛицаОбщийСписок.ФизическоеЛицо,
	|	ВТФизическиеЛицаОбщийСписок.Период
	|ПОМЕСТИТЬ ВТФизическиеЛица
	|ИЗ
	|	ВТФизическиеЛицаОбщийСписок КАК ВТФизическиеЛицаОбщийСписок";
	
	Запрос.Выполнить();
	
	Описатель = КадровыйУчет.ОписательВременныхТаблицДляСоздатьВТКадровыеДанныеСотрудников(Запрос.МенеджерВременныхТаблиц, "ВТСотрудники");
	КадровыйУчет.СоздатьВТКадровыеДанныеСотрудников(Описатель, Истина, "ФИОПолные,Фамилия,Имя,Отчество");
	
	Описатель = КадровыйУчет.ОписательВременныхТаблицДляСоздатьВТКадровыеДанныеФизическихЛиц(Запрос.МенеджерВременныхТаблиц, "ВТФизическиеЛица");
	КадровыйУчет.СоздатьВТКадровыеДанныеФизическихЛиц(Описатель, Истина, "ФИОПолные,ФамилияИО");
	
КонецПроцедуры

Функция РеквизитШапкиЗаполненИНеЗафкисирован(ДокументОбъект, ИмяРеквизита)
	Возврат ЗначениеЗаполнено(ДокументОбъект[ИмяРеквизита])
		И Не ФиксацияВторичныхДанныхВДокументах.РеквизитШапкиЗафиксирован(ДокументОбъект, ИмяРеквизита);
КонецФункции

Функция РеквизитШапкиНеЗаполненИНеЗафкисирован(ДокументОбъект, ИмяРеквизита)
	Возврат Не ЗначениеЗаполнено(ДокументОбъект[ИмяРеквизита])
		И Не ФиксацияВторичныхДанныхВДокументах.РеквизитШапкиЗафиксирован(ДокументОбъект, ИмяРеквизита);
КонецФункции

#КонецОбласти

#Область Печать

Функция ТабличныйДокументДополнительныеДниОтпуска(МассивСсылок, ОбъектыПечати)
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("МассивСсылок", МассивСсылок);
	Запрос.УстановитьПараметр("ДатаФорм2017", ПрямыеВыплатыПособийСоциальногоСтрахования.ДатаВступленияВСилуФорм2017Года());
	Запрос.УстановитьПараметр("ДатаФорм2021", ПрямыеВыплатыПособийСоциальногоСтрахования.ДатаВступленияВСилуФорм2021Года());
	Запрос.УстановитьПараметр("ДатаФорм2022", ДатаФорм2022());
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	Шапка.Ссылка КАК Ссылка,
	|	Шапка.Номер КАК Номер,
	|	Шапка.Дата КАК Дата,
	|	ВЫБОР
	|		КОГДА Шапка.Дата < &ДатаФорм2017
	|			ТОГДА ""ЗаявлениеВФССДополнительныеДниОтпуска_2012""
	|		КОГДА Шапка.Дата < &ДатаФорм2021
	|			ТОГДА ""ЗаявлениеВФССДополнительныеДниОтпуска_2017""
	|		КОГДА Шапка.Дата < &ДатаФорм2022
	|			ТОГДА ""ЗаявлениеВФССДополнительныеДниОтпуска_2021""
	|		ИНАЧЕ ""ПФ_MXL_ДополнительныеДниОтпуска_2022""
	|	КОНЕЦ КАК ИмяМакета,
	|	Шапка.Проведен КАК Проведен,
	|	Шапка.Организация КАК Организация,
	|	Шапка.НаименованиеТерриториальногоОрганаФСС КАК НаименованиеТерриториальногоОрганаФСС,
	|	Шапка.РегистрационныйНомерФСС КАК РегистрационныйНомерФСС,
	|	Шапка.ДополнительныйКодФСС КАК ДополнительныйКодФСС,
	|	Шапка.КодПодчиненностиФСС КАК КодПодчиненностиФСС,
	|	Шапка.СтраховательНаименование КАК СтраховательНаименование,
	|	Шапка.ИНН КАК ИНН,
	|	Шапка.КПП КАК КПП,
	|	Шапка.Руководитель КАК Руководитель,
	|	Шапка.РуководительФИО КАК РуководительФИО,
	|	Шапка.ДолжностьРуководителя КАК ДолжностьРуководителя,
	|	Шапка.АдресОрганизации КАК АдресОрганизации,
	|	Шапка.НаименованиеБанка КАК НаименованиеБанка,
	|	Шапка.НомерЛицевогоСчета КАК НомерЛицевогоСчета,
	|	Шапка.КБК КАК КБК,
	|	Шапка.ДополнительныеСведенияДляПеречисления КАК ДополнительныеСведенияДляПеречисления,
	|	Шапка.НомерСчета КАК НомерСчета,
	|	Шапка.БИКБанка КАК БИКБанка,
	|	Шапка.СтатусДокумента КАК СтатусДокумента,
	|	Шапка.ТелефонСоставителя КАК ТелефонСоставителя,
	|	Шапка.АдресЭлектроннойПочтыОрганизации КАК АдресЭлектроннойПочтыОрганизации,
	|	Шапка.ТелефонСоставителя КАК СтраховательТелефон,
	|	Шапка.АдресЭлектроннойПочтыОрганизации КАК СтраховательПочта,
	|	Шапка.ЗаявлениеСоставил КАК ЗаявлениеСоставил,
	|	ЕСТЬNULL(ТЧОплаты.НомерСтроки, 0) КАК НомерСтроки,
	|	ЕСТЬNULL(ТЧОплаты.Сотрудник, НЕОПРЕДЕЛЕНО) КАК Сотрудник,
	|	ЕСТЬNULL(ТЧОплаты.СотрудникФамилия, """") КАК СотрудникФамилия,
	|	ЕСТЬNULL(ТЧОплаты.СотрудникИмя, """") КАК СотрудникИмя,
	|	ЕСТЬNULL(ТЧОплаты.СотрудникОтчество, """") КАК СотрудникОтчество,
	|	ЕСТЬNULL(ТЧОплаты.СотрудникСНИЛС, """") КАК СотрудникСНИЛС,
	|	ЕСТЬNULL(ТЧОплаты.РебенокФамилия, """") КАК РебенокФамилия,
	|	ЕСТЬNULL(ТЧОплаты.РебенокИмя, """") КАК РебенокИмя,
	|	ЕСТЬNULL(ТЧОплаты.РебенокОтчество, """") КАК РебенокОтчество,
	|	ЕСТЬNULL(ТЧОплаты.РебенокСНИЛС, """") КАК РебенокСНИЛС,
	|	ЕСТЬNULL(ТЧОплаты.РебенокДатаРождения, """") КАК РебенокДатаРождения,
	|	ЕСТЬNULL(ТЧОплаты.Статус, НЕОПРЕДЕЛЕНО) КАК Статус,
	|	ЕСТЬNULL(ТЧОплаты.СреднедневнойЗаработок, 0) КАК СреднедневнойЗаработок,
	|	ЕСТЬNULL(ТЧОплаты.ДокументОснование, НЕОПРЕДЕЛЕНО) КАК ДокументОснование,
	|	ЕСТЬNULL(ТЧОплаты.КоличествоСтраниц, 0) КАК КоличествоСтраниц,
	|	ЕСТЬNULL(ТЧОплаты.СуммаПособия, 0) КАК СуммаПособия,
	|	ЕСТЬNULL(ТЧОплаты.СуммаВзносов, 0) КАК СуммаВзносов,
	|	ЕСТЬNULL(ТЧОплаты.КоличествоДней, 0) КАК КоличествоДней,
	|	ЕСТЬNULL(ТЧОплаты.Месяц, ДАТАВРЕМЯ(1, 1, 1)) КАК Месяц
	|ИЗ
	|	Документ.ЗаявлениеВФССОВозмещенииВыплатРодителямДетейИнвалидов КАК Шапка
	|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.ЗаявлениеВФССОВозмещенииВыплатРодителямДетейИнвалидов.Оплаты КАК ТЧОплаты
	|		ПО Шапка.Ссылка = ТЧОплаты.Ссылка
	|ГДЕ
	|	Шапка.Ссылка В(&МассивСсылок)
	|
	|УПОРЯДОЧИТЬ ПО
	|	Дата,
	|	Ссылка,
	|	НомерСтроки";
	
	ТабличныйДокумент = Новый ТабличныйДокумент;
	ТабличныйДокумент.КлючПараметровПечати = "ПараметрыПечати_ЗаявлениеВФССДополнительныеДниОтпуска";
	ТабличныйДокумент.ОриентацияСтраницы   = ОриентацияСтраницы.Портрет;
	ТабличныйДокумент.АвтоМасштаб          = Истина;
	УправлениеПечатьюБЗК.УстановитьОтступ(ТабличныйДокумент, 0, 5, 0, 5);
	
	Выборка = Запрос.Выполнить().Выбрать();
	Пока Выборка.СледующийПоЗначениюПоля("ИмяМакета") Цикл
		
		Если Выборка.ИмяМакета = "ЗаявлениеВФССДополнительныеДниОтпуска_2012" Тогда
			ВывестиЗаявлениеОВозмещении_2012(Выборка, ТабличныйДокумент, ОбъектыПечати);
		ИначеЕсли Выборка.ИмяМакета = "ЗаявлениеВФССДополнительныеДниОтпуска_2017" Тогда
			ВывестиЗаявлениеОВозмещении_2017(Выборка, ТабличныйДокумент, ОбъектыПечати);
		ИначеЕсли Выборка.ИмяМакета = "ЗаявлениеВФССДополнительныеДниОтпуска_2021" Тогда
			ВывестиЗаявлениеОВозмещении_2021(Выборка, ТабличныйДокумент, ОбъектыПечати);
		Иначе
			ВывестиЗаявлениеОВозмещении_2022(Выборка, ТабличныйДокумент, ОбъектыПечати);
		КонецЕсли;
		
	КонецЦикла;
	
	Возврат ТабличныйДокумент;
КонецФункции

#Область ЗаявлениеВФССДополнительныеДниОтпуска_2012

Процедура ВывестиЗаявлениеОВозмещении_2012(Выборка, ТабличныйДокумент, ОбъектыПечати)
	Макет = Неопределено;
	ВыведеноСтрок = 0;
	ИтогоПособия = 0;
	ИтогоСреднедневнойЗаработок = 0;
	ИтогоКоличествоДней = 0;
	ИтогоВзносов = 0;
	ВсегоСтраниц = 0;
	КоличествоСтрокВМакете = 4;
	
	Пока Выборка.СледующийПоЗначениюПоля("Ссылка") Цикл
		Пока Выборка.Следующий() Цикл
			ВыведеноСтрок = (ВыведеноСтрок + 1) % КоличествоСтрокВМакете;
			НомерСтроки = ?(ВыведеноСтрок = 0, КоличествоСтрокВМакете, ВыведеноСтрок);
			
			Если ВыведеноСтрок = 1 Тогда
				Если Макет <> Неопределено Тогда
					ВывестиИтогиЗаявленияОВозмещении_2012(Макет, ИтогоСреднедневнойЗаработок, ИтогоПособия, ВсегоСтраниц);
					Если ТабличныйДокумент.ВысотаТаблицы > 0 Тогда
						ТабличныйДокумент.ВывестиГоризонтальныйРазделительСтраниц();
					КонецЕсли;
					ТабличныйДокумент.Вывести(Макет);
				КонецЕсли;
				ИтогоПособия = 0;
				ИтогоВзносов = 0;
				ВсегоСтраниц = 0;
				ИтогоСреднедневнойЗаработок = 0;
				ИтогоКоличествоДней = 0;
				Макет = УправлениеПечатью.МакетПечатнойФормы("Документ.ЗаявлениеВФССОВозмещенииВыплатРодителямДетейИнвалидов." + Выборка.ИмяМакета);
				ВывестиШапкуИПодвалЗаявленияОВозмещении_2012(Макет, Выборка);
			КонецЕсли;
			
			ВывестиСтрокуЗаявленияОВозмещении_2012(Макет, Выборка, НомерСтроки);
			ИтогоСреднедневнойЗаработок = ИтогоСреднедневнойЗаработок + Выборка.СреднедневнойЗаработок;
			ИтогоКоличествоДней = ИтогоКоличествоДней + Выборка.КоличествоДней;
			ИтогоПособия = ИтогоПособия + Выборка.СуммаПособия;
			ИтогоВзносов = ИтогоВзносов + Выборка.СуммаВзносов;
			ВсегоСтраниц = ВсегоСтраниц + Выборка.КоличествоСтраниц;
		КонецЦикла;
	КонецЦикла;
	
	ВывестиИтогиЗаявленияОВозмещении_2012(Макет, ИтогоСреднедневнойЗаработок, ИтогоПособия, ВсегоСтраниц);
	
	Если ТабличныйДокумент.ВысотаТаблицы > 0 Тогда
		ТабличныйДокумент.ВывестиГоризонтальныйРазделительСтраниц();
	КонецЕсли;
	ТабличныйДокумент.Вывести(Макет);
КонецПроцедуры

Процедура ВывестиШапкуИПодвалЗаявленияОВозмещении_2012(Макет, Выборка)
	
	ДлиныСтрок = Новый Массив();
	ДлиныСтрок.Добавить(27);
	ЗарплатаКадры.ВывестиДанныеПоБуквенно(ЗарплатаКадры.РазбитьСтрокуНаПодСтроки(ВРег(Выборка.НаименованиеТерриториальногоОрганаФСС), ДлиныСтрок), Макет, "Наименование_ФСС_", 135);
	ЗарплатаКадры.ВывестиДанныеПоБуквенно(ЗарплатаКадры.РазбитьСтрокуНаПодСтроки(ВРег(Выборка.СтраховательНаименование), ДлиныСтрок), Макет, "ФИО_Заявителя_", 135);
	
	ЗарплатаКадры.ВывестиДанныеПоБуквенно(Выборка.РегистрационныйНомерФСС, Макет, "РегистрационныйНомер_", 10);
	ЗарплатаКадры.ВывестиДанныеПоБуквенно(Выборка.ДополнительныйКодФСС, Макет, "ДополнительныйКод_", 10);
	ЗарплатаКадры.ВывестиДанныеПоБуквенно(Выборка.КодПодчиненностиФСС, Макет, "КодПодчиненности_", 5);
	ЗарплатаКадры.ВывестиДанныеПоБуквенно(Выборка.ИНН, Макет, "ИНН_", 12);
	ЗарплатаКадры.ВывестиДанныеПоБуквенно(Выборка.КПП, Макет, "КПП_", 9);
	
	Если ЗначениеЗаполнено(Выборка.АдресОрганизации) Тогда
		СтруктураАдреса = ПрямыеВыплатыПособийСоциальногоСтрахования.СтруктураАдресаВМашиночитаемомФормате2012(Выборка.АдресОрганизации);
		Если ЗначениеЗаполнено(СтруктураАдреса.Индекс) Тогда
			Префикс = "АдресРегистрации_";
			ЗарплатаКадры.ВывестиДанныеПоБуквенно(ВРег(СтруктураАдреса.Индекс), Макет, Префикс, 6);
			ЗарплатаКадры.ВывестиДанныеПоБуквенно(ВРег(СтруктураАдреса.Регион), Макет, Префикс, 17, 7);
			ЗарплатаКадры.ВывестиДанныеПоБуквенно(ВРег(СтруктураАдреса.Район), Макет, Префикс, 17, 24);
			ЗарплатаКадры.ВывестиДанныеПоБуквенно(ВРег(СтруктураАдреса.НаселенныйПункт), Макет, Префикс, 34, 41);
			ЗарплатаКадры.ВывестиДанныеПоБуквенно(ВРег(СтруктураАдреса.Улица), Макет, Префикс, 37, 75);
			ЗарплатаКадры.ВывестиДанныеПоБуквенно(ВРег(СтруктураАдреса.Дом), Макет, Префикс, 8, 112);
			ЗарплатаКадры.ВывестиДанныеПоБуквенно(ВРег(СтруктураАдреса.Корпус), Макет, Префикс, 3, 120);
			ЗарплатаКадры.ВывестиДанныеПоБуквенно(ВРег(СтруктураАдреса.Строение), Макет, Префикс, 3, 123);
			ЗарплатаКадры.ВывестиДанныеПоБуквенно(ВРег(СтруктураАдреса.Квартира), Макет, Префикс, 6, 126);
		КонецЕсли;
	КонецЕсли;
	
	ДлиныСтрок = Новый Массив();
	ДлиныСтрок.Добавить(39);
	ЗарплатаКадры.ВывестиДанныеПоБуквенно(ЗарплатаКадры.РазбитьСтрокуНаПодСтроки(ВРег(Выборка.НаименованиеБанка), ДлиныСтрок), Макет, "НаименованиеБанка_", 78);
	
	ЗарплатаКадры.ВывестиДанныеПоБуквенно(Выборка.НомерСчета, Макет, "НомерСчета_", 20);
	ЗарплатаКадры.ВывестиДанныеПоБуквенно(Выборка.БИКБанка, Макет, "БИК_", 9);
	ЗарплатаКадры.ВывестиДанныеПоБуквенно(Выборка.НомерЛицевогоСчета, Макет, "ЛицСчет_", 12);
	
	Если ЗначениеЗаполнено(Выборка.ТелефонСоставителя) Тогда
		СтруктураТелефона = УправлениеКонтактнойИнформацией.СведенияОТелефоне(Выборка.ТелефонСоставителя);
		Телефон = СтрЗаменить(СтруктураТелефона.КодГорода, "-", "") + СтрЗаменить(СтруктураТелефона.НомерТелефона, "-", "");
		Телефон = СтрЗаменить(Телефон, " ", ""); 
		ЗарплатаКадры.ВывестиДанныеПоБуквенно(Телефон, Макет, "ТелефонСоставителя_", 10);
	КонецЕсли;
	Макет.Параметры.ДолжностьРуководителя = "" + Выборка.ДолжностьРуководителя;
	Макет.Параметры.ФИОРуководителя = "" + Выборка.РуководительФИО;
	
КонецПроцедуры

Процедура ВывестиСтрокуЗаявленияОВозмещении_2012(Макет, Выборка, НомерСтроки)
	
	ПрефиксСтроки = "ФИО_" + Формат(НомерСтроки,"ЧЦ=2; ЧВН=") + "_";
	ЗарплатаКадры.ВывестиДанныеПоБуквенно(ВРег(Выборка.СотрудникФамилия),  Макет, ПрефиксСтроки, 24);
	ЗарплатаКадры.ВывестиДанныеПоБуквенно(ВРег(Выборка.СотрудникИмя),      Макет, ПрефиксСтроки, 24, 25);
	ЗарплатаКадры.ВывестиДанныеПоБуквенно(ВРег(Выборка.СотрудникОтчество), Макет, ПрефиксСтроки, 24, 49);
	
	ЗарплатаКадры.ВывестиСуммуВРубляхКопейкахВЯчейки(Выборка.СреднедневнойЗаработок, Макет, "РазмерПособия" + НомерСтроки + "_", 8);
	
	Макет.Области["Статус" + НомерСтроки].Текст = Выборка.Статус;
	
КонецПроцедуры

Процедура ВывестиИтогиЗаявленияОВозмещении_2012(Макет, ИтогоСреднедневнойЗаработок, ИтогоПособия, ВсегоСтраниц)
	
	ЗарплатаКадры.ВывестиСуммуВРубляхКопейкахВЯчейки(ИтогоСреднедневнойЗаработок, Макет, "ИтогоРазмерПособия_", 9);
	ЗарплатаКадры.ВывестиСуммуВРубляхКопейкахВЯчейки(ИтогоПособия, Макет, "ИтогоРазмерПособия2_", 9);
	ЗарплатаКадры.ВывестиДанныеПоБуквенно(Строка(ВсегоСтраниц), Макет, "КоличествоСтраниц_", 2);
	
КонецПроцедуры

#КонецОбласти

#Область ЗаявлениеВФССДополнительныеДниОтпуска_2017

Процедура ВывестиЗаявлениеОВозмещении_2017(Выборка, ТабличныйДокумент, ОбъектыПечати)
	Макет = Неопределено;
	ВыведеноСтрок = 0;
	ИтогоПособия = 0;
	ИтогоСреднедневнойЗаработок = 0;
	ИтогоКоличествоДней = 0;
	ИтогоВзносов = 0;
	ВсегоСтраниц = 0;
	КоличествоСтрокВМакете = 5;
	
	Пока Выборка.СледующийПоЗначениюПоля("Ссылка") Цикл
		Пока Выборка.Следующий() Цикл
			ВыведеноСтрок = (ВыведеноСтрок + 1) % КоличествоСтрокВМакете;
			НомерСтроки = ?(ВыведеноСтрок = 0, КоличествоСтрокВМакете, ВыведеноСтрок);
			
			Если ВыведеноСтрок = 1 Тогда
				Если Макет <> Неопределено Тогда
					ВывестиИтогиЗаявленияОВозмещении_2017(Макет, ИтогоСреднедневнойЗаработок, ИтогоПособия, ИтогоВзносов, ВсегоСтраниц);
					Если ТабличныйДокумент.ВысотаТаблицы > 0 Тогда
						ТабличныйДокумент.ВывестиГоризонтальныйРазделительСтраниц();
					КонецЕсли;
					ТабличныйДокумент.Вывести(Макет);
				КонецЕсли;
				ИтогоПособия = 0;
				ИтогоВзносов = 0;
				ВсегоСтраниц = 0;
				ИтогоСреднедневнойЗаработок = 0;
				ИтогоКоличествоДней = 0;
				Макет = УправлениеПечатью.МакетПечатнойФормы("Документ.ЗаявлениеВФССОВозмещенииВыплатРодителямДетейИнвалидов." + Выборка.ИмяМакета);
				ВывестиШапкуИПодвалЗаявленияОВозмещении_2017(Макет, Выборка);
			КонецЕсли;
			
			ВывестиСтрокуЗаявленияОВозмещении_2017(Макет, Выборка, НомерСтроки);
			ИтогоСреднедневнойЗаработок = ИтогоСреднедневнойЗаработок + Выборка.СреднедневнойЗаработок;
			ИтогоКоличествоДней = ИтогоКоличествоДней + Выборка.КоличествоДней;
			ИтогоПособия = ИтогоПособия + Выборка.СуммаПособия;
			ИтогоВзносов = ИтогоВзносов + Выборка.СуммаВзносов;
			ВсегоСтраниц = ВсегоСтраниц + Выборка.КоличествоСтраниц;
		КонецЦикла;
	КонецЦикла;
	
	ВывестиИтогиЗаявленияОВозмещении_2017(Макет, ИтогоСреднедневнойЗаработок, ИтогоПособия, ИтогоВзносов, ВсегоСтраниц);
	
	Если ТабличныйДокумент.ВысотаТаблицы > 0 Тогда
		ТабличныйДокумент.ВывестиГоризонтальныйРазделительСтраниц();
	КонецЕсли;
	ТабличныйДокумент.Вывести(Макет);
КонецПроцедуры

Процедура ВывестиШапкуИПодвалЗаявленияОВозмещении_2017(Макет, Выборка)
	
	ДлиныСтрок = Новый Массив();
	ДлиныСтрок.Добавить(27);
	ЗарплатаКадры.ВывестиДанныеПоБуквенно(ЗарплатаКадры.РазбитьСтрокуНаПодСтроки(ВРег(Выборка.НаименованиеТерриториальногоОрганаФСС), ДлиныСтрок), Макет, "Наименование_ФСС_", 135);
	ЗарплатаКадры.ВывестиДанныеПоБуквенно(ЗарплатаКадры.РазбитьСтрокуНаПодСтроки(ВРег(Выборка.СтраховательНаименование), ДлиныСтрок), Макет, "ФИО_Заявителя_", 135);
	
	ЗарплатаКадры.ВывестиДанныеПоБуквенно(Выборка.РегистрационныйНомерФСС, Макет, "РегистрационныйНомер_", 10);
	ЗарплатаКадры.ВывестиДанныеПоБуквенно(Выборка.ДополнительныйКодФСС, Макет, "ДополнительныйКод_", 10);
	ЗарплатаКадры.ВывестиДанныеПоБуквенно(Выборка.КодПодчиненностиФСС, Макет, "КодПодчиненности_", 5);
	ЗарплатаКадры.ВывестиДанныеПоБуквенно(Выборка.ИНН, Макет, "ИНН_", 12);
	ЗарплатаКадры.ВывестиДанныеПоБуквенно(Выборка.КПП, Макет, "КПП_", 9);
	
	Если ЗначениеЗаполнено(Выборка.АдресОрганизации) Тогда
		СтруктураАдреса = ПрямыеВыплатыПособийСоциальногоСтрахования.СтруктураАдресаВМашиночитаемомФормате2012(Выборка.АдресОрганизации);
		Если ЗначениеЗаполнено(СтруктураАдреса.Индекс) Тогда
			Префикс = "АдресРегистрации_";
			ЗарплатаКадры.ВывестиДанныеПоБуквенно(ВРег(СтруктураАдреса.Индекс), Макет, Префикс, 6);
			ЗарплатаКадры.ВывестиДанныеПоБуквенно(ВРег(СтруктураАдреса.Регион), Макет, Префикс, 37, 7);
			ЗарплатаКадры.ВывестиДанныеПоБуквенно(ВРег(СтруктураАдреса.Район), Макет, Префикс, 37, 44);
			ЗарплатаКадры.ВывестиДанныеПоБуквенно(ВРег(СтруктураАдреса.НаселенныйПункт), Макет, Префикс, 34, 81);
			ЗарплатаКадры.ВывестиДанныеПоБуквенно(ВРег(СтруктураАдреса.Улица), Макет, Префикс, 37, 115);
			ЗарплатаКадры.ВывестиДанныеПоБуквенно(ВРег(СтруктураАдреса.Дом), Макет, Префикс, 7, 152);
			ЗарплатаКадры.ВывестиДанныеПоБуквенно(ВРег(СтруктураАдреса.Корпус), Макет, Префикс, 3, 159);
			ЗарплатаКадры.ВывестиДанныеПоБуквенно(ВРег(СтруктураАдреса.Строение), Макет, Префикс, 3, 162);
			ЗарплатаКадры.ВывестиДанныеПоБуквенно(ВРег(СтруктураАдреса.Квартира), Макет, Префикс, 5, 165);
		КонецЕсли;
	КонецЕсли;
	
	ДлиныСтрок = Новый Массив();
	ДлиныСтрок.Добавить(39);
	ЗарплатаКадры.ВывестиДанныеПоБуквенно(ЗарплатаКадры.РазбитьСтрокуНаПодСтроки(ВРег(Выборка.НаименованиеБанка), ДлиныСтрок), Макет, "НаименованиеБанка_", 78);
	
	ЗарплатаКадры.ВывестиДанныеПоБуквенно(Выборка.НомерСчета, Макет, "НомерСчета_", 20);
	ЗарплатаКадры.ВывестиДанныеПоБуквенно(Выборка.БИКБанка, Макет, "БИК_", 9);
	ЗарплатаКадры.ВывестиДанныеПоБуквенно(Выборка.НомерЛицевогоСчета, Макет, "ЛицСчет_", 12);
	ЗарплатаКадры.ВывестиДанныеПоБуквенно(Выборка.КБК, Макет, "КБК_", 20);
	
	Если ЗначениеЗаполнено(Выборка.ТелефонСоставителя) Тогда
		СтруктураТелефона = УправлениеКонтактнойИнформацией.СведенияОТелефоне(Выборка.ТелефонСоставителя);
		Телефон = СтрЗаменить(СтруктураТелефона.КодГорода, "-", "") + СтрЗаменить(СтруктураТелефона.НомерТелефона, "-", "");
		Телефон = СтрЗаменить(Телефон, " ", ""); 
		ЗарплатаКадры.ВывестиДанныеПоБуквенно(Телефон, Макет, "ТелефонСоставителя_", 10);
	КонецЕсли;
	Макет.Параметры.ДолжностьРуководителя = "" + Выборка.ДолжностьРуководителя;
	Макет.Параметры.ФИОРуководителя = "" + Выборка.РуководительФИО;
	
	ЗарплатаКадры.ВывестиДанныеПоБуквенно(СокрЛП(Выборка.АдресЭлектроннойПочтыОрганизации), Макет, "АдресЭлектроннойПочты_", 28);
КонецПроцедуры

Процедура ВывестиСтрокуЗаявленияОВозмещении_2017(Макет, Выборка, НомерСтроки)
	
	Макет.Параметры["Фамилия" + НомерСтроки]  = Выборка.СотрудникФамилия;
	Макет.Параметры["Имя" + НомерСтроки]      = Выборка.СотрудникИмя;
	Макет.Параметры["Отчество" + НомерСтроки] = Выборка.СотрудникОтчество;
	
	Макет.Параметры["РазмерПособия" + НомерСтроки] = Выборка.СреднедневнойЗаработок;
	
	Макет.Области["Статус" + НомерСтроки].Текст = Выборка.Статус;
	
КонецПроцедуры

Процедура ВывестиИтогиЗаявленияОВозмещении_2017(Макет, ИтогоСреднедневнойЗаработок, ИтогоПособия, ИтогоВзносов, ВсегоСтраниц)
	
	Макет.Параметры.ИтогоРазмерПособия = ИтогоСреднедневнойЗаработок;
	ЗарплатаКадры.ВывестиСуммуВРубляхКопейкахВЯчейки(ИтогоПособия + ИтогоВзносов, Макет, "ВсегоРасходов_", 11);
	ЗарплатаКадры.ВывестиСуммуВРубляхКопейкахВЯчейки(ИтогоВзносов, Макет, "Взносов_", 11);
	ЗарплатаКадры.ВывестиСуммуВРубляхКопейкахВЯчейки(ИтогоПособия, Макет, "ИтогоРазмерПособия2_", 11);
	Макет.Параметры.Листов = Строка(ВсегоСтраниц);
	
КонецПроцедуры

#КонецОбласти

#Область ЗаявлениеВФССДополнительныеДниОтпуска_2021

Процедура ВывестиЗаявлениеОВозмещении_2021(Выборка, ТабличныйДокумент, ОбъектыПечати)
	Макет = Неопределено;
	ВыведеноСтрок = 0;
	ИтогоПособия = 0;
	ИтогоСреднедневнойЗаработок = 0;
	ИтогоКоличествоДней = 0;
	ИтогоВзносов = 0;
	ВсегоСтраниц = 0;
	КоличествоСтрокВМакете = 3;
	
	Пока Выборка.СледующийПоЗначениюПоля("Ссылка") Цикл
		Пока Выборка.Следующий() Цикл
			ВыведеноСтрок = (ВыведеноСтрок + 1) % КоличествоСтрокВМакете;
			НомерСтроки = ?(ВыведеноСтрок = 0, КоличествоСтрокВМакете, ВыведеноСтрок);
			
			Если ВыведеноСтрок = 1 Тогда
				Если Макет <> Неопределено Тогда
					ВывестиИтогиЗаявленияОВозмещении_2017(Макет, ИтогоСреднедневнойЗаработок, ИтогоПособия, ИтогоВзносов, ВсегоСтраниц);
					Макет.Параметры.ИтогоКоличествоДней = ИтогоКоличествоДней;
					Если ТабличныйДокумент.ВысотаТаблицы > 0 Тогда
						ТабличныйДокумент.ВывестиГоризонтальныйРазделительСтраниц();
					КонецЕсли;
					ТабличныйДокумент.Вывести(Макет);
				КонецЕсли;
				ИтогоПособия = 0;
				ИтогоВзносов = 0;
				ВсегоСтраниц = 0;
				ИтогоСреднедневнойЗаработок = 0;
				ИтогоКоличествоДней = 0;
				Макет = УправлениеПечатью.МакетПечатнойФормы("Документ.ЗаявлениеВФССОВозмещенииВыплатРодителямДетейИнвалидов." + Выборка.ИмяМакета);
				ВывестиШапкуИПодвалЗаявленияОВозмещении_2017(Макет, Выборка);
				ЗарплатаКадры.ВывестиДанныеПоБуквенно(Выборка.ДополнительныеСведенияДляПеречисления, Макет, "ДопСведения_", 72);
			КонецЕсли;
			
			ВывестиСтрокуЗаявленияОВозмещении_2021(Макет, Выборка, НомерСтроки);
			ИтогоСреднедневнойЗаработок = ИтогоСреднедневнойЗаработок + Выборка.СреднедневнойЗаработок;
			ИтогоКоличествоДней = ИтогоКоличествоДней + Выборка.КоличествоДней;
			ИтогоПособия = ИтогоПособия + Выборка.СуммаПособия;
			ИтогоВзносов = ИтогоВзносов + Выборка.СуммаВзносов;
			ВсегоСтраниц = ВсегоСтраниц + Выборка.КоличествоСтраниц;
		КонецЦикла;
	КонецЦикла;
	
	ВывестиИтогиЗаявленияОВозмещении_2017(Макет, ИтогоСреднедневнойЗаработок, ИтогоПособия, ИтогоВзносов, ВсегоСтраниц);
	Макет.Параметры.ИтогоКоличествоДней = ИтогоКоличествоДней;
	
	Если ТабличныйДокумент.ВысотаТаблицы > 0 Тогда
		ТабличныйДокумент.ВывестиГоризонтальныйРазделительСтраниц();
	КонецЕсли;
	ТабличныйДокумент.Вывести(Макет);
КонецПроцедуры

Процедура ВывестиСтрокуЗаявленияОВозмещении_2021(Макет, Выборка, НомерСтроки)
	
	Макет.Параметры["Фамилия" + НомерСтроки]  = Выборка.СотрудникФамилия;
	Макет.Параметры["Имя" + НомерСтроки]      = Выборка.СотрудникИмя;
	Макет.Параметры["Отчество" + НомерСтроки] = Выборка.СотрудникОтчество;
	Макет.Параметры["СНИЛС" + НомерСтроки]    = Выборка.СотрудникСНИЛС;
	Макет.Параметры["Период" + НомерСтроки]   = Выборка.Месяц;
	Макет.Параметры["КоличествоДней" + НомерСтроки] = Выборка.КоличествоДней;
		
	Макет.Параметры["РазмерПособия" + НомерСтроки] = Выборка.СреднедневнойЗаработок;
	
	Макет.Области["Статус" + НомерСтроки].Текст = Выборка.Статус;
	
КонецПроцедуры

#КонецОбласти

#Область ПФ_MXL_ДополнительныеДниОтпуска_2022

Процедура ВывестиЗаявлениеОВозмещении_2022(Выборка, ТабличныйДокумент, ОбъектыПечати)
	МетаданныеМакета = Метаданные.Документы.ЗаявлениеВФССОВозмещенииВыплатРодителямДетейИнвалидов.Макеты[Выборка.ИмяМакета];
	КонтекстПечати = УправлениеПечатьюБЗК.КонтекстПечати(МетаданныеМакета, , ОбъектыПечати, ТабличныйДокумент);
	
	ТаблицаСтрок = Новый ТаблицаЗначений;
	ТаблицаСтрок.Колонки.Добавить("ВместеСоСледующим", Новый ОписаниеТипов("Булево"));
	ИменаКолонок = Новый Массив;
	Для Каждого КолонкаРезультатаЗапроса Из Выборка.Владелец().Колонки Цикл
		ТаблицаСтрок.Колонки.Добавить(КолонкаРезультатаЗапроса.Имя, КолонкаРезультатаЗапроса.ТипЗначения);
		ИменаКолонок.Добавить(КолонкаРезультатаЗапроса.Имя);
	КонецЦикла;
	ИменаКолонок = СтрСоединить(ИменаКолонок, ",");
	
	Пока Выборка.СледующийПоЗначениюПоля("Ссылка") Цикл
		// Итоги таблицы выводятся в шапке формы. Поэтому сначала требуется получить данные всех строк.
		Документ = Неопределено;
		ТаблицаСтрок.Очистить();
		Пока Выборка.Следующий() Цикл
			Если Документ = Неопределено Тогда
				Документ = Новый Структура(ИменаКолонок);
				ЗаполнитьЗначенияСвойств(Документ, Выборка);
			КонецЕсли;
			Если Выборка.Сотрудник <> Неопределено Тогда
				СтрокаТаблицы = ТаблицаСтрок.Добавить();
				ЗаполнитьЗначенияСвойств(СтрокаТаблицы, Выборка);
			КонецЕсли;
		КонецЦикла;
		Если Документ = Неопределено Тогда
			Продолжить;
		КонецЕсли;
		ИтогоСреднедневнойЗаработок = ТаблицаСтрок.Итог("СреднедневнойЗаработок");
		ИтогоКоличествоДней         = ТаблицаСтрок.Итог("КоличествоДней");
		ВсегоПособий                = ТаблицаСтрок.Итог("СуммаПособия");
		ВсегоВзносов                = ТаблицаСтрок.Итог("СуммаВзносов");
		ЛистовПриказов              = ТаблицаСтрок.Итог("КоличествоСтраниц");
		// Начало печати.
		УправлениеПечатьюБЗК.ПередПечатьюОчередногоОбъекта(КонтекстПечати);
		// Вывод шапки.
		Секция = УправлениеПечатьюБЗК.СекцияПечатнойФормы(КонтекстПечати, "Шапка");
		УправлениеПечатьюБЗК.ВывестиПоБуквам(Секция, Документ.СтраховательНаименование, "СтраховательНаименование");
		УправлениеПечатьюБЗК.ВывестиСуммуПоБуквам(Секция, ВсегоПособий + ВсегоВзносов, "ВсегоРасходов");
		УправлениеПечатьюБЗК.ВывестиСуммуПоБуквам(Секция, ВсегоВзносов, "ВсегоВзносов");
		УправлениеПечатьюБЗК.ВывестиСуммуПоБуквам(Секция, ВсегоПособий, "ВсегоПособий");
		КонтекстПечати.ТабличныйДокумент.Вывести(Секция.ТабличныйДокумент);
		// Вывод строк таблицы.
		Если ТаблицаСтрок.Количество() = 0 Тогда
			КоличествоПолучателей = 0;
		Иначе
			МассивСотрудников = КоллекцииБЗК.УникальныеЗначенияКолонки(ТаблицаСтрок, "Сотрудник");
			КоллекцииБЗК.УдалитьПустыеЗначенияМассива(МассивСотрудников);
			КоличествоПолучателей = МассивСотрудников.Количество();
		КонецЕсли;
		Для НомерСтроки = ТаблицаСтрок.Количество() + 1 По 3 Цикл
			ТаблицаСтрок.Добавить().НомерСтроки = НомерСтроки;
		КонецЦикла;
		// Первая и последняя строка выводятся вместе с шапкой и подвалом.
		// Для первой строки это обеспечивается флажком "ВместеСоСледующим" шапки.
		// Для последней строки необходимо включить явно.
		ВсегоСтрок = ТаблицаСтрок.Количество();
		ТаблицаСтрок[ВсегоСтрок-1].ВместеСоСледующим = Истина;
		// Если строк много...
		Если ВсегоСтрок > 3 Тогда
			// На пустой лист помещается целиком 4 строки.
			// На первом листе по умолчанию помещаются 2 строки.
			ЗаВычетомПервойИПоследней = ВсегоСтрок-2;
			Остаток = ЗаВычетомПервойИПоследней % 4;
			Если Остаток = 0 Тогда
				// По умолчанию выведется как 2 4 ... 3 1,
				// а хотелось бы вывести как 1 4 ... 4 1,
				// для чего 2я строка должна "прицепиться" к 3й и "убежать" с 1й страницы.
				ТаблицаСтрок[1].ВместеСоСледующим = Истина;
			ИначеЕсли Остаток = 2 Тогда
				// При автоматической балансировке количество кратное 4 выведется как 2 4 ... 4 1 1.
				// На предпоследней странице в воздухе "повисает" 1 строка, что не очень красиво.
				Если ВсегоСтрок = 4 Тогда
					// 4 строки выводятся по схеме "1 2 1",
					// для чего 2я строка должна "прицепиться" к 3й.
					ТаблицаСтрок[1].ВместеСоСледующим = Истина;
				ИначеЕсли ВсегоСтрок = 8 Тогда
					// 8 строк выводятся по схеме "1 3 3 1",
					// для чего 2я строка должна "прицепиться" к 3й,
					ТаблицаСтрок[1].ВместеСоСледующим = Истина;
					// а две пред-предпоследние строки должны "прицепиться" к предпоследней (-2й).
					ТаблицаСтрок[ВсегоСтрок-4].ВместеСоСледующим = Истина;
					ТаблицаСтрок[ВсегоСтрок-3].ВместеСоСледующим = Истина;
				Иначе
					// 12, 16 и т.д. строк - по схеме: "2 4 ... 4 3 3 3 1".
					ТаблицаСтрок[ВсегоСтрок-7].ВместеСоСледующим = Истина;
					ТаблицаСтрок[ВсегоСтрок-6].ВместеСоСледующим = Истина;
					ТаблицаСтрок[ВсегоСтрок-4].ВместеСоСледующим = Истина;
					ТаблицаСтрок[ВсегоСтрок-3].ВместеСоСледующим = Истина;
				КонецЕсли;
			ИначеЕсли Остаток = 3 И ВсегоСтрок > 8 Тогда
				// Вывод по схеме "2 4 ... 4 3 3 1".
				ТаблицаСтрок[ВсегоСтрок-4].ВместеСоСледующим = Истина;
				ТаблицаСтрок[ВсегоСтрок-3].ВместеСоСледующим = Истина;
			КонецЕсли;
		КонецЕсли;
		Для Каждого СтрокаТаблицы Из ТаблицаСтрок Цикл
			Параметры = Новый Структура(КонтекстПечати.ИменаПараметровОбластей.СтрокаТаблицы);
			Параметры.НомерСтроки = СтрокаТаблицы.НомерСтроки;
			Секция = УправлениеПечатьюБЗК.СекцияПечатнойФормы(КонтекстПечати, "СтрокаТаблицы");
			УправлениеПечатьюБЗК.ВывестиПоБуквам(Секция,      СтрокаТаблицы.СотрудникФамилия,       "СотрудникФамилия");
			УправлениеПечатьюБЗК.ВывестиПоБуквам(Секция,      СтрокаТаблицы.СотрудникИмя,           "СотрудникИмя");
			УправлениеПечатьюБЗК.ВывестиПоБуквам(Секция,      СтрокаТаблицы.СотрудникОтчество,      "СотрудникОтчество");
			УправлениеПечатьюБЗК.ВывестиСНИЛСПоБуквам(Секция, СтрокаТаблицы.СотрудникСНИЛС,         "СотрудникСНИЛС");
			УправлениеПечатьюБЗК.ВывестиПоБуквам(Секция,      СтрокаТаблицы.Статус,                 "СотрудникСтатус");
			УправлениеПечатьюБЗК.ВывестиПоБуквам(Секция,      СтрокаТаблицы.РебенокФамилия,         "РебенокФамилия");
			УправлениеПечатьюБЗК.ВывестиПоБуквам(Секция,      СтрокаТаблицы.РебенокИмя,             "РебенокИмя");
			УправлениеПечатьюБЗК.ВывестиПоБуквам(Секция,      СтрокаТаблицы.РебенокОтчество,        "РебенокОтчество");
			УправлениеПечатьюБЗК.ВывестиСНИЛСПоБуквам(Секция, СтрокаТаблицы.РебенокСНИЛС,           "РебенокСНИЛС");
			УправлениеПечатьюБЗК.ВывестиДатуПоБуквам(Секция,  СтрокаТаблицы.РебенокДатаРождения,    "РебенокДатаРождения");
			УправлениеПечатьюБЗК.ВывестиЧислоПоБуквам(Секция, СтрокаТаблицы.КоличествоДней,         "КоличествоДней");
			УправлениеПечатьюБЗК.ВывестиСуммуПоБуквам(Секция, СтрокаТаблицы.СреднедневнойЗаработок, "СреднедневнойЗаработок");
			Если ЗначениеЗаполнено(СтрокаТаблицы.Месяц) Тогда
				УправлениеПечатьюБЗК.ВывестиПоБуквам(Секция, Формат(СтрокаТаблицы.Месяц, "ДФ=MMMM"), "Месяц");
				УправлениеПечатьюБЗК.ВывестиПоБуквам(Секция, Формат(СтрокаТаблицы.Месяц, "ДФ=yyyy"), "Год");
			КонецЕсли;
			Секция.ТабличныйДокумент.Области.КонецСтроки.ВместеСоСледующим = СтрокаТаблицы.ВместеСоСледующим;
			Секция.ТабличныйДокумент.Параметры.Заполнить(Параметры);
			КонтекстПечати.ТабличныйДокумент.Вывести(Секция.ТабличныйДокумент);
		КонецЦикла;
		// Вывод подвала.
		Параметры = Новый Структура(КонтекстПечати.ИменаПараметровОбластей.Подвал);
		Параметры.УполномоченныйПредставительДолжность = Строка(Документ.ДолжностьРуководителя);
		Параметры.УполномоченныйПредставительФИО       = Строка(Документ.РуководительФИО);
		Секция = УправлениеПечатьюБЗК.СекцияПечатнойФормы(КонтекстПечати, "Подвал");
		УправлениеПечатьюБЗК.ВывестиЧислоПоБуквам(Секция, КоличествоПолучателей,          "КоличествоПолучателей");
		УправлениеПечатьюБЗК.ВывестиЧислоПоБуквам(Секция, ЛистовПриказов,                 "ЛистовПриказов");
		УправлениеПечатьюБЗК.ВывестиПоБуквам(Секция, Документ.РегистрационныйНомерФСС,    "РегистрационныйНомер");
		УправлениеПечатьюБЗК.ВывестиПоБуквам(Секция, Документ.ДополнительныйКодФСС,       "ДополнительныйКод");
		УправлениеПечатьюБЗК.ВывестиПоБуквам(Секция, Документ.КодПодчиненностиФСС,        "КодПодчиненности");
		УправлениеПечатьюБЗК.ВывестиПоБуквам(Секция, Документ.ИНН,                        "ИНН");
		УправлениеПечатьюБЗК.ВывестиПоБуквам(Секция, Документ.КПП,                        "КПП");
		УправлениеПечатьюБЗК.ВывестиПоБуквам(Секция, Документ.СтраховательНаименование,   "ПолучательНаименование");
		УправлениеПечатьюБЗК.ВывестиПоБуквам(Секция, Документ.НаименованиеБанка,          "БанкНаименование");
		УправлениеПечатьюБЗК.ВывестиПоБуквам(Секция, Документ.НомерСчета,                 "НомерСчета");
		УправлениеПечатьюБЗК.ВывестиПоБуквам(Секция, Документ.БИКБанка,                   "БанкБИК");
		УправлениеПечатьюБЗК.ВывестиПоБуквам(Секция, Документ.НомерЛицевогоСчета,         "ЛицевойСчет");
		УправлениеПечатьюБЗК.ВывестиПоБуквам(Секция, Документ.КБК,                        "КБК");
		УправлениеПечатьюБЗК.ВывестиПоБуквам(Секция, Документ.СтраховательПочта,          "СтраховательПочта");
		УправлениеПечатьюБЗК.ВывестиТелефонПоБуквам(Секция, Документ.СтраховательТелефон, "СтраховательТелефон");
		УправлениеПечатьюБЗК.ВывестиПоБуквам(Секция, Документ.КодПодчиненностиФСС,        "КодТОФ");
		Секция.ТабличныйДокумент.Параметры.Заполнить(Параметры);
		КонтекстПечати.ТабличныйДокумент.Вывести(Секция.ТабличныйДокумент);
		// Окончание печати.
		УправлениеПечатьюБЗК.ПослеПечатиОчередногоОбъекта(КонтекстПечати, Выборка.Ссылка);
	КонецЦикла;
	
КонецПроцедуры

#КонецОбласти

#КонецОбласти

#КонецОбласти

#КонецЕсли
