#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область ОбработчикиСобытий

Процедура ОбработкаЗаполнения(ДанныеЗаполнения, ТекстЗаполнения, СтандартнаяОбработка)
	
	Если Не ДополнительныеСвойства.Свойство("НеЗаполнятьТабличнуюЧасть")
		Или ДополнительныеСвойства.Свойство("ОтчетПроизводственнойЛинии") Тогда
		Товары.Очистить();
		ШтрихкодыУпаковок.Очистить();
	КонецЕсли;
	
	ИнтеграцияИСМПВЕТИС.ОбработкаЗаполненияМаркировкиТоваровИСМП(ЭтотОбъект, ДанныеЗаполнения, ТекстЗаполнения, СтандартнаяОбработка);
	
	ИнтеграцияИСМППереопределяемый.ОбработкаЗаполненияДокумента(ЭтотОбъект, ДанныеЗаполнения, ТекстЗаполнения, СтандартнаяОбработка);
	
	ЗаполнитьОбъектПоСтатистике();
	
	Если ДополнительныеСвойства.Свойство("ОтчетПроизводственнойЛинии") Тогда
		ЗаполнитьСрокГодностиВЕТИС();
	Иначе
		ЗаполнитьТабличнуюЧастьТоварыСрокомГодностиВЕТИС();
	КонецЕсли;
	
	ИнтеграцияИСМППереопределяемый.ЗаполнитьКодыТНВЭДПоНоменклатуреВТабличнойЧасти(Товары);
	
КонецПроцедуры

Процедура ОбработкаПроверкиЗаполнения(Отказ, ПроверяемыеРеквизиты)
	
	НепроверяемыеРеквизиты = Новый Массив;
	
	// Общее
	НепроверяемыеРеквизиты.Добавить("Товары.Количество");
	НепроверяемыеРеквизиты.Добавить("Товары.КоличествоУпаковок");
	НепроверяемыеРеквизиты.Добавить("Товары.КоличествоПотребительскихУпаковок");
	
	// Обувная продукция
	НепроверяемыеРеквизиты.Добавить("ПринятоеРешение");
	НепроверяемыеРеквизиты.Добавить("КодТаможенногоОргана");
	НепроверяемыеРеквизиты.Добавить("СтранаПроисхождения");
	НепроверяемыеРеквизиты.Добавить("ДатаДекларации");
	НепроверяемыеРеквизиты.Добавить("РегистрационныйНомерДекларации");
	НепроверяемыеРеквизиты.Добавить("Контрагент");
	НепроверяемыеРеквизиты.Добавить("ДатаПроизводства");
	НепроверяемыеРеквизиты.Добавить("ДатаИмпорта");
	НепроверяемыеРеквизиты.Добавить("ДатаПервичногоДокумента");
	НепроверяемыеРеквизиты.Добавить("НомерПервичногоДокумента");
	НепроверяемыеРеквизиты.Добавить("Товары.GTIN");
	
	// Молочная продукция
	НепроверяемыеРеквизиты.Добавить("Товары.ИдентификаторПроисхожденияВЕТИС");
	НепроверяемыеРеквизиты.Добавить("Товары.СрокГодности");
	НепроверяемыеРеквизиты.Добавить("ИдентификаторПроисхожденияВЕТИССтрокой");
	НепроверяемыеРеквизиты.Добавить("ИдентификаторПроисхожденияВЕТИС");
	НепроверяемыеРеквизиты.Добавить("СрокГодности");
	
	// Табачная продукция
	НепроверяемыеРеквизиты.Добавить("ИдентификаторПроизводственнойЛинии");
	// Общее для режима отчета производственной линии
	НепроверяемыеРеквизиты.Добавить("КодТНВЭД");
	НепроверяемыеРеквизиты.Добавить("ВариантЗаполненияДекларации");
	НепроверяемыеРеквизиты.Добавить("ВариантФормированияАТКИСМП");
	
	// Продукция из натурального меха
	НепроверяемыеРеквизиты.Добавить("GLNОрганизации");
	НепроверяемыеРеквизиты.Добавить("Товары.ВидМеха");
	
	// Пиво
	НепроверяемыеРеквизиты.Добавить("Товары.Цена");
	НепроверяемыеРеквизиты.Добавить("Товары.СуммаАкциза");
	
	ОперацииМаркировки = ИнтеграцияИСМПСлужебныйКлиентСервер.ОперацииМаркировки(Операция);
	
	ОбязательныеРеквизиты = Новый Массив;
	
	Для Каждого СтрокаТовары Из Товары Цикл
		Если СтрокаТовары.Количество = 0
			И СтрокаТовары.КоличествоПотребительскихУпаковок = 0 Тогда
			ТекстСообщения = СтрШаблон(
				НСтр(
					"ru = 'В строке %1 табличной части Товары не заполнено поле ""Количество""'"),
					СтрокаТовары.НомерСтроки);
			ОбщегоНазначения.СообщитьПользователю(ТекстСообщения,
				ЭтотОбъект,
				ОбщегоНазначенияКлиентСервер.ПутьКТабличнойЧасти(
					"Товары", СтрокаТовары.НомерСтроки, "КоличествоУпаковок"),,
				Отказ);
		КонецЕсли;
	КонецЦикла;
	
	ЭтоШины = (ВидПродукции = ПредопределенноеЗначение("Перечисление.ВидыПродукцииИС.Шины"));
	
	ИспользуетсяДатаПроизводства = ВидПродукции = ПредопределенноеЗначение("Перечисление.ВидыПродукцииИС.БАДы")
		Или ВидПродукции = ПредопределенноеЗначение("Перечисление.ВидыПродукцииИС.КреслаКоляски")
		Или ВидПродукции = ПредопределенноеЗначение("Перечисление.ВидыПродукцииИС.Пиво")
		Или ВидПродукции = ПредопределенноеЗначение("Перечисление.ВидыПродукцииИС.БезалкогольноеПиво");
	
	Если ИспользуетсяДатаПроизводства
		И (ОперацииМаркировки.ЭтоОперацияНанесения Или ЗначениеЗаполнено(ОперацияНанесения)) Тогда
		ОбязательныеРеквизиты.Добавить("ДатаПроизводства");
	КонецЕсли;
	
	Если ОтчетПроизводственнойЛинии Тогда
		
		НепроверяемыеРеквизиты.Добавить("Товары");
		
		Если (ОперацииМаркировки.ЭтоОперацияНанесения Или ЗначениеЗаполнено(ОперацияНанесения))
			И (ВидПродукции = Перечисления.ВидыПродукцииИС.МолочнаяПродукцияПодконтрольнаяВЕТИС
				Или ВидПродукции = Перечисления.ВидыПродукцииИС.МолочнаяПродукцияБезВЕТИС) Тогда
			
			ОбязательныеРеквизиты.Добавить("СрокГодности");
			
		КонецЕсли;
		
		Если Операция = Перечисления.ВидыОперацийИСМП.ВводВОборотПроизводствоРФ
			Или Операция = Перечисления.ВидыОперацийИСМП.ВводВОборотПроизводствоВнеЕАЭС
			Или Операция = Перечисления.ВидыОперацийИСМП.ВводВОборотИмпортСФТС
			Или ОперацииМаркировки.ЭтоКонтрактноеПроизводство Тогда
			
			ОбязательныеРеквизиты.Добавить("КодТНВЭД");
			
			ТекущееСостояние = РегистрыСведений.СтатусыДокументовИСМП.ТекущееСостояние(Ссылка);
			СтатусИСМП = ТекущееСостояние.Статус;
			
			Если Не ЗначениеЗаполнено(ОперацияНанесения) Или ДополнятьОбязательныеРеквизитыВводВОборот(СтатусИСМП) Тогда
				
				Если ВидПродукции = Перечисления.ВидыПродукцииИС.МолочнаяПродукцияПодконтрольнаяВЕТИС Тогда
					Если ИнтеграцияИСМПВЕТИС.ИспользуетсяПодсистемаВетИС() Тогда
						ОбязательныеРеквизиты.Добавить("ИдентификаторПроисхожденияВЕТИС");
					Иначе
						ОбязательныеРеквизиты.Добавить("ИдентификаторПроисхожденияВЕТИССтрокой");
					КонецЕсли;
				КонецЕсли;
				
				Если Операция = Перечисления.ВидыОперацийИСМП.ВводВОборотПроизводствоВнеЕАЭС
					Или Операция = Перечисления.ВидыОперацийИСМП.ВводВОборотИмпортСФТС
						И ПроверятьЗаполнениеДанныхДекларации(СтатусИСМП) Тогда
					
					ДополнитьОбязательныеРеквизитыДекларации(ОбязательныеРеквизиты);
					
					Если Операция = Перечисления.ВидыОперацийИСМП.ВводВОборотИмпортСФТС 
						И ИнтеграцияИСКлиентСервер.ЭтоМолочнаяПродукцияИСМП(ВидПродукции) Тогда
						ОбязательныеРеквизиты.Добавить("ДатаПроизводства");
					КонецЕсли;
					
				// ТАПИ: Для товарных групп БАДы и Шины параметр production_date может быть не заполнен как на уровне документа, 
				// так и в массиве "products_list"
				ИначеЕсли Не (ЭтоШины Или ИспользуетсяДатаПроизводства)
					И (ОперацииМаркировки.ЭтоПроизводствоРФ Или ОперацииМаркировки.ЭтоКонтрактноеПроизводство) Тогда
					ОбязательныеРеквизиты.Добавить("ДатаПроизводства");
				КонецЕсли;
				
			КонецЕсли;
			
		КонецЕсли;
		
	Иначе
		
		Если Операция = Перечисления.ВидыОперацийИСМП.ПодтверждениеПоступленияКИЗ Тогда
			ОбязательныеРеквизиты.Добавить("ДатаПервичногоДокумента");
			ОбязательныеРеквизиты.Добавить("НомерПервичногоДокумента");
			ОбязательныеРеквизиты.Добавить("GLNОрганизации");
			НепроверяемыеРеквизиты.Добавить("Товары");
		КонецЕсли;
		
		НепроверяемыеРеквизиты.Добавить("ДанныеОтчетаПроизводственнойЛинии");
		
		Если ИнтеграцияИСКлиентСервер.ЭтоПродукцияМОТП(ВидПродукции) Тогда
			
			ОбязательныеРеквизиты.Добавить("ИдентификаторПроизводственнойЛинии");
			
			Если ВидПродукции = Перечисления.ВидыПродукцииИС.Табак
				И (Операция = Перечисления.ВидыОперацийИСМП.Агрегация
					Или ОперацииМаркировки.ЭтоОперацияНанесения) Тогда
				
				НепроверяемыеРеквизиты.Добавить("Товары.Номенклатура");
				НепроверяемыеРеквизиты.Добавить("Товары.Характеристика");
				
				НачалоGTINМаркировкиОстатков = ИнтеграцияИСМПСлужебныйКлиентСервер.НачалоGTINМаркировкиОстатков();
				
				Для Каждого СтрокаТовары Из Товары Цикл
					Если Не ЗначениеЗаполнено(СтрокаТовары.Номенклатура)
						И Не СтрНачинаетсяС(СтрокаТовары.GTIN, НачалоGTINМаркировкиОстатков)Тогда
						ТекстСообщения = СтрШаблон(
							НСтр(
								"ru = 'В строке %1 табличной части Товары не заполнено поле Номенклатура'"),
								СтрокаТовары.НомерСтроки);
						ОбщегоНазначения.СообщитьПользователю(ТекстСообщения,
							ЭтотОбъект,
							ОбщегоНазначенияКлиентСервер.ПутьКТабличнойЧасти(
								"Товары", СтрокаТовары.НомерСтроки, "Номенклатура"),,
							Отказ);
					КонецЕсли;
				КонецЦикла;
				
			КонецЕсли;
			
		ИначеЕсли ИнтеграцияИСПовтИсп.ЭтоПродукцияИСМП(ВидПродукции) Тогда
			НепроверяемыеРеквизиты.Добавить("ИдентификаторПроизводственнойЛинии");
			Если Операция = Перечисления.ВидыОперацийИСМП.ВводВОборотПроизводствоВнеЕАЭС Тогда
				ТекущееСостояние = РегистрыСведений.СтатусыДокументовИСМП.ТекущееСостояние(Ссылка);
				СтатусИСМП = ТекущееСостояние.Статус;
				Если ВариантВыполненияАгрегации <> Перечисления.ВариантыВыполненияАгрегацииИСМП.ПередВводомВОборот
					 И (Не ЗначениеЗаполнено(ОперацияНанесения)
					    Или (ЗначениеЗаполнено(ОперацияНанесения) И ДополнятьОбязательныеРеквизитыВводВОборот(СтатусИСМП)))
					 Или ВариантВыполненияАгрегации = Перечисления.ВариантыВыполненияАгрегацииИСМП.ПередВводомВОборот
					     И СтатусИСМП = Перечисления.СтатусыОбработкиМаркировкиТоваровИСМП.КодыМаркировкиАгрегированы Тогда
					ДополнитьОбязательныеРеквизитыДекларации(ОбязательныеРеквизиты);
				КонецЕсли;
			ИначеЕсли Операция = Перечисления.ВидыОперацийИСМП.ВводВОборотПроизводствоРФПоДоговору
				Или Операция = Перечисления.ВидыОперацийИСМП.ВводВОборотПроизводствоРФПоДоговоруНаСторонеЗаказчика Тогда
				ОбязательныеРеквизиты.Добавить("Контрагент");
				Если Не (ЭтоШины Или ИспользуетсяДатаПроизводства) Тогда
					ТекущееСостояние = РегистрыСведений.СтатусыДокументовИСМП.ТекущееСостояние(Ссылка);
					СтатусИСМП = ТекущееСостояние.Статус;
					Если Не ЗначениеЗаполнено(ОперацияНанесения) Или ДополнятьОбязательныеРеквизитыВводВОборот(СтатусИСМП) Тогда
						ОбязательныеРеквизиты.Добавить("ДатаПроизводства");
					КонецЕсли;
				КонецЕсли;
			ИначеЕсли Операция = Перечисления.ВидыОперацийИСМП.ВводВОборотПроизводствоРФ
				И Не (ЭтоШины Или ИспользуетсяДатаПроизводства) Тогда
				ТекущееСостояние = РегистрыСведений.СтатусыДокументовИСМП.ТекущееСостояние(Ссылка);
				СтатусИСМП = ТекущееСостояние.Статус;
				Если Не ЗначениеЗаполнено(ОперацияНанесения) Или ДополнятьОбязательныеРеквизитыВводВОборот(СтатусИСМП) Тогда
					ОбязательныеРеквизиты.Добавить("ДатаПроизводства");
				КонецЕсли;
			ИначеЕсли Операция = Перечисления.ВидыОперацийИСМП.ВводВОборотТрансграничнаяТорговля Тогда
				ОбязательныеРеквизиты.Добавить("СтранаПроисхождения");
				ОбязательныеРеквизиты.Добавить("ДатаИмпорта");
				ОбязательныеРеквизиты.Добавить("ДатаПервичногоДокумента");
				ОбязательныеРеквизиты.Добавить("НомерПервичногоДокумента");
				ОбязательныеРеквизиты.Добавить("Контрагент");
				
				// Пиво: требуется цена и сумма акциза.
				Если ВидПродукции = Перечисления.ВидыПродукцииИС.Пиво Тогда
					
					ОбязательныеРеквизиты.Добавить("Товары.Цена");
					ОбязательныеРеквизиты.Добавить("Товары.СуммаАкциза");
					Для Каждого СтрокаТовары Из Товары Цикл
						Если Не ЗначениеЗаполнено(СтрокаТовары.ВидДокументаСертификации) Тогда
							ТекстСообщения = СтрШаблон(
								НСтр(
									"ru = 'В строке %1 табличной части Товары не заполнено поле Сертификация'"),
									СтрокаТовары.НомерСтроки);
							ОбщегоНазначения.СообщитьПользователю(ТекстСообщения,
								ЭтотОбъект,
								ОбщегоНазначенияКлиентСервер.ПутьКТабличнойЧасти(
									"Товары", СтрокаТовары.НомерСтроки, "Сертификация"),,
								Отказ);
						КонецЕсли;
					КонецЦикла;
					
				КонецЕсли;
				
			ИначеЕсли Операция = Перечисления.ВидыОперацийИСМП.ВводВОборотМаркировкаОстатков Тогда
				
				НепроверяемыеРеквизиты.Добавить("Товары.Номенклатура");
				НепроверяемыеРеквизиты.Добавить("Товары.Характеристика");
				
				Для Каждого СтрокаТовары Из Товары Цикл
					Если Не ЗначениеЗаполнено(СтрокаТовары.GTIN)
						И Не ЗначениеЗаполнено(СтрокаТовары.Номенклатура) Тогда
						ТекстСообщения = СтрШаблон(
							НСтр(
								"ru = 'В строке %1 табличной части Товары не заполнено поле GTIN'"),
								СтрокаТовары.НомерСтроки);
						ОбщегоНазначения.СообщитьПользователю(ТекстСообщения,
							ЭтотОбъект,
							ОбщегоНазначенияКлиентСервер.ПутьКТабличнойЧасти(
								"Товары", СтрокаТовары.НомерСтроки, "GTIN"),,
							Отказ);
					КонецЕсли;
				КонецЦикла;
				
			ИначеЕсли Операция = Перечисления.ВидыОперацийИСМП.Агрегация Тогда
				
				НепроверяемыеРеквизиты.Добавить("Товары.Номенклатура");
				НепроверяемыеРеквизиты.Добавить("Товары.Характеристика");
				
				НачалоGTINМаркировкиОстатков = ИнтеграцияИСМПСлужебныйКлиентСервер.НачалоGTINМаркировкиОстатков();
				
				Для Каждого СтрокаТовары Из Товары Цикл
					Если Не ЗначениеЗаполнено(СтрокаТовары.Номенклатура)
						И Не СтрНачинаетсяС(СтрокаТовары.GTIN, НачалоGTINМаркировкиОстатков)Тогда
						ТекстСообщения = СтрШаблон(
							НСтр(
								"ru = 'В строке %1 табличной части Товары не заполнено поле Номенклатура'"),
								СтрокаТовары.НомерСтроки);
						ОбщегоНазначения.СообщитьПользователю(ТекстСообщения,
							ЭтотОбъект,
							ОбщегоНазначенияКлиентСервер.ПутьКТабличнойЧасти(
								"Товары", СтрокаТовары.НомерСтроки, "Номенклатура"),,
							Отказ);
					КонецЕсли;
				КонецЦикла;
				
			КонецЕсли;
			
			// Специфика молочной продукции: нужен срок годности для операций нанесения
			Если ИнтеграцияИСКлиентСервер.ЭтоМолочнаяПродукцияИСМП(ВидПродукции) Тогда
				Если (ОперацииМаркировки.ЭтоОперацияНанесения Или ЗначениеЗаполнено(ОперацияНанесения)) Тогда
					ОбязательныеРеквизиты.Добавить("Товары.СрокГодности");
				КонецЕсли;
			КонецЕсли;
			
			// Специфика молочной продукции: нужен идентификатор ВЕТИС для операций ввода в оборот
			Если ВидПродукции = Перечисления.ВидыПродукцииИС.МолочнаяПродукцияПодконтрольнаяВЕТИС Тогда
				Если ОперацииМаркировки.ТребуетсяЗаполнениеИдентификаторовПримененияВЕТИС Тогда
					ОбязательныеРеквизиты.Добавить("Товары.ИдентификаторПроисхожденияВЕТИС");
				КонецЕсли;
			КонецЕсли;
			
		КонецЕсли;
		
		ИнтеграцияИСМППереопределяемый.ПриОпределенииОбработкиПроверкиЗаполнения(ЭтотОбъект, Отказ, ПроверяемыеРеквизиты, НепроверяемыеРеквизиты);
		
		Если Операция = Перечисления.ВидыОперацийИСМП.ВводВОборотМаркировкаОстатков
			Или Операция = Перечисления.ВидыОперацийИСМП.ВводВОборотПолучениеПродукцииОтФизическихЛиц
			Или Операция = Перечисления.ВидыОперацийИСМП.Агрегация
			Или ИнтеграцияИСКлиентСервер.ЭтоПродукцияМОТП(ВидПродукции)
			Или ОперацииМаркировки.ЭтоОперацияНанесения Тогда
			НепроверяемыеРеквизиты.Добавить("Товары.КодТНВЭД");
		КонецЕсли;
		
		Если Операция = Перечисления.ВидыОперацийИСМП.ВводВОборотИмпортСФТС Тогда
			НепроверяемыеРеквизиты.Добавить("Товары.Сертификация");
			ОбязательныеРеквизиты.Добавить("ВариантЗаполненияДекларации");
			Если ВариантЗаполненияДекларации = Перечисления.ВариантыЗаполненияДекларацииИСМП.АТК Тогда
				ОбязательныеРеквизиты.Добавить("ВариантФормированияАТКИСМП");
			КонецЕсли;
			
			ТекущееСостояние = РегистрыСведений.СтатусыДокументовИСМП.ТекущееСостояние(Ссылка);
			СтатусИСМП = ТекущееСостояние.Статус;
			Если СтатусИСМП = Перечисления.СтатусыОбработкиМаркировкиТоваровИСМП.КодыАТКСформированы 
				Или СтатусИСМП = Перечисления.СтатусыОбработкиМаркировкиТоваровИСМП.КодыМаркировкиАгрегированы 
				Или ВариантЗаполненияДекларации = Перечисления.ВариантыЗаполненияДекларацииИСМП.КодыМаркировки
					И ((Не ЗначениеЗаполнено(ОперацияНанесения) И СтатусИСМП = Перечисления.СтатусыОбработкиМаркировкиТоваровИСМП.Черновик)
					Или (ЗначениеЗаполнено(ОперацияНанесения) И СтатусИСМП = Перечисления.СтатусыОбработкиМаркировкиТоваровИСМП.КодыМаркировкиНанесены)) Тогда
				
				ДополнитьОбязательныеРеквизитыДекларации(ОбязательныеРеквизиты);
				
			КонецЕсли;
			
			Если (Не ЗначениеЗаполнено(ОперацияНанесения) Или ДополнятьОбязательныеРеквизитыВводВОборот(СтатусИСМП))
				 И ИнтеграцияИСКлиентСервер.ЭтоМолочнаяПродукцияИСМП(ВидПродукции) Тогда
				ОбязательныеРеквизиты.Добавить("ДатаПроизводства");
			КонецЕсли;
			
		ИначеЕсли Операция = Перечисления.ВидыОперацийИСМП.ВводВОборотИмпортСФТСМех Тогда
			
			НепроверяемыеРеквизиты.Добавить("Товары.Сертификация");
			
			ДополнитьОбязательныеРеквизитыДекларации(ОбязательныеРеквизиты);
			
			КодТНВЭДПрочиеПредметыОдеждыИСМП = ИнтеграцияИСМПКлиентСервер.КодТНВЭДПрочиеПредметыОдеждыИСМП();
			
			Для Каждого СтрокаТовары Из Товары Цикл
				Если СтрокаТовары.КодТНВЭД = КодТНВЭДПрочиеПредметыОдеждыИСМП
					И Не ЗначениеЗаполнено(СтрокаТовары.ВидМеха) Тогда
					ТекстСообщения = СтрШаблон(
						НСтр(
							"ru = 'В строке %1 табличной части Товары не заполнено поле Вид меха'"),
							СтрокаТовары.НомерСтроки);
					ОбщегоНазначения.СообщитьПользователю(ТекстСообщения,
						ЭтотОбъект,
						ОбщегоНазначенияКлиентСервер.ПутьКТабличнойЧасти(
							"Товары", СтрокаТовары.НомерСтроки, "ВидМеха"),,
						Отказ);
				КонецЕсли;
			КонецЦикла;
			
		КонецЕсли;
		
		Если Операция = Перечисления.ВидыОперацийИСМП.Агрегация Тогда
			Запрос = Новый Запрос;
			Запрос.УстановитьПараметр("Ссылка", ШтрихкодыУпаковок.ВыгрузитьКолонку("ШтрихкодУпаковки"));
			Запрос.Текст = 
			"ВЫБРАТЬ
			|	ШтрихкодыУпаковокТоваров.ЗначениеШтрихкода КАК ЗначениеШтрихкода
			|ИЗ
			|	Справочник.ШтрихкодыУпаковокТоваров КАК ШтрихкодыУпаковокТоваров
			|ГДЕ
			|	ШтрихкодыУпаковокТоваров.Ссылка В (&Ссылка)
			|	И ШтрихкодыУпаковокТоваров.ТипУпаковки = ЗНАЧЕНИЕ(Перечисление.ТипыУпаковок.МаркированныйТовар)";
			Выборка = Запрос.Выполнить().Выбрать();
			Если Выборка.Количество() Тогда
				ТекстСообщения = НСтр("ru = 'Для операции Агрегация требуется указание упаковок.
				                            |Откройте форму проверки и подбора и агрегируйте все коды маркировки.'");
				ОбщегоНазначения.СообщитьПользователю(ТекстСообщения,
					ЭтотОбъект,
					"Операция",,
					Отказ);
			КонецЕсли;
		КонецЕсли;
		
		Если Операция <> Перечисления.ВидыОперацийИСМП.ПодтверждениеПоступленияКИЗ Тогда
			ИнтеграцияИСМПСлужебный.ПроверитьЗаполнениеШтрихкодовУпаковок(ЭтотОбъект, Отказ);
		КонецЕсли;
		
	КонецЕсли;
	
	НепроверяемыеРеквизиты = ОбщегоНазначенияКлиентСервер.РазностьМассивов(НепроверяемыеРеквизиты, ОбязательныеРеквизиты);
	
	ОбщегоНазначения.УдалитьНепроверяемыеРеквизитыИзМассива(ПроверяемыеРеквизиты, НепроверяемыеРеквизиты);
	
	ИнтеграцияИСМП.ПроверкаЗаполненияКоличестваПотребительскихУпаковок(ЭтотОбъект, Отказ);
	
КонецПроцедуры

Процедура ПередЗаписью(Отказ, РежимЗаписи, РежимПроведения)
	
	Если ОбменДанными.Загрузка Тогда
		Возврат;
	КонецЕсли;
	
	ОбновлениеИнформационнойБазы.ПроверитьОбъектОбработан(ЭтотОбъект);
	
	Если ДанныеОтчетаПроизводственнойЛинии.Количество() > ИнтеграцияИСМПСлужебныйКлиентСервер.МаксимальноеКоличествоЗаписейВТабличнойЧасти() Тогда
		
		Если ЭтоНовый() Тогда
			СсылкаНаДокумент = Документы.МаркировкаТоваровИСМП.ПолучитьСсылку();
			УстановитьСсылкуНового(СсылкаНаДокумент);
		Иначе
			СсылкаНаДокумент = Ссылка;
		КонецЕсли;
		
		Блокировка                = Новый БлокировкаДанных();
		ЭлементБлокировки         = Блокировка.Добавить("РегистрСведений.ДанныеОтчетаПроизводственнойЛинииИСМП");
		ЭлементБлокировки.Режим   = РежимБлокировкиДанных.Исключительный;
		ЭлементБлокировки.УстановитьЗначение("Документ", СсылкаНаДокумент);
		
		Блокировка.Заблокировать();
		
		НаборЗаписей = РегистрыСведений.ДанныеОтчетаПроизводственнойЛинииИСМП.СоздатьНаборЗаписей();
		НаборЗаписей.Отбор.Документ.Установить(СсылкаНаДокумент, Истина);
		КлючЗаписи = 1;
		Для Каждого СтрокаТЧ Из ДанныеОтчетаПроизводственнойЛинии Цикл
			
			СтрокаНабора = НаборЗаписей.Добавить();
			ЗаполнитьЗначенияСвойств(СтрокаНабора, СтрокаТЧ);
			СтрокаНабора.Документ   = СсылкаНаДокумент;
			СтрокаНабора.КлючЗаписи = КлючЗаписи;
			
			КлючЗаписи = КлючЗаписи + 1;
			
		КонецЦикла;
		НаборЗаписей.Записать(Истина);
		
		ДанныеОтчетаПроизводственнойЛинии.Очистить();
		
	КонецЕсли;
	
	ДополнительныеСвойства.Вставить("ЭтоНовый",    ЭтоНовый());
	ДополнительныеСвойства.Вставить("РежимЗаписи", РежимЗаписи);
	
	ИнтеграцияИСПереопределяемый.ПередЗаписьюОбъекта(ЭтотОбъект, Отказ, РежимЗаписи, РежимПроведения);
	
КонецПроцедуры

Процедура ПриКопировании(ОбъектКопирования)
	
	ДокументОснование   = Неопределено;
	ИдентификаторЗаявки = Неопределено;
	ШтрихкодыУпаковок.Очистить();
	ШтрихкодыАТК.Очистить();
	ИдентификаторПроизводственногоЗаказа = "";
	ИдентификаторПроизводственнойЛинии   = "";
	ХешСумма         = "";
	ДатаПроизводства = "";
	
	ДанныеОтчетаПроизводственнойЛинии.Очистить();
	ПроверятьСоставУпаковокПоДаннымИСМП = Ложь;
	Номенклатура                    = ИнтеграцияИС.ПустоеЗначениеОпределяемогоТипа("Номенклатура");
	Характеристика                  = ИнтеграцияИС.ПустоеЗначениеОпределяемогоТипа("ХарактеристикаНоменклатуры");
	Серия                           = ИнтеграцияИС.ПустоеЗначениеОпределяемогоТипа("СерияНоменклатуры");
	ИдентификаторПроисхожденияВЕТИС = ИнтеграцияИС.ПустоеЗначениеОпределяемогоТипа("ИдентификаторПроисхожденияВЕТИС");
	
	СрокГодности                           = "";
	СкоропортящаясяПродукция               = Ложь;
	ИдентификаторПроисхожденияВЕТИССтрокой = "";
	
	СоздаватьШтрихкодыУпаковок = Ложь;
	ВариантВыполненияАгрегации = Перечисления.ВариантыВыполненияАгрегацииИСМП.ПустаяСсылка();
	Количество = 0;
	ОперацияНанесенияТолькоДляНаборов = Ложь;
	
	ПроверитьАктуальностьОперации();
	ПроверитьАктуальностьВариантаВыполненияАгрегации();
КонецПроцедуры

Процедура ПриЗаписи(Отказ)
	
	Если ОбменДанными.Загрузка Тогда
		Возврат;
	КонецЕсли;
	ИнтеграцияИСМП.ЗаписатьСтатусДокументаПоУмолчанию(ЭтотОбъект);
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

#Область ОбработкаЗаполнения

Процедура ЗаполнитьОбъектПоСтатистике()
	
	ДанныеСтатистики = ЗаполнениеОбъектовПоСтатистикеИСМП.ДанныеЗаполненияМаркировкиТоваровИСМП(Организация);
	
	Для Каждого КлючИЗначение Из ДанныеСтатистики Цикл
		ЗаполнениеОбъектовПоСтатистикеИСМП.ЗаполнитьПустойРеквизит(ЭтотОбъект, ДанныеСтатистики, КлючИЗначение.Ключ);
	КонецЦикла;
	
	ПроверитьАктуальностьОперации();
	
	ЗаполнениеОбъектовПоСтатистикеИСМП.ЗаполнитьДанныеПоТоварамМаркировкиТоваровИСМП(
		Товары,
		ЭтотОбъект);
	
КонецПроцедуры

Процедура ЗаполнитьТабличнуюЧастьТоварыСрокомГодностиВЕТИС()
	
	Если ВидПродукции <> Перечисления.ВидыПродукцииИС.МолочнаяПродукцияПодконтрольнаяВЕТИС Тогда
		Возврат;
	КонецЕсли;
	
	Идентификаторы = Товары.Выгрузить(,"ИдентификаторПроисхожденияВЕТИС").ВыгрузитьКолонку("ИдентификаторПроисхожденияВЕТИС");
	ДанныеИдентификаторовПроисхождения = ИнтеграцияИСМПВЕТИС.ДанныеИдентификаторовПроисхождения(Идентификаторы);
	
	Для Каждого СтрокаТовары Из Товары Цикл
		
		Если Не ЗначениеЗаполнено(СтрокаТовары.ИдентификаторПроисхожденияВЕТИС) Тогда
			Продолжить;
		КонецЕсли;
		
		ДанныеПоИдентификатору = ДанныеИдентификаторовПроисхождения.Получить(СтрокаТовары.ИдентификаторПроисхожденияВЕТИС);
		Если ДанныеПоИдентификатору = Неопределено Тогда
			Продолжить;
		КонецЕсли;
		
		СтрокаТовары.СрокГодности = ДанныеПоИдентификатору.СрокГодности;
		
	КонецЦикла;
	
КонецПроцедуры

Процедура ЗаполнитьСрокГодностиВЕТИС()
	
	Если ВидПродукции <> Перечисления.ВидыПродукцииИС.МолочнаяПродукцияПодконтрольнаяВЕТИС Тогда
		Возврат;
	КонецЕсли;
	
	Если Не ИнтеграцияИСМПВЕТИС.ИспользуетсяПодсистемаВетИС() Тогда
		Возврат;
	КонецЕсли;
	
	СрокГодности    = '00010101';
	СкоропортящаясяПродукция = Ложь;
	
	Если ЗначениеЗаполнено(ИдентификаторПроисхожденияВЕТИС) Тогда
		Идентификаторы = ОбщегоНазначенияКлиентСервер.ЗначениеВМассиве(ИдентификаторПроисхожденияВЕТИС);
		ДанныеИдентификаторовПроисхождения = ИнтеграцияИСМПВЕТИС.ДанныеИдентификаторовПроисхождения(Идентификаторы);
		
		ДанныеПоИдентификатору = ДанныеИдентификаторовПроисхождения.Получить(ИдентификаторПроисхожденияВЕТИС);
		Если ДанныеПоИдентификатору = Неопределено Тогда
			Возврат;
		КонецЕсли;
		
		СрокГодности = ДанныеПоИдентификатору.СрокГодности;
		СкоропортящаясяПродукция = ДанныеПоИдентификатору.СкоропортящаясяПродукция;
		ИдентификаторПроисхожденияВЕТИССтрокой = ДанныеПоИдентификатору.Идентификатор;

	КонецЕсли;
	
КонецПроцедуры

Процедура ПроверитьАктуальностьОперации()
	
	Если Операция = Перечисления.ВидыОперацийИСМП.ВводВОборотМаркировкаОстатков
		И Не ИнтеграцияИСКлиентСервер.ВидПродукцииПодлежитМаркировкеОстатков(ВидПродукции) Тогда
		Операция = Неопределено;
		Товары.Очистить();
	КонецЕсли;
	
	ЭтоМех = ВидПродукции = Перечисления.ВидыПродукцииИС.ПродукцияИзНатуральногоМеха;
	Если ИнтеграцияИСМПКлиентСервер.ОперацииНанесенияКодовМаркировки().Найти(Операция) <> Неопределено
		И ИнтеграцияИСМПКлиентСервер.ОперацииНанесенияКодовМаркировки(Ложь, ЭтоМех).Найти(Операция) = Неопределено Тогда
		Операция = Неопределено;
	КонецЕсли;
	
КонецПроцедуры

Процедура ПроверитьАктуальностьВариантаВыполненияАгрегации()
	
	Если Операция = Перечисления.ВидыОперацийИСМП.ВводВОборотИмпортСФТС
		И ВариантЗаполненияДекларации = Перечисления.ВариантыЗаполненияДекларацииИСМП.КодыУпаковок Тогда
		ВариантВыполненияАгрегации = Перечисления.ВариантыВыполненияАгрегацииИСМП.ПередВводомВОборот;
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

Функция ДополнятьОбязательныеРеквизитыВводВОборот(СтатусИСМП)
	
	Если СтатусИСМП = Перечисления.СтатусыОбработкиМаркировкиТоваровИСМП.Черновик
		Или СтатусИСМП = Перечисления.СтатусыОбработкиМаркировкиТоваровИСМП.ОтчетКПередаче
		Или СтатусИСМП = Перечисления.СтатусыОбработкиМаркировкиТоваровИСМП.ОтчетОбрабатывается
		Или СтатусИСМП = Перечисления.СтатусыОбработкиМаркировкиТоваровИСМП.ОтчетОшибкаПередачи
		Или СтатусИСМП = Перечисления.СтатусыОбработкиМаркировкиТоваровИСМП.КодыМаркировкиНанесеныЧастично Тогда
		Возврат Ложь;
	КонецЕсли;
	
	Возврат Истина;
	
КонецФункции

Процедура ДополнитьОбязательныеРеквизитыДекларации(ОбязательныеРеквизиты)
	
	ОбязательныеРеквизиты.Добавить("ПринятоеРешение");
	ОбязательныеРеквизиты.Добавить("КодТаможенногоОргана");
	ОбязательныеРеквизиты.Добавить("ДатаДекларации");
	ОбязательныеРеквизиты.Добавить("РегистрационныйНомерДекларации");
	
КонецПроцедуры

Функция ПроверятьЗаполнениеДанныхДекларации(СтатусИСМП)
	
	Если СтатусИСМП = Перечисления.СтатусыОбработкиМаркировкиТоваровИСМП.КодыАТКСформированы 
		Или СтатусИСМП = Перечисления.СтатусыОбработкиМаркировкиТоваровИСМП.КодыМаркировкиАгрегированы 
		Или ВариантЗаполненияДекларации = Перечисления.ВариантыЗаполненияДекларацииИСМП.КодыМаркировки
			И ((Не ЗначениеЗаполнено(ОперацияНанесения) И СтатусИСМП = Перечисления.СтатусыОбработкиМаркировкиТоваровИСМП.Черновик)
				Или (ЗначениеЗаполнено(ОперацияНанесения) И СтатусИСМП = Перечисления.СтатусыОбработкиМаркировкиТоваровИСМП.КодыМаркировкиНанесены))
		Или ВариантЗаполненияДекларации = Перечисления.ВариантыЗаполненияДекларацииИСМП.КодыУпаковок
			И ВариантВыполненияАгрегации = Перечисления.ВариантыВыполненияАгрегацииИСМП.НеТребуется Тогда
		Возврат Истина;
	КонецЕсли;
	
	Возврат Ложь;
	
КонецФункции

#КонецОбласти

#КонецЕсли
