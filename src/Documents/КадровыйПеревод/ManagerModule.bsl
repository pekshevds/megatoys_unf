#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда
	
#Область ПрограммныйИнтерфейс

#Область ДляВызоваИзДругихПодсистем

// Конец СтандартныеПодсистемы.ВерсионированиеОбъектов

// СтандартныеПодсистемы.УправлениеДоступом

// См. УправлениеДоступомПереопределяемый.ПриЗаполненииСписковСОграничениемДоступа.
Процедура ПриЗаполненииОграниченияДоступа(Ограничение) Экспорт
	Ограничение.Текст =
	"РазрешитьЧтениеИзменение
	|ГДЕ
	|	ЗначениеРазрешено(Организация)
	|	И ЗначениеРазрешено(ФизическоеЛицо)";
КонецПроцедуры

// СтандартныеПодсистемы.ВерсионированиеОбъектов

// Определяет настройки объекта для подсистемы ВерсионированиеОбъектов.
//
// Параметры:
//  Настройки - Структура - настройки подсистемы.
Процедура ПриОпределенииНастроекВерсионированияОбъектов(Настройки) Экспорт

КонецПроцедуры

// Конец СтандартныеПодсистемы.УправлениеДоступом

#КонецОбласти

#КонецОбласти

#Область СлужебныйПрограммныйИнтерфейс

// Возвращает описание состава документа
//
// Возвращаемое значение:
//  Структура - см. ЗарплатаКадрыСоставДокументов.НовоеОписаниеСоставаОбъекта.
Функция ОписаниеСоставаОбъекта() Экспорт
	Возврат ЗарплатаКадрыСоставДокументов.ОписаниеСоставаОбъектаФизическоеЛицоВШапке();
КонецФункции

#Область ОбработчикиРегистрацииФизическихЛиц

Функция ПринадлежностиОбъекта() Экспорт
	Возврат ОбщегоНазначенияКлиентСервер.ЗначениеВМассиве("Организация");
КонецФункции

#КонецОбласти

#Область ОбработчикиПравилРегистрации

Процедура ЗарегистрироватьИзмененияПослеОбработки(ИмяПланаОбмена, ПРО, Объект, Отказ, Получатели, Выгрузка) Экспорт
	
	Если Выгрузка Или Объект.ОбменДанными.Загрузка Или (Объект.ДополнительныеСвойства.Свойство("Выгрузка") И Объект.ДополнительныеСвойства.Выгрузка) Тогда
		Возврат;
	КонецЕсли;
	
	Если ЗначениеЗаполнено(Объект.Сотрудник) И ОбщегоНазначения.СсылкаСуществует(Объект.Сотрудник) Тогда
		ПланыОбмена.ЗарегистрироватьИзменения(Получатели, Объект.Сотрудник);
	КонецЕсли;
	
КонецПроцедуры

Процедура ВыполнитьПравилаРегистрацииРегистров(ИмяПланаОбмена, Отказ, Получатели, СтандартнаяОбработка) Экспорт
	
КонецПроцедуры

#КонецОбласти

#Область ОбменДанными

Процедура ЗарегистрироватьЗависимыеОбъектыПослеЗагрузкиОбменаДанными(МассивДокументов) Экспорт
	
	// Зарегистрируем сотрудников по виду документа, изменяющего принадлежность к организации
	Для Каждого ДокументОбъект Из МассивДокументов Цикл
		Если ЗначениеЗаполнено(ДокументОбъект.Сотрудник) И ОбщегоНазначения.СсылкаСуществует(ДокументОбъект.Сотрудник) Тогда
			ПланыОбмена.ЗарегистрироватьИзменения(ДокументОбъект.ОбменДанными.Получатели, ДокументОбъект.Сотрудник);
		КонецЕсли;
		
		СинхронизацияДанныхЗарплатаКадры.ПринадлежностьФизлицаОрганизацииПриЗаписи(ДокументОбъект);
		
	КонецЦикла;
	
КонецПроцедуры

#КонецОбласти

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

// Заполняет список команд печати.
// 
// Параметры:
//   КомандыПечати - ТаблицаЗначений - состав полей см. в функции УправлениеПечатью.СоздатьКоллекциюКомандПечати.
//
Процедура ДобавитьКомандыПечати(КомандыПечати) Экспорт
	
	// Приказ о переводе
	КомандаПечати = КомандыПечати.Добавить();
	КомандаПечати.Обработчик = "УправлениеПечатьюБЗККлиент.ВыполнитьКомандуПечати";
	КомандаПечати.Идентификатор = "ПФ_MXL_Т5";
	КомандаПечати.Представление = НСтр("ru = 'Приказ о переводе (Т-5)'");
	КомандаПечати.ПроверкаПроведенияПередПечатью = Истина;
	
КонецПроцедуры

Процедура Печать(МассивОбъектов, ПараметрыПечати, КоллекцияПечатныхФорм, ОбъектыПечати, ПараметрыВывода, СписокСотрудников = Неопределено) Экспорт
	
	ПараметрыВывода.ДоступнаПечатьПоКомплектно = Истина;
	Если УправлениеПечатью.НужноПечататьМакет(КоллекцияПечатныхФорм, "ПФ_MXL_Т5") Тогда
		
		ДанныеСсылок = Новый ДеревоЗначений;
		ДанныеСсылок.Колонки.Добавить("СсылкаНаОбъект");
		ДанныеСсылок.Колонки.Добавить("РаботаОрганизацияПрежняяНаименованиеСокращенное");
		ДанныеСсылок.Колонки.Добавить("РаботаОрганизацияПрежняяКодПоОКПО");
		ДанныеСсылок.Колонки.Добавить("СсылкаНаОбъектДата");
		ДанныеСсылок.Колонки.Добавить("СсылкаНаОбъектНомерНаПечать");
		ДанныеСсылок.Колонки.Добавить("РаботаДатаНачалаПеревода");
		ДанныеСсылок.Колонки.Добавить("РаботаСотрудник");
		ДанныеСсылок.Колонки.Добавить("РаботаСотрудникТабельныйНомерНаПечать");
		ДанныеСсылок.Колонки.Добавить("ЛичныеДанныеФИОФамилияИмяОтчествоВВинительномПадеже");
		ДанныеСсылок.Колонки.Добавить("РаботаВидПеревода");
		ДанныеСсылок.Колонки.Добавить("РаботаПодразделениеПрежнееНаПечать");
		ДанныеСсылок.Колонки.Добавить("РаботаДолжностьПрежняя");
		ДанныеСсылок.Колонки.Добавить("РаботаПричинаПеревода");
		ДанныеСсылок.Колонки.Добавить("РаботаПодразделениеНаПечать");
		ДанныеСсылок.Колонки.Добавить("РаботаДолжность");
		ДанныеСсылок.Колонки.Добавить("РаботаСведенияОбОплатеТрудаТарифнаяСтавкаНаПечать");
		ДанныеСсылок.Колонки.Добавить("РаботаОснованиеПеревода");
		ДанныеСсылок.Колонки.Добавить("РаботаТрудовойДоговорДатаОформленияНаПечать");
		ДанныеСсылок.Колонки.Добавить("РаботаТрудовойДоговорНомер");
		ДанныеСсылок.Колонки.Добавить("СсылкаНаОбъектДолжностьРуководителя");
		ДанныеСсылок.Колонки.Добавить("СсылкаНаОбъектРуководительРасшифровкаПодписи");
		ДанныеСсылок.Колонки.Добавить("СсылкаНаОбъектДатаОзнакомленияРаботника");
		
		Запрос = Новый Запрос;
		Запрос.МенеджерВременныхТаблиц = Новый МенеджерВременныхТаблиц;
		
		Запрос.Параметры.Вставить("МассивОбъектов", МассивОбъектов);
		
		Запрос.Текст =
			"ВЫБРАТЬ РАЗРЕШЕННЫЕ
			|	КадровыйПеревод.Ссылка КАК Ссылка,
			|	КадровыйПеревод.ДатаНачала КАК Дата,
			|	КадровыйПеревод.Ссылка КАК СсылкаНаОбъект,
			|	КадровыйПеревод.Организация.НаименованиеСокращенное КАК РаботаОрганизацияПрежняяНаименованиеСокращенное,
			|	КадровыйПеревод.Организация.КодПоОКПО КАК РаботаОрганизацияПрежняяКодПоОКПО,
			|	КадровыйПеревод.Сотрудник КАК РаботаСотрудник,
			|	КадровыйПеревод.Сотрудник.Код КАК РаботаСотрудникКод,
			|	КадровыйПеревод.ДатаНачала КАК РаботаДатаНачалаПеревода,
			|	КадровыйПеревод.Номер КАК СсылкаНаОбъектНомер,
			|	КадровыйПеревод.НомерПриказа КАК СсылкаНаОбъектНомерПриказа,
			|	КадровыйПеревод.Дата КАК СсылкаНаОбъектДата,
			|	КадровыйПеревод.Руководитель КАК СсылкаНаОбъектРуководитель,
			|	КадровыйПеревод.ДолжностьРуководителя КАК СсылкаНаОбъектДолжностьРуководителя,
			|	КадровыйПеревод.ОснованиеПеревода КАК РаботаОснованиеПеревода,
			|	КадровыйПеревод.ПричинаПеревода КАК РаботаПричинаПеревода
			|ПОМЕСТИТЬ ВТДанныеДокументовКадровыхПеремещений
			|ИЗ
			|	Документ.КадровыйПеревод КАК КадровыйПеревод
			|ГДЕ
			|	КадровыйПеревод.Ссылка В(&МассивОбъектов)
			|	И КадровыйПеревод.Проведен";
		
		Запрос.Выполнить();
	
		Запрос.Текст =
			"ВЫБРАТЬ
			|	ДанныеДокументов.РаботаСотрудник КАК Сотрудник,
			|	ДОБАВИТЬКДАТЕ(ДанныеДокументов.РаботаДатаНачалаПеревода, ДЕНЬ, -1) КАК Период
			|ПОМЕСТИТЬ ВТСотрудникиПериоды
			|ИЗ
			|	ВТДанныеДокументовКадровыхПеремещений КАК ДанныеДокументов
			|
			|ОБЪЕДИНИТЬ ВСЕ
			|
			|ВЫБРАТЬ
			|	ДанныеДокументов.РаботаСотрудник,
			|	ДанныеДокументов.РаботаДатаНачалаПеревода
			|ИЗ
			|	ВТДанныеДокументовКадровыхПеремещений КАК ДанныеДокументов";
		
		Запрос.Выполнить();
	
		ОписательВременныхТаблиц = КадровыйУчет.ОписательВременныхТаблицДляСоздатьВТКадровыеДанныеСотрудников(
			Запрос.МенеджерВременныхТаблиц, "ВТСотрудникиПериоды");
		
		ОписательВременныхТаблиц.ИмяВТКадровыеДанныеСотрудников = "ВТКадровыеДанныеСотрудниковДляТ5";
		
		КадровыйУчет.СоздатьВТКадровыеДанныеСотрудников(
			ОписательВременныхТаблиц,
			Истина,
			"ФИОПолные,Пол,Подразделение,Должность");

		ИменаПолейОтветственныхЛиц = Новый Массив;
		ИменаПолейОтветственныхЛиц.Добавить("СсылкаНаОбъектРуководитель");
		
		ЗарплатаКадры.СоздатьВТФИООтветственныхЛиц(Запрос.МенеджерВременныхТаблиц, Ложь, ИменаПолейОтветственныхЛиц, "ВТДанныеДокументовКадровыхПеремещений");
		
		Запрос.УстановитьПараметр("Постоянно", НСтр("ru='постоянно'"));
		
		Запрос.Текст =
			"ВЫБРАТЬ
			|	ДанныеДокументов.СсылкаНаОбъект КАК СсылкаНаОбъект,
			|	ДанныеДокументов.РаботаОрганизацияПрежняяНаименованиеСокращенное КАК РаботаОрганизацияПрежняяНаименованиеСокращенное,
			|	ДанныеДокументов.РаботаОрганизацияПрежняяКодПоОКПО КАК РаботаОрганизацияПрежняяКодПоОКПО,
			|	ДанныеДокументов.СсылкаНаОбъектДата КАК СсылкаНаОбъектДата,
			|	ДанныеДокументов.СсылкаНаОбъектНомер КАК СсылкаНаОбъектНомер,
			|	ДанныеДокументов.СсылкаНаОбъектНомерПриказа КАК СсылкаНаОбъектНомерПриказа,
			|	ДанныеДокументов.РаботаДатаНачалаПеревода КАК РаботаДатаНачалаПеревода,
			|	ДанныеДокументов.РаботаСотрудник КАК РаботаСотрудник,
			|	ДанныеДокументов.РаботаСотрудникКод КАК РаботаСотрудникКод,
			|	КадровыеДанныеСотрудниковНовые.ФИОПолные КАК ЛичныеДанныеФИОПолные,
			|	КадровыеДанныеСотрудниковНовые.Пол КАК ЛичныеДанныеПол,
			|	&Постоянно КАК РаботаВидПеревода,
			|	КадровыеДанныеСотрудниковПредыдущие.Подразделение КАК РаботаПодразделениеПрежнее,
			|	КадровыеДанныеСотрудниковПредыдущие.Должность КАК РаботаДолжностьПрежняя,
			|	ДанныеДокументов.РаботаПричинаПеревода КАК РаботаПричинаПеревода,
			|	КадровыеДанныеСотрудниковНовые.Подразделение КАК РаботаПодразделение,
			|	КадровыеДанныеСотрудниковНовые.Должность КАК РаботаДолжность,
			|	ДанныеДокументов.РаботаОснованиеПеревода КАК РаботаОснованиеПеревода,
			|	ДанныеДокументов.СсылкаНаОбъектДолжностьРуководителя КАК СсылкаНаОбъектДолжностьРуководителя,
			|	ФИООтветственныхЛиц.РасшифровкаПодписи КАК СсылкаНаОбъектРуководительРасшифровкаПодписи
			|ИЗ
			|	ВТДанныеДокументовКадровыхПеремещений КАК ДанныеДокументов
			|		ЛЕВОЕ СОЕДИНЕНИЕ ВТКадровыеДанныеСотрудниковДляТ5 КАК КадровыеДанныеСотрудниковПредыдущие
			|		ПО ДанныеДокументов.РаботаСотрудник = КадровыеДанныеСотрудниковПредыдущие.Сотрудник
			|			И ДанныеДокументов.РаботаДатаНачалаПеревода > КадровыеДанныеСотрудниковПредыдущие.Период
			|		ЛЕВОЕ СОЕДИНЕНИЕ ВТКадровыеДанныеСотрудниковДляТ5 КАК КадровыеДанныеСотрудниковНовые
			|		ПО ДанныеДокументов.РаботаСотрудник = КадровыеДанныеСотрудниковНовые.Сотрудник
			|			И ДанныеДокументов.РаботаДатаНачалаПеревода = КадровыеДанныеСотрудниковНовые.Период
			|		ЛЕВОЕ СОЕДИНЕНИЕ ВТФИООтветственныхЛиц КАК ФИООтветственныхЛиц
			|		ПО ДанныеДокументов.СсылкаНаОбъектРуководитель = ФИООтветственныхЛиц.ФизическоеЛицо
			|			И ДанныеДокументов.СсылкаНаОбъект = ФИООтветственныхЛиц.Ссылка
			|
			|УПОРЯДОЧИТЬ ПО
			|	СсылкаНаОбъект";
		
		Выборка = Запрос.Выполнить().Выбрать();
		Пока Выборка.СледующийПоЗначениюПоля("СсылкаНаОбъект") Цикл
			
			СтрокаСсылки = ДанныеСсылок.Строки.Добавить();
			ЗаполнитьЗначенияСвойств(СтрокаСсылки, Выборка);
			
			СтрокаСсылки.СсылкаНаОбъектНомерНаПечать = ЗарплатаКадрыОтчеты.НомерНаПечать(
				Выборка.СсылкаНаОбъектНомер, Выборка.СсылкаНаОбъектНомерПриказа);
			
			СтрокаСсылки.ЛичныеДанныеФИОФамилияИмяОтчествоВВинительномПадеже =
				ЗарплатаКадрыОтчеты.ПросклоненныеФИО(Выборка.ЛичныеДанныеФИОПолные, 4, Выборка.ЛичныеДанныеПол);
			
			СтрокаСсылки.РаботаСотрудникТабельныйНомерНаПечать = ЗарплатаКадрыОтчеты.ТабельныйНомерНаПечать(Выборка.РаботаСотрудникКод);
			СтрокаСсылки.РаботаПодразделениеПрежнееНаПечать = ЗарплатаКадрыОтчеты.ПодразделениеНаПечать(Выборка.РаботаПодразделениеПрежнее);
			СтрокаСсылки.РаботаПодразделениеНаПечать = ЗарплатаКадрыОтчеты.ПодразделениеНаПечать(Выборка.РаботаПодразделение);
			
			СтрокаСсылки.РаботаТрудовойДоговорДатаОформленияНаПечать = ЗарплатаКадрыОтчеты.ФорматДатыЧислоВКавычкахМесяцПрописью('00010101');
			СтрокаСсылки.РаботаТрудовойДоговорНомер = "_____";
			
			СтрокаСсылки.СсылкаНаОбъектДатаОзнакомленияРаботника = ЗарплатаКадрыОтчеты.ФорматДатыЧислоВКавычкахМесяцПрописью(СтрокаСсылки.СсылкаНаОбъектДата);
			
			Пока Выборка.Следующий() Цикл
				
				СтрокаСотрудника = СтрокаСсылки.Строки.Добавить();
				ЗаполнитьЗначенияСвойств(СтрокаСотрудника, СтрокаСсылки);
				
			КонецЦикла;
			
		КонецЦикла;
		
		ДокументРезультат = Новый ТабличныйДокумент;
		КадровыйУчет.ВывестиНаПечатьТ5(ПараметрыПечати, ДокументРезультат, ДанныеСсылок.Строки,
			УправлениеПечатью.МакетПечатнойФормы("ОбщийМакет.ПФ_MXL_Т5"), , ОбъектыПечати);
		
		УправлениеПечатью.ВывестиТабличныйДокументВКоллекцию(
			КоллекцияПечатныхФорм,
			"ПФ_MXL_Т5",
			НСтр("ru = 'Приказ о переводе (Т-5)'"),
			ДокументРезультат,,);
		
	КонецЕсли;
	
КонецПроцедуры

Функция ДанныеДляРегистрацииВУчетаСтажаПФР(МассивСсылок) Экспорт
		ДанныеДляРегистрацииВУчете = Новый Соответствие;	
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("МассивСсылок", МассивСсылок);
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	КадровыйПеревод.Ссылка КАК Ссылка,
	|	КадровыйПеревод.Сотрудник КАК Сотрудник,
	|	КадровыйПеревод.ДатаНачала КАК ДатаНачала,
	|	КадровыйПеревод.Подразделение КАК Подразделение,
	|	КадровыйПеревод.ОбособленноеПодразделение КАК Организация,
	|	КадровыйПеревод.Должность КАК Должность,
	|	КадровыйПеревод.ВидЗанятости КАК ВидЗанятости,
	|	КадровыйПеревод.ИзменитьПодразделениеИДолжность КАК ИзменитьПодразделениеИДолжность,
	|	КадровыйПеревод.КоличествоСтавок КАК КоличествоСтавок
	|ИЗ
	|	Документ.КадровыйПеревод КАК КадровыйПеревод
	|ГДЕ
	|	КадровыйПеревод.Ссылка В(&МассивСсылок)";
		
	Выборка = Запрос.Выполнить().Выбрать();
	
	Пока Выборка.Следующий() Цикл
		Если Выборка.ИзменитьПодразделениеИДолжность Тогда
			ДанныеДляРегистрацииВУчетеПоДокументу = УчетСтажаПФР.ДанныеДляРегистрацииВУчетеСтажаПФР();
			ДанныеДляРегистрацииВУчете.Вставить(Выборка.Ссылка, ДанныеДляРегистрацииВУчетеПоДокументу); 
			
			ОписаниеПериода = УчетСтажаПФР.ОписаниеРегистрируемогоПериода();
			ОписаниеПериода.Сотрудник = Выборка.Сотрудник;
			ОписаниеПериода.ДатаНачалаПериода = Выборка.ДатаНачала;
			ОписаниеПериода.Состояние = Перечисления.СостоянияСотрудника.Работа;
			ОписаниеПериода.ВидЗанятости = Выборка.ВидЗанятости;
				
			РегистрируемыйПериод = УчетСтажаПФР.ДобавитьЗаписьВДанныеДляРегистрацииВУчета(ДанныеДляРегистрацииВУчетеПоДокументу, ОписаниеПериода);
			УчетСтажаПФР.УстановитьЗначениеРегистрируемогоРесурса(РегистрируемыйПериод, "Должность", Выборка.Должность);
			УчетСтажаПФР.УстановитьЗначениеРегистрируемогоРесурса(РегистрируемыйПериод, "КоличествоСтавок", Выборка.КоличествоСтавок);
			УчетСтажаПФР.УстановитьЗначениеРегистрируемогоРесурса(РегистрируемыйПериод, "Организация", Выборка.Организация);
			УчетСтажаПФР.УстановитьЗначениеРегистрируемогоРесурса(РегистрируемыйПериод, "Подразделение", Выборка.Подразделение);
		КонецЕсли;					
	КонецЦикла;	

	Возврат ДанныеДляРегистрацииВУчете;														
КонецФункции

Процедура ЗаполнитьДатуЗапретаРедактирования(ОбъектДокумента) Экспорт
	
	ЗарплатаКадры.ЗаполнитьДатуЗапретаРедактирования(ОбъектДокумента, "ДатаНачала");
	
КонецПроцедуры

Процедура ЗаполнитьДатыЗапрета(ПараметрыОбновления) Экспорт
	
	ОбновлениеВыполнено = Истина;
	
	Запрос = Новый Запрос;
	Запрос.Текст =
		"ВЫБРАТЬ ПЕРВЫЕ 100
		|	КадровыйПеревод.Ссылка КАК Ссылка,
		|	КадровыйПеревод.Дата КАК Дата
		|ИЗ
		|	Документ.КадровыйПеревод КАК КадровыйПеревод
		|ГДЕ
		|	КадровыйПеревод.ДатаЗапрета = ДАТАВРЕМЯ(1, 1, 1)
		|
		|УПОРЯДОЧИТЬ ПО
		|	КадровыйПеревод.Дата УБЫВ";
	
	РезультатЗапроса = Запрос.Выполнить();
	Если Не РезультатЗапроса.Пустой() Тогда
		
		ОбновлениеВыполнено = Ложь;
		Выборка = РезультатЗапроса.Выбрать();
		Пока Выборка.Следующий() Цикл
			
			Если Не ОбновлениеИнформационнойБазыЗарплатаКадрыБазовый.ПодготовитьОбновлениеДанных(
				ПараметрыОбновления, Выборка.Ссылка.Метаданные().ПолноеИмя(), "Ссылка", Выборка.Ссылка) Тогда
				
				Продолжить;
				
			КонецЕсли;
			
			ОбъектДокумента = Выборка.Ссылка.ПолучитьОбъект();
			
			МенеджерДокумента = ОбщегоНазначения.МенеджерОбъектаПоСсылке(Выборка.Ссылка);
			МенеджерДокумента.ЗаполнитьДатуЗапретаРедактирования(ОбъектДокумента);
			
			ОбъектДокумента.ДополнительныеСвойства.Вставить("ОтключитьПроверкуДатыЗапретаИзменения", Истина);
			
			ОбновлениеИнформационнойБазы.ЗаписатьОбъект(ОбъектДокумента);
			ОбновлениеИнформационнойБазыЗарплатаКадрыБазовый.ЗавершитьОбновлениеДанных(ПараметрыОбновления);
			
		КонецЦикла;
		
	КонецЕсли;
	
	ОбновлениеИнформационнойБазыЗарплатаКадрыБазовый.УстановитьПараметрОбновления(ПараметрыОбновления, "ОбработкаЗавершена", ОбновлениеВыполнено);
	
КонецПроцедуры

Функция ДанныеДляПроведенияМероприятияТрудовойДеятельности(СсылкаНаДокумент, ТолькоПроведенные = Ложь) Экспорт
	
	ДанныеДляПроведения = Новый Соответствие;
	
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = Новый МенеджерВременныхТаблиц;
	
	Запрос.УстановитьПараметр("Ссылка", СсылкаНаДокумент);
	
	Запрос.Текст =
		"ВЫБРАТЬ
		|	ТаблицаДокумента.Ссылка КАК Ссылка,
		|	ТаблицаДокумента.Дата КАК ПериодКадровыхДанных,
		|	ТаблицаДокумента.Номер КАК Номер,
		|	ТаблицаДокумента.НомерПриказа КАК НомерПриказа,
		|	ТаблицаДокумента.ФизическоеЛицо КАК ФизическоеЛицо,
		|	ТаблицаДокумента.ОбособленноеПодразделение КАК Организация,
		|	ТаблицаДокумента.Сотрудник КАК Сотрудник,
		|	ТаблицаДокумента.ДатаНачала КАК ДатаМероприятия,
		|	ТаблицаДокумента.Подразделение КАК Подразделение,
		|	ТаблицаДокумента.Должность КАК Должность,
		|	ТаблицаДокумента.ТрудоваяФункция КАК ТрудоваяФункция,
		|	ТаблицаДокумента.НаименованиеДокумента КАК НаименованиеДокументаОснования,
		|	ТаблицаДокумента.Номер КАК НомерДокументаОснования,
		|	ТаблицаДокумента.Дата КАК ДатаДокументаОснования,
		|	ТаблицаДокумента.НаименованиеВторогоДокументаОснования КАК НаименованиеВторогоДокументаОснования,
		|	ТаблицаДокумента.СерияВторогоДокументаОснования КАК СерияВторогоДокументаОснования,
		|	ТаблицаДокумента.НомерВторогоДокументаОснования КАК НомерВторогоДокументаОснования,
		|	ТаблицаДокумента.ДатаВторогоДокументаОснования КАК ДатаВторогоДокументаОснования,
		|	ЗНАЧЕНИЕ(Перечисление.ВидыМероприятийТрудовойДеятельности.Перевод) КАК ВидМероприятия,
		|	ВЫБОР
		|		КОГДА ТаблицаДокумента.ВидЗанятости <> ЗНАЧЕНИЕ(Перечисление.ВидыЗанятости.ОсновноеМестоРаботы)
		|			ТОГДА ИСТИНА
		|		ИНАЧЕ ЛОЖЬ
		|	КОНЕЦ КАК ЯвляетсяСовместителем,
		|	ТаблицаДокумента.Организация КАК ОрганизацияДокумента,
		|	ТаблицаДокумента.ОбособленноеПодразделение КАК ОрганизацияПеревода
		|ПОМЕСТИТЬ ВТДанныеДокументов
		|ИЗ
		|	Документ.КадровыйПеревод КАК ТаблицаДокумента
		|ГДЕ
		|	ТаблицаДокумента.Ссылка В(&Ссылка)
		|	И ТаблицаДокумента.ОтразитьВТрудовойКнижке
		|	И &ТолькоПроведенные
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ РАЗЛИЧНЫЕ
		|	ДанныеДокументов.ПериодКадровыхДанных КАК Период,
		|	ДанныеДокументов.ОрганизацияДокумента КАК Организация
		|ПОМЕСТИТЬ ВТОрганизации
		|ИЗ
		|	ВТДанныеДокументов КАК ДанныеДокументов
		|ГДЕ
		|	ДанныеДокументов.ОрганизацияДокумента <> ДанныеДокументов.ОрганизацияПеревода
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ РАЗЛИЧНЫЕ
		|	ДанныеДокументов.ПериодКадровыхДанных,
		|	ДанныеДокументов.ОрганизацияПеревода
		|ИЗ
		|	ВТДанныеДокументов КАК ДанныеДокументов
		|ГДЕ
		|	ДанныеДокументов.ОрганизацияДокумента <> ДанныеДокументов.ОрганизацияПеревода
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ДанныеДокументов.Ссылка КАК Ссылка,
		|	ДанныеДокументов.Номер КАК Номер,
		|	ДанныеДокументов.ПериодКадровыхДанных КАК ПериодКадровыхДанных,
		|	ДанныеДокументов.НомерПриказа КАК НомерПриказа,
		|	ДанныеДокументов.ФизическоеЛицо КАК ФизическоеЛицо,
		|	ДанныеДокументов.Организация КАК Организация,
		|	ДанныеДокументов.Сотрудник КАК Сотрудник,
		|	ДанныеДокументов.ДатаМероприятия КАК ДатаМероприятия,
		|	ДанныеДокументов.Подразделение КАК Подразделение,
		|	ДанныеДокументов.Должность КАК Должность,
		|	ДанныеДокументов.ТрудоваяФункция КАК ТрудоваяФункция,
		|	ДанныеДокументов.НаименованиеДокументаОснования КАК НаименованиеДокументаОснования,
		|	ДанныеДокументов.НомерДокументаОснования КАК НомерДокументаОснования,
		|	ДанныеДокументов.ДатаДокументаОснования КАК ДатаДокументаОснования,
		|	ДанныеДокументов.НаименованиеВторогоДокументаОснования КАК НаименованиеВторогоДокументаОснования,
		|	ДанныеДокументов.СерияВторогоДокументаОснования КАК СерияВторогоДокументаОснования,
		|	ДанныеДокументов.НомерВторогоДокументаОснования КАК НомерВторогоДокументаОснования,
		|	ДанныеДокументов.ДатаВторогоДокументаОснования КАК ДатаВторогоДокументаОснования,
		|	ДанныеДокументов.ВидМероприятия КАК ВидМероприятия,
		|	ДанныеДокументов.ЯвляетсяСовместителем КАК ЯвляетсяСовместителем,
		|	ДанныеДокументов.ОрганизацияДокумента КАК ОрганизацияДокумента,
		|	ДанныеДокументов.ОрганизацияПеревода КАК ОрганизацияПеревода
		|ИЗ
		|	ВТДанныеДокументов КАК ДанныеДокументов
		|
		|УПОРЯДОЧИТЬ ПО
		|	Ссылка";
	
	Если ТолькоПроведенные Тогда
		Запрос.Текст = СтрЗаменить(Запрос.Текст, "&ТолькоПроведенные", "ТаблицаДокумента.Ссылка.Проведен");
	Иначе
		Запрос.Текст = СтрЗаменить(Запрос.Текст, "&ТолькоПроведенные", "ИСТИНА");
	КонецЕсли;
	
	Выборка = Запрос.Выполнить().Выбрать();
	Пока Выборка.СледующийПоЗначениюПоля("Ссылка") Цикл
		
		ДанныеФилиалов = Новый Соответствие;
		Если ЗарплатаКадры.ВТСодержитСтроки(Запрос.МенеджерВременныхТаблиц, "ВТОрганизации") Тогда
			ДанныеФилиалов = ЭлектронныеТрудовыеКнижки.ДанныеФилиалов(Запрос.МенеджерВременныхТаблиц);
		КонецЕсли;
		
		ДвиженияДокумента = Новый Массив;
		ДанныеДляПроведения.Вставить(Выборка.Ссылка, ДвиженияДокумента);
		
		Пока Выборка.Следующий() Цикл
			
			Запись = ЭлектронныеТрудовыеКнижки.ЗаписьДвиженияМероприятияТрудовойДеятельности(Выборка);
			ДвиженияДокумента.Добавить(Запись);
			
			Если Выборка.ОрганизацияДокумента <> Выборка.ОрганизацияПеревода Тогда
				
				ЭлектронныеТрудовыеКнижки.ДобавитьЗаписьДляПрежнегоФилиала(
					ДвиженияДокумента, Запись, ДанныеФилиалов, Выборка.ПериодКадровыхДанных,
					Выборка.ОрганизацияДокумента, Выборка.ОрганизацияПеревода);
				
			КонецЕсли;
			
		КонецЦикла;
		
	КонецЦикла;
	
	Возврат ДанныеДляПроведения;
	
КонецФункции

Процедура СформироватьНаборыЗаписейМероприятияТрудовойДеятельности(МероприятияТрудовойДеятельности, ПараметрыОбновления) Экспорт
	
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = Новый МенеджерВременныхТаблиц;
	
	Если ПараметрыОбновления = Неопределено Тогда
		МассивОбновленных = Новый Массив;
	Иначе
		
		Если ПараметрыОбновления.Свойство("МассивОбновленных") Тогда
			МассивОбновленных = ПараметрыОбновления.МассивОбновленных;
		Иначе
			МассивОбновленных = Новый Массив;
			ПараметрыОбновления.Вставить("МассивОбновленных", МассивОбновленных);
		КонецЕсли;
		
	КонецЕсли;
	
	Запрос.УстановитьПараметр("МассивОбновленных", МассивОбновленных);
	
	Запрос.Текст =
		"ВЫБРАТЬ ПЕРВЫЕ 1000
		|	ТаблицаДокумента.Ссылка КАК Ссылка
		|ИЗ
		|	Документ.КадровыйПеревод КАК ТаблицаДокумента
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.МероприятияТрудовойДеятельности КАК МероприятияТрудовойДеятельности
		|		ПО ТаблицаДокумента.Ссылка = МероприятияТрудовойДеятельности.Регистратор
		|ГДЕ
		|	НЕ ТаблицаДокумента.Ссылка В (&МассивОбновленных)
		|	И ТаблицаДокумента.Проведен
		|	И ТаблицаДокумента.ОтразитьВТрудовойКнижке
		|	И ТаблицаДокумента.ИзменитьПодразделениеИДолжность
		|	И МероприятияТрудовойДеятельности.Регистратор ЕСТЬ NULL";
	
	Если ПараметрыОбновления = Неопределено Тогда
		Запрос.Текст = СтрЗаменить(Запрос.Текст, "ПЕРВЫЕ 1000","");
	КонецЕсли;
	
	РезультатЗапроса = Запрос.Выполнить();
	Если РезультатЗапроса.Пустой() Тогда
		ОбновлениеИнформационнойБазыЗарплатаКадрыБазовый.УстановитьПараметрОбновления(ПараметрыОбновления, "ОбработкаЗавершена", Истина);
		Возврат;
	КонецЕсли;
	
	ОбновлениеИнформационнойБазыЗарплатаКадрыБазовый.УстановитьПараметрОбновления(ПараметрыОбновления, "ОбработкаЗавершена", Ложь);
	
	ОбрабатываемыеДокументы = РезультатЗапроса.Выгрузить().ВыгрузитьКолонку("Ссылка");
	ДанныеДляПроведенияДокументов = ДанныеДляПроведенияМероприятияТрудовойДеятельности(ОбрабатываемыеДокументы, Истина);
	Для Каждого Регистратор Из ОбрабатываемыеДокументы Цикл
		
		МассивОбновленных.Добавить(Регистратор);
		ДанныеДляПроведения = ДанныеДляПроведенияДокументов.Получить(Регистратор);
		Если ДанныеДляПроведения = Неопределено Тогда
			Продолжить;
		КонецЕсли;
		
		Если Не ОбновлениеИнформационнойБазыЗарплатаКадрыБазовый.ПодготовитьОбновлениеДанных(ПараметрыОбновления, "РегистрСведений.МероприятияТрудовойДеятельности.НаборЗаписей", "Регистратор", Регистратор) Тогда
			Продолжить;
		КонецЕсли;
		
		НаборЗаписей = РегистрыСведений.МероприятияТрудовойДеятельности.СоздатьНаборЗаписей();
		НаборЗаписей.Отбор.Регистратор.Установить(Регистратор);
		
		РегистрыСведений.МероприятияТрудовойДеятельности.ЗаполнитьЗаписиМероприятий(
			ДанныеДляПроведения, МероприятияТрудовойДеятельности,
			"Подразделение,Должность,ТрудоваяФункция");
		
		ЭлектронныеТрудовыеКнижки.СформироватьДвиженияМероприятийТрудовойДеятельности(НаборЗаписей, ДанныеДляПроведения);
		
		ОбновлениеИнформационнойБазы.ЗаписатьНаборЗаписей(НаборЗаписей);
		ОбновлениеИнформационнойБазыЗарплатаКадрыБазовый.ЗавершитьОбновлениеДанных(ПараметрыОбновления);
		
	КонецЦикла;
	
КонецПроцедуры

#КонецОбласти

#КонецЕсли
