#Область ОбработчикиСобытийФормы
&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	Если Параметры.Свойство("АвтоТест") Тогда
		Возврат;
	КонецЕсли;
	
	ВерсияФормата = ВРег(Параметры.ВерсияФормата);
	КНД = ВРег(Параметры.КНД);
	ПрефиксФайлаВыгрузки = ВРег(Параметры.ПрефиксФайлаВыгрузки);
	
	Элементы.ДекорацияОписание.Заголовок = "Для загрузки доступны файлы xml, префикс имени "
		+ ПрефиксФайлаВыгрузки + " в формате " + ВерсияФормата;
КонецПроцедуры

&НаКлиенте
Процедура ДобавитьФайлы(Команда)
	ОчиститьСообщения();
	ОО = Новый ОписаниеОповещения("ДобавитьФайлыПослеУстановкиРасширения", ЭтотОбъект);
	НачатьПодключениеРасширенияРаботыСФайлами(ОО);
КонецПроцедуры

&НаКлиенте
Процедура УдалитьФайл(Команда)
	ОчиститьСообщения();
	ФайлыВыгрузки.Удалить(Элементы.ФайлыВыгрузки.ТекущиеДанные);
КонецПроцедуры

&НаКлиенте
Процедура ФайлыВыгрузкиПриАктивизацииСтроки(Элемент)
	Элементы.ФормаУдалитьФайл.Доступность = (Элементы.ФайлыВыгрузки.ТекущиеДанные <> Неопределено);
КонецПроцедуры

&НаКлиенте
Процедура ЗаполнитьСОчисткой(Команда)
	Если ФайлыВыгрузки.Количество() = 0 Тогда 
		ОбщегоНазначенияКлиент.СообщитьПользователю(НСтр("ru='Не заполнены файлы'"));
		Возврат;
	КонецЕсли;
	ВладелецФормы.ЗаполнитьНаОснованииФайлов(ФайлыВыгрузкиВХранилище(), Истина);
	Закрыть();
КонецПроцедуры

&НаКлиенте
Процедура Дополнить(Команда)
	Если ФайлыВыгрузки.Количество() = 0 Тогда 
		ОбщегоНазначенияКлиент.СообщитьПользователю(НСтр("ru='Не заполнены файлы'"));
		Возврат;
	КонецЕсли;
	ВладелецФормы.ЗаполнитьНаОснованииФайлов(ФайлыВыгрузкиВХранилище(), Ложь);
	Закрыть();
КонецПроцедуры

&НаСервере
Функция ФайлыВыгрузкиВХранилище()
	Возврат ПоместитьВоВременноеХранилище(ДанныеФормыВЗначение(ФайлыВыгрузки, Тип("ТаблицаЗначений")), УникальныйИдентификатор);
КонецФункции

&НаКлиенте
Процедура ДобавитьВыгрузку(Команда)
	ОчиститьСообщения();
	ОО = Новый ОписаниеОповещения("ДобавитьВыгрузкуЗавершение", ЭтотОбъект, Новый Структура);
	ОтборУведомления = Новый Структура("ВидУведомления, ИмяФормы", 
		ВладелецФормы.Объект.ВидУведомления,
		СтрРазделить(ВладелецФормы.ИмяФормы, ".")[3]);
	ОткрытьФорму("Документ.УведомлениеОСпецрежимахНалогообложения.Форма.ФормаВыбора",
		Новый Структура("Отбор, ИсключенноеЗначение", ОтборУведомления, ВладелецФормы.Объект.Ссылка), ЭтотОбъект,,,, ОО, РежимОткрытияОкнаФормы.БлокироватьОкноВладельца);
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаКлиенте
Процедура ДобавитьВыгрузкуЗавершение(Результат, ДополнительныеПараметры) Экспорт
	Если ТипЗнч(Результат) = Тип("ДокументСсылка.УведомлениеОСпецрежимахНалогообложения") Тогда 
		ОбработкаВыгрузкиОтчета(Результат);
	КонецЕсли;
КонецПроцедуры

&НаСервере
Процедура ОбработкаВыгрузкиОтчета(Уведомление)
	УведомлениеОбъект = Уведомление.ПолучитьОбъект();
	Выгрузка = УведомлениеОбъект.ВыгрузитьДокумент(Новый УникальныйИдентификатор);
	Если Выгрузка = Неопределено Тогда 
		ОбщегоНазначения.СообщитьПользователю("Не удалось выгрузить отчет");
		Возврат;
	КонецЕсли;
	
	Для Каждого Стр Из Выгрузка Цикл 
		Если ФайлыВыгрузки.НайтиСтроки(Новый Структура("Уведомление", Уведомление)).Количество() > 0 Тогда 
			ОбщегоНазначения.СообщитьПользователю("Уведомление уже было добавлено ранее");
			Продолжить;
		КонецЕсли;
		ОбработкаСодержимогоФайла(Строка(Уведомление), Стр.ТестВыгрузки, "xml", Уведомление);
	КонецЦикла;
КонецПроцедуры

&НаКлиенте
Процедура ДобавитьФайлыПослеУстановкиРасширения(Подключено, ПараметрыСохранения) Экспорт
	Если Подключено Тогда
		ДВФ = Новый ДиалогВыбораФайла(РежимДиалогаВыбораФайла.Открытие);
		ДВФ.Заголовок = НСтр("ru = 'Выберите файл для загрузки'");
		ДВФ.МножественныйВыбор = Истина;
		ДВФ.ПроверятьСуществованиеФайла = Истина;
		ДВФ.Фильтр = НСтр("ru='Файлы xml'") + " (*.xml)|*.xml";
		ОписаниеОповещения = Новый ОписаниеОповещения("ДобавитьФайлыПослеВыбораФайлов", ЭтотОбъект, ПараметрыСохранения);
		ДВФ.Показать(ОписаниеОповещения);
	Иначе 
		ПоказатьПредупреждение(,НСтр("ru='Не удалось подключить расширение работы с файлами!
			|Загрузка из xml-представления невозможна.'"));
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Функция ИмяФайлаПоПолномуПути(ПолныйПуть)
	ИндексРазделителя = СтрНайти(ПолныйПуть, ПолучитьРазделительПути(), НаправлениеПоиска.СКонца);
	Возврат ?(ИндексРазделителя = 0, ПолныйПуть, Сред(ПолныйПуть, ИндексРазделителя + 1));
КонецФункции

&НаКлиенте
Функция РасширениеФайлаПоПолномуПути(ПолныйПуть)
	ИндексРазделителя = СтрНайти(ПолныйПуть, ".", НаправлениеПоиска.СКонца);
	Возврат ?(ИндексРазделителя = 0, "", Сред(ПолныйПуть, ИндексРазделителя));
КонецФункции

&НаКлиенте
Процедура ДобавитьФайлыПослеВыбораФайлов(ВыбранныеФайлы, ДополнительныеПараметры) Экспорт
	Если ТипЗнч(ВыбранныеФайлы) <> Тип("Массив") Тогда
		Возврат;
	КонецЕсли;
	
	ДополнительныеПараметры = Новый Структура;
	ДополнительныеПараметры.Вставить("ВыбранныеФайлы", ВыбранныеФайлы);
	ДополнительныеПараметры.Вставить("ИндексДляЧтения", 0);
	ДополнительныеПараметры.Вставить("ИмяФайла", "");
	ДополнительныеПараметры.Вставить("ТекстовыйДокумент", Новый ТекстовыйДокумент);
	
	Для Инд = 0 По ВыбранныеФайлы.ВГраница() Цикл 
		Элт = ВыбранныеФайлы[Инд];
		
		Если ФайлыВыгрузки.НайтиСтроки(Новый Структура("ИмяФайла", ИмяФайлаПоПолномуПути(Элт))).Количество() > 0 Тогда 
			ОбщегоНазначенияКлиент.СообщитьПользователю("файл " + Элт + " уже добавлен");
			Продолжить;
		КонецЕсли;
		
		ДополнительныеПараметры["ТекстовыйДокумент"] = Новый ТекстовыйДокумент;
		ДополнительныеПараметры["ИндексДляЧтения"] = Инд;
		ДополнительныеПараметры["ИмяФайла"] = Элт;
		ОписаниеОповещения = Новый ОписаниеОповещения("ДобавитьФайлыПослеПолученияФайла", ЭтотОбъект, ДополнительныеПараметры);
		ДополнительныеПараметры.ТекстовыйДокумент.НачатьЧтение(ОписаниеОповещения, Элт);
		Прервать;
	КонецЦикла;
КонецПроцедуры

&НаКлиенте
Процедура ДобавитьФайлыПослеПолученияФайла(ДополнительныеПараметры) Экспорт
	Если Не ОбработкаСодержимогоФайла(ДополнительныеПараметры.ИмяФайла, ДополнительныеПараметры.ТекстовыйДокумент.ПолучитьТекст(),
			РасширениеФайлаПоПолномуПути(ДополнительныеПараметры["ИмяФайла"])) Тогда 
		ОбщегоНазначенияКлиент.СообщитьПользователю("файл " + ДополнительныеПараметры["ИмяФайла"] + " не соответствует формату");
	КонецЕсли;
	
	ВыбранныеФайлы = ДополнительныеПараметры.ВыбранныеФайлы;
	Пока ДополнительныеПараметры.ИндексДляЧтения < ДополнительныеПараметры.ВыбранныеФайлы.ВГраница() Цикл
		ДополнительныеПараметры.ИндексДляЧтения = ДополнительныеПараметры.ИндексДляЧтения + 1;
		Элт = ВыбранныеФайлы[ДополнительныеПараметры.ИндексДляЧтения];
		Если ФайлыВыгрузки.НайтиСтроки(Новый Структура("ИмяФайла", ИмяФайлаПоПолномуПути(Элт))).Количество() > 0 Тогда 
			ОбщегоНазначенияКлиент.СообщитьПользователю("файл " + Элт + " уже добавлен");
			Продолжить;
		КонецЕсли;
		
		ДополнительныеПараметры["ТекстовыйДокумент"] = Новый ТекстовыйДокумент;
		ДополнительныеПараметры["ИмяФайла"] = Элт;
		ОписаниеОповещения = Новый ОписаниеОповещения("ДобавитьФайлыПослеПолученияФайла", ЭтотОбъект, ДополнительныеПараметры);
		ДополнительныеПараметры.ТекстовыйДокумент.НачатьЧтение(ОписаниеОповещения, Элт);
		Прервать;
	КонецЦикла;
КонецПроцедуры

&НаСервере
Функция ОбработкаСодержимогоФайла(ИмяФайла, ПредставлениеXML, РасширениеФайла, УведомлениеСсылка = Неопределено)
	Попытка
		ДеревоЗагрузки = УведомлениеОСпецрежимахНалогообложения.СформироватьДеревоЗагрузки(ПредставлениеXML);
	Исключение
		ОбщегоНазначения.СообщитьПользователю("Не удалось обработать файл " + ИмяФайла);
		Возврат Ложь;
	КонецПопытки;
	УзелКНД = УведомлениеОСпецрежимахНалогообложения.НайтиУзелВДеревеПоПути(ДеревоЗагрузки, "Файл/Документ/КНД", "ИмяЭлемента");
	УзелВерсФорм = УведомлениеОСпецрежимахНалогообложения.НайтиУзелВДеревеПоПути(ДеревоЗагрузки, "Файл/ВерсФорм", "ИмяЭлемента");
	УзелИдФайл = УведомлениеОСпецрежимахНалогообложения.НайтиУзелВДеревеПоПути(ДеревоЗагрузки, "Файл/ИдФайл", "ИмяЭлемента");
	Если УзелКНД = Неопределено 
		Или УзелВерсФорм = Неопределено
		Или УзелИдФайл = Неопределено
		Или УзелКНД.ЗначениеЭлемента <> КНД 
		Или УзелВерсФорм.ЗначениеЭлемента <> ВерсияФормата Тогда 
		
		Возврат Ложь;
	КонецЕсли;
	
	УзелИНН = УведомлениеОСпецрежимахНалогообложения.НайтиУзелВДеревеПоПути(ДеревоЗагрузки, "Файл/Документ/СвНП/НПЮЛ/ИННЮЛ", "ИмяЭлемента");
	Если УзелИНН = Неопределено Тогда
		УзелИНН = УведомлениеОСпецрежимахНалогообложения.НайтиУзелВДеревеПоПути(ДеревоЗагрузки, "Файл/Документ/СвНП/НПФЛ/ИННФЛ", "ИмяЭлемента");
	КонецЕсли;
	Если УзелИНН = Неопределено Тогда
		УзелИНН = УведомлениеОСпецрежимахНалогообложения.НайтиУзелВДеревеПоПути(ДеревоЗагрузки, "Файл/Документ/СвНП/НПИП/ИННФЛ", "ИмяЭлемента");
	КонецЕсли;
	УзелКПП = УведомлениеОСпецрежимахНалогообложения.НайтиУзелВДеревеПоПути(ДеревоЗагрузки, "Файл/Документ/СвНП/НПЮЛ/КПП", "ИмяЭлемента");
	
	Если УзелИНН = Неопределено Тогда
		ИНН = "----";
	Иначе
		ИНН = УзелИНН.ЗначениеЭлемента;
	КонецЕсли;
	Если УзелКПП = Неопределено Тогда
		КПП = "----";
	Иначе
		КПП = УзелКПП.ЗначениеЭлемента;
	КонецЕсли;
	
	НовСтр = ФайлыВыгрузки.Добавить();
	НовСтр.ИНН = ИНН;
	НовСтр.КПП = КПП;
	НовСтр.Адрес = ПоместитьВоВременноеХранилище(ДеревоЗагрузки, Новый УникальныйИдентификатор);
	НовСтр.ИмяФайла = ?(ЗначениеЗаполнено(УведомлениеСсылка), Строка(УведомлениеСсылка), УзелИдФайл.ЗначениеЭлемента + РасширениеФайла);
	НовСтр.Уведомление = УведомлениеСсылка;
	
	Возврат Истина;
КонецФункции

#КонецОбласти

