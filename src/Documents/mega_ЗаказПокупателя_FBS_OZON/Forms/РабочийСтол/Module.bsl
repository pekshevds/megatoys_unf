#Область ОписаниеПеременных

#КонецОбласти

#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	СоответствиеКомандИЭлементовМеню = Новый Структура;
КонецПроцедуры


&НаКлиенте
Процедура ПриОткрытии(Отказ)
	
	// ПодключаемоеОборудование
	МенеджерОборудованияКлиент.НачатьПодключениеОборудованиеПриОткрытииФормы(Неопределено, ЭтотОбъект, "СканерШтрихкода");
	// Конец ПодключаемоеОборудование
	
	ПодключитьОбработчикОжидания("СоздатьКнопкиНаКлиенте", 0.1, Истина);
КонецПроцедуры


&НаКлиенте
Процедура ПриЗакрытии(ЗавершениеРаботы)
	
	// ПодключаемоеОборудование
	МенеджерОборудованияКлиент.НачатьОтключениеОборудованиеПриЗакрытииФормы(Неопределено, ЭтаФорма);
	// ПодключаемоеОборудование
КонецПроцедуры


&НаКлиенте
Процедура ОбработкаОповещения(ИмяСобытия, Параметр, Источник)

	// ПодключаемоеОборудование
	Если Источник = "ПодключаемоеОборудование" И ВводДоступен() Тогда
		Если ИмяСобытия = "ScanData" Тогда
			Данные = МенеджерОборудованияУНФКлиент.ПреобразоватьДанныеСоСканераВСтруктуру(Параметр);
			ОбработатьШтрихкоды(Данные.Штрихкод);
		КонецЕсли;
	КонецЕсли;
	// Конец ПодключаемоеОборудование	

КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовШапкиФормы

// Код процедур и функций

#КонецОбласти

#Область ОбработчикиСобытийЭлементовТаблицыФормы //<ИмяТаблицыФормы>

// Код процедур и функций

#КонецОбласти

#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура ПоискПоШтрихкоду(Команда)
	
	ТекШтрихкод = "";
	
	ОбработкаЗавершения = Новый ОписаниеОповещения("ПоискПоШтрихкодуЗавершение", ЭтотОбъект,
		Новый Структура("ТекШтрихкод", ТекШтрихкод));	
	ПоказатьВводЗначения(ОбработкаЗавершения, ТекШтрихкод, НСтр("ru = 'Введите штрихкод'"));
КонецПроцедуры

&НаКлиенте
Процедура ПриНажанииКнопки(Кнопка, СтандартнаяОбработка)
	СтандартнаяОбработка = Ложь;
	
	Кнопка.ЦветРамки = WebЦвета.Красный;
	НомерДокумента = СоответствиеКомандИЭлементовМеню[Кнопка.Имя];
	
	Если НомерДокумента = "" Тогда 
		
		Возврат;
	КонецЕсли;
	
	Строки = Объект.Запасы.НайтиСтроки(Новый Структура("НомерВходящегоДокумента", НомерДокумента));
	Для Каждого ТекущаяСтрока Из Строки Цикл 
		//ТекущаяСтрока = Объект.Товары[НомерСтроки];
		//ДанныеПачати = Новый Структура("Номенклатура,НомерВходящегоДокумента");
		//ЗаполнитьЗначенияСвойств(ДанныеПачати, ТекущаяСтрока);
		
		Если Не ЗначениеЗаполнено(Объект.НачалоСборки) Тогда 
			
			Объект.НачалоСборки = ТекущаяДата();
		КонецЕсли;
		
		ТекущаяСтрока.ДатаПечати = ТекущаяДата();
	КонецЦикла;
	ЭтаФорма.Записать(Новый Структура("РежимЗаписи", РежимЗаписиДокумента.Запись));
	
	//Выводим наш стикер
	//ВывестиНашСтикер(ДанныеПачати);
		
	//Выводим WB стикер
//	ВывестиСтикерOzon(НомерДокумента);
//	ВывестиНашСтикер(НомерДокумента);
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаКлиенте
Процедура ПоискПоШтрихкодуЗавершение(Штрихкод, ДополнительныеПараметры) Экспорт
	
	ОбработатьШтрихкоды(Штрихкод);	
КонецПроцедуры

&НаКлиенте
Процедура ПослеЗакрытияВопросаОЗавершенииСборки(Результат, Параметры) Экспорт
    Если Результат = КодВозвратаДиалога.Нет Тогда
        Возврат;
    КонецЕсли;

    
	Объект.СборкаОкончена = Истина;
	Объект.ОкончаниеСборки = ТекущаяДата();
	
	ЭтаФорма.Записать(Новый Структура("РежимЗаписи", РежимЗаписиДокумента.Проведение));	
	ЭтаФорма.Закрыть();
КонецПроцедуры

&НаКлиенте
Процедура ОбработатьШтрихкоды(Штрихкод)
	
	Если Штрихкод <> 0 Тогда
		
		Если Штрихкод = "9999999999994" Тогда 
		
			Режим = РежимДиалогаВопрос.ДаНет;
			Оповещение = Новый ОписаниеОповещения("ПослеЗакрытияВопросаОЗавершенииСборки", ЭтотОбъект, Параметры);
			ПоказатьВопрос(Оповещение, НСтр("ru = 'Вы уверены, что хотите завершить сборку заказа?';"
			+ " en = 'Are you sure you want to complete the order?'"), Режим, 0);
			
			//Объект.СборкаОкончена = Истина;
			//Для Каждого ТекСтрока Из Объект.Товары Цикл  
			//	
			//	Если Не ЗначениеЗаполнено(ТекСтрока.ДатаПечати) Тогда 
			//		
			//		Объект.СборкаОкончена = Ложь;
			//		Прервать;
			//	КонецЕсли;
			//КонецЦикла;			
			//Если Объект.СборкаОкончена Тогда  
			//	
			//	Объект.ОкончаниеСборки = ТекущаяДата();
			//КонецЕсли;
			
			//ЭтаФорма.Записать(Новый Структура("РежимЗаписи", РежимЗаписиДокумента.Запись));
			//ЭтаФорма.Закрыть();
		КонецЕсли;				
	КонецЕсли;
КонецПроцедуры


&НаКлиенте
Процедура СоздатьКнопкиНаКлиенте()Экспорт 
	
	СоздатьКнопкиНаСервере();
КонецПроцедуры

&НаСервере
Процедура СоздатьКнопкиНаСервере()
	
	Если Объект.Ссылка.ПолучитьОбъект() = Неопределено Тогда 
		
		Возврат;
	КонецЕсли;
	
	СчетчикПанелей = 0;СчетчикКнопок = 0;
	
	КоличествоКнопокПоГоризонтали 	= 10;
	КоличествоПанелей 				= 6;
	Ширина 							= 15;
	Высота 							= 5;
	РазмерШрифта 					= 12;
	
	Счетчик = 0;
	
	
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	ЗаказПокупателяЗапасы.НомерВходящегоДокумента КАК НомерДокумента
	|ИЗ
	|	Документ.mega_ЗаказПокупателя_FBS_OZON.Запасы КАК ЗаказПокупателяЗапасы
	|ГДЕ
	|	ЗаказПокупателяЗапасы.Ссылка = &ЗаказПокупателя
	|
	|УПОРЯДОЧИТЬ ПО
	|	ЗаказПокупателяЗапасы.НомерСтроки";
	
	Запрос.УстановитьПараметр("ЗаказПокупателя", Объект.Ссылка);
	
	Результат = Запрос.Выполнить();
	Выборка = Результат.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
	
		
	
	//Для Каждого Выборка Из Объект.Товары Цикл 
	Пока Выборка.Следующий() Цикл 
				
		ИмяКнопки 	= "Кнопка" + Формат(СчетчикКнопок, 	"ЧЦ=10; ЧН=0; ЧГ=0");
		ИмяКоманды 	= "Команда" + Формат(СчетчикКнопок, "ЧЦ=10; ЧН=0; ЧГ=0");
		ИмяПанели	= "Группа" + Формат(СчетчикПанелей, "ЧЦ=10; ЧН=0; ЧГ=0");
		
		
		
		ПолеФормы 							= Элементы.Добавить(ИмяКнопки, Тип("ПолеФормы"), Элементы[ИмяПанели]);
		ПолеФормы.Вид 						= ВидПоляФормы.ПолеКартинки;
		ПолеФормы.ПутьКДанным 				= "КартинкаШаблон";
		ПолеФормы.Гиперссылка 				= Истина;		
		ПолеФормы.ПоложениеЗаголовка 		= ПоложениеЗаголовкаЭлементаФормы.Нет;
		ПолеФормы.Ширина 					= Ширина;
		ПолеФормы.Высота 					= Высота;
		
		ПолеФормы.РастягиватьПоГоризонтали  = Ложь;
		ПолеФормы.РастягиватьПоВертикали  = Ложь;
		
		ПолеФормы.Шрифт = Новый Шрифт(, РазмерШрифта,,,);
		//ПолеФормы.ТекстНевыбраннойКартинки 	= СокрЛП(Выборка.Номенклатура.Наименование) + Символы.ПС + СокрЛП(Выборка.Номенклатура.Артикул);				
		//Артикул = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(Выборка.Номенклатура, "Артикул");
		//Артикул = Выборка.Номенклатура.Артикул;
		//ПолеФормы.ТекстНевыбраннойКартинки 	= СокрЛП(Выборка.Артикул);
		ПолеФормы.ТекстНевыбраннойКартинки 	= СокрЛП(Выборка.НомерДокумента) + Символы.ПС;
		
		
		Строки = Объект.Запасы.НайтиСтроки(Новый Структура("НомерВходящегоДокумента", Выборка.НомерДокумента));
		Если Строки.Количество() > 0 Тогда 
			Если ЗначениеЗаполнено(Строки[0].ДатаПечати) Тогда 
			
				ПолеФормы.ЦветРамки = WebЦвета.Красный;
				ПолеФормы.Рамка = Новый Рамка(ТипРамкиЭлементаУправления.Двойная, 5);
			КонецЕсли;
		КонецЕсли;
		
		ПолеФормы.УстановитьДействие("Нажатие", "ПриНажанииКнопки");
		
		СоответствиеКомандИЭлементовМеню.Вставить(ИмяКнопки, Выборка.НомерДокумента);
		СписокКнопок.Добавить(ИмяКнопки);
		Счетчик = Счетчик + 1;
		
		Если Счетчик = КоличествоКнопокПоГоризонтали Тогда 
			
			СчетчикПанелей = СчетчикПанелей + 1;
			//Элементы[ИмяПанели].Ширина = (КоличествоКнопокПоГоризонтали * Ширина) + (КоличествоКнопокПоГоризонтали * 5);
			Счетчик = 0;
		КонецЕсли;
		
		СчетчикКнопок = СчетчикКнопок + 1;
		
		Если (СписокКнопок.Количество()) >= КоличествоКнопокПоГоризонтали * КоличествоПанелей Тогда 
			
			Прервать;
		КонецЕсли;
	КонецЦикла;
КонецПроцедуры

&НаКлиенте
Процедура ПолученыШтрихкоды(ДанныеШтрихкодов) Экспорт
	
	
КонецПроцедуры

// СтандартныеПодсистемы.ПодключаемыеКоманды
//@skip-check module-unused-method
&НаКлиенте
Процедура Подключаемый_ВыполнитьКоманду(Команда)
	ПодключаемыеКомандыКлиент.НачатьВыполнениеКоманды(ЭтотОбъект, Команда, Объект);
КонецПроцедуры

//@skip-check module-unused-method
&НаКлиенте
Процедура Подключаемый_ОбновитьКоманды()
	ПодключаемыеКомандыКлиентСервер.ОбновитьКоманды(ЭтотОбъект, Объект);
КонецПроцедуры
// Конец СтандартныеПодсистемы.ПодключаемыеКоманды

#КонецОбласти
