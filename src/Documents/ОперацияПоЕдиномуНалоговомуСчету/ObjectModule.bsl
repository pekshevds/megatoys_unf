#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область ОбработчикиСобытий

Процедура ПриКопировании(ОбъектКопирования)
	
	Дата              = НачалоДня(ОбщегоНазначения.ТекущаяДатаПользователя());
	Ответственный     = Пользователи.ТекущийПользователь();
	Уведомление       = Документы.УведомлениеОСпецрежимахНалогообложения.ПустаяСсылка();
	
КонецПроцедуры

Процедура ОбработкаЗаполнения(ДанныеЗаполнения, ТекстЗаполнения, СтандартнаяОбработка)

	ЗаполнениеОбъектовУНФ.ЗаполнитьДокумент(ЭтотОбъект, ДанныеЗаполнения);
	
КонецПроцедуры

Процедура ОбработкаПроверкиЗаполнения(Отказ, ПроверяемыеРеквизиты)
	
	СистемаНалогооблажения = РегистрыСведений.СистемыНалогообложенияОрганизаций.ОпределитьСистемуНалогообложенияОрганизации(Организация, Дата);
	
	ПлательщикЕНП = РегламентированнаяОтчетностьУСН.ПлательщикЕНП(Организация, Дата);
	
	Если Не ПлательщикЕНП Тогда
		
		ТекстСообщения = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
			НСтр("ru='Организация %1 не является плательщиком единого налогового платежа'"),
			Организация);
			
		ОбщегоНазначения.СообщитьПользователю(ТекстСообщения,
			,
			"Организация",
			"Объект",
			Отказ);
		
	КонецЕсли;
	
	МассивНепроверяемыхРеквизитов = Новый Массив();

	ПрименяетсяУСНДоходыМинусРасходы = СистемаНалогооблажения.ОбъектНалогообложения = Перечисления.ВидыОбъектовНалогообложения.ДоходыМинусРасходы;
	
	Если ВидОперации = Перечисления.ВидыОперацийПоЕдиномуНалоговомуСчету.НачислениеНалогов Тогда
		Если ВводНачальныхДанных Тогда
			МассивНепроверяемыхРеквизитов.Добавить("Налоги");
		КонецЕсли;
		МассивНепроверяемыхРеквизитов.Добавить("Налоги.ПлатежныйДокумент");
		МассивНепроверяемыхРеквизитов.Добавить("Налоги.УчитыватьВНУ");
		МассивНепроверяемыхРеквизитов.Добавить("Санкции");
		МассивНепроверяемыхРеквизитов.Добавить("ЕдиныйСчет");
	ИначеЕсли ВидОперации = Перечисления.ВидыОперацийПоЕдиномуНалоговомуСчету.УплатаНалогов Тогда
		Если ВводНачальныхДанных Тогда
			МассивНепроверяемыхРеквизитов.Добавить("Налоги");
		КонецЕсли;
		Если Не ПрименяетсяУСНДоходыМинусРасходы Тогда
			МассивНепроверяемыхРеквизитов.Добавить("Налоги.УчитыватьВНУ");
		КонецЕсли;
		МассивНепроверяемыхРеквизитов.Добавить("Санкции");
		МассивНепроверяемыхРеквизитов.Добавить("ЕдиныйСчет");
	ИначеЕсли ВидОперации = Перечисления.ВидыОперацийПоЕдиномуНалоговомуСчету.НачислениеПенейШтрафов Тогда
		Если ВводНачальныхДанных Тогда
			МассивНепроверяемыхРеквизитов.Добавить("Санкции");
		КонецЕсли;
		МассивНепроверяемыхРеквизитов.Добавить("Санкции.ПлатежныйДокумент");
		МассивНепроверяемыхРеквизитов.Добавить("Налоги");
		МассивНепроверяемыхРеквизитов.Добавить("ЕдиныйСчет");
	ИначеЕсли ВидОперации = Перечисления.ВидыОперацийПоЕдиномуНалоговомуСчету.ПогашениеПенейШтрафов Тогда
		Если ВводНачальныхДанных Тогда
			МассивНепроверяемыхРеквизитов.Добавить("Санкции");
		КонецЕсли;
		МассивНепроверяемыхРеквизитов.Добавить("Налоги");
		МассивНепроверяемыхРеквизитов.Добавить("ЕдиныйСчет");
	ИначеЕсли ВидОперации = Перечисления.ВидыОперацийПоЕдиномуНалоговомуСчету.КорректировкаСчета Тогда
		Если ВводНачальныхДанных Тогда
			МассивНепроверяемыхРеквизитов.Добавить("ЕдиныйСчет");
		КонецЕсли;
		Если Не ПрименяетсяУСНДоходыМинусРасходы Тогда
			МассивНепроверяемыхРеквизитов.Добавить("ЕдиныйСчет.УчитыватьВНУ");
		КонецЕсли;
		МассивНепроверяемыхРеквизитов.Добавить("Налоги");
		МассивНепроверяемыхРеквизитов.Добавить("Санкции");
		Для Каждого ТекущаяСтрока Из ЕдиныйСчет Цикл
			Если ТекущаяСтрока.ВидДвижения Тогда
				Если Не ЗначениеЗаполнено(ТекущаяСтрока.ПлатежныйДокумент) Тогда
					Поле = "ЕдиныйСчет[" + Формат(ТекущаяСтрока.НомерСтроки - 1, "ЧН=0; ЧГ=") + "].ПлатежныйДокумент";
					ТекстСообщения = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
						НСтр("ru='Не заполнена колонка ""Платежный документ"" в строке %1 списка ""Единый счет""'"),
						ТекущаяСтрока.НомерСтроки);
					ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстСообщения, ЭтотОбъект, Поле, "Объект", Отказ);
					Отказ = Истина;
				КонецЕсли;
			КонецЕсли;
		КонецЦикла;
	КонецЕсли;
	
	ОбщегоНазначения.УдалитьНепроверяемыеРеквизитыИзМассива(ПроверяемыеРеквизиты, МассивНепроверяемыхРеквизитов);
	
	ПроверитьУникальностьДанныхДокумента(Отказ);
	
КонецПроцедуры

Процедура ПередЗаписью(Отказ, РежимЗаписи, РежимПроведения)
	
	Если ОбменДанными.Загрузка Тогда
		Возврат;
	КонецЕсли;
	
	Для Каждого СтрокаДокумента Из Налоги Цикл
		Если ПустаяСтрока(СтрокаДокумента.КлючСтроки) Тогда
			СтрокаДокумента.КлючСтроки = Строка(Новый УникальныйИдентификатор);
		КонецЕсли;
	КонецЦикла;
	
	СуммаДокумента = Налоги.Итог("Сумма") + Санкции.Итог("Сумма");
	
	ДополнительныеСвойства.Вставить("РежимЗаписи", РежимЗаписи);
	
	// При групповом перепроведении реквизиты документов не меняются,
	// поэтому обновление связанных данных выполнять не требуется.
	Если ДополнительныеСвойства.Свойство("ГрупповоеПерепроведение") И ДополнительныеСвойства.ГрупповоеПерепроведение Тогда
		Возврат;
	КонецЕсли;
	
КонецПроцедуры

Процедура ПриЗаписи(Отказ)
	
	Если ОбменДанными.Загрузка Тогда
		Возврат;
	КонецЕсли;
	
	// При групповом перепроведении реквизиты документов не меняются,
	// поэтому обновление связанных данных выполнять не требуется.
	Если ДополнительныеСвойства.Свойство("ГрупповоеПерепроведение") И ДополнительныеСвойства.ГрупповоеПерепроведение Тогда
		Возврат;
	КонецЕсли;   
	
	Если Налоги.Количество() <> 0 Тогда 
		ЗаписьКалендаря = ОбщегоНазначенияКлиентСервер.СвойствоСтруктуры(ДополнительныеСвойства,     "ЗаписьКалендаря");
		ПериодСобытияКалендаря = ОбщегоНазначенияКлиентСервер.СвойствоСтруктуры(ДополнительныеСвойства, "ПериодСобытия");
		
		РегистрыСведений.ЗадачиБухгалтераУведомления.ДобавитьЗапись(Организация, Ссылка, ЗаписьКалендаря, ПериодСобытияКалендаря);
	КонецЕсли;
	
	Если Не Проведен Тогда
		РегистрыСведений.ЗадачиБухгалтераУведомления.УдалитьЗапись(Организация, Ссылка);
	КонецЕсли;

	
КонецПроцедуры

Процедура ОбработкаПроведения(Отказ, РежимПроведения)
	
	// ПОДГОТОВКА ПРОВЕДЕНИЯ ПО ДАННЫМ ДОКУМЕНТА
	ПроведениеДокументовУНФ.ИнициализироватьДополнительныеСвойстваДляПроведения(Ссылка, ДополнительныеСвойства);
	//	
	// Подготовка наборов записей.
	ПроведениеДокументовУНФ.ПодготовитьНаборыЗаписейКРегистрацииДвижений(ЭтотОбъект);
	
	ПараметрыПроведения = Документы.ОперацияПоЕдиномуНалоговомуСчету.ПодготовитьПараметрыПроведения(
		Ссылка,
		Отказ);
	
	Если Отказ Тогда
		Возврат;
	КонецЕсли;
	
	// ФОРМИРОВАНИЕ ДВИЖЕНИЙ
	
	// Управленческий учет
	ЕдиныйНалоговыйСчет.СформироватьПроводкиНачислениеНалогов(
		ПараметрыПроведения.Реквизиты,
		ПараметрыПроведения.НачислениеНалогов,
		Движения,
		Отказ);
	//	
	//	
	//ЕдиныйНалоговыйСчет.СформироватьПроводкиУплатаНалогов(
	//	ПараметрыПроведения.Реквизиты,
	//	ПараметрыПроведения.УплатаНалогов,
	//	Движения,
	//	Отказ);
	//
	//ЕдиныйНалоговыйСчет.СформироватьПроводкиНачислениеПенейШтрафов(
	//	ПараметрыПроведения.Реквизиты,
	//	ПараметрыПроведения.НачислениеПенейШтрафов,
	//	Движения,
	//	Отказ);
	//
	//ЕдиныйНалоговыйСчет.СформироватьПроводкиПогашениеПенейШтрафов(
	//	ПараметрыПроведения.Реквизиты,
	//	ПараметрыПроведения.ПогашениеПенейШтрафов,
	//	Движения,
	//	Отказ);
	//
	//ЕдиныйНалоговыйСчет.СформироватьПроводкиПополнениеСчета(
	//	ПараметрыПроведения.Реквизиты,
	//	ПараметрыПроведения.ПополнениеСчета,
	//	Движения,
	//	Отказ);
	//
	//ЕдиныйНалоговыйСчет.СформироватьПроводкиСписаниеСоСчета(
	//	ПараметрыПроведения.Реквизиты,
	//	ПараметрыПроведения.СписаниеСоСчета,
	//	Движения,
	//	Отказ);
	
	// Движения по налогам на ЕНС
	ЕдиныйНалоговыйСчет.СформироватьДвиженияПоНалогамНаЕдиномНалоговомСчете(
		ПараметрыПроведения.Реквизиты,
		ПараметрыПроведения.НачислениеНалогов,
		Движения,
		Отказ);
	
	ЕдиныйНалоговыйСчет.СформироватьДвиженияПоНалогамНаЕдиномНалоговомСчете(
		ПараметрыПроведения.Реквизиты,
		ПараметрыПроведения.УплатаНалогов,
		Движения,
		Отказ);
	
	ЕдиныйНалоговыйСчет.СформироватьДвиженияПоСанкциямНаЕдиномНалоговомСчете(
		ПараметрыПроведения.Реквизиты,
		ПараметрыПроведения.НачислениеПенейШтрафов,
		Движения,
		Отказ);
	
	ЕдиныйНалоговыйСчет.СформироватьДвиженияПоСанкциямНаЕдиномНалоговомСчете(
		ПараметрыПроведения.Реквизиты,
		ПараметрыПроведения.ПогашениеПенейШтрафов,
		Движения,
		Отказ);
	
	// Движения по ЕНС (сводно)
	ЕдиныйНалоговыйСчет.СформироватьДвиженияНаЕдиномНалоговомСчете(
		ПараметрыПроведения.Реквизиты,
		ПараметрыПроведения.УплатаНалогов,
		Движения,
		Отказ);
	
	ЕдиныйНалоговыйСчет.СформироватьДвиженияНаЕдиномНалоговомСчете(
		ПараметрыПроведения.Реквизиты,
		ПараметрыПроведения.ПогашениеПенейШтрафов,
		Движения,
		Отказ);
	
	ЕдиныйНалоговыйСчет.СформироватьДвиженияНаЕдиномНалоговомСчете(
		ПараметрыПроведения.Реквизиты,
		ПараметрыПроведения.ПополнениеСчета,
		Движения,
		Отказ);
	
	ЕдиныйНалоговыйСчет.СформироватьДвиженияНаЕдиномНалоговомСчете(
		ПараметрыПроведения.Реквизиты,
		ПараметрыПроведения.СписаниеСоСчета,
		Движения,
		Отказ);  
		
	// Погашение налога
	ЕдиныйНалоговыйСчет.ЗачетАвансаПоЕдиномуНалоговомуСчетуПоОперацииЕНС(
		ПараметрыПроведения.Реквизиты,
		ПараметрыПроведения.УплатаНалогов,
		Движения,
		Отказ); 
		
КонецПроцедуры

Процедура ОбработкаУдаленияПроведения(Отказ)
	
	ПроведениеДокументовУНФ.ИнициализироватьДополнительныеСвойстваДляПроведения(Ссылка, ДополнительныеСвойства);
	ПроведениеДокументовУНФ.ПодготовитьНаборыЗаписейКРегистрацииДвижений(ЭтотОбъект);

	Движения.Записать();
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

Процедура ПроверитьУникальностьДанныхДокумента(Отказ)
	
	ТаблицаНалоги = Налоги.Выгрузить();
	КолонкиСверки = "Налог, КодБК, СчетУчета, РегистрацияВНалоговомОргане, КодПоОКТМО, СрокУплаты";
	ТаблицаНалоги.Свернуть(КолонкиСверки);
	Если ТаблицаНалоги.Количество() <> Налоги.Количество() Тогда
		ОтборСтрок = Новый Структура(КолонкиСверки);
		Для Каждого СтрокаТаблицы Из ТаблицаНалоги Цикл
			
			ЗаполнитьЗначенияСвойств(ОтборСтрок, СтрокаТаблицы);
			МассивСтрок = Налоги.НайтиСтроки(ОтборСтрок);
			Если МассивСтрок.Количество() = 1 Тогда
				Продолжить;
			КонецЕсли;
			
			НомераСтрок = "";
			Для Каждого СтрокаМассива Из МассивСтрок Цикл
				НомераСтрок = НомераСтрок + ?(НомераСтрок <> "", ", ", "") + СтрокаМассива.НомерСтроки;
			КонецЦикла;
			
			ТекстСообщения = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
				НСтр("ru='Дублируются ключевые значения в строках %1 списка ""Налоги""'"),
				НомераСтрок);
				
			ОбщегоНазначения.СообщитьПользователю(ТекстСообщения,
				,
				"Налоги",
				"Объект",
				Отказ);
				
		КонецЦикла;
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Иначе
ВызватьИсключение НСтр("ru = 'Недопустимый вызов объекта на клиенте.'");
#КонецЕсли