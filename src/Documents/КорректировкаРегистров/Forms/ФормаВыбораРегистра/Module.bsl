
#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	ЭтоРозница = ОбщегоНазначенияУНФ.ЭтоРозница();
	
	Если ЭтоРозница Тогда
		МассивРегистровИсключений = МассивИсключенийДляРозницы();
	Иначе
		МассивРегистровИсключений = Новый Массив;
	КонецЕсли;
	
	СписокИспользуемыхРегистров.ЗагрузитьЗначения(Параметры.СписокИспользуемыхРегистров.ВыгрузитьЗначения());
	Для Каждого Регистр Из Метаданные.Документы.КорректировкаРегистров.Движения Цикл

		Если Метаданные.РегистрыНакопления.Содержит(Регистр) Тогда
			
			Если ЭтоРозница И НЕ МассивРегистровИсключений.Найти(Регистр.Имя) = Неопределено Тогда
				Продолжить
			КонецЕсли;

			Пометка = СписокИспользуемыхРегистров.НайтиПоЗначению(Регистр.Имя) <> Неопределено;
			СписокРегистровНакопления.Добавить(Регистр.Имя, Регистр.Синоним, Пометка);

		КонецЕсли;

	КонецЦикла;

	СписокРегистровНакопления.СортироватьПоЗначению(НаправлениеСортировки.Возр);

	Для Каждого Регистр Из Метаданные.Документы.КорректировкаРегистров.Движения Цикл

		Если Метаданные.РегистрыСведений.Содержит(Регистр) Тогда
			
			Если ЭтоРозница И НЕ МассивРегистровИсключений.Найти(Регистр.Имя) = Неопределено Тогда
				Продолжить
			КонецЕсли;

			Пометка = СписокИспользуемыхРегистров.НайтиПоЗначению(Регистр.Имя) <> Неопределено;
			СписокРегистровСведений.Добавить(Регистр.Имя, Регистр.Синоним, Пометка);

		КонецЕсли;

	КонецЦикла;

	СписокРегистровСведений.СортироватьПоЗначению(НаправлениеСортировки.Возр);

КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)

	ОбновитьЗаголовокСтраницыРегистра(ЗаголовокСтраницыРегистрыНакопления, СписокРегистровНакопления);

	ОбновитьЗаголовокСтраницыРегистра(ЗаголовокСтраницыРегистрыСведений, СписокРегистровСведений);

КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовТаблицыФормыСписокРегистровНакопления

&НаКлиенте
Процедура СписокРегистровНакопленияПриИзменении(Элемент)
	
	ОбновитьЗаголовокСтраницыРегистра(ЗаголовокСтраницыРегистрыНакопления, СписокРегистровНакопления);
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовТаблицыФормыСписокРегистровСведений

&НаКлиенте
Процедура СписокРегистровСведенийПриИзменении(Элемент)
	
	ОбновитьЗаголовокСтраницыРегистра(ЗаголовокСтраницыРегистрыСведений, СписокРегистровСведений);
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура ОК(Команда)

	Результат = Новый СписокЗначений;

	СоздатьСписокРегистровДляКорректировки(Результат, СписокРегистровНакопления);
	СоздатьСписокРегистровДляКорректировки(Результат, СписокРегистровСведений);

	Закрыть(Результат);

КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаСервере
Функция МассивИсключенийДляРозницы()
	
	МассивИсключений = Новый Массив;

	МассивИсключений.Добавить(Метаданные.РегистрыНакопления.ВнеоборотныеАктивы.Имя);
	МассивИсключений.Добавить(Метаданные.РегистрыНакопления.ВыработкаВнеоборотныхАктивов.Имя);
	МассивИсключений.Добавить(Метаданные.РегистрыНакопления.ВыпускПродукции.Имя);
	МассивИсключений.Добавить(Метаданные.РегистрыНакопления.ДоходыИРасходы.Имя);
	МассивИсключений.Добавить(Метаданные.РегистрыНакопления.ЗаданияНаРаботу.Имя);
	МассивИсключений.Добавить(Метаданные.РегистрыНакопления.ДоходыИРасходыПрогноз.Имя);
	МассивИсключений.Добавить(Метаданные.РегистрыНакопления.ЗаказыНаПроизводство.Имя);
	МассивИсключений.Добавить(Метаданные.РегистрыНакопления.ЗакупкиДляКУДиР.Имя);
	МассивИсключений.Добавить(Метаданные.РегистрыНакопления.ЗапасыВРемонте.Имя);
	МассивИсключений.Добавить(Метаданные.РегистрыНакопления.ЗапасыПереданныеВРемонте.Имя);
	МассивИсключений.Добавить(Метаданные.РегистрыНакопления.ПартииТоваровДляКУДиР.Имя);
	МассивИсключений.Добавить(Метаданные.РегистрыНакопления.ПартииТоваров.Имя);
	МассивИсключений.Добавить(Метаданные.РегистрыНакопления.РасчетыПоКредитамИЗаймам.Имя);
	МассивИсключений.Добавить(Метаданные.РегистрыНакопления.РасчетыПоНалогам.Имя);
	МассивИсключений.Добавить(Метаданные.РегистрыНакопления.СдельныеНаряды.Имя);
	МассивИсключений.Добавить(Метаданные.РегистрыНакопления.ФинансовыйРезультат.Имя);
	МассивИсключений.Добавить(Метаданные.РегистрыНакопления.ФинансовыйРезультатПрогноз.Имя);
	
	МассивИсключений.Добавить(Метаданные.РегистрыСведений.СостоянияВнеоборотныхАктивов.Имя);
	МассивИсключений.Добавить(Метаданные.РегистрыСведений.ПараметрыВнеоборотныхАктивов.Имя);

	Возврат МассивИсключений;
	
КонецФункции

&НаКлиенте
Процедура ОбновитьЗаголовокСтраницыРегистра(РеквизитЗаголовка, СписокРегистров)

	РеквизитЗаголовка = Строка(ПолучитьКоличествоПомеченных(СписокРегистров)) + "/" + Строка(
		СписокРегистров.Количество());

КонецПроцедуры

// Процедура создает список регистров для ручной корректировки.
//
&НаКлиенте
Процедура СоздатьСписокРегистровДляКорректировки(РезультатСписок, СписокРегистров)

	Для Каждого Элемент Из СписокРегистров Цикл

		РегистрИспользуется = СписокИспользуемыхРегистров.НайтиПоЗначению(Элемент.Значение) <> Неопределено;
		// Необходимо отключить регистр.
		Если Элемент.Пометка И Не РегистрИспользуется Тогда

			РезультатСписок.Добавить(Элемент.Значение, Элемент.Представление, Истина);

		// Необходимо добавить регистр.
		ИначеЕсли Не Элемент.Пометка И РегистрИспользуется Тогда

			РезультатСписок.Добавить(Элемент.Значение, Элемент.Представление, Ложь);

		КонецЕсли;
	КонецЦикла;

КонецПроцедуры

// Функция возвращает количество помеченных регистров в списке.
//
&НаКлиентеНаСервереБезКонтекста
Функция ПолучитьКоличествоПомеченных(СписокЗначений)

	Результат = 0;
	Для Каждого Элемент Из СписокЗначений Цикл
		Если Элемент.Пометка Тогда
			Результат = Результат + 1;
		КонецЕсли;
	КонецЦикла;

	Возврат Результат;

КонецФункции

#КонецОбласти
