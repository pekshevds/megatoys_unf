
#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	#Область БиблиотекаСтандартныхПодсистем
	
	// СтандартныеПодсистемы.ВерсионированиеОбъектов
	ВерсионированиеОбъектов.ПриСозданииНаСервере(ЭтотОбъект);
	// Конец СтандартныеПодсистемы.ВерсионированиеОбъектов
	
	// СтандартныеПодсистемы.ПодключаемыеКоманды
	ПодключаемыеКоманды.ПриСозданииНаСервере(ЭтотОбъект);
	// Конец СтандартныеПодсистемы.ПодключаемыеКоманды
	
	#КонецОбласти
	
	НапоминанияПользователяУНФ.УстановитьОтображениеКомандОрганайзера(Элементы);
	ЭлектроннаяПочтаУНФ.УстановитьОтображениеКомандОтправкиСообщений(Элементы);
	
КонецПроцедуры

&НаСервере
Процедура ПриЧтенииНаСервере(ТекущийОбъект)

	// СтандартныеПодсистемы.УправлениеДоступом
	Если ОбщегоНазначения.ПодсистемаСуществует("СтандартныеПодсистемы.УправлениеДоступом") Тогда
		МодульУправлениеДоступом = ОбщегоНазначения.ОбщийМодуль("УправлениеДоступом");
		МодульУправлениеДоступом.ПриЧтенииНаСервере(ЭтотОбъект, ТекущийОбъект);
	КонецЕсли;
	// Конец СтандартныеПодсистемы.УправлениеДоступом
	
	// СтандартныеПодсистемы.Свойства
	УправлениеСвойствами.ПриЧтенииНаСервере(ЭтаФорма, ТекущийОбъект);
	// Конец СтандартныеПодсистемы.Свойства 
	
    // СтандартныеПодсистемы.ПодключаемыеКоманды
    ПодключаемыеКомандыКлиентСервер.ОбновитьКоманды(ЭтотОбъект, Объект);
    // Конец СтандартныеПодсистемы.ПодключаемыеКоманды
	
	ДатыЗапретаИзменения.ОбъектПриЧтенииНаСервере(ЭтаФорма, ТекущийОбъект);
	
КонецПроцедуры

&НаКлиенте
Процедура ПослеЗаписи(ПараметрыЗаписи)
	
	ПодключаемыеКомандыКлиент.ПослеЗаписи(ЭтотОбъект, Объект, ПараметрыЗаписи);		
	
КонецПроцедуры

&НаКлиенте
Процедура ПередЗаписью(Отказ, ПараметрыЗаписи)
	
	// СтандартныеПодсистемы.ОценкаПроизводительности
	Если ПараметрыЗаписи.РежимЗаписи = РежимЗаписиДокумента.Проведение Тогда
		ОценкаПроизводительностиКлиент.ЗамерВремени("Проведение"+ РаботаСФормойДокументаКлиентСервер.ПолучитьИмяФормыСтрокой(ЭтотОбъект.ИмяФормы));
	КонецЕсли;
	// СтандартныеПодсистемы.ОценкаПроизводительности	
	
КонецПроцедуры


#Область ОбработчикиСобытийЭлементовШапки

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	// СтандартныеПодсистемы.ПодключаемыеКоманды
	ПодключаемыеКомандыКлиент.НачатьОбновлениеКоманд(ЭтотОбъект);
	// Конец СтандартныеПодсистемы.ПодключаемыеКоманды
КонецПроцедуры

#КонецОбласти

&НаСервере
Процедура ПослеЗаписиНаСервере(ТекущийОбъект, ПараметрыЗаписи)
	// СтандартныеПодсистемы.УправлениеДоступом
	УправлениеДоступом.ПослеЗаписиНаСервере(ЭтотОбъект, ТекущийОбъект, ПараметрыЗаписи);
	// Конец СтандартныеПодсистемы.УправлениеДоступом
КонецПроцедуры

&НаКлиенте
Процедура ОбработатьИзмененияРеквизитовПечати(Результат, ДополнительныеПараметры) Экспорт
	
	Если ТипЗнч(Результат) = Тип("Структура") Тогда
		
		ПечатьДокументовУНФКлиент.ОбновитьЗначенияРеквизитовПечати(ЭтотОбъект, Результат.ИзмененныеРеквизиты);
		
		Если Результат.Свойство("Команда") Тогда
			
			Подключаемый_ВыполнитьКоманду(Результат.Команда);
			
		КонецЕсли;
				
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура КомментарийНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	
	ОбщегоНазначенияКлиент.ПоказатьФормуРедактированияКомментария(Элемент.ТекстРедактирования, ЭтотОбъект, "Объект.Комментарий");
	СтатистикаИспользованияФормКлиент.ПриИнтерактивномДействии(ЭтотОбъект, Элемент, "НачалоВыбора");
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы

// СтандартныеПодсистемы.ПодключаемыеКоманды
&НаКлиенте
Процедура Подключаемый_ВыполнитьКоманду(Команда)	
	ПодключаемыеКомандыКлиент.НачатьВыполнениеКоманды(ЭтотОбъект, Команда, Объект)
КонецПроцедуры

&НаКлиенте
Процедура Подключаемый_ПродолжитьВыполнениеКомандыНаСервере(ПараметрыВыполнения, ДополнительныеПараметры) Экспорт
    ВыполнитьКомандуНаСервере(ПараметрыВыполнения);
КонецПроцедуры

&НаСервере
Процедура ВыполнитьКомандуНаСервере(ПараметрыВыполнения)
    ПодключаемыеКоманды.ВыполнитьКоманду(ЭтотОбъект, ПараметрыВыполнения, Объект);
КонецПроцедуры

&НаКлиенте
Процедура Подключаемый_ОбновитьКоманды()
	ПодключаемыеКомандыКлиентСервер.ОбновитьКоманды(ЭтотОбъект, Объект);
КонецПроцедуры
// Конец СтандартныеПодсистемы.ПодключаемыеКоманды

&НаКлиенте
Процедура ГенерацияПромокодов(Команда)
	Если Не ЗначениеЗаполнено(Объект.УсловиеПредоставленияСкидки) Тогда
		Сообщение = Новый СообщениеПользователю;
		Сообщение.Текст = НСтр("ru = 'Для добавления промокодов, необходимо указать скидку (наценку).'");
		Сообщение.УстановитьДанные(ЭтотОбъект);
		Сообщение.Поле = "СкидкаНаценка";
		Сообщение.Сообщить();
	Иначе
		ОткрытьФормуГенерацииПромокодов();
	КонецЕсли;
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаКлиенте
Процедура ОткрытьФормуГенерацииПромокодов()
	ПараметрыОткрытия = СтруктураПараметровОткрытияФормыГенерацииПромокодов(Объект.УсловиеПредоставленияСкидки);
	ПараметрыОткрытия.Вставить("Документ", Объект.Ссылка);
	ОповещениеПриЗавершении = Новый ОписаниеОповещения("ОповещениеГенерацииПромокодов", ЭтотОбъект);
	ОткрытьФорму("Обработка.ГенерацияПромокодов.Форма.Форма", ПараметрыОткрытия, ЭтотОбъект,,,,ОповещениеПриЗавершении); 
КонецПроцедуры


&НаСервереБезКонтекста
Функция СтруктураПараметровОткрытияФормыГенерацииПромокодов(УсловиеПредоставленияСкидки)
	ПараметрыОткрытия = Новый Структура();
	ПараметрыОткрытия.Вставить("УсловиеПредоставленияСкидки", УсловиеПредоставленияСкидки);
	ПараметрыОткрытия.Вставить("ШаблонПромокода", ОбщегоНазначения.ЗначениеРеквизитаОбъекта(УсловиеПредоставленияСкидки, "ШаблонПромокода"));
	Возврат ПараметрыОткрытия;
КонецФункции
&НаКлиенте
Процедура ПромокодыПриНачалеРедактирования(Элемент, НоваяСтрока, Копирование)
	Если НоваяСтрока Тогда
		Элементы.Промокоды.ТекущиеДанные.УсловиеПредоставленияСкидки = Объект.УсловиеПредоставленияСкидки;
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура ОповещениеГенерацииПромокодов(Результат, ДополнительныеПараметры) Экспорт
	
	Если НЕ Результат = Неопределено И НЕ Результат = КодВозвратаДиалога.Отмена Тогда		
		АдресТаблицыПромокодов = "";
		Если Результат.Свойство("АдресТаблицыПромокодов", АдресТаблицыПромокодов) И ЗначениеЗаполнено(АдресТаблицыПромокодов) Тогда
			ЗагрузитьСгенерированныеПромокоды(АдресТаблицыПромокодов);
		КонецЕсли;
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура ЗагрузитьСгенерированныеПромокоды(АдресТаблицы)
	
	ТаблицаПромокодов = ПолучитьИзВременногоХранилища(АдресТаблицы);
	Для Каждого СтрокаДобавить Из ТаблицаПромокодов Цикл
		ЗаполнитьЗначенияСвойств(объект.Промокоды.Добавить(), СтрокаДобавить);
	КонецЦикла;
	
КонецПроцедуры

&НаКлиенте
Процедура УсловиеПриИзменении(Элемент)
	Для Каждого СтрокаПромокода Из Объект.Промокоды Цикл
		СтрокаПромокода.УсловиеПредоставленияСкидки = Объект.УсловиеПредоставленияСкидки;
	КонецЦикла;
КонецПроцедуры


#КонецОбласти
