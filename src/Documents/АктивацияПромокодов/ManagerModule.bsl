#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область ПрограммныйИнтерфейс

// Определяет настройки объекта для подсистемы ВерсионированиеОбъектов.
//
// Параметры:
//  Настройки - Структура - настройки подсистемы.
Процедура ПриОпределенииНастроекВерсионированияОбъектов(Настройки) Экспорт
	
КонецПроцедуры

// Определяет список команд заполнения.
//
// Параметры:
//   КомандыЗаполнения - ТаблицаЗначений - Таблица с командами заполнения. Для изменения.
//       См. описание 1 параметра процедуры ЗаполнениеОбъектовПереопределяемый.ПередДобавлениемКомандЗаполнения().
//   Параметры - Структура - Вспомогательные параметры. Для чтения.
//       См. описание 2 параметра процедуры ЗаполнениеОбъектовПереопределяемый.ПередДобавлениемКомандЗаполнения().
//
//@skip-warning
Процедура ДобавитьКомандыЗаполнения(КомандыЗаполнения, Параметры) Экспорт
	
КонецПроцедуры

#Область ИнтерфейсПечати

// Заполняет список команд печати.
// 
// Параметры:
//   КомандыПечати - ТаблицаЗначений - состав полей см. в функции УправлениеПечатью.СоздатьКоллекциюКомандПечати.
//
Процедура ДобавитьКомандыПечати(КомандыПечати) Экспорт
	
КонецПроцедуры

Функция ПолучитьНеотправленныеПромокоды(ДокументыАктивации, ЗарезервированныеПромокоды, Скидка = Неопределено) Экспорт
	
	Запрос = Новый Запрос;
	ТекстЗапроса = 
	"ВЫБРАТЬ Различные Разрешенные
	|	АктивацияПромокодовПромокоды.Промокод
	|ИЗ
	|	Документ.АктивацияПромокодов.Промокоды КАК АктивацияПромокодовПромокоды
	|Где
	|	АктивацияПромокодовПромокоды.Ссылка В (&Ссылки)
	|	И АктивацияПромокодовПромокоды.УсловиеПредоставленияСкидки В (&Условия)
	|	И Не АктивацияПромокодовПромокоды.Промокод В (&ЗарезервированныеПромокоды)
	|	И Не АктивацияПромокодовПромокоды.Промокод В
	|		(Выбрать
	|			Отправлено.Промокод
	|		Из
	|			Документ.МассоваяРассылка.Промокоды как Отправлено
	|		Где
	|			Не Отправлено.Ссылка.ПометкаУдаления)
	|	";
	Если Скидка = Неопределено Тогда
		ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "И АктивацияПромокодовПромокоды.УсловиеПредоставленияСкидки В (&Условия)", "");
	Иначе
		ПодходящиеУсловия = ПромокодыУНФ.УсловияПримененияСкидокЗаПромокод(Скидка);
		Запрос.УстановитьПараметр("Условия", ПодходящиеУсловия[Скидка]);		
	КонецЕсли;
	Запрос.Текст = ТекстЗапроса;
	Запрос.УстановитьПараметр("Ссылки", ДокументыАктивации);
	Запрос.УстановитьПараметр("ЗарезервированныеПромокоды", ЗарезервированныеПромокоды);
	Результат = Запрос.Выполнить().Выгрузить();
	Возврат Результат.ВыгрузитьКолонку("Промокод");
КонецФункции

Функция ПолучитьСписокУсловий(ДокументыАктивации) Экспорт
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ Различные Разрешенные
	|	АктивацияПромокодовПромокоды.УсловиеПредоставленияСкидки как Условие
	|ИЗ
	|	Документ.АктивацияПромокодов.Промокоды КАК АктивацияПромокодовПромокоды
	|ГДЕ
	|	АктивацияПромокодовПромокоды.Ссылка В (&Ссылки)";
	Запрос.УстановитьПараметр("Ссылки", ДокументыАктивации);
	Возврат Запрос.Выполнить().Выгрузить().ВыгрузитьКолонку("Условие");
КонецФункции

#КонецОбласти

#КонецОбласти

#Область Проведение

Функция ТекстЗапросаИнициализироватьДанныеДокумента()	
	Возврат
	"ВЫБРАТЬ
	|	АктивацияПромокодов.Ссылка КАК Ссылка,
	|	АктивацияПромокодов.Дата КАК Дата,
	|	АктивацияПромокодов.Ответственный КАК Ответственный,
	|	АктивацияПромокодов.Автор КАК Автор,
	|	АктивацияПромокодов.КоличествоПромокодов КАК КоличествоПромокодов,
	|	АктивацияПромокодов.УсловиеПредоставленияСкидки КАК УсловиеПредоставленияСкидки,
	|	АктивацияПромокодов.ДокументОснование КАК ДокументОснование,
	|	АктивацияПромокодов.Комментарий КАК Комментарий
	|ПОМЕСТИТЬ ВременнаяТаблицаШапка
	|ИЗ
	|	Документ.АктивацияПромокодов КАК АктивацияПромокодов
	|ГДЕ
	|	АктивацияПромокодов.Ссылка = &Ссылка
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	Промокоды.Ссылка КАК Ссылка,
	|	Промокоды.НомерСтроки КАК НомерСтроки,
	|	Промокоды.Промокод КАК Промокод,
	|	Промокоды.УсловиеПредоставленияСкидки КАК УсловиеПредоставленияСкидки,
	|	Промокоды.Доступно КАК Доступно,
	|	Промокоды.ДействуетС КАК ДействуетС,
	|	Промокоды.ДействуетДо КАК ДействуетДо,
	|	ВЫБОР
	|		КОГДА Промокоды.Доступно = 0
	|			ТОГДА ЛОЖЬ
	|		ИНАЧЕ ИСТИНА
	|	КОНЕЦ КАК Конечный
	|ПОМЕСТИТЬ ВременнаяТаблицаПромокоды
	|ИЗ
	|	Документ.АктивацияПромокодов.Промокоды КАК Промокоды,
	|	ВременнаяТаблицаШапка КАК ВременнаяТаблицаШапка
	|ГДЕ
	|	Промокоды.Ссылка = &Ссылка";
	
КонецФункции

// Инициализирует таблицы значений, содержащие данные табличных частей документа.
// Таблицы значений сохраняет в свойствах структуры "ДополнительныеСвойства".
Процедура ИнициализироватьДанныеДокумента(ДокументСсылкаАктивацияПромокодов, СтруктураДополнительныеСвойства, Регистры = Неопределено) Экспорт
		
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = СтруктураДополнительныеСвойства.ДляПроведения.СтруктураВременныеТаблицы.МенеджерВременныхТаблиц;
	Запрос.Текст = ТекстЗапросаИнициализироватьДанныеДокумента();
	
	Запрос.УстановитьПараметр("Ссылка", ДокументСсылкаАктивацияПромокодов);
	Запрос.УстановитьПараметр("МоментВремени", Новый Граница(СтруктураДополнительныеСвойства.ДляПроведения.МоментВремени, ВидГраницы.Включая));
	
	Запрос.ВыполнитьПакет();
	
	СформироватьТаблицаПромокоды(ДокументСсылкаАктивацияПромокодов, СтруктураДополнительныеСвойства);
	СформироватьТаблицаДоступностьПромокодов(ДокументСсылкаАктивацияПромокодов, СтруктураДополнительныеСвойства);
	
КонецПроцедуры // ИнициализироватьДанныеДокумента()


// Формирует таблицу значений, содержащую данные для проведения по регистру.
// Таблицы значений сохраняет в свойствах структуры "ДополнительныеСвойства".
//
Процедура СформироватьТаблицаПромокоды(ДокументСсылкаАктивацияПромокодов, СтруктураДополнительныеСвойства)
	
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = СтруктураДополнительныеСвойства.ДляПроведения.СтруктураВременныеТаблицы.МенеджерВременныхТаблиц;
	Запрос.Текст =
	"ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ТаблицаШапка.Дата КАК Период,
	|	Промокоды.Промокод КАК Промокод,
	|	Промокоды.УсловиеПредоставленияСкидки КАК УсловиеПредоставленияСкидки,
	|	Промокоды.ДействуетС КАК ДействуетС,
	|	Промокоды.ДействуетДо КАК ДействуетДо,
	|	Промокоды.Конечный КАК Конечный
	|ИЗ
	|	ВременнаяТаблицаПромокоды КАК Промокоды,
	|	ВременнаяТаблицаШапка КАК ТаблицаШапка
	|";
	
	
	РезультатЗапроса = Запрос.Выполнить();
	
	СтруктураДополнительныеСвойства.ТаблицыДляДвижений.Вставить("ТаблицаПромокоды", РезультатЗапроса.Выгрузить());
		
КонецПроцедуры // СформироватьТаблицаЗапасы()

// Формирует таблицу значений, содержащую данные для проведения по регистру.
// Таблицы значений сохраняет в свойствах структуры "ДополнительныеСвойства".
//
Процедура СформироватьТаблицаДоступностьПромокодов(ДокументСсылкаЧекККМ, СтруктураДополнительныеСвойства)
	
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = СтруктураДополнительныеСвойства.ДляПроведения.СтруктураВременныеТаблицы.МенеджерВременныхТаблиц;
	Запрос.Текст =
	"ВЫБРАТЬ
	|	ТаблицаШапка.Дата КАК Период,
	|	ТаблицаПромокоды.Промокод КАК Промокод,
	|	СУММА(ТаблицаПромокоды.Доступно) КАК Доступно
	|ИЗ
	|	ВременнаяТаблицаПромокоды КАК ТаблицаПромокоды,
	|	ВременнаяТаблицаШапка КАК ТаблицаШапка
	|ГДЕ
	|	ТаблицаПромокоды.Конечный
	|
	|СГРУППИРОВАТЬ ПО
	|	ТаблицаШапка.Дата,
	|	ТаблицаПромокоды.Промокод";
	
	РезультатЗапроса = Запрос.Выполнить();
	
	СтруктураДополнительныеСвойства.ТаблицыДляДвижений.Вставить("ТаблицаДоступностьПромокодов", РезультатЗапроса.Выгрузить());
		
КонецПроцедуры // СформироватьТаблицаЗапасы()

#КонецОбласти


#КонецЕсли
