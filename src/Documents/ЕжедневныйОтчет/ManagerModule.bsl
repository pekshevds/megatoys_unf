#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область ПрограммныйИнтерфейс

// Заполняет табличную часть документа сотрудниками смены
//
// Параметры:
//  Объект - ДокументОбъект.ЕжедневныйОтчет, ДанныеФормыСтруктура - объект в котором необходимо заполнить табличную часть.
//
Процедура ЗаполнитьТабличнуюЧастьСотрудникиСмены(Объект) Экспорт
	
	СотрудникиСмены = ПолучитьСписокСотрудниковСмены(Объект);
	Если СотрудникиСмены <> Неопределено Тогда
		Для каждого СтрокаТаблицы Из СотрудникиСмены Цикл

			НоваяСтрока = Объект.ОтработанноеВремя.Добавить();
			НоваяСтрока.Сотрудник = СтрокаТаблицы.Сотрудник;
			НоваяСтрока.НачалоРаботы = СтрокаТаблицы.Период;
			НоваяСтрока.ОкончаниеРаботы = СтрокаТаблицы.ДатаОкончания;
			НоваяСтрока.ПродолжительностьДня = СтрокаТаблицы.ПродолжительностьРабочегоВремени;

		КонецЦикла;
		
	КонецЕсли;

КонецПроцедуры

// Инициализирует таблицы значений, содержащие данные документа.
// Таблицы значений сохраняет в свойствах структуры "ДополнительныеСвойства".
//
// Параметры:
//  ДокументСсылка - ДокументСсылка.ВозвратТоваровОтПокупателя - документ для инициализации.
//  ДополнительныеСвойства - Структура - дополнительные свойства выполнения операции.
//
Процедура ИнициализироватьДанныеДокумента(ДокументСсылка, ДополнительныеСвойства) Экспорт
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("Ссылка", ДокументСсылка);
	Запрос.Текст =
	"ВЫБРАТЬ
	|	ВидыИспользованияРабочегоВремени.Ссылка КАК ВидВремени
	|ПОМЕСТИТЬ ВидыВремени
	|ИЗ
	|	Справочник.ВидыРабочегоВремени КАК ВидыИспользованияРабочегоВремени
	|ГДЕ
	|	ВидыИспользованияРабочегоВремени.Ссылка = ЗНАЧЕНИЕ(Справочник.ВидыРабочегоВремени.Работа)
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ЕжедневныйОтчетОтработанноеВремя.Ссылка.ДатаОтчета КАК ПЕРИОД,
	|	ЕжедневныйОтчетОтработанноеВремя.Ссылка.РабочаяСмена.Склад КАК Склад,
	|	ЕжедневныйОтчетОтработанноеВремя.Ссылка.РабочаяСмена КАК Смена,
	|	ЕжедневныйОтчетОтработанноеВремя.Сотрудник КАК Сотрудник,
	|	ВидыВремени.ВидВремени КАК ВидВремени,
	|	ЕжедневныйОтчетОтработанноеВремя.НачалоРаботы КАК НачалоРаботы,
	|	ЕжедневныйОтчетОтработанноеВремя.ОкончаниеРаботы КАК ОкончаниеРаботы,
	|	ЧАС(ЕжедневныйОтчетОтработанноеВремя.ПродолжительностьДня) + МИНУТА(ЕжедневныйОтчетОтработанноеВремя.ПродолжительностьДня) / 60 КАК РабочееВремяСотрудников,
	|	ЕжедневныйОтчетОтработанноеВремя.НомерСтроки КАК НомерСтроки,
	|	ЕжедневныйОтчетОтработанноеВремя.Ссылка.ДатаОтчета КАК ДатаОтчета
	|ПОМЕСТИТЬ ПериодыПоВидамВремени
	|ИЗ
	|	Документ.ЕжедневныйОтчет.ОтработанноеВремя КАК ЕжедневныйОтчетОтработанноеВремя
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВидыВремени КАК ВидыВремени
	|		ПО (ИСТИНА)
	|ГДЕ
	|	ЕжедневныйОтчетОтработанноеВремя.Ссылка = &Ссылка
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ПериодыПоВидамВремени.ПЕРИОД КАК ПЕРИОД,
	|	ПериодыПоВидамВремени.Склад КАК Склад,
	|	ПериодыПоВидамВремени.Смена КАК Смена,
	|	ПериодыПоВидамВремени.Сотрудник КАК Сотрудник,
	|	ПериодыПоВидамВремени.ВидВремени КАК ВидВремени,
	|	ПериодыПоВидамВремени.НачалоРаботы КАК НачалоРаботы,
	|	ПериодыПоВидамВремени.ОкончаниеРаботы КАК ОкончаниеРаботы,
	|	ПериодыПоВидамВремени.РабочееВремяСотрудников КАК РабочееВремяСотрудников,
	|	ПериодыПоВидамВремени.НомерСтроки КАК НомерСтроки,
	|	ПериодыПоВидамВремени.ДатаОтчета КАК ДатаОтчета
	|ИЗ
	|	ПериодыПоВидамВремени КАК ПериодыПоВидамВремени
	|ГДЕ
	|	ПериодыПоВидамВремени.НачалоРаботы ЕСТЬ НЕ NULL 
	|	И ПериодыПоВидамВремени.ОкончаниеРаботы ЕСТЬ НЕ NULL ";
	ТаблицаРезультат = Запрос.Выполнить().Выгрузить();
	
	ТаблицыДляДвижений = ДополнительныеСвойства.ТаблицыДляДвижений;
	ТаблицыДляДвижений.Вставить("ТаблицаФактическоеРабочееВремяСотрудников", ТаблицаРезультат);
	
КонецПроцедуры

// Определяет настройки объекта для подсистемы ВерсионированиеОбъектов.
//
// Параметры:
//  Настройки - Структура - настройки подсистемы.
Процедура ПриОпределенииНастроекВерсионированияОбъектов(Настройки) Экспорт
	
КонецПроцедуры

// Определяет список команд заполнения.
//
// Параметры:
//   КомандыЗаполнения - ТаблицаЗначений - Таблица с командами заполнения. Для изменения.
//       См. описание 1 параметра процедуры ЗаполнениеОбъектовПереопределяемый.ПередДобавлениемКомандЗаполнения().
//   Параметры - Структура - Вспомогательные параметры. Для чтения.
//       См. описание 2 параметра процедуры ЗаполнениеОбъектовПереопределяемый.ПередДобавлениемКомандЗаполнения().
//
Процедура ДобавитьКомандыЗаполнения(КомандыЗаполнения, Параметры) Экспорт
	
КонецПроцедуры

// СтандартныеПодсистемы.УправлениеДоступом

// При заполнении ограничений доступа
//
// Параметры:
//   Ограничение - см. УправлениеДоступомПереопределяемый.ПриЗаполненииОграниченияДоступа.Ограничение.
//
Процедура ПриЗаполненииОграниченияДоступа(Ограничение) Экспорт

	Ограничение.Текст =
	"РазрешитьЧтениеИзменение
	|ГДЕ 
	|	ИСТИНА";

КонецПроцедуры

// Конец СтандартныеПодсистемы.УправлениеДоступом

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

#Область ИнтерфейсПечати

// Заполняет список команд печати.
// 
// Параметры:
//   КомандыПечати - ТаблицаЗначений - состав полей см. в функции УправлениеПечатью.СоздатьКоллекциюКомандПечати.
//
Процедура ДобавитьКомандыПечати(КомандыПечати) Экспорт
	
КонецПроцедуры

#КонецОбласти

Функция ПолучитьСписокСотрудниковСмены(Объект)
	
	РабочаяСмена = Объект.РабочаяСмена;
	Если ЗначениеЗаполнено(РабочаяСмена) Тогда
		Запрос = Новый Запрос;
		Запрос.Текст =
		"ВЫБРАТЬ
		|	Планы.Сотрудник КАК Сотрудник,
		|	Планы.Период КАК Период,
		|	Планы.ДатаОкончания КАК ДатаОкончания,
		|	ДОБАВИТЬКДАТЕ(ДАТАВРЕМЯ(1, 1, 1, 0, 0, 0), ЧАС, СУММА(РАЗНОСТЬДАТ(ДАТАВРЕМЯ(1, 1, 1, 0, 0, 0), Планы.ПродолжительностьРабочегоВремени, МИНУТА) / 60)) КАК ПродолжительностьРабочегоВремени
		|ИЗ
		|	РегистрСведений.ПланируемоеРабочееВремяСотрудников КАК Планы
		|ГДЕ
		|	Планы.Период МЕЖДУ НАЧАЛОПЕРИОДА(&ДатаОтчета, ДЕНЬ) И КОНЕЦПЕРИОДА(&ДатаОтчета, ДЕНЬ)
		|	И Планы.РабочаяСмена = &РабочаяСмена
		|
		|СГРУППИРОВАТЬ ПО
		|	Планы.Сотрудник,
		|	Планы.Период,
		|	Планы.ДатаОкончания";
		
		Запрос.УстановитьПараметр("РабочаяСмена", РабочаяСмена);
		Запрос.УстановитьПараметр("ДатаОтчета", Объект.ДатаОтчета);
		
		Результат = Запрос.Выполнить();
		Если НЕ Результат.Пустой() Тогда
			Возврат Результат.Выгрузить();
		Иначе
			Возврат Неопределено;
		КонецЕсли;
	Иначе
		ТекстОшибки = НСтр("ru = 'Смена не выбрана, заполнять нечем'");
		ОбщегоНазначения.СообщитьПользователю(
		ТекстОшибки,
		,
		"Объект.РабочаяСмена",
		,);
		Возврат Неопределено;
	КонецЕсли;
	
КонецФункции
	
#КонецОбласти

#КонецЕсли
