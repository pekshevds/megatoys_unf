
#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	// СтандартныеПодсистемы.ПодключаемыеКоманды
	ПодключаемыеКоманды.ПриСозданииНаСервере(ЭтотОбъект);
	// Конец СтандартныеПодсистемы.ПодключаемыеКоманды
	
	// СтандартныеПодсистемы.ВерсионированиеОбъектов
	ВерсионированиеОбъектов.ПриСозданииНаСервере(ЭтотОбъект);
	// Конец СтандартныеПодсистемы.ВерсионированиеОбъектов
	
	Если Параметры.Ключ.Пустая() Тогда
		ПодготовитьФормуНаСервере();
	КонецЕсли;
	
	ТекущаяОрганизация = Объект.Организация;
	
	УстановитьУсловноеОформление();
	
	ЗаполнитьВременныеРеквизиты();

	РегламентированнаяОтчетностьКлиентСервер.ПриИнициализацииФормыРегламентированногоОтчета(ЭтаФорма);
	
	ЭлектронныйДокументооборотСКонтролирующимиОрганами.ОтметитьКакПрочтенное(Объект.Ссылка);
	
	ПрослеживаемостьСобытияФормПереопределяемый.ПриСозданииНаСервере(ЭтотОбъект, Отказ, СтандартнаяОбработка);
	
	УправлениеФормой(ЭтотОбъект);
	
	ПроверитьПолучениеОтветаОтФНС();
	
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	
	// СтандартныеПодсистемы.ПодключаемыеКоманды
	ПодключаемыеКомандыКлиент.НачатьОбновлениеКоманд(ЭтотОбъект);
	// Конец СтандартныеПодсистемы.ПодключаемыеКоманды
	
КонецПроцедуры

&НаКлиенте
Процедура ОбработкаВыбора(ВыбранноеЗначение, ИсточникВыбора)
	
	Если ИсточникВыбора.ИмяФормы = "Документ.УведомлениеОПеремещенииПрослеживаемыхТоваров.Форма.ФормаВыбора" Тогда
		
		Объект.ДокументУведомлениеОПеремещении = ВыбранноеЗначение;
		ВыполнитьЗаполнениеДокумента();
		Модифицированность = Истина;
		
	
	ИначеЕсли ИсточникВыбора.ИмяФормы = 
			ПрослеживаемостьФормыКлиентПереопределяемый.ФормаВыбораСопроводительногоДокументаВУведомленииОПеремещении() Тогда
		
		ТекущиеДанные = Элементы.Товары.ТекущиеДанные;
		ТекущиеДанные.СопроводительныйДокумент = ВыбранноеЗначение;
		
	ИначеЕсли ИсточникВыбора.ИмяФормы = 
		"Документ.УведомлениеОПеремещенииПрослеживаемыхТоваров.Форма.ФормаВыбораКорректировочныхДокументов" Тогда
		
		НайденныеСтроки = Объект.КорректировочныеДокументы.НайтиСтроки(
			Новый Структура("КлючСтроки,ПорядковыйНомер", 
				ВыбранноеЗначение.КлючСтроки, ВыбранноеЗначение.ПорядковыйНомер));
		
		Для Каждого ТекущаяСтрока Из НайденныеСтроки Цикл
			
			Объект.КорректировочныеДокументы.Удалить(ТекущаяСтрока);
				
		КонецЦикла;		
		
		Для Каждого ТекущаяСтрока Из ВыбранноеЗначение.КорректировочныеДокументы Цикл
			
			НоваяСтрока = Объект.КорректировочныеДокументы.Добавить();
			ЗаполнитьЗначенияСвойств(НоваяСтрока, ТекущаяСтрока);
			НоваяСтрока.КлючСтроки = ВыбранноеЗначение.КлючСтроки;
			НоваяСтрока.ПорядковыйНомер = ВыбранноеЗначение.ПорядковыйНомер;
			
		КонецЦикла;
		
		ЗаполнитьВременныеРеквизиты()

	ИначеЕсли ИсточникВыбора.ИмяФормы = "Документ.УведомлениеОПеремещенииПрослеживаемыхТоваров.Форма.ФормаТранзитныхСтран" Тогда
		
		НайденныеСтроки = Объект.ТранзитныеСтраныЕАЭС.НайтиСтроки(
			Новый Структура("КлючСтроки,ЭтоСтрокаСИсходнымиСтранами",
				ВыбранноеЗначение.КлючСтроки, ВыбранноеЗначение.ЭтоСтрокаСИсходнымиСтранами));
		
		Для Каждого ТекущаяСтрока Из НайденныеСтроки Цикл
			
			Объект.ТранзитныеСтраныЕАЭС.Удалить(ТекущаяСтрока);
				
		КонецЦикла;		
		
		Для Каждого ТекущаяСтрока Из ВыбранноеЗначение.ТранзитныеСтраныЕАЭС Цикл
			
			НоваяСтрока = Объект.ТранзитныеСтраныЕАЭС.Добавить();
			ЗаполнитьЗначенияСвойств(НоваяСтрока, ТекущаяСтрока);
			НоваяСтрока.КлючСтроки = ВыбранноеЗначение.КлючСтроки;
			НоваяСтрока.ЭтоСтрокаСИсходнымиСтранами = ВыбранноеЗначение.ЭтоСтрокаСИсходнымиСтранами;
			
		КонецЦикла;
		
		Модифицированность = Истина;
		
		ЗаполнитьВременныеРеквизиты()
		
		
	Иначе
		
		ПрослеживаемостьФормыКлиент.ОбработкаВыбораУведомления(ЭтотОбъект, ВыбранноеЗначение, ИсточникВыбора);
		
	КонецЕсли;
	
	УправлениеФормой(ЭтотОбъект);
	
КонецПроцедуры

&НаКлиенте
Процедура ОбработкаОповещения(ИмяСобытия, Параметр, Источник)
	
	ПрослеживаемостьСобытияФормКлиентПереопределяемый.ОбработкаОповещения(ЭтаФорма, Объект.Ссылка, ИмяСобытия, Параметр, Источник);
	
	Если ИмяСобытия = "Завершение отправки в контролирующий орган" 
		ИЛИ ИмяСобытия = "Завершение отправки" Тогда
		
		ПроверитьПолучениеОтветаОтФНС();
		
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура ПриЧтенииНаСервере(ТекущийОбъект)
	
	
	// СтандартныеПодсистемы.УправлениеДоступом
	Если ОбщегоНазначения.ПодсистемаСуществует("СтандартныеПодсистемы.УправлениеДоступом") Тогда
		МодульУправлениеДоступом = ОбщегоНазначения.ОбщийМодуль("УправлениеДоступом");
		МодульУправлениеДоступом.ПриЧтенииНаСервере(ЭтотОбъект, ТекущийОбъект);
	КонецЕсли;
	// Конец СтандартныеПодсистемы.УправлениеДоступом
	
	// СтандартныеПодсистемы.ДатыЗапретаИзменения
	ДатыЗапретаИзменения.ОбъектПриЧтенииНаСервере(ЭтаФорма, ТекущийОбъект);
	// Конец СтандартныеПодсистемы.ДатыЗапретаИзменения
	
	// СтандартныеПодсистемы.ПодключаемыеКоманды
	ПодключаемыеКомандыКлиентСервер.ОбновитьКоманды(ЭтотОбъект, Объект);
	// Конец СтандартныеПодсистемы.ПодключаемыеКоманды
	
	ПодготовитьФормуНаСервере();
	
	ПрослеживаемостьСобытияФормПереопределяемый.ПриЧтенииНаСервере(ЭтотОбъект, ТекущийОбъект);
	
КонецПроцедуры

&НаКлиенте
Процедура ПередЗаписью(Отказ, ПараметрыЗаписи)
	
	Если Объект.НомерКорректировки = 0 Тогда
		
		Отказ = Истина;
		ТекстИсключения = НСтр("ru = 'Корректировку c №0 вводить нельзя!'");
		
		ВызватьИсключение(ТекстИсключения);
		
	КонецЕсли;
	
	ПрослеживаемостьСобытияФормКлиентПереопределяемый.ПередЗаписью(ЭтотОбъект, Отказ, ПараметрыЗаписи);
	
КонецПроцедуры

&НаСервере
Процедура ПослеЗаписиНаСервере(ТекущийОбъект, ПараметрыЗаписи)
	
	Если Не ПараметрыЗаписи.Свойство("СопроводительныеДокументы") Тогда
		ПараметрыЗаписи.Вставить("СопроводительныеДокументы", ТекущийОбъект.Товары.ВыгрузитьКолонку("СопроводительныйДокумент"));
	КонецЕсли;
	
	// СтандартныеПодсистемы.УправлениеДоступом
	УправлениеДоступом.ПослеЗаписиНаСервере(ЭтотОбъект, ТекущийОбъект, ПараметрыЗаписи);
	// Конец СтандартныеПодсистемы.УправлениеДоступом
	
	ПрослеживаемостьБРУ.СохранитьСтатусОтправки(ЭтотОбъект);
	
	ПрослеживаемостьБРУ.УстановитьЗаголовокФормыУведомлениеОПеремещении(ЭтотОбъект);
	
	ЗаполнитьВременныеРеквизиты();
	
	УстановитьСостояниеДокумента();
	
	ПрослеживаемостьСобытияФормПереопределяемый.ПослеЗаписиНаСервере(ЭтаФорма, ТекущийОбъект, ПараметрыЗаписи);
	
КонецПроцедуры

&НаКлиенте
Процедура ПослеЗаписи(ПараметрыЗаписи)
	
	// СтандартныеПодсистемы.ПодключаемыеКоманды
	ПодключаемыеКомандыКлиент.ПослеЗаписи(ЭтотОбъект, Объект, ПараметрыЗаписи);
	// Конец СтандартныеПодсистемы.ПодключаемыеКоманды
	
	Оповестить("Запись_КоррУведомлениеОПеремещенииПрослеживаемыхТоваров", ПараметрыЗаписи, Объект.Ссылка);
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовШапкиФормы

&НаКлиенте
Процедура ОрганизацияПриИзменении(Элемент)
	
	Если Объект.Контрагенты.Количество() <> 0
		ИЛИ Объект.Товары.Количество() <> 0 Тогда

		ТекстВопроса = НСтр("ru = 'Необходимо очистить табличные части. Продолжить?'");
		Оповещение = Новый ОписаниеОповещения("ВопросПриИзмененииОрганизацииЗавершение", ЭтотОбъект);
		ПоказатьВопрос(Оповещение, ТекстВопроса, РежимДиалогаВопрос.ДаНет, , КодВозвратаДиалога.Нет);
	Иначе
		ТекущаяОрганизация = Объект.Организация;
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура НадписьДополнительныеСведенияНажатие(Элемент, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	
	Форма = ЭтотОбъект;
	
	Если НЕ Форма.ТолькоПросмотр Тогда
		Форма.ЗаблокироватьДанныеФормыДляРедактирования();
	КонецЕсли;
	
	ПараметрыФормы = Новый Структура();
	ПараметрыФормы.Вставить("ТолькоПросмотр",        Форма.ТолькоПросмотр);
	ПараметрыФормы.Вставить("ИННДоРеорганизации",    Объект.ИННДоРеорганизации);
	ПараметрыФормы.Вставить("КППДоРеорганизации",    Объект.КППДоРеорганизации);
	ПараметрыФормы.Вставить("КодФормыРеорганизации", Объект.КодФормыРеорганизации);
	
	ОткрытьФорму(
		"Документ.УведомлениеОПеремещенииПрослеживаемыхТоваров.Форма.ФормаДополнительныхСведений",
		ПараметрыФормы, 
		Форма
	);
	
КонецПроцедуры

&НаКлиенте
Процедура НадписьДокументОснованиеНажатие(Элемент, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	
	ПараметрыФормы = Новый Структура();
	ПараметрыФормы.Вставить("Ключ", Объект.ДокументУведомлениеОПеремещении);
	
	ОткрытьФорму("Документ.УведомлениеОПеремещенииПрослеживаемыхТоваров.Форма.ФормаДокументаОсновная",
		ПараметрыФормы, ЭтотОбъект);
	
КонецПроцедуры

&НаКлиенте
Процедура НадписьПервичныйДокументНажатие(Элемент, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	
	ПараметрыФормы = Новый Структура();
	ПараметрыФормы.Вставить("Ключ", Объект.ПервичныйДокумент);
	
	ОткрытьФорму("Документ.УведомлениеОПеремещенииПрослеживаемыхТоваров.Форма.ФормаДокументаКорректировочная",
	ПараметрыФормы, ЭтотОбъект);
	
КонецПроцедуры

&НаКлиенте
Процедура ПолученоПодтверждениеИзФНСПриИзменении(Элемент)
	
	ПроверитьПолучениеОтветаОтФНС();
	
	УправлениеФормой(ЭтотОбъект);
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовТаблицыФормыКонтрагенты

&НаКлиенте
Процедура КонтрагентыПриАктивизацииСтроки(Элемент)
	
	ДанныеКонтрагентыУстановитьОтборСтрок();
	
КонецПроцедуры

&НаКлиенте
Процедура КонтрагентыПередНачаломДобавления(Элемент, Отказ, Копирование, Родитель, Группа, Параметр)
	
	Отказ = Истина;
	
КонецПроцедуры

&НаКлиенте
Процедура КонтрагентыПередУдалением(Элемент, Отказ)
	
	Отказ = Истина;
	
КонецПроцедуры

&НаКлиенте
Процедура КонтрагентыПредставлениеТранзитнойСтраныЕАЭСДоИзмененияНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	
	ТекущиеДанные = Элементы.Контрагенты.ТекущиеДанные;
	СтандартнаяОбработка = Ложь;
	
	НачалоВыбораСпискаТранзитныхСтран(ТекущиеДанные, Истина);
	
КонецПроцедуры

&НаКлиенте
Процедура КонтрагентыПредставлениеТранзитныеСтраныЕАЭСПослеИзмененияНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	
	ТекущиеДанные = Элементы.Контрагенты.ТекущиеДанные;
	СтандартнаяОбработка = Ложь;
	
	НачалоВыбораСпискаТранзитныхСтран(ТекущиеДанные, Ложь);
	
КонецПроцедуры

&НаКлиенте
Процедура КонтрагентыПриАктивизацииПоля(Элемент)
	
	Если Элемент.ТекущийЭлемент = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	ТекущиеДанные = Элементы.Контрагенты.ТекущиеДанные;
	
	Если Элемент.ТекущийЭлемент.Имя  = "КонтрагентыПредставлениеТранзитнойСтраныЕАЭСДоИзменения" Тогда
		
		НачалоВыбораСпискаТранзитныхСтран(ТекущиеДанные, Истина);
		
		Элементы.Контрагенты.ТекущийЭлемент = Элементы.КонтрагентыКонтрагент;
		
	ИначеЕсли Элемент.ТекущийЭлемент.Имя  = "КонтрагентыПредставлениеТранзитныеСтраныЕАЭСПослеИзменения" Тогда
		
		НачалоВыбораСпискаТранзитныхСтран(ТекущиеДанные, Ложь);
		
		Элементы.Контрагенты.ТекущийЭлемент = Элементы.КонтрагентыКонтрагент;
		
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовТаблицыФормыТовары

&НаКлиенте
Процедура ТоварыПриАктивизацииПоля(Элемент)
	
	Если Элемент.ТекущийЭлемент = Неопределено Тогда
		Возврат;
	КонецЕсли;

	Если Элемент.ТекущийЭлемент.Имя = "ТоварыОснованиеКорректировки" Тогда

		ТекущиеДанныеКонтрагент = Элементы.Контрагенты.ТекущиеДанные;
		ТекущиеДанныеТовары = Элементы.Товары.ТекущиеДанные;
		
		ОткрытьФормуВыбораКорректировочныхДокументов(ТекущиеДанныеКонтрагент.Контрагент, ТекущиеДанныеТовары);
		
	КонецЕсли;
		
КонецПроцедуры

&НаКлиенте
Процедура ТоварыПередНачаломДобавления(Элемент, Отказ, Копирование, Родитель, Группа, Параметр)
	
	Отказ = Истина;
	
КонецПроцедуры

&НаКлиенте
Процедура ТоварыПередУдалением(Элемент, Отказ)
	
	Отказ = Истина;

КонецПроцедуры

&НаКлиенте
Процедура ТоварыНоменклатураПриИзменении(Элемент)
	
	ТекущиеДанные = Элементы.Товары.ТекущиеДанные;
	
	ЗначенияПоУмолчанию = ПолучитьПоНоменклатуреЗначенияПоУмолчанию(ТекущиеДанные.Номенклатура);
	
	ЗаполнитьЗначенияСвойств(ТекущиеДанные, ЗначенияПоУмолчанию);
	
	ДанныеСтрокиКонтрагента = Элементы.Контрагенты.ТекущиеДанные;
	
	Если ТекущиеДанные.ЕдиницаИзмерения <> ТекущиеДанные.ЕдиницаПрослеживаемости Тогда
		
		ДанныеСтрокиКонтрагента.ЕдиницыПрослеживаемостиСовпадают = Ложь;
		
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Функция ПолучитьПоНоменклатуреЗначенияПоУмолчанию(Номенклатура)
	
	Возврат ПрослеживаемостьПереопределяемый.ПолучитьПоНоменклатуреЗначенияПоУмолчанию(Номенклатура);
	
КонецФункции

&НаКлиенте
Процедура ТоварыСопроводительныйДокументНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	
	ТекущиеДанные = Элементы.Контрагенты.ТекущиеДанные;
	
	ПрослеживаемостьКлиентПереопределяемый.ОткрытьФормуПодбораСопроводительногоДокумента(ЭтотОбъект, ТекущиеДанные);
	
КонецПроцедуры

&НаКлиенте
Процедура ТоварыКоличествоПослеИзмененияПриИзменении(Элемент)
	
	ТекущиеДанные = Элементы.Товары.ТекущиеДанные;
	
	Если ТекущиеДанные.ЕдиницаИзмеренияПослеИзменения = ТекущиеДанные.ЕдиницаПрослеживаемостиПослеИзменения Тогда
		
		ТекущиеДанные.КоличествоПрослеживаемостиПослеИзменения = ТекущиеДанные.КоличествоПослеИзменения;
		
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ТоварыОснованиеКорректировкиНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	
	ТекущиеДанныеТовары = Элементы.Товары.ТекущиеДанные;
	ТекущиеДанныеКонтрагент = Элементы.Контрагенты.ТекущиеДанные;
	
	ОткрытьФормуВыбораКорректировочныхДокументов(ТекущиеДанныеКонтрагент.Контрагент, ТекущиеДанныеТовары);
		
КонецПроцедуры
	
#КонецОбласти

#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура КомандаЗаполнить(Команда)
	
	ЕстьДанные = Объект.Контрагенты.Количество() > 0;
	
	Если ЕстьДанные 
		И Объект.Проведен Тогда
		
			ТекстВопроса = НСтр("ru = 'Перед заполнением проведение документа будет отменено, а табличные части будут очищены. Заполнить?'");
		Оповещение = Новый ОписаниеОповещения("ВопросЗаполнитьДокументЗавершение", ЭтотОбъект, Новый Структура);
		ПоказатьВопрос(Оповещение, ТекстВопроса, РежимДиалогаВопрос.ДаНет);
	Иначе
		ВыполнитьЗаполнениеДокумента();
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура КомандаВыгрузитьУведомлениеВXML(Команда)
	
	ОчиститьСообщения();
	
	Если ПроверитьЗаполнение() Тогда
		
		ПрослеживаемостьКлиент.ВыгрузитьУведомлениеПоПрослеживаемости(ЭтотОбъект);
		
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ОтправитьВКонтролирующийОрган(Команда)
	
	Если Модифицированность Тогда
		Записать();
	КонецЕсли;
	
	Если ПроверитьЗаполнение() Тогда
		
		Если НЕ ОнлайнСервисыРегламентированнойОтчетностиВызовСервера.СобытиеНаступило("Отпр.ув.о перем.просл.т.") Тогда
			ПоказатьПредупреждение(, НСтр("ru = 'Отправка уведомления в электронном виде предусмотрена законодательством с 1 июля 2021 г.'"));
			Возврат;
		КонецЕсли;
		
		РегламентированнаяОтчетностьКлиент.ПриНажатииНаКнопкуОтправкиВКонтролирующийОрган(ЭтаФорма);
		
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура КомандаПечать(Команда)
	
	Если Модифицированность Тогда
		Записать();
	КонецЕсли;
	
	СписокПечатаемыхЛистов = ПрослеживаемостьВызовСервераПереопределяемый.ПолучитьСписокПечатаемыхЛистовНаСервере(Объект.Ссылка);
	ДополнительныеПараметры = Новый Структура("ЗаголовокФормы", 
		НСтр("ru='Корректировочное уведомление о перемещении прослеживаемых товаров в ЕАЭС'"));
	
	РегламентированнаяОтчетностьКлиент.ОткрытьФормуПредварительногоПросмотра(
	ЭтотОбъект, "ПоказатьБланк", , СписокПечатаемыхЛистов, ДополнительныеПараметры);
	
КонецПроцедуры

&НаКлиенте
Процедура ПроверитьВИнтернете(Команда)
	
	
	Если Модифицированность Тогда
		Записать();
	КонецЕсли;
	
	Если ПроверитьЗаполнение() Тогда
		
		РегламентированнаяОтчетностьКлиент.ПроверитьВИнтернете(ЭтаФорма);
		
	КонецЕсли;
	
КонецПроцедуры

#Область ПанельОтправкиВКонтролирующиеОрганы

&НаКлиенте
Процедура ОбновитьОтправку(Команда)
	
	ЭлектронныйДокументооборотСКонтролирующимиОрганамиКлиент.ОбновитьОтправкуИзПанелиОтправки(ЭтаФорма, "ФНС");
	
КонецПроцедуры

&НаКлиенте
Процедура ГиперссылкаПротоколНажатие(Элемент)
	
	ЭлектронныйДокументооборотСКонтролирующимиОрганамиКлиент.ОткрытьПротоколИзПанелиОтправки(ЭтаФорма, "ФНС");
	
КонецПроцедуры

&НаКлиенте
Процедура ОтправитьНеотправленноеИзвещение(Команда)
	
	ЭлектронныйДокументооборотСКонтролирующимиОрганамиКлиент.ОтправитьНеотправленноеИзвещениеИзПанелиОтправки(ЭтаФорма, "ФНС");
	
КонецПроцедуры

&НаКлиенте
Процедура ЭтапыОтправкиНажатие(Элемент)
	
	ЭлектронныйДокументооборотСКонтролирующимиОрганамиКлиент.ОткрытьСостояниеОтправкиИзПанелиОтправки(ЭтаФорма, "ФСС");
	
КонецПроцедуры

&НаКлиенте
Процедура КритическиеОшибкиОбработкаНавигационнойСсылки(Элемент, НавигационнаяСсылкаФорматированнойСтроки, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	ЭлектронныйДокументооборотСКонтролирующимиОрганамиКлиент.ОткрытьКритическиеОшибкиИзПанелиОтправки(ЭтаФорма, "ФСС");
	
КонецПроцедуры

&НаКлиенте
Процедура ГиперссылкаНаименованиеЭтапаНажатие(Элемент)
	
	ПараметрыИзменения = Новый Структура;
	ПараметрыИзменения.Вставить("Форма", ЭтотОбъект);
	ПараметрыИзменения.Вставить("Организация", Объект.Организация);
	ПараметрыИзменения.Вставить("КонтролирующийОрган",
		ПредопределенноеЗначение("Перечисление.ТипыКонтролирующихОрганов.ФНС"));
	ПараметрыИзменения.Вставить("ТекстВопроса", НСтр("ru='Вы уверены, что уведомление уже сдано?'"));
	
	ИнтерфейсыВзаимодействияБРОКлиент.ИзменитьСтатусОтправки(ПараметрыИзменения);
	
КонецПроцедуры

#КонецОбласти

#КонецОбласти

#Область СлужебныеПроцедурыИФункцииБСП

// СтандартныеПодсистемы.ПодключаемыеКоманды
&НаКлиенте
Процедура Подключаемый_ВыполнитьКоманду(Команда)
	
	ПодключаемыеКомандыКлиент.ВыполнитьКоманду(ЭтотОбъект, Команда, Объект);
	
КонецПроцедуры

&НаСервере
Процедура Подключаемый_ВыполнитьКомандуНаСервере(Контекст, Результат) Экспорт
	
	ПодключаемыеКоманды.ВыполнитьКоманду(ЭтотОбъект, Контекст, Объект, Результат);
	
КонецПроцедуры

&НаКлиенте
Процедура Подключаемый_ОбновитьКоманды()
	
	ПодключаемыеКомандыКлиентСервер.ОбновитьКоманды(ЭтотОбъект, Объект);
	
КонецПроцедуры

// Конец СтандартныеПодсистемы.ПодключаемыеКоманды

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаКлиенте
Процедура ОткрытьФормуВыбораКорректировочныхДокументов(Контрагент, ТекущиеДанныеТовары)
	
	СтруктураПараметров = Новый Структура("КорректировочныеДокументы,КлючСтроки,ПорядковыйНомер,Контрагент,Организация", 
		Объект.КорректировочныеДокументы, 
		ТекущиеДанныеТовары.КлючСтроки, 
		ТекущиеДанныеТовары.ПорядковыйНомер, 
		Контрагент, 
		Объект.Организация);
	
	ОткрытьФорму("Документ.УведомлениеОПеремещенииПрослеживаемыхТоваров.Форма.ФормаВыбораКорректировочныхДокументов",
		СтруктураПараметров, ЭтотОбъект);
	
КонецПроцедуры

&НаКлиенте
Процедура ВопросПриИзмененииОрганизацииЗавершение(Результат, ДополнительныеПараметры) Экспорт
	
	Если Результат = КодВозвратаДиалога.Да Тогда
		Объект.Товары.Очистить();
		Объект.Контрагенты.Очистить();
	Иначе
		Объект.Организация = ТекущаяОрганизация;
	КонецЕсли;
	
	ТекущаяОрганизация = Объект.Организация;
	
КонецПроцедуры

&НаКлиенте
Процедура ВопросЗаполнитьДокументЗавершение(Результат, ДополнительныйПараметр) Экспорт
	
	Если Результат = КодВозвратаДиалога.Да Тогда
		ВыполнитьЗаполнениеДокумента();
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ВыполнитьЗаполнениеДокумента()

	ДлительнаяОперация = ЗаполнитьДокументНаСервере();
	
	Если ДлительнаяОперация = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	Если ДлительнаяОперация.Статус <> "Ошибка" Тогда
		
		НастройкиОжидания = ДлительныеОперацииКлиент.ПараметрыОжидания(ЭтотОбъект);
		НастройкиОжидания.ВыводитьОкноОжидания = Истина;
		НастройкиОжидания.ТекстСообщения = НСтр("ru='Выполняется заполнение документа'");
		
		Обработчик = Новый ОписаниеОповещения("ЗаполнитьДокументЗавершение", ЭтотОбъект);
		
		ДлительныеОперацииКлиент.ОжидатьЗавершение(ДлительнаяОперация, Обработчик, НастройкиОжидания);
		
	Иначе
		
		ПоказатьОшибкуЗаполненияДокумента(ДлительнаяОперация);
		
	КонецЕсли;
	
	Модифицированность = Истина;
	
КонецПроцедуры

&НаКлиенте
Процедура ЗаполнитьДокументЗавершение(ДлительнаяОперация, ДополнительныеПараметры) Экспорт

	Если ДлительнаяОперация = Неопределено Тогда
		Возврат; // Отменено
	КонецЕсли;
	
	Если ДлительнаяОперация.Статус = "Выполнено" Тогда
		
		ЗагрузитьДанныеВДокумент(ДлительнаяОперация.АдресРезультата);
		
	Иначе
		ПоказатьОшибкуЗаполненияДокумента(ДлительнаяОперация);
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура ЗагрузитьДанныеВДокумент(АдресРезультата)
	
	РезультатЗаполненияТаблиц = ПолучитьИзВременногоХранилища(АдресРезультата);
	
	Объект.Контрагенты.Загрузить(РезультатЗаполненияТаблиц.Контрагенты);
	Объект.Товары.Загрузить(РезультатЗаполненияТаблиц.Товары);
	Объект.КорректировочныеДокументы.Загрузить(РезультатЗаполненияТаблиц.КорректировочныеДокументы);
	Объект.ТранзитныеСтраныЕАЭС.Загрузить(РезультатЗаполненияТаблиц.ТранзитныеСтраныЕАЭС);
	
	Если Объект.Контрагенты.Количество() > 0 Тогда
		Элементы.Контрагенты.ТекущаяСтрока = Объект.Контрагенты[0].ПолучитьИдентификатор();
	КонецЕсли;
	
	ЗаполнитьВременныеРеквизиты();
	
КонецПроцедуры

&НаКлиенте
Процедура ПоказатьОшибкуЗаполненияДокумента(ДлительнаяОперация)
	
	МассивИзДвухСтрок = Новый Массив;
	МассивИзДвухСтрок.Добавить(НСтр("ru = 'Ошибка заполнения документа:'"));
	МассивИзДвухСтрок.Добавить(ДлительнаяОперация.КраткоеПредставлениеОшибки);
	
	ВызватьИсключение СтрСоединить(МассивИзДвухСтрок, Символы.ПС);
	
КонецПроцедуры

&НаСервере
Функция ЗаполнитьДокументНаСервере()
	
	Если Объект.Проведен Тогда
		Записать(Новый Структура("РежимЗаписи", РежимЗаписиДокумента.ОтменаПроведения));
	КонецЕсли;
	
	Объект.Контрагенты.Очистить();
	Объект.Товары.Очистить();
	Объект.КорректировочныеДокументы.Очистить();
	
	ПараметрыОбработчика = Новый Структура("Организация,Дата,ПервичноеУведомление,НомерКорректировки",
		Объект.Организация, Объект.Дата, Объект.ДокументУведомлениеОПеремещении, Объект.НомерКорректировки);
		
	НастройкаЗапуска = ДлительныеОперации.ПараметрыВыполненияВФоне(УникальныйИдентификатор);
	НастройкаЗапуска.НаименованиеФоновогоЗадания = НСтр("ru = 'Заполнение документа....'");
	НастройкаЗапуска.ОжидатьЗавершение = 0;
	
	ДлительнаяОперация = ДлительныеОперации.ВыполнитьВФоне("Документы.УведомлениеОПеремещенииПрослеживаемыхТоваров.ЗаполнитьДокумент",
		ПараметрыОбработчика,
		НастройкаЗапуска);

	Возврат ДлительнаяОперация;

КонецФункции

&НаСервере
Процедура ПроверитьПолучениеОтветаОтФНС() 

	Запрос = Новый Запрос;
	
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	СтатусыОтправки.Статус КАК Статус
	|ИЗ
	|	РегистрСведений.СтатусыОтправки КАК СтатусыОтправки
	|ГДЕ
	|	СтатусыОтправки.Объект = &Объект";
	
	Запрос.УстановитьПараметр("Объект", Объект.Ссылка);
	
	Выбор = Запрос.Выполнить().Выбрать();
	
	СтатусОтправки = Перечисления.СтатусыОтправки.ПустаяСсылка();
	
	Если Выбор.Следующий() Тогда
		
		СтатусОтправки = Выбор.Статус;
		
	КонецЕсли;
	
	Если Объект.ПолученоПодтверждениеИзФНС
		ИЛИ НЕ СтатусОтправки = Перечисления.СтатусыОтправки.Сдан Тогда
		
		Элементы.ГруппаПанельСообщений.Видимость = Ложь;
		
		Возврат;
		
	КонецЕсли;
	
	Элементы.ГруппаПанельСообщений.Видимость = Истина;

КонецПроцедуры

&НаКлиенте
Процедура Подключаемый_УдалитьСвязанныеЗаписи()
	
	УдалитьСвязанныеЗаписиНаСервере();
	
КонецПроцедуры

&НаСервере
Процедура УдалитьСвязанныеЗаписиНаСервере()
	
	ВидыУдаляемыхСтрок = Новый Структура; 
	
	ВидыУдаляемыхСтрок.Вставить("Товары", ТаблицаУдаленныхКлючей);
	
	Для каждого ВидУдаляемыхСтрок Из ВидыУдаляемыхСтрок Цикл
		ИмяТабличнойЧасти 		= ВидУдаляемыхСтрок.Ключ;
		СписокУдаленныхКлючей 	= ВидУдаляемыхСтрок.Значение;
		Для каждого СтрокаКлюча Из СписокУдаленныхКлючей Цикл
			КлючПоиска = Новый Структура("КлючСтроки", СтрокаКлюча.КлючСтроки);
			МассивСтрокТовары = Объект[ИмяТабличнойЧасти].НайтиСтроки(КлючПоиска);
			
			Для каждого СтрокаТЧ Из МассивСтрокТовары Цикл
				Объект[ИмяТабличнойЧасти].Удалить(СтрокаТЧ);
			КонецЦикла;
		КонецЦикла;
	КонецЦикла;
	
КонецПроцедуры

&НаКлиенте
Процедура ДанныеКонтрагентыУстановитьОтборСтрок()
	
	ТекДанныеКонтрагенты = Элементы.Контрагенты.ТекущиеДанные;
	
	Если ТекДанныеКонтрагенты <> Неопределено Тогда
		КлючСтроки = ТекДанныеКонтрагенты.КлючСтроки;
		Элементы.Товары.ОтборСтрок = Новый ФиксированнаяСтруктура("КлючСтроки", КлючСтроки);
		
		ТекущийКонтрагент = ТекДанныеКонтрагенты.Контрагент;
		
	Иначе
		
		Элементы.Товары.ОтборСтрок = Новый ФиксированнаяСтруктура("КлючСтроки", 0);
		
		ТекущийКонтрагент = "";
		
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура УстановитьУсловноеОформление()
	
	УсловноеОформление.Элементы.Очистить();
	
	// КонтрагентыСтраныПеревозкиПредставление

	ЭлементУО = УсловноеОформление.Элементы.Добавить();

	КомпоновкаДанныхКлиентСервер.ДобавитьОформляемоеПоле(ЭлементУО.Поля, "КонтрагентыСтраныПеревозкиПредставление");

	ОбщегоНазначенияКлиентСервер.ДобавитьЭлементКомпоновки(ЭлементУО.Отбор,
		"Объект.Контрагенты.СтраныПеревозкиПредставление", ВидСравненияКомпоновкиДанных.НеЗаполнено);
	
	ЭлементУО.Оформление.УстановитьЗначениеПараметра("ЦветТекста", ЦветаСтиля.ТекстЗапрещеннойЯчейкиЦвет);

	ЭлементУО.Оформление.УстановитьЗначениеПараметра("Текст", НСтр("ru = '<не указана>'"));
	
	
	// ТоварыЕдиницаПрослеживаемости, ТоварыКоличествоПрослеживаемости
	
	ЭлементУО = УсловноеОформление.Элементы.Добавить();

	КомпоновкаДанныхКлиентСервер.ДобавитьОформляемоеПоле(ЭлементУО.Поля, "ТоварыЕдиницаПрослеживаемости");
	КомпоновкаДанныхКлиентСервер.ДобавитьОформляемоеПоле(ЭлементУО.Поля, "ТоварыКоличествоПрослеживаемости");
	КомпоновкаДанныхКлиентСервер.ДобавитьОформляемоеПоле(ЭлементУО.Поля, "ТоварыЕдиницаПрослеживаемостиПослеИзменения");
	КомпоновкаДанныхКлиентСервер.ДобавитьОформляемоеПоле(ЭлементУО.Поля, "ТоварыКоличествоПрослеживаемостиПослеИзменения");

	ОбщегоНазначенияКлиентСервер.ДобавитьЭлементКомпоновки(ЭлементУО.Отбор,
		"Объект.Контрагенты.ЕдиницыПрослеживаемостиСовпадают", ВидСравненияКомпоновкиДанных.Равно, Истина);
	
	ЭлементУО.Оформление.УстановитьЗначениеПараметра("Видимость", Ложь);
	
	// КонтрагентыПредставлениеТранзитнойСтраныЕАЭСДоИзменения
	// КонтрагентыПредставлениеТранзитныеСтраныЕАЭСПослеИзменения
	// КонтрагентыНадписьДоИзменения
	// КонтрагентыНадписьПослеИзменения
	
	ЭлементУО = УсловноеОформление.Элементы.Добавить();

	КомпоновкаДанныхКлиентСервер.ДобавитьОформляемоеПоле(ЭлементУО.Поля, 
		"КонтрагентыПредставлениеТранзитнойСтраныЕАЭСДоИзменения");
	КомпоновкаДанныхКлиентСервер.ДобавитьОформляемоеПоле(ЭлементУО.Поля, 
		"КонтрагентыПредставлениеТранзитныеСтраныЕАЭСПослеИзменения");
	КомпоновкаДанныхКлиентСервер.ДобавитьОформляемоеПоле(ЭлементУО.Поля, 
		"КонтрагентыНадписьДоИзменения");
	КомпоновкаДанныхКлиентСервер.ДобавитьОформляемоеПоле(ЭлементУО.Поля, 
		"КонтрагентыНадписьПослеИзменения");

	ОбщегоНазначенияКлиентСервер.ДобавитьЭлементКомпоновки(ЭлементУО.Отбор,
		"Объект.Дата", ВидСравненияКомпоновкиДанных.Меньше, 
		ПрослеживаемостьБРУ.ДатаИзмененияФорматаУведомленияОПеремещенииС4Кв2022());
	
	ЭлементУО.Оформление.УстановитьЗначениеПараметра("Видимость", Ложь);
	
КонецПроцедуры

&НаСервере
Процедура ПодготовитьФормуНаСервере()
	
	ПрослеживаемостьБРУ.УстановитьЗаголовокФормыУведомлениеОПеремещении(ЭтотОбъект);
	
	УстановитьСостояниеДокумента();

КонецПроцедуры

&НаСервере
Процедура УстановитьСостояниеДокумента()
	
	ПрослеживаемостьПереопределяемый.УстановитьСостояниеДокумента(ЭтотОбъект);
	
КонецПроцедуры

&НаСервере
Процедура ЗаполнитьВременныеРеквизиты()
	
	ФильтрПоТаблице = Новый Структура("КлючСтроки");
	
	НадписьДоИзменения = НСтр("ru = 'до изменения'");
	НадписьПослеИзменения = НСтр("ru = 'после изменения'");
	
	Для каждого ТекущаяСтрокаКонтрагенты Из Объект.Контрагенты Цикл
		
		ФильтрПоТаблице.КлючСтроки = ТекущаяСтрокаКонтрагенты.КлючСтроки;
		
		// Если по этой реализации в табличной части товары Единица прослеживаемости = Единицы в документе, то Истина
		ТекущаяСтрокаКонтрагенты.ЕдиницыПрослеживаемостиСовпадают = 
			ЕдиницыПрослеживаемостиИЕдиницаВДокументеСовпадают(ФильтрПоТаблице);
			
		ТекущаяСтрокаКонтрагенты.НадписьДоИзменения = НадписьДоИзменения;
		ТекущаяСтрокаКонтрагенты.НадписьПослеИзменения = НадписьПослеИзменения;
		
		ТекущаяСтрокаКонтрагенты.ПредставлениеТранзитнойСтраныЕАЭСДоИзменения = 
			ПредставлениеСтрокиТранзитныеСтраны(ТекущаяСтрокаКонтрагенты.КлючСтроки, Истина);	
	
		ТекущаяСтрокаКонтрагенты.ПредставлениеТранзитныеСтраныЕАЭСПослеИзменения = 
			ПредставлениеСтрокиТранзитныеСтраны(ТекущаяСтрокаКонтрагенты.КлючСтроки, Ложь);	
		
	КонецЦикла;
		
	ФильтрПоКорректировочнымДокументам = Новый Структура("КлючСтроки,ПорядковыйНомер");
	
	Для каждого ТекущаяСтрока Из Объект.Товары Цикл
		
		ТекущаяСтрока.НадписьДоИзменения = НадписьДоИзменения;
		ТекущаяСтрока.НадписьПослеИзменения = НадписьПослеИзменения;
		
		ФильтрПоКорректировочнымДокументам.КлючСтроки = ТекущаяСтрока.КлючСтроки;
		ФильтрПоКорректировочнымДокументам.ПорядковыйНомер = ТекущаяСтрока.ПорядковыйНомер;
		
		НайденныеСтроки = Объект.КорректировочныеДокументы.НайтиСтроки(ФильтрПоКорректировочнымДокументам);
		ЕщеДокументов = НайденныеСтроки.Количество() - 1;
		
		Если НайденныеСтроки.Количество() > 0 Тогда
			
			ТекущаяСтрока.ПредставлениеОснованиеКорректировки = ТекстДокументаДляПредставления(НайденныеСтроки[0].Документ);

			Если ЕщеДокументов > 0 Тогда
				
		    	ТекущаяСтрока.ПредставлениеОснованиеКорректировки = 
					СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(НСтр("ru = '%1 и еще %2'"),
						ТекущаяСтрока.ПредставлениеОснованиеКорректировки, ЕщеДокументов);
					
			КонецЕсли;		
			
		КонецЕсли;
		
	КонецЦикла;
	
КонецПроцедуры

&НаКлиентеНаСервереБезКонтекста
Процедура УправлениеФормой(Форма)
	
	Элементы = Форма.Элементы;
	Объект   = Форма.Объект;
	
	Форма.НадписьДокументОснование = ТекстДокументаДляПредставления(Объект.ДокументУведомлениеОПеремещении);
	Форма.НадписьПервичныйДокумент = ТекстДокументаДляПредставления(Объект.ПервичныйДокумент);
	
	СтруктураДополнительныхРеквизитов = Новый Структура("ПризнакУведомления,КодФормыРеорганизации", 0,
		Объект.КодФормыРеорганизации);
	
	Форма.НадписьДополнительныеСведения = 
		ПрослеживаемостьФормыВызовСервера.ТекстДополнительныеСведения(СтруктураДополнительныхРеквизитов);
		
	Элементы.НадписьПервичныйДокумент.Видимость = Объект.ДокументУведомлениеОПеремещении <> Объект.ПервичныйДокумент;
	
КонецПроцедуры

&НаСервереБезКонтекста
Функция ТекстДокументаДляПредставления(Документ)
	
	Возврат ПрослеживаемостьПереопределяемый.ПредставлениеДокумента(Документ);
	
КонецФункции

&НаСервере
Функция ЕдиницыПрослеживаемостиИЕдиницаВДокументеСовпадают(ФильтрПоТаблице)
	
	НайденныеСтроки = Объект.Товары.НайтиСтроки(ФильтрПоТаблице);
	ЕдиницыПрослеживаемостиСовпадают = Истина;
	
	Если НайденныеСтроки.Количество() > 0 Тогда
		
		Для каждого ТекущаяСтрока Из НайденныеСтроки Цикл
		
			Если ТекущаяСтрока.ЕдиницаИзмерения <> ТекущаяСтрока.ЕдиницаПрослеживаемости Тогда
			
				ЕдиницыПрослеживаемостиСовпадают = Ложь;
			
			КонецЕсли;
		
		КонецЦикла;
	Иначе
		
		ЕдиницыПрослеживаемостиСовпадают = Ложь;
		
	КонецЕсли;
		
	Возврат ЕдиницыПрослеживаемостиСовпадают;
	
КонецФункции

&НаКлиенте
Процедура ИзменитьОснование(Команда)
	
	СтруктураПараметров = Новый Структура("Организация", Объект.Организация);
	ОткрытьФорму("Документ.УведомлениеОПеремещенииПрослеживаемыхТоваров.Форма.ФормаВыбора",
		СтруктураПараметров, ЭтотОбъект);
	
КонецПроцедуры

&НаКлиенте
Процедура ЗаполнитьПризнакПолученияОтветаОтФНС(Команда)
	
	Объект.ПолученоПодтверждениеИзФНС = Истина;
	Модифицированность = Истина;
	ПроверитьПолучениеОтветаОтФНС();
	
КонецПроцедуры

&НаКлиенте
Процедура НачалоВыбораСпискаТранзитныхСтран(ТекущиеДанные, ЭтоСтрокаСИсходнымиСтранами)
	
	ПараметрыФормы = Новый Структура("КлючСтроки,Контрагент,ТранзитныеСтраныЕАЭС,ЭтоСтрокаСИсходнымиСтранами,ЭтоКорректировка", 
											ТекущиеДанные.КлючСтроки,
											ТекущиеДанные.Контрагент,
											Объект.ТранзитныеСтраныЕАЭС,
											ЭтоСтрокаСИсходнымиСтранами,
											Истина);
		
	ОткрытьФорму("Документ.УведомлениеОПеремещенииПрослеживаемыхТоваров.Форма.ФормаТранзитныхСтран",
		ПараметрыФормы, ЭтотОбъект);
		
КонецПроцедуры

&НаСервере
Функция ПредставлениеСтрокиТранзитныеСтраны(КлючСтроки, ЭтоСтрокаСИсходнымиСтранами)
	
	ФильтрПоТранзитнымСтранам = Новый Структура("КлючСтроки,ЭтоСтрокаСИсходнымиСтранами",
		КлючСтроки, ЭтоСтрокаСИсходнымиСтранами);
	
	НайденныеСтроки = Объект.ТранзитныеСтраныЕАЭС.НайтиСтроки(ФильтрПоТранзитнымСтранам);
	
	ПредставлениеТранзитныеСтраныЕАЭС = НСтр("ru='Без транзита'");
	
	Если НайденныеСтроки.Количество() > 0 Тогда
		
		ЕщеДокументов = НайденныеСтроки.Количество() - 1;
			
		ПредставлениеТранзитныеСтраныЕАЭС = НайденныеСтроки[0].Страна;

		Если ЕщеДокументов > 0 Тогда
			
	    	ПредставлениеТранзитныеСтраныЕАЭС = 
				СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(НСтр("ru = '%1 и еще %2'"),
					ПредставлениеТранзитныеСтраныЕАЭС, ЕщеДокументов);
				
		КонецЕсли;		
		
	КонецЕсли;
	
	Возврат ПредставлениеТранзитныеСтраныЕАЭС;
	
КонецФункции

#КонецОбласти
