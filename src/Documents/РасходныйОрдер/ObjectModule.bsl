#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область ПроцедурыЗаполненияДокумента

// Обработчик заполнения на основании документа РасходныйОрдер.
//
// Параметры:
//  ДанныеЗаполнения - Данные заполнения документа.
//
Процедура ЗаполнитьПоСтруктуре(ДанныеЗаполнения) Экспорт 
	
	Если ДанныеЗаполнения.Свойство("ОткрытеИзАРМ") И ДанныеЗаполнения.ОткрытеИзАРМ = Истина Тогда
		СкладскойУчетСервер.ЗаполнитьОрдерСУчетомОстатковКлючевыеРеквизитыИдентичны(ЭтотОбъект, ДанныеЗаполнения.ДанныеЗаполнения, "РасходныйОрдер");
	КонецЕсли;

КонецПроцедуры

// Осуществляет проверку возможности ввода на основании.
//
Процедура ПроверитьВозможностьВводаНаОсновании(ДанныеЗаполнения, ЗначенияРеквизитов)
	
	Если ЗначенияРеквизитов.Свойство("СтруктурнаяЕдиница") Тогда 
		
		ЭтоПеремещение = ТипЗнч(ДанныеЗаполнения) = Тип("ДокументСсылка.ПеремещениеЗапасов");
		
		Если ЗначениеЗаполнено(ЗначенияРеквизитов.СтруктурнаяЕдиница) Тогда
			
			Если ЭтоПеремещение Тогда
				ЗначенияРеквизитовСтруктурнойЕдиницы = ОбщегоНазначения.ЗначенияРеквизитовОбъекта(ЗначенияРеквизитов.СтруктурнаяЕдиница,
				"ОрдерныйСклад, ИспользоватьОрдернуюСхемуПриПеремещении, ВидУчетаОрдерныхСкладов");
			Иначе
				ЗначенияРеквизитовСтруктурнойЕдиницы = ОбщегоНазначения.ЗначенияРеквизитовОбъекта(ЗначенияРеквизитов.СтруктурнаяЕдиница,
				"ОрдерныйСклад, ИспользоватьОрдернуюСхемуПриОтгрузке, ВидУчетаОрдерныхСкладов");
			КонецЕсли;
			
			ПроверятьИспользованиеОрдернойСхемы = ЗначениеЗаполнено(ЗначенияРеквизитовСтруктурнойЕдиницы.ВидУчетаОрдерныхСкладов) 
			И НЕ ЗначенияРеквизитовСтруктурнойЕдиницы.ВидУчетаОрдерныхСкладов = Перечисления.ВидыУчетаОрдерныхСкладов.ПоСкладуВЦелом;
			
			Если НЕ ЗначенияРеквизитовСтруктурнойЕдиницы.ОрдерныйСклад Тогда
				ВызватьИсключениеВводНаОсновании(ДанныеЗаполнения);
			КонецЕсли;
			
			Если ПроверятьИспользованиеОрдернойСхемы Тогда
				
				Если ЭтоПеремещение Тогда
					Если ЗначенияРеквизитовСтруктурнойЕдиницы.ОрдерныйСклад И
						НЕ ЗначенияРеквизитовСтруктурнойЕдиницы.ИспользоватьОрдернуюСхемуПриПеремещении Тогда
						
						ТекстИсключения = СтрШаблон(НСтр("ru = 'Невозможен ввод операции ""Отгрузка с ордерного склада"".
						|Документ ""%1"" не использует ордерную схему при перемещении'"), ДанныеЗаполнения);
						
						ВызватьИсключениеВводНаОсновании(ДанныеЗаполнения, ТекстИсключения);
					КонецЕсли;
					
				Иначе
					
					Если ЗначенияРеквизитовСтруктурнойЕдиницы.ОрдерныйСклад И
						НЕ ЗначенияРеквизитовСтруктурнойЕдиницы.ИспользоватьОрдернуюСхемуПриОтгрузке Тогда
						
						ТекстИсключения = СтрШаблон(НСтр("ru = 'Невозможен ввод операции ""Отгрузка с ордерного склада"".
						|Документ ""%1"" не использует ордерную схему при отгрузке'"), ДанныеЗаполнения);
						
						ВызватьИсключениеВводНаОсновании(ДанныеЗаполнения, ТекстИсключения);
					КонецЕсли;
					
				КонецЕсли;
				
			КонецЕсли;
			
		КонецЕсли;
	КонецЕсли;
	
	Если ЗначенияРеквизитов.Свойство("ВидОперации") Тогда
		Если ЗначениеЗаполнено(ЗначенияРеквизитов.ВидОперации)
			И НЕ ДанныеЗаполнения.ВидОперации = Перечисления.ВидыОперацийЗаказПокупателя.ЗаказНаряд Тогда
				ТекстИсключения = НСтр("ru = 'Расходный ордер можно ввести только на основании заказ-наряда.'");
				ВызватьИсключение ТекстИсключения;
		КонецЕсли;
	КонецЕсли;
	
	Отказ = Ложь;
	Если ЗначенияРеквизитов.Свойство("СтруктурнаяЕдиница") Тогда
		Если ЗначениеЗаполнено(ЗначенияРеквизитов.СтруктурнаяЕдиница)
			И НЕ ЗначенияРеквизитов.СтруктурнаяЕдиница.ОрдерныйСклад Тогда
			Отказ = Истина;
		КонецЕсли;
	ИначеЕсли ЗначенияРеквизитов.Свойство("СтруктурнаяЕдиницаРезерв") Тогда
		Если ЗначениеЗаполнено(ЗначенияРеквизитов.СтруктурнаяЕдиницаРезерв)
			И НЕ ЗначенияРеквизитов.СтруктурнаяЕдиницаРезерв.ОрдерныйСклад Тогда
			Отказ = Истина;
		КонецЕсли;
	КонецЕсли;
	
	Если Отказ Тогда
		ВызватьИсключениеВводНаОсновании(ДанныеЗаполнения);
	КонецЕсли;
	
КонецПроцедуры // ПроверитьВозможностьВводаНаОсновании()

Процедура ВызватьИсключениеВводНаОсновании(ДокументСсылка, ТекстИсключения = Неопределено) 
	
	Если ТекстИсключения = Неопределено Тогда
		ТекстИсключения = СтрШаблон(НСтр("ru = 'Невозможен ввод операции ""Отгрузка с ордерного склада"".
		|Документ ""%1"" не имеет ордерного склада.'"), ДокументСсылка);
	КонецЕсли;
	
	ВызватьИсключение ТекстИсключения;
	
КонецПроцедуры

// АПК:299-выкл процедуры вызываются см. ЗаполнениеОбъектовУНФ.ЗаполнитьДокумент

// Обработчик заполнения на основании документа ОтчетОПереработке.
//
// Параметры:
//  ДокументСсылкаОтчетОПереработке - ДокументСсылка.ОтчетОПереработке.
//
Процедура ЗаполнитьПоОтчетОПереработке(ДокументСсылкаОтчетОПереработке) Экспорт 
	
		// Заполнение шапки.
	ДокументОснование = ДокументСсылкаОтчетОПереработке;
	ДокументСсылка = ДокументСсылкаОтчетОПереработке;
	ЗначенияРеквизитов = ОбщегоНазначения.ЗначенияРеквизитовОбъекта(ДокументСсылка,
		"Организация, СтруктурнаяЕдиница, Ячейка");
	
	ПроверитьВозможностьВводаНаОсновании(ДокументСсылка, ЗначенияРеквизитов);
	
	ЗаполнитьЗначенияСвойств(ЭтотОбъект, ЗначенияРеквизитов);
	
	ВидУчета = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(СтруктурнаяЕдиница, "ВидУчетаОрдерныхСкладов");
	
	Запасы.Очистить();
	СерииНоменклатуры.Очистить();
	
	ПоложениеЯчейки = Перечисления.ПоложениеРеквизитаНаФорме.ВШапке;
	
	Если ВидУчета = Перечисления.ВидыУчетаОрдерныхСкладов.ПоСкладуВЦелом Тогда
		ЗаполнитьПоОтчетОПереработкеВидУчетаНеИспользуется(ДокументСсылкаОтчетОПереработке);
		Возврат;
	КонецЕсли;
	
	// Заполнение табличной части.
	Запрос = Новый Запрос(
	"ВЫБРАТЬ
	|	ОтчетОПереработкеПродукция.Номенклатура КАК Номенклатура,
	|	ОтчетОПереработкеПродукция.ЕдиницаИзмерения КАК ЕдиницаИзмерения,
	|	ОтчетОПереработкеПродукция.Характеристика КАК Характеристика,
	|	ОтчетОПереработкеПродукция.СерииНоменклатуры КАК СерииНоменклатуры,
	|	ОтчетОПереработкеПродукция.КлючСвязи КАК КлючСвязи,
	|	ОтчетОПереработкеПродукция.Партия КАК Партия,
	|	ОтчетОПереработкеПродукция.Количество КАК Количество,
	|	ОтчетОПереработкеПродукция.Ссылка.СтруктурнаяЕдиница КАК СтруктурнаяЕдиница,
	|	ОтчетОПереработкеПродукция.Ссылка.Ячейка КАК Ячейка,
	|	ВЫБОР
	|		КОГДА &КонтролироватьОстаткиПоДокументам
	|			ТОГДА &ДокументОснование
	|		ИНАЧЕ НЕОПРЕДЕЛЕНО
	|	КОНЕЦ КАК ДокументПоступления
	|ПОМЕСТИТЬ ВТЗапасы
	|ИЗ
	|	Документ.ОтчетОПереработке.Продукция КАК ОтчетОПереработкеПродукция
	|ГДЕ
	|	ОтчетОПереработкеПродукция.Ссылка = &ДокументОснование
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ОтчетОПереработкеОтходы.Номенклатура,
	|	ОтчетОПереработкеОтходы.ЕдиницаИзмерения,
	|	ОтчетОПереработкеОтходы.Характеристика,
	|	НЕОПРЕДЕЛЕНО,
	|	0,
	|	ОтчетОПереработкеОтходы.Партия,
	|	ОтчетОПереработкеОтходы.Количество,
	|	ОтчетОПереработкеОтходы.Ссылка.СтруктурнаяЕдиница,
	|	ОтчетОПереработкеОтходы.Ссылка.Ячейка,
	|	ВЫБОР
	|		КОГДА &КонтролироватьОстаткиПоДокументам
	|			ТОГДА &ДокументОснование
	|		ИНАЧЕ НЕОПРЕДЕЛЕНО
	|	КОНЕЦ
	|ИЗ
	|	Документ.ОтчетОПереработке.Отходы КАК ОтчетОПереработкеОтходы
	|ГДЕ
	|	ОтчетОПереработкеОтходы.Ссылка = &ДокументОснование
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВТЗапасы.Номенклатура КАК Номенклатура,
	|	ВТЗапасы.ЕдиницаИзмерения КАК ЕдиницаИзмерения,
	|	ВТЗапасы.Характеристика КАК Характеристика,
	|	ВТЗапасы.СерииНоменклатуры КАК СерииНоменклатуры,
	|	ВТЗапасы.КлючСвязи КАК КлючСвязи,
	|	ВТЗапасы.Партия КАК Партия,
	|	СУММА(ВТЗапасы.Количество) КАК Количество,
	|	ВТЗапасы.СтруктурнаяЕдиница КАК СтруктурнаяЕдиница,
	|	ВТЗапасы.Ячейка КАК Ячейка,
	|	ВТЗапасы.ДокументПоступления КАК ДокументПоступления
	|ИЗ
	|	ВТЗапасы КАК ВТЗапасы
	|
	|СГРУППИРОВАТЬ ПО
	|	ВТЗапасы.СерииНоменклатуры,
	|	ВТЗапасы.Номенклатура,
	|	ВТЗапасы.Ячейка,
	|	ВТЗапасы.ДокументПоступления,
	|	ВТЗапасы.ЕдиницаИзмерения,
	|	ВТЗапасы.Партия,
	|	ВТЗапасы.Характеристика,
	|	ВТЗапасы.СтруктурнаяЕдиница,
	|	ВТЗапасы.КлючСвязи
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ЗапасыКРасходуСоСкладовОстатки.Номенклатура КАК Номенклатура,
	|	ЗапасыКРасходуСоСкладовОстатки.Характеристика КАК Характеристика,
	|	ЗапасыКРасходуСоСкладовОстатки.Партия КАК Партия,
	|	ВЫБОР
	|		КОГДА ЗапасыКРасходуСоСкладовОстатки.КоличествоОстаток < 0
	|			ТОГДА -ЗапасыКРасходуСоСкладовОстатки.КоличествоОстаток
	|		ИНАЧЕ ЗапасыКРасходуСоСкладовОстатки.КоличествоОстаток
	|	КОНЕЦ КАК Количество,
	|	ВЫБОР
	|		КОГДА &КонтролироватьОстаткиПоДокументам
	|			ТОГДА &ДокументОснование
	|		ИНАЧЕ НЕОПРЕДЕЛЕНО
	|	КОНЕЦ КАК ДокументПоступления,
	|	ЗапасыКРасходуСоСкладовОстатки.Ячейка КАК Ячейка
	|ПОМЕСТИТЬ ЗапасыОстаткиИтог
	|ИЗ
	|	РегистрНакопления.ЗапасыКРасходуСоСкладов.Остатки(
	|			,
	|			Организация = &Организация
	|				И СтруктурнаяЕдиница = &СтруктурнаяЕдиница
	|				И ДокументОснование = &ДокументОснование) КАК ЗапасыКРасходуСоСкладовОстатки
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ЗапасыКРасходуСоСкладовОстатки.Номенклатура,
	|	ЗапасыКРасходуСоСкладовОстатки.Характеристика,
	|	ЗапасыКРасходуСоСкладовОстатки.Партия,
	|	NULL,
	|	ВЫБОР
	|		КОГДА &КонтролироватьОстаткиПоДокументам
	|			ТОГДА &ДокументОснование
	|		ИНАЧЕ НЕОПРЕДЕЛЕНО
	|	КОНЕЦ,
	|	ЗапасыКРасходуСоСкладовОстатки.Ячейка
	|ИЗ
	|	РегистрНакопления.ЗапасыКРасходуСоСкладов.Остатки(, ) КАК ЗапасыКРасходуСоСкладовОстатки
	|ГДЕ
	|	ЗапасыКРасходуСоСкладовОстатки.ДокументОснование = &ДокументОснование
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ЗапасыОстаткиИтог.Номенклатура КАК Номенклатура,
	|	ЗапасыОстаткиИтог.Характеристика КАК Характеристика,
	|	ЗапасыОстаткиИтог.Партия КАК Партия,
	|	СУММА(ЗапасыОстаткиИтог.Количество) КАК Количество,
	|	ЗапасыОстаткиИтог.ДокументПоступления КАК ДокументПоступления,
	|	ЗапасыОстаткиИтог.Ячейка КАК Ячейка
	|ИЗ
	|	ЗапасыОстаткиИтог КАК ЗапасыОстаткиИтог
	|
	|СГРУППИРОВАТЬ ПО
	|	ЗапасыОстаткиИтог.Номенклатура,
	|	ЗапасыОстаткиИтог.Ячейка,
	|	ЗапасыОстаткиИтог.Характеристика,
	|	ЗапасыОстаткиИтог.Партия,
	|	ЗапасыОстаткиИтог.ДокументПоступления
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ВТЗапасы.Номенклатура КАК Номенклатура,
	|	ВТЗапасы.Характеристика КАК Характеристика,
	|	ВТЗапасы.Партия КАК Партия,
	|	ОтчетОПереработкеСерииНоменклатуры.Серия КАК Серия,
	|	ВТЗапасы.КлючСвязи КАК КлючСвязи,
	|	ОтчетОПереработкеСерииНоменклатуры.Количество КАК Количество
	|ИЗ
	|	ВТЗапасы КАК ВТЗапасы
	|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.ОтчетОПереработке.СерииНоменклатуры КАК ОтчетОПереработкеСерииНоменклатуры
	|		ПО ВТЗапасы.КлючСвязи = ОтчетОПереработкеСерииНоменклатуры.КлючСвязи
	|ГДЕ
	|	ОтчетОПереработкеСерииНоменклатуры.Ссылка = &ДокументОснование
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	СерииНоменклатурыКРасходуОстатки.Серия КАК Серия,
	|	СерииНоменклатурыКРасходуОстатки.КоличествоОстаток КАК Количество,
	|	СерииНоменклатурыКРасходуОстатки.Номенклатура КАК Номенклатура,
	|	СерииНоменклатурыКРасходуОстатки.Характеристика КАК Характеристика,
	|	СерииНоменклатурыКРасходуОстатки.Партия КАК Партия
	|ПОМЕСТИТЬ ОстаткиСерииИтог
	|ИЗ
	|	РегистрНакопления.СерииНоменклатурыКРасходу.Остатки(
	|			,
	|			Организация = &Организация
	|				И СтруктурнаяЕдиница = &СтруктурнаяЕдиница
	|				И ДокументОснование = &ДокументОснование) КАК СерииНоменклатурыКРасходуОстатки
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	СерииНоменклатурыКРасходуОстатки.Серия,
	|	NULL,
	|	СерииНоменклатурыКРасходуОстатки.Номенклатура,
	|	СерииНоменклатурыКРасходуОстатки.Характеристика,
	|	СерииНоменклатурыКРасходуОстатки.Партия
	|ИЗ
	|	РегистрНакопления.СерииНоменклатурыКРасходу.Остатки(, ) КАК СерииНоменклатурыКРасходуОстатки
	|ГДЕ
	|	СерииНоменклатурыКРасходуОстатки.ДокументОснование = &ДокументОснование
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ОстаткиСерииИтог.Серия КАК Серия,
	|	СУММА(ОстаткиСерииИтог.Количество) КАК Количество,
	|	ОстаткиСерииИтог.Номенклатура КАК Номенклатура,
	|	ОстаткиСерииИтог.Характеристика КАК Характеристика,
	|	ОстаткиСерииИтог.Партия КАК Партия
	|ИЗ
	|	ОстаткиСерииИтог КАК ОстаткиСерииИтог
	|
	|СГРУППИРОВАТЬ ПО
	|	ОстаткиСерииИтог.Партия,
	|	ОстаткиСерииИтог.Характеристика,
	|	ОстаткиСерииИтог.Номенклатура,
	|	ОстаткиСерииИтог.Серия");
	
	Запрос.УстановитьПараметр("Ссылка", Ссылка);
	Запрос.УстановитьПараметр("Организация", Константы.УчетПоКомпании.Компания(Организация));
	Запрос.УстановитьПараметр("СтруктурнаяЕдиница", СтруктурнаяЕдиница);
	
	КонтролироватьОстаткиПоДокументам = ВидУчета = Перечисления.ВидыУчетаОрдерныхСкладов.УчетОстатковПоПрочимДокументам;
	
	Запрос.УстановитьПараметр("КонтролироватьОстаткиПоДокументам", КонтролироватьОстаткиПоДокументам);
	Запрос.УстановитьПараметр("ДокументОснование", ?(КонтролироватьОстаткиПоДокументам, ДокументСсылка, Неопределено));
	
	ДокументПоступления = ?(КонтролироватьОстаткиПоДокументам, ДокументСсылка, Неопределено);
	
	РезультатыЗапроса = Запрос.ВыполнитьПакет();
	
	Если РезультатыЗапроса[3].Пустой() Тогда
		Возврат;
	КонецЕсли;
	
	ТаблицаСерииНоменклатуры = РезультатыЗапроса[4].Выгрузить();
	ТаблицаОстаткиСерииНоменклатуры = РезультатыЗапроса[6].Выгрузить();
	ТаблицаОстаткиЗапасы = РезультатыЗапроса[3].Выгрузить();
	
	ВыборкаЗапасы = РезультатыЗапроса[1].Выбрать();
	
	ПараметрыПоискаСерии = Новый Структура("КлючСвязи");
	
	Если СкладскойУчетСервер.КонтролироватьОстаткиПоЯчейкамКПоступлениюОтгрзуке(СтруктурнаяЕдиница) Тогда
		ПараметрыПоискаОстаткиЗапасы = Новый Структура("Номенклатура, Характеристика, Партия, Ячейка");
	Иначе
		ПараметрыПоискаОстаткиЗапасы = Новый Структура("Номенклатура, Характеристика, Партия");
	КонецЕсли;
	
	ПараметрыПоискаОстаткиСерииНоменклатуры = Новый Структура("Номенклатура, Характеристика, Партия, Серия");
	
	КоличествоВСтрокеЗапасов = 0;
	Пока ВыборкаЗапасы.Следующий() Цикл
		
		Если Не ЗначениеЗаполнено(ВыборкаЗапасы.Количество) Тогда
			Продолжить;
		КонецЕсли;
		
		ЗаполнитьЗначенияСвойств(ПараметрыПоискаОстаткиЗапасы, ВыборкаЗапасы);
		НайденныеОстаткиЗапасы = ТаблицаОстаткиЗапасы.НайтиСтроки(ПараметрыПоискаОстаткиЗапасы);
		
		Если Не НайденныеОстаткиЗапасы.Количество() Или (НайденныеОстаткиЗапасы.Количество() И НайденныеОстаткиЗапасы[0].Количество = 0) Тогда
			Продолжить
		КонецЕсли;
		
		ЗаполнитьЗначенияСвойств(ПараметрыПоискаСерии, ВыборкаЗапасы);
		НайденныеСерии = ТаблицаСерииНоменклатуры.НайтиСтроки(ПараметрыПоискаСерии);
		
		КоличествоСерий = 0;
		ИспользуютсяСерииВСтроке = Ложь;
		Для Каждого СтрокаСерии Из НайденныеСерии Цикл
			ИспользуютсяСерииВСтроке = Истина;
			
			ЗаполнитьЗначенияСвойств(ПараметрыПоискаОстаткиСерииНоменклатуры, СтрокаСерии);
			НайденныеОстаткиСерий = ТаблицаОстаткиСерииНоменклатуры.НайтиСтроки(ПараметрыПоискаОстаткиСерииНоменклатуры);
			
			Если Не НайденныеОстаткиСерий.Количество() Или (НайденныеОстаткиСерий.Количество() И НайденныеОстаткиСерий[0].Количество = 0) Тогда
				Продолжить
			КонецЕсли;
			
			ОстатокСерий = НайденныеОстаткиСерий[0];
			
			Если Не ОстатокСерий.Количество > 0 Тогда
				Продолжить;
			КонецЕсли;
			
			НоваяСтрокаСерии = СерииНоменклатуры.Добавить();
			ЗаполнитьЗначенияСвойств(НоваяСтрокаСерии, СтрокаСерии); 
			
			Если НоваяСтрокаСерии.Количество >= ОстатокСерий.Количество Тогда
				НоваяСтрокаСерии.Количество = ОстатокСерий.Количество;
			КонецЕсли;
			
			ОстатокСерий.Количество = ОстатокСерий.Количество - НоваяСтрокаСерии.Количество;
			
			КоличествоСерий = КоличествоСерий + НоваяСтрокаСерии.Количество;
			
		КонецЦикла;
		
		Если ИспользуютсяСерииВСтроке И КоличествоСерий = 0 Тогда
			Продолжить
		КонецЕсли;
		
		ОстатокЗапасов = НайденныеОстаткиЗапасы[0];
		
		НоваяСтрокаЗапасы = Запасы.Добавить();
		ЗаполнитьЗначенияСвойств(НоваяСтрокаЗапасы, ВыборкаЗапасы);
		
		Если ТипЗнч(НоваяСтрокаЗапасы.ЕдиницаИзмерения) = ТИП("СправочникСсылка.КлассификаторЕдиницИзмерения") Тогда
			
			КоличествоВСтрокеЗапасов = ?(КоличествоСерий > 0, КоличествоСерий, НоваяСтрокаЗапасы.Количество);
			
			Если КоличествоВСтрокеЗапасов >= ОстатокЗапасов.Количество Тогда
				КоличествоВСтрокеЗапасов = ОстатокЗапасов.Количество;
				ОстатокЗапасов.Количество = 0;
			Иначе
				ОстатокЗапасов.Количество = ОстатокЗапасов.Количество - КоличествоВСтрокеЗапасов;
			КонецЕсли;
			
			НоваяСтрокаЗапасы.Количество = КоличествоВСтрокеЗапасов;
			
		Иначе
			
			КоличествоСтрокиВЕдиницахХранения = НоваяСтрокаЗапасы.Количество * НоваяСтрокаЗапасы.ЕдиницаИзмерения.Коэффициент;
			КоличествоВСтрокеЗапасов = ?(КоличествоСерий > 0, КоличествоСерий, КоличествоСтрокиВЕдиницахХранения);
			
			Если КоличествоВСтрокеЗапасов >= ОстатокЗапасов.Количество Тогда
				КоличествоВСтрокеЗапасов = ОстатокЗапасов.Количество;
				ОстатокЗапасов.Количество = 0;
			Иначе
				ОстатокЗапасов.Количество = ОстатокЗапасов.Количество - КоличествоВСтрокеЗапасов;
			КонецЕсли;
			
			НоваяСтрокаЗапасы.Количество = КоличествоВСтрокеЗапасов/ НоваяСтрокаЗапасы.ЕдиницаИзмерения.Коэффициент;
			
		КонецЕсли;
		
		Если СерииНоменклатурыУНФ.ИспользоватьСерииНоменклатурыОстатки() = Истина Тогда
			НоваяСтрокаЗапасы.СерииНоменклатуры = СерииНоменклатурыУНФ.ПредставлениеСерийНоменклатуры(СерииНоменклатуры, НоваяСтрокаЗапасы.КлючСвязи)
		КонецЕсли;
			
	КонецЦикла;
	
КонецПроцедуры // ЗаполнитьПоОтчетОПереработке()

// Обработчик заполнения на основании документа РасходнаяНакладная.
//
// Параметры:
//  ДокументСсылкаРасходнаяНакладная - ДокументСсылка.РасходнаяНакладная.
//
Процедура ЗаполнитьПоРасходнаяНакладная(ДокументСсылкаРасходнаяНакладная) Экспорт 
	
	// Заполнение шапки.
	ДокументСсылка = ДокументСсылкаРасходнаяНакладная;
	ДокументОснование = ДокументСсылкаРасходнаяНакладная;
	ЗначенияРеквизитов = ОбщегоНазначения.ЗначенияРеквизитовОбъекта(ДокументСсылка,
		"Организация, СтруктурнаяЕдиница, Ячейка, ПоложениеСклада, Контрагент");
	
	ЗаполнитьЗначенияСвойств(ЭтотОбъект, ЗначенияРеквизитов);
	
	Если ЗначенияРеквизитов.ПоложениеСклада = Перечисления.ПоложениеРеквизитаНаФорме.ВТабличнойЧасти Тогда
		
		СтруктураПроверки = ЕстьОрдерныйСкладВТабЧасти(ДокументСсылка.Запасы, Истина);
		
		ЕстьОрдерныйСклад = СтруктураПроверки.ЕстьОрдерныйСклад;
		
		Если ЕстьОрдерныйСклад Тогда
			СтруктурнаяЕдиница = СтруктураПроверки.СтруктурнаяЕдиница;
		КонецЕсли;
		
		Если НЕ ЕстьОрдерныйСклад Тогда
			ТекстИсключения = СтрШаблон(НСтр("ru = 'Невозможен ввод операции ""Отгрузка с ордерного склада"".
			|Документ ""%1"" не использует ордерную схему при отгрузке'"), ДокументСсылка);
			
			ВызватьИсключениеВводНаОсновании(ДокументСсылка, ТекстИсключения);
		КонецЕсли;
	Иначе
		ПроверитьВозможностьВводаНаОсновании(ДокументСсылка, ЗначенияРеквизитов);
	КонецЕсли;
	
	ВидУчета = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(СтруктурнаяЕдиница, "ВидУчетаОрдерныхСкладов");
	
	Запасы.Очистить();
	СерииНоменклатуры.Очистить();
	
	ПоложениеЯчейки = ДокументСсылка.ПоложениеСклада;
	
	Если ВидУчета = Перечисления.ВидыУчетаОрдерныхСкладов.ПоСкладуВЦелом Тогда
		ЗаполнитьПоРасходнаяНакладнаяВидУчетаНеИспользуется(ДокументСсылкаРасходнаяНакладная);
		Возврат;
	КонецЕсли;
	
	// Заполнение табличной части.
	Запрос = Новый Запрос(
	"ВЫБРАТЬ
	|	РасходнаяНакладнаяЗапасы.Номенклатура КАК Номенклатура,
	|	РасходнаяНакладнаяЗапасы.ЕдиницаИзмерения КАК ЕдиницаИзмерения,
	|	РасходнаяНакладнаяЗапасы.Характеристика КАК Характеристика,
	|	РасходнаяНакладнаяЗапасы.СерииНоменклатуры КАК СерииНоменклатуры,
	|	РасходнаяНакладнаяЗапасы.КлючСвязи КАК КлючСвязи,
	|	РасходнаяНакладнаяЗапасы.Партия КАК Партия,
	|	РасходнаяНакладнаяЗапасы.Количество КАК Количество,
	|	РасходнаяНакладнаяЗапасы.СтруктурнаяЕдиница КАК СтруктурнаяЕдиница,
	|	РасходнаяНакладнаяЗапасы.Ячейка КАК Ячейка,
	|	ВЫБОР
	|		КОГДА &КонтролироватьОстаткиПоДокументам
	|			ТОГДА &ДокументОснование
	|		ИНАЧЕ НЕОПРЕДЕЛЕНО
	|	КОНЕЦ КАК ДокументПоступления
	|ИЗ
	|	Документ.РасходнаяНакладная.Запасы КАК РасходнаяНакладнаяЗапасы
	|ГДЕ
	|	РасходнаяНакладнаяЗапасы.Ссылка = &ДокументОснование
	|	И РасходнаяНакладнаяЗапасы.Номенклатура.ТипНоменклатуры В (ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.Запас), ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.ПодарочныйСертификат))
	|	И ВЫБОР
	|			КОГДА РасходнаяНакладнаяЗапасы.Ссылка.ПоложениеСклада = ЗНАЧЕНИЕ(Перечисление.ПоложениеРеквизитаНаФорме.ВТабличнойЧасти)
	|				ТОГДА РасходнаяНакладнаяЗапасы.СтруктурнаяЕдиница = &СтруктурнаяЕдиница
	|			ИНАЧЕ ИСТИНА
	|		КОНЕЦ
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ЗапасыКРасходуСоСкладовОстатки.Номенклатура КАК Номенклатура,
	|	ЗапасыКРасходуСоСкладовОстатки.Характеристика КАК Характеристика,
	|	ЗапасыКРасходуСоСкладовОстатки.Партия КАК Партия,
	|	ВЫБОР
	|		КОГДА ЗапасыКРасходуСоСкладовОстатки.КоличествоОстаток < 0
	|			ТОГДА -ЗапасыКРасходуСоСкладовОстатки.КоличествоОстаток
	|		ИНАЧЕ ЗапасыКРасходуСоСкладовОстатки.КоличествоОстаток
	|	КОНЕЦ КАК Количество,
	|	ВЫБОР
	|		КОГДА &КонтролироватьОстаткиПоДокументам
	|			ТОГДА &ДокументОснование
	|		ИНАЧЕ НЕОПРЕДЕЛЕНО
	|	КОНЕЦ КАК ДокументПоступления,
	|	ЗапасыКРасходуСоСкладовОстатки.Ячейка КАК Ячейка
	|ПОМЕСТИТЬ ЗапасыОстаткиИтог
	|ИЗ
	|	РегистрНакопления.ЗапасыКРасходуСоСкладов.Остатки(
	|			,
	|			Организация = &Организация
	|				И СтруктурнаяЕдиница = &СтруктурнаяЕдиница
	|				И ДокументОснование = &ДокументОснование) КАК ЗапасыКРасходуСоСкладовОстатки
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ЗапасыКРасходуСоСкладов.Номенклатура,
	|	ЗапасыКРасходуСоСкладов.Характеристика,
	|	ЗапасыКРасходуСоСкладов.Партия,
	|	ВЫБОР
	|		КОГДА ЗапасыКРасходуСоСкладов.Количество < 0
	|			ТОГДА -ЗапасыКРасходуСоСкладов.Количество
	|		ИНАЧЕ ЗапасыКРасходуСоСкладов.Количество
	|	КОНЕЦ,
	|	ВЫБОР
	|		КОГДА &КонтролироватьОстаткиПоДокументам
	|			ТОГДА &ДокументОснование
	|		ИНАЧЕ НЕОПРЕДЕЛЕНО
	|	КОНЕЦ,
	|	ЗапасыКРасходуСоСкладов.Ячейка
	|ИЗ
	|	РегистрНакопления.ЗапасыКРасходуСоСкладов КАК ЗапасыКРасходуСоСкладов
	|ГДЕ
	|	ЗапасыКРасходуСоСкладов.ДокументОснование = &ДокументОснование
	|	И ЗапасыКРасходуСоСкладов.Регистратор = &Ссылка
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ЗапасыОстаткиИтог.Номенклатура КАК Номенклатура,
	|	ЗапасыОстаткиИтог.Характеристика КАК Характеристика,
	|	ЗапасыОстаткиИтог.Партия КАК Партия,
	|	СУММА(ЗапасыОстаткиИтог.Количество) КАК Количество,
	|	ЗапасыОстаткиИтог.ДокументПоступления КАК ДокументПоступления,
	|	ЗапасыОстаткиИтог.Ячейка КАК Ячейка
	|ИЗ
	|	ЗапасыОстаткиИтог КАК ЗапасыОстаткиИтог
	|
	|СГРУППИРОВАТЬ ПО
	|	ЗапасыОстаткиИтог.Номенклатура,
	|	ЗапасыОстаткиИтог.Ячейка,
	|	ЗапасыОстаткиИтог.Характеристика,
	|	ЗапасыОстаткиИтог.Партия,
	|	ЗапасыОстаткиИтог.ДокументПоступления
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	РасходнаяНакладнаяЗапасы.Номенклатура КАК Номенклатура,
	|	РасходнаяНакладнаяЗапасы.Характеристика КАК Характеристика,
	|	РасходнаяНакладнаяЗапасы.Партия КАК Партия,
	|	РасходнаяНакладнаяСерииНоменклатуры.Серия КАК Серия,
	|	РасходнаяНакладнаяЗапасы.КлючСвязи КАК КлючСвязи,
	|	РасходнаяНакладнаяСерииНоменклатуры.Количество КАК Количество
	|ИЗ
	|	Документ.РасходнаяНакладная.Запасы КАК РасходнаяНакладнаяЗапасы
	|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.РасходнаяНакладная.СерииНоменклатуры КАК РасходнаяНакладнаяСерииНоменклатуры
	|		ПО РасходнаяНакладнаяЗапасы.КлючСвязи = РасходнаяНакладнаяСерииНоменклатуры.КлючСвязи
	|ГДЕ
	|	РасходнаяНакладнаяЗапасы.Ссылка = &ДокументОснование
	|	И РасходнаяНакладнаяСерииНоменклатуры.Ссылка = &ДокументОснование
	|	И ВЫБОР
	|			КОГДА РасходнаяНакладнаяЗапасы.Ссылка.ПоложениеСклада = ЗНАЧЕНИЕ(Перечисление.ПоложениеРеквизитаНаФорме.ВТабличнойЧасти)
	|				ТОГДА РасходнаяНакладнаяЗапасы.СтруктурнаяЕдиница = &СтруктурнаяЕдиница
	|			ИНАЧЕ ИСТИНА
	|		КОНЕЦ
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	СерииНоменклатурыКРасходуОстатки.Серия КАК Серия,
	|	СерииНоменклатурыКРасходуОстатки.КоличествоОстаток КАК Количество,
	|	СерииНоменклатурыКРасходуОстатки.Номенклатура КАК Номенклатура,
	|	СерииНоменклатурыКРасходуОстатки.Характеристика КАК Характеристика,
	|	СерииНоменклатурыКРасходуОстатки.Партия КАК Партия
	|ПОМЕСТИТЬ ОстаткиСерииИтог
	|ИЗ
	|	РегистрНакопления.СерииНоменклатурыКРасходу.Остатки(
	|			,
	|			Организация = &Организация
	|				И СтруктурнаяЕдиница = &СтруктурнаяЕдиница
	|				И ДокументОснование = &ДокументОснование) КАК СерииНоменклатурыКРасходуОстатки
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	СерииНоменклатурыКРасходу.Серия,
	|	СерииНоменклатурыКРасходу.Количество,
	|	СерииНоменклатурыКРасходу.Номенклатура,
	|	СерииНоменклатурыКРасходу.Характеристика,
	|	СерииНоменклатурыКРасходу.Партия
	|ИЗ
	|	РегистрНакопления.СерииНоменклатурыКРасходу КАК СерииНоменклатурыКРасходу
	|ГДЕ
	|	СерииНоменклатурыКРасходу.ДокументОснование = &ДокументОснование
	|	И СерииНоменклатурыКРасходу.Регистратор = &Ссылка
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ОстаткиСерииИтог.Серия КАК Серия,
	|	СУММА(ОстаткиСерииИтог.Количество) КАК Количество,
	|	ОстаткиСерииИтог.Номенклатура КАК Номенклатура,
	|	ОстаткиСерииИтог.Характеристика КАК Характеристика,
	|	ОстаткиСерииИтог.Партия КАК Партия
	|ИЗ
	|	ОстаткиСерииИтог КАК ОстаткиСерииИтог
	|
	|СГРУППИРОВАТЬ ПО
	|	ОстаткиСерииИтог.Партия,
	|	ОстаткиСерииИтог.Характеристика,
	|	ОстаткиСерииИтог.Номенклатура,
	|	ОстаткиСерииИтог.Серия");
	
	Запрос.УстановитьПараметр("Ссылка", Ссылка);
	Запрос.УстановитьПараметр("Организация", Константы.УчетПоКомпании.Компания(Организация));
	Запрос.УстановитьПараметр("СтруктурнаяЕдиница", СтруктурнаяЕдиница);
	
	КонтролироватьОстаткиПоДокументам = ВидУчета = Перечисления.ВидыУчетаОрдерныхСкладов.УчетОстатковПоПрочимДокументам;
	
	Запрос.УстановитьПараметр("КонтролироватьОстаткиПоДокументам", КонтролироватьОстаткиПоДокументам);
	Запрос.УстановитьПараметр("ДокументОснование", ?(КонтролироватьОстаткиПоДокументам, ДокументСсылка, Неопределено));
	
	ДокументПоступления = ?(КонтролироватьОстаткиПоДокументам, ДокументСсылка, Неопределено);
	
	РезультатыЗапроса = Запрос.ВыполнитьПакет();
	
	ЗаполнитьТабличнуюЧастьПоОстаткамСУчетомСерий(РезультатыЗапроса, СтруктурнаяЕдиница);
	
КонецПроцедуры // ЗаполнитьПоРасходнаяНакладная()

// Обработчик заполнения на основании документа ПередачаТоваровМеждуОрганизациями.
//
// Параметры:
//  ДокументСсылка - ДокументСсылка.ПередачаТоваровМеждуОрганизациями.
//
Процедура ЗаполнитьПоПередачаТоваровМеждуОрганизациями(ДокументСсылка) Экспорт 
	
	// Заполнение шапки.
	ДокументОснование = ДокументСсылка;
	ЗначенияРеквизитов = ОбщегоНазначения.ЗначенияРеквизитовОбъекта(ДокументСсылка,
		"ОрганизацияПолучатель, СтруктурнаяЕдиница, Ячейка, ПоложениеСклада");
	
	ЗаполнитьЗначенияСвойств(ЭтотОбъект, ЗначенияРеквизитов);
	
	Если ЗначенияРеквизитов.ПоложениеСклада = Перечисления.ПоложениеРеквизитаНаФорме.ВТабличнойЧасти Тогда
		
		СтруктураПроверки = ЕстьОрдерныйСкладВТабЧасти(ДокументСсылка.Запасы, Истина);
		
		ЕстьОрдерныйСклад = СтруктураПроверки.ЕстьОрдерныйСклад;
		
		Если ЕстьОрдерныйСклад Тогда
			СтруктурнаяЕдиница = СтруктураПроверки.СтруктурнаяЕдиница;
		КонецЕсли;
		
		Если НЕ ЕстьОрдерныйСклад Тогда
			ТекстИсключения = СтрШаблон(НСтр("ru = 'Невозможен ввод операции ""Поступления на ордерный склад"".
			|Документ ""%1"" не использует ордерную схему при поступлении'"), ДокументСсылка);
			
			ВызватьИсключениеВводНаОсновании(ДокументСсылка, ТекстИсключения);
		КонецЕсли;
	Иначе
		ПроверитьВозможностьВводаНаОсновании(ДокументСсылка, ЗначенияРеквизитов);
	КонецЕсли;
	
	ВидУчета = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(СтруктурнаяЕдиница, "ВидУчетаОрдерныхСкладов");
	
	Организация = ЗначенияРеквизитов.ОрганизацияПолучатель;
	
	Запасы.Очистить();
	СерииНоменклатуры.Очистить();
	
	ПоложениеЯчейки = ДокументСсылка.ПоложениеСклада;
	
	Если ВидУчета = Перечисления.ВидыУчетаОрдерныхСкладов.ПоСкладуВЦелом Тогда
		ЗаполнитьПоПередачаТоваровМеждуОрганизациямиВидУчетаНеИспользуется(ДокументСсылка);
		Возврат;
	КонецЕсли;
	
	// Заполнение табличной части.
	Запрос = Новый Запрос(
	"ВЫБРАТЬ
	|	ПередачаТоваровМеждуОрганизациямиЗапасы.Номенклатура КАК Номенклатура,
	|	ПередачаТоваровМеждуОрганизациямиЗапасы.ЕдиницаИзмерения КАК ЕдиницаИзмерения,
	|	ПередачаТоваровМеждуОрганизациямиЗапасы.Характеристика КАК Характеристика,
	|	ПередачаТоваровМеждуОрганизациямиЗапасы.СерииНоменклатуры КАК СерииНоменклатуры,
	|	ПередачаТоваровМеждуОрганизациямиЗапасы.КлючСвязи КАК КлючСвязи,
	|	ПередачаТоваровМеждуОрганизациямиЗапасы.Партия КАК Партия,
	|	ПередачаТоваровМеждуОрганизациямиЗапасы.Количество КАК Количество,
	|	ПередачаТоваровМеждуОрганизациямиЗапасы.СтруктурнаяЕдиница КАК СтруктурнаяЕдиница,
	|	ПередачаТоваровМеждуОрганизациямиЗапасы.Ячейка КАК Ячейка,
	|	ВЫБОР
	|		КОГДА &КонтролироватьОстаткиПоДокументам
	|			ТОГДА &ДокументОснование
	|		ИНАЧЕ НЕОПРЕДЕЛЕНО
	|	КОНЕЦ КАК ДокументПоступления
	|ИЗ
	|	Документ.ПередачаТоваровМеждуОрганизациями.Запасы КАК ПередачаТоваровМеждуОрганизациямиЗапасы
	|ГДЕ
	|	ПередачаТоваровМеждуОрганизациямиЗапасы.Ссылка = &ДокументОснование
	|	И ПередачаТоваровМеждуОрганизациямиЗапасы.Номенклатура.ТипНоменклатуры В (ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.Запас), ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.ПодарочныйСертификат))
	|	И ПередачаТоваровМеждуОрганизациямиЗапасы.СтруктурнаяЕдиница = &СтруктурнаяЕдиница
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ЗапасыКРасходуСоСкладовОстатки.Номенклатура КАК Номенклатура,
	|	ЗапасыКРасходуСоСкладовОстатки.Характеристика КАК Характеристика,
	|	ЗапасыКРасходуСоСкладовОстатки.Партия КАК Партия,
	|	ВЫБОР
	|		КОГДА ЗапасыКРасходуСоСкладовОстатки.КоличествоОстаток < 0
	|			ТОГДА -ЗапасыКРасходуСоСкладовОстатки.КоличествоОстаток
	|		ИНАЧЕ ЗапасыКРасходуСоСкладовОстатки.КоличествоОстаток
	|	КОНЕЦ КАК Количество,
	|	ВЫБОР
	|		КОГДА &КонтролироватьОстаткиПоДокументам
	|			ТОГДА &ДокументОснование
	|		ИНАЧЕ НЕОПРЕДЕЛЕНО
	|	КОНЕЦ КАК ДокументПоступления,
	|	ЗапасыКРасходуСоСкладовОстатки.Ячейка КАК Ячейка
	|ПОМЕСТИТЬ ЗапасыОстаткиИтог
	|ИЗ
	|	РегистрНакопления.ЗапасыКРасходуСоСкладов.Остатки(
	|			,
	|			Организация = &Организация
	|				И СтруктурнаяЕдиница = &СтруктурнаяЕдиница
	|				И ДокументОснование = &ДокументОснование) КАК ЗапасыКРасходуСоСкладовОстатки
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ЗапасыКРасходуСоСкладов.Номенклатура,
	|	ЗапасыКРасходуСоСкладов.Характеристика,
	|	ЗапасыКРасходуСоСкладов.Партия,
	|	ВЫБОР
	|		КОГДА ЗапасыКРасходуСоСкладов.Количество < 0
	|			ТОГДА -ЗапасыКРасходуСоСкладов.Количество
	|		ИНАЧЕ ЗапасыКРасходуСоСкладов.Количество
	|	КОНЕЦ,
	|	ВЫБОР
	|		КОГДА &КонтролироватьОстаткиПоДокументам
	|			ТОГДА &ДокументОснование
	|		ИНАЧЕ НЕОПРЕДЕЛЕНО
	|	КОНЕЦ,
	|	ЗапасыКРасходуСоСкладов.Ячейка
	|ИЗ
	|	РегистрНакопления.ЗапасыКРасходуСоСкладов КАК ЗапасыКРасходуСоСкладов
	|ГДЕ
	|	ЗапасыКРасходуСоСкладов.ДокументОснование = &ДокументОснование
	|	И ЗапасыКРасходуСоСкладов.Регистратор = &Ссылка
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ЗапасыОстаткиИтог.Номенклатура КАК Номенклатура,
	|	ЗапасыОстаткиИтог.Характеристика КАК Характеристика,
	|	ЗапасыОстаткиИтог.Партия КАК Партия,
	|	СУММА(ЗапасыОстаткиИтог.Количество) КАК Количество,
	|	ЗапасыОстаткиИтог.ДокументПоступления КАК ДокументПоступления,
	|	ЗапасыОстаткиИтог.Ячейка КАК Ячейка
	|ИЗ
	|	ЗапасыОстаткиИтог КАК ЗапасыОстаткиИтог
	|
	|СГРУППИРОВАТЬ ПО
	|	ЗапасыОстаткиИтог.Номенклатура,
	|	ЗапасыОстаткиИтог.Ячейка,
	|	ЗапасыОстаткиИтог.Характеристика,
	|	ЗапасыОстаткиИтог.Партия,
	|	ЗапасыОстаткиИтог.ДокументПоступления
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ПередачаТоваровМеждуОрганизациямиЗапасы.Номенклатура КАК Номенклатура,
	|	ПередачаТоваровМеждуОрганизациямиЗапасы.Характеристика КАК Характеристика,
	|	ПередачаТоваровМеждуОрганизациямиЗапасы.Партия КАК Партия,
	|	ПередачаТоваровМеждуОрганизациямиСерииНоменклатуры.Серия КАК Серия,
	|	ПередачаТоваровМеждуОрганизациямиЗапасы.КлючСвязи КАК КлючСвязи,
	|	ПередачаТоваровМеждуОрганизациямиСерииНоменклатуры.Количество КАК Количество
	|ИЗ
	|	Документ.ПередачаТоваровМеждуОрганизациями.Запасы КАК ПередачаТоваровМеждуОрганизациямиЗапасы
	|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.ПередачаТоваровМеждуОрганизациями.СерииНоменклатуры КАК ПередачаТоваровМеждуОрганизациямиСерииНоменклатуры
	|		ПО ПередачаТоваровМеждуОрганизациямиЗапасы.КлючСвязи = ПередачаТоваровМеждуОрганизациямиСерииНоменклатуры.КлючСвязи
	|ГДЕ
	|	ПередачаТоваровМеждуОрганизациямиЗапасы.Ссылка = &ДокументОснование
	|	И ПередачаТоваровМеждуОрганизациямиСерииНоменклатуры.Ссылка = &ДокументОснование
	|	И ПередачаТоваровМеждуОрганизациямиЗапасы.СтруктурнаяЕдиница = &СтруктурнаяЕдиница
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	СерииНоменклатурыКРасходуОстатки.Серия КАК Серия,
	|	СерииНоменклатурыКРасходуОстатки.КоличествоОстаток КАК Количество,
	|	СерииНоменклатурыКРасходуОстатки.Номенклатура КАК Номенклатура,
	|	СерииНоменклатурыКРасходуОстатки.Характеристика КАК Характеристика,
	|	СерииНоменклатурыКРасходуОстатки.Партия КАК Партия
	|ПОМЕСТИТЬ ОстаткиСерииИтог
	|ИЗ
	|	РегистрНакопления.СерииНоменклатурыКРасходу.Остатки(
	|			,
	|			Организация = &Организация
	|				И СтруктурнаяЕдиница = &СтруктурнаяЕдиница
	|				И ДокументОснование = &ДокументОснование) КАК СерииНоменклатурыКРасходуОстатки
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	СерииНоменклатурыКРасходу.Серия,
	|	СерииНоменклатурыКРасходу.Количество,
	|	СерииНоменклатурыКРасходу.Номенклатура,
	|	СерииНоменклатурыКРасходу.Характеристика,
	|	СерииНоменклатурыКРасходу.Партия
	|ИЗ
	|	РегистрНакопления.СерииНоменклатурыКРасходу КАК СерииНоменклатурыКРасходу
	|ГДЕ
	|	СерииНоменклатурыКРасходу.ДокументОснование = &ДокументОснование
	|	И СерииНоменклатурыКРасходу.Регистратор = &Ссылка
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ОстаткиСерииИтог.Серия КАК Серия,
	|	СУММА(ОстаткиСерииИтог.Количество) КАК Количество,
	|	ОстаткиСерииИтог.Номенклатура КАК Номенклатура,
	|	ОстаткиСерииИтог.Характеристика КАК Характеристика,
	|	ОстаткиСерииИтог.Партия КАК Партия
	|ИЗ
	|	ОстаткиСерииИтог КАК ОстаткиСерииИтог
	|
	|СГРУППИРОВАТЬ ПО
	|	ОстаткиСерииИтог.Партия,
	|	ОстаткиСерииИтог.Характеристика,
	|	ОстаткиСерииИтог.Номенклатура,
	|	ОстаткиСерииИтог.Серия");
	
	Запрос.УстановитьПараметр("Ссылка", Ссылка);
	Запрос.УстановитьПараметр("Организация", Константы.УчетПоКомпании.Компания(Организация));
	Запрос.УстановитьПараметр("СтруктурнаяЕдиница", СтруктурнаяЕдиница);
	
	КонтролироватьОстаткиПоДокументам = ВидУчета = Перечисления.ВидыУчетаОрдерныхСкладов.УчетОстатковПоПрочимДокументам;
	
	Запрос.УстановитьПараметр("КонтролироватьОстаткиПоДокументам", КонтролироватьОстаткиПоДокументам);
	Запрос.УстановитьПараметр("ДокументОснование", ?(КонтролироватьОстаткиПоДокументам, ДокументСсылка, Неопределено));
	
	ДокументПоступления = ?(КонтролироватьОстаткиПоДокументам, ДокументСсылка, Неопределено);
	
	РезультатыЗапроса = Запрос.ВыполнитьПакет();
	
	ЗаполнитьТабличнуюЧастьПоОстаткамСУчетомСерий(РезультатыЗапроса, СтруктурнаяЕдиница);
	
КонецПроцедуры // ЗаполнитьПоРасходнаяНакладная()

// Обработчик заполнения на основании документа ЗаказПокупателя.
//
// Параметры:
//  ДокументСсылкаЗаказПокупателя	 - ДокументСсылка.ЗаказПокупателя.
//
Процедура ЗаполнитьПоЗаказПокупателя(ДокументСсылкаЗаказПокупателя) Экспорт 
	
	// Заполнение шапки.
	ДокументОснование = ДокументСсылкаЗаказПокупателя;
	ДокументСсылка = ДокументСсылкаЗаказПокупателя;
	ЗначенияРеквизитов = ОбщегоНазначения.ЗначенияРеквизитовОбъекта(ДокументСсылка,
		"Организация, СтруктурнаяЕдиницаРезерв, Ячейка, ПоложениеСклада, Контрагент");
	
	ЗаполнитьЗначенияСвойств(ЭтотОбъект, ЗначенияРеквизитов);
	СтруктурнаяЕдиница = ЗначенияРеквизитов.СтруктурнаяЕдиницаРезерв;
	
	Если ЗначенияРеквизитов.ПоложениеСклада = Перечисления.ПоложениеРеквизитаНаФорме.ВТабличнойЧасти Тогда
		
		СтруктураПроверки = ЕстьОрдерныйСкладВТабЧасти(ДокументСсылка.Запасы, Истина);
		
		ЕстьОрдерныйСклад = СтруктураПроверки.ЕстьОрдерныйСклад;
		
		Если ЕстьОрдерныйСклад Тогда
			СтруктурнаяЕдиница = СтруктураПроверки.СтруктурнаяЕдиница;
		КонецЕсли;
		
		Если НЕ ЕстьОрдерныйСклад Тогда
			ТекстИсключения = СтрШаблон(НСтр("ru = 'Невозможен ввод операции ""Поступления на ордерный склад"".
			|Документ ""%1"" не использует ордерную схему при поступлении'"), ДокументСсылка);
			
			ВызватьИсключениеВводНаОсновании(ДокументСсылка, ТекстИсключения);
		КонецЕсли;
	Иначе
		ПроверитьВозможностьВводаНаОсновании(ДокументСсылка, ЗначенияРеквизитов);
	КонецЕсли;
	
	ВидУчета = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(СтруктурнаяЕдиница, "ВидУчетаОрдерныхСкладов");
	
	Запасы.Очистить();
	СерииНоменклатуры.Очистить();
	
	ПоложениеЯчейки = ДокументСсылка.ПоложениеСклада;
	
	Если ВидУчета = Перечисления.ВидыУчетаОрдерныхСкладов.ПоСкладуВЦелом Тогда
		ЗаполнитьПоЗаказПокупателяВидУчетаНеИспользуется(ДокументСсылкаЗаказПокупателя);
		Возврат;
	КонецЕсли;
	
	// Заполнение табличной части.
	Запрос = Новый Запрос(
	"ВЫБРАТЬ
	|	ЗаказПокупателяЗапасы.Номенклатура КАК Номенклатура,
	|	ЗаказПокупателяЗапасы.ЕдиницаИзмерения КАК ЕдиницаИзмерения,
	|	ЗаказПокупателяЗапасы.Характеристика КАК Характеристика,
	|	ЗаказПокупателяЗапасы.СерииНоменклатуры КАК СерииНоменклатуры,
	|	ЗаказПокупателяЗапасы.КлючСвязи КАК КлючСвязи,
	|	ЗаказПокупателяЗапасы.Партия КАК Партия,
	|	ЗаказПокупателяЗапасы.Количество КАК Количество,
	|	ЗаказПокупателяЗапасы.Ячейка КАК Ячейка,
	|	ВЫБОР
	|		КОГДА &КонтролироватьОстаткиПоДокументам
	|			ТОГДА &ДокументОснование
	|		ИНАЧЕ НЕОПРЕДЕЛЕНО
	|	КОНЕЦ КАК ДокументПоступления
	|ИЗ
	|	Документ.ЗаказПокупателя.Запасы КАК ЗаказПокупателяЗапасы
	|ГДЕ
	|	ЗаказПокупателяЗапасы.Ссылка = &ДокументОснование
	|	И ЗаказПокупателяЗапасы.Номенклатура.ТипНоменклатуры В (ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.Запас), ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.ПодарочныйСертификат))
	|	И ЗаказПокупателяЗапасы.НомерВариантаКП = ЗаказПокупателяЗапасы.Ссылка.ОсновнойВариантКП
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ЗапасыКРасходуСоСкладовОстатки.Номенклатура КАК Номенклатура,
	|	ЗапасыКРасходуСоСкладовОстатки.Характеристика КАК Характеристика,
	|	ЗапасыКРасходуСоСкладовОстатки.Партия КАК Партия,
	|	ВЫБОР
	|		КОГДА ЗапасыКРасходуСоСкладовОстатки.КоличествоОстаток < 0
	|			ТОГДА -ЗапасыКРасходуСоСкладовОстатки.КоличествоОстаток
	|		ИНАЧЕ ЗапасыКРасходуСоСкладовОстатки.КоличествоОстаток
	|	КОНЕЦ КАК Количество,
	|	ВЫБОР
	|		КОГДА &КонтролироватьОстаткиПоДокументам
	|			ТОГДА &ДокументОснование
	|		ИНАЧЕ НЕОПРЕДЕЛЕНО
	|	КОНЕЦ КАК ДокументПоступления,
	|	ЗапасыКРасходуСоСкладовОстатки.Ячейка КАК Ячейка
	|ПОМЕСТИТЬ ЗапасыОстаткиИтог
	|ИЗ
	|	РегистрНакопления.ЗапасыКРасходуСоСкладов.Остатки(
	|			,
	|			Организация = &Организация
	|				И СтруктурнаяЕдиница = &СтруктурнаяЕдиница
	|				И ДокументОснование = &ДокументОснование) КАК ЗапасыКРасходуСоСкладовОстатки
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ЗапасыКРасходуСоСкладов.Номенклатура,
	|	ЗапасыКРасходуСоСкладов.Характеристика,
	|	ЗапасыКРасходуСоСкладов.Партия,
	|	ВЫБОР
	|		КОГДА ЗапасыКРасходуСоСкладов.Количество < 0
	|			ТОГДА -ЗапасыКРасходуСоСкладов.Количество
	|		ИНАЧЕ ЗапасыКРасходуСоСкладов.Количество
	|	КОНЕЦ,
	|	ВЫБОР
	|		КОГДА &КонтролироватьОстаткиПоДокументам
	|			ТОГДА &ДокументОснование
	|		ИНАЧЕ НЕОПРЕДЕЛЕНО
	|	КОНЕЦ,
	|	ЗапасыКРасходуСоСкладов.Ячейка
	|ИЗ
	|	РегистрНакопления.ЗапасыКРасходуСоСкладов КАК ЗапасыКРасходуСоСкладов
	|ГДЕ
	|	ЗапасыКРасходуСоСкладов.ДокументОснование = &ДокументОснование
	|	И ЗапасыКРасходуСоСкладов.Регистратор = &Ссылка
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ЗапасыОстаткиИтог.Номенклатура КАК Номенклатура,
	|	ЗапасыОстаткиИтог.Характеристика КАК Характеристика,
	|	ЗапасыОстаткиИтог.Партия КАК Партия,
	|	СУММА(ЗапасыОстаткиИтог.Количество) КАК Количество,
	|	ЗапасыОстаткиИтог.ДокументПоступления КАК ДокументПоступления,
	|	ЗапасыОстаткиИтог.Ячейка КАК Ячейка
	|ИЗ
	|	ЗапасыОстаткиИтог КАК ЗапасыОстаткиИтог
	|
	|СГРУППИРОВАТЬ ПО
	|	ЗапасыОстаткиИтог.Номенклатура,
	|	ЗапасыОстаткиИтог.Ячейка,
	|	ЗапасыОстаткиИтог.Характеристика,
	|	ЗапасыОстаткиИтог.Партия,
	|	ЗапасыОстаткиИтог.ДокументПоступления
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ЗаказПокупателяЗапасы.Номенклатура КАК Номенклатура,
	|	ЗаказПокупателяЗапасы.Характеристика КАК Характеристика,
	|	ЗаказПокупателяЗапасы.Партия КАК Партия,
	|	ЗаказПокупателяСерииНоменклатуры.Серия КАК Серия,
	|	ЗаказПокупателяЗапасы.КлючСвязи КАК КлючСвязи,
	|	ЗаказПокупателяСерииНоменклатуры.Количество КАК Количество
	|ИЗ
	|	Документ.ЗаказПокупателя.Запасы КАК ЗаказПокупателяЗапасы
	|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.ЗаказПокупателя.СерииНоменклатуры КАК ЗаказПокупателяСерииНоменклатуры
	|		ПО ЗаказПокупателяЗапасы.КлючСвязи = ЗаказПокупателяСерииНоменклатуры.КлючСвязи
	|ГДЕ
	|	ЗаказПокупателяЗапасы.Ссылка = &ДокументОснование
	|	И ЗаказПокупателяСерииНоменклатуры.Ссылка = &ДокументОснование
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	СерииНоменклатурыКРасходуОстатки.Серия КАК Серия,
	|	СерииНоменклатурыКРасходуОстатки.КоличествоОстаток КАК Количество,
	|	СерииНоменклатурыКРасходуОстатки.Номенклатура КАК Номенклатура,
	|	СерииНоменклатурыКРасходуОстатки.Характеристика КАК Характеристика,
	|	СерииНоменклатурыКРасходуОстатки.Партия КАК Партия
	|ПОМЕСТИТЬ ОстаткиСерииИтог
	|ИЗ
	|	РегистрНакопления.СерииНоменклатурыКРасходу.Остатки(
	|			,
	|			Организация = &Организация
	|				И СтруктурнаяЕдиница = &СтруктурнаяЕдиница
	|				И ДокументОснование = &ДокументОснование) КАК СерииНоменклатурыКРасходуОстатки
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	СерииНоменклатурыКРасходу.Серия,
	|	СерииНоменклатурыКРасходу.Количество,
	|	СерииНоменклатурыКРасходу.Номенклатура,
	|	СерииНоменклатурыКРасходу.Характеристика,
	|	СерииНоменклатурыКРасходу.Партия
	|ИЗ
	|	РегистрНакопления.СерииНоменклатурыКРасходу КАК СерииНоменклатурыКРасходу
	|ГДЕ
	|	СерииНоменклатурыКРасходу.ДокументОснование = &ДокументОснование
	|	И СерииНоменклатурыКРасходу.Регистратор = &Ссылка
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ОстаткиСерииИтог.Серия КАК Серия,
	|	СУММА(ОстаткиСерииИтог.Количество) КАК Количество,
	|	ОстаткиСерииИтог.Номенклатура КАК Номенклатура,
	|	ОстаткиСерииИтог.Характеристика КАК Характеристика,
	|	ОстаткиСерииИтог.Партия КАК Партия
	|ИЗ
	|	ОстаткиСерииИтог КАК ОстаткиСерииИтог
	|
	|СГРУППИРОВАТЬ ПО
	|	ОстаткиСерииИтог.Партия,
	|	ОстаткиСерииИтог.Характеристика,
	|	ОстаткиСерииИтог.Номенклатура,
	|	ОстаткиСерииИтог.Серия
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ЗаказПокупателяМатериалы.Номенклатура КАК Номенклатура,
	|	ЗаказПокупателяМатериалы.ЕдиницаИзмерения КАК ЕдиницаИзмерения,
	|	ЗаказПокупателяМатериалы.Характеристика КАК Характеристика,
	|	ЗаказПокупателяМатериалы.СерииНоменклатуры КАК СерииНоменклатуры,
	|	ЗаказПокупателяМатериалы.КлючСвязи КАК КлючСвязи,
	|	ЗаказПокупателяМатериалы.Партия КАК Партия,
	|	ЗаказПокупателяМатериалы.Количество КАК Количество,
	|	ЗаказПокупателяМатериалы.Ячейка КАК Ячейка,
	|	ВЫБОР
	|		КОГДА &КонтролироватьОстаткиПоДокументам
	|			ТОГДА &ДокументОснование
	|		ИНАЧЕ НЕОПРЕДЕЛЕНО
	|	КОНЕЦ КАК ДокументПоступления
	|ИЗ
	|	Документ.ЗаказПокупателя.Материалы КАК ЗаказПокупателяМатериалы
	|ГДЕ
	|	ЗаказПокупателяМатериалы.Ссылка = &ДокументОснование
	|	И ЗаказПокупателяМатериалы.Номенклатура.ТипНоменклатуры В (ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.Запас), ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.ПодарочныйСертификат))
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ЗаказПокупателяМатериалы.Номенклатура КАК Номенклатура,
	|	ЗаказПокупателяМатериалы.Характеристика КАК Характеристика,
	|	ЗаказПокупателяМатериалы.Партия КАК Партия,
	|	ЗаказПокупателяСерииНоменклатурыМатериалы.Серия КАК Серия,
	|	ЗаказПокупателяМатериалы.КлючСвязи КАК КлючСвязи,
	|	ЗаказПокупателяСерииНоменклатурыМатериалы.Количество КАК Количество
	|ИЗ
	|	Документ.ЗаказПокупателя.Материалы КАК ЗаказПокупателяМатериалы
	|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.ЗаказПокупателя.СерииНоменклатурыМатериалы КАК ЗаказПокупателяСерииНоменклатурыМатериалы
	|		ПО ЗаказПокупателяМатериалы.КлючСвязи = ЗаказПокупателяСерииНоменклатурыМатериалы.КлючСвязи
	|ГДЕ
	|	ЗаказПокупателяМатериалы.Ссылка = &ДокументОснование
	|	И ЗаказПокупателяСерииНоменклатурыМатериалы.Ссылка = &ДокументОснование");
	
	Запрос.УстановитьПараметр("Ссылка", Ссылка);
	Запрос.УстановитьПараметр("Организация", Константы.УчетПоКомпании.Компания(Организация));
	Запрос.УстановитьПараметр("СтруктурнаяЕдиница", СтруктурнаяЕдиница);
	
	КонтролироватьОстаткиПоДокументам = ВидУчета = Перечисления.ВидыУчетаОрдерныхСкладов.УчетОстатковПоПрочимДокументам;
	
	Запрос.УстановитьПараметр("КонтролироватьОстаткиПоДокументам", КонтролироватьОстаткиПоДокументам);
	Запрос.УстановитьПараметр("ДокументОснование", ?(КонтролироватьОстаткиПоДокументам, ДокументСсылка, Неопределено));
	
	ДокументПоступления = ?(КонтролироватьОстаткиПоДокументам, ДокументСсылка, Неопределено);
	
	РезультатыЗапроса = Запрос.ВыполнитьПакет();
	
	Если РезультатыЗапроса[2].Пустой() Тогда
		Возврат;
	КонецЕсли;
	
	ТаблицаСерииНоменклатуры = РезультатыЗапроса[3].Выгрузить();
	ТаблицаОстаткиСерииНоменклатуры = РезультатыЗапроса[5].Выгрузить();
	ТаблицаОстаткиЗапасы = РезультатыЗапроса[2].Выгрузить();
	
	Выборка = РезультатыЗапроса[0].Выбрать();
	
	ПараметрыПоискаСерии = Новый Структура("КлючСвязи");
	
	Если СкладскойУчетСервер.КонтролироватьОстаткиПоЯчейкамКПоступлениюОтгрзуке(СтруктурнаяЕдиница) Тогда
		ПараметрыПоискаОстаткиЗапасы = Новый Структура("Номенклатура, Характеристика, Партия, Ячейка");
	Иначе
		ПараметрыПоискаОстаткиЗапасы = Новый Структура("Номенклатура, Характеристика, Партия");
	КонецЕсли;
	
	ПараметрыПоискаОстаткиСерииНоменклатуры = Новый Структура("Номенклатура, Характеристика, Партия, Серия");
	
	КлючСвязи = 1;
	
	Пока Выборка.Следующий() Цикл
		
		Если Не ЗначениеЗаполнено(Выборка.Количество) Тогда
			Продолжить;
		КонецЕсли;
		
		ЗаполнитьЗначенияСвойств(ПараметрыПоискаОстаткиЗапасы, Выборка);
		НайденныеОстаткиЗапасы = ТаблицаОстаткиЗапасы.НайтиСтроки(ПараметрыПоискаОстаткиЗапасы);
		
		Если Не НайденныеОстаткиЗапасы.Количество() Или (НайденныеОстаткиЗапасы.Количество() И НайденныеОстаткиЗапасы[0].Количество = 0) Тогда
			Продолжить
		КонецЕсли;
		
		ЗаполнитьЗначенияСвойств(ПараметрыПоискаСерии, Выборка);
		НайденныеСерии = ТаблицаСерииНоменклатуры.НайтиСтроки(ПараметрыПоискаСерии);
		
		КоличествоСерий = 0;
		ИспользуютсяСерииВСтроке = Ложь;
		Для Каждого СтрокаСерии Из НайденныеСерии Цикл
			
			ИспользуютсяСерииВСтроке = Истина;
			
			ЗаполнитьЗначенияСвойств(ПараметрыПоискаОстаткиСерииНоменклатуры, СтрокаСерии);
			НайденныеОстаткиСерий = ТаблицаОстаткиСерииНоменклатуры.НайтиСтроки(ПараметрыПоискаОстаткиСерииНоменклатуры);
			
			Если Не НайденныеОстаткиСерий.Количество() Или (НайденныеОстаткиСерий.Количество() И НайденныеОстаткиСерий[0].Количество = 0) Тогда
				Продолжить
			КонецЕсли;
			
			ОстатокСерий = НайденныеОстаткиСерий[0];
			
			Если Не ОстатокСерий.Количество > 0 Тогда
				Продолжить;
			КонецЕсли;
			
			НоваяСтрокаСерии = СерииНоменклатуры.Добавить();
			ЗаполнитьЗначенияСвойств(НоваяСтрокаСерии, СтрокаСерии);
			НоваяСтрокаСерии.КлючСвязи = КлючСвязи;
			
			Если НоваяСтрокаСерии.Количество >= ОстатокСерий.Количество Тогда
				НоваяСтрокаСерии.Количество = ОстатокСерий.Количество;
			КонецЕсли;
			
			ОстатокСерий.Количество = ОстатокСерий.Количество - НоваяСтрокаСерии.Количество;
			
			КоличествоСерий = КоличествоСерий + НоваяСтрокаСерии.Количество;
			
		КонецЦикла;
		
		Если ИспользуютсяСерииВСтроке И КоличествоСерий = 0 Тогда
			Продолжить
		КонецЕсли;
		
		ОстатокЗапасов = НайденныеОстаткиЗапасы[0];
		
		НоваяСтрокаЗапасы = Запасы.Добавить();
		ЗаполнитьЗначенияСвойств(НоваяСтрокаЗапасы, Выборка);
		
		НоваяСтрокаЗапасы.КлючСвязи = КлючСвязи;
		
		КоличествоВСтрокеЗапасов = ?(КоличествоСерий > 0, КоличествоСерий, НоваяСтрокаЗапасы.Количество);
		
		Если КоличествоВСтрокеЗапасов >= ОстатокЗапасов.Количество Тогда
			КоличествоВСтрокеЗапасов = ОстатокЗапасов.Количество;
			ОстатокЗапасов.Количество = 0;
		Иначе
			ОстатокЗапасов.Количество = ОстатокЗапасов.Количество - КоличествоВСтрокеЗапасов;
		КонецЕсли;
		
		НоваяСтрокаЗапасы.Количество = КоличествоВСтрокеЗапасов;
		
		Если СерииНоменклатурыУНФ.ИспользоватьСерииНоменклатурыОстатки() = Истина Тогда
			НоваяСтрокаЗапасы.СерииНоменклатуры = СерииНоменклатурыУНФ.ПредставлениеСерийНоменклатуры(СерииНоменклатуры, НоваяСтрокаЗапасы.КлючСвязи)
		КонецЕсли;
		
		КлючСвязи = КлючСвязи + 1;
			
	КонецЦикла;
	
	//Обход по материалам
	
	ТаблицаСерииНоменклатуры = РезультатыЗапроса[7].Выгрузить();
	Выборка = РезультатыЗапроса[6].Выбрать();
	
	Пока Выборка.Следующий() Цикл
		
		Если Не ЗначениеЗаполнено(Выборка.Количество) Тогда
			Продолжить;
		КонецЕсли;
		
		ЗаполнитьЗначенияСвойств(ПараметрыПоискаОстаткиЗапасы, Выборка);
		НайденныеОстаткиЗапасы = ТаблицаОстаткиЗапасы.НайтиСтроки(ПараметрыПоискаОстаткиЗапасы);
		
		Если Не НайденныеОстаткиЗапасы.Количество() Или (НайденныеОстаткиЗапасы.Количество() И НайденныеОстаткиЗапасы[0].Количество = 0) Тогда
			Продолжить
		КонецЕсли;
		
		ЗаполнитьЗначенияСвойств(ПараметрыПоискаСерии, Выборка);
		НайденныеСерии = ТаблицаСерииНоменклатуры.НайтиСтроки(ПараметрыПоискаСерии);
		
		КоличествоСерий = 0;
		ИспользуютсяСерииВСтроке = Ложь;
		Для Каждого СтрокаСерии Из НайденныеСерии Цикл
			
			ИспользуютсяСерииВСтроке = Истина;
			
			ЗаполнитьЗначенияСвойств(ПараметрыПоискаОстаткиСерииНоменклатуры, СтрокаСерии);
			НайденныеОстаткиСерий = ТаблицаОстаткиСерииНоменклатуры.НайтиСтроки(ПараметрыПоискаОстаткиСерииНоменклатуры);
			
			Если Не НайденныеОстаткиСерий.Количество() Или (НайденныеОстаткиСерий.Количество() И НайденныеОстаткиСерий[0].Количество = 0) Тогда
				Продолжить
			КонецЕсли;
			
			ОстатокСерий = НайденныеОстаткиСерий[0];
			
			Если Не ОстатокСерий.Количество > 0 Тогда
				Продолжить;
			КонецЕсли;
			
			НоваяСтрокаСерии = СерииНоменклатуры.Добавить();
			ЗаполнитьЗначенияСвойств(НоваяСтрокаСерии, СтрокаСерии);
			НоваяСтрокаСерии.КлючСвязи = КлючСвязи;
			
			Если НоваяСтрокаСерии.Количество >= ОстатокСерий.Количество Тогда
				НоваяСтрокаСерии.Количество = ОстатокСерий.Количество;
			КонецЕсли;
			
			ОстатокСерий.Количество = ОстатокСерий.Количество - НоваяСтрокаСерии.Количество;
			
			КоличествоСерий = КоличествоСерий + НоваяСтрокаСерии.Количество;
			
		КонецЦикла;
		
		Если ИспользуютсяСерииВСтроке И КоличествоСерий = 0 Тогда
			Продолжить
		КонецЕсли;
		
		ОстатокЗапасов = НайденныеОстаткиЗапасы[0];
		
		НоваяСтрокаЗапасы = Запасы.Добавить();
		ЗаполнитьЗначенияСвойств(НоваяСтрокаЗапасы, Выборка);
		
		НоваяСтрокаЗапасы.КлючСвязи = КлючСвязи;
		
		Если ТипЗнч(НоваяСтрокаЗапасы.ЕдиницаИзмерения) = ТИП("СправочникСсылка.КлассификаторЕдиницИзмерения") Тогда
			
			КоличествоВСтрокеЗапасов = ?(КоличествоСерий > 0, КоличествоСерий, НоваяСтрокаЗапасы.Количество);
			
			Если КоличествоВСтрокеЗапасов >= ОстатокЗапасов.Количество Тогда
				КоличествоВСтрокеЗапасов = ОстатокЗапасов.Количество;
				ОстатокЗапасов.Количество = 0;
			Иначе
				ОстатокЗапасов.Количество = ОстатокЗапасов.Количество - КоличествоВСтрокеЗапасов;
			КонецЕсли;
			
			НоваяСтрокаЗапасы.Количество = КоличествоВСтрокеЗапасов;
			
		Иначе
			КоличествоСтрокиВЕдиницахХранения = НоваяСтрокаЗапасы.Количество * НоваяСтрокаЗапасы.ЕдиницаИзмерения.Коэффициент;
			КоличествоВСтрокеЗапасов = ?(КоличествоСерий > 0, КоличествоСерий, КоличествоСтрокиВЕдиницахХранения);
			
			Если КоличествоВСтрокеЗапасов >= ОстатокЗапасов.Количество Тогда
				КоличествоВСтрокеЗапасов = ОстатокЗапасов.Количество;
				ОстатокЗапасов.Количество = 0;
			Иначе
				ОстатокЗапасов.Количество = ОстатокЗапасов.Количество - КоличествоВСтрокеЗапасов;
			КонецЕсли;
			
			НоваяСтрокаЗапасы.Количество = КоличествоВСтрокеЗапасов/ НоваяСтрокаЗапасы.ЕдиницаИзмерения.Коэффициент;
		КонецЕсли;
		
		Если СерииНоменклатурыУНФ.ИспользоватьСерииНоменклатурыОстатки() = Истина Тогда
			НоваяСтрокаЗапасы.СерииНоменклатуры = СерииНоменклатурыУНФ.ПредставлениеСерийНоменклатуры(СерииНоменклатуры, НоваяСтрокаЗапасы.КлючСвязи)
		КонецЕсли;
		
		КлючСвязи = КлючСвязи + 1;
			
	КонецЦикла;
	
КонецПроцедуры // ЗаполнитьПоЗаказПокупателя()

// Обработчик заполнения на основании документа СписаниеЗапасов.
//
// Параметры:
//  ДокументСсылкаСписаниеЗапасов	 - ДокументСсылка.СписаниеЗапасов.
//
Процедура ЗаполнитьПоСписаниеЗапасов(ДокументСсылкаСписаниеЗапасов) Экспорт 
	
	// Заполнение шапки.
	ДокументОснование = ДокументСсылкаСписаниеЗапасов;
	ДокументСсылка = ДокументСсылкаСписаниеЗапасов;
	ЗначенияРеквизитов = ОбщегоНазначения.ЗначенияРеквизитовОбъекта(ДокументСсылка,
		"Организация, СтруктурнаяЕдиница, Ячейка");
	
	ПроверитьВозможностьВводаНаОсновании(ДокументСсылка, ЗначенияРеквизитов);
	
	ЗаполнитьЗначенияСвойств(ЭтотОбъект, ЗначенияРеквизитов);
	
	ВидУчета = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(СтруктурнаяЕдиница, "ВидУчетаОрдерныхСкладов");
	
	Запасы.Очистить();
	СерииНоменклатуры.Очистить();
	
	ПоложениеЯчейки = Перечисления.ПоложениеРеквизитаНаФорме.ВШапке;
	
	Если ВидУчета = Перечисления.ВидыУчетаОрдерныхСкладов.ПоСкладуВЦелом Тогда
		ЗаполнитьПоСписаниеЗапасовВидУчетаНеИспользуется(ДокументСсылкаСписаниеЗапасов);
		Возврат;
	КонецЕсли;
	
	// Заполнение табличной части.
	Запрос = Новый Запрос(
	"ВЫБРАТЬ
	|	СписаниеЗапасовЗапасы.Номенклатура КАК Номенклатура,
	|	СписаниеЗапасовЗапасы.ЕдиницаИзмерения КАК ЕдиницаИзмерения,
	|	СписаниеЗапасовЗапасы.Характеристика КАК Характеристика,
	|	СписаниеЗапасовЗапасы.СерииНоменклатуры КАК СерииНоменклатуры,
	|	СписаниеЗапасовЗапасы.КлючСвязи КАК КлючСвязи,
	|	СписаниеЗапасовЗапасы.Партия КАК Партия,
	|	СписаниеЗапасовЗапасы.Количество КАК Количество,
	|	СписаниеЗапасовЗапасы.Ссылка.СтруктурнаяЕдиница КАК СтруктурнаяЕдиница,
	|	СписаниеЗапасовЗапасы.Ссылка.Ячейка КАК Ячейка,
	|	ВЫБОР
	|		КОГДА &КонтролироватьОстаткиПоДокументам
	|			ТОГДА &ДокументОснование
	|		ИНАЧЕ НЕОПРЕДЕЛЕНО
	|	КОНЕЦ КАК ДокументПоступления
	|ИЗ
	|	Документ.СписаниеЗапасов.Запасы КАК СписаниеЗапасовЗапасы
	|ГДЕ
	|	СписаниеЗапасовЗапасы.Ссылка = &ДокументОснование
	|	И СписаниеЗапасовЗапасы.Номенклатура.ТипНоменклатуры В (ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.Запас), ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.ПодарочныйСертификат))
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ЗапасыКРасходуСоСкладовОстатки.Номенклатура КАК Номенклатура,
	|	ЗапасыКРасходуСоСкладовОстатки.Характеристика КАК Характеристика,
	|	ЗапасыКРасходуСоСкладовОстатки.Партия КАК Партия,
	|	ВЫБОР
	|		КОГДА ЗапасыКРасходуСоСкладовОстатки.КоличествоОстаток < 0
	|			ТОГДА -ЗапасыКРасходуСоСкладовОстатки.КоличествоОстаток
	|		ИНАЧЕ ЗапасыКРасходуСоСкладовОстатки.КоличествоОстаток
	|	КОНЕЦ КАК Количество,
	|	ВЫБОР
	|		КОГДА &КонтролироватьОстаткиПоДокументам
	|			ТОГДА &ДокументОснование
	|		ИНАЧЕ НЕОПРЕДЕЛЕНО
	|	КОНЕЦ КАК ДокументПоступления,
	|	ЗапасыКРасходуСоСкладовОстатки.Ячейка КАК Ячейка
	|ПОМЕСТИТЬ ЗапасыОстаткиИтог
	|ИЗ
	|	РегистрНакопления.ЗапасыКРасходуСоСкладов.Остатки(
	|			,
	|			Организация = &Организация
	|				И СтруктурнаяЕдиница = &СтруктурнаяЕдиница
	|				И ДокументОснование = &ДокументОснование) КАК ЗапасыКРасходуСоСкладовОстатки
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ЗапасыКРасходуСоСкладов.Номенклатура,
	|	ЗапасыКРасходуСоСкладов.Характеристика,
	|	ЗапасыКРасходуСоСкладов.Партия,
	|	ВЫБОР
	|		КОГДА ЗапасыКРасходуСоСкладов.Количество < 0
	|			ТОГДА -ЗапасыКРасходуСоСкладов.Количество
	|		ИНАЧЕ ЗапасыКРасходуСоСкладов.Количество
	|	КОНЕЦ,
	|	ВЫБОР
	|		КОГДА &КонтролироватьОстаткиПоДокументам
	|			ТОГДА &ДокументОснование
	|		ИНАЧЕ НЕОПРЕДЕЛЕНО
	|	КОНЕЦ,
	|	ЗапасыКРасходуСоСкладов.Ячейка
	|ИЗ
	|	РегистрНакопления.ЗапасыКРасходуСоСкладов КАК ЗапасыКРасходуСоСкладов
	|ГДЕ
	|	ЗапасыКРасходуСоСкладов.ДокументОснование = &ДокументОснование
	|	И ЗапасыКРасходуСоСкладов.Регистратор = &Ссылка
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ЗапасыОстаткиИтог.Номенклатура КАК Номенклатура,
	|	ЗапасыОстаткиИтог.Характеристика КАК Характеристика,
	|	ЗапасыОстаткиИтог.Партия КАК Партия,
	|	СУММА(ЗапасыОстаткиИтог.Количество) КАК Количество,
	|	ЗапасыОстаткиИтог.ДокументПоступления КАК ДокументПоступления,
	|	ЗапасыОстаткиИтог.Ячейка КАК Ячейка
	|ИЗ
	|	ЗапасыОстаткиИтог КАК ЗапасыОстаткиИтог
	|
	|СГРУППИРОВАТЬ ПО
	|	ЗапасыОстаткиИтог.Номенклатура,
	|	ЗапасыОстаткиИтог.Ячейка,
	|	ЗапасыОстаткиИтог.Характеристика,
	|	ЗапасыОстаткиИтог.Партия,
	|	ЗапасыОстаткиИтог.ДокументПоступления
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	СписаниеЗапасовЗапасы.Номенклатура КАК Номенклатура,
	|	СписаниеЗапасовЗапасы.Характеристика КАК Характеристика,
	|	СписаниеЗапасовЗапасы.Партия КАК Партия,
	|	СписаниеЗапасовСерииНоменклатуры.Серия КАК Серия,
	|	СписаниеЗапасовЗапасы.КлючСвязи КАК КлючСвязи,
	|	СписаниеЗапасовСерииНоменклатуры.Количество КАК Количество
	|ИЗ
	|	Документ.СписаниеЗапасов.Запасы КАК СписаниеЗапасовЗапасы
	|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.СписаниеЗапасов.СерииНоменклатуры КАК СписаниеЗапасовСерииНоменклатуры
	|		ПО СписаниеЗапасовЗапасы.КлючСвязи = СписаниеЗапасовСерииНоменклатуры.КлючСвязи
	|ГДЕ
	|	СписаниеЗапасовЗапасы.Ссылка = &ДокументОснование
	|	И СписаниеЗапасовСерииНоменклатуры.Ссылка = &ДокументОснование
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	СерииНоменклатурыКРасходуОстатки.Серия КАК Серия,
	|	СерииНоменклатурыКРасходуОстатки.КоличествоОстаток КАК Количество,
	|	СерииНоменклатурыКРасходуОстатки.Номенклатура КАК Номенклатура,
	|	СерииНоменклатурыКРасходуОстатки.Характеристика КАК Характеристика,
	|	СерииНоменклатурыКРасходуОстатки.Партия КАК Партия
	|ПОМЕСТИТЬ ОстаткиСерииИтог
	|ИЗ
	|	РегистрНакопления.СерииНоменклатурыКРасходу.Остатки(
	|			,
	|			Организация = &Организация
	|				И СтруктурнаяЕдиница = &СтруктурнаяЕдиница
	|				И ДокументОснование = &ДокументОснование) КАК СерииНоменклатурыКРасходуОстатки
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	СерииНоменклатурыКРасходу.Серия,
	|	СерииНоменклатурыКРасходу.Количество,
	|	СерииНоменклатурыКРасходу.Номенклатура,
	|	СерииНоменклатурыКРасходу.Характеристика,
	|	СерииНоменклатурыКРасходу.Партия
	|ИЗ
	|	РегистрНакопления.СерииНоменклатурыКРасходу КАК СерииНоменклатурыКРасходу
	|ГДЕ
	|	СерииНоменклатурыКРасходу.ДокументОснование = &ДокументОснование
	|	И СерииНоменклатурыКРасходу.Регистратор = &Ссылка
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ОстаткиСерииИтог.Серия КАК Серия,
	|	СУММА(ОстаткиСерииИтог.Количество) КАК Количество,
	|	ОстаткиСерииИтог.Номенклатура КАК Номенклатура,
	|	ОстаткиСерииИтог.Характеристика КАК Характеристика,
	|	ОстаткиСерииИтог.Партия КАК Партия
	|ИЗ
	|	ОстаткиСерииИтог КАК ОстаткиСерииИтог
	|
	|СГРУППИРОВАТЬ ПО
	|	ОстаткиСерииИтог.Партия,
	|	ОстаткиСерииИтог.Характеристика,
	|	ОстаткиСерииИтог.Номенклатура,
	|	ОстаткиСерииИтог.Серия");
	
	Запрос.УстановитьПараметр("Ссылка", Ссылка);
	Запрос.УстановитьПараметр("Организация", Константы.УчетПоКомпании.Компания(Организация));
	Запрос.УстановитьПараметр("СтруктурнаяЕдиница", СтруктурнаяЕдиница);
	
	КонтролироватьОстаткиПоДокументам = ВидУчета = Перечисления.ВидыУчетаОрдерныхСкладов.УчетОстатковПоПрочимДокументам;
	
	Запрос.УстановитьПараметр("КонтролироватьОстаткиПоДокументам", КонтролироватьОстаткиПоДокументам);
	Запрос.УстановитьПараметр("ДокументОснование", ?(КонтролироватьОстаткиПоДокументам, ДокументСсылка, Неопределено));
	
	ДокументПоступления = ?(КонтролироватьОстаткиПоДокументам, ДокументСсылка, Неопределено);
	
	РезультатыЗапроса = Запрос.ВыполнитьПакет();
	
	ЗаполнитьТабличнуюЧастьПоОстаткамСУчетомСерий(РезультатыЗапроса, СтруктурнаяЕдиница);
КонецПроцедуры // ЗаполнитьПоСписаниеЗапасов()

// Обработчик заполнения на основании документа СписаниеЗапасов.
//
// Параметры:
//  ДокументСсылкаСписаниеЗапасов	 - ДокументСсылка.СписаниеЗапасов.
//
Процедура ЗаполнитьПоПересортицаЗапасов(ДокументСсылкаПересортицаЗапасов) Экспорт 
	
	// Заполнение шапки.
	ДокументОснование = ДокументСсылкаПересортицаЗапасов;
	ДокументСсылка = ДокументСсылкаПересортицаЗапасов;
	ЗначенияРеквизитов = ОбщегоНазначения.ЗначенияРеквизитовОбъекта(ДокументСсылка,
		"Организация, СтруктурнаяЕдиница, Ячейка");
	
	ПроверитьВозможностьВводаНаОсновании(ДокументСсылка, ЗначенияРеквизитов);
	
	ЗаполнитьЗначенияСвойств(ЭтотОбъект, ЗначенияРеквизитов);
	
	ВидУчета = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(СтруктурнаяЕдиница, "ВидУчетаОрдерныхСкладов");
	
	Запасы.Очистить();
	СерииНоменклатуры.Очистить();
	
	ПоложениеЯчейки = Перечисления.ПоложениеРеквизитаНаФорме.ВШапке;
	
	Если ВидУчета = Перечисления.ВидыУчетаОрдерныхСкладов.ПоСкладуВЦелом Тогда
		ЗаполнитьПоПересортицаЗапасовВидУчетаНеИспользуется(ДокументСсылкаПересортицаЗапасов);
		Возврат;
	КонецЕсли;
	
	// Заполнение табличной части.
	Запрос = Новый Запрос(
	"ВЫБРАТЬ
	|	ПересортицаЗапасовЗапасы.Номенклатура КАК Номенклатура,
	|	ПересортицаЗапасовЗапасы.ЕдиницаИзмерения КАК ЕдиницаИзмерения,
	|	ПересортицаЗапасовЗапасы.Характеристика КАК Характеристика,
	|	ПересортицаЗапасовЗапасы.СерииНоменклатуры КАК СерииНоменклатуры,
	|	ПересортицаЗапасовЗапасы.КлючСвязи КАК КлючСвязи,
	|	ПересортицаЗапасовЗапасы.Партия КАК Партия,
	|	ПересортицаЗапасовЗапасы.Количество КАК Количество,
	|	ПересортицаЗапасовЗапасы.Ссылка.СтруктурнаяЕдиница КАК СтруктурнаяЕдиница,
	|	ПересортицаЗапасовЗапасы.Ссылка.Ячейка КАК Ячейка,
	|	ВЫБОР
	|		КОГДА &КонтролироватьОстаткиПоДокументам
	|			ТОГДА &ДокументОснование
	|		ИНАЧЕ НЕОПРЕДЕЛЕНО
	|	КОНЕЦ КАК ДокументПоступления
	|ИЗ
	|	Документ.ПересортицаЗапасов.Запасы КАК ПересортицаЗапасовЗапасы
	|ГДЕ
	|	ПересортицаЗапасовЗапасы.Ссылка = &ДокументОснование
	|	И ПересортицаЗапасовЗапасы.Номенклатура.ТипНоменклатуры В (ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.Запас), ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.ПодарочныйСертификат))
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ЗапасыКРасходуСоСкладовОстатки.Номенклатура КАК Номенклатура,
	|	ЗапасыКРасходуСоСкладовОстатки.Характеристика КАК Характеристика,
	|	ЗапасыКРасходуСоСкладовОстатки.Партия КАК Партия,
	|	ВЫБОР
	|		КОГДА ЗапасыКРасходуСоСкладовОстатки.КоличествоОстаток < 0
	|			ТОГДА -ЗапасыКРасходуСоСкладовОстатки.КоличествоОстаток
	|		ИНАЧЕ ЗапасыКРасходуСоСкладовОстатки.КоличествоОстаток
	|	КОНЕЦ КАК Количество,
	|	ВЫБОР
	|		КОГДА &КонтролироватьОстаткиПоДокументам
	|			ТОГДА &ДокументОснование
	|		ИНАЧЕ НЕОПРЕДЕЛЕНО
	|	КОНЕЦ КАК ДокументПоступления,
	|	ЗапасыКРасходуСоСкладовОстатки.Ячейка КАК Ячейка
	|ПОМЕСТИТЬ ЗапасыОстаткиИтог
	|ИЗ
	|	РегистрНакопления.ЗапасыКРасходуСоСкладов.Остатки(
	|			,
	|			Организация = &Организация
	|				И СтруктурнаяЕдиница = &СтруктурнаяЕдиница
	|				И ДокументОснование = &ДокументОснование) КАК ЗапасыКРасходуСоСкладовОстатки
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ЗапасыКРасходуСоСкладов.Номенклатура,
	|	ЗапасыКРасходуСоСкладов.Характеристика,
	|	ЗапасыКРасходуСоСкладов.Партия,
	|	ВЫБОР
	|		КОГДА ЗапасыКРасходуСоСкладов.Количество < 0
	|			ТОГДА -ЗапасыКРасходуСоСкладов.Количество
	|		ИНАЧЕ ЗапасыКРасходуСоСкладов.Количество
	|	КОНЕЦ,
	|	ВЫБОР
	|		КОГДА &КонтролироватьОстаткиПоДокументам
	|			ТОГДА &ДокументОснование
	|		ИНАЧЕ НЕОПРЕДЕЛЕНО
	|	КОНЕЦ,
	|	ЗапасыКРасходуСоСкладов.Ячейка
	|ИЗ
	|	РегистрНакопления.ЗапасыКРасходуСоСкладов КАК ЗапасыКРасходуСоСкладов
	|ГДЕ
	|	ЗапасыКРасходуСоСкладов.ДокументОснование = &ДокументОснование
	|	И ЗапасыКРасходуСоСкладов.Регистратор = &Ссылка
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ЗапасыОстаткиИтог.Номенклатура КАК Номенклатура,
	|	ЗапасыОстаткиИтог.Характеристика КАК Характеристика,
	|	ЗапасыОстаткиИтог.Партия КАК Партия,
	|	СУММА(ЗапасыОстаткиИтог.Количество) КАК Количество,
	|	ЗапасыОстаткиИтог.ДокументПоступления КАК ДокументПоступления,
	|	ЗапасыОстаткиИтог.Ячейка КАК Ячейка
	|ИЗ
	|	ЗапасыОстаткиИтог КАК ЗапасыОстаткиИтог
	|
	|СГРУППИРОВАТЬ ПО
	|	ЗапасыОстаткиИтог.Номенклатура,
	|	ЗапасыОстаткиИтог.Ячейка,
	|	ЗапасыОстаткиИтог.Характеристика,
	|	ЗапасыОстаткиИтог.Партия,
	|	ЗапасыОстаткиИтог.ДокументПоступления
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ПересортицаЗапасовЗапасы.Номенклатура КАК Номенклатура,
	|	ПересортицаЗапасовЗапасы.Характеристика КАК Характеристика,
	|	ПересортицаЗапасовЗапасы.Партия КАК Партия,
	|	ПересортицаЗапасовСерииНоменклатуры.Серия КАК Серия,
	|	ПересортицаЗапасовЗапасы.КлючСвязи КАК КлючСвязи,
	|	ПересортицаЗапасовСерииНоменклатуры.Количество КАК Количество
	|ИЗ
	|	Документ.ПересортицаЗапасов.Запасы КАК ПересортицаЗапасовЗапасы
	|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.ПересортицаЗапасов.СерииНоменклатуры КАК ПересортицаЗапасовСерииНоменклатуры
	|		ПО ПересортицаЗапасовЗапасы.КлючСвязи = ПересортицаЗапасовСерииНоменклатуры.КлючСвязи
	|ГДЕ
	|	ПересортицаЗапасовЗапасы.Ссылка = &ДокументОснование
	|	И ПересортицаЗапасовСерииНоменклатуры.Ссылка = &ДокументОснование
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	СерииНоменклатурыКРасходуОстатки.Серия КАК Серия,
	|	СерииНоменклатурыКРасходуОстатки.КоличествоОстаток КАК Количество,
	|	СерииНоменклатурыКРасходуОстатки.Номенклатура КАК Номенклатура,
	|	СерииНоменклатурыКРасходуОстатки.Характеристика КАК Характеристика,
	|	СерииНоменклатурыКРасходуОстатки.Партия КАК Партия
	|ПОМЕСТИТЬ ОстаткиСерииИтог
	|ИЗ
	|	РегистрНакопления.СерииНоменклатурыКРасходу.Остатки(
	|			,
	|			Организация = &Организация
	|				И СтруктурнаяЕдиница = &СтруктурнаяЕдиница
	|				И ДокументОснование = &ДокументОснование) КАК СерииНоменклатурыКРасходуОстатки
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	СерииНоменклатурыКРасходу.Серия,
	|	СерииНоменклатурыКРасходу.Количество,
	|	СерииНоменклатурыКРасходу.Номенклатура,
	|	СерииНоменклатурыКРасходу.Характеристика,
	|	СерииНоменклатурыКРасходу.Партия
	|ИЗ
	|	РегистрНакопления.СерииНоменклатурыКРасходу КАК СерииНоменклатурыКРасходу
	|ГДЕ
	|	СерииНоменклатурыКРасходу.ДокументОснование = &ДокументОснование
	|	И СерииНоменклатурыКРасходу.Регистратор = &Ссылка
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ОстаткиСерииИтог.Серия КАК Серия,
	|	СУММА(ОстаткиСерииИтог.Количество) КАК Количество,
	|	ОстаткиСерииИтог.Номенклатура КАК Номенклатура,
	|	ОстаткиСерииИтог.Характеристика КАК Характеристика,
	|	ОстаткиСерииИтог.Партия КАК Партия
	|ИЗ
	|	ОстаткиСерииИтог КАК ОстаткиСерииИтог
	|
	|СГРУППИРОВАТЬ ПО
	|	ОстаткиСерииИтог.Партия,
	|	ОстаткиСерииИтог.Характеристика,
	|	ОстаткиСерииИтог.Номенклатура,
	|	ОстаткиСерииИтог.Серия");
	
	Запрос.УстановитьПараметр("Ссылка", Ссылка);
	Запрос.УстановитьПараметр("Организация", Константы.УчетПоКомпании.Компания(Организация));
	Запрос.УстановитьПараметр("СтруктурнаяЕдиница", СтруктурнаяЕдиница);
	
	КонтролироватьОстаткиПоДокументам = ВидУчета = Перечисления.ВидыУчетаОрдерныхСкладов.УчетОстатковПоПрочимДокументам;
	
	Запрос.УстановитьПараметр("КонтролироватьОстаткиПоДокументам", КонтролироватьОстаткиПоДокументам);
	Запрос.УстановитьПараметр("ДокументОснование", ?(КонтролироватьОстаткиПоДокументам, ДокументСсылка, Неопределено));
	
	ДокументПоступления = ?(КонтролироватьОстаткиПоДокументам, ДокументСсылка, Неопределено);
	
	РезультатыЗапроса = Запрос.ВыполнитьПакет();
	
	ЗаполнитьТабличнуюЧастьПоОстаткамСУчетомСерий(РезультатыЗапроса, СтруктурнаяЕдиница);
	
КонецПроцедуры // ЗаполнитьПоПересортицаЗапасов()

// Обработчик заполнения на основании документа ПеремещениеЗапасов.
//
// Параметры:
//  ДокументСсылкаПеремещениеЗапасов - ДокументСсылка.ПеремещениеЗапасов.
//
Процедура ЗаполнитьПоПеремещениеЗапасов(ДокументСсылкаПеремещениеЗапасов) Экспорт 
	
	// Заполнение шапки.
	ДокументОснование = ДокументСсылкаПеремещениеЗапасов;
	ДокументСсылка = ДокументСсылкаПеремещениеЗапасов;
	ЗначенияРеквизитов = ОбщегоНазначения.ЗначенияРеквизитовОбъекта(ДокументСсылка,
		"Организация, СтруктурнаяЕдиница, Ячейка, ПоложениеЯчейкиОтправителя");
	
	ПроверитьВозможностьВводаНаОсновании(ДокументСсылка, ЗначенияРеквизитов);
	
	ЗаполнитьЗначенияСвойств(ЭтотОбъект, ЗначенияРеквизитов);
	СтруктурнаяЕдиница = ЗначенияРеквизитов.СтруктурнаяЕдиница;
	
	ВидУчета = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(СтруктурнаяЕдиница, "ВидУчетаОрдерныхСкладов");
	
	Запасы.Очистить();
	СерииНоменклатуры.Очистить();
	
	ПоложениеЯчейки = ЗначенияРеквизитов.ПоложениеЯчейкиОтправителя;
	
	Если ВидУчета = Перечисления.ВидыУчетаОрдерныхСкладов.ПоСкладуВЦелом Тогда
		ЗаполнитьПоПеремещениеЗапасовВидУчетаНеИспользуется(ДокументСсылкаПеремещениеЗапасов);
		Возврат;
	КонецЕсли;
	
	// Заполнение табличной части.
	Запрос = Новый Запрос(
	"ВЫБРАТЬ
	|	ПеремещениеЗапасовЗапасы.Номенклатура КАК Номенклатура,
	|	ПеремещениеЗапасовЗапасы.ЕдиницаИзмерения КАК ЕдиницаИзмерения,
	|	ПеремещениеЗапасовЗапасы.Характеристика КАК Характеристика,
	|	ПеремещениеЗапасовЗапасы.СерииНоменклатуры КАК СерииНоменклатуры,
	|	ПеремещениеЗапасовЗапасы.КлючСвязи КАК КлючСвязи,
	|	ПеремещениеЗапасовЗапасы.Партия КАК Партия,
	|	ПеремещениеЗапасовЗапасы.Количество КАК Количество,
	|	ПеремещениеЗапасовЗапасы.Ссылка.СтруктурнаяЕдиница КАК СтруктурнаяЕдиница,
	|	ПеремещениеЗапасовЗапасы.ЯчейкаПолучатель КАК Ячейка,
	|	ВЫБОР
	|		КОГДА &КонтролироватьОстаткиПоДокументам
	|			ТОГДА &ДокументОснование
	|		ИНАЧЕ НЕОПРЕДЕЛЕНО
	|	КОНЕЦ КАК ДокументПоступления
	|ИЗ
	|	Документ.ПеремещениеЗапасов.Запасы КАК ПеремещениеЗапасовЗапасы
	|ГДЕ
	|	ПеремещениеЗапасовЗапасы.Ссылка = &ДокументОснование
	|	И ПеремещениеЗапасовЗапасы.Номенклатура.ТипНоменклатуры В (ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.Запас), ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.ПодарочныйСертификат))
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ЗапасыКРасходуСоСкладовОстатки.Номенклатура КАК Номенклатура,
	|	ЗапасыКРасходуСоСкладовОстатки.Характеристика КАК Характеристика,
	|	ЗапасыКРасходуСоСкладовОстатки.Партия КАК Партия,
	|	ВЫБОР
	|		КОГДА ЗапасыКРасходуСоСкладовОстатки.КоличествоОстаток < 0
	|			ТОГДА -ЗапасыКРасходуСоСкладовОстатки.КоличествоОстаток
	|		ИНАЧЕ ЗапасыКРасходуСоСкладовОстатки.КоличествоОстаток
	|	КОНЕЦ КАК Количество,
	|	ВЫБОР
	|		КОГДА &КонтролироватьОстаткиПоДокументам
	|			ТОГДА &ДокументОснование
	|		ИНАЧЕ НЕОПРЕДЕЛЕНО
	|	КОНЕЦ КАК ДокументПоступления,
	|	ЗапасыКРасходуСоСкладовОстатки.Ячейка КАК Ячейка
	|ПОМЕСТИТЬ ЗапасыОстаткиИтог
	|ИЗ
	|	РегистрНакопления.ЗапасыКРасходуСоСкладов.Остатки(
	|			,
	|			Организация = &Организация
	|				И СтруктурнаяЕдиница = &СтруктурнаяЕдиница
	|				И ДокументОснование = &ДокументОснование) КАК ЗапасыКРасходуСоСкладовОстатки
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ЗапасыКРасходуСоСкладов.Номенклатура,
	|	ЗапасыКРасходуСоСкладов.Характеристика,
	|	ЗапасыКРасходуСоСкладов.Партия,
	|	ВЫБОР
	|		КОГДА ЗапасыКРасходуСоСкладов.Количество < 0
	|			ТОГДА -ЗапасыКРасходуСоСкладов.Количество
	|		ИНАЧЕ ЗапасыКРасходуСоСкладов.Количество
	|	КОНЕЦ,
	|	ВЫБОР
	|		КОГДА &КонтролироватьОстаткиПоДокументам
	|			ТОГДА &ДокументОснование
	|		ИНАЧЕ НЕОПРЕДЕЛЕНО
	|	КОНЕЦ,
	|	ЗапасыКРасходуСоСкладов.Ячейка
	|ИЗ
	|	РегистрНакопления.ЗапасыКРасходуСоСкладов КАК ЗапасыКРасходуСоСкладов
	|ГДЕ
	|	ЗапасыКРасходуСоСкладов.ДокументОснование = &ДокументОснование
	|	И ЗапасыКРасходуСоСкладов.Регистратор = &Ссылка
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ЗапасыОстаткиИтог.Номенклатура КАК Номенклатура,
	|	ЗапасыОстаткиИтог.Характеристика КАК Характеристика,
	|	ЗапасыОстаткиИтог.Партия КАК Партия,
	|	СУММА(ЗапасыОстаткиИтог.Количество) КАК Количество,
	|	ЗапасыОстаткиИтог.ДокументПоступления КАК ДокументПоступления,
	|	ЗапасыОстаткиИтог.Ячейка КАК Ячейка
	|ИЗ
	|	ЗапасыОстаткиИтог КАК ЗапасыОстаткиИтог
	|
	|СГРУППИРОВАТЬ ПО
	|	ЗапасыОстаткиИтог.Номенклатура,
	|	ЗапасыОстаткиИтог.Ячейка,
	|	ЗапасыОстаткиИтог.Характеристика,
	|	ЗапасыОстаткиИтог.Партия,
	|	ЗапасыОстаткиИтог.ДокументПоступления
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ПеремещениеЗапасовЗапасы.Номенклатура КАК Номенклатура,
	|	ПеремещениеЗапасовЗапасы.Характеристика КАК Характеристика,
	|	ПеремещениеЗапасовЗапасы.Партия КАК Партия,
	|	ПеремещениеЗапасовСерииНоменклатуры.Серия КАК Серия,
	|	ПеремещениеЗапасовЗапасы.КлючСвязи КАК КлючСвязи,
	|	ПеремещениеЗапасовСерииНоменклатуры.Количество КАК Количество
	|ИЗ
	|	Документ.ПеремещениеЗапасов.Запасы КАК ПеремещениеЗапасовЗапасы
	|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.ПеремещениеЗапасов.СерииНоменклатуры КАК ПеремещениеЗапасовСерииНоменклатуры
	|		ПО ПеремещениеЗапасовЗапасы.КлючСвязи = ПеремещениеЗапасовСерииНоменклатуры.КлючСвязи
	|ГДЕ
	|	ПеремещениеЗапасовЗапасы.Ссылка = &ДокументОснование
	|	И ПеремещениеЗапасовСерииНоменклатуры.Ссылка = &ДокументОснование
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	СерииНоменклатурыКРасходуОстатки.Серия КАК Серия,
	|	СерииНоменклатурыКРасходуОстатки.КоличествоОстаток КАК Количество,
	|	СерииНоменклатурыКРасходуОстатки.Номенклатура КАК Номенклатура,
	|	СерииНоменклатурыКРасходуОстатки.Характеристика КАК Характеристика,
	|	СерииНоменклатурыКРасходуОстатки.Партия КАК Партия
	|ПОМЕСТИТЬ ОстаткиСерииИтог
	|ИЗ
	|	РегистрНакопления.СерииНоменклатурыКРасходу.Остатки(
	|			,
	|			Организация = &Организация
	|				И СтруктурнаяЕдиница = &СтруктурнаяЕдиница
	|				И ДокументОснование = &ДокументОснование) КАК СерииНоменклатурыКРасходуОстатки
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	СерииНоменклатурыКРасходу.Серия,
	|	СерииНоменклатурыКРасходу.Количество,
	|	СерииНоменклатурыКРасходу.Номенклатура,
	|	СерииНоменклатурыКРасходу.Характеристика,
	|	СерииНоменклатурыКРасходу.Партия
	|ИЗ
	|	РегистрНакопления.СерииНоменклатурыКРасходу КАК СерииНоменклатурыКРасходу
	|ГДЕ
	|	СерииНоменклатурыКРасходу.ДокументОснование = &ДокументОснование
	|	И СерииНоменклатурыКРасходу.Регистратор = &Ссылка
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ОстаткиСерииИтог.Серия КАК Серия,
	|	СУММА(ОстаткиСерииИтог.Количество) КАК Количество,
	|	ОстаткиСерииИтог.Номенклатура КАК Номенклатура,
	|	ОстаткиСерииИтог.Характеристика КАК Характеристика,
	|	ОстаткиСерииИтог.Партия КАК Партия
	|ИЗ
	|	ОстаткиСерииИтог КАК ОстаткиСерииИтог
	|
	|СГРУППИРОВАТЬ ПО
	|	ОстаткиСерииИтог.Партия,
	|	ОстаткиСерииИтог.Характеристика,
	|	ОстаткиСерииИтог.Номенклатура,
	|	ОстаткиСерииИтог.Серия");
	
	Запрос.УстановитьПараметр("Ссылка", Ссылка);
	Запрос.УстановитьПараметр("Организация", Константы.УчетПоКомпании.Компания(Организация));
	Запрос.УстановитьПараметр("СтруктурнаяЕдиница", СтруктурнаяЕдиница);
	
	КонтролироватьОстаткиПоДокументам = ВидУчета = Перечисления.ВидыУчетаОрдерныхСкладов.УчетОстатковПоПрочимДокументам;
	
	Запрос.УстановитьПараметр("КонтролироватьОстаткиПоДокументам", КонтролироватьОстаткиПоДокументам);
	Запрос.УстановитьПараметр("ДокументОснование", ?(КонтролироватьОстаткиПоДокументам, ДокументСсылка, Неопределено));
	
	ДокументПоступления = ?(КонтролироватьОстаткиПоДокументам, ДокументСсылка, Неопределено);
	
	РезультатыЗапроса = Запрос.ВыполнитьПакет();
	
	ЗаполнитьТабличнуюЧастьПоОстаткамСУчетомСерий(РезультатыЗапроса, СтруктурнаяЕдиница);
	
КонецПроцедуры // ЗаполнитьПоПеремещениеЗапасов()

// Обработчик заполнения на основании документа ПриходныйОрдер.
//
// Параметры:
//  ДокументСсылкаПриходныйОрдер - ДокументСсылка.ПриходныйОрдер.
//
Процедура ЗаполнитьПоПриходныйОрдер(ДокументСсылкаПриходныйОрдер) Экспорт 
	
	// Заполнение шапки.
	ДокументОснование = ДокументСсылкаПриходныйОрдер;
	ЗначенияРеквизитов = ОбщегоНазначения.ЗначенияРеквизитовОбъекта(ДокументСсылкаПриходныйОрдер,
		"Организация, СтруктурнаяЕдиница, Ячейка, ПоложениеЯчейки");
	
	ПроверитьВозможностьВводаНаОсновании(ДокументСсылкаПриходныйОрдер, ЗначенияРеквизитов);
	
	ЗаполнитьЗначенияСвойств(ЭтотОбъект, ЗначенияРеквизитов);
	
	// Заполнение табличной части.
	Запрос = Новый Запрос;
	Запрос.Текст =
	"ВЫБРАТЬ
	|	МИНИМУМ(ПриходныйОрдерЗапасы.НомерСтроки) КАК НомерСтроки,
	|	ПриходныйОрдерЗапасы.Номенклатура КАК Номенклатура,
	|	ПриходныйОрдерЗапасы.Характеристика КАК Характеристика,
	|	ПриходныйОрдерЗапасы.Партия КАК Партия,
	|	ПриходныйОрдерЗапасы.ЕдиницаИзмерения КАК ЕдиницаИзмерения,
	|	СУММА(ПриходныйОрдерЗапасы.Количество) КАК Количество,
	|	ПриходныйОрдерЗапасы.СерииНоменклатуры КАК СерииНоменклатуры,
	|	ПриходныйОрдерЗапасы.КлючСвязи КАК КлючСвязи,
	|	ПриходныйОрдерЗапасы.Ячейка КАК Ячейка
	|ИЗ
	|	Документ.ПриходныйОрдер.Запасы КАК ПриходныйОрдерЗапасы
	|ГДЕ
	|	ПриходныйОрдерЗапасы.Ссылка = &ДокументОснование
	|
	|СГРУППИРОВАТЬ ПО
	|	ПриходныйОрдерЗапасы.Номенклатура,
	|	ПриходныйОрдерЗапасы.Характеристика,
	|	ПриходныйОрдерЗапасы.Партия,
	|	ПриходныйОрдерЗапасы.ЕдиницаИзмерения,
	|	ПриходныйОрдерЗапасы.СерииНоменклатуры,
	|	ПриходныйОрдерЗапасы.КлючСвязи,
	|	ПриходныйОрдерЗапасы.Ячейка
	|
	|УПОРЯДОЧИТЬ ПО
	|	НомерСтроки";
	
	Запрос.УстановитьПараметр("ДокументОснование", ДокументСсылкаПриходныйОрдер);
	
	Запасы.Очистить();
	РезультатЗапроса = Запрос.Выполнить();
	Если НЕ РезультатЗапроса.Пустой() Тогда
		Выборка = РезультатЗапроса.Выбрать();
		Пока Выборка.Следующий() Цикл
			НоваяСтрока = Запасы.Добавить();
			ЗаполнитьЗначенияСвойств(НоваяСтрока, Выборка);
		КонецЦикла;
	КонецЕсли;
	
	СерииНоменклатурыУНФ.ЗаполнитьТЧСерииНоменклатурыПоКлючуСвязи(ЭтотОбъект, ДокументСсылкаПриходныйОрдер);
	
КонецПроцедуры // ЗаполнитьПоПриходныйОрдер()

// Обработчик заполнения на основании документа ПринятиеКУчетуВА.
//
// Параметры:
//  ДокументСсылкаПринятиеКУчетуВА	 - ДокументСсылка.ПринятиеКУчетуВА.
//
Процедура ЗаполнитьПоПринятиеКУчетуВА(ДокументСсылкаПринятиеКУчетуВА) Экспорт 
	
	// Заполнение шапки.
	ДокументОснование = ДокументСсылкаПринятиеКУчетуВА;
	ДокументПоступления = ДокументСсылкаПринятиеКУчетуВА;
	ЗначенияРеквизитов = ОбщегоНазначения.ЗначенияРеквизитовОбъекта(ДокументСсылкаПринятиеКУчетуВА,
		"Организация, СтруктурнаяЕдиница, Ячейка");
	
	ПроверитьВозможностьВводаНаОсновании(ДокументСсылкаПринятиеКУчетуВА, ЗначенияРеквизитов);
	
	ЗаполнитьЗначенияСвойств(ЭтотОбъект, ЗначенияРеквизитов);
	
	// Заполнение табличной части.
	Запрос = Новый Запрос;
	Запрос.Текст =
	"ВЫБРАТЬ
	|	ПринятиеКУчетуВА.Номенклатура КАК Номенклатура,
	|	ПринятиеКУчетуВА.Партия КАК Партия,
	|	ПринятиеКУчетуВА.ЕдиницаИзмерения КАК ЕдиницаИзмерения,
	|	ПринятиеКУчетуВА.Количество КАК Количество
	|ИЗ
	|	Документ.ПринятиеКУчетуВА КАК ПринятиеКУчетуВА
	|ГДЕ
	|	ПринятиеКУчетуВА.Ссылка = &ДокументОснование";
	
	Запрос.УстановитьПараметр("ДокументОснование", ДокументСсылкаПринятиеКУчетуВА);
	
	Запасы.Очистить();
	РезультатЗапроса = Запрос.Выполнить();
	Если НЕ РезультатЗапроса.Пустой() Тогда
		Выборка = РезультатЗапроса.Выбрать();
		Пока Выборка.Следующий() Цикл
			НоваяСтрока = Запасы.Добавить();
			ЗаполнитьЗначенияСвойств(НоваяСтрока, Выборка);
		КонецЦикла;
	КонецЕсли;
	
	ВидУчета = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(СтруктурнаяЕдиница, "ВидУчетаОрдерныхСкладов");
	КонтролироватьОстаткиПоДокументам = ВидУчета = Перечисления.ВидыУчетаОрдерныхСкладов.УчетОстатковПоПрочимДокументам;
	ДокументПоступления = ?(КонтролироватьОстаткиПоДокументам, ДокументСсылкаПринятиеКУчетуВА, Неопределено);
	
КонецПроцедуры // ЗаполнитьПоПринятиеКУчетуВА()

// Обработчик заполнения на основании документа СборкаЗапасов.
//
// Параметры:
//  ДокументСсылкаСборкаЗапасов	 - ДокументСсылка.СборкаЗапасов.
//
Процедура ЗаполнитьПоСборкаЗапасов(ДокументСсылкаСборкаЗапасов) Экспорт 
	
	ИменаРеквизитов = Новый Массив;
	ИменаРеквизитов.Добавить("Организация");
	ИменаРеквизитов.Добавить("ВидОперации");
	ИменаРеквизитов.Добавить("СтруктурнаяЕдиница");
	ИменаРеквизитов.Добавить("Ячейка");
	ИменаРеквизитов.Добавить("СтруктурнаяЕдиницаПродукции");
	ИменаРеквизитов.Добавить("СтруктурнаяЕдиницаЗапасов");
	ИменаРеквизитов.Добавить("ЯчейкаПродукции");
	ИменаРеквизитов.Добавить("СтруктурнаяЕдиницаОтходов");
	ИменаРеквизитов.Добавить("ЯчейкаОтходов");
	ИменаРеквизитов.Добавить("ПоложениеСклада");
	ИменаРеквизитов.Добавить("ЯчейкаЗапасов");
	ЗначенияРеквизитов = ОбщегоНазначения.ЗначенияРеквизитовОбъекта(ДокументСсылкаСборкаЗапасов, ИменаРеквизитов);
	
	Если ЗначенияРеквизитов.СтруктурнаяЕдиница.ОрдерныйСклад Тогда
		
		Если ЗначенияРеквизитов.ВидОперации = Перечисления.ВидыОперацийСборкаЗапасов.Разборка Тогда
			ИмяТЧ = "Продукция";
		Иначе
			ИмяТЧ = "Запасы";
		КонецЕсли;
		
		СтруктурнаяЕдиница = ЗначенияРеквизитов.СтруктурнаяЕдиница;
		Ячейка = ЗначенияРеквизитов.Ячейка;
		
	Иначе
		
		Если ЗначенияРеквизитов.СтруктурнаяЕдиницаЗапасов.ОрдерныйСклад Тогда
			
			Если ЗначенияРеквизитов.ВидОперации = Перечисления.ВидыОперацийСборкаЗапасов.Разборка Тогда
				ИмяТЧ = "Продукция";
			Иначе
				ИмяТЧ = "Запасы";
			КонецЕсли;
			
			СтруктурнаяЕдиница = ЗначенияРеквизитов.СтруктурнаяЕдиницаЗапасов;
			Ячейка = ЗначенияРеквизитов.ЯчейкаЗапасов;
			
		КонецЕсли;
		
	КонецЕсли;
	
	ВидУчета = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(СтруктурнаяЕдиница, "ВидУчетаОрдерныхСкладов");
	Если ВидУчета = Перечисления.ВидыУчетаОрдерныхСкладов.ПоСкладуВЦелом Тогда
		ЗаполнитьПоСборкаЗапасовВидУчетаНеИспользуется(ДокументСсылкаСборкаЗапасов);
		Возврат;
	КонецЕсли;
	
	МассивТЧОрдер = Новый Массив;
	
	ЗаполнитьШапкуПоСборкаЗапасов(ДокументСсылкаСборкаЗапасов, ЗначенияРеквизитов, МассивТЧОрдер);
	
	ЗаполнитьТабличнуюЧастьПоСборкаЗапасов(ДокументСсылкаСборкаЗапасов, ЗначенияРеквизитов, МассивТЧОрдер);
	
КонецПроцедуры // ЗаполнитьПоСборкаЗапасов()

// Обработчик заполнения на основании документа КомплектацияЗапасов.
//
// Параметры:
//  ДокументСсылкаКомплектацияЗапасов	 - ДокументСсылка.КомплектацияЗапасов.
//
Процедура ЗаполнитьПоКомплектацияЗапасов(ДокументСсылкаКомплектацияЗапасов) Экспорт 
	
		// Заполнение шапки.
	ЗначенияРеквизитов = ОбщегоНазначения.ЗначенияРеквизитовОбъекта(ДокументСсылкаКомплектацияЗапасов,
			"Организация, ВидОперации, СтруктурнаяЕдиница, СтруктурнаяЕдиница.ОрдерныйСклад, СтруктурнаяЕдиница.ИспользоватьОрдернуюСхемуПриПоступлении, Ячейка");
		
	Если НЕ ЗначенияРеквизитов.СтруктурнаяЕдиницаОрдерныйСклад И НЕ ЗначенияРеквизитов.СтруктурнаяЕдиницаИспользоватьОрдернуюСхемуПриПоступлении Тогда
		ТекстИсключения = НСтр("ru = 'Невозможен ввод операции ""Отгрузка с ордерного склада"".
                                |Документ ""%1"" не имеет ордерного склада.'");
		ТекстИсключения = СтрШаблон(ТекстИсключения, ДокументСсылкаКомплектацияЗапасов);
		ВызватьИсключение ТекстИсключения;
	КонецЕсли;
	
	ДокументОснование = ДокументСсылкаКомплектацияЗапасов;
	ДокументСсылка = ДокументСсылкаКомплектацияЗапасов;
	Организация = ЗначенияРеквизитов.Организация;
	СтруктурнаяЕдиница = ЗначенияРеквизитов.СтруктурнаяЕдиница;
	Ячейка = ЗначенияРеквизитов.Ячейка;
	
	ВидУчета = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(СтруктурнаяЕдиница, "ВидУчетаОрдерныхСкладов");
	
	ПоложениеЯчейки = Перечисления.ПоложениеРеквизитаНаФорме.ВШапке;
	Запасы.Очистить();
	СерииНоменклатуры.Очистить();
	
	Если ВидУчета = Перечисления.ВидыУчетаОрдерныхСкладов.ПоСкладуВЦелом Тогда
		ЗаполнитьПоКомплектацияЗапасовВидУчетаНеИспользуется(ДокументСсылкаКомплектацияЗапасов);
		Возврат;
	КонецЕсли;
		
		// Заполнение табличной части.
		Запрос = Новый Запрос(
		"ВЫБРАТЬ
		|	КомплектацияЗапасовЗапасы.Номенклатура КАК Номенклатура,
		|	КомплектацияЗапасовЗапасы.ЕдиницаИзмерения КАК ЕдиницаИзмерения,
		|	КомплектацияЗапасовЗапасы.Характеристика КАК Характеристика,
		|	КомплектацияЗапасовЗапасы.СерииНоменклатуры КАК СерииНоменклатуры,
		|	КомплектацияЗапасовЗапасы.КлючСвязи КАК КлючСвязи,
		|	КомплектацияЗапасовЗапасы.Партия КАК Партия,
		|	КомплектацияЗапасовЗапасы.Количество КАК Количество,
		|	КомплектацияЗапасовЗапасы.Ссылка.СтруктурнаяЕдиница КАК СтруктурнаяЕдиница,
		|	КомплектацияЗапасовЗапасы.Ссылка.Ячейка КАК Ячейка,
		|	ВЫБОР
		|		КОГДА &КонтролироватьОстаткиПоДокументам
		|			ТОГДА &ДокументОснование
		|		ИНАЧЕ НЕОПРЕДЕЛЕНО
		|	КОНЕЦ КАК ДокументПоступления
		|ИЗ
		|	Документ.КомплектацияЗапасов.Запасы КАК КомплектацияЗапасовЗапасы
		|ГДЕ
		|	КомплектацияЗапасовЗапасы.Ссылка = &ДокументОснование
		|	И КомплектацияЗапасовЗапасы.Номенклатура.ТипНоменклатуры В (ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.Запас), ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.ПодарочныйСертификат))
		|	И КомплектацияЗапасовЗапасы.Ссылка.ВидОперации = ЗНАЧЕНИЕ(Перечисление.ВидыОперацийКомплектацияЗапасов.Сборка)
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ
		|	КомплектацияЗапасов.Номенклатура,
		|	КомплектацияЗапасов.ЕдиницаИзмерения,
		|	КомплектацияЗапасов.Характеристика,
		|	НЕОПРЕДЕЛЕНО,
		|	1,
		|	КомплектацияЗапасов.Партия,
		|	КомплектацияЗапасов.Количество,
		|	КомплектацияЗапасов.СтруктурнаяЕдиница,
		|	КомплектацияЗапасов.Ячейка,
		|	ВЫБОР
		|		КОГДА &КонтролироватьОстаткиПоДокументам
		|			ТОГДА &ДокументОснование
		|		ИНАЧЕ НЕОПРЕДЕЛЕНО
		|	КОНЕЦ
		|ИЗ
		|	Документ.КомплектацияЗапасов КАК КомплектацияЗапасов
		|ГДЕ
		|	КомплектацияЗапасов.ВидОперации = ЗНАЧЕНИЕ(Перечисление.ВидыОперацийКомплектацияЗапасов.Разборка)
		|	И КомплектацияЗапасов.Ссылка = &ДокументОснование
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ЗапасыКРасходуСоСкладовОстатки.Номенклатура КАК Номенклатура,
		|	ЗапасыКРасходуСоСкладовОстатки.Характеристика КАК Характеристика,
		|	ЗапасыКРасходуСоСкладовОстатки.Партия КАК Партия,
		|	ВЫБОР
		|		КОГДА ЗапасыКРасходуСоСкладовОстатки.КоличествоОстаток < 0
		|			ТОГДА -ЗапасыКРасходуСоСкладовОстатки.КоличествоОстаток
		|		ИНАЧЕ ЗапасыКРасходуСоСкладовОстатки.КоличествоОстаток
		|	КОНЕЦ КАК Количество,
		|	ВЫБОР
		|		КОГДА &КонтролироватьОстаткиПоДокументам
		|			ТОГДА &ДокументОснование
		|		ИНАЧЕ НЕОПРЕДЕЛЕНО
		|	КОНЕЦ КАК ДокументПоступления,
		|	ЗапасыКРасходуСоСкладовОстатки.Ячейка КАК Ячейка
		|ПОМЕСТИТЬ ЗапасыОстаткиИтог
		|ИЗ
		|	РегистрНакопления.ЗапасыКРасходуСоСкладов.Остатки(
		|			,
		|			Организация = &Организация
		|				И СтруктурнаяЕдиница = &СтруктурнаяЕдиница
		|				И ДокументОснование = &ДокументОснование) КАК ЗапасыКРасходуСоСкладовОстатки
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ
		|	ЗапасыКРасходуСоСкладов.Номенклатура,
		|	ЗапасыКРасходуСоСкладов.Характеристика,
		|	ЗапасыКРасходуСоСкладов.Партия,
		|	ВЫБОР
		|		КОГДА ЗапасыКРасходуСоСкладов.Количество < 0
		|			ТОГДА -ЗапасыКРасходуСоСкладов.Количество
		|		ИНАЧЕ ЗапасыКРасходуСоСкладов.Количество
		|	КОНЕЦ,
		|	ВЫБОР
		|		КОГДА &КонтролироватьОстаткиПоДокументам
		|			ТОГДА &ДокументОснование
		|		ИНАЧЕ НЕОПРЕДЕЛЕНО
		|	КОНЕЦ,
		|	ЗапасыКРасходуСоСкладов.Ячейка
		|ИЗ
		|	РегистрНакопления.ЗапасыКРасходуСоСкладов КАК ЗапасыКРасходуСоСкладов
		|ГДЕ
		|	ЗапасыКРасходуСоСкладов.ДокументОснование = &ДокументОснование
		|	И ЗапасыКРасходуСоСкладов.Регистратор = &Ссылка
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ЗапасыОстаткиИтог.Номенклатура КАК Номенклатура,
		|	ЗапасыОстаткиИтог.Характеристика КАК Характеристика,
		|	ЗапасыОстаткиИтог.Партия КАК Партия,
		|	СУММА(ЗапасыОстаткиИтог.Количество) КАК Количество,
		|	ЗапасыОстаткиИтог.ДокументПоступления КАК ДокументПоступления,
		|	ЗапасыОстаткиИтог.Ячейка КАК Ячейка
		|ИЗ
		|	ЗапасыОстаткиИтог КАК ЗапасыОстаткиИтог
		|
		|СГРУППИРОВАТЬ ПО
		|	ЗапасыОстаткиИтог.Номенклатура,
		|	ЗапасыОстаткиИтог.Ячейка,
		|	ЗапасыОстаткиИтог.Характеристика,
		|	ЗапасыОстаткиИтог.Партия,
		|	ЗапасыОстаткиИтог.ДокументПоступления
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ РАЗЛИЧНЫЕ
		|	КомплектацияЗапасовЗапасы.Номенклатура КАК Номенклатура,
		|	КомплектацияЗапасовЗапасы.Характеристика КАК Характеристика,
		|	КомплектацияЗапасовЗапасы.Партия КАК Партия,
		|	КомплектацияЗапасовСерииНоменклатурыЗапасы.Серия КАК Серия,
		|	КомплектацияЗапасовЗапасы.КлючСвязи КАК КлючСвязи,
		|	КомплектацияЗапасовСерииНоменклатурыЗапасы.Количество КАК Количество
		|ИЗ
		|	Документ.КомплектацияЗапасов.Запасы КАК КомплектацияЗапасовЗапасы
		|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.КомплектацияЗапасов.СерииНоменклатурыЗапасы КАК КомплектацияЗапасовСерииНоменклатурыЗапасы
		|		ПО КомплектацияЗапасовЗапасы.КлючСвязи = КомплектацияЗапасовСерииНоменклатурыЗапасы.КлючСвязи
		|ГДЕ
		|	КомплектацияЗапасовЗапасы.Ссылка = &ДокументОснование
		|	И КомплектацияЗапасовСерииНоменклатурыЗапасы.Ссылка = &ДокументОснование
		|	И КомплектацияЗапасовЗапасы.Ссылка.ВидОперации = ЗНАЧЕНИЕ(Перечисление.ВидыОперацийКомплектацияЗапасов.Сборка)
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ РАЗЛИЧНЫЕ
		|	КомплектацияЗапасов.Номенклатура,
		|	КомплектацияЗапасов.Характеристика,
		|	КомплектацияЗапасов.Партия,
		|	КомплектацияЗапасовСерииНоменклатуры.Серия,
		|	1,
		|	КомплектацияЗапасовСерииНоменклатуры.Количество
		|ИЗ
		|	Документ.КомплектацияЗапасов КАК КомплектацияЗапасов
		|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.КомплектацияЗапасов.СерииНоменклатуры КАК КомплектацияЗапасовСерииНоменклатуры
		|		ПО (0 = КомплектацияЗапасовСерииНоменклатуры.КлючСвязи)
		|ГДЕ
		|	КомплектацияЗапасов.Ссылка = &ДокументОснование
		|	И КомплектацияЗапасовСерииНоменклатуры.Ссылка = &ДокументОснование
		|	И КомплектацияЗапасов.ВидОперации = ЗНАЧЕНИЕ(Перечисление.ВидыОперацийКомплектацияЗапасов.Разборка)
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	СерииНоменклатурыКРасходуОстатки.Серия КАК Серия,
		|	СерииНоменклатурыКРасходуОстатки.КоличествоОстаток КАК Количество,
		|	СерииНоменклатурыКРасходуОстатки.Номенклатура КАК Номенклатура,
		|	СерииНоменклатурыКРасходуОстатки.Характеристика КАК Характеристика,
		|	СерииНоменклатурыКРасходуОстатки.Партия КАК Партия
		|ПОМЕСТИТЬ ОстаткиСерииИтог
		|ИЗ
		|	РегистрНакопления.СерииНоменклатурыКРасходу.Остатки(
		|			,
		|			Организация = &Организация
		|				И СтруктурнаяЕдиница = &СтруктурнаяЕдиница
		|				И ДокументОснование = &ДокументОснование) КАК СерииНоменклатурыКРасходуОстатки
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ
		|	СерииНоменклатурыКРасходу.Серия,
		|	СерииНоменклатурыКРасходу.Количество,
		|	СерииНоменклатурыКРасходу.Номенклатура,
		|	СерииНоменклатурыКРасходу.Характеристика,
		|	СерииНоменклатурыКРасходу.Партия
		|ИЗ
		|	РегистрНакопления.СерииНоменклатурыКРасходу КАК СерииНоменклатурыКРасходу
		|ГДЕ
		|	СерииНоменклатурыКРасходу.ДокументОснование = &ДокументОснование
		|	И СерииНоменклатурыКРасходу.Регистратор = &Ссылка
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ОстаткиСерииИтог.Серия КАК Серия,
		|	СУММА(ОстаткиСерииИтог.Количество) КАК Количество,
		|	ОстаткиСерииИтог.Номенклатура КАК Номенклатура,
		|	ОстаткиСерииИтог.Характеристика КАК Характеристика,
		|	ОстаткиСерииИтог.Партия КАК Партия
		|ИЗ
		|	ОстаткиСерииИтог КАК ОстаткиСерииИтог
		|
		|СГРУППИРОВАТЬ ПО
		|	ОстаткиСерииИтог.Партия,
		|	ОстаткиСерииИтог.Характеристика,
		|	ОстаткиСерииИтог.Номенклатура,
		|	ОстаткиСерииИтог.Серия");
		
		Запрос.УстановитьПараметр("Ссылка", Ссылка);
		Запрос.УстановитьПараметр("Организация", Константы.УчетПоКомпании.Компания(Организация));
		Запрос.УстановитьПараметр("СтруктурнаяЕдиница", СтруктурнаяЕдиница);
		
		КонтролироватьОстаткиПоДокументам = ВидУчета = Перечисления.ВидыУчетаОрдерныхСкладов.УчетОстатковПоПрочимДокументам;
		
		Запрос.УстановитьПараметр("КонтролироватьОстаткиПоДокументам", КонтролироватьОстаткиПоДокументам);
		Запрос.УстановитьПараметр("ДокументОснование", ?(КонтролироватьОстаткиПоДокументам, ДокументСсылка, Неопределено));
		
		ДокументПоступления = ?(КонтролироватьОстаткиПоДокументам, ДокументСсылка, Неопределено);
		
		РезультатыЗапроса = Запрос.ВыполнитьПакет();
		
		ЗаполнитьТабличнуюЧастьПоОстаткамСУчетомСерий(РезультатыЗапроса, СтруктурнаяЕдиница);
	
КонецПроцедуры // ЗаполнитьПоКомплектацияЗапасов()

// Версии заполнения без вида учета

Процедура ЗаполнитьПоОтчетОПереработкеВидУчетаНеИспользуется(ДокументСсылкаОтчетОПереработке) 

	Запрос = Новый Запрос;
	Запрос.Текст =
	"ВЫБРАТЬ
	|	МИНИМУМ(ОтчетОПереработке.НомерСтроки) КАК НомерСтроки,
	|	ОтчетОПереработке.Номенклатура КАК Номенклатура,
	|	ОтчетОПереработке.Характеристика КАК Характеристика,
	|	ОтчетОПереработке.Партия КАК Партия,
	|	ОтчетОПереработке.ЕдиницаИзмерения КАК ЕдиницаИзмерения,
	|	СУММА(ОтчетОПереработке.Количество) КАК Количество,
	|	ОтчетОПереработке.СерииНоменклатуры,
	|	ОтчетОПереработке.КлючСвязи
	|ИЗ
	|	(ВЫБРАТЬ
	|		ОтчетОПереработкеПродукция.НомерСтроки КАК НомерСтроки,
	|		ОтчетОПереработкеПродукция.Номенклатура КАК Номенклатура,
	|		ОтчетОПереработкеПродукция.Характеристика КАК Характеристика,
	|		ОтчетОПереработкеПродукция.Партия КАК Партия,
	|		ОтчетОПереработкеПродукция.ЕдиницаИзмерения КАК ЕдиницаИзмерения,
	|		ОтчетОПереработкеПродукция.Количество КАК Количество,
	|		ОтчетОПереработкеПродукция.СерииНоменклатуры КАК СерииНоменклатуры,
	|		ОтчетОПереработкеПродукция.КлючСвязи КАК КлючСвязи
	|	ИЗ
	|		Документ.ОтчетОПереработке.Продукция КАК ОтчетОПереработкеПродукция
	|	ГДЕ
	|		ОтчетОПереработкеПродукция.Ссылка = &ДокументОснование
	|	
	|	ОБЪЕДИНИТЬ ВСЕ
	|	
	|	ВЫБРАТЬ
	|		ОтчетОПереработкеОтходы.НомерСтроки,
	|		ОтчетОПереработкеОтходы.Номенклатура,
	|		ОтчетОПереработкеОтходы.Характеристика,
	|		ОтчетОПереработкеОтходы.Партия,
	|		ОтчетОПереработкеОтходы.ЕдиницаИзмерения,
	|		ОтчетОПереработкеОтходы.Количество,
	|		NULL,
	|		NULL
	|	ИЗ
	|		Документ.ОтчетОПереработке.Отходы КАК ОтчетОПереработкеОтходы
	|	ГДЕ
	|		ОтчетОПереработкеОтходы.Ссылка = &ДокументОснование) КАК ОтчетОПереработке
	|
	|СГРУППИРОВАТЬ ПО
	|	ОтчетОПереработке.Номенклатура,
	|	ОтчетОПереработке.Характеристика,
	|	ОтчетОПереработке.Партия,
	|	ОтчетОПереработке.ЕдиницаИзмерения,
	|	ОтчетОПереработке.СерииНоменклатуры,
	|	ОтчетОПереработке.КлючСвязи
	|
	|УПОРЯДОЧИТЬ ПО
	|	НомерСтроки";
	
	Запрос.УстановитьПараметр("ДокументОснование", ДокументСсылкаОтчетОПереработке);
	
	Запасы.Очистить();
	РезультатЗапроса = Запрос.Выполнить();
	Если НЕ РезультатЗапроса.Пустой() Тогда
		Выборка = РезультатЗапроса.Выбрать();
		Пока Выборка.Следующий() Цикл
			НоваяСтрока = Запасы.Добавить();
			ЗаполнитьЗначенияСвойств(НоваяСтрока, Выборка);
		КонецЦикла;
	КонецЕсли;
	
	СерииНоменклатурыУНФ.ЗаполнитьТЧСерииНоменклатурыПоКлючуСвязи(ЭтотОбъект, ДокументСсылкаОтчетОПереработке, "Продукция");
	
КонецПроцедуры

Процедура ЗаполнитьПоРасходнаяНакладнаяВидУчетаНеИспользуется(ДокументСсылкаРасходнаяНакладная) 

	// Заполнение шапки.
	ДокументОснование = ДокументСсылкаРасходнаяНакладная;
	ЗначенияРеквизитов = ОбщегоНазначения.ЗначенияРеквизитовОбъекта(ДокументСсылкаРасходнаяНакладная, Новый Структура("Организация, СтруктурнаяЕдиница, Ячейка, ПоложениеСклада"));
	
	Если ЗначенияРеквизитов.ПоложениеСклада = ПредопределенноеЗначение("Перечисление.ПоложениеРеквизитаНаФорме.ВТабличнойЧасти") Тогда
		
		ЗначенияРеквизитовСкладТЧ = ДокументСсылкаРасходнаяНакладная.Запасы.ВыгрузитьКолонку("СтруктурнаяЕдиница");
		ЗначенияОрдерныйСклад = ОбщегоНазначения.ЗначениеРеквизитаОбъектов(ЗначенияРеквизитовСкладТЧ, "ОрдерныйСклад");
		
		ЕстьОрдерныйСклад = Ложь;
		Для каждого складТЧ Из ЗначенияОрдерныйСклад Цикл
			Если СкладТЧ.Значение = Истина Тогда
				ЕстьОрдерныйСклад = Истина;
				Прервать;
			КонецЕсли;
		КонецЦикла;
		
		Если НЕ ЕстьОрдерныйСклад Тогда
			ВызватьИсключениеВводНаОсновании(ДокументСсылкаРасходнаяНакладная);
		КонецЕсли;
	Иначе
		ПроверитьВозможностьВводаНаОсновании(ДокументСсылкаРасходнаяНакладная, ЗначенияРеквизитов);
	КонецЕсли;
	
	ЗаполнитьЗначенияСвойств(ЭтотОбъект, ЗначенияРеквизитов);
	
	// Заполнение табличной части.
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	РасходнаяНакладнаяЗапасы.НомерСтроки КАК НомерСтроки,
	|	РасходнаяНакладнаяЗапасы.Номенклатура КАК Номенклатура,
	|	РасходнаяНакладнаяЗапасы.Характеристика КАК Характеристика,
	|	РасходнаяНакладнаяЗапасы.Партия КАК Партия,
	|	РасходнаяНакладнаяЗапасы.ЕдиницаИзмерения КАК ЕдиницаИзмерения,
	|	РасходнаяНакладнаяЗапасы.СерииНоменклатуры КАК СерииНоменклатуры,
	|	РасходнаяНакладнаяЗапасы.КлючСвязи КАК КлючСвязи,
	|	РасходнаяНакладнаяЗапасы.Количество КАК Количество,
	|	ВЫБОР
	|		КОГДА ТИПЗНАЧЕНИЯ(РасходнаяНакладнаяЗапасы.ЕдиницаИзмерения) = ТИП(Справочник.КлассификаторЕдиницИзмерения)
	|			ТОГДА 1
	|		ИНАЧЕ ЕСТЬNULL(РасходнаяНакладнаяЗапасы.ЕдиницаИзмерения.Коэффициент, 1)
	|	КОНЕЦ КАК КоэффициентЕдиницыИзмерения
	|ПОМЕСТИТЬ ВТ_РасходнаяНакладнаяЗапасы
	|ИЗ
	|	Документ.РасходнаяНакладная.Запасы КАК РасходнаяНакладнаяЗапасы
	|ГДЕ
	|	РасходнаяНакладнаяЗапасы.Ссылка = &ДокументОснование
	|	И РасходнаяНакладнаяЗапасы.Номенклатура.ТипНоменклатуры В (ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.Запас), ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.ПодарочныйСертификат))
	|	И ВЫБОР
	|			КОГДА РасходнаяНакладнаяЗапасы.Ссылка.ПоложениеСклада = ЗНАЧЕНИЕ(Перечисление.ПоложениеРеквизитаНаФорме.ВТабличнойЧасти)
	|				ТОГДА РасходнаяНакладнаяЗапасы.СтруктурнаяЕдиница.ОрдерныйСклад
	|			ИНАЧЕ ИСТИНА
	|		КОНЕЦ
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВТ_РасходнаяНакладнаяЗапасы.НомерСтроки КАК НомерСтроки,
	|	ВТ_РасходнаяНакладнаяЗапасы.Номенклатура КАК Номенклатура,
	|	ВТ_РасходнаяНакладнаяЗапасы.Характеристика КАК Характеристика,
	|	ВТ_РасходнаяНакладнаяЗапасы.Партия КАК Партия,
	|	ВТ_РасходнаяНакладнаяЗапасы.ЕдиницаИзмерения КАК ЕдиницаИзмерения,
	|	ВТ_РасходнаяНакладнаяЗапасы.СерииНоменклатуры КАК СерииНоменклатуры,
	|	ВТ_РасходнаяНакладнаяЗапасы.КлючСвязи КАК КлючСвязи,
	|	ВТ_РасходнаяНакладнаяЗапасы.Количество КАК Количество
	|ИЗ
	|	ВТ_РасходнаяНакладнаяЗапасы КАК ВТ_РасходнаяНакладнаяЗапасы
	|
	|УПОРЯДОЧИТЬ ПО
	|	ВТ_РасходнаяНакладнаяЗапасы.НомерСтроки
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ВТ_РасходнаяНакладнаяЗапасы.Номенклатура КАК Номенклатура,
	|	ВТ_РасходнаяНакладнаяЗапасы.Характеристика КАК Характеристика,
	|	ВТ_РасходнаяНакладнаяЗапасы.Партия КАК Партия,
	|	РасходнаяНакладнаяСерииНоменклатуры.Серия КАК Серия,
	|	ВТ_РасходнаяНакладнаяЗапасы.КлючСвязи КАК КлючСвязи,
	|	РасходнаяНакладнаяСерииНоменклатуры.Количество КАК Количество,
	|	ВТ_РасходнаяНакладнаяЗапасы.НомерСтроки КАК НомерСтроки
	|ПОМЕСТИТЬ ВТ_РасходнаяНакладнаяСерииНоменклатуры
	|ИЗ
	|	Документ.РасходнаяНакладная.СерииНоменклатуры КАК РасходнаяНакладнаяСерииНоменклатуры
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТ_РасходнаяНакладнаяЗапасы КАК ВТ_РасходнаяНакладнаяЗапасы
	|		ПО (ВТ_РасходнаяНакладнаяЗапасы.КлючСвязи = РасходнаяНакладнаяСерииНоменклатуры.КлючСвязи)
	|ГДЕ
	|	РасходнаяНакладнаяСерииНоменклатуры.Ссылка = &ДокументОснование
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВТ_РасходнаяНакладнаяСерииНоменклатуры.Серия КАК Серия,
	|	ВТ_РасходнаяНакладнаяСерииНоменклатуры.КлючСвязи КАК КлючСвязи,
	|	ВТ_РасходнаяНакладнаяСерииНоменклатуры.Номенклатура КАК Номенклатура,
	|	ВТ_РасходнаяНакладнаяСерииНоменклатуры.Характеристика КАК Характеристика,
	|	ВТ_РасходнаяНакладнаяСерииНоменклатуры.Партия КАК Партия,
	|	ВТ_РасходнаяНакладнаяСерииНоменклатуры.Количество КАК Количество,
	|	ВТ_РасходнаяНакладнаяСерииНоменклатуры.НомерСтроки КАК НомерСтроки
	|ИЗ
	|	ВТ_РасходнаяНакладнаяСерииНоменклатуры КАК ВТ_РасходнаяНакладнаяСерииНоменклатуры
	|
	|УПОРЯДОЧИТЬ ПО
	|	НомерСтроки
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ВТ_РасходнаяНакладнаяСерииНоменклатуры.Серия КАК Серия,
	|	ВТ_РасходнаяНакладнаяСерииНоменклатуры.Номенклатура КАК Номенклатура,
	|	ВТ_РасходнаяНакладнаяСерииНоменклатуры.Характеристика КАК Характеристика,
	|	ВТ_РасходнаяНакладнаяСерииНоменклатуры.Партия КАК Партия
	|ПОМЕСТИТЬ УникальныеСерииДляОстатков
	|ИЗ
	|	ВТ_РасходнаяНакладнаяСерииНоменклатуры КАК ВТ_РасходнаяНакладнаяСерииНоменклатуры
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	УникальныеСерииДляОстатков.Серия КАК Серия,
	|	УникальныеСерииДляОстатков.Номенклатура КАК Номенклатура,
	|	УникальныеСерииДляОстатков.Характеристика КАК Характеристика,
	|	УникальныеСерииДляОстатков.Партия КАК Партия,
	|	СУММА(ЕСТЬNULL(СерииНоменклатурыКРасходуОстатки.КоличествоОстаток, 0)) КАК Количество
	|ИЗ
	|	УникальныеСерииДляОстатков КАК УникальныеСерииДляОстатков
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрНакопления.СерииНоменклатурыКРасходу.Остатки(
	|				,
	|				Организация = &Организация
	|					И СтруктурнаяЕдиница = &СтруктурнаяЕдиница) КАК СерииНоменклатурыКРасходуОстатки
	|		ПО УникальныеСерииДляОстатков.Номенклатура = СерииНоменклатурыКРасходуОстатки.Номенклатура
	|			И УникальныеСерииДляОстатков.Характеристика = СерииНоменклатурыКРасходуОстатки.Характеристика
	|			И УникальныеСерииДляОстатков.Партия = СерииНоменклатурыКРасходуОстатки.Партия
	|			И УникальныеСерииДляОстатков.Серия = СерииНоменклатурыКРасходуОстатки.Серия
	|
	|СГРУППИРОВАТЬ ПО
	|	УникальныеСерииДляОстатков.Номенклатура,
	|	УникальныеСерииДляОстатков.Серия,
	|	УникальныеСерииДляОстатков.Партия,
	|	УникальныеСерииДляОстатков.Характеристика
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ВТ_РасходнаяНакладнаяЗапасы.Номенклатура КАК Номенклатура,
	|	ВТ_РасходнаяНакладнаяЗапасы.Характеристика КАК Характеристика,
	|	ВТ_РасходнаяНакладнаяЗапасы.Партия КАК Партия
	|ПОМЕСТИТЬ НоменклатураДляОстатков
	|ИЗ
	|	ВТ_РасходнаяНакладнаяЗапасы КАК ВТ_РасходнаяНакладнаяЗапасы
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	НоменклатураДляОстатков.Номенклатура КАК Номенклатура,
	|	НоменклатураДляОстатков.Характеристика КАК Характеристика,
	|	НоменклатураДляОстатков.Партия КАК Партия,
	|	СУММА(ЕСТЬNULL(ЗапасыКРасходуСоСкладовОстатки.КоличествоОстаток, 0)) КАК Количество
	|ИЗ
	|	НоменклатураДляОстатков КАК НоменклатураДляОстатков
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрНакопления.ЗапасыКРасходуСоСкладов.Остатки(
	|				,
	|				Организация = &Организация
	|					И СтруктурнаяЕдиница = &СтруктурнаяЕдиница) КАК ЗапасыКРасходуСоСкладовОстатки
	|		ПО НоменклатураДляОстатков.Номенклатура = ЗапасыКРасходуСоСкладовОстатки.Номенклатура
	|			И НоменклатураДляОстатков.Характеристика = ЗапасыКРасходуСоСкладовОстатки.Характеристика
	|			И НоменклатураДляОстатков.Партия = ЗапасыКРасходуСоСкладовОстатки.Партия
	|
	|СГРУППИРОВАТЬ ПО
	|	НоменклатураДляОстатков.Характеристика,
	|	НоменклатураДляОстатков.Партия,
	|	НоменклатураДляОстатков.Номенклатура";
	
	Запрос.УстановитьПараметр("ДокументОснование", ДокументСсылкаРасходнаяНакладная);
	Запрос.УстановитьПараметр("Организация", Константы.УчетПоКомпании.Компания(Организация));
	Запрос.УстановитьПараметр("СтруктурнаяЕдиница", СтруктурнаяЕдиница);
		
	Запасы.Очистить();
	СерииНоменклатуры.Очистить();
	
	РезультатыЗапроса = Запрос.ВыполнитьПакет();
	
	Если РезультатыЗапроса[1].Пустой() Тогда
		Возврат;
	КонецЕсли;
	
	ТаблицаСерииНоменклатуры = РезультатыЗапроса[3].Выгрузить();
	ТаблицаСерииНоменклатуры.Индексы.Добавить("КлючСвязи");
	
	ТаблицаОстатковСерий = РезультатыЗапроса[5].Выгрузить();
	
	СтруктураПоискаОстатковСерии = Новый Структура("Номенклатура, Характеристика, Партия, Серия");
	
	Для Каждого СтрокаТаблицыСерий Из ТаблицаСерииНоменклатуры Цикл
		
		Если Не ЗначениеЗаполнено(СтрокаТаблицыСерий.Количество) Тогда
			Продолжить;
		КонецЕсли;
		
		ЗаполнитьЗначенияСвойств(СтруктураПоискаОстатковСерии, СтрокаТаблицыСерий);
		
		ОстаткиПоСтроке = ТаблицаОстатковСерий.НайтиСтроки(СтруктураПоискаОстатковСерии);
		
		Если Не ОстаткиПоСтроке.Количество() Тогда 
			Продолжить
		КонецЕсли;
		
		СтрокаОстатка = ОстаткиПоСтроке[0];
		
		Если СтрокаОстатка.Количество <= 0 Тогда
			Продолжить;
		КонецЕсли;
		
		НоваяСтрокаСерии = СерииНоменклатуры.Добавить();
		
		ЗаполнитьЗначенияСвойств(НоваяСтрокаСерии, СтрокаТаблицыСерий);
		
		Если НоваяСтрокаСерии.Количество > СтрокаОстатка.Количество Тогда
			НоваяСтрокаСерии.Количество = СтрокаОстатка.Количество;
			СтрокаОстатка.Количество = 0;
		Иначе
			СтрокаОстатка.Количество = СтрокаОстатка.Количество - НоваяСтрокаСерии.Количество;
		КонецЕсли;
		
	КонецЦикла;
	
	ТаблицаОстатков = РезультатыЗапроса[7].Выгрузить();
	
	ВыборкаЗапасы = РезультатыЗапроса[1].Выбрать();
	
	СтруктураПоискаОстатков = Новый Структура("Номенклатура, Характеристика, Партия");
	
	Пока ВыборкаЗапасы.Следующий() Цикл
		
		Если Не ЗначениеЗаполнено(ВыборкаЗапасы.Количество) Тогда
			Продолжить;
		КонецЕсли;

		ЗаполнитьЗначенияСвойств(СтруктураПоискаОстатков, ВыборкаЗапасы);
		
		ОстаткиПоСтроке = ТаблицаОстатков.НайтиСтроки(СтруктураПоискаОстатков);
		
		Если Не ОстаткиПоСтроке.Количество() Тогда 
			Продолжить
		КонецЕсли;
		
		СтрокаОстатка = ОстаткиПоСтроке[0];
		
		Если СтрокаОстатка.Количество <= 0 Тогда
			Продолжить;
		КонецЕсли;
		
		НоваяСтрокаЗапасы = Запасы.Добавить();
		
		ЗаполнитьЗначенияСвойств(НоваяСтрокаЗапасы, ВыборкаЗапасы);
		
		Если ТипЗнч(НоваяСтрокаЗапасы.ЕдиницаИзмерения) = ТИП("СправочникСсылка.КлассификаторЕдиницИзмерения") Тогда
			
			Если НоваяСтрокаЗапасы.Количество > СтрокаОстатка.Количество Тогда
				НоваяСтрокаЗапасы.Количество = СтрокаОстатка.Количество;
				СтрокаОстатка.Количество = 0;
			Иначе
				СтрокаОстатка.Количество = СтрокаОстатка.Количество - НоваяСтрокаЗапасы.Количество;
			КонецЕсли;
			
		Иначе
			
			КоличествоСтрокиВЕдиницахХранения = НоваяСтрокаЗапасы.Количество * НоваяСтрокаЗапасы.ЕдиницаИзмерения.Коэффициент;
			
			Если КоличествоСтрокиВЕдиницахХранения  > СтрокаОстатка.Количество Тогда
				КоличествоСтрокиВЕдиницахХранения  = СтрокаОстатка.Количество;
				СтрокаОстатка.Количество = 0;
			Иначе
				СтрокаОстатка.Количество = СтрокаОстатка.Количество - КоличествоСтрокиВЕдиницахХранения;
			КонецЕсли;
			
			НоваяСтрокаЗапасы.Количество = КоличествоСтрокиВЕдиницахХранения / НоваяСтрокаЗапасы.ЕдиницаИзмерения.Коэффициент;
			
		КонецЕсли;
			
		НоваяСтрокаЗапасы.СерииНоменклатуры = СерииНоменклатурыУНФ.ПредставлениеСерийНоменклатуры(СерииНоменклатуры, НоваяСтрокаЗапасы.КлючСвязи);
			
	КонецЦикла;
	
КонецПроцедуры

Процедура ЗаполнитьПоПередачаТоваровМеждуОрганизациямиВидУчетаНеИспользуется(ДокументСсылка) 
// Заполнение шапки.
	ДокументОснование = ДокументСсылка;
	ЗначенияРеквизитов = ОбщегоНазначения.ЗначенияРеквизитовОбъекта(ДокументСсылка, Новый Структура("Организация, СтруктурнаяЕдиница, Ячейка, ПоложениеСклада"));
	
	Если ЗначенияРеквизитов.ПоложениеСклада = ПредопределенноеЗначение("Перечисление.ПоложениеРеквизитаНаФорме.ВТабличнойЧасти") Тогда
		
		ЗначенияРеквизитовСкладТЧ = ДокументСсылка.Запасы.ВыгрузитьКолонку("СтруктурнаяЕдиница");
		ЗначенияОрдерныйСклад = ОбщегоНазначения.ЗначениеРеквизитаОбъектов(ЗначенияРеквизитовСкладТЧ, "ОрдерныйСклад");
		
		ЕстьОрдерныйСклад = Ложь;
		Для каждого складТЧ Из ЗначенияОрдерныйСклад Цикл
			Если СкладТЧ.Значение = Истина Тогда
				ЕстьОрдерныйСклад = Истина;
				Прервать;
			КонецЕсли;
		КонецЦикла;
		
		Если НЕ ЕстьОрдерныйСклад Тогда
			ВызватьИсключениеВводНаОсновании(ДокументСсылка);
		КонецЕсли;
	Иначе
		ПроверитьВозможностьВводаНаОсновании(ДокументСсылка, ЗначенияРеквизитов);
	КонецЕсли;
	
	ЗаполнитьЗначенияСвойств(ЭтотОбъект, ЗначенияРеквизитов);
	
	// Заполнение табличной части.
	Запрос = Новый Запрос("ВЫБРАТЬ
	|	МИНИМУМ(ПередачаТоваровМеждуОрганизациямиЗапасы.НомерСтроки) КАК НомерСтроки,
	|	ПередачаТоваровМеждуОрганизациямиЗапасы.Номенклатура КАК Номенклатура,
	|	ПередачаТоваровМеждуОрганизациямиЗапасы.Характеристика КАК Характеристика,
	|	ПередачаТоваровМеждуОрганизациямиЗапасы.Партия КАК Партия,
	|	ПередачаТоваровМеждуОрганизациямиЗапасы.ЕдиницаИзмерения КАК ЕдиницаИзмерения,
	|	ПередачаТоваровМеждуОрганизациямиЗапасы.СерииНоменклатуры КАК СерииНоменклатуры,
	|	ПередачаТоваровМеждуОрганизациямиЗапасы.КлючСвязи КАК КлючСвязи,
	|	ПередачаТоваровМеждуОрганизациямиЗапасы.Количество
	|ПОМЕСТИТЬ ВТ_ПередачаТоваровМеждуОрганизациямиЗапасы
	|ИЗ
	|	Документ.ПередачаТоваровМеждуОрганизациями.Запасы КАК ПередачаТоваровМеждуОрганизациямиЗапасы
	|ГДЕ
	|	ПередачаТоваровМеждуОрганизациямиЗапасы.Ссылка = &ДокументОснование
	|	И ПередачаТоваровМеждуОрганизациямиЗапасы.Номенклатура.ТипНоменклатуры В
	|		(ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.Запас), ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.ПодарочныйСертификат))
	|	И ВЫБОР
	|		КОГДА
	|			ПередачаТоваровМеждуОрганизациямиЗапасы.Ссылка.ПоложениеСклада = ЗНАЧЕНИЕ(Перечисление.ПоложениеРеквизитаНаФорме.ВТабличнойЧасти)
	|			ТОГДА ПередачаТоваровМеждуОрганизациямиЗапасы.СтруктурнаяЕдиница.ОрдерныйСклад
	|		ИНАЧЕ ИСТИНА
	|	КОНЕЦ
	|СГРУППИРОВАТЬ ПО
	|	ПередачаТоваровМеждуОрганизациямиЗапасы.Номенклатура,
	|	ПередачаТоваровМеждуОрганизациямиЗапасы.Характеристика,
	|	ПередачаТоваровМеждуОрганизациямиЗапасы.Партия,
	|	ПередачаТоваровМеждуОрганизациямиЗапасы.ЕдиницаИзмерения,
	|	ПередачаТоваровМеждуОрганизациямиЗапасы.СерииНоменклатуры,
	|	ПередачаТоваровМеждуОрганизациямиЗапасы.КлючСвязи,
	|	ПередачаТоваровМеждуОрганизациямиЗапасы.Количество
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВТ_ПередачаТоваровМеждуОрганизациямиЗапасы.НомерСтроки,
	|	ВТ_ПередачаТоваровМеждуОрганизациямиЗапасы.Номенклатура КАК Номенклатура,
	|	ВТ_ПередачаТоваровМеждуОрганизациямиЗапасы.Характеристика,
	|	ВТ_ПередачаТоваровМеждуОрганизациямиЗапасы.Партия,
	|	ВТ_ПередачаТоваровМеждуОрганизациямиЗапасы.ЕдиницаИзмерения,
	|	ВТ_ПередачаТоваровМеждуОрганизациямиЗапасы.СерииНоменклатуры,
	|	ВТ_ПередачаТоваровМеждуОрганизациямиЗапасы.КлючСвязи,
	|	ВТ_ПередачаТоваровМеждуОрганизациямиЗапасы.Количество,
	|	ВЫБОР
	|		КОГДА ЗапасыКРасходуСоСкладовОстатки.КоличествоОстаток < 0
	|			ТОГДА -ЗапасыКРасходуСоСкладовОстатки.КоличествоОстаток
	|		ИНАЧЕ ЗапасыКРасходуСоСкладовОстатки.КоличествоОстаток
	|	КОНЕЦ КАК КоличествоОстаток
	|ИЗ
	|	ВТ_ПередачаТоваровМеждуОрганизациямиЗапасы КАК ВТ_ПередачаТоваровМеждуОрганизациямиЗапасы
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрНакопления.ЗапасыКРасходуСоСкладов.Остатки(, Организация = &Организация
	|		И СтруктурнаяЕдиница = &СтруктурнаяЕдиница) КАК ЗапасыКРасходуСоСкладовОстатки
	|		ПО ВТ_ПередачаТоваровМеждуОрганизациямиЗапасы.Номенклатура = ЗапасыКРасходуСоСкладовОстатки.Номенклатура
	|		И ВТ_ПередачаТоваровМеждуОрганизациямиЗапасы.Характеристика = ЗапасыКРасходуСоСкладовОстатки.Характеристика
	|		И ВТ_ПередачаТоваровМеждуОрганизациямиЗапасы.Партия = ЗапасыКРасходуСоСкладовОстатки.Партия
	|
	|УПОРЯДОЧИТЬ ПО
	|	НомерСтроки
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ПередачаТоваровМеждуОрганизациямиЗапасы.Номенклатура КАК Номенклатура,
	|	ПередачаТоваровМеждуОрганизациямиЗапасы.Характеристика КАК Характеристика,
	|	ПередачаТоваровМеждуОрганизациямиЗапасы.Партия КАК Партия,
	|	ПередачаТоваровМеждуОрганизациямиСерииНоменклатуры.Серия КАК Серия,
	|	ПередачаТоваровМеждуОрганизациямиЗапасы.КлючСвязи КАК КлючСвязи
	|ПОМЕСТИТЬ ВТ_ПередачаТоваровМеждуОрганизациямиСерииНоменклатуры
	|ИЗ
	|	Документ.ПередачаТоваровМеждуОрганизациями.СерииНоменклатуры КАК ПередачаТоваровМеждуОрганизациямиСерииНоменклатуры
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.ПередачаТоваровМеждуОрганизациями.Запасы КАК ПередачаТоваровМеждуОрганизациямиЗапасы
	|		ПО ПередачаТоваровМеждуОрганизациямиСерииНоменклатуры.Ссылка = &ДокументОснование
	|		И ПередачаТоваровМеждуОрганизациямиЗапасы.Ссылка = &ДокументОснование
	|		И ПередачаТоваровМеждуОрганизациямиЗапасы.КлючСвязи = ПередачаТоваровМеждуОрганизациямиСерииНоменклатуры.КлючСвязи
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВТ_ПередачаТоваровМеждуОрганизациямиСерииНоменклатуры.Серия,
	|	ВТ_ПередачаТоваровМеждуОрганизациямиСерииНоменклатуры.КлючСвязи
	|ИЗ
	|	ВТ_ПередачаТоваровМеждуОрганизациямиСерииНоменклатуры КАК ВТ_ПередачаТоваровМеждуОрганизациямиСерииНоменклатуры
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрНакопления.СерииНоменклатурыКРасходу.Остатки(, Организация = &Организация
	|		И СтруктурнаяЕдиница = &СтруктурнаяЕдиница) КАК СерииНоменклатурыКРасходуОстатки
	|		ПО ВТ_ПередачаТоваровМеждуОрганизациямиСерииНоменклатуры.Номенклатура = СерииНоменклатурыКРасходуОстатки.Номенклатура
	|		И
	|			ВТ_ПередачаТоваровМеждуОрганизациямиСерииНоменклатуры.Характеристика = СерииНоменклатурыКРасходуОстатки.Характеристика
	|		И ВТ_ПередачаТоваровМеждуОрганизациямиСерииНоменклатуры.Партия = СерииНоменклатурыКРасходуОстатки.Партия
	|		И ВТ_ПередачаТоваровМеждуОрганизациямиСерииНоменклатуры.Серия = СерииНоменклатурыКРасходуОстатки.Серия");
	
	Запрос.УстановитьПараметр("ДокументОснование", ДокументСсылка);
	Запрос.УстановитьПараметр("Организация", Константы.УчетПоКомпании.Компания(Организация));
	Запрос.УстановитьПараметр("СтруктурнаяЕдиница", СтруктурнаяЕдиница);
		
	Запасы.Очистить();
	СерииНоменклатуры.Очистить();
	
	РезультатыЗапроса = Запрос.ВыполнитьПакет();
	
	Если РезультатыЗапроса[1].Пустой() Тогда
		Возврат;
	КонецЕсли;
	
	ТаблицаСерииНоменклатуры = РезультатыЗапроса[3].Выгрузить();
	ТаблицаСерииНоменклатуры.Индексы.Добавить("КлючСвязи");
	
	ВыборкаЗапасы = РезультатыЗапроса[1].Выбрать();
	Пока ВыборкаЗапасы.Следующий() Цикл
		Если Не ЗначениеЗаполнено(ВыборкаЗапасы.Количество) Тогда
			Продолжить;
		КонецЕсли;
		Если Не ЗначениеЗаполнено(ВыборкаЗапасы.КоличествоОстаток) Тогда
			Продолжить;
		КонецЕсли;
		НоваяСтрокаЗапасы = Запасы.Добавить();
		ЗаполнитьЗначенияСвойств(НоваяСтрокаЗапасы, ВыборкаЗапасы);
		НоваяСтрокаЗапасы.Количество = Мин(ВыборкаЗапасы.Количество, ВыборкаЗапасы.КоличествоОстаток);
		Если СерииНоменклатурыУНФ.ИспользоватьСерииНоменклатурыОстатки() = Истина Тогда
			НоваяСтрокаЗапасы.СерииНоменклатуры = СерииНоменклатурыУНФ.ПредставлениеСерийНоменклатуры(
				ТаблицаСерииНоменклатуры, НоваяСтрокаЗапасы.КлючСвязи);
		КонецЕсли;
	КонецЦикла;
	
	Если СерииНоменклатурыУНФ.ИспользоватьСерииНоменклатурыОстатки() = Истина Тогда
		СерииНоменклатуры.Загрузить(ТаблицаСерииНоменклатуры);
	Иначе
		СерииНоменклатурыУНФ.ЗаполнитьТЧСерииНоменклатурыПоКлючуСвязи(ЭтотОбъект, ДокументСсылка);
	КонецЕсли;
	
КонецПроцедуры

Процедура ЗаполнитьПоЗаказПокупателяВидУчетаНеИспользуется(ДокументСсылкаЗаказПокупателя) 
	
	// Заполнение шапки.
	ДокументОснование = ДокументСсылкаЗаказПокупателя;
	ЗначенияРеквизитов = ОбщегоНазначения.ЗначенияРеквизитовОбъекта(ДокументСсылкаЗаказПокупателя, Новый Структура("Организация, ВидОперации, СтруктурнаяЕдиницаРезерв, Ячейка"));
	
	ПроверитьВозможностьВводаНаОсновании(ДокументСсылкаЗаказПокупателя, ЗначенияРеквизитов);
	
	ЗаполнитьЗначенияСвойств(ЭтотОбъект, ЗначенияРеквизитов);
	СтруктурнаяЕдиница = ЗначенияРеквизитов.СтруктурнаяЕдиницаРезерв;
	
	// Заполнение табличной части.
	Запрос = Новый Запрос;
	Запрос.Текст =
	"ВЫБРАТЬ
	|	МИНИМУМ(ЗаказПокупателяЗапасы.НомерСтроки) КАК НомерСтроки,
	|	ЗаказПокупателяЗапасы.Номенклатура КАК Номенклатура,
	|	ЗаказПокупателяЗапасы.Номенклатура.ТипНоменклатуры КАК ТипНоменклатуры,
	|	ЗаказПокупателяЗапасы.Характеристика КАК Характеристика,
	|	ЗаказПокупателяЗапасы.Партия КАК Партия,
	|	ЗаказПокупателяЗапасы.ЕдиницаИзмерения КАК ЕдиницаИзмерения,
	|	СУММА(ЗаказПокупателяЗапасы.Количество) КАК Количество,
	|	ЗаказПокупателяЗапасы.КлючСвязи КАК КлючСвязи
	|ИЗ
	|	ВТЗаказПокупателяЗапасы КАК ЗаказПокупателяЗапасы
	|ГДЕ
	|	(ЗаказПокупателяЗапасы.Номенклатура.ТипНоменклатуры = ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.Запас)
	|			ИЛИ ЗаказПокупателяЗапасы.Номенклатура.ТипНоменклатуры = ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.ПодарочныйСертификат))
	|
	|СГРУППИРОВАТЬ ПО
	|	ЗаказПокупателяЗапасы.Номенклатура,
	|	ЗаказПокупателяЗапасы.Характеристика,
	|	ЗаказПокупателяЗапасы.Партия,
	|	ЗаказПокупателяЗапасы.ЕдиницаИзмерения,
	|	ЗаказПокупателяЗапасы.Номенклатура.ТипНоменклатуры,
	|	ЗаказПокупателяЗапасы.КлючСвязи
	|
	|УПОРЯДОЧИТЬ ПО
	|	НомерСтроки
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ЗаказПокупателяЗапасы.Серия КАК Серия,
	|	ЗаказПокупателяЗапасы.КлючСвязи КАК КлючСвязи
	|ИЗ
	|	Документ.ЗаказПокупателя.СерииНоменклатуры КАК ЗаказПокупателяЗапасы
	|ГДЕ
	|	ЗаказПокупателяЗапасы.Ссылка = &ДокументОснование
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	МИНИМУМ(ЗаказПокупателяЗапасы.НомерСтроки) КАК НомерСтроки,
	|	ЗаказПокупателяЗапасы.Номенклатура КАК Номенклатура,
	|	ЗаказПокупателяЗапасы.Номенклатура.ТипНоменклатуры КАК ТипНоменклатуры,
	|	ЗаказПокупателяЗапасы.Характеристика КАК Характеристика,
	|	ЗаказПокупателяЗапасы.Партия КАК Партия,
	|	ЗаказПокупателяЗапасы.ЕдиницаИзмерения КАК ЕдиницаИзмерения,
	|	СУММА(ЗаказПокупателяЗапасы.Количество) КАК Количество,
	|	ЗаказПокупателяЗапасы.КлючСвязиСерииНоменклатуры КАК КлючСвязи
	|ИЗ
	|	Документ.ЗаказПокупателя.Материалы КАК ЗаказПокупателяЗапасы
	|ГДЕ
	|	ЗаказПокупателяЗапасы.Ссылка = &ДокументОснование
	|	И (ЗаказПокупателяЗапасы.Номенклатура.ТипНоменклатуры = ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.Запас)
	|			ИЛИ ЗаказПокупателяЗапасы.Номенклатура.ТипНоменклатуры = ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.ПодарочныйСертификат))
	|
	|СГРУППИРОВАТЬ ПО
	|	ЗаказПокупателяЗапасы.Номенклатура,
	|	ЗаказПокупателяЗапасы.Характеристика,
	|	ЗаказПокупателяЗапасы.Партия,
	|	ЗаказПокупателяЗапасы.ЕдиницаИзмерения,
	|	ЗаказПокупателяЗапасы.Номенклатура.ТипНоменклатуры,
	|	ЗаказПокупателяЗапасы.КлючСвязиСерииНоменклатуры
	|
	|УПОРЯДОЧИТЬ ПО
	|	НомерСтроки
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ЗаказПокупателяЗапасы.Серия КАК Серия,
	|	ЗаказПокупателяЗапасы.КлючСвязи КАК КлючСвязи
	|ИЗ
	|	Документ.ЗаказПокупателя.СерииНоменклатурыМатериалы КАК ЗаказПокупателяЗапасы
	|ГДЕ
	|	ЗаказПокупателяЗапасы.Ссылка = &ДокументОснование";
	
	Документы.ЗаказПокупателя.ДобавитьТаблицуЗапасыВМенеджерВременныхТаблиц(ДокументСсылкаЗаказПокупателя, Запрос.МенеджерВременныхТаблиц, Истина);
	Запрос.УстановитьПараметр("ДокументОснование", ДокументСсылкаЗаказПокупателя);
	
	Запасы.Очистить();
	РезультатЗапроса = Запрос.ВыполнитьПакет();
	//Запасы
	Если НЕ РезультатЗапроса[0].Пустой() Тогда
		Выборка = РезультатЗапроса[0].Выбрать();
		ВыборкаСерииНоменклатуры = РезультатЗапроса[1].Выбрать();
		
		Пока Выборка.Следующий() Цикл
			НоваяСтрока = Запасы.Добавить();
			ЗаполнитьЗначенияСвойств(НоваяСтрока, Выборка);
			
			НоваяСтрока.СерииНоменклатуры = СерииНоменклатурыУНФ.СтрокаСерииНоменклатурыИзВыборки(ВыборкаСерииНоменклатуры, НоваяСтрока.КлючСвязи);
		КонецЦикла;
		
		СерииНоменклатуры.Загрузить(РезультатЗапроса[1].Выгрузить());
		
	КонецЕсли;
	
	СписокЗначений = Новый СписокЗначений;
	Для каждого СтрокаТЧ Из Запасы Цикл
        СписокЗначений.Добавить(СтрокаТЧ.КлючСвязи);
	КонецЦикла;
    Если СписокЗначений.Количество() = 0 Тогда
		МаксимальныйКлючСвязи = 1;
	Иначе
		СписокЗначений.СортироватьПоЗначению();
		МаксимальныйКлючСвязи = СписокЗначений.Получить(СписокЗначений.Количество() - 1).Значение + 1;
	КонецЕсли;
	
	//Материалы
	Если НЕ РезультатЗапроса[2].Пустой() Тогда
		Выборка = РезультатЗапроса[2].Выбрать();
		ВыборкаСерииНоменклатуры = РезультатЗапроса[3].Выбрать();
		
		Пока Выборка.Следующий() Цикл
			НоваяСтрока = Запасы.Добавить();
			ЗаполнитьЗначенияСвойств(НоваяСтрока, Выборка);
			
			СтарыйКлючСвязи = Выборка.КлючСвязи;
			НоваяСтрока.КлючСвязи = МаксимальныйКлючСвязи;
			
			НоваяСтрока.СерииНоменклатуры = СерииНоменклатурыУНФ.СтрокаСерииНоменклатурыИзВыборки(ВыборкаСерииНоменклатуры, СтарыйКлючСвязи);
			
			СтруктураПоиска = Новый Структура("КлючСвязи", СтарыйКлючСвязи);
			Пока ВыборкаСерииНоменклатуры.НайтиСледующий(СтруктураПоиска) Цикл
				НоваяСтрокаСерииНоменклатуры = СерииНоменклатуры.Добавить();
				НоваяСтрокаСерииНоменклатуры.КлючСвязи = НоваяСтрока.КлючСвязи;
				НоваяСтрокаСерииНоменклатуры.Серия = ВыборкаСерииНоменклатуры.Серия;
			КонецЦикла;
			
			МаксимальныйКлючСвязи = МаксимальныйКлючСвязи+1;
			
		КонецЦикла;
		
	КонецЕсли;
	
КонецПроцедуры

Процедура ЗаполнитьПоСписаниеЗапасовВидУчетаНеИспользуется(ДокументСсылкаСписаниеЗапасов) 
	
	// Заполнение шапки.
	ДокументОснование = ДокументСсылкаСписаниеЗапасов;
	ЗначенияРеквизитов = ОбщегоНазначения.ЗначенияРеквизитовОбъекта(ДокументСсылкаСписаниеЗапасов, Новый Структура("Организация, СтруктурнаяЕдиница, Ячейка"));
	
	ПроверитьВозможностьВводаНаОсновании(ДокументСсылкаСписаниеЗапасов, ЗначенияРеквизитов);
	
	ЗаполнитьЗначенияСвойств(ЭтотОбъект, ЗначенияРеквизитов);
	
	// Заполнение табличной части.
	Запрос = Новый Запрос;
	Запрос.Текст =
	"ВЫБРАТЬ
	|	МИНИМУМ(СписаниеЗапасовЗапасы.НомерСтроки) КАК НомерСтроки,
	|	СписаниеЗапасовЗапасы.Номенклатура КАК Номенклатура,
	|	СписаниеЗапасовЗапасы.Характеристика КАК Характеристика,
	|	СписаниеЗапасовЗапасы.Партия КАК Партия,
	|	СписаниеЗапасовЗапасы.ЕдиницаИзмерения КАК ЕдиницаИзмерения,
	|	СУММА(СписаниеЗапасовЗапасы.Количество) КАК Количество,
	|	СписаниеЗапасовЗапасы.СерииНоменклатуры,
	|	СписаниеЗапасовЗапасы.КлючСвязи
	|ИЗ
	|	Документ.СписаниеЗапасов.Запасы КАК СписаниеЗапасовЗапасы
	|ГДЕ
	|	СписаниеЗапасовЗапасы.Ссылка = &ДокументОснование
	|
	|СГРУППИРОВАТЬ ПО
	|	СписаниеЗапасовЗапасы.Номенклатура,
	|	СписаниеЗапасовЗапасы.Характеристика,
	|	СписаниеЗапасовЗапасы.Партия,
	|	СписаниеЗапасовЗапасы.ЕдиницаИзмерения,
	|	СписаниеЗапасовЗапасы.СерииНоменклатуры,
	|	СписаниеЗапасовЗапасы.КлючСвязи
	|
	|УПОРЯДОЧИТЬ ПО
	|	НомерСтроки";
	
	Запрос.УстановитьПараметр("ДокументОснование", ДокументСсылкаСписаниеЗапасов);
	
	Запасы.Очистить();
	РезультатЗапроса = Запрос.Выполнить();
	Если НЕ РезультатЗапроса.Пустой() Тогда
		Выборка = РезультатЗапроса.Выбрать();
		Пока Выборка.Следующий() Цикл
			НоваяСтрока = Запасы.Добавить();
			ЗаполнитьЗначенияСвойств(НоваяСтрока, Выборка);
		КонецЦикла;
	КонецЕсли;
	
	СерииНоменклатурыУНФ.ЗаполнитьТЧСерииНоменклатурыПоКлючуСвязи(ЭтотОбъект, ДокументСсылкаСписаниеЗапасов);
	
КонецПроцедуры

Процедура ЗаполнитьПоПересортицаЗапасовВидУчетаНеИспользуется(ДокументСсылкаПересортицаЗапасов) 
	
	// Заполнение шапки.
	ДокументОснование = ДокументСсылкаПересортицаЗапасов;
	ЗначенияРеквизитов = ОбщегоНазначения.ЗначенияРеквизитовОбъекта(ДокументСсылкаПересортицаЗапасов, Новый Структура("Организация, СтруктурнаяЕдиница, Ячейка"));
	
	ПроверитьВозможностьВводаНаОсновании(ДокументСсылкаПересортицаЗапасов, ЗначенияРеквизитов);
	
	ЗаполнитьЗначенияСвойств(ЭтотОбъект, ЗначенияРеквизитов);
	
	// Заполнение табличной части.
	Запрос = Новый Запрос;
	Запрос.Текст =
	"ВЫБРАТЬ
	|	МИНИМУМ(ПересортицаЗапасовЗапасы.НомерСтроки) КАК НомерСтроки,
	|	ПересортицаЗапасовЗапасы.Номенклатура КАК Номенклатура,
	|	ПересортицаЗапасовЗапасы.Характеристика КАК Характеристика,
	|	ПересортицаЗапасовЗапасы.Партия КАК Партия,
	|	ПересортицаЗапасовЗапасы.ЕдиницаИзмерения КАК ЕдиницаИзмерения,
	|	СУММА(ПересортицаЗапасовЗапасы.Количество) КАК Количество,
	|	ПересортицаЗапасовЗапасы.СерииНоменклатуры,
	|	ПересортицаЗапасовЗапасы.КлючСвязи
	|ИЗ
	|	Документ.ПересортицаЗапасов.Запасы КАК ПересортицаЗапасовЗапасы
	|ГДЕ
	|	ПересортицаЗапасовЗапасы.Ссылка = &ДокументОснование
	|
	|СГРУППИРОВАТЬ ПО
	|	ПересортицаЗапасовЗапасы.Номенклатура,
	|	ПересортицаЗапасовЗапасы.Характеристика,
	|	ПересортицаЗапасовЗапасы.Партия,
	|	ПересортицаЗапасовЗапасы.ЕдиницаИзмерения,
	|	ПересортицаЗапасовЗапасы.СерииНоменклатуры,
	|	ПересортицаЗапасовЗапасы.КлючСвязи
	|
	|УПОРЯДОЧИТЬ ПО
	|	НомерСтроки";
	
	Запрос.УстановитьПараметр("ДокументОснование", ДокументСсылкаПересортицаЗапасов);
	
	Запасы.Очистить();
	РезультатЗапроса = Запрос.Выполнить();
	Если НЕ РезультатЗапроса.Пустой() Тогда
		Выборка = РезультатЗапроса.Выбрать();
		Пока Выборка.Следующий() Цикл
			НоваяСтрока = Запасы.Добавить();
			ЗаполнитьЗначенияСвойств(НоваяСтрока, Выборка);
		КонецЦикла;
	КонецЕсли;
	
	СерииНоменклатурыУНФ.ЗаполнитьТЧСерииНоменклатурыПоКлючуСвязи(ЭтотОбъект, ДокументСсылкаПересортицаЗапасов);
	
КонецПроцедуры

Процедура ЗаполнитьПоПеремещениеЗапасовВидУчетаНеИспользуется(ДокументСсылкаПеремещениеЗапасов) 

	// Заполнение шапки.
	ДокументОснование = ДокументСсылкаПеремещениеЗапасов;
	ЗначенияРеквизитов = ОбщегоНазначения.ЗначенияРеквизитовОбъекта(
	ДокументСсылкаПеремещениеЗапасов,
	Новый Структура("Организация, СтруктурнаяЕдиница, Ячейка"));
	
	ПроверитьВозможностьВводаНаОсновании(ДокументСсылкаПеремещениеЗапасов, ЗначенияРеквизитов);
	
	ЗаполнитьЗначенияСвойств(ЭтотОбъект, ЗначенияРеквизитов);
	
	// Заполнение табличной части.
	Запрос = Новый Запрос;
	Запрос.Текст =
	"ВЫБРАТЬ
	|	МИНИМУМ(ПеремещениеЗапасовЗапасы.НомерСтроки) КАК НомерСтроки,
	|	ПеремещениеЗапасовЗапасы.Номенклатура КАК Номенклатура,
	|	ПеремещениеЗапасовЗапасы.Характеристика КАК Характеристика,
	|	ПеремещениеЗапасовЗапасы.Партия КАК Партия,
	|	ПеремещениеЗапасовЗапасы.ЕдиницаИзмерения КАК ЕдиницаИзмерения,
	|	СУММА(ПеремещениеЗапасовЗапасы.Количество) КАК Количество,
	|	ПеремещениеЗапасовЗапасы.СерииНоменклатуры,
	|	ПеремещениеЗапасовЗапасы.КлючСвязи
	|ИЗ
	|	Документ.ПеремещениеЗапасов.Запасы КАК ПеремещениеЗапасовЗапасы
	|ГДЕ
	|	ПеремещениеЗапасовЗапасы.Ссылка = &ДокументОснование
	|
	|СГРУППИРОВАТЬ ПО
	|	ПеремещениеЗапасовЗапасы.Номенклатура,
	|	ПеремещениеЗапасовЗапасы.Характеристика,
	|	ПеремещениеЗапасовЗапасы.Партия,
	|	ПеремещениеЗапасовЗапасы.ЕдиницаИзмерения,
	|	ПеремещениеЗапасовЗапасы.СерииНоменклатуры,
	|	ПеремещениеЗапасовЗапасы.КлючСвязи
	|
	|УПОРЯДОЧИТЬ ПО
	|	НомерСтроки";
	
	Запрос.УстановитьПараметр("ДокументОснование", ДокументСсылкаПеремещениеЗапасов);
	
	Запасы.Очистить();
	РезультатЗапроса = Запрос.Выполнить();
	Если НЕ РезультатЗапроса.Пустой() Тогда
		Выборка = РезультатЗапроса.Выбрать();
		Пока Выборка.Следующий() Цикл
			НоваяСтрока = Запасы.Добавить();
			ЗаполнитьЗначенияСвойств(НоваяСтрока, Выборка);
		КонецЦикла;
	КонецЕсли;
	
	СерииНоменклатурыУНФ.ЗаполнитьТЧСерииНоменклатурыПоКлючуСвязи(ЭтотОбъект, ДокументСсылкаПеремещениеЗапасов);
	
КонецПроцедуры

Процедура ЗаполнитьПоСборкаЗапасовВидУчетаНеИспользуется(ДокументСсылкаСборкаЗапасов) 
	
	// Заполнение шапки.
	ДокументОснование = ДокументСсылкаСборкаЗапасов;
	ЗначенияРеквизитов = ОбщегоНазначения.ЗначенияРеквизитовОбъекта(ДокументСсылкаСборкаЗапасов,
			Новый Структура("Организация, ВидОперации, СтруктурнаяЕдиница, Ячейка, СтруктурнаяЕдиницаЗапасов, ЯчейкаЗапасов, СтруктурнаяЕдиницаОтходов, ЯчейкаОтходов, ПоложениеСклада"));
		
	Организация = ЗначенияРеквизитов.Организация;
	ИмяТЧ = "";
	
	Если ЗначенияРеквизитов.ПоложениеСклада = ПредопределенноеЗначение("Перечисление.ПоложениеРеквизитаНаФорме.ВТабличнойЧасти") Тогда
		
		Если ЗначенияРеквизитов.ВидОперации = Перечисления.ВидыОперацийСборкаЗапасов.Разборка И ЕстьОрдерныйСкладВТабЧасти(ДокументСсылкаСборкаЗапасов.Продукция) Тогда
			ИмяТЧ = "Продукция";
		ИначеЕсли ЗначенияРеквизитов.ВидОперации <> Перечисления.ВидыОперацийСборкаЗапасов.Разборка И ЕстьОрдерныйСкладВТабЧасти(ДокументСсылкаСборкаЗапасов.Запасы) Тогда
			ИмяТЧ = "Запасы";
		КонецЕсли;
		
	Иначе
		
		Если ЗначенияРеквизитов.СтруктурнаяЕдиница.ОрдерныйСклад Тогда
			
			Если ЗначенияРеквизитов.ВидОперации = Перечисления.ВидыОперацийСборкаЗапасов.Разборка Тогда
				ИмяТЧ = "Продукция";
			Иначе
				ИмяТЧ = "Запасы";
			КонецЕсли;
			
			СтруктурнаяЕдиница = ЗначенияРеквизитов.СтруктурнаяЕдиница;
			Ячейка = ЗначенияРеквизитов.Ячейка;
			
		Иначе
			
			Если ЗначенияРеквизитов.СтруктурнаяЕдиницаЗапасов.ОрдерныйСклад Тогда
				
				Если ЗначенияРеквизитов.ВидОперации = Перечисления.ВидыОперацийСборкаЗапасов.Разборка Тогда
					ИмяТЧ = "Продукция";
				Иначе
					ИмяТЧ = "Запасы";
				КонецЕсли;
				
				СтруктурнаяЕдиница = ЗначенияРеквизитов.СтруктурнаяЕдиницаЗапасов;
				Ячейка = ЗначенияРеквизитов.ЯчейкаЗапасов;
								
			КонецЕсли;
			
		КонецЕсли;
		
	КонецЕсли;
	
	Если ПустаяСтрока(ИмяТЧ) Тогда
		ТекстИсключения = НСтр("ru = 'Невозможен ввод операции ""Отгрузка с ордерного склада"".
								|Документ ""%1"" не имеет ордерного склада.'");
		ТекстИсключения = СтрШаблон(ТекстИсключения, ДокументСсылкаСборкаЗапасов.Ссылка);
		ВызватьИсключение ТекстИсключения;
	КонецЕсли;
	
	// Заполнение табличной части.
	Запрос = Новый Запрос;
	Запрос.Текст =
	"ВЫБРАТЬ
	|	ТабличнаяЧасть.Номенклатура КАК Номенклатура,
	|	ТабличнаяЧасть.Характеристика КАК Характеристика,
	|	ТабличнаяЧасть.Партия КАК Партия,
	|	ТабличнаяЧасть.Количество КАК Количество,
	|	ТабличнаяЧасть.ЕдиницаИзмерения КАК ЕдиницаИзмерения,
	|	ТабличнаяЧасть.СерииНоменклатуры КАК СерииНоменклатуры,
	|	ТабличнаяЧасть.СтруктурнаяЕдиница.ОрдерныйСклад КАК ОрдерныйСклад,
	|	ТабличнаяЧасть.КлючСвязи КАК КлючСвязи
	|ИЗ
	|	Документ.СборкаЗапасов.Запасы КАК ТабличнаяЧасть
	|ГДЕ
	|	ТабличнаяЧасть.Ссылка = &ДокументОснование";
	Запрос.Текст = СтрЗаменить(Запрос.Текст, "СборкаЗапасов.Запасы", "СборкаЗапасов." + ИмяТЧ);
	Запрос.УстановитьПараметр("ДокументОснование", ДокументСсылкаСборкаЗапасов);
	
	Запасы.Очистить();
	РезультатЗапроса = Запрос.Выполнить();
	
	Выборка = РезультатЗапроса.Выбрать();
	Если Выборка.Количество()=0 Тогда
		Возврат;
	КонецЕсли;
	Пока Выборка.Следующий() Цикл
		Если ЗначенияРеквизитов.ПоложениеСклада = ПредопределенноеЗначение("Перечисление.ПоложениеРеквизитаНаФорме.ВТабличнойЧасти")
				И НЕ Выборка.ОрдерныйСклад Тогда
			Продолжить;
		КонецЕсли;
		НоваяСтрока = Запасы.Добавить();
		ЗаполнитьЗначенияСвойств(НоваяСтрока, Выборка);
	КонецЦикла; 
	
	Если ЗначенияРеквизитов.ВидОперации = Перечисления.ВидыОперацийСборкаЗапасов.Разборка Тогда
		СерииНоменклатурыУНФ.ЗаполнитьТЧСерииНоменклатурыПоКлючуСвязи(ЭтотОбъект, ДокументСсылкаСборкаЗапасов, "Продукция", "СерииНоменклатурыПродукция");
	Иначе
		СерииНоменклатурыУНФ.ЗаполнитьТЧСерииНоменклатурыПоКлючуСвязи(ЭтотОбъект, ДокументСсылкаСборкаЗапасов);
	КонецЕсли;
	
	СерииНоменклатурыУНФ.УдалитьСерииНоменклатурыВТабличнойЧастиВЗависимостиОтПолитики(ЭтотОбъект);

КонецПроцедуры

Процедура ЗаполнитьПоКомплектацияЗапасовВидУчетаНеИспользуется(ДокументСсылкаКомплектацияЗапасов) 
	
	// Заполнение шапки.
	ЗначенияРеквизитов = ОбщегоНазначения.ЗначенияРеквизитовОбъекта(ДокументСсылкаКомплектацияЗапасов,
			"Организация, ВидОперации, СтруктурнаяЕдиница, СтруктурнаяЕдиница.ОрдерныйСклад, Ячейка");
		
	Если НЕ ЗначенияРеквизитов.СтруктурнаяЕдиницаОрдерныйСклад Тогда
		ТекстИсключения = НСтр("ru = 'Невозможен ввод операции ""Отгрузка с ордерного склада"".
								|Документ ""%1"" не имеет ордерного склада.'");
		ТекстИсключения = СтрШаблон(ТекстИсключения, ДокументСсылкаКомплектацияЗапасов);
		ВызватьИсключение ТекстИсключения;
	КонецЕсли;
	
	ДокументОснование = ДокументСсылкаКомплектацияЗапасов;
	Организация = ЗначенияРеквизитов.Организация;
	СтруктурнаяЕдиница = ЗначенияРеквизитов.СтруктурнаяЕдиница;
	Ячейка = ЗначенияРеквизитов.Ячейка;
	
	Если ЗначенияРеквизитов.ВидОперации = Перечисления.ВидыОперацийКомплектацияЗапасов.Разборка Тогда
		
		ЗначенияРеквизитовЗапасы = ОбщегоНазначения.ЗначенияРеквизитовОбъекта(ДокументСсылкаКомплектацияЗапасов,
				"Номенклатура, Характеристика, Партия, Количество, ЕдиницаИзмерения, СерииНоменклатурыПредставление");
		
		Запасы.Очистить();
		НоваяСтрока = Запасы.Добавить();
		ЗаполнитьЗначенияСвойств(НоваяСтрока, ЗначенияРеквизитовЗапасы);
		НоваяСтрока.СерииНоменклатуры = ЗначенияРеквизитовЗапасы.СерииНоменклатурыПредставление;
		ТабличныеЧастиУНФКлиентСервер.ЗаполнитьКлючСвязи(Запасы, НоваяСтрока, "КлючСвязи");
		
		СерииНоменклатуры.Загрузить(ДокументСсылкаКомплектацияЗапасов.СерииНоменклатуры.Выгрузить());
		Для каждого СтрокаТЧ Из СерииНоменклатуры Цикл
			СтрокаТЧ.КлючСвязи = НоваяСтрока.КлючСвязи;
		КонецЦикла; 
		
	Иначе
		
		Запрос = Новый Запрос;
		Запрос.Текст =
		"ВЫБРАТЬ
		|	ТабличнаяЧасть.Номенклатура КАК Номенклатура,
		|	ТабличнаяЧасть.Характеристика КАК Характеристика,
		|	ТабличнаяЧасть.Партия КАК Партия,
		|	ТабличнаяЧасть.Количество КАК Количество,
		|	ТабличнаяЧасть.ЕдиницаИзмерения КАК ЕдиницаИзмерения,
		|	ТабличнаяЧасть.СерииНоменклатуры КАК СерииНоменклатуры,
		|	ТабличнаяЧасть.КлючСвязи КАК КлючСвязи
		|ИЗ
		|	Документ.КомплектацияЗапасов.Запасы КАК ТабличнаяЧасть
		|ГДЕ
		|	ТабличнаяЧасть.Ссылка = &ДокументОснование";
		Запрос.УстановитьПараметр("ДокументОснование", ДокументСсылкаКомплектацияЗапасов);
		
		Запасы.Загрузить(Запрос.Выполнить().Выгрузить());
		СерииНоменклатурыУНФ.ЗаполнитьТЧСерииНоменклатурыПоКлючуСвязи(ЭтотОбъект, 
			ДокументСсылкаКомплектацияЗапасов, , "СерииНоменклатурыЗапасы");
		
	КонецЕсли;
	
КонецПроцедуры
	
// АПК:299-вкл

#КонецОбласти

#Область ОбработчикиСобытий

// Процедура - обработчик события ОбработкаЗаполнения.
//
Процедура ОбработкаЗаполнения(ДанныеЗаполнения, СтандартнаяОбработка)
	
	СтратегияЗаполнения = Новый Соответствие;
	СтратегияЗаполнения[Тип("ДокументСсылка.ОтчетОПереработке")] = "ЗаполнитьПоОтчетОПереработке";
	СтратегияЗаполнения[Тип("ДокументСсылка.РасходнаяНакладная")] = "ЗаполнитьПоРасходнаяНакладная";
	СтратегияЗаполнения[Тип("ДокументСсылка.ПередачаТоваровМеждуОрганизациями")] = "ЗаполнитьПоПередачаТоваровМеждуОрганизациями";
	СтратегияЗаполнения[Тип("ДокументСсылка.ЗаказПокупателя")] = "ЗаполнитьПоЗаказПокупателя";
	СтратегияЗаполнения[Тип("ДокументСсылка.СписаниеЗапасов")] = "ЗаполнитьПоСписаниеЗапасов";
	СтратегияЗаполнения[Тип("ДокументСсылка.ПересортицаЗапасов")] = "ЗаполнитьПоПересортицаЗапасов";
	СтратегияЗаполнения[Тип("ДокументСсылка.ПеремещениеЗапасов")] = "ЗаполнитьПоПеремещениеЗапасов";
	СтратегияЗаполнения[Тип("ДокументСсылка.ПриходныйОрдер")] = "ЗаполнитьПоПриходныйОрдер";
	СтратегияЗаполнения[Тип("ДокументСсылка.ПринятиеКУчетуВА")] = "ЗаполнитьПоПринятиеКУчетуВА";
	СтратегияЗаполнения[Тип("ДокументСсылка.СборкаЗапасов")] = "ЗаполнитьПоСборкаЗапасов";
	СтратегияЗаполнения[Тип("ДокументСсылка.КомплектацияЗапасов")] = "ЗаполнитьПоКомплектацияЗапасов";
	СтратегияЗаполнения[Тип("Структура")] = "ЗаполнитьПоСтруктуре"; 
	
	ЗаполнениеОбъектовУНФ.ЗаполнитьДокумент(ЭтотОбъект, ДанныеЗаполнения, СтратегияЗаполнения);
	
	СерииНоменклатурыУНФ.УдалитьСерииНоменклатурыВТабличнойЧастиВЗависимостиОтПолитики(ЭтотОбъект); 
	
КонецПроцедуры // ОбработкаЗаполнения()

// Процедура - обработчик события ОбработкаПроведения объекта.
//
Процедура ОбработкаПроведения(Отказ, РежимПроведения)
	
	// Инициализация дополнительных свойств для проведения документа
	ПроведениеДокументовУНФ.ИнициализироватьДополнительныеСвойстваДляПроведения(Ссылка, ДополнительныеСвойства);
	
	ВидУчета = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(СтруктурнаяЕдиница, "ВидУчетаОрдерныхСкладов");
	КонтролироватьОстаткиПоДокументам = ВидУчета = Перечисления.ВидыУчетаОрдерныхСкладов.УчетОстатковПоПрочимДокументам;
	ДополнительныеСвойства.Вставить("КонтрольОстатковПоЗапасамКОтгрузке", КонтролироватьОстаткиПоДокументам);
	КонтролироватьОстатковПоОрерам = ВидУчета = Перечисления.ВидыУчетаОрдерныхСкладов.УчетОстатковПоСкладскимОрдерам;
	ДополнительныеСвойства.Вставить("КонтролироватьОстатковПоОрерам", КонтролироватьОстатковПоОрерам);
	//
	
	// Инициализация данных документа
	Документы.РасходныйОрдер.ИнициализироватьДанныеДокумента(Ссылка, ДополнительныеСвойства);
	
	// Подготовка наборов записей
	ПроведениеДокументовУНФ.ПодготовитьНаборыЗаписейКРегистрацииДвижений(ЭтотОбъект);
	
	// Отражение в разделах учета
	ТаблицыДляДвижений = ДополнительныеСвойства.ТаблицыДляДвижений;
	ПроведениеДокументовУНФ.ОтразитьДвижения("ЗапасыКРасходуСоСкладов", ТаблицыДляДвижений, Движения, Отказ);
	ПроведениеДокументовУНФ.ОтразитьДвижения("ЗапасыНаСкладах", ТаблицыДляДвижений, Движения, Отказ);

	// СерииНоменклатуры
	ПроведениеДокументовУНФ.ОтразитьДвижения("СерииНоменклатурыГарантии", ТаблицыДляДвижений, Движения, Отказ);
	ПроведениеДокументовУНФ.ОтразитьДвижения("ДвиженияСерииНоменклатуры", ТаблицыДляДвижений, Движения, Отказ);
	ПроведениеДокументовУНФ.ОтразитьДвижения("СерииНоменклатуры", ТаблицыДляДвижений, Движения, Отказ);
	ПроведениеДокументовУНФ.ОтразитьДвижения("СерииНоменклатурыКРасходу", ТаблицыДляДвижений, Движения, Отказ);
	
	// Запись наборов записей
	ПроведениеДокументовУНФ.ЗаписатьНаборыЗаписей(ЭтотОбъект);

	// Контроль
	Документы.РасходныйОрдер.ВыполнитьКонтроль(Ссылка, ДополнительныеСвойства, Отказ);
	
	ПроведениеДокументовУНФ.ЗакрытьМенеджерВременныхТаблиц(ЭтотОбъект);
	
КонецПроцедуры

// Процедура - обработчик события ОбработкаУдаленияПроведения объекта.
//
Процедура ОбработкаУдаленияПроведения(Отказ)
	
	// Инициализация дополнительных свойств для проведения документа
	ПроведениеДокументовУНФ.ИнициализироватьДополнительныеСвойстваДляПроведения(Ссылка, ДополнительныеСвойства);
	
	// Подготовка наборов записей
	ПроведениеДокументовУНФ.ПодготовитьНаборыЗаписейКРегистрацииДвижений(ЭтотОбъект);
	
	// Запись наборов записей
	ПроведениеДокументовУНФ.ЗаписатьНаборыЗаписей(ЭтотОбъект);
	
	ВидУчета = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(СтруктурнаяЕдиница, "ВидУчетаОрдерныхСкладов");
	КонтролироватьОстаткиПоДокументам = ВидУчета = Перечисления.ВидыУчетаОрдерныхСкладов.УчетОстатковПоПрочимДокументам;
	ДополнительныеСвойства.Вставить("КонтрольОстатковПоЗапасамКОтгрузке", КонтролироватьОстаткиПоДокументам);
	//
	
	// Контроль
	Документы.РасходныйОрдер.ВыполнитьКонтроль(Ссылка, ДополнительныеСвойства, Отказ, Истина);
	
КонецПроцедуры

Процедура ОбработкаПроверкиЗаполнения(Отказ, ПроверяемыеРеквизиты)
	
	// Серии номенклатуры
	ДополнительныеПараметры = Новый Структура;
	ДополнительныеПараметры.Вставить("Объект", ЭтотОбъект);
	ДополнительныеПараметры.Вставить("СтруктурнаяЕдиница", СтруктурнаяЕдиница);
	ДополнительныеПараметры.Вставить("ЭтоОрдер", Истина);
	СерииНоменклатурыУНФ.ПроверитьЗаполнениеСерийНоменклатуры(Отказ, Запасы, СерииНоменклатуры, 
		ДополнительныеПараметры);

	НоменклатураВДокументахСервер.ПроверитьЗаполнениеХарактеристик(ЭтотОбъект, Отказ, Истина);
	
	ВидУчета = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(СтруктурнаяЕдиница, "ВидУчетаОрдерныхСкладов");
	Если ВидУчета = Перечисления.ВидыУчетаОрдерныхСкладов.УчетОстатковПоПрочимДокументам Тогда
		
		Если Не ЗначениеЗаполнено(ПоложениеДокументаПоступления) Или ПоложениеДокументаПоступления = Перечисления.ПоложениеРеквизитаНаФорме.ВШапке Тогда
			ПроверяемыеРеквизиты.Добавить("ДокументПоступления");
		Иначе
			
			Для Каждого СтрокаТабличнойЧасти Из Запасы Цикл
				
				Если Не ЗначениеЗаполнено(СтрокаТабличнойЧасти.ДокументПоступления) Тогда
					
					ТекстСообщения = ОбщегоНазначенияКлиентСервер.ТекстОшибкиЗаполнения("Колонка", , НСтр(
					"ru = 'Документ отгрузки'"), СтрокаТабличнойЧасти.НомерСтроки, "Запасы");
					
					Поле = ОбщегоНазначенияКлиентСервер.ПутьКТабличнойЧасти("Запасы", СтрокаТабличнойЧасти.НомерСтроки,
					"ЗапасыДокументПоступления");
					ОбщегоНазначения.СообщитьПользователю(ТекстСообщения, ЭтотОбъект, Поле, "Объект", Отказ);
					
				КонецЕсли;
				
			КонецЦикла;
			
		КонецЕсли;
			
	КонецЕсли;
	
	Если Не СтруктурнаяЕдиница.ИспользоватьОрдернуюСхемуПриОтгрузке Тогда 
		Отказ = Истина;
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю("ru = 'Для склада не ведется ордерный учет при отгрузке.'");
	КонецЕсли;
	
КонецПроцедуры

Процедура ПередЗаписью(Отказ, РежимЗаписи, РежимПроведения) 
	
	Если РежимЗаписи = РежимЗаписиДокумента.Проведение И ЗначениеЗаполнено(СтруктурнаяЕдиница) Тогда
		
		ЭтоПеремещение = ТипЗнч(ДокументОснование) = Тип("ДокументСсылка.ПеремещениеЗапасов");
		
		Если ЭтоПеремещение Тогда
			ЗначенияРеквизитовСтруктурнойЕдиницы = ОбщегоНазначения.ЗначенияРеквизитовОбъекта(СтруктурнаяЕдиница,
			"ОрдерныйСклад, ИспользоватьОрдернуюСхемуПриПеремещении, ВидУчетаОрдерныхСкладов");
		Иначе
			ЗначенияРеквизитовСтруктурнойЕдиницы = ОбщегоНазначения.ЗначенияРеквизитовОбъекта(СтруктурнаяЕдиница,
			"ОрдерныйСклад, ИспользоватьОрдернуюСхемуПриОтгрузке, ВидУчетаОрдерныхСкладов");
		КонецЕсли;
		
		ПроверятьИспользованиеОрдернойСхемы = ЗначенияРеквизитовСтруктурнойЕдиницы.ОрдерныйСклад
		И ЗначениеЗаполнено(ЗначенияРеквизитовСтруктурнойЕдиницы.ВидУчетаОрдерныхСкладов) 
		И НЕ ЗначенияРеквизитовСтруктурнойЕдиницы.ВидУчетаОрдерныхСкладов = Перечисления.ВидыУчетаОрдерныхСкладов.ПоСкладуВЦелом;
		
		Если ПроверятьИспользованиеОрдернойСхемы Тогда
			
			Если ЭтоПеремещение Тогда
				Если НЕ ЗначенияРеквизитовСтруктурнойЕдиницы.ИспользоватьОрдернуюСхемуПриПеремещении Тогда
					
					ТекстИсключения = СтрШаблон(НСтр("ru = 'Невозможен ввод операции ""Расход с ордерного склада"".
					|склад ""%1"" не использует ордерную схему при перемещении'"), СтруктурнаяЕдиница);
					
					ВызватьИсключениеВводНаОсновании(ДокументОснование, ТекстИсключения);
				КонецЕсли;
				
			Иначе
				
				Если НЕ ЗначенияРеквизитовСтруктурнойЕдиницы.ИспользоватьОрдернуюСхемуПриОтгрузке Тогда
					
					ТекстИсключения = СтрШаблон(НСтр("ru = 'Невозможен ввод операции ""Расход с ордерного склада"".
					|склад ""%1"" не использует ордерную схему при отгрузке'"), СтруктурнаяЕдиница);
					
					ВызватьИсключениеВводНаОсновании(ДокументОснование, ТекстИсключения);
				КонецЕсли;
				
			КонецЕсли;
			
		КонецЕсли;
	
	КонецЕсли;
	
	Если Не ЗначениеЗаполнено(ПоложениеЯчейки) Или ПоложениеЯчейки = Перечисления.ПоложениеРеквизитаНаФорме.ВШапке Тогда
		Для Каждого СтрокаЗапасов Из Запасы Цикл
			СтрокаЗапасов.Ячейка = Ячейка;
		КонецЦикла;
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

Процедура ЗаполнитьШапкуПоСборкаЗапасов(ДокументСсылкаСборкаЗапасов, ЗначенияРеквизитов, МассивТЧОрдер)
	
	ДокументОснование = ДокументСсылкаСборкаЗапасов;
	
	Организация = ЗначенияРеквизитов.Организация;
	
	Если ЗначенияРеквизитов.ПоложениеСклада = Перечисления.ПоложениеРеквизитаНаФорме.ВТабличнойЧасти Тогда
		
		Если ЕстьОрдерныйСкладВТабЧасти(ДокументСсылкаСборкаЗапасов.Продукция) Тогда
			МассивТЧОрдер.Добавить("Продукция");
		КонецЕсли; 
		Если ЕстьОрдерныйСкладВТабЧасти(ДокументСсылкаСборкаЗапасов.Запасы) Тогда
			МассивТЧОрдер.Добавить("Запасы");
		КонецЕсли; 
		
		СтруктурнаяЕдиница = ЗначенияРеквизитов.СтруктурнаяЕдиницаПродукции;
		Ячейка = ЗначенияРеквизитов.ЯчейкаПродукции;
						
	Иначе
		
		Если ЗначенияРеквизитов.СтруктурнаяЕдиница.ОрдерныйСклад Тогда
			
			Если ЗначенияРеквизитов.ВидОперации = Перечисления.ВидыОперацийСборкаЗапасов.Сборка Тогда
				МассивТЧОрдер.Добавить("Запасы");
			Иначе
				МассивТЧОрдер.Добавить("Продукция");
			КонецЕсли;
			
			СтруктурнаяЕдиница = ЗначенияРеквизитов.СтруктурнаяЕдиница;
			Ячейка = ЗначенияРеквизитов.Ячейка;
			
		Иначе
			
			Если ЗначенияРеквизитов.СтруктурнаяЕдиницаПродукции.ОрдерныйСклад Тогда
				
				Если ЗначенияРеквизитов.ВидОперации = Перечисления.ВидыОперацийСборкаЗапасов.Сборка Тогда
					МассивТЧОрдер.Добавить("Запасы");
				Иначе
					МассивТЧОрдер.Добавить("Продукция");
				КонецЕсли;
				
				СтруктурнаяЕдиница = ЗначенияРеквизитов.СтруктурнаяЕдиницаПродукции;
				Ячейка = ЗначенияРеквизитов.ЯчейкаПродукции;
								
			КонецЕсли;
			
		КонецЕсли;
		
	КонецЕсли; 
	Если ЗначенияРеквизитов.СтруктурнаяЕдиницаОтходов.ОрдерныйСклад Тогда
		МассивТЧОрдер.Добавить("Отходы");
	КонецЕсли;
	
	Если МассивТЧОрдер.Количество() = 0 Тогда
		ВызватьИсключениеВводНаОсновании(ДокументСсылкаСборкаЗапасов);
	КонецЕсли;
	
КонецПроцедуры

Процедура ЗаполнитьТабличнуюЧастьПоСборкаЗапасов(ДокументСсылкаСборкаЗапасов, ЗначенияРеквизитов, МассивТЧОрдер) 
	
	ЗапросЗапасы = Новый Запрос;
	
	ЗапросЗапасы.Текст = 
	"ВЫБРАТЬ
	|	СборкаЗапасов.Продукция.(
	|		Номенклатура КАК Номенклатура,
	|		Характеристика КАК Характеристика,
	|		Партия КАК Партия,
	|		Количество КАК Количество,
	|		ЕдиницаИзмерения КАК ЕдиницаИзмерения,
	|		СерииНоменклатуры КАК СерииНоменклатуры,
	|		СборкаЗапасов.Продукция.СтруктурнаяЕдиница.ОрдерныйСклад
	|			И СборкаЗапасов.Продукция.СтруктурнаяЕдиница.ИспользоватьОрдернуюСхемуПриПоступлении КАК ОрдерныйСклад,
	|		КлючСвязи КАК КлючСвязи,
	|		Ячейка КАК Ячейка
	|	) КАК Продукция,
	|	СборкаЗапасов.Запасы.(
	|		Номенклатура КАК Номенклатура,
	|		Характеристика КАК Характеристика,
	|		Партия КАК Партия,
	|		Количество КАК Количество,
	|		ЕдиницаИзмерения КАК ЕдиницаИзмерения,
	|		СерииНоменклатуры КАК СерииНоменклатуры,
	|		СборкаЗапасов.Запасы.СтруктурнаяЕдиница.ОрдерныйСклад
	|			И СборкаЗапасов.Запасы.СтруктурнаяЕдиница.ИспользоватьОрдернуюСхемуПриПоступлении КАК ОрдерныйСклад,
	|		КлючСвязи КАК КлючСвязи,
	|		Ячейка КАК Ячейка
	|	) КАК Запасы,
	|	СборкаЗапасов.Отходы.(
	|		Номенклатура КАК Номенклатура,
	|		Характеристика КАК Характеристика,
	|		Партия КАК Партия,
	|		Количество КАК Количество,
	|		ЕдиницаИзмерения КАК ЕдиницаИзмерения,
	|		ЛОЖЬ КАК ОрдерныйСклад
	|	) КАК Отходы
	|ИЗ
	|	Документ.СборкаЗапасов КАК СборкаЗапасов
	|ГДЕ
	|	СборкаЗапасов.Ссылка = &ДокументОснование";
	
	ЗапросОстаткиИСерии = Новый Запрос(
	"ВЫБРАТЬ
	|	ЗапасыКРасходуСоСкладовОстатки.Номенклатура КАК Номенклатура,
	|	ЗапасыКРасходуСоСкладовОстатки.Характеристика КАК Характеристика,
	|	ЗапасыКРасходуСоСкладовОстатки.Партия КАК Партия,
	|	ВЫБОР
	|		КОГДА ЗапасыКРасходуСоСкладовОстатки.КоличествоОстаток < 0
	|			ТОГДА -ЗапасыКРасходуСоСкладовОстатки.КоличествоОстаток
	|		ИНАЧЕ ЗапасыКРасходуСоСкладовОстатки.КоличествоОстаток
	|	КОНЕЦ КАК Количество,
	|	ВЫБОР
	|		КОГДА &КонтролироватьОстаткиПоДокументам
	|			ТОГДА &ДокументОснование
	|		ИНАЧЕ НЕОПРЕДЕЛЕНО
	|	КОНЕЦ КАК ДокументПоступления,
	|	ЗапасыКРасходуСоСкладовОстатки.Ячейка КАК Ячейка
	|ПОМЕСТИТЬ ЗапасыОстаткиИтог
	|ИЗ
	|	РегистрНакопления.ЗапасыКРасходуСоСкладов.Остатки(
	|			,
	|			Организация = &Организация
	|				И СтруктурнаяЕдиница = &СтруктурнаяЕдиница
	|				И ДокументОснование = &ДокументОснование) КАК ЗапасыКРасходуСоСкладовОстатки
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ЗапасыКРасходуСоСкладов.Номенклатура,
	|	ЗапасыКРасходуСоСкладов.Характеристика,
	|	ЗапасыКРасходуСоСкладов.Партия,
	|	ВЫБОР
	|		КОГДА ЗапасыКРасходуСоСкладов.Количество < 0
	|			ТОГДА -ЗапасыКРасходуСоСкладов.Количество
	|		ИНАЧЕ ЗапасыКРасходуСоСкладов.Количество
	|	КОНЕЦ,
	|	ВЫБОР
	|		КОГДА &КонтролироватьОстаткиПоДокументам
	|			ТОГДА &ДокументОснование
	|		ИНАЧЕ НЕОПРЕДЕЛЕНО
	|	КОНЕЦ,
	|	ЗапасыКРасходуСоСкладов.Ячейка
	|ИЗ
	|	РегистрНакопления.ЗапасыКРасходуСоСкладов КАК ЗапасыКРасходуСоСкладов
	|ГДЕ
	|	ЗапасыКРасходуСоСкладов.ДокументОснование = &ДокументОснование
	|	И ЗапасыКРасходуСоСкладов.Регистратор = &Ссылка
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ЗапасыОстаткиИтог.Номенклатура КАК Номенклатура,
	|	ЗапасыОстаткиИтог.Характеристика КАК Характеристика,
	|	ЗапасыОстаткиИтог.Партия КАК Партия,
	|	СУММА(ЗапасыОстаткиИтог.Количество) КАК Количество,
	|	ЗапасыОстаткиИтог.ДокументПоступления КАК ДокументПоступления,
	|	ЗапасыОстаткиИтог.Ячейка КАК Ячейка
	|ИЗ
	|	ЗапасыОстаткиИтог КАК ЗапасыОстаткиИтог
	|
	|СГРУППИРОВАТЬ ПО
	|	ЗапасыОстаткиИтог.Номенклатура,
	|	ЗапасыОстаткиИтог.Ячейка,
	|	ЗапасыОстаткиИтог.Характеристика,
	|	ЗапасыОстаткиИтог.Партия,
	|	ЗапасыОстаткиИтог.ДокументПоступления
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	СборкаЗапасовЗапасы.Номенклатура КАК Номенклатура,
	|	СборкаЗапасовЗапасы.Характеристика КАК Характеристика,
	|	СборкаЗапасовЗапасы.Партия КАК Партия,
	|	СборкаЗапасовСерииНоменклатуры.Серия КАК Серия,
	|	СборкаЗапасовЗапасы.КлючСвязи КАК КлючСвязи,
	|	СборкаЗапасовСерииНоменклатуры.Количество КАК Количество
	|ИЗ
	|	Документ.СборкаЗапасов.Запасы КАК СборкаЗапасовЗапасы
	|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.СборкаЗапасов.СерииНоменклатуры КАК СборкаЗапасовСерииНоменклатуры
	|		ПО СборкаЗапасовЗапасы.КлючСвязи = СборкаЗапасовСерииНоменклатуры.КлючСвязи
	|ГДЕ
	|	СборкаЗапасовЗапасы.Ссылка = &ДокументОснование
	|	И СборкаЗапасовСерииНоменклатуры.Ссылка = &ДокументОснование
	|	И ВЫБОР
	|			КОГДА СборкаЗапасовЗапасы.Ссылка.ПоложениеСклада = ЗНАЧЕНИЕ(Перечисление.ПоложениеРеквизитаНаФорме.ВТабличнойЧасти)
	|				ТОГДА СборкаЗапасовЗапасы.СтруктурнаяЕдиница = &СтруктурнаяЕдиница
	|			ИНАЧЕ ИСТИНА
	|		КОНЕЦ
	|	И СборкаЗапасовЗапасы.Ссылка.ВидОперации = ЗНАЧЕНИЕ(Перечисление.ВидыОперацийСборкаЗапасов.Сборка)
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	СборкаЗапасовПродукция.Номенклатура,
	|	СборкаЗапасовПродукция.Характеристика,
	|	СборкаЗапасовПродукция.Партия,
	|	СборкаЗапасовСерииНоменклатурыПродукция.Серия,
	|	СборкаЗапасовПродукция.КлючСвязи,
	|	СборкаЗапасовСерииНоменклатурыПродукция.Количество
	|ИЗ
	|	Документ.СборкаЗапасов.Продукция КАК СборкаЗапасовПродукция
	|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.СборкаЗапасов.СерииНоменклатурыПродукция КАК СборкаЗапасовСерииНоменклатурыПродукция
	|		ПО СборкаЗапасовПродукция.КлючСвязи = СборкаЗапасовСерииНоменклатурыПродукция.КлючСвязи
	|ГДЕ
	|	СборкаЗапасовПродукция.Ссылка = &ДокументОснование
	|	И СборкаЗапасовСерииНоменклатурыПродукция.Ссылка = &ДокументОснование
	|	И ВЫБОР
	|			КОГДА СборкаЗапасовПродукция.Ссылка.ПоложениеСклада = ЗНАЧЕНИЕ(Перечисление.ПоложениеРеквизитаНаФорме.ВТабличнойЧасти)
	|				ТОГДА СборкаЗапасовПродукция.СтруктурнаяЕдиница = &СтруктурнаяЕдиница
	|			ИНАЧЕ ИСТИНА
	|		КОНЕЦ
	|	И СборкаЗапасовПродукция.Ссылка.ВидОперации = ЗНАЧЕНИЕ(Перечисление.ВидыОперацийСборкаЗапасов.Разборка)
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	СерииНоменклатурыКРасходуОстатки.Серия КАК Серия,
	|	СерииНоменклатурыКРасходуОстатки.КоличествоОстаток КАК Количество,
	|	СерииНоменклатурыКРасходуОстатки.Номенклатура КАК Номенклатура,
	|	СерииНоменклатурыКРасходуОстатки.Характеристика КАК Характеристика,
	|	СерииНоменклатурыКРасходуОстатки.Партия КАК Партия
	|ПОМЕСТИТЬ ОстаткиСерииИтог
	|ИЗ
	|	РегистрНакопления.СерииНоменклатурыКРасходу.Остатки(
	|			,
	|			Организация = &Организация
	|				И СтруктурнаяЕдиница = &СтруктурнаяЕдиница
	|				И ДокументОснование = &ДокументОснование) КАК СерииНоменклатурыКРасходуОстатки
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	СерииНоменклатурыКРасходу.Серия,
	|	СерииНоменклатурыКРасходу.Количество,
	|	СерииНоменклатурыКРасходу.Номенклатура,
	|	СерииНоменклатурыКРасходу.Характеристика,
	|	СерииНоменклатурыКРасходу.Партия
	|ИЗ
	|	РегистрНакопления.СерииНоменклатурыКРасходу КАК СерииНоменклатурыКРасходу
	|ГДЕ
	|	СерииНоменклатурыКРасходу.ДокументОснование = &ДокументОснование
	|	И СерииНоменклатурыКРасходу.Регистратор = &Ссылка
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ОстаткиСерииИтог.Серия КАК Серия,
	|	СУММА(ОстаткиСерииИтог.Количество) КАК Количество,
	|	ОстаткиСерииИтог.Номенклатура КАК Номенклатура,
	|	ОстаткиСерииИтог.Характеристика КАК Характеристика,
	|	ОстаткиСерииИтог.Партия КАК Партия
	|ИЗ
	|	ОстаткиСерииИтог КАК ОстаткиСерииИтог
	|
	|СГРУППИРОВАТЬ ПО
	|	ОстаткиСерииИтог.Партия,
	|	ОстаткиСерииИтог.Характеристика,
	|	ОстаткиСерииИтог.Номенклатура,
	|	ОстаткиСерииИтог.Серия");
	
	ЗапросОстаткиИСерии.УстановитьПараметр("Ссылка", Ссылка);
	ЗапросОстаткиИСерии.УстановитьПараметр("Организация", Константы.УчетПоКомпании.Компания(Организация));
	ЗапросОстаткиИСерии.УстановитьПараметр("СтруктурнаяЕдиница", СтруктурнаяЕдиница);
	
	ВидУчета = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(СтруктурнаяЕдиница, "ВидУчетаОрдерныхСкладов");
	КонтролироватьОстаткиПоДокументам = ВидУчета = Перечисления.ВидыУчетаОрдерныхСкладов.УчетОстатковПоПрочимДокументам;
	
	ЗапросОстаткиИСерии.УстановитьПараметр("КонтролироватьОстаткиПоДокументам", КонтролироватьОстаткиПоДокументам);
	ЗапросОстаткиИСерии.УстановитьПараметр("ДокументОснование", ?(КонтролироватьОстаткиПоДокументам, ДокументСсылкаСборкаЗапасов, Неопределено));
	
	ЗапросЗапасы.УстановитьПараметр("ДокументОснование", ?(КонтролироватьОстаткиПоДокументам, ДокументСсылкаСборкаЗапасов, Неопределено));
	
	ДокументПоступления = ?(КонтролироватьОстаткиПоДокументам, ДокументСсылкаСборкаЗапасов, Неопределено);
	
	Запасы.Очистить();
	СерииНоменклатуры.Очистить();
	
	РезультатЗапросаЗапасы = ЗапросЗапасы.Выполнить();
	Если РезультатЗапросаЗапасы.Пустой() Тогда
		Возврат;
	КонецЕсли;
	
	РезультатыЗапроса = ЗапросОстаткиИСерии.ВыполнитьПакет();
	
	ТаблицаСерииНоменклатуры = РезультатыЗапроса[2].Выгрузить();
	ТаблицаОстаткиСерииНоменклатуры = РезультатыЗапроса[4].Выгрузить();
	ТаблицаОстаткиЗапасы = РезультатыЗапроса[1].Выгрузить();
	
	ПараметрыПоискаСерии = Новый Структура("КлючСвязи");
	
	Если СкладскойУчетСервер.КонтролироватьОстаткиПоЯчейкамКПоступлениюОтгрзуке(СтруктурнаяЕдиница) Тогда
		ПараметрыПоискаОстаткиЗапасы = Новый Структура("Номенклатура, Характеристика, Партия, Ячейка");
	Иначе
		ПараметрыПоискаОстаткиЗапасы = Новый Структура("Номенклатура, Характеристика, Партия");
	КонецЕсли;
	
	ПараметрыПоискаОстаткиСерииНоменклатуры = Новый Структура("Номенклатура, Характеристика, Партия, Серия");
	
	ВыборкаЗапасы = РезультатЗапросаЗапасы.Выбрать();
	ВыборкаЗапасы.Следующий();
	Для Каждого ИмяТабличнойЧасти Из МассивТЧОрдер Цикл
		
		ТаблицаДНоменклатурыДокумента = ВыборкаЗапасы[ИмяТабличнойЧасти].Выгрузить();
		
		Для каждого СтрокаТаблицы Из ТаблицаДНоменклатурыДокумента Цикл
			
			Если Не ЗначениеЗаполнено(СтрокаТаблицы.Количество) Тогда
				Продолжить;
			КонецЕсли;
			
			ЗаполнитьЗначенияСвойств(ПараметрыПоискаОстаткиЗапасы, СтрокаТаблицы);
			НайденныеОстаткиЗапасы = ТаблицаОстаткиЗапасы.НайтиСтроки(ПараметрыПоискаОстаткиЗапасы);
			
			Если Не НайденныеОстаткиЗапасы.Количество() Или (НайденныеОстаткиЗапасы.Количество() И НайденныеОстаткиЗапасы[0].Количество = 0) Тогда
				Продолжить
			КонецЕсли;
			
			ОстатокЗапасов = НайденныеОстаткиЗапасы[0];
			
			Если Не ИмяТабличнойЧасти = "Отходы" Тогда
					
				Если СтрокаТаблицы.ОрдерныйСклад Тогда
					
					ЗаполнитьЗначенияСвойств(ПараметрыПоискаСерии, СтрокаТаблицы);
					НайденныеСерии = ТаблицаСерииНоменклатуры.НайтиСтроки(ПараметрыПоискаСерии);
					
					КоличествоСерий = 0;
					ИспользуютсяСерииВСтроке = Ложь;
					Для Каждого СтрокаСерии Из НайденныеСерии Цикл
						
						ИспользуютсяСерииВСтроке = Истина;
						
						ЗаполнитьЗначенияСвойств(ПараметрыПоискаОстаткиСерииНоменклатуры, СтрокаСерии);
						НайденныеОстаткиСерий = ТаблицаОстаткиСерииНоменклатуры.НайтиСтроки(ПараметрыПоискаОстаткиСерииНоменклатуры);
						
						Если Не НайденныеОстаткиСерий.Количество() Или (НайденныеОстаткиСерий.Количество() И НайденныеОстаткиСерий[0].Количество = 0) Тогда
							Продолжить
						КонецЕсли;
						
						ОстатокСерий = НайденныеОстаткиСерий[0];
						
						Если Не ОстатокСерий.Количество > 0 Тогда
							Продолжить;
						КонецЕсли;
						
						НоваяСтрокаСерии = СерииНоменклатуры.Добавить();
						ЗаполнитьЗначенияСвойств(НоваяСтрокаСерии, СтрокаСерии); 
						
						Если НоваяСтрокаСерии.Количество >= ОстатокСерий.Количество Тогда
							НоваяСтрокаСерии.Количество = ОстатокСерий.Количество;
						КонецЕсли;
						
						ОстатокСерий.Количество = ОстатокСерий.Количество - НоваяСтрокаСерии.Количество;
						
						КоличествоСерий = КоличествоСерий + НоваяСтрокаСерии.Количество;
						
					КонецЦикла;
					
					Если ИспользуютсяСерииВСтроке И КоличествоСерий = 0 Тогда
						Продолжить
					КонецЕсли;
					
					НоваяСтрокаЗапасы = Запасы.Добавить();
					ЗаполнитьЗначенияСвойств(НоваяСтрокаЗапасы, СтрокаТаблицы);
					НоваяСтрокаЗапасы.ДокументПоступления = ДокументПоступления;
					
					Если ТипЗнч(НоваяСтрокаЗапасы.ЕдиницаИзмерения) = ТИП("СправочникСсылка.КлассификаторЕдиницИзмерения") Тогда
						
						КоличествоВСтрокеЗапасов = ?(КоличествоСерий > 0, КоличествоСерий, НоваяСтрокаЗапасы.Количество);
						
						Если КоличествоВСтрокеЗапасов >= ОстатокЗапасов.Количество Тогда
							КоличествоВСтрокеЗапасов = ОстатокЗапасов.Количество;
							ОстатокЗапасов.Количество = 0;
						Иначе
							ОстатокЗапасов.Количество = ОстатокЗапасов.Количество - КоличествоВСтрокеЗапасов;
						КонецЕсли;
						
						НоваяСтрокаЗапасы.Количество = КоличествоВСтрокеЗапасов;
						
					Иначе
						КоличествоСтрокиВЕдиницахХранения = НоваяСтрокаЗапасы.Количество * НоваяСтрокаЗапасы.ЕдиницаИзмерения.Коэффициент;
						КоличествоВСтрокеЗапасов = ?(КоличествоСерий > 0, КоличествоСерий, КоличествоСтрокиВЕдиницахХранения);
						
						Если КоличествоВСтрокеЗапасов >= ОстатокЗапасов.Количество Тогда
							КоличествоВСтрокеЗапасов = ОстатокЗапасов.Количество;
							ОстатокЗапасов.Количество = 0;
						Иначе
							ОстатокЗапасов.Количество = ОстатокЗапасов.Количество - КоличествоВСтрокеЗапасов;
						КонецЕсли;
						
						НоваяСтрокаЗапасы.Количество = КоличествоВСтрокеЗапасов/ НоваяСтрокаЗапасы.ЕдиницаИзмерения.Коэффициент;
					КонецЕсли;
					
					Если СерииНоменклатурыУНФ.ИспользоватьСерииНоменклатурыОстатки() = Истина Тогда
						НоваяСтрокаЗапасы.СерииНоменклатуры = СерииНоменклатурыУНФ.ПредставлениеСерийНоменклатуры(СерииНоменклатуры, НоваяСтрокаЗапасы.КлючСвязи)
					КонецЕсли;
					
				КонецЕсли;
			Иначе
				НоваяСтрока = Запасы.Добавить();
				ЗаполнитьЗначенияСвойств(НоваяСтрока, СтрокаТаблицы);
			КонецЕсли;
			
		КонецЦикла;
	КонецЦикла;
	
КонецПроцедуры 

Процедура ЗаполнитьТабличнуюЧастьПоОстаткамСУчетомСерий(РезультатыЗапроса, СтруктурнаяЕдиница) 
	
	Если РезультатыЗапроса[2].Пустой() Тогда
		Возврат;
	КонецЕсли;
	
	ТаблицаСерииНоменклатуры = РезультатыЗапроса[3].Выгрузить();
	ТаблицаОстаткиСерииНоменклатуры = РезультатыЗапроса[5].Выгрузить();
	ТаблицаОстаткиЗапасы = РезультатыЗапроса[2].Выгрузить();
	
	ВыборкаЗапасы = РезультатыЗапроса[0].Выбрать();
	
	ПараметрыПоискаСерии = Новый Структура("КлючСвязи");
	
	Если СкладскойУчетСервер.КонтролироватьОстаткиПоЯчейкамКПоступлениюОтгрзуке(СтруктурнаяЕдиница) Тогда
		ПараметрыПоискаОстаткиЗапасы = Новый Структура("Номенклатура, Характеристика, Партия, Ячейка");
	Иначе
		ПараметрыПоискаОстаткиЗапасы = Новый Структура("Номенклатура, Характеристика, Партия");
	КонецЕсли;
	
	ПараметрыПоискаОстаткиСерииНоменклатуры = Новый Структура("Номенклатура, Характеристика, Партия, Серия");

	Пока ВыборкаЗапасы.Следующий() Цикл
		
		Если Не ЗначениеЗаполнено(ВыборкаЗапасы.Количество) Тогда
			Продолжить;
		КонецЕсли;
		
		ЗаполнитьЗначенияСвойств(ПараметрыПоискаОстаткиЗапасы, ВыборкаЗапасы);
		НайденныеОстаткиЗапасы = ТаблицаОстаткиЗапасы.НайтиСтроки(ПараметрыПоискаОстаткиЗапасы);
		
		Если Не НайденныеОстаткиЗапасы.Количество() Или (НайденныеОстаткиЗапасы.Количество() И НайденныеОстаткиЗапасы[0].Количество = 0) Тогда
			Продолжить
		КонецЕсли;
		
		ОстатокЗапасов = НайденныеОстаткиЗапасы[0];
		
		ЗаполнитьЗначенияСвойств(ПараметрыПоискаСерии, ВыборкаЗапасы);
		НайденныеСерии = ТаблицаСерииНоменклатуры.НайтиСтроки(ПараметрыПоискаСерии);
		
		КоличествоСерий = 0;
		ИспользуютсяСерииВСтроке = Ложь;
		Для Каждого СтрокаСерии Из НайденныеСерии Цикл
			
			ЗаполнитьЗначенияСвойств(ПараметрыПоискаОстаткиСерииНоменклатуры, СтрокаСерии);
			НайденныеОстаткиСерий = ТаблицаОстаткиСерииНоменклатуры.НайтиСтроки(ПараметрыПоискаОстаткиСерииНоменклатуры);
			
			ИспользуютсяСерииВСтроке = Истина;
			
			Если Не НайденныеОстаткиСерий.Количество() Или (НайденныеОстаткиСерий.Количество() И НайденныеОстаткиСерий[0].Количество = 0) Тогда
				Продолжить
			КонецЕсли;
			
			ОстатокСерий = НайденныеОстаткиСерий[0];
			
			Если Не ОстатокСерий.Количество > 0 Тогда
				Продолжить;
			КонецЕсли;
			
			НоваяСтрокаСерии = СерииНоменклатуры.Добавить();
			ЗаполнитьЗначенияСвойств(НоваяСтрокаСерии, СтрокаСерии); 
			
			Если НоваяСтрокаСерии.Количество >= ОстатокСерий.Количество Тогда
				НоваяСтрокаСерии.Количество = ОстатокСерий.Количество;
			КонецЕсли;
			
			ОстатокСерий.Количество = ОстатокСерий.Количество - НоваяСтрокаСерии.Количество;
			
			КоличествоСерий = КоличествоСерий + НоваяСтрокаСерии.Количество;
			
		КонецЦикла;
		
		Если ИспользуютсяСерииВСтроке И КоличествоСерий = 0 Тогда
			Продолжить
		КонецЕсли;
		
		НоваяСтрокаЗапасы = Запасы.Добавить();
		ЗаполнитьЗначенияСвойств(НоваяСтрокаЗапасы, ВыборкаЗапасы);
		
		Если ТипЗнч(НоваяСтрокаЗапасы.ЕдиницаИзмерения) = ТИП("СправочникСсылка.КлассификаторЕдиницИзмерения") Тогда
			
			КоличествоВСтрокеЗапасов = ?(КоличествоСерий > 0, КоличествоСерий, НоваяСтрокаЗапасы.Количество);
			
			Если КоличествоВСтрокеЗапасов >= ОстатокЗапасов.Количество Тогда
				КоличествоВСтрокеЗапасов = ОстатокЗапасов.Количество;
				ОстатокЗапасов.Количество = 0;
			Иначе
				ОстатокЗапасов.Количество = ОстатокЗапасов.Количество - КоличествоВСтрокеЗапасов;
			КонецЕсли;
			
			НоваяСтрокаЗапасы.Количество = КоличествоВСтрокеЗапасов;
			
		Иначе
			
			КоличествоСтрокиВЕдиницахХранения = НоваяСтрокаЗапасы.Количество * НоваяСтрокаЗапасы.ЕдиницаИзмерения.Коэффициент;
			КоличествоВСтрокеЗапасов = ?(КоличествоСерий > 0, КоличествоСерий, КоличествоСтрокиВЕдиницахХранения);
			
			Если КоличествоВСтрокеЗапасов >= ОстатокЗапасов.Количество Тогда
				КоличествоВСтрокеЗапасов = ОстатокЗапасов.Количество;
				ОстатокЗапасов.Количество = 0;
			Иначе
				ОстатокЗапасов.Количество = ОстатокЗапасов.Количество - КоличествоВСтрокеЗапасов;
			КонецЕсли;
			
			НоваяСтрокаЗапасы.Количество = КоличествоВСтрокеЗапасов/ НоваяСтрокаЗапасы.ЕдиницаИзмерения.Коэффициент;
			
		КонецЕсли;
		
		Если СерииНоменклатурыУНФ.ИспользоватьСерииНоменклатурыОстатки() = Истина Тогда
			НоваяСтрокаЗапасы.СерииНоменклатуры = СерииНоменклатурыУНФ.ПредставлениеСерийНоменклатуры(СерииНоменклатуры, НоваяСтрокаЗапасы.КлючСвязи)
		КонецЕсли;
			
	КонецЦикла;
	
КонецПроцедуры

Функция ЕстьОрдерныйСкладВТабЧасти(ТабЧасть, ВернутьОрдерныйСклад = Ложь) 
	
	ЗначенияРеквизитовСкладТЧ = ТабЧасть.ВыгрузитьКолонку("СтруктурнаяЕдиница");
	ЗначенияОрдерныйСклад = ОбщегоНазначения.ЗначениеРеквизитаОбъектов(ЗначенияРеквизитовСкладТЧ, "ОрдерныйСклад");
	ЗначенияУчастоватьПриОтгрузке = ОбщегоНазначения.ЗначениеРеквизитаОбъектов(ЗначенияРеквизитовСкладТЧ, "ИспользоватьОрдернуюСхемуПриОтгрузке");
	ВидУчетаОрдерныхСкладов = ОбщегоНазначения.ЗначениеРеквизитаОбъектов(ЗначенияРеквизитовСкладТЧ, "ВидУчетаОрдерныхСкладов");
	
	Для каждого СкладТЧ Из ЗначенияРеквизитовСкладТЧ Цикл
		
		ОрдерныйСклад = ЗначенияОрдерныйСклад.Получить(СкладТЧ);
		
		Если ОрдерныйСклад = Ложь Тогда
			Продолжить;
		КонецЕсли;
		
		ОрдернаяСхема = ВидУчетаОрдерныхСкладов.Получить(СкладТЧ);
		
		Если ЗначениеЗаполнено(ОрдернаяСхема) И Не ОрдернаяСхема = Перечисления.ВидыУчетаОрдерныхСкладов.ПоСкладуВЦелом Тогда
			Если ВернутьОрдерныйСклад Тогда
				Возврат Новый Структура("ЕстьОрдерныйСклад, СтруктурнаяЕдиница", ЗначенияУчастоватьПриОтгрузке.Получить(СкладТЧ), СкладТЧ);
			Иначе
				Возврат ЗначенияУчастоватьПриОтгрузке.Получить(СкладТЧ)
			КонецЕсли;
		Иначе
			Если ВернутьОрдерныйСклад Тогда
				Возврат Новый Структура("ЕстьОрдерныйСклад, СтруктурнаяЕдиница", Истина, СкладТЧ);
			Иначе
				Возврат Истина
			КонецЕсли
		КонецЕсли;
		
	КонецЦикла;
	
	Если ВернутьОрдерныйСклад Тогда
		Возврат Новый Структура("ЕстьОрдерныйСклад, СтруктурнаяЕдиница", Ложь, Неопределено);
	Иначе
		Возврат Ложь
	КонецЕсли;
	
КонецФункции

#КонецОбласти 

#Иначе
ВызватьИсключение НСтр("ru = 'Недопустимый вызов объекта на клиенте.'");
#КонецЕсли