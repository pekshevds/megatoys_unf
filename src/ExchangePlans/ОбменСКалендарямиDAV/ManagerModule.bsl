#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область ПрограммныйИнтерфейс

// Функция - Узел для Внешнего календаря Яндекс, Mail.ru, iCloud
// Возвращает ссылку на узел плана обмена, соответствующий одному из внешних календарей Яндекс, Mail.ru, iCloud
// В случае отсутствия создает новый узел и возвращает ссылку на него
//
// Параметры:
//  КалендарьСотрудника - СправочникСсылка.КалендариСотрудника
// 
// Возвращаемое значение:
//  ПланОбменаСсылка.ОбменСКалендарямиDAV - ссылка на узел плана обмена одного из внешних календарей Яндекс, Mail.ru, iCloud
//
Функция УзелДляВнешнегоКалендаря(КалендарьСотрудника) Экспорт
	
	НастройкаСинхронизации = РегистрыСведений.НастройкиСинхронизацииСВнешнимиКалендарями.НайтиПоКалендарюСотрудника(КалендарьСотрудника);
	
	УстановитьПривилегированныйРежим(Истина);
	
	Запрос = Новый Запрос(
	"ВЫБРАТЬ ПЕРВЫЕ 1
	|	ОбменСКалендарямиDAV.Ссылка КАК Ссылка
	|ИЗ
	|	ПланОбмена.ОбменСКалендарямиDAV КАК ОбменСКалендарямиDAV
	|ГДЕ
	|	НЕ ОбменСКалендарямиDAV.ЭтотУзел
	|	И ОбменСКалендарямиDAV.УчетнаяЗаписьВнешнегоКалендаря = &УчетнаяЗаписьВнешнегоКалендаря");
	Запрос.УстановитьПараметр("УчетнаяЗаписьВнешнегоКалендаря", НастройкаСинхронизации.УчетнаяЗаписьВнешнегоКалендаря);
	
	РезультатЗапроса = Запрос.Выполнить();
	
	Если РезультатЗапроса.Пустой() Тогда
		ПланыОбменаОбъект = ПланыОбмена.ОбменСКалендарямиDAV.СоздатьУзел();
		ПланыОбменаОбъект.УстановитьНовыйКод();
		ПланыОбменаОбъект.УчетнаяЗаписьВнешнегоКалендаря = НастройкаСинхронизации.УчетнаяЗаписьВнешнегоКалендаря;
 		ПланыОбменаОбъект.Наименование = НастройкаСинхронизации.УчетнаяЗаписьВнешнегоКалендаря.Наименование;
		ПланыОбменаОбъект.Записать();
		Возврат ПланыОбменаОбъект.Ссылка;
	КонецЕсли;
	
	Выборка = РезультатЗапроса.Выбрать();
	Выборка.Следующий();
	Возврат Выборка.Ссылка;
	
КонецФункции

#КонецОбласти

#КонецЕсли