#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область ОбработчикиСобытий

Процедура ПередЗаписью(Отказ)
	
	Перем РазрешенРасширенныйРежимНастройкиОбменаУРМК;
	
	Если ОбменДанными.Загрузка Тогда
		Возврат;
	КонецЕсли;

	Если ОбменДаннымиСервер.НадоВыполнитьОбработчикПослеЗагрузкиДанных(ЭтотОбъект, Ссылка) Тогда
		ПослеЗагрузкиДанных(Отказ);
	КонецЕсли;
	ЗарегистрироватьТорговыйОбъектКОтправкеПриНеобходимости();

	РежимВыгрузкиПриНеобходимости = Перечисления.РежимыВыгрузкиОбъектовОбмена.ВыгружатьПриНеобходимости;

КонецПроцедуры

Процедура ПослеЗагрузкиДанных(Отказ)

	ОтложеннаяОбработкаЗакрытиеСмены();
		
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

Процедура ОтложеннаяОбработкаЗакрытиеСмены()

	Перем ОписаниеОшибки;
	
	#Область ТекстЗапроса
	ТекстЗапроса = 
	"ВЫБРАТЬ
	|	КассоваяСмена.Ссылка КАК ПроблемныйОбъект
	|ИЗ
	|	Документ.КассоваяСмена КАК КассоваяСмена
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ПланОбмена.ОбменСУРМК.КассыККМ КАК ОбменСУРМККассыККМ
	|		ПО КассоваяСмена.КассаККМ = ОбменСУРМККассыККМ.КассаККМ
	|ГДЕ
	|	КассоваяСмена.Проведен = ЛОЖЬ
	|	И КассоваяСмена.ПометкаУдаления = ЛОЖЬ
	|	И КассоваяСмена.Статус = ЗНАЧЕНИЕ(Перечисление.СтатусыКассовойСмены.Закрыта)
	|	И ОбменСУРМККассыККМ.Ссылка = &УзелИнформационнойБазы
	|
	|УПОРЯДОЧИТЬ ПО
	|	КассоваяСмена.Дата";
	#КонецОбласти
	
	Запрос 	= Новый Запрос(ТекстЗапроса);
	Запрос.УстановитьПараметр("УзелИнформационнойБазы", Ссылка);
	
	Выборка = Запрос.Выполнить().Выбрать();

	Пока Выборка.Следующий() Цикл	
		
		ПроблемныйОбъект 		= Выборка.ПроблемныйОбъект.ПолучитьОбъект();
		ПроблемныйОбъект.Записать(РежимЗаписиДокумента.Проведение);
		
		ЕстьОшибки				= Ложь; 
		ОтчетОРозничныхПродажах = Документы.ОтчетОРозничныхПродажах.ПолучитьОтчетОРозничныхПродажахПоКассовойСмене(ПроблемныйОбъект.Ссылка);
		
		Если ОтчетОРозничныхПродажах <> Неопределено Тогда
			СформироватьДокументВыемки(ПроблемныйОбъект.КассаККМ, ОтчетОРозничныхПродажах, ЕстьОшибки, ОписаниеОшибки);
		КонецЕсли;
				
		Если ЕстьОшибки Тогда
			
			ШаблонОшибки = НСтр("ru = 'При обработке кассовой смены произошла ошибка.
		                            |Дополнительное описание:
		                            |%1'");
			
			ЗаписьЖурналаРегистрации(
				ОбменДаннымиСервер.СобытиеЖурналаРегистрацииОбменДанными(),
				УровеньЖурналаРегистрации.Ошибка,,, 
				СтрШаблон(ШаблонОшибки, ОписаниеОшибки));    
				
		КонецЕсли;
			
	КонецЦикла;

КонецПроцедуры

Функция СформироватьДокументВыемки(КассаККМ, ОтчетОРозничныхПродажах, ЕстьОшибки, ОписаниеОшибки)
	
	СуммаДокумента = РозничныеПродажиСервер.ПолучитьОстатокДенежныхСредствВКассеККМ(КассаККМ);
	
	Если СуммаДокумента > 0  Тогда
		
		ДокументВыемка = Документы.ВыемкаНаличных.СоздатьДокумент();
		СтруктураЗаполнения = Новый Структура;
		СтруктураЗаполнения.Вставить("Дата", ТекущаяДатаСеанса());
		СтруктураЗаполнения.Вставить("СуммаДокумента", СуммаДокумента);
		СтруктураЗаполнения.Вставить("КассаККМ", КассаККМ);
		СтруктураЗаполнения.Вставить("ВалютаДенежныхСредств", КассаККМ.ВалютаДенежныхСредств);
		СтруктураЗаполнения.Вставить("Организация", КассаККМ.Владелец);
		СтруктураЗаполнения.Вставить("ОтчетОРозничныхПродажах", ОтчетОРозничныхПродажах);
		ДокументВыемка.Заполнить(СтруктураЗаполнения);
		
		Попытка
			ДокументВыемка.Записать(РежимЗаписиДокумента.Проведение);
		Исключение
			ОписаниеОшибки = ПодробноеПредставлениеОшибки(ИнформацияОбОшибке());
			ЕстьОшибки 	   = Истина;
		КонецПопытки;
		
		Возврат ДокументВыемка.Ссылка;
		
	Иначе
		
		Возврат Неопределено;
		
	КонецЕсли;
	
КонецФункции

Процедура ЗарегистрироватьТорговыйОбъектКОтправкеПриНеобходимости()
	
	Если ЗначениеЗаполнено(ТорговыйОбъект)
			И Не (Ссылка.Пустая() Или ХранитьКартыЛояльностиВРМК = Ссылка.ХранитьКартыЛояльностиВРМК) Тогда
			
		ПланыОбмена.ЗарегистрироватьИзменения(Ссылка, ТорговыйОбъект);
		
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Иначе
ВызватьИсключение НСтр("ru = 'Недопустимый вызов объекта на клиенте.'");
#КонецЕсли