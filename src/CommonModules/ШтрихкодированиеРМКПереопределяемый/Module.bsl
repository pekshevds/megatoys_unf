
///////////////////////////////////////////////////////////////////////////////////////////////////////
// Copyright (c) 2022, ООО 1С-Софт
// Все права защищены. Эта программа и сопроводительные материалы предоставляются 
// в соответствии с условиями лицензии Attribution 4.0 International (CC BY 4.0)
// Текст лицензии доступен по ссылке:
// https://creativecommons.org/licenses/by/4.0/legalcode
///////////////////////////////////////////////////////////////////////////////////////////////////////

#Область ПрограммныйИнтерфейс

// Разбор марки и заполнение параметров строки с товарами, которые содержатся в марке.
//
// Параметры:
//  СтандартнаяОбработка - Булево - установить в Ложь если используется свой алгоритм.
//  СтрокаТовары - ДанныеФормыЭлементКоллекции - строка с заполненными данными по товару.
//  КодМарки - Строка - код марки.
//  ОсобенностьУчета - ОпределяемыйТип.ОсобенностиУчетаНоменклатурыРМК - особенность учета товара.
//  ПараметрыШтрихкодирования - Структура - параметры для обработки результата.
//
Процедура РазобратьМаркуИЗаполнитьДанные(СтандартнаяОбработка, СтрокаТовары, КодМарки, ОсобенностьУчета, ПараметрыШтрихкодирования) Экспорт
КонецПроцедуры

// Заполняет представление единицы измерения номенклатуры.
//
// Параметры:
//  ТекущаяСтрока - ДанныеФормыЭлементКоллекции - строка с заполненными данными по товару.
//  ПредставлениеЕИ - Строка - представление единицы измерения номенклатуры.
//
Процедура ЗаполнитьПредставлениеЕдиницыИзмерения(ТекущаяСтрока, ПредставлениеЕИ) Экспорт
	
	ШтрихкодированиеРМКУНФ.ЗаполнитьПредставлениеЕдиницыИзмерения(ТекущаяСтрока, ПредставлениеЕИ);
	
КонецПроцедуры

// Поиск кассира по считанному коду.
//
// Параметры:
//  Объект - ДанныеФормыСтруктура - форма, в которой переопределяются значения.
//  Штрихкод - Строка - код, по которому выполняется поиск.
//
Процедура ВыполнитьПоискКассира(Объект, Штрихкод) Экспорт
	
	ШтрихкодированиеРМКУНФ.ВыполнитьПоискКассира(Объект, Штрихкод);
	
КонецПроцедуры

// Заполняет структуру кассира если владельцем является пользователь или физическое лицо.
//
// Параметры:
//  ВладелецШтрихкода - СправочникСсылка - объект для проверки и заполнения структуры.
//  Форма - ФормаКлиентскогоПриложения - форма рабочего места кассира.
//  НайденныйКассир - Структура - содержащая данные кассира
//
Процедура ЗаполнитьДанныеНайденногоКассира(ВладелецШтрихкода, Форма, НайденныйКассир) Экспорт
	
	ШтрихкодированиеРМКУНФ.ЗаполнитьДанныеНайденногоКассира(ВладелецШтрихкода, Форма, НайденныйКассир);
	
КонецПроцедуры

// Заполняет структуру дисконтной карты если владельцем является карта лояльности.
//
// Параметры:
//  ВладелецШтрихкода - СправочникСсылка - объект для проверки и заполнения структуры.
//  НайденнаяКартаЛояльности - Структура - содержащая данные карты лояльности
//
Процедура ЗаполнитьДанныеНайденнойКартыЛояльности(ВладелецШтрихкода, НайденнаяКартаЛояльности) Экспорт
	
	ШтрихкодированиеРМКУНФ.ЗаполнитьДанныеНайденнойКартыЛояльности(ВладелецШтрихкода, НайденнаяКартаЛояльности);
	
КонецПроцедуры

// Заполняет структуру дисконтной карты
//
// Параметры:
//  МагнитныйКод - Строка - код, по которому выполняется поиск;
//  НомерТелефона - Строка - (необязательный) номер телефона владельца карты
//  ДанныеКарты - Структура,Неопределено - Параметры дисконтной карты, или Неопределено если карта не найдена
//
Процедура ЗаполнитьДанныеКартыЛояльностиПоМагнитномуКоду(МагнитныйКод, НомерТелефона = Неопределено, ДанныеКарты) Экспорт
	
	ШтрихкодированиеРМКУНФ.ЗаполнитьДанныеКартыЛояльностиПоМагнитномуКоду(МагнитныйКод, НомерТелефона, ДанныеКарты);
	
КонецПроцедуры

// Заполняет сведения о существующей для номенклатуры упаковки
//
// Параметры:
//  Номенклатура - СправочникСсылка.Номенклатура - номенклатура, для запроса информации об упаковке
//  ДанныеУпаковки - Структура
//     *Коэффициент - Число - коэффициент кратности упаковки
//     *Упаковка - СправочникСсылка.Упаковки - найденная упаковка для номенклатуры
//
Процедура ЗаполнитьДанныеУпаковкиДляТовара(Номенклатура, ДанныеУпаковки) Экспорт
	
	ШтрихкодированиеРМКУНФ.ЗаполнитьДанныеУпаковкиДляТовара(Номенклатура, ДанныеУпаковки);
	
КонецПроцедуры

// Заполняет структуру позиции номенклатуры если владельцем является номенклатура.
//
// Параметры:
//  СтрокаРезультата - Структура - параметры для проверки и заполнения.
//  Форма - ФормаКлиентскогоПриложения - форма рабочего места кассира.
//  ПараметрыДляОбработкиШтрихкода - Структура - данные для обработки штрихкода.
//  НайденнаяНоменклатура - Структура - содержащая данные номенклатуры
//     * Весовой - Булево
//     * Количество - Число
//     * КоличествоУпаковок - Число
//     * Маркируемый - Булево
//     * НеобходимостьВводаСерии - Булево
//     * Номенклатура - ОпределяемыйТип.НоменклатураРМК
//     * ОсобенностьУчета - ОпределяемыйТип.ОсобенностиУчетаНоменклатурыРМК
//     * ПредставлениеНоменклатураХарактеристика - Строка
//     * Серия - ОпределяемыйТип.СерияРМК
//     * СистемаНалогообложения - ОпределяемыйТип.ТипыСистемНалогообложенияККТРМК
//     * СтавкаНДС - ОпределяемыйТип.СтавкаНДСРМК
//     * ТипНоменклатуры - ОпределяемыйТип.ТипыНоменклатурыРМК
//     * Упаковка - ОпределяемыйТип.УпаковкаРМК
//     * Фасованный - Булево
//     * Характеристика - ОпределяемыйТип.ХарактеристикаРМК
//     * Цена - Число
//     * Штрихкод - Строка
//     * Организация - ОпределяемыйТип.ОрганизацияРМК
//     * Партия - ОпределяемыйТип.ПартияРМК
//     * ИспользоватьПартии - Булево
//     * ПроверятьЗаполнениеПартий - Булево
//     * ПроверятьЗаполнениеСерий - Булево
//     * УникальностьСерии - Булево
//     * ЭтоНабор - Булево
//
Процедура ЗаполнитьДанныеНайденнойНоменклатуры(СтрокаРезультата, Форма, ПараметрыДляОбработкиШтрихкода, НайденнаяНоменклатура) Экспорт
	
	ШтрихкодированиеРМКУНФ.ЗаполнитьДанныеНайденнойНоменклатуры(СтрокаРезультата, Форма, ПараметрыДляОбработкиШтрихкода, НайденнаяНоменклатура);
	
КонецПроцедуры

// Заполняет серию номенклатуры если ею является.
//
// Параметры:
//  ВладелецШтрихкода - СправочникСсылка - объект для проверки и заполнения структуры.
//  НайденнаяСерияНоменклатуры - ОпределяемыйТип.СерияНоменклатурыШтрихкода
//
Процедура ЗаполнитьДанныеНайденнойСерииНоменклатуры(ВладелецШтрихкода, НайденнаяСерияНоменклатуры) Экспорт
	
	ШтрихкодированиеРМКУНФ.ЗаполнитьДанныеНайденнойСерииНоменклатуры(ВладелецШтрихкода, НайденнаяСерияНоменклатуры);
	
КонецПроцедуры

// Заполняет партию номенклатуры если ею является.
//
// Параметры:
//  ВладелецШтрихкода - СправочникСсылка - объект для проверки и заполнения структуры.
//  НайденнаяПартияНоменклатуры - ОпределяемыйТип.ПартияНоменклатурыШтрихкода
//
Процедура ЗаполнитьДанныеНайденнойПартииНоменклатуры(ВладелецШтрихкода, НайденнаяПартияНоменклатуры) Экспорт
	
	ШтрихкодированиеРМКУНФ.ЗаполнитьДанныеНайденнойПартииНоменклатуры(ВладелецШтрихкода, НайденнаяПартияНоменклатуры);
	
КонецПроцедуры

// Заполняет признак того, нужно ли проверять статус акцизной марки.
//
// Параметры:
//  НужнаПроверкаСтатусаМарки - Булево - Истина, если нужна проверка статуса марки.
//
Процедура ЗаполнитьПризнакНеобходимостиПроверкиСтатусаМарки(НужнаПроверкаСтатусаМарки) Экспорт
	
	ШтрихкодированиеРМКУНФ.ЗаполнитьПризнакНеобходимостиПроверкиСтатусаМарки(НужнаПроверкаСтатусаМарки);
	
КонецПроцедуры

// Проверка статуса марки.
//
// Параметры:
//  ПараметрыПроверки - Структура - параметры для проверки марки.
//
Процедура ПроверитьСтатусМарки(ПараметрыПроверки) Экспорт
	
	ШтрихкодированиеРМКУНФ.ПроверитьСтатусМарки(ПараметрыПроверки);
	
КонецПроцедуры

#КонецОбласти
