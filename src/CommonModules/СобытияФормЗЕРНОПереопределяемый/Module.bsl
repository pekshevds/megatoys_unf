#Область ПрограммныйИнтерфейс

#Область Локализация

// Переопределение параметров интеграции ЗЕРНО (расположения форматированной строки)
//
// Параметры:
//   Форма            - ФормаКлиентскогоПриложения - прикладная форма для встраивания форматированной строки
//   ПараметрыНадписи - см. СобытияФормИС.ПараметрыИнтеграцииДляДокументаОснования
Процедура ПриОпределенииПараметровИнтеграцииЗЕРНО(Форма, ПараметрыНадписи) Экспорт
	
	Возврат;
	
КонецПроцедуры

Процедура ПослеЗаписиНаСервере(Форма) Экспорт
	
	Возврат;
	
КонецПроцедуры

Процедура ПриСозданииНаСервере(Форма, Отказ, СтандартнаяОбработка) Экспорт
	
	Возврат;
	
КонецПроцедуры


Процедура ПриЧтенииНаСервере(Форма, ТекущийОбъект) Экспорт
	
	Возврат;
	
КонецПроцедуры

#Область СобытияЭлементовФорм

// Серверная переопределяемая процедура, вызываемая из обработчика события элемента.
//
// Параметры:
//   Форма                   - ФормаКлиентскогоПриложения - форма, из которой происходит вызов процедуры.
//   Элемент                 - Строка           - имя элемента-источника события "При изменении"
//   ДополнительныеПараметры - Структура        - значения дополнительных параметров влияющих на обработку.
//
Процедура ПриИзмененииЭлемента(Форма, Элемент, ДополнительныеПараметры) Экспорт
	
	Возврат;
	
КонецПроцедуры

#КонецОбласти

#КонецОбласти

// Заполняет табличную часть подобранными товарами.
//
// Параметры:
//  Форма - ФормаКлиентскогоПриложения - форма, в которой производится подбор,
//  ВыбранноеЗначение - Произвольный - данные, содержащие подобранную пользователем номенклатуру,
//  ПараметрыЗаполнения - Структура - дополнительные параметры заполнения
//  ПараметрыЗаполнения - Структура - параметры заполнения,
//  КэшированныеЗначения - Неопределено, Структура - сохраненные значения параметров, используемых при обработке,
//  ДобавленныеСтроки - Неопределено, Массив из ДанныеФормыЭлементКоллекции - массив добавленных строк таблицы товаров
Процедура ОбработкаРезультатаПодбораНоменклатуры(
	Форма, ВыбранноеЗначение, ПараметрыЗаполнения,
	КэшированныеЗначения = Неопределено, ДобавленныеСтроки = Неопределено) Экспорт
	
	Если ВыбранноеЗначение = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	Если ВыбранноеЗначение.Свойство("АдресТоваровВХранилище") Тогда
		АдресТоваровВХранилище = ВыбранноеЗначение.АдресТоваровВХранилище
	Иначе
		АдресТоваровВХранилище = ВыбранноеЗначение.АдресКорзиныВХранилище
	КонецЕсли;
	
	ПараметрыУказанияСерий = Неопределено;
	ПараметрыЗаполнения.Свойство("ПараметрыУказанияСерий", ПараметрыУказанияСерий);
	
	ТаблицаТоваров = ПолучитьИзВременногоХранилища(АдресТоваровВХранилище);
	
	ТекущаяСтрока = Неопределено;
	Для каждого СтрокаТовара Из ТаблицаТоваров Цикл
		
		ТекущаяСтрока = Форма.Объект.Товары.Добавить();
		
		СписокСвойств = "Номенклатура, Характеристика";
		Если ТекущаяСтрока.Свойство("Количество") Тогда
			СписокСвойств = СписокСвойств + ", Количество";
		КонецЕсли;
		
		ЗаполнитьЗначенияСвойств(ТекущаяСтрока, СтрокаТовара, СписокСвойств);
		
		Если ТекущаяСтрока.Свойство("КоличествоУпаковок") Тогда
			ТекущаяСтрока.КоличествоУпаковок = ТекущаяСтрока.Количество;
		КонецЕсли;
		
		ПриИзмененииНоменклатуры(Форма, ТекущаяСтрока, КэшированныеЗначения, ПараметрыУказанияСерий);
		
	КонецЦикла;
	
	Если ТекущаяСтрока <> Неопределено Тогда
		Форма.Элементы.Товары.ТекущаяСтрока = ТекущаяСтрока.ПолучитьИдентификатор();
	КонецЕсли;;
	
КонецПроцедуры

// Выполняет действия при изменении номенклатуры в строке табличной части.
//
// Параметры:
//  Форма                  - ФормаКлиентскогоПриложения - форма, в которой произошло событие,
//  ТекущаяСтрока          - ДанныеФормыЭлементКоллекции - редактируемая строка таблицы,
//  КэшированныеЗначения   - Структура - сохраненные значения параметров, используемых при обработке,
//  ПараметрыУказанияСерий - Структура - (См. ИнтеграцияИС.ПараметрыУказанияСерий).
Процедура ПриИзмененииНоменклатуры(Форма, ТекущаяСтрока, КэшированныеЗначения, ПараметрыУказанияСерий = Неопределено) Экспорт
	
	Объект = Неопределено;
	ИмяТабличнойЧасти = "";
	Если ОбщегоНазначенияКлиентСервер.ЕстьРеквизитИлиСвойствоОбъекта(Форма, "Объект") Тогда
		Если ОбщегоНазначенияКлиентСервер.ЕстьРеквизитИлиСвойствоОбъекта(Форма.Объект, "Запасы") Тогда
			ИмяТабличнойЧасти = "Запасы";
		ИначеЕсли ОбщегоНазначенияКлиентСервер.ЕстьРеквизитИлиСвойствоОбъекта(Форма.Объект, "Товары") Тогда
			ИмяТабличнойЧасти = "Товары";
		ИначеЕсли ОбщегоНазначенияКлиентСервер.ЕстьРеквизитИлиСвойствоОбъекта(Форма.Объект, "Продукция") Тогда
			ИмяТабличнойЧасти = "Продукция";
		КонецЕсли;
	КонецЕсли;
	
	Если ЗначениеЗаполнено(ИмяТабличнойЧасти) Тогда
		НоменклатураВДокументахСервер.ЗаполнитьДанныеВСтрокеТабличнойЧасти(Форма.Объект, ИмяТабличнойЧасти, ТекущаяСтрока);
	КонецЕсли;
	
КонецПроцедуры

#Область РаботаСАдресами

// Предназначена для получения текста запроса с контактной информацией, содержащей	ссылки на элементы и их адреса.
// Для автоподбора требуется предоставить пользователю первые 10 удовлетворяющих отбору записей.
// 
// Параметры:
//  ОписаниеТипов - ОписаниеТипов - Описание типов, для которых необходимо получить контактную информацию.
//   Возможные значения: Организации, Партнеры, Контрагенты, Склады,
//    ЗемельныйУчасток - если в качестве определяемого типа ЗемльныйУчастокИС используется тип, отличный от СправочникСсылка.ЗемельныеУчасткиИС.
//  ТекстЗапроса - Строка - Текст запроса.
//   Адрес должен содержать текст, указанный в параметре запроса СтрокаПоиска.
//   Возможен поиск по Наименованию, ИНН и другим полям справочников. 
//   Результат запроса должен содержать поля:
//    ВладелецАдреса               - Ссылка на элемент справочника - владельца адреса.
//    ПредставлениеВладельцаАдреса - Строка - строковое представление владельца адреса.
//    Адрес                        - Строка - контактная информация во внутреннем формате JSON или XML.
//    ПредставлениеАдреса          - Строка - строкое представление адреса.
//  ИмяВременнойТаблицы - Строка - Имя временной таблицы.
//   Если указано, тогда результат запроса должен быть помещен во временную таблицу с указанным именем.
//   Если не указано, тогда результат запроса во временную таблицу не помещается.
// 
Процедура ТекстЗапросаАдресаДляАвтоподбора(ОписаниеТипов, ТекстЗапроса, ИмяВременнойТаблицы = "") Экспорт
	
	Если ИмяВременнойТаблицы = "" Тогда
		ТекстПоместить = "";
	Иначе
		ТекстПоместить = СтрШаблон("ПОМЕСТИТЬ %1", ИмяВременнойТаблицы);
	КонецЕсли;
	
	ТекстЗапроса = СтрШаблон(
	"ВЫБРАТЬ РАЗРЕШЕННЫЕ ПЕРВЫЕ 10
	|	Таблица.ВладелецАдреса               КАК ВладелецАдреса,
	|	Таблица.ПредставлениеВладельцаАдреса КАК ПредставлениеВладельцаАдреса,
	|	Таблица.Адрес                        КАК Адрес,
	|	Таблица.ПредставлениеАдреса          КАК ПредставлениеАдреса
	|%1
	|ИЗ
	|	(",
	ТекстПоместить);
	
	ТекстРазделителя = "
	|	
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|";
	
	Типы = ОписаниеТипов.Типы();
	
	ВложенныйЗапросПустой = Истина;
	Для Каждого Тип Из Типы Цикл
		
		Если Тип = Тип("СправочникСсылка.Организации")
			Или Тип = Тип("СправочникСсылка.Контрагенты") Тогда
			
			Если Тип = Тип("СправочникСсылка.Организации") Тогда
				ВидКИ = "ЮрАдресОрганизации";
			ИначеЕсли Тип = Тип("СправочникСсылка.Контрагенты") Тогда
				ВидКИ = "ЮрАдресКонтрагента";
			ИначеЕсли Тип = Тип("СправочникСсылка.СтруктурныеЕдиницы") Тогда
				ВидКИ = "ФактАдресСтруктурнойЕдиницы"
			КонецЕсли;
			
			ТекстПодзапроса = СтрШаблон("
			|ВЫБРАТЬ ПЕРВЫЕ 10
			|	ТаблицаСправочника.Ссылка КАК ВладелецАдреса,
			|	ТаблицаСправочника.Наименование КАК ПредставлениеВладельцаАдреса,
			|	ЕСТЬNULL(ТаблицаКонтактнойИнформации.Значение, """") КАК Адрес,
			|	ЕСТЬNULL(ТаблицаКонтактнойИнформации.Представление, """") КАК ПредставлениеАдреса,
			|	ВЫБОР
			|		КОГДА ЕСТЬNULL(ТаблицаКонтактнойИнформации.Представление, """") <> """"
			|			ТОГДА ТаблицаКонтактнойИнформации.Представление
			|		ИНАЧЕ ТаблицаСправочника.Наименование
			|	КОНЕЦ КАК ПолеСортировки
			|ИЗ
			|	Справочник.%1 КАК ТаблицаСправочника
			|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.%1.КонтактнаяИнформация КАК ТаблицаКонтактнойИнформации
			|		ПО ТаблицаСправочника.Ссылка = ТаблицаКонтактнойИнформации.Ссылка
			|		И ТаблицаКонтактнойИнформации.Вид = ЗНАЧЕНИЕ(Справочник.ВидыКонтактнойИнформации.%2)
			|ГДЕ
			|	НЕ ТаблицаСправочника.ПометкаУдаления
			|	И (ТаблицаСправочника.Наименование ПОДОБНО &СтрокаПоиска
			|	ИЛИ ЕСТЬNULL(ТаблицаКонтактнойИнформации.Представление, """") ПОДОБНО &СтрокаПоиска)",
			Метаданные.НайтиПоТипу(Тип).Имя,
			ВидКИ);
			
		Иначе
			Продолжить;
		КонецЕсли;
		
		Если ВложенныйЗапросПустой Тогда
			ВложенныйЗапросПустой = Ложь;
		Иначе
			ТекстЗапроса = ТекстЗапроса + ТекстРазделителя;
		КонецЕсли;
		
		ТекстЗапроса = ТекстЗапроса + ТекстПодзапроса;
		
	КонецЦикла;
	
	Если ВложенныйЗапросПустой Тогда
		ТекстЗапроса = ТекстЗапроса + "
		|ВЫБРАТЬ ПЕРВЫЕ 0
		|	НЕОПРЕДЕЛЕНО КАК ВладелецАдреса,
		|	"""" КАК ПредставлениеВладельцаАдреса,
		|	"""" КАК Адрес,
		|	"""" КАК ПредставлениеАдреса,
		|	"""" КАК ПолеСортировки";
	КонецЕсли;
	
	ТекстЗапроса = ТекстЗапроса + "
	|УПОРЯДОЧИТЬ ПО
	|	ПолеСортировки) КАК Таблица
	|
	|УПОРЯДОЧИТЬ ПО
	|	ПолеСортировки";
	
КонецПроцедуры

// Предназначена для получения данных адреса объекта хранения зерна.
// 
// Параметры:
//  ДанныеАдреса - Структура - содержит данные адреса, которые необходимо заполнить  
//   ВладелецАдреса               - СправочникСсылка - ссылка на элемент справочника, адрес которого необходимо заполнить.
//   Адрес                        - Строка - контактная информация во внутреннем формате JSON или XML.
//   ПредставлениеАдреса          - Строка - строкое представление адреса.
//
Процедура ДанныеАдресаОбъекта(ДанныеАдреса) Экспорт
	
	ТипВладельцаАдреса = ТипЗнч(ДанныеАдреса.ВладелецАдреса);
	Если ТипВладельцаАдреса = Тип("СправочникСсылка.Организации")
		Или ТипВладельцаАдреса = Тип("СправочникСсылка.СтруктурныеЕдиницы")
		Или ТипВладельцаАдреса = Тип("СправочникСсылка.Контрагенты") Тогда
		КонтактнаяИнформация = УправлениеКонтактнойИнформацией.КонтактнаяИнформацияОбъекта(
			ДанныеАдреса.ВладелецАдреса, Перечисления.ТипыКонтактнойИнформации.Адрес, ТекущаяДатаСеанса(), Ложь);
		Если КонтактнаяИнформация.Количество() > 0 Тогда
			ДанныеАдреса.Адрес               = КонтактнаяИнформация[0].Значение;
			ДанныеАдреса.ПредставлениеАдреса = КонтактнаяИнформация[0].Представление;
		КонецЕсли;
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#КонецОбласти
