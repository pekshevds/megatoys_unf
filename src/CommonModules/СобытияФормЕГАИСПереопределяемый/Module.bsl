#Область ПрограммныйИнтерфейс

// Обработчик команды формы, требующей контекстного вызова сервера.
//
// Параметры:
//   Форма - ФормаКлиентскогоПриложения - форма, из которой выполняется команда.
//   ПараметрыВызова - Структура - параметры вызова.
//   Источник - ТаблицаФормы, ДанныеФормыСтруктура - объект или список формы с полем "Ссылка".
//   Результат - Структура - результат выполнения команды.
//
Процедура ВыполнитьПереопределяемуюКоманду(Знач Форма, Знач ПараметрыВызова, Знач Источник, Результат) Экспорт
	
	Возврат;
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныйПрограммныйИнтерфейс

#Область МодификацияФормы

Процедура ДобавитьСлужебныеРеквизиты(Форма, ПутьКТабличнойЧасти = "Объект.Товары") Экспорт
	
	Если Форма.ИмяФормы = "Документ.ОстаткиЕГАИС.Форма.ФормаДокумента" Тогда
		
		ДобавляемыеРеквизиты = Новый Массив;
	
		Если ОбщегоНазначенияКлиентСервер.ЕстьРеквизитИлиСвойствоОбъекта(Форма, "ПараметрыУказанияСерий") Тогда
			Возврат;
		КонецЕсли;
		
		// Реквизиты шапки
		ДобавляемыеРеквизиты.Добавить(Новый РеквизитФормы("ПараметрыУказанияСерий",Новый ОписаниеТипов));
		
		//// Реквизиты табличной части
		//ДобавляемыеРеквизиты.Добавить(Новый РеквизитФормы("Код",
		//	Новый ОписаниеТипов("Строка"), ПутьКТабличнойЧасти, НСтр("ru = 'Код';
		//															|en = 'Код'")));
		//ДобавляемыеРеквизиты.Добавить(Новый РеквизитФормы("Артикул",
		//	Метаданные.ОпределяемыеТипы.Артикул.Тип, ПутьКТабличнойЧасти, НСтр("ru = 'Артикул';
		//																		|en = 'Артикул'")));
		//ДобавляемыеРеквизиты.Добавить(Новый РеквизитФормы("ТипНоменклатуры",
		//	Метаданные.ОпределяемыеТипы.ТипНоменклатуры.Тип, ПутьКТабличнойЧасти, НСтр("ru = 'Тип номенклатуры';
		//																				|en = 'Тип номенклатуры'")));
		//ДобавляемыеРеквизиты.Добавить(Новый РеквизитФормы("СтатусУказанияСерий",
		//	Новый ОписаниеТипов("Число"), ПутьКТабличнойЧасти, НСтр("ru = 'Статус указания серий';
		//															|en = 'Статус указания серий'")));
		
		Форма.ИзменитьРеквизиты(ДобавляемыеРеквизиты);
		
	КонецЕсли;
	
КонецПроцедуры

Процедура МодификацияРеквизитовФормы(Форма, ПараметрыИнтеграции, ДобавляемыеРеквизиты) Экспорт
	
	Возврат;
	
КонецПроцедуры

Процедура ЗаполнениеРеквизитовФормы(Форма) Экспорт
	
	ИнтеграцияЕГАИСУНФ.ЗаполнениеРеквизитовФормы(Форма);
	
КонецПроцедуры

// Переопределение параметров интеграции ЕГАИС (расположения форматированной строки).
//
// Параметры:
//   Форма            - ФормаКлиентскогоПриложения - прикладная форма для встраивания форматированной строки.
//   ПараметрыНадписи - Структура        - (см. СобытияФормЕГАИС.ПараметрыИнтеграцииЕГАИС).
//
Процедура ПриОпределенииПараметровИнтеграцииЕГАИС(Форма, ПараметрыНадписи) Экспорт
	
	Возврат;
	
КонецПроцедуры

Процедура ПослеЗаписиНаСервере(Форма) Экспорт
	
	Возврат;
	
КонецПроцедуры

Процедура ПриСозданииНаСервере(Форма, Отказ, СтандартнаяОбработка) Экспорт
	
	ИнтеграцияЕГАИСУНФ.ПриСозданииЧтенииНаСервере(Форма);
	
КонецПроцедуры

Процедура ПриЧтенииНаСервере(Форма, ТекущийОбъект) Экспорт
	
	ИнтеграцияЕГАИСУНФ.ПриСозданииЧтенииНаСервере(Форма);
	
КонецПроцедуры

#Область СобытияЭлементовФорм

// Серверная переопределяемая процедура, вызываемая из обработчика события элемента.
//
// Параметры:
//   Форма                   - ФормаКлиентскогоПриложения - форма, из которой происходит вызов процедуры.
//   Элемент                 - Строка           - имя элемента-источника события "При изменении".
//   ДополнительныеПараметры - Структура        - значения дополнительных параметров влияющих на обработку.
//
Процедура ПриИзмененииЭлемента(Форма, Элемент, ДополнительныеПараметры) Экспорт
	
	Если Форма.ИмяФормы = "Документ.ЧекККМ.Форма.ФормаДокумента"
		Или Форма.ИмяФормы = "Документ.ЧекККМ.Форма.ФормаДокумента_РМК"
		Или Форма.ИмяФормы = "Документ.ЧекККМВозврат.Форма.ФормаДокумента" Тогда
		
		Если Элемент = "Событие" И ДополнительныеПараметры.ИмяСобытия = "ЗакрытиеФормыПроверкиИПодбораЕГАИС" Тогда
			
			ИнтеграцияЕГАИСУНФ.ПриЗакрытииФормыПроверкиИПодбораВФормеРМК(Форма, ДополнительныеПараметры.Параметр);
			
		КонецЕсли;
		
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#КонецОбласти

#Область ОбработчикиСобытийЭлементовФормы

// Выполняет действия при изменении номенклатуры в таблице Товары.
//
// Параметры:
//   Форма         - ФормаКлиентскогоПриложения            - форма, в которой произошло событие.
//   ТекущаяСтрока - ДанныеФормыЭлементКоллекции - строка таблицы товаров.
//   КэшированныеЗначения - Структура - сохраненные значения параметров, используемых при обработке.
//   ПараметрыЗаполнения  - (См. ИнтеграцияЕГАИСКлиентСервер.ПараметрыЗаполненияТабличнойЧасти).
//   ПараметрыУказанияСерий - Произвольный - параметры указания серий формы.
//
Процедура ПриИзмененииНоменклатуры(Форма, ТекущаяСтрока, КэшированныеЗначения, ПараметрыЗаполнения, ПараметрыУказанияСерий = Неопределено) Экспорт
	
	ДанныеПродукции = ИнтеграцияЕГАИСУНФ.ДанныеАлкогольнойПродукции(ТекущаяСтрока.Номенклатура);
	
	Если ТекущаяСтрока.Свойство("ЕдиницаИзмерения") Тогда
		ТекущаяСтрока.ЕдиницаИзмерения = ДанныеПродукции.ЕдиницаИзмерения;
	КонецЕсли;
	
	Если ТекущаяСтрока.Свойство("МаркируемаяАлкогольнаяПродукция") Тогда
		ТекущаяСтрока.МаркируемаяАлкогольнаяПродукция = ДанныеПродукции.Маркируемый;
	КонецЕсли;
	
	Если ТекущаяСтрока.Свойство("НеобходимостьВводаАкцизнойМарки")
		И ЗначениеЗаполнено(ТекущаяСтрока.Номенклатура) Тогда
		ТекущаяСтрока.НеобходимостьВводаАкцизнойМарки = ДанныеПродукции.Маркируемый;
	КонецЕсли;
	
	Если ПараметрыЗаполнения.ЗаполнитьАлкогольнуюПродукцию Тогда
		ИнтеграцияЕГАИСУНФ.ЗаполнитьАлкогольнуюПродукцию(ТекущаяСтрока);
	КонецЕсли;
	
	Если ПараметрыЗаполнения.ЗаполнитьИндексАкцизнойМарки Тогда
		АкцизныеМаркиКлиентСервер.ЗаполнитьИндексАкцизнойМарки(ТекущаяСтрока, "Количество");
	КонецЕсли;
	
КонецПроцедуры

// Выполняет действия при изменении номенклатуры в таблице Товары.
//
// Параметры:
//   Форма                - ФормаКлиентскогоПриложения            - форма, в которой произошло событие.
//   ТекущаяСтрока        - ДанныеФормыЭлементКоллекции - строка таблицы товаров.
//   КэшированныеЗначения - Структура                   - сохраненные значения параметров, используемых при обработке.
//   ПараметрыЗаполнения  - (См. ИнтеграцияЕГАИСКлиентСервер.ПараметрыЗаполненияТабличнойЧасти).
//
Процедура ПриИзмененииХарактеристики(Форма, ТекущаяСтрока, КэшированныеЗначения, ПараметрыЗаполнения) Экспорт
	
	Возврат;
	
КонецПроцедуры

// Выполняет действия при изменении количества упаковок в таблице Товары.
//
// Параметры:
//   Форма                - ФормаКлиентскогоПриложения - форма, в которой произошло событие.
//   ТекущаяСтрока        - ДанныеФормыЭлементКоллекции - строка таблицы товаров.
//   КэшированныеЗначения - Структура - сохраненные значения параметров, используемых при обработке.
//   ПараметрыЗаполнения  - (См. ИнтеграцияЕГАИСКлиентСервер.ПараметрыЗаполненияТабличнойЧасти).
//
Процедура ПриИзмененииКоличестваУпаковок(Форма, ТекущаяСтрока, КэшированныеЗначения, ПараметрыЗаполнения) Экспорт
	
	Возврат;
	
КонецПроцедуры

#КонецОбласти

// Заполняет табличную часть Товары подобранными товарами.
//
// Параметры:
//   Форма               - ФормаКлиентскогоПриложения - форма, в которой производится подбор.
//   ВыбранноеЗначение   - Произвольный     - данные, содержащие подобранную пользователем номенклатуру.
//   ПараметрыЗаполнения - (См. ИнтеграцияЕГАИСКлиентСервер.ПараметрыЗаполненияТабличнойЧасти).
Процедура ОбработкаРезультатаПодбораНоменклатуры(Форма, ВыбранноеЗначение, ПараметрыЗаполнения) Экспорт
	
	Если ВыбранноеЗначение = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	Если ВыбранноеЗначение.Свойство("АдресТоваровВХранилище") Тогда
		АдресТоваровВХранилище = ВыбранноеЗначение.АдресТоваровВХранилище
	Иначе
		АдресТоваровВХранилище = ВыбранноеЗначение.АдресКорзиныВХранилище
	КонецЕсли;
	
	ТаблицаТоваров = ПолучитьИзВременногоХранилища(АдресТоваровВХранилище);
	
	ТекущаяСтрока = Неопределено;
	Для каждого СтрокаТовара Из ТаблицаТоваров Цикл
		
		ТекущаяСтрока = Форма.Объект.Товары.Добавить();
		
		СписокСвойств = "Номенклатура, Характеристика";
		Если ТекущаяСтрока.Свойство("Количество") Тогда
			СписокСвойств = СписокСвойств + ", Количество";
		КонецЕсли;
		
		ЗаполнитьЗначенияСвойств(ТекущаяСтрока, СтрокаТовара, СписокСвойств);
		
		Если ТекущаяСтрока.Свойство("КоличествоУпаковок") Тогда
			ТекущаяСтрока.КоличествоУпаковок = ТекущаяСтрока.Количество;
		КонецЕсли;
		
		ДанныеПродукции = ИнтеграцияЕГАИСУНФ.ДанныеАлкогольнойПродукции(ТекущаяСтрока.Номенклатура);
	
		Если ТекущаяСтрока.Свойство("ЕдиницаИзмерения") Тогда
			ТекущаяСтрока.ЕдиницаИзмерения = ДанныеПродукции.ЕдиницаИзмерения;
		КонецЕсли;
		
		Если ТекущаяСтрока.Свойство("МаркируемаяАлкогольнаяПродукция") Тогда
			ТекущаяСтрока.МаркируемаяАлкогольнаяПродукция = ДанныеПродукции.Маркируемый;
		КонецЕсли;
		
		Если ТекущаяСтрока.Свойство("НеобходимостьВводаАкцизнойМарки")
			И ЗначениеЗаполнено(ТекущаяСтрока.Номенклатура) Тогда
			ТекущаяСтрока.НеобходимостьВводаАкцизнойМарки = ДанныеПродукции.Маркируемый;
		КонецЕсли;
		
		Если ПараметрыЗаполнения.ЗаполнитьАлкогольнуюПродукцию Тогда
			ИнтеграцияЕГАИСУНФ.ЗаполнитьАлкогольнуюПродукцию(ТекущаяСтрока);
		КонецЕсли;
		
		Если ПараметрыЗаполнения.ЗаполнитьИндексАкцизнойМарки Тогда
			АкцизныеМаркиКлиентСервер.ЗаполнитьИндексАкцизнойМарки(ТекущаяСтрока, "Количество");
		КонецЕсли;
		
	КонецЦикла;
	
	Если ТекущаяСтрока <> Неопределено Тогда
		Форма.Элементы.Товары.ТекущаяСтрока = ТекущаяСтрока.ПолучитьИдентификатор();
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти
