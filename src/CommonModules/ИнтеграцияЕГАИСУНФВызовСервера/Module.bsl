
#Область СлужебныйПрограммныйИнтерфейс

#Область ПроверкаИПодборПродукции

Функция АдресДанныхПроверкиАлкогольнойПродукции(ПараметрыСканирования, Знач Объект, УникальныйИдентификатор) Экспорт
	
	Возврат ИнтеграцияЕГАИСУНФ.АдресДанныхПроверкиАлкогольнойПродукции(ПараметрыСканирования, Объект, УникальныйИдентификатор);
	
КонецФункции

#КонецОбласти

Функция ТекстДокументаЕГАИСВПриходнойНакладнойВРаботе(ТТНВходящаяЕГАИС) Экспорт
	Возврат Новый ФорматированнаяСтрока(
		СтрШаблон(НСтр("ru = 'Заполнение по документу: %1';
						|en = 'Заполнение по документу: %1'"), ТТНВходящаяЕГАИС),,
		ЦветаСтиля.ЦветТекстаНеТребуетВниманияГосИС);
КонецФункции

// Заполняет форматированную строку (связи с документами ЕГАИС) для формы документа Приходная накладная
//
// Параметры:
//   Объект - ДанныеФормыКоллекция - редактируемый в форме документ приобретения
//
// Возвращаемое значение:
//   ФорматированнаяСтрока, Строка - Описание доступных действий ЕГАИС
//
Функция ТекстДокументаЕГАИСВПриходнойНакладной(Знач Объект, ТТНВходящаяЕГАИС) Экспорт
	
	Если НЕ ЗначениеЗаполнено(Объект.Ссылка) И ЗначениеЗаполнено(Объект.ДокументОснование)
		И ТипЗнч(Объект.ДокументОснование) = Тип("ДокументСсылка.ТТНВходящаяЕГАИС") Тогда
		Возврат ТекстДокументаЕГАИСВПриходнойНакладнойВРаботе(Объект.ДокументОснование);
	КонецЕсли;
	
	Если Не ИнтеграцияИСУНФ.СтрокиТоваровПоВидуПродукции(Объект.Запасы, Перечисления.ВидыПродукцииИС.Алкогольная).Количество() Тогда
		Возврат "";
	КонецЕсли;
	
	Строки = Новый Массив;
	
	Запрос = Новый Запрос(
	"ВЫБРАТЬ РАЗРЕШЕННЫЕ РАЗЛИЧНЫЕ
	|	ТТНВходящаяЕГАИС.Ссылка       КАК Ссылка,
	|	СтатусыДокументовЕГАИС.Статус КАК Статус
	|ИЗ
	|	Документ.ТТНВходящаяЕГАИС КАК ТТНВходящаяЕГАИС
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.СтатусыДокументовЕГАИС КАК СтатусыДокументовЕГАИС
	|		ПО СтатусыДокументовЕГАИС.Документ = ТТНВходящаяЕГАИС.Ссылка
	|ГДЕ
	|	ТТНВходящаяЕГАИС.ДокументОснование = &Ссылка");
	
	Запрос.УстановитьПараметр("Ссылка", Объект.Ссылка);
	Выборка = Запрос.Выполнить().Выбрать();
	ТТНПривязана = Ложь;
	Если Выборка.Следующий() Тогда
		Строки.Добавить(
			Новый ФорматированнаяСтрока(
				СтрШаблон(
					НСтр("ru = 'ТТН ЕГАИС (входящая): %1';
						|en = 'ТТН ЕГАИС (входящая): %1'"),
					Выборка.Статус),,
				ЦветаСтиля.ГиперссылкаЦвет,,
				ПолучитьНавигационнуюСсылку(Выборка.Ссылка)));
		Шаблон = НСтр("ru = 'Связать еще (%1)';
						|en = 'Связать еще (%1)'");
		ТТНПривязана = Истина;
	Иначе
		Шаблон = НСтр("ru = 'Связать с ТТН ЕГАИС (входящей) (%1)';
						|en = 'Связать с ТТН ЕГАИС (входящей) (%1)'");
	КонецЕсли;
	
	Если ПравоДоступа("Изменение", Метаданные.Документы.ТТНВходящаяЕГАИС) ИЛИ Пользователи.ЭтоПолноправныйПользователь() Тогда
		
		ВозможныеТТНЕГАИС   = ИнтеграцияЕГАИСВызовСервера.ВозможныеТТНЕГАИС(Объект.Организация, Объект.СтруктурнаяЕдиница, Объект.Контрагент);
		КоличествоНакладных = ВозможныеТТНЕГАИС.Количество();
		
		Если КоличествоНакладных > 0 Тогда
			Строки.Добавить("  ");
			Строки.Добавить(
				Новый ФорматированнаяСтрока(
					СтрШаблон(
						Шаблон,
						КоличествоНакладных),,
					ЦветаСтиля.ГиперссылкаЦвет,,
					"СвязатьСТТНЕГАИС"));
		ИначеЕсли НЕ ТТНПривязана Тогда
			Строки.Добавить(
				Новый ФорматированнаяСтрока(
					НСтр("ru = 'В документе приобретения указана алкогольная продукция. Подходящая ТТН входящая ЕГАИС не найдена.';
						|en = 'В документе приобретения указана алкогольная продукция. Подходящая ТТН входящая ЕГАИС не найдена.'"),,
					ЦветаСтиля.ЦветТекстаПроблемаГосИС));
		КонецЕсли;
	КонецЕсли;
	
	Возврат Новый ФорматированнаяСтрока(Строки);
	
КонецФункции

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

Функция ДанныеАлкогольнойПродукции(Номенклатура) Экспорт
	Возврат ИнтеграцияЕГАИСУНФ.ДанныеАлкогольнойПродукции(Номенклатура);
КонецФункции

Процедура ЗаполнитьАлкогольнуюПродукцию(ТекущаяСтрока) Экспорт
	ИнтеграцияЕГАИСУНФ.ЗаполнитьАлкогольнуюПродукцию(ТекущаяСтрока);
КонецПроцедуры

Функция ОрганизацияЕГАИСПоОрганизацииИТорговомуОбъекту(Организация, Склад) Экспорт
	Возврат Справочники.КлассификаторОрганизацийЕГАИС.ОрганизацияЕГАИСПоОрганизацииИТорговомуОбъекту(Организация, Склад);
КонецФункции

Функция КонтрагентПоОрганизацииЕГАИС(ОрганизацияЕГАИС, ТорговыйОбъект = Неопределено, СоответствуетОрганизации = Ложь, ТолькоСопоставленные = Истина) Экспорт
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("ОрганизацияЕГАИС"        , ОрганизацияЕГАИС);
	Запрос.УстановитьПараметр("ТорговыйОбъект"          , ТорговыйОбъект);
	Запрос.УстановитьПараметр("СоответствуетОрганизации", СоответствуетОрганизации);
	Запрос.УстановитьПараметр("ТолькоСопоставленные"    , ТолькоСопоставленные);
	
	Запрос.Текст =
	"ВЫБРАТЬ
	|	КлассификаторОрганизацийЕГАИС.Ссылка КАК Ссылка
	|ИЗ
	|	Справочник.КлассификаторОрганизацийЕГАИС КАК КлассификаторОрганизацийЕГАИС
	|ГДЕ
	|	НЕ КлассификаторОрганизацийЕГАИС.ПометкаУдаления
	|	И КлассификаторОрганизацийЕГАИС.Ссылка = &ОрганизацияЕГАИС
	|	И (&ТорговыйОбъект = НЕОПРЕДЕЛЕНО
	|			ИЛИ КлассификаторОрганизацийЕГАИС.ТорговыйОбъект = &ТорговыйОбъект)
	|	И КлассификаторОрганизацийЕГАИС.СоответствуетОрганизации = &СоответствуетОрганизации
	|	И ВЫБОР
	|			КОГДА &ТолькоСопоставленные
	|				ТОГДА КлассификаторОрганизацийЕГАИС.Сопоставлено
	|			ИНАЧЕ ИСТИНА
	|		КОНЕЦ";
	
	РезультатЗапроса = Запрос.Выполнить();
	Если РезультатЗапроса.Пустой() Тогда
		Возврат Неопределено;
	КонецЕсли;
	
	Возврат РезультатЗапроса.Выгрузить()[0].Ссылка;
	
КонецФункции

Функция ДокументаЕГАИСПоОснованию(ДокументОснование, ИмяДокумента) Экспорт
	
	ДокументЕГАИС = Неопределено;
	
	Попытка
		Запрос = Новый Запрос;
		Запрос.Текст = 
		"ВЫБРАТЬ РАЗРЕШЕННЫЕ
		|	ТТНИсходящаяЕГАИС.Ссылка КАК Ссылка
		|ИЗ
		|	Документ.ТТНИсходящаяЕГАИС КАК ТТНИсходящаяЕГАИС
		|ГДЕ
		|	ТТНИсходящаяЕГАИС.ДокументОснование = &ДокументОснование
		|	И НЕ ТТНИсходящаяЕГАИС.ПометкаУдаления";
		
		Запрос.Текст = СтрЗаменить(Запрос.Текст, "Документ.ТТНИсходящаяЕГАИС", ИмяДокумента);
		
		Запрос.УстановитьПараметр("ДокументОснование", ДокументОснование);
		РезультатЗапроса = Запрос.Выполнить();
		
		Выборка = РезультатЗапроса.Выбрать();
		Пока Выборка.Следующий() Цикл
			ДокументЕГАИС = Выборка.Ссылка;
		КонецЦикла;
	Исключение
	КонецПопытки;
	
	Возврат ДокументЕГАИС;
	
КонецФункции

Функция АдресКонтрагентовДляСопоставления(УникальныйИдентификатор, МассивАлкогольнойПродукции, ТТНВходящаяЕГАИС) Экспорт
	
	//Возврат ИнтеграцияЕГАИСРТ.АдресКонтрагентовДляСопоставления(УникальныйИдентификатор, МассивАлкогольнойПродукции, ТТНВходящаяЕГАИС);
	
КонецФункции

Функция АдресОрганизацийЕГАИСДляСопоставления(УникальныйИдентификатор, МассивНоменклатуры) Экспорт
	
	//Возврат ИнтеграцияЕГАИСРТ.АдресОрганизацийЕГАИСДляСопоставления(УникальныйИдентификатор, МассивНоменклатуры);
	
КонецФункции

Функция ВыгружатьПродажиНемаркируемойПродукцииВЕГАИС() Экспорт
	
	Возврат Константы.ВыгружатьПродажиНемаркируемойПродукцииВЕГАИС.Получить()
	
КонецФункции

Функция НесопоставленныеТоварыВТТН(ДокументСсылка) Экспорт
	
	ИмяТаблицы = "Документ" + "." + ДокументСсылка.Метаданные().Имя + "." + "Товары";
	
	Запрос = Новый Запрос(
	"ВЫБРАТЬ
	|	ТабличнаяЧасть.НомерСтроки,
	|	ТабличнаяЧасть.АлкогольнаяПродукция,
	|	ТабличнаяЧасть.ИдентификаторУпаковки
	|ПОМЕСТИТЬ Товары
	|ИЗ
	|	ИмяТаблицы КАК ТабличнаяЧасть
	|ГДЕ
	|	ТабличнаяЧасть.Ссылка = &ДокументСсылка
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	Товары.АлкогольнаяПродукция
	|ИЗ
	|	Товары КАК Товары
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.СоответствиеНоменклатурыЕГАИС КАК СоответствиеНоменклатурыЕГАИС
	|		ПО Товары.АлкогольнаяПродукция = СоответствиеНоменклатурыЕГАИС.АлкогольнаяПродукция
	|			И Товары.ИдентификаторУпаковки = СоответствиеНоменклатурыЕГАИС.ИдентификаторУпаковки
	|ГДЕ
	|	СоответствиеНоменклатурыЕГАИС.Номенклатура ЕСТЬ NULL");
	
	Запрос.Текст = СтрЗаменить(Запрос.Текст, "ИмяТаблицы", ИмяТаблицы);
	Запрос.УстановитьПараметр("ДокументСсылка", ДокументСсылка);
	
	Возврат Запрос.Выполнить().Выгрузить().ВыгрузитьКолонку("АлкогольнаяПродукция");
	
КонецФункции

Функция АлкогольнаяПродукцияПоНоменклатуре(Номенклатура, Характеристика) Экспорт
	
	Результат = Справочники.КлассификаторАлкогольнойПродукцииЕГАИС.ПустаяСсылка();
	
	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ ПЕРВЫЕ 1
	|	СоответствиеЕГАИС.АлкогольнаяПродукция КАК АлкогольнаяПродукция
	|ИЗ
	|	РегистрСведений.СоответствиеНоменклатурыЕГАИС КАК СоответствиеЕГАИС
	|ГДЕ
	|	СоответствиеЕГАИС.Номенклатура = &Номенклатура
	|	И СоответствиеЕГАИС.Характеристика = &Характеристика";
	
	Запрос.УстановитьПараметр("Номенклатура", Номенклатура);
	Запрос.УстановитьПараметр("Характеристика", Характеристика);
	
	Выборка = Запрос.Выполнить().Выбрать();
	Если Выборка.Следующий() Тогда
		Результат = Выборка.АлкогольнаяПродукция;
	КонецЕсли;
	
	Возврат Результат;
	
КонецФункции

Функция ИспользуетсяРегистрацияРозничныхПродажВЕГАИС(Знач ДатаПродажи = Неопределено) Экспорт

	УстановитьПривилегированныйРежим(Истина);
	
	Если НЕ ПолучитьФункциональнуюОпцию("ВестиСведенияДляДекларацийПоАлкогольнойПродукции") Тогда
		Возврат Ложь;
	КонецЕсли;
	
	Если НЕ ЗначениеЗаполнено(ДатаПродажи) Тогда
		ДатаПродажи = ТекущаяДатаСеанса();
	КонецЕсли;
	
	ДатаНачалаРегистрации = Константы.ДатаНачалаРегистрацииРозничныхПродажВЕГАИС.Получить();
	
	Возврат ДатаПродажи >= ДатаНачалаРегистрации И ЗначениеЗаполнено(ДатаНачалаРегистрации);

КонецФункции // ИспользуетсяРегистрацияРозничныхПродажВЕГАИС()

Функция ПолучитьШтрихкодПоНоменклатуре(СтруктураПараметров) Экспорт
	
	Возврат РегистрыСведений.ШтрихкодыНоменклатуры.ПолучитьШтрихкодПоНоменклатуре(СтруктураПараметров.Номенклатура);
	
КонецФункции

#КонецОбласти
