#Область ПрограммныйИнтерфейс

// Определяет использование актов о расхождении после приемки для документа
//
// Параметры:
//  Документ     - ДокументСсылка - документ, для которого необходимо определить возможность использования актов о расхождении.
//  Используется - Булево - в данный параметр необходимо установить признак использования актов, по умолчанию установлен
//                          в Ложь.
//
Процедура ОпределитьИспользованиеАктовОРасхожденииПослеПриемки(Документ, Используется) Экспорт
	
	ИнтеграцияИСМПУНФ.ОпределитьИспользованиеАктовОРасхожденииПослеПриемки(Документ, Используется);
	
КонецПроцедуры

// Заполняет в переданную таблицу данные из ТЧ документа.
//
// Параметры:
//   Документ - ДокументСсылка - Документ из ТЧ которого будет происходить заполнение.
//   ТаблицаПродукции - ТаблицаЗначений - Таблица для заполнения данными из документа.
//   ВидМаркируемойПродукции - ПеречислениеСсылка.ВидыПродукцииИС, Массив из ПеречислениеСсылка.ВидыПродукцииИС - 
//     вид(ы) маркируемой продукции, которым(и) необходимо заполнить таблицу.
//
Процедура СформироватьТаблицуМаркируемойПродукцииДокумента(Документ, ТаблицаПродукции, ВидМаркируемойПродукции) Экспорт
	
	ИнтеграцияИСМПУНФ.СформироватьТаблицуМаркируемойПродукцииДокумента(Документ, ТаблицаПродукции, ВидМаркируемойПродукции);
	
КонецПроцедуры

// Заполняет таблицу маркированный товаров по выбранным документам.
//
// Параметры:
//   Запрос - Запрос - запрос, в котором требуется сформировать временную таблицу.
//   ИсточникОснований - Строка - Имя временной таблицы с колонкой "ДокументОснование".
//   СтандартнаяОбработка - Булево - Необходимость обработки события "по-умолчанию" (установить Ложь при переопределении).
//
Процедура СформироватьТаблицуМаркированныхТоваровОснований(Запрос, ИсточникОснований, СтандартнаяОбработка) Экспорт
	
	ИнтеграцияИСМПУНФ.СформироватьТаблицуМаркированныхТоваровОснований(Запрос, ИсточникОснований, СтандартнаяОбработка);
	
КонецПроцедуры

// Дополнительные действия прикладной конфигурации при изменении статуса документа ИСМП.
//
// Параметры:
//   ДокументСсылка   - ДокументСсылка     - ссылка на документ с изменением статуса.
//   ПредыдущийСтатус - ПеречислениеСсылка - предыдущий статус обработки.
//   НовыйСтатус      - ПеречислениеСсылка - новый статус обработки.
//   ПараметрыОбновленияСтатуса - Структура, Неопределено - (См. ИнтеграцияИСМПСлужебныйКлиентСервер.ПараметрыОбновленияСтатуса).
//
Процедура ПриИзмененииСтатусаДокумента(ДокументСсылка, ПредыдущийСтатус, НовыйСтатус, ПараметрыОбновленияСтатуса = Неопределено) Экспорт

	Возврат;

КонецПроцедуры

#Область Серии

// Предназачена для реализации механизма генерации серий номенклатуры по переданным данным
//  (См. ИнтеграцияИСМП.СгенерироватьСерии)
//
Процедура СгенерироватьСерии(ДанныеДляГенерации, ВидМаркируемойПродукции) Экспорт

	Возврат;
	
КонецПроцедуры

#КонецОбласти

#Область Номенклатура

// Определяет заполнение Товарного знака по номенклатуре.
// 
// Параметры:
// 	Номенклатура - Массив из ОпределяемыйТип.Номенклатура - Исходные данные для заполнения.
// 	ТоварныеЗнакиПоНоменклатуре - Соответствие:
// 	 * Ключ     - ОпределяемыйТип.Номенклатура - Значение номенклатуры из исходных данных.
// 	 * Значение - Строка, произвольный         - Товарный знак по номенклатуре (значение будет конвертировано в строку).
Процедура ТоварныеЗнакиПоНоменклатуре(Номенклатура, ТоварныеЗнакиПоНоменклатуре) Экспорт
	
	Возврат;
	
КонецПроцедуры

// Предназначена для поиска по коду элемента в Классификаторе ТН ВЭД.
// Если элемент не найден, то, при использовании классификатора, создать элемент справочника в соответствии с
// классификатором ТН ВЭД ЕАЭС.
// 
// Параметры:
//  КодТНВЭД - Строка - Строка с кодом классификатора ТН ВЭД.
//  ДанныеЭлемента - Структура - Переопределяемый параметр, содержащий структуру со свойствами:
//   * ЭлементСправочника - Произвольный - Ссылка на элемент классификатора.
//   * НаименованиеПолное - Строка - наименование найденного элемента классификатора.
//  Наименование - Строка - Наименование элемента классификатора ТН ВЭД по данным ГИС МТ.
Процедура ПриОпределенииСопоставленногоКлассификатораТНВЭД(КодТНВЭД, ДанныеЭлемента, Наименование = "") Экспорт
	
	ЭлементСправочника = ИнтеграцияИСМПУНФ.ПриОпределенииСопоставленногоКлассификатораТНВЭД(КодТНВЭД, Наименование);
	
	Если ЭлементСправочника <> Неопределено Тогда
		ДанныеЭлемента.ЭлементСправочника = ЭлементСправочника;
		ДанныеЭлемента.НаименованиеПолное = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(ЭлементСправочника, "НаименованиеПолное");
	КонецЕсли;
	
КонецПроцедуры

// Предназначена для получения объема маркируемой продукции в литрах.
// 
// Параметры:
//  Таблица - ТаблицаЗначений - Таблица с колонками:
//   * Номенклатура - ОпределяемыйТип.Номенклатура - Ссылка на маркируемую продукцию.
//   * ОбъемВЛитрах - Число - Объем в литрах, который необходимо заполнить.

Процедура ОбъемМаркируемойПродукцииВЛитрах(Таблица) Экспорт
	
	ТаблицаДляЗапроса = Новый ТаблицаЗначений;
	ТаблицаДляЗапроса.Колонки.Добавить("Номенклатура", Новый ОписаниеТипов("СправочникСсылка.Номенклатура"));
	ТаблицаДляЗапроса.Колонки.Добавить("ИндексСтроки", ОбщегоНазначения.ОписаниеТипаЧисло(5));
	
	Для Каждого Строка Из Таблица Цикл
		НоваяСтрока = ТаблицаДляЗапроса.Добавить();
		НоваяСтрока.Номенклатура = Строка.Номенклатура;
		НоваяСтрока.ИндексСтроки = Таблица.Индекс(Строка);
	КонецЦикла;
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("Таблица", ТаблицаДляЗапроса);
	Запрос.Текст =
	"ВЫБРАТЬ
	|	Таблица.Номенклатура,
	|	Таблица.ИндексСтроки
	|ПОМЕСТИТЬ Таблица
	|ИЗ
	|	&Таблица КАК Таблица
	|;
	|ВЫБРАТЬ
	|	Таблица.Номенклатура,
	|	Таблица.ИндексСтроки,
	|	ЕСТЬNULL(ТаблицаНоменклатура.ОбъемДАЛ * 10, 0) КАК ОбъемВЛитрах
	|ИЗ
	|	Таблица КАК Таблица
	|	ЛЕВОЕ СОЕДИНЕНИЕ Справочник.Номенклатура КАК ТаблицаНоменклатура
	|		ПО Таблица.Номенклатура = ТаблицаНоменклатура.Ссылка
	|";
	
	Выборка = Запрос.Выполнить().Выбрать();
	Пока Выборка.Следующий() Цикл
		Таблица[Выборка.ИндексСтроки].ОбъемВЛитрах = Выборка.ОбъемВЛитрах;
	КонецЦикла;
	
КонецПроцедуры

#Область КаталогGS46

// Заполняет свойства номенклатуры, используемые для передачи в каталог GS46. Могут быть заполнены колонки:
//   * Торговая марка,
//   * Страна производства,
//   * Вид обуви,
//   * Материал верха,
//   * Материал подкладки,
//   * Материал низа,
//   * Цвет,
//   * Размер.
// 
// Параметры:
//   Товары - ДанныеФормыКоллекция - таблица для заполнения.
//
Процедура ЗаполнитьСвойстваНоменклатурыДляКаталогаGS46(Товары) Экспорт
	
	ИнтеграцияИСМПУНФ.ЗаполнитьСвойстваНоменклатурыДляКаталогаGS46(Товары);
	
КонецПроцедуры

Процедура ЗагрузитьПолученныеGTINКаталогаGS46(Товары) Экспорт
	
	ИнтеграцияИСМПУНФ.ЗагрузитьПолученныеGTINКаталогаGS46(Товары);
	
КонецПроцедуры

#КонецОбласти

#Область УпаковкиНоменклатуры

// Обработчик события получения сведений об иерархии упаковок номенклатуры.
// Если обработчик пустой, то подсистема виртуальной агрегации не сможет автоматически распределять
// коды маркировки по упаковкам. В этом случае будет возможна только ручная агрегация.
//
// Параметры:
//  Номенклатура         - Массив из ОпределяемыйТип.Номенклатура - Номенклатура [Входящий]
//  УпаковкиНоменклатуры - ТаблицаЗначений - сведения об упаковках [Исходящий], должны быть отсортированы по возрастанию
//   коэффициента упаковки:
//   * Номенклатура       - ОпределяемыйТип.Номенклатура - номенклатура упаковки,
//   * Упаковка           - ОпределяемыйТип.Упаковка - упаковка,
//   * РодительУпаковки   - ОпределяемыйТип.Упаковка - родительская упаковка,
//   * ЕдиницаИзмерения   - Строка - наименование единицы измерения упаковки,
//   * Наименование       - Строка - наименование упаковки,
//   * КоличествоУпаковок - Число - количество упаковок, содержащихся в родительской упаковке,
//   * Коэффициент        - Число - коэффициент пересчета в единицу измерения номенклатуры.
//
Процедура ПриОпределенииИерархииУпаковокНоменклатуры(Номенклатура, УпаковкиНоменклатуры) Экспорт
	
	ТекстЗапроса =
	"ВЫБРАТЬ
	|	Номенклатура.Ссылка КАК Номенклатура,
	|	ЕдиницыИзмерения.Ссылка КАК Упаковка,
	|	ЗНАЧЕНИЕ(Справочник.ЕдиницыИзмерения.ПустаяСсылка) КАК РодительУпаковки,
	|	ЕдиницыИзмерения.ЕдиницаИзмеренияПоКлассификатору.Наименование КАК ЕдиницаИзмерения,
	|	ЕдиницыИзмерения.Наименование КАК Наименование,
	|	0 КАК КоличествоУпаковок,
	|	ЕдиницыИзмерения.Коэффициент КАК Коэффициент
	|ИЗ
	|	Справочник.Номенклатура КАК Номенклатура
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.ЕдиницыИзмерения КАК ЕдиницыИзмерения
	|		ПО (ВЫБОР
	|				КОГДА Номенклатура.ИспользоватьНаборыЕдиницИзмерения
	|						И Номенклатура.НаборЕдиницИзмерения <> ЗНАЧЕНИЕ(Справочник.НаборыЕдиницИзмерения.ПустаяСсылка)
	|					ТОГДА Номенклатура.НаборЕдиницИзмерения
	|				ИНАЧЕ Номенклатура.Ссылка
	|			КОНЕЦ = ЕдиницыИзмерения.Владелец)
	|			И (НЕ ЕдиницыИзмерения.ПометкаУдаления)
	|ГДЕ
	|	Номенклатура.Ссылка В(&Номенклатура)
	|
	|УПОРЯДОЧИТЬ ПО
	|	Номенклатура,
	|	Коэффициент";
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("Номенклатура", Номенклатура);
	Запрос.Текст = ТекстЗапроса;
	
	УпаковкиНоменклатуры = Запрос.Выполнить().Выгрузить();
	
КонецПроцедуры

#КонецОбласти

#КонецОбласти

#Область Наборы

// Обработчик события получения сведений о комплектующих набора. Данные о комплектующих могут быть
// получены из вариантов комплектации (ERP, УНФ) при создании наборов оптовиками и розничными магазинами из введенных в
// оборот товаров и могут быть получены из производственных спецификаций при производстве наборов и их комплектующих.
// Если обработчик пустой, то в документе маркировки возможно ручное создание наборов, без проверки принадлежности.
//
// Параметры:
//  Наборы - ТаблицаЗначений, ДанныеФормыКоллекция, Массив - массив строк [Входящий]:
//   * НомерСтроки         - Число - уникальный номер строки с набором,
//   * Номенклатура        - ОпределяемыйТип.Номенклатура - номенклатура набора,
//   * Характеристика      - ОпределяемыйТип.ХарактеристикаНоменклатуры - характеристика набора,
//   * Упаковка            - ОпределяемыйТип.Упаковка - упаковка набора,
//   * КоличествоУпаковок  - Число - количество упаковок набора,
//   * Количество          - Число - количество наборов.
//  КомплектующиеНаборов - ТаблицаЗначений - сведения о наборах [Исходящий], должны быть отсортированы по убыванию
//   номера строки набора:
//   * НомерСтрокиНабора            - Число - уникальный номер строки с набором,
//   * НоменклатураНабора           - ОпределяемыйТип.Номенклатура - номенклатура набора,
//   * ХарактеристикаНабора         - ОпределяемыйТип.ХарактеристикаНоменклатуры - характеристика набора,
//   * УпаковкаНабора               - ОпределяемыйТип.Упаковка - упаковка набора,
//   * НомерСтрокиКомплектации      - Число - порядковый номер строки комплектации,
//   * Номенклатура                 - ОпределяемыйТип.Номенклатура - номенклатура комплектующей набора,
//   * Характеристика               - ОпределяемыйТип.ХарактеристикаНоменклатуры - характеристика комплектующей набора,
//   * Упаковка                     - ОпределяемыйТип.Упаковка - упаковка комплектующей набора,
//   * КоличествоУпаковок           - Число - количество упаковок комплектующей набора,
//   * Количество                   - Число - количество комплектующей набора.
Процедура ПриОпределенииКомплектующихНаборов(Наборы, КомплектующиеНаборов) Экспорт
	
	ТекстЗапроса =
	"ВЫБРАТЬ
	|	ТаблицаТоваров.НомерСтроки КАК НомерСтрокиНабора,
	|	ТаблицаТоваров.Номенклатура КАК НоменклатураНабора,
	|	ТаблицаТоваров.Характеристика КАК ХарактеристикаНабора,
	|	ТаблицаТоваров.Упаковка КАК УпаковкаНабора,
	|	ТаблицаТоваров.КоличествоУпаковок КАК КоличествоУпаковокНабора,
	|	ТаблицаТоваров.Количество КАК КоличествоНаборов
	|ПОМЕСТИТЬ ТаблицаТоваров
	|ИЗ
	|	&ТаблицаТоваров КАК ТаблицаТоваров
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ТаблицаТоваров.НомерСтрокиНабора КАК НомерСтрокиНабора,
	|	ТаблицаТоваров.НоменклатураНабора КАК НоменклатураНабора,
	|	ТаблицаТоваров.ХарактеристикаНабора КАК ХарактеристикаНабора,
	|	ТаблицаТоваров.УпаковкаНабора КАК УпаковкаНабора,
	|	МИНИМУМ(КомплектацииНоменклатурыСостав.НомерСтроки) КАК НомерСтрокиКомплектации,
	|	КомплектацииНоменклатурыСостав.Номенклатура КАК Номенклатура,
	|	КомплектацииНоменклатурыСостав.Характеристика КАК Характеристика,
	|	КомплектацииНоменклатурыСостав.ЕдиницаИзмерения КАК Упаковка,
	|	ТаблицаТоваров.КоличествоУпаковокНабора * КомплектацииНоменклатурыСостав.Количество / ВЫБОР
	|		КОГДА КомплектацииНоменклатурыСостав.КоличествоПродукции = 0
	|			ТОГДА 1
	|		ИНАЧЕ КомплектацииНоменклатурыСостав.КоличествоПродукции
	|	КОНЕЦ КАК КоличествоУпаковок,
	|	ТаблицаТоваров.КоличествоНаборов * КомплектацииНоменклатурыСостав.Количество / ВЫБОР
	|		КОГДА КомплектацииНоменклатурыСостав.КоличествоПродукции = 0
	|			ТОГДА 1
	|		ИНАЧЕ КомплектацииНоменклатурыСостав.КоличествоПродукции
	|	КОНЕЦ * ВЫБОР
	|		КОГДА КомплектацииНоменклатурыСостав.ЕдиницаИзмерения ССЫЛКА Справочник.ЕдиницыИзмерения
	|			ТОГДА КомплектацииНоменклатурыСостав.ЕдиницаИзмерения.Коэффициент
	|		ИНАЧЕ 1
	|	КОНЕЦ КАК Количество
	|ПОМЕСТИТЬ втКомплектацииНоменклатуры
	|ИЗ
	|	ТаблицаТоваров КАК ТаблицаТоваров
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.КомплектацииНоменклатуры КАК КомплектацииНоменклатуры
	|		ПО ТаблицаТоваров.НоменклатураНабора = КомплектацииНоменклатуры.Владелец
	|			И (ТаблицаТоваров.ХарактеристикаНабора = КомплектацииНоменклатуры.Характеристика
	|				ИЛИ ТаблицаТоваров.ХарактеристикаНабора = ЗНАЧЕНИЕ(Справочник.ХарактеристикиНоменклатуры.ПустаяСсылка))
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.КомплектацииНоменклатуры.Состав КАК КомплектацииНоменклатурыСостав
	|		ПО (КомплектацииНоменклатуры.Ссылка = КомплектацииНоменклатурыСостав.Ссылка)
	|			И (КомплектацииНоменклатуры.Владелец.ВидПродукцииИС = КомплектацииНоменклатурыСостав.Номенклатура.ВидПродукцииИС)
	|ГДЕ
	|	НЕ КомплектацииНоменклатуры.Недействителен
	|	И НЕ КомплектацииНоменклатуры.ПометкаУдаления
	|
	|СГРУППИРОВАТЬ ПО
	|	ТаблицаТоваров.НомерСтрокиНабора,
	|	ТаблицаТоваров.НоменклатураНабора,
	|	ТаблицаТоваров.ХарактеристикаНабора,
	|	ТаблицаТоваров.УпаковкаНабора,
	|	КомплектацииНоменклатурыСостав.Номенклатура,
	|	КомплектацииНоменклатурыСостав.Характеристика,
	|	КомплектацииНоменклатурыСостав.ЕдиницаИзмерения,
	|	ТаблицаТоваров.КоличествоУпаковокНабора * КомплектацииНоменклатурыСостав.Количество / ВЫБОР
	|		КОГДА КомплектацииНоменклатурыСостав.КоличествоПродукции = 0
	|			ТОГДА 1
	|		ИНАЧЕ КомплектацииНоменклатурыСостав.КоличествоПродукции
	|	КОНЕЦ,
	|	ТаблицаТоваров.КоличествоНаборов * КомплектацииНоменклатурыСостав.Количество / ВЫБОР
	|		КОГДА КомплектацииНоменклатурыСостав.КоличествоПродукции = 0
	|			ТОГДА 1
	|		ИНАЧЕ КомплектацииНоменклатурыСостав.КоличествоПродукции
	|	КОНЕЦ * ВЫБОР
	|		КОГДА КомплектацииНоменклатурыСостав.ЕдиницаИзмерения ССЫЛКА Справочник.ЕдиницыИзмерения
	|			ТОГДА КомплектацииНоменклатурыСостав.ЕдиницаИзмерения.Коэффициент
	|		ИНАЧЕ 1
	|	КОНЕЦ
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ТаблицаТоваров.НомерСтрокиНабора КАК НомерСтрокиНабора,
	|	ТаблицаТоваров.НоменклатураНабора КАК НоменклатураНабора,
	|	ТаблицаТоваров.ХарактеристикаНабора КАК ХарактеристикаНабора,
	|	ТаблицаТоваров.УпаковкаНабора КАК УпаковкаНабора,
	|	МИНИМУМ(СпецификацииСостав.НомерСтроки) КАК НомерСтрокиКомплектации,
	|	СпецификацииСостав.Номенклатура КАК Номенклатура,
	|	СпецификацииСостав.Характеристика КАК Характеристика,
	|	СпецификацииСостав.ЕдиницаИзмерения КАК Упаковка,
	|	ТаблицаТоваров.КоличествоУпаковокНабора * СпецификацииСостав.Количество / ВЫБОР
	|		КОГДА СпецификацииСостав.КоличествоПродукции = 0
	|			ТОГДА 1
	|		ИНАЧЕ СпецификацииСостав.КоличествоПродукции
	|	КОНЕЦ КАК КоличествоУпаковок,
	|	ТаблицаТоваров.КоличествоНаборов * СпецификацииСостав.Количество / ВЫБОР
	|		КОГДА СпецификацииСостав.КоличествоПродукции = 0
	|			ТОГДА 1
	|		ИНАЧЕ СпецификацииСостав.КоличествоПродукции
	|	КОНЕЦ * ВЫБОР
	|		КОГДА СпецификацииСостав.ЕдиницаИзмерения ССЫЛКА Справочник.ЕдиницыИзмерения
	|			ТОГДА СпецификацииСостав.ЕдиницаИзмерения.Коэффициент
	|		ИНАЧЕ 1
	|	КОНЕЦ КАК Количество
	|ИЗ
	|	ТаблицаТоваров КАК ТаблицаТоваров
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.Спецификации КАК Спецификации
	|		ПО ТаблицаТоваров.НоменклатураНабора = Спецификации.Владелец
	|			И (ТаблицаТоваров.ХарактеристикаНабора = Спецификации.ХарактеристикаПродукции
	|				ИЛИ ТаблицаТоваров.ХарактеристикаНабора = ЗНАЧЕНИЕ(Справочник.ХарактеристикиНоменклатуры.ПустаяСсылка))
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.Спецификации.Состав КАК СпецификацииСостав
	|		ПО (Спецификации.Ссылка = СпецификацииСостав.Ссылка)
	|			И (Спецификации.Владелец.ВидПродукцииИС = СпецификацииСостав.Номенклатура.ВидПродукцииИС)
	|ГДЕ
	|	НЕ ТаблицаТоваров.НомерСтрокиНабора В
	|				(ВЫБРАТЬ РАЗЛИЧНЫЕ
	|					втКомплектацииНоменклатуры.НомерСтрокиНабора
	|				ИЗ
	|					втКомплектацииНоменклатуры)
	|	И НЕ Спецификации.Недействителен
	|	И НЕ Спецификации.ПометкаУдаления
	|
	|СГРУППИРОВАТЬ ПО
	|	ТаблицаТоваров.НомерСтрокиНабора,
	|	ТаблицаТоваров.НоменклатураНабора,
	|	ТаблицаТоваров.ХарактеристикаНабора,
	|	ТаблицаТоваров.УпаковкаНабора,
	|	СпецификацииСостав.Номенклатура,
	|	СпецификацииСостав.Характеристика,
	|	СпецификацииСостав.ЕдиницаИзмерения,
	|	ТаблицаТоваров.КоличествоУпаковокНабора * СпецификацииСостав.Количество / ВЫБОР
	|		КОГДА СпецификацииСостав.КоличествоПродукции = 0
	|			ТОГДА 1
	|		ИНАЧЕ СпецификацииСостав.КоличествоПродукции
	|	КОНЕЦ,
	|	ТаблицаТоваров.КоличествоНаборов * СпецификацииСостав.Количество / ВЫБОР
	|		КОГДА СпецификацииСостав.КоличествоПродукции = 0
	|			ТОГДА 1
	|		ИНАЧЕ СпецификацииСостав.КоличествоПродукции
	|	КОНЕЦ * ВЫБОР
	|		КОГДА СпецификацииСостав.ЕдиницаИзмерения ССЫЛКА Справочник.ЕдиницыИзмерения
	|			ТОГДА СпецификацииСостав.ЕдиницаИзмерения.Коэффициент
	|		ИНАЧЕ 1
	|	КОНЕЦ
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	втКомплектацииНоменклатуры.НомерСтрокиНабора,
	|	втКомплектацииНоменклатуры.НоменклатураНабора,
	|	втКомплектацииНоменклатуры.ХарактеристикаНабора,
	|	втКомплектацииНоменклатуры.УпаковкаНабора,
	|	втКомплектацииНоменклатуры.НомерСтрокиКомплектации,
	|	втКомплектацииНоменклатуры.Номенклатура,
	|	втКомплектацииНоменклатуры.Характеристика,
	|	втКомплектацииНоменклатуры.Упаковка,
	|	втКомплектацииНоменклатуры.КоличествоУпаковок,
	|	втКомплектацииНоменклатуры.Количество
	|ИЗ
	|	втКомплектацииНоменклатуры КАК втКомплектацииНоменклатуры";
	
	ТаблицаТоваров = Новый ТаблицаЗначений;
	ТаблицаТоваров.Колонки.Добавить("НомерСтроки",         ОбщегоНазначения.ОписаниеТипаЧисло(5));
	ТаблицаТоваров.Колонки.Добавить("Номенклатура",        Метаданные.ОпределяемыеТипы.Номенклатура.Тип);
	ТаблицаТоваров.Колонки.Добавить("Характеристика",      Метаданные.ОпределяемыеТипы.ХарактеристикаНоменклатуры.Тип);
	ТаблицаТоваров.Колонки.Добавить("Упаковка",            Метаданные.ОпределяемыеТипы.Упаковка.Тип);
	ТаблицаТоваров.Колонки.Добавить("КоличествоУпаковок",  ОбщегоНазначения.ОписаниеТипаЧисло(15,3));
	ТаблицаТоваров.Колонки.Добавить("Количество",          ОбщегоНазначения.ОписаниеТипаЧисло(15,3));
	Для Каждого Строка Из Наборы Цикл
		НоваяСтрока = ТаблицаТоваров.Добавить();
		ЗаполнитьЗначенияСвойств(НоваяСтрока, Строка);
	КонецЦикла;
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("ТаблицаТоваров", ТаблицаТоваров);
	Запрос.Текст = ТекстЗапроса;
	КомплектующиеНаборов = Запрос.Выполнить().Выгрузить();
	
КонецПроцедуры

#КонецОбласти

#Область ПанельАдминистрированияИСМП

// Предназначения для управления признаком возможности включения / отключения ведения учета МРЦ табачной продукции.
// При заполнении причины - соответствующая доступность изменяется, на форме отображатеся указанная причина.
// Например, можно запретить отключение функции, если ведется учет МРЦ в составе серий или характеристик.
// 
// Параметры:
//  ВозможноВключение              - Булево - Признак возможности включения.
//  ПричинаНевозможностиВключения  - Строка - Причина, по которой невозможно включить учет МРЦ.
//  ВозможноОтключение             - Булево - Признак возможности отключения.
//  ПричинаНевозможностиОтключения - Строка - Причина, по которой невозможно выключить учет МРЦ.
Процедура ПриОпределенииВозможностиВключенияОтключенияВеденияУчетаМРЦ(ВозможноВключение, ПричинаНевозможностиВключения, ВозможноОтключение, ПричинаНевозможностиОтключения) Экспорт
	
	Возврат;
	
КонецПроцедуры

#КонецОбласти

#Область МаркировкаОстатков

// Определяет ссылку на документ-основание маркировки товаров, как документ, являющийся основанием для маркировки остатков.
// 
// Параметры:
// 	СсылкаНаДокумент   - ОпределяемыйТип.ОснованиеМаркировкаТоваровИСМП - Ссылка на проверямый документ.
// 	ЯвляетсяОснованием - Булево                                         - Выходной параметр.
Процедура ЯвляетсяОснованиемДляМаркировкиОстатков(СсылкаНаДокумент, ЯвляетсяОснованием) Экспорт
	
	ИнтеграцияИСМПУНФ.ЯвляетсяОснованиемДляМаркировкиОстатков(СсылкаНаДокумент, ЯвляетсяОснованием);
	
КонецПроцедуры

#КонецОбласти

#Область ПроверкаСредствамиККТ

// При определении текста запроса платежных документов по документу продажи или возврата.
// Определяет текст запроса получения ссылок на платежные документы, из которых могла выполняться проверка средствами
// ККТ при пробитии чека, для отображения результатов проверки при открытии формы проверки.
// 
// Используется в случае наличия функционала, при котором возможно пробитие чека на ККТ из платежного документа, связанного
// с товароучетным документом, в котором присутствуют коды маркировки, и при заполнении параметров сканирования
// платежного документа используется ссылка на платежный документ (ПараметрыСканирования.СсылкаНаДокумент), а не ссылка
// на товароучетный документ. Например: Приходный кассовый ордер может быть оформлен по нескольким документам Реализации
// товара с кодами маркировки, при этом при заполнении параметров сканирования для ПКО
// ПараметрыСканирования.СсылкаНаДокумент - устанавливается ссылка на ПКО. В этом случае, в переопределеннии необходимо
//                                          дополнить текст запроса для получения документов ПКО,
// связанными с текущей реализацией. Возможен аналогичный сценарий с РКО и Возвратом.
//
// Текст запроса присоединяется конструкцией ОБЪЕДИНИТЬ ВСЕ, должен содержать единственное поле поле со ссылкой на
// платежный документ типа ОпределяемыйТип.ОснованиеФискальнойОперацииИСМП.
// В запросе установлен параметр &СсылкаНаДокумент значением параметра СсылкаНаДокумент.
// 
// Параметры:
//  СсылкаНаДокумент                - ОпределяемыйТип.ОснованиеФискальнойОперацииИСМП - Ссылка на товароучетный документ.
//  ТекстЗапросаПлатежныхДокументов - Строка - Текст запроса платежных документов по товароучетному
Процедура ПриОпределенииТекстаЗапросаПлатежныхДокументовПоДокументуПродажиИлиВозврата(СсылкаНаДокумент, ТекстЗапросаПлатежныхДокументов) Экспорт
	
	Если ТипЗнч(СсылкаНаДокумент) = Тип("ДокументСсылка.РасходнаяНакладная") Тогда
	
		ТекстЗапросаПлатежныхДокументов =
			"ВЫБРАТЬ
			|	ОперацияПоПлатежнымКартамРасшифровкаПлатежа.Ссылка КАК Ссылка
			|ИЗ
			|	Документ.ОперацияПоПлатежнымКартам.РасшифровкаПлатежа КАК ОперацияПоПлатежнымКартамРасшифровкаПлатежа
			|ГДЕ
			|	ОперацияПоПлатежнымКартамРасшифровкаПлатежа.Ссылка.Проведен
			|	И ОперацияПоПлатежнымКартамРасшифровкаПлатежа.Документ = &СсылкаНаДокумент
			|
			|ОБЪЕДИНИТЬ ВСЕ
			|
			|ВЫБРАТЬ
			|	ПоступлениеВКассуРасшифровкаПлатежа.Ссылка
			|ИЗ
			|	Документ.ПоступлениеВКассу.РасшифровкаПлатежа КАК ПоступлениеВКассуРасшифровкаПлатежа
			|ГДЕ
			|	ПоступлениеВКассуРасшифровкаПлатежа.Ссылка.Проведен
			|	И ПоступлениеВКассуРасшифровкаПлатежа.Документ = &СсылкаНаДокумент";
		
		
	ИначеЕсли ТипЗнч(СсылкаНаДокумент) = Тип("ДокументСсылка.ПриходнаяНакладная") Тогда
		
		ТекстЗапросаПлатежныхДокументов =
			"ВЫБРАТЬ
			|	ОперацияПоПлатежнымКартамРасшифровкаПлатежа.Ссылка КАК Ссылка
			|ИЗ
			|	Документ.ОперацияПоПлатежнымКартам.РасшифровкаПлатежа КАК ОперацияПоПлатежнымКартамРасшифровкаПлатежа
			|ГДЕ
			|	ОперацияПоПлатежнымКартамРасшифровкаПлатежа.Ссылка.Проведен
			|	И ОперацияПоПлатежнымКартамРасшифровкаПлатежа.Документ = &СсылкаНаДокумент
			|
			|ОБЪЕДИНИТЬ ВСЕ
			|
			|ВЫБРАТЬ
			|	РасходИзКассыРасшифровкаПлатежа.Ссылка
			|ИЗ
			|	Документ.РасходИзКассы.РасшифровкаПлатежа КАК РасходИзКассыРасшифровкаПлатежа
			|ГДЕ
			|	РасходИзКассыРасшифровкаПлатежа.Ссылка.Проведен
			|	И РасходИзКассыРасшифровкаПлатежа.Документ = &СсылкаНаДокумент";
		
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

// Получение ссылки ТН ВЭД по коду.
//
// Параметры:
//  КодТНВЭД - Строка - Код по классификатору товарной номенклатуры внешнеэкономической деятельности.
//  ТНВЭД - Произвольный - искомый элемент.
//
Процедура КлассификаторТНВЭД(КодТНВЭД, ТНВЭД) Экспорт
	
	ИнтеграцияИСМПУНФ.КлассификаторТНВЭД(КодТНВЭД, ТНВЭД);
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийДокументов

// Вызывается при вводе документа на основании, при выполнении метода Заполнить или при интерактивном вводе нового.
//
// Параметры:
//   ДокументОбъект - ДокументОбъект - заполняемый документ,
//   ДанныеЗаполнения - Произвольный - значение, которое используется как основание для заполнения,
//   ТекстЗаполнения - Строка, Неопределено - текст, используемый для заполнения документа,
//   СтандартнаяОбработка - Булево - признак выполнения стандартной (системной) обработки события.
//
Процедура ОбработкаЗаполненияДокумента(ДокументОбъект, ДанныеЗаполнения, ТекстЗаполнения, СтандартнаяОбработка) Экспорт

	ИнтеграцияИСМПУНФ.ОбработкаЗаполненияДокумента(ДокументОбъект, ДанныеЗаполнения, ТекстЗаполнения, СтандартнаяОбработка);

КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийДокументов

// Вызывается при выполнении заполнения набора из какого-либо значения.
//
// Параметры:
//   РегистрСведенийНаборЗаписей - РегистрСведенийНаборЗаписей - заполняемый регистр сведений,
//   ДанныеЗаполнения - Произвольный - значение, которое используется как основание для заполнения,
//   СтандартнаяОбработка - Булево - признак выполнения стандартной (системной) обработки события.
//
Процедура ОбработкаЗаполненияРегистраСведений(РегистрСведенийНаборЗаписей, ДанныеЗаполнения, СтандартнаяОбработка) Экспорт
	
	Возврат;

КонецПроцедуры

#КонецОбласти

#Область ТипыРасхожденийКодовМаркировки

// Реализовать получение значение Брак определяемого типа ТипРасхожденияИСМП.
// Параметры:
//  ТипРасхождения - ОпределяемыйТип.ТипРасхожденияИСМП - для определения типа расхождения
Процедура ПриОпределенииТипаРасхожденияИСМПБрак(ТипРасхождения) Экспорт
	
	
КонецПроцедуры

// Реализовать получение значение Излишек определяемого типа ТипРасхожденияИСМП.
// Параметры:
//  ТипРасхождения - ОпределяемыйТип.ТипРасхожденияИСМП - для определения типа расхождения
Процедура ПриОпределенииТипаРасхожденияИСМПИзлишек(ТипРасхождения) Экспорт
	
	
КонецПроцедуры

// Реализовать получение значение Недостача определяемого типа ТипРасхожденияИСМП.
// Параметры:
//  ТипРасхождения - ОпределяемыйТип.ТипРасхожденияИСМП - для определения типа расхождения
//  
Процедура ПриОпределенииТипаРасхожденияИСМПНедостача(ТипРасхождения) Экспорт
	
	
КонецПроцедуры

#КонецОбласти
	
#Область СлужебныйПрограммныйИнтерфейс

#Область Отладка

Процедура ПриОпределенииПутиКФайлуЛогирования(ПутьКФайлу) Экспорт
	
	Возврат;
	
КонецПроцедуры

// Вызывается расширением формы при необходимости проверки заполнения реквизитов при записи или при проведении документа
// в форме, а также при выполнении метода ПроверитьЗаполнение.
//
// Параметры:
//  ДокументОбъект - ДокументОбъект - проверяемый документ,
//  Отказ - Булево - признак отказа от проведения документа,
//  ПроверяемыеРеквизиты - Массив - массив путей к реквизитам, для которых будет выполнена проверка заполнения,
//  МассивНепроверяемыхРеквизитов - Массив - массив путей к реквизитам, для которых не будет выполнена проверка заполнения.
Процедура ПриОпределенииОбработкиПроверкиЗаполнения(ДокументОбъект, Отказ, ПроверяемыеРеквизиты, МассивНепроверяемыхРеквизитов) Экспорт
	
	ИнтеграцияИСМПУНФ.ПриОпределенииОбработкиПроверкиЗаполнения(ДокументОбъект, Отказ, ПроверяемыеРеквизиты, МассивНепроверяемыхРеквизитов);
	
КонецПроцедуры

#КонецОбласти

#Область ЭлектроннаяПодпись

// Предназначена для получения сертификата на компьютере по строке отпечатка.
// (См. ЭлектроннаяПодписьСлужебный.ПолучитьСертификатПоОтпечатку)
//
// Параметры:
//   Сертификат             - СертификатКриптографии - найденный сертификат электронной подписи и шифрования.
//   Отпечаток              - Строка - Base64 кодированный отпечаток сертификата.
//   ТолькоВЛичномХранилище - Булево - если Истина, тогда искать в личном хранилище, иначе везде.
//   СтандартнаяОбработка   - Булево - признак обработки стандартной библиотекой (установить Ложь при переопределении)
//
Процедура ПриОпределенииСертификатаПоОтпечатку(Сертификат, Отпечаток, ТолькоВЛичномХранилище, СтандартнаяОбработка) Экспорт
	
	Возврат;
	
КонецПроцедуры

#КонецОбласти

// Процедура заполняет признак использования производства на стороне.
//
// Параметры:
//  Используется - Булево - Признак использования производства на стороне.
Процедура ИспользуетсяПереработкаНаСтороне(Используется) Экспорт

	ИнтеграцияИСМПУНФ.ИспользуетсяПереработкаНаСтороне(Используется);

КонецПроцедуры

// Процедура заполняет признак использования производственного объекта.
//
// Параметры:
//  Используется - Булево - Признак использования производственного объекта.
Процедура ПриОпределенииИспользованияПроизводственногоОбъекта(Используется) Экспорт

	Возврат;

КонецПроцедуры

// Процедура заполняет признак использования передачи товаров между организациями.
// Вызывается из документа ОтгрузкаТоваровИСМП для определения доступных типов элемента формы Контрагент.
//
// Параметры:
//  Используется - Булево - Признак использования передачи товаров между организациями, значение по умолчанию Ложь.
Процедура ПриОпределенииИспользованияПередачиТоваровМеждуОрганизациями(Используется) Экспорт
	
	Возврат;
	
КонецПроцедуры

Процедура ПриОпределенииСкладаДокументаОснования(Склад, ДокументОснование) Экспорт
	
	ИнтеграцияИСМПУНФ.ПриОпределенииСкладаДокументаОснования(Склад, ДокументОснование);
	
КонецПроцедуры

Процедура ЗаполнитьКодыТНВЭДПоНоменклатуреВТабличнойЧасти(ТабличнаяЧасть) Экспорт
	
	ИнтеграцияИСМПУНФ.ЗаполнитьКодыТНВЭДПоНоменклатуреВТабличнойЧасти(ТабличнаяЧасть);
	
КонецПроцедуры

#КонецОбласти
