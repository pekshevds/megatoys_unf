
#Область ПрограммныйИнтерфейс

// Переопределяется список и настройки классификаторов обновления которых необходимо
// загружать из сервиса классификаторов. Для получения идентификатора необходимо
// перевести наименование объекта метаданных, данные которого планируется обновлять,
// на английский язык. При переводе рекомендуется использовать профессиональные
// программы перевода текста, либо воспользоваться услугами переводчика, т.к. при
// обнаружении смысловых ошибок в идентификаторе потребуется заводить новый классификатор
// и изменять код конфигурации.
//
// Параметры:
//  Классификаторы  - Массив из Структура - содержит настройки загрузки классификаторов.
//                    Состав настроек см. функцию РаботаСКлассификаторами.ОписаниеКлассификатора.
//
// Пример:
//	Описатель = РаботаСКлассификаторами.ОписаниеКлассификатора();
//	Описатель.Наименование               = НСтр("ru = 'Ставки рефинансирования'");
//	Описатель.Идентификатор              = "CentralBankRefinancingRate";
//	Описатель.ОбновлятьАвтоматически     = Истина;
//	Описатель.ОбщиеДанные                = Истина;
//	Описатель.СохранятьФайлВКэш          = Ложь;
//	Описатель.ОбработкаРазделенныхДанных = Ложь;
//	Классификаторы.Добавить(Описатель);
//
//@skip-warning
Процедура ПриДобавленииКлассификаторов(Классификаторы) Экспорт
	
	Описатель = РаботаСКлассификаторами.ОписаниеКлассификатора();  
	Описатель.Наименование = НСтр("ru = 'Общероссийский классификатор занятий'");
	Описатель.Идентификатор           = "RussianClassificationOfOccupations";
	Описатель.ОбновлятьАвтоматически = Истина;
	Описатель.ОбщиеДанные = Истина;
	Описатель.ОбработкаРазделенныхДанных = Истина;
	Описатель.СохранятьФайлВКэш = Истина;
	Классификаторы.Добавить(Описатель);
	
	Описатель = РаботаСКлассификаторами.ОписаниеКлассификатора();
	Описатель.Наименование = НСтр("ru = 'Минимальная оплата труда'");
	Описатель.Идентификатор = "MinMonthlyWage";
	Описатель.ОбновлятьАвтоматически = Истина;
	Описатель.ОбщиеДанные = Истина;
	Описатель.ОбработкаРазделенныхДанных = Истина;
	Описатель.СохранятьФайлВКэш = Истина;
	Классификаторы.Добавить(Описатель);
	
	Описатель = РаботаСКлассификаторами.ОписаниеКлассификатора();
	Описатель.Наименование = НСтр("ru = 'Размер вычетов НДФЛ'");
	Описатель.Идентификатор = "PITDeductions";
	Описатель.ОбновлятьАвтоматически = Истина;
	Описатель.ОбщиеДанные = Истина;
	Описатель.ОбработкаРазделенныхДанных = Ложь;
	Описатель.СохранятьФайлВКэш = Истина;
	Классификаторы.Добавить(Описатель);
	
	Описатель = РаботаСКлассификаторами.ОписаниеКлассификатора();
	Описатель.Наименование = НСтр("ru = 'Тарифы страховых взносов'");
	Описатель.Идентификатор = "InsurancePaymentPercentagesR2";
	Описатель.ОбновлятьАвтоматически = Истина;
	Описатель.ОбщиеДанные = Истина;
	Описатель.ОбработкаРазделенныхДанных = Истина;
	Описатель.СохранятьФайлВКэш = Истина;
	Классификаторы.Добавить(Описатель);
	
	// ИнтеграцияИС
	ИнтеграцияИС.ПриДобавленииКлассификаторов(Классификаторы);
	// Конец ИнтеграцияИ
	
КонецПроцедуры

// Переопределяются номер версии классификатора, который уже загружен в информационную базу.
// При начале использовании подсистемы "РаботаСКлассификаторами" или при подключении нового
// классификатора к сервису, неизвестно какой номер версии классификатора загружен в ИБ,
// поэтому при очередной итерации обновления данных из сервиса данные будут загружены повторно.
// Чтобы избежать повторной загрузки, необходимо указать задать начальный номер версии.
// Метод будет вызван при попытке загрузить версию классификатора, у которого установлена
// версия равная 0.
//
// Параметры:
//  Идентификатор        - Строка - идентификатор классификатора в сервисе классификаторов.
//                         Определяется в процедуре ПриДобавленииКлассификаторов.
//  НачальныйНомерВерсии - Число - номер версии загруженного классификатора.
//
// Пример:
//	Если Идентификатор = "CentralBankRefinancingRate" Тогда
//		НачальныйНомерВерсии = РегистрыСведений.СтавкиРефинансирования.НомерЗагруженнойВерсии();
//	КонецЕсли;
//
//@skip-warning
Процедура ПриОпределенииНачальногоНомераВерсииКлассификатора(Идентификатор, НачальныйНомерВерсии) Экспорт
	
	// ИнтеграцияИС
	ИнтеграцияИС.ПриОпределенииНачальногоНомераВерсииКлассификатора(Идентификатор, НачальныйНомерВерсии);
	// Конец ИнтеграцияИС
	
КонецПроцедуры

#КонецОбласти
