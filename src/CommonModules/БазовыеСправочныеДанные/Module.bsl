#Область СлужебныйПрограммныйИнтерфейс

#Область Свойства

// См. УправлениеСвойствамиПереопределяемый.ПриПолученииПредопределенныхНаборовСвойств.
Процедура ПриПолученииПредопределенныхНаборовСвойств(Наборы) Экспорт
	
	УправлениеСвойствамиБЗК.ЗарегистрироватьНаборСвойств(Наборы, "d42dbf77-9802-11e9-80cd-4cedfb43b11a", Метаданные.Справочники.СпособыОтраженияЗарплатыВБухУчете);
	
	Если ОбщегоНазначения.ПодсистемаСуществует("ЗарплатаКадрыПриложения.БазовыеСправочныеДанные.Организации") Тогда
		МодульОрганизацииСлужебный = ОбщегоНазначения.ОбщийМодуль("ОрганизацииСлужебный");
		МодульОрганизацииСлужебный.ПриПолученииПредопределенныхНаборовСвойств(Наборы);
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область ИнтеграцияС1СДокументооборот

// См. ИнтеграцияС1СДокументооборотБазоваяФункциональностьПереопределяемый.ЗаполнитьРеквизитыИзПотребителя.
Процедура ЗаполнитьРеквизитыОбъектаДокументооборота(Прокси, ОбъектXDTO, СсылкаНаПотребитель) Экспорт
	
	Если Не ТипЗнч(СсылкаНаПотребитель) = Тип("ПеречислениеСсылка.ЮридическоеФизическоеЛицо") Тогда
		Возврат;
	КонецЕсли;
	
	Настройки = Неопределено;
	
	Если ОбщегоНазначения.ПодсистемаСуществует("ИнтеграцияС1СДокументооборотом") Тогда
		МодульИнтеграцияС1СДокументооборотБазоваяФункциональностьВызовСервера = ОбщегоНазначения.ОбщийМодуль(
			"ИнтеграцияС1СДокументооборотБазоваяФункциональностьВызовСервера");
		Настройки = МодульИнтеграцияС1СДокументооборотБазоваяФункциональностьВызовСервера.ИспользоватьИнтеграцию();
	КонецЕсли;
	
	Если Настройки = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	Если Настройки.ИспользоватьИнтеграциюДО2 Тогда
		ЮрФизЛицоID = "";
		Если СсылкаНаПотребитель = Перечисления.ЮридическоеФизическоеЛицо.ФизическоеЛицо Тогда
			ЮрФизЛицоID = "ФизЛицо";
		ИначеЕсли СсылкаНаПотребитель = Перечисления.ЮридическоеФизическоеЛицо.ЮридическоеЛицо Тогда
			ЮрФизЛицоID = "ЮрЛицо";
		КонецЕсли;
		
		Если ОбщегоНазначения.ПодсистемаСуществует("ИнтеграцияС1СДокументооборотом") Тогда
			МодульИнтеграцияС1СДокументооборотБазоваяФункциональность = ОбщегоНазначения.ОбщийМодуль(
				"ИнтеграцияС1СДокументооборотБазоваяФункциональность");
			ОбъектXDTO = МодульИнтеграцияС1СДокументооборотБазоваяФункциональность.СоздатьОбъект(
				Прокси,
				"DMLegalPrivatePerson");
			ОбъектXDTO.name = Строка(СсылкаНаПотребитель);
			ОбъектXDTO.objectID = МодульИнтеграцияС1СДокументооборотБазоваяФункциональность.СоздатьObjectID(
				Прокси,
				ЮрФизЛицоID,
				"DMLegalPrivatePerson");
		КонецЕсли;
	ИначеЕсли Настройки.ИспользоватьИнтеграциюДО3 Тогда
		Если СсылкаНаПотребитель = Перечисления.ЮридическоеФизическоеЛицо.ЮридическоеЛицо Тогда
			ОбъектXDTO = "LglPerson";
		ИначеЕсли СсылкаНаПотребитель = Перечисления.ЮридическоеФизическоеЛицо.ФизическоеЛицо Тогда
			ОбъектXDTO = "Individ";
		КонецЕсли;
	КонецЕсли;
	
КонецПроцедуры

// См. ИнтеграцияС1СДокументооборотБазоваяФункциональностьПереопределяемый.ПриОпределенииЗначенияРеквизитаПоОбъектуXDTO.
Процедура ПриОпределенииЗначенияРеквизитаПоОбъектуXDTO(Результат, ЗначениеЗаполнения, ТипРеквизита, ИмяРеквизита,
		ТипОбъекта, Объект, ЭтоДополнительноеСвойство, Свойство, ПараметрыВыбора) Экспорт
	
	Если Не ТипРеквизита = Тип("ПеречислениеСсылка.ЮридическоеФизическоеЛицо") Тогда
		Возврат;
	КонецЕсли;
	
	Если ТипЗнч(ЗначениеЗаполнения) = Тип("ОбъектXDTO") Тогда
		
		Если ОбщегоНазначения.ПодсистемаСуществует("ИнтеграцияС1СДокументооборотом") Тогда
			МодульИнтеграцияС1СДокументооборотБазоваяФункциональность = ОбщегоНазначения.ОбщийМодуль(
				"ИнтеграцияС1СДокументооборотБазоваяФункциональность");
			
			Если Не МодульИнтеграцияС1СДокументооборотБазоваяФункциональность.СвойствоУстановлено(
					ЗначениеЗаполнения, "objectID") Тогда
				Возврат;
			КонецЕсли;
		КонецЕсли;
		
		Если ЗначениеЗаполнения.objectId.id = "ЮрЛицо" Тогда
			Результат = Перечисления.ЮридическоеФизическоеЛицо.ЮридическоеЛицо;
		ИначеЕсли ЗначениеЗаполнения.objectId.id = "ФизЛицо" Тогда
			Результат = Перечисления.ЮридическоеФизическоеЛицо.ФизическоеЛицо;
		КонецЕсли;
		
	ИначеЕсли ТипЗнч(ЗначениеЗаполнения) = Тип("Структура") Тогда
		
		Если ЗначениеЗаполнения.ЗначениеСвойства = "LglPerson" Тогда
			Результат = Перечисления.ЮридическоеФизическоеЛицо.ЮридическоеЛицо;
		ИначеЕсли ЗначениеЗаполнения.ЗначениеСвойства = "Individ" Тогда
			Результат = Перечисления.ЮридическоеФизическоеЛицо.ФизическоеЛицо;
		КонецЕсли;
		
	КонецЕсли;
	
КонецПроцедуры

// См. ИнтеграцияС1СДокументооборотБазоваяФункциональностьПереопределяемый.ДополнитьСоответствиеТипов.
Процедура ДополнитьСоответствиеТипов(Таблица) Экспорт
	
	Если ОбщегоНазначения.ПодсистемаСуществует("ИнтеграцияС1СДокументооборотом") Тогда
		МодульИнтеграцияС1СДокументооборотБазоваяФункциональность = ОбщегоНазначения.ОбщийМодуль(
			"ИнтеграцияС1СДокументооборотБазоваяФункциональность");
		МодульИнтеграцияС1СДокументооборотБазоваяФункциональность.ДобавитьСтрокуСоответствияТипов(
			Таблица, "DMLegalPrivatePerson", Тип("ПеречислениеСсылка.ЮридическоеФизическоеЛицо"));
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#КонецОбласти
