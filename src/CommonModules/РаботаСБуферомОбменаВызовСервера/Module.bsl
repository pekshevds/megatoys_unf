#Область СлужебныйПрограммныйИнтерфейс
// Копирует переданные файлы в буфер обмена.
//
// Параметры:
//   МассивВложений - Массив - множество данных о файлах, нужные для копирования.
//
Процедура СкопироватьВыделенныеФайлы(Знач МассивВложений) Экспорт
	
	ОбщегоНазначения.СкопироватьВБуферОбмена(МассивВложений);
	
КонецПроцедуры

// Возвращает данные из буфера обмена.
Функция ПолучитьФайлыИзБуфера(ВладелецФайла) Экспорт
	
	Если ОбщегоНазначения.ПустойБуферОбмена() Тогда
		Возврат Неопределено;
	КонецЕсли;
	
	ДанныеИзБуфераОбмена = ОбщегоНазначения.СтрокиИзБуфераОбмена();
	МассивВложений = Новый Массив;
	ПараметрыФайла = РаботаСФайлами.ПараметрыДобавленияФайла();
	ПараметрыФайла.ВладелецФайлов = ВладелецФайла;
	Для Каждого Вложение Из ДанныеИзБуфераОбмена.Данные Цикл
		Если Не ЗначениеЗаполнено(Вложение.Ссылка) Тогда
			РазложенноеИмяФайла = ОбщегоНазначенияКлиентСервер.РазложитьПолноеИмяФайла(Вложение.Представление);
			РасширениеБезТочки = СтрЗаменить(РазложенноеИмяФайла.Расширение, ".", "");
			ПараметрыФайла.ИмяБезРасширения = РазложенноеИмяФайла.ИмяБезРасширения;
			ПараметрыФайла.РасширениеБезТочки = РасширениеБезТочки;
			Адрес = Вложение.АдресВоВременномХранилище;
		Иначе
			ДанныеФайла = РаботаСФайлами.ДанныеФайла(Вложение.Ссылка);
			ПараметрыФайла.Автор = ДанныеФайла.Автор;
			ПараметрыФайла.ИмяБезРасширения = ДанныеФайла.Наименование;
			ПараметрыФайла.РасширениеБезТочки = ДанныеФайла.Расширение;
			Адрес = ДанныеФайла.СсылкаНаДвоичныеДанныеФайла;
		КонецЕсли;
		СсылкаНаСкопированныйФайл = РаботаСФайлами.ДобавитьФайл(ПараметрыФайла, Адрес);
		МассивВложений.Добавить(СсылкаНаСкопированныйФайл);
	КонецЦикла;
	
	Возврат МассивВложений;
	
КонецФункции
#КонецОбласти