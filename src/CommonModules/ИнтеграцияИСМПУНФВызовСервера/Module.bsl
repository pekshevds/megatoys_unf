#Область СлужебныеПроцедурыИФункции

// Параметры:
// 	ВидЦен - СправочникСсылка.ВидыЦен
// Возвращаемое значение:
// 	Булево
Функция ЦенаВключаетНДС(Знач ВидЦен) Экспорт
	Возврат ОбщегоНазначения.ЗначениеРеквизитаОбъекта(ВидЦен, "ЦенаВключаетНДС");
КонецФункции

#КонецОбласти

#Область СлужебныйПрограммныйИнтерфейс

Процедура ПроверитьСериюРассчитатьСтатус(ТекущаяСтрока, ИмяФормы) Экспорт
	
	Если ИмяФормы = "Документ.МаркировкаТоваровИСМП.Форма.ФормаДокумента" Тогда
		
		ТекстЗапроса = Документы.МаркировкаТоваровИСМП.ТекстЗапросаЗаполненияСтатусовУказанияСерий(Неопределено);
		
		Запрос = Новый Запрос;
		Запрос.Текст = ТекстЗапроса;
		
		ТаблицаТоваров = Новый ТаблицаЗначений;
		ТаблицаТоваров.Колонки.Добавить("Номенклатура", Новый ОписаниеТипов("СправочникСсылка.Номенклатура"));
		ТаблицаТоваров.Колонки.Добавить("Характеристика", Новый ОписаниеТипов("СправочникСсылка.ХарактеристикиНоменклатуры"));
		ТаблицаТоваров.Колонки.Добавить("Серия", Новый ОписаниеТипов("СправочникСсылка.СерииНоменклатуры"));
		ТаблицаТоваров.Колонки.Добавить("СтатусУказанияСерий", Новый ОписаниеТипов("Число",Новый КвалификаторыЧисла(2,0,ДопустимыйЗнак.Неотрицательный)));
		ТаблицаТоваров.Колонки.Добавить("НомерСтроки",Новый ОписаниеТипов("Число",Новый КвалификаторыЧисла(5,0,ДопустимыйЗнак.Неотрицательный)));
		
		СтрокаТовара = ТаблицаТоваров.Добавить();
		ЗаполнитьЗначенияСвойств(СтрокаТовара, ТекущаяСтрока);
		СтрокаТовара.НомерСтроки = 1;
		
		Запрос.УстановитьПараметр("Товары", ТаблицаТоваров);
		
		Выборка = Запрос.Выполнить().Выбрать();
		Если Выборка.Следующий() Тогда
			ЗаполнитьЗначенияСвойств(ТекущаяСтрока, Выборка, "СтатусУказанияСерий");
		КонецЕсли;
		
	ИначеЕсли ИмяФормы = "Документ.ВыводаИзОборотаИСМП.Форма.ФормаДокумента" Тогда
		
		ТекстЗапроса = Документы.ВыводИзОборотаИСМП.ТекстЗапросаЗаполненияСтатусовУказанияСерий(Неопределено);
		
		Запрос = Новый Запрос;
		Запрос.Текст = ТекстЗапроса;
		
		ТаблицаТоваров = Новый ТаблицаЗначений;
		ТаблицаТоваров.Колонки.Добавить("Номенклатура", Новый ОписаниеТипов("СправочникСсылка.Номенклатура"));
		ТаблицаТоваров.Колонки.Добавить("Характеристика", Новый ОписаниеТипов("СправочникСсылка.ХарактеристикиНоменклатуры"));
		ТаблицаТоваров.Колонки.Добавить("Серия", Новый ОписаниеТипов("СправочникСсылка.СерииНоменклатуры"));
		ТаблицаТоваров.Колонки.Добавить("СтатусУказанияСерий", Новый ОписаниеТипов("Число",Новый КвалификаторыЧисла(2,0,ДопустимыйЗнак.Неотрицательный)));
		ТаблицаТоваров.Колонки.Добавить("НомерСтроки",Новый ОписаниеТипов("Число",Новый КвалификаторыЧисла(5,0,ДопустимыйЗнак.Неотрицательный)));
		
		СтрокаТовара = ТаблицаТоваров.Добавить();
		ЗаполнитьЗначенияСвойств(СтрокаТовара, ТекущаяСтрока);
		СтрокаТовара.НомерСтроки = 1;
		
		Запрос.УстановитьПараметр("Товары", ТаблицаТоваров);
		
		Выборка = Запрос.Выполнить().Выбрать();
		Если Выборка.Следующий() Тогда
			ЗаполнитьЗначенияСвойств(ТекущаяСтрока, Выборка, "СтатусУказанияСерий");
		КонецЕсли;
		
	ИначеЕсли ИмяФормы = "Документ.СписаниеКодовМаркировкиИСМП.Форма.ФормаДокумента" Тогда
		
		ТекстЗапроса = Документы.ВыводИзОборотаИСМП.ТекстЗапросаЗаполненияСтатусовУказанияСерий(Неопределено);
		
		Запрос = Новый Запрос;
		Запрос.Текст = ТекстЗапроса;
		
		ТаблицаТоваров = Новый ТаблицаЗначений;
		ТаблицаТоваров.Колонки.Добавить("Номенклатура", Новый ОписаниеТипов("СправочникСсылка.Номенклатура"));
		ТаблицаТоваров.Колонки.Добавить("Характеристика", Новый ОписаниеТипов("СправочникСсылка.ХарактеристикиНоменклатуры"));
		ТаблицаТоваров.Колонки.Добавить("Серия", Новый ОписаниеТипов("СправочникСсылка.СерииНоменклатуры"));
		ТаблицаТоваров.Колонки.Добавить("СтатусУказанияСерий", Новый ОписаниеТипов("Число",Новый КвалификаторыЧисла(2,0,ДопустимыйЗнак.Неотрицательный)));
		ТаблицаТоваров.Колонки.Добавить("НомерСтроки",Новый ОписаниеТипов("Число",Новый КвалификаторыЧисла(5,0,ДопустимыйЗнак.Неотрицательный)));
		
		СтрокаТовара = ТаблицаТоваров.Добавить();
		ЗаполнитьЗначенияСвойств(СтрокаТовара, ТекущаяСтрока);
		СтрокаТовара.НомерСтроки = 1;
		
		Запрос.УстановитьПараметр("Товары", ТаблицаТоваров);
		
		Выборка = Запрос.Выполнить().Выбрать();
		Если Выборка.Следующий() Тогда
			ЗаполнитьЗначенияСвойств(ТекущаяСтрока, Выборка, "СтатусУказанияСерий");
		КонецЕсли;
		
	ИначеЕсли ИмяФормы = "Документ.ОтгрузкаТоваровИСМП.Форма.ФормаДокумента" Тогда
		
		ТекстЗапроса = Документы.ВыводИзОборотаИСМП.ТекстЗапросаЗаполненияСтатусовУказанияСерий(Неопределено);
		
		Запрос = Новый Запрос;
		Запрос.Текст = ТекстЗапроса;
		
		ТаблицаТоваров = Новый ТаблицаЗначений;
		ТаблицаТоваров.Колонки.Добавить("Номенклатура", Новый ОписаниеТипов("СправочникСсылка.Номенклатура"));
		ТаблицаТоваров.Колонки.Добавить("Характеристика", Новый ОписаниеТипов("СправочникСсылка.ХарактеристикиНоменклатуры"));
		ТаблицаТоваров.Колонки.Добавить("Серия", Новый ОписаниеТипов("СправочникСсылка.СерииНоменклатуры"));
		ТаблицаТоваров.Колонки.Добавить("СтатусУказанияСерий", Новый ОписаниеТипов("Число",Новый КвалификаторыЧисла(2,0,ДопустимыйЗнак.Неотрицательный)));
		ТаблицаТоваров.Колонки.Добавить("НомерСтроки",Новый ОписаниеТипов("Число",Новый КвалификаторыЧисла(5,0,ДопустимыйЗнак.Неотрицательный)));
		
		СтрокаТовара = ТаблицаТоваров.Добавить();
		ЗаполнитьЗначенияСвойств(СтрокаТовара, ТекущаяСтрока);
		СтрокаТовара.НомерСтроки = 1;
		
		Запрос.УстановитьПараметр("Товары", ТаблицаТоваров);
		
		Выборка = Запрос.Выполнить().Выбрать();
		Если Выборка.Следующий() Тогда
			ЗаполнитьЗначенияСвойств(ТекущаяСтрока, Выборка, "СтатусУказанияСерий");
		КонецЕсли;
		
	ИначеЕсли ИмяФормы = "Обработка.ПроверкаИПодборПродукцииИСМП.Форма.ПроверкаИПодбор" Тогда
		
		ТекстЗапроса = Документы.ВыводИзОборотаИСМП.ТекстЗапросаЗаполненияСтатусовУказанияСерий(Неопределено);
		
		Запрос = Новый Запрос;
		Запрос.Текст = ТекстЗапроса;
		
		ТаблицаТоваров = Новый ТаблицаЗначений;
		ТаблицаТоваров.Колонки.Добавить("Номенклатура", Новый ОписаниеТипов("СправочникСсылка.Номенклатура"));
		ТаблицаТоваров.Колонки.Добавить("Характеристика", Новый ОписаниеТипов("СправочникСсылка.ХарактеристикиНоменклатуры"));
		ТаблицаТоваров.Колонки.Добавить("Серия", Новый ОписаниеТипов("СправочникСсылка.СерииНоменклатуры"));
		ТаблицаТоваров.Колонки.Добавить("СтатусУказанияСерий", Новый ОписаниеТипов("Число",Новый КвалификаторыЧисла(2,0,ДопустимыйЗнак.Неотрицательный)));
		ТаблицаТоваров.Колонки.Добавить("НомерСтроки",Новый ОписаниеТипов("Число",Новый КвалификаторыЧисла(5,0,ДопустимыйЗнак.Неотрицательный)));
		
		СтрокаТовара = ТаблицаТоваров.Добавить();
		ЗаполнитьЗначенияСвойств(СтрокаТовара, ТекущаяСтрока);
		СтрокаТовара.НомерСтроки = 1;
		
		Запрос.УстановитьПараметр("Товары", ТаблицаТоваров);
		
		Выборка = Запрос.Выполнить().Выбрать();
		Если Выборка.Следующий() Тогда
			ЗаполнитьЗначенияСвойств(ТекущаяСтрока, Выборка, "СтатусУказанияСерий");
		КонецЕсли;
		
	Иначе

		ТекстЗапроса = Документы.ВыводИзОборотаИСМП.ТекстЗапросаЗаполненияСтатусовУказанияСерий(Неопределено);
		
		Запрос = Новый Запрос;
		Запрос.Текст = ТекстЗапроса;
		
		ТаблицаТоваров = Новый ТаблицаЗначений;
		ТаблицаТоваров.Колонки.Добавить("Номенклатура", Новый ОписаниеТипов("СправочникСсылка.Номенклатура"));
		ТаблицаТоваров.Колонки.Добавить("Характеристика", Новый ОписаниеТипов("СправочникСсылка.ХарактеристикиНоменклатуры"));
		ТаблицаТоваров.Колонки.Добавить("Серия", Новый ОписаниеТипов("СправочникСсылка.СерииНоменклатуры"));
		ТаблицаТоваров.Колонки.Добавить("СтатусУказанияСерий", Новый ОписаниеТипов("Число",Новый КвалификаторыЧисла(2,0,ДопустимыйЗнак.Неотрицательный)));
		ТаблицаТоваров.Колонки.Добавить("НомерСтроки",Новый ОписаниеТипов("Число",Новый КвалификаторыЧисла(5,0,ДопустимыйЗнак.Неотрицательный)));
		
		СтрокаТовара = ТаблицаТоваров.Добавить();
		ЗаполнитьЗначенияСвойств(СтрокаТовара, ТекущаяСтрока);
		СтрокаТовара.НомерСтроки = 1;
		
		Запрос.УстановитьПараметр("Товары", ТаблицаТоваров);
		
		Выборка = Запрос.Выполнить().Выбрать();
		Если Выборка.Следующий() Тогда
			ЗаполнитьЗначенияСвойств(ТекущаяСтрока, Выборка, "СтатусУказанияСерий");
		КонецЕсли;
		
	КонецЕсли;
	
	Если ТекущаяСтрока.СтатусУказанияСерий = 0 Тогда
		ТекущаяСтрока.Серия = Неопределено;
	КонецЕсли;
	
КонецПроцедуры

Функция ЭтоРозничныйКлиент(Контрагент) Экспорт
	
	ВидКонтрагента = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(Контрагент, "ВидКонтрагента");
	Возврат ВидКонтрагента = ПредопределенноеЗначение("Перечисление.ВидыКонтрагентов.ФизическоеЛицо");
	
КонецФункции

Функция ДанныеДляПечатиШтрихкодовУпаковок(ОбъектыПечати) Экспорт
	Возврат ПечатьЭтикетокИСМПУНФ.ДанныеДляПечатиШтрихкодовУпаковок(ОбъектыПечати);
КонецФункции

#КонецОбласти