///////////////////////////////////////////////////////////////////////////////////////////////////////
// Copyright (c) 2023, ООО 1С-Софт
// Все права защищены. Эта программа и сопроводительные материалы предоставляются 
// в соответствии с условиями лицензии Attribution 4.0 International (CC BY 4.0)
// Текст лицензии доступен по ссылке:
// https://creativecommons.org/licenses/by/4.0/legalcode
///////////////////////////////////////////////////////////////////////////////////////////////////////

#Область ПрограммныйИнтерфейс

// Включает/отключает показ предупреждений о необходимости обновления классификатора банков.
//
// Параметры:
//  ПоказыватьПредупреждение - Булево - при установке значения Ложь предупреждения показываться не будут.
//
Процедура ПриОпределенииНеобходимостиПоказаПредупрежденияОбУстаревшемКлассификатореБанков(ПоказыватьПредупреждение) Экспорт
	
КонецПроцедуры

// Определяет настройки загрузки классификатора банков.
//
// Параметры:
//  Настройки - Структура:
//   * ОбрабатыватьОбластиДанных - Булево - включает выполнение процедуры ПриОбработкеОбластиДанных при обновлении
//                                          классификатора.
//
Процедура ПриОпределенииНастроекЗагрузкиКлассификатораБанков(Настройки) Экспорт
	
КонецПроцедуры

// Используется только в разделенном режиме. Вызывается после загрузки классификатора для выполнения дополнительных
// действий в областях данных. Выполнение процедуры необходимо включить в ПриОпределенииНастроек, по умолчанию выключена.
//
Процедура ПриОбработкеОбластиДанных() Экспорт
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныйИнтерфейсУНФ

// Устарела. Будет удалена в следующей версии программы. 
// См. БанкиУНФ.СинхронизироватьБанкиСКлассификатором
Функция ОбновитьБанкиИзКлассификатора(Знач СписокБанков = Неопределено, Знач ОбластьДанных) Экспорт
	
	Попытка
		БанкиУНФ.СинхронизироватьБанкиСКлассификатором(СписокБанков);
	Исключение
		Возврат Ложь;
	КонецПопытки;
	
	Возврат Истина;
	
КонецФункции

// Устарела. Будет удалена в следующей версии программы.
// См. БанкиУНФ.ПрочитатьФлагРучногоИзменения
Процедура СчитатьФлагРучногоИзменения(Знач Форма) Экспорт
	
	БанкиУНФ.ПрочитатьФлагРучногоИзменения(Форма);
	
КонецПроцедуры

// Устарела. Будет удалена в следующей версии программы.
// См. БанкиУНФ.ПодобратьБанкИзКлассификатора
Функция ПодобратьБанкИзКлассификатора(Знач СсылкиБанков, ИгнорироватьРучноеИзменение = Ложь) Экспорт
	
	Возврат БанкиУНФ.ПодобратьБанкИзКлассификатора(СсылкиБанков, ИгнорироватьРучноеИзменение);
	
КонецФункции

// Устарела. Будет удалена в следующей версии программы.
// См. БанкиУНФ.ВосстановитьЭлементИзОбщихДанных
Процедура ВосстановитьЭлементИзОбщихДанных(Знач Форма) Экспорт
	
	БанкиУНФ.ВосстановитьЭлементИзОбщихДанных(Форма);
	
КонецПроцедуры

// Устарела. Будет удалена в следующей версии программы.
// См. БанкиУНФ.РаспространитьБанкиПоОД
Процедура РаспространитьБанкиПоОД(Знач СписокБанков, Знач ИдентификаторФайла, Знач КодОбработчика) Экспорт
	
	БанкиУНФ.РаспространитьБанкиПоОД(СписокБанков, ИдентификаторФайла, КодОбработчика);
	
КонецПроцедуры

// Устарела. Будет удалена в следующей версии программы.
// См. БанкиУНФ.БанкАвтоПодборДанныеВыбора
Функция БанкАвтоПодборДанныеВыбора(ПараметрПоиска) Экспорт
	
	Возврат БанкиУНФ.БанкАвтоПодборДанныеВыбора(ПараметрПоиска);
	
КонецФункции

// Устарела. Будет удалена в следующей версии программы.
// См. БанкиУНФ.ПредставлениеБанка
Функция ПредставлениеБанка(ЗаписьКлассификатора) Экспорт
	
	Возврат БанкиУНФ.ПредставлениеБанка(ЗаписьКлассификатора);
	
КонецФункции

// Устарела. Будет удалена в следующей версии программы.
// См. БанкиУНФ.БанкИзКлассификатора
Функция БанкИзКлассификатора(КлассификаторБанков) Экспорт
	
	Возврат БанкиУНФ.БанкИзКлассификатора(КлассификаторБанков);
	
КонецФункции

// Устарела. Будет удалена в следующей версии программы.
// См. БанкиУНФ.СсылкаНаБанкИзКлассификатора
Функция СсылкаНаБанкИзКлассификатора(КлассификаторБанков) Экспорт
	
	Возврат БанкиУНФ.СсылкаНаБанкИзКлассификатора(КлассификаторБанков);
	
КонецФункции

#КонецОбласти

#Область СлужебныйПрограммныйИнтерфейс

Функция ВозможнаЗагрузкаВалютнойВыписки(БИК) Экспорт
	
	Проект = "3"; // возможна загрузка валютной выписки
	Результат = Ложь;
	
	Макет = УчетДенежныхСредствПовтИсп.СписокБанковСВалютнойВыпиской();
	
	Для Индекс = 1 По Макет.ВысотаТаблицы Цикл
		БИКБанка = Макет.Область(Индекс, 2).Текст;
		Если БИК <> БИКБанка Тогда
			Продолжить;
		КонецЕсли;
		
		ПроектыВФайлеСтрокой = Макет.Область(Индекс, 8).Текст;
		МассивПроектовВФайле = СтрРазделить(ПроектыВФайлеСтрокой, ",", Ложь);
		Результат = МассивПроектовВФайле.Найти(Строка(Проект)) <> Неопределено;
		
		Прервать;
	КонецЦикла;
	
	Возврат Результат;
	
КонецФункции

#КонецОбласти
