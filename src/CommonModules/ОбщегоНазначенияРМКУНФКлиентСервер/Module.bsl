
///////////////////////////////////////////////////////////////////////////////////////////////////////
// Copyright (c) 2022, ООО 1С-Софт
// Все права защищены. Эта программа и сопроводительные материалы предоставляются 
// в соответствии с условиями лицензии Attribution 4.0 International (CC BY 4.0)
// Текст лицензии доступен по ссылке:
// https://creativecommons.org/licenses/by/4.0/legalcode
///////////////////////////////////////////////////////////////////////////////////////////////////////

#Область ПрограммныйИнтерфейс

#Область Поясняющие_надписи_ПрограммныйИнтерфейс

// Позволяет переопределить текст подсказки настройки запрета продаж
//
// Параметры:
//  ТекстПодсказки - Строка - в этот параметр нужно записать результат.
//
Процедура ЗаполнитьТекстПодсказкиНастройкиЗапретовПродаж(ТекстПодсказки) Экспорт
	Возврат;
КонецПроцедуры

// Формирует коллекцию для дополнения сообщения об отсутствующих в программе данных гиперссылками
//
// Параметры:
//  ДанныеДополненияПредупреждения - Структура:
//		* ИмяСущности - Строка - имя отсутствующей сущности
//		* ДанныеДополнения - ФорматированнаяСтрока - данные с гиперссылкой на форму списка сущности.
//
Процедура ЗаполнитьДанныеДополненияПредупреждения(ДанныеДополненияПредупреждения) Экспорт

	Если ТипЗнч(ДанныеДополненияПредупреждения) = Тип("Структура") Тогда
		
		ДанныеДополненияПредупреждения.Вставить("Организации",
			Новый ФорматированнаяСтрока(НСтр("ru = 'Организации'"),,,,"e1cib/list/Справочник.Организации"));
		ДанныеДополненияПредупреждения.Вставить("ТорговыеОбъекты",
			Новый ФорматированнаяСтрока(НСтр("ru = 'Торговые объекты'"),,,,"e1cib/list/Справочник.СтруктурныеЕдиницы"));
		ДанныеДополненияПредупреждения.Вставить("КассыККМ",
			Новый ФорматированнаяСтрока(НСтр("ru = 'Кассы ККМ'"),,,,"e1cib/list/Справочник.КассыККМ"));
			
	КонецЕсли;

КонецПроцедуры

#КонецОбласти

// Заполняет перечень видов подакцизной номенклатуры.
//
// Параметры:
//  ВидыПодакцизнойНоменклатуры - Массив Из ОпределяемыйТип.ОсобенностиУчетаНоменклатурыРМК - список видов маркируемой
//  							продукции ИСМП.
//
Процедура ЗаполнитьВидыПодакцизнойНоменклатуры(ВидыПодакцизнойНоменклатуры) Экспорт
	
	ВидыПодакцизнойНоменклатуры.Добавить(ОбщегоНазначенияКлиентСервер.ПредопределенныйЭлемент(
		"Перечисление.ВидыПродукцииИС.Алкогольная"));
	ВидыПодакцизнойНоменклатуры.Добавить(ОбщегоНазначенияКлиентСервер.ПредопределенныйЭлемент(
			"Перечисление.ВидыПродукцииИС.Табак"));
	ВидыПодакцизнойНоменклатуры.Добавить(ОбщегоНазначенияКлиентСервер.ПредопределенныйЭлемент(
			"Перечисление.ВидыПродукцииИС.АльтернативныйТабак"));
	
КонецПроцедуры

// Заполняет день недели по дате 
//
// Параметры:
//  ДеньНедели - Неопределено, ОпределяемыйТип.ДниНеделиРМК.
//  Дата - Дата - дата, по которой определяется значение дня.
//
Процедура ЗаполнитьДеньНеделиПеречислением(Результат, Дата) Экспорт

	НачалоЛитералаДняНедели = "Перечисление.ДниНедели.";
	ДополнениеЛитералаДняНедели = "ПустаяСсылка";
	
	Если ЗначениеЗаполнено(Дата) Тогда
	
		ДеньНеделиЧислом = ДеньНедели(Дата);
		
		Если ДеньНеделиЧислом = 1 Тогда
			ДополнениеЛитералаДняНедели = "Понедельник";
		ИначеЕсли ДеньНеделиЧислом = 2 Тогда
			ДополнениеЛитералаДняНедели = "Вторник";
		ИначеЕсли ДеньНеделиЧислом = 3 Тогда
			ДополнениеЛитералаДняНедели = "Среда";
		ИначеЕсли ДеньНеделиЧислом = 4 Тогда
			ДополнениеЛитералаДняНедели = "Четверг";
		ИначеЕсли ДеньНеделиЧислом = 5 Тогда
			ДополнениеЛитералаДняНедели = "Пятница";
		ИначеЕсли ДеньНеделиЧислом = 6 Тогда
			ДополнениеЛитералаДняНедели = "Суббота";
		ИначеЕсли ДеньНеделиЧислом = 7 Тогда
			ДополнениеЛитералаДняНедели = "Воскресенье";
		Иначе
			ДополнениеЛитералаДняНедели = "ПустаяСсылка";
		КонецЕсли;
	
	КонецЕсли;
	
	ПолноеИмяЛитерала = СтрШаблон("%1%2", НачалоЛитералаДняНедели, ДополнениеЛитералаДняНедели);
	Результат = ОбщегоНазначенияКлиентСервер.ПредопределенныйЭлемент(ПолноеИмяЛитерала);
	
КонецПроцедуры

// Определяет имя основной таблицы для списка видов оплат в помощнике настройки кассового места
//
// Параметры:
//  ИмяТаблицы - Строка - имя основной таблицы видов оплат до переопределения.
//
Процедура ЗаполнитьИмяОсновнойТаблицыВидовОплат(ИмяТаблицы) Экспорт
	ИмяТаблицы = "";
КонецПроцедуры

// Рассчитывает сумму НДС исходя из суммы и флагов налогообложения.
//
// Параметры:
//  Объект - ДанныеФормыКоллекция - данные объекта формы рабочего места кассира.
//  ТекущаяСтрока - Структура - строка табличной части товаров для обработки.
//
Процедура РассчитатьСуммуНДС(Объект, ТекущаяСтрока) Экспорт
	
	СтавкаНДС = УправлениеНебольшойФирмойПовтИсп.ПолучитьЗначениеСтавкиНДС(ТекущаяСтрока.СтавкаНДС);
	ТекущаяСтрока.СуммаНДС = ?(
		Объект.ЦенаВключаетНДС,
		ТекущаяСтрока.Сумма - (ТекущаяСтрока.Сумма) / ((СтавкаНДС + 100) / 100),
		ТекущаяСтрока.Сумма * СтавкаНДС / 100);
	
КонецПроцедуры

// Определяет вид отображения параметров в настройках рабочего места кассира.
// Значение по умолчанию - "Флажок".
//
// Параметры:
//  ВидОтображения - ВидФлажка - вид отображения настроек.
//
Процедура ПереопределитьВидОтображенияНастроек(ВидОтображения) Экспорт
	ВидОтображения = ВидФлажка.Флажок;
КонецПроцедуры

// Определяет положения заголовка параметров в настройках рабочего места кассира.
// Значение по умолчанию - "Лево".
//
// Параметры:
//  ПоложениеЗаголовка - ПоложениеЗаголовкаЭлементаФормы - положение заголовка.
//
Процедура ПереопределитьПоложениеЗаголовкаНастроек(ПоложениеЗаголовка) Экспорт
	ПоложениеЗаголовка = ПоложениеЗаголовкаЭлементаФормы.Право;
КонецПроцедуры

// Заполняет текст ошибки, если не удалось определить доступные кассы при запуске РМК.
//
// Параметры:
//  ТекстСообщения - Строка - текст сообщения об ошибке определения кассы.
//
Процедура ЗаполнитьТекстОшибкиПриОпределенииКассы(ТекстСообщения) Экспорт
	ТекстСообщения = ТекстСообщения + Символы.ПС + НСтр("ru = 'Проверьте настройки касс ККМ.'");
КонецПроцедуры

// Заполняет текст ошибки, если не удалось определить настройки рабочего места кассира при запуске РМК.
//
// Параметры:
//  ТекстСообщения - Строка - текст сообщения при ошибке определения настройки РМК..
//
Процедура ЗаполнитьТекстОшибкиПриОпределенииНастройкиРМК(ТекстСообщения) Экспорт
	
	ТекстСообщения = НСтр("ru = 'Ошибка определения настроек РМК.
		|Обратитесь к администратору системы для проверки:
		| - существования настройки РМК,
		| - принадлежности настройки РМК текущему рабочему месту.'");
	
КонецПроцедуры

// Переопределяет заголовок для колонки "Особенность учета" в регистре "Условия запретов продаж".
//
// Параметры:
//  Заголовок - Строка - заголовок колонки.
//
Процедура ЗаполнитьЗаголовокОсобенностьУчета(Заголовок) Экспорт
	Заголовок = НСтр("ru = 'Вид продукции ИС'");
КонецПроцедуры

// Переопределяет заголовок для колонки "Вид номенклатуры" в регистре "Условия запретов продаж".
//
// Параметры:
//  Заголовок - Строка - заголовок колонки.
//
Процедура ЗаполнитьЗаголовокВидНоменклатуры(Заголовок) Экспорт
	Заголовок = НСтр("ru = 'Категория номенклатуры'");
КонецПроцедуры

// Определяет является ли переданное значение особенности учета пивной продукцией.
//
// Параметры:
//  ОсобенностьУчета - ОпределяемыйТип.ОсобенностиУчетаНоменклатурыРМК - особенность учета.
//  Результат - Булево - Истина, если особенность учета является пивной продукцией.
//
Процедура ОпределитьОсобенностьУчетаПивнаяПродукция(ОсобенностьУчета, Результат) Экспорт
	
	Если ОсобенностьУчета = ПредопределенноеЗначение("Перечисление.ВидыПродукцииИС.Пиво") Тогда
		Результат = Истина;
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти
