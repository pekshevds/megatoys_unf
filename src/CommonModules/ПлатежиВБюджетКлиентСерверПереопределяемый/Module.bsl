
Функция РеквизитыПлатежаВБюджет() Экспорт
	
	Реквизиты = Новый Соответствие;
	
	Реквизиты.Вставить("ВидПеречисления",      "ВидПеречисленияВБюджет");
	Реквизиты.Вставить("ИдентификаторПлатежа", "ИдентификаторПлатежа");
	Реквизиты.Вставить("СтатусПлательщика",    "СтатусСоставителя");
	Реквизиты.Вставить("КБК",                  "КодБК");
	Реквизиты.Вставить("КодТерритории",        "КодОКАТО");
	Реквизиты.Вставить("ОснованиеПлатежа",     "ПоказательОснования");
	Реквизиты.Вставить("НалоговыйПериод",      "ПоказательПериода");
	Реквизиты.Вставить("НомерДокумента",       "ПоказательНомера");
	Реквизиты.Вставить("ДатаДокумента",        "ПоказательДаты");
	Реквизиты.Вставить("ТипПлатежа",           "ПоказательТипа");
	
	Возврат Реквизиты;
	
КонецФункции

Функция РеквизитыДокумента_ПлатежноеПоручение() Экспорт
	
	Реквизиты = РеквизитыПлатежаВБюджет();
	
	//Реквизиты.Вставить("ПеречислениеВБюджет",                "ПеречислениеВБюджет");
	Реквизиты.Вставить("НазначениеПлатежа",                  "НазначениеПлатежа");
	Реквизиты.Вставить("ОчередностьПлатежа",                 "ОчередностьПлатежа");
	//Реквизиты.Вставить("ПеречислениеПоИсполнительномуЛисту", "ПеречислениеПоИсполнительномуЛисту");
	
	Возврат Реквизиты;
	
КонецФункции

Функция ЭтоНДФЛ_ИП(ВидНалога) Экспорт
	
	Если Не ЗначениеЗаполнено(ВидНалога) Тогда
		Возврат Ложь;
	КонецЕсли;
	
	ВидыНалоговНДФЛ_ИП = Новый Массив;
	ВидыНалоговНДФЛ_ИП.Добавить(ПредопределенноеЗначение("Перечисление.ВидыНалогов.НДФЛ_ИП"));
	ВидыНалоговНДФЛ_ИП.Добавить(ПредопределенноеЗначение(
		"Перечисление.ВидыНалогов.НДФЛ_ИП_НалоговаяБазаСвышеПредельнойВеличины"));
	
	Возврат ВидыНалоговНДФЛ_ИП.Найти(ВидНалога) <> Неопределено;
	
КонецФункции

Функция ЭтоФиксированныеВзносы(ВидНалога) Экспорт
	
	Если НЕ ЗначениеЗаполнено(ВидНалога) Тогда
		Возврат Ложь;
	КонецЕсли;
	
	Для Каждого ВидНалогаФиксированныеВзносы Из ВидыНалоговФиксированныеВзносы() Цикл
		Если ВидНалогаФиксированныеВзносы = ВидНалога Тогда
			Возврат Истина;
		КонецЕсли;
	КонецЦикла;
	
	Возврат Ложь;
	
КонецФункции

Функция НеактуальныеНалоги(Дата = Неопределено) Экспорт
	
	Налоги = Новый Соответствие();
	
	НачалоДействияПриказа2017_90н = ПлатежиВБюджетКлиентСервер.НачалоДействияПриказа2017_90н();
	Если Дата = Неопределено ИЛИ Дата >= НачалоДействияПриказа2017_90н Тогда
		Налоги.Вставить(ПредопределенноеЗначение("Перечисление.ВидыНалогов.УСН_МинимальныйНалог"),
			Новый Структура("ДатаНеактуальности, АктуальныйНалог",
				НачалоДействияПриказа2017_90н,
				ПредопределенноеЗначение("Перечисление.ВидыНалогов.УСН_ДоходыМинусРасходы")));
		
		Для каждого ВидВзноса Из ВидыВзносовНаПенсионноеСтрахование() Цикл
			Налоги.Вставить(ВидВзноса, Новый Структура("ДатаНеактуальности", НачалоДействияПриказа2017_90н));
		КонецЦикла;
		
		Для каждого ВидВзноса Из ВидыНаСоциальноеСтрахование() Цикл
			Налоги.Вставить(ВидВзноса, Новый Структура("ДатаНеактуальности", НачалоДействияПриказа2017_90н));
		КонецЦикла;
	КонецЕсли;
	
	Возврат Налоги;
	
КонецФункции

Функция ЭтоВзносыНаПенсионноеСтрахование(ВидНалога) Экспорт
	
	Если НЕ ЗначениеЗаполнено(ВидНалога) Тогда
		Возврат Ложь;
	КонецЕсли;
	
	Для каждого ВидВзноса Из ВидыВзносовНаПенсионноеСтрахование() Цикл
		Если ВидВзноса = ВидНалога Тогда
			Возврат Истина;
		КонецЕсли;
	КонецЦикла;
	
	Возврат Ложь;
	
КонецФункции

Функция ЭтоВзносыНаСоциальноеСтрахование(ВидНалога) Экспорт
	
	Если НЕ ЗначениеЗаполнено(ВидНалога) Тогда
		Возврат Ложь;
	КонецЕсли;
	
	Для каждого ВидВзноса Из ВидыНаСоциальноеСтрахование() Цикл
		Если ВидВзноса = ВидНалога Тогда
			Возврат Истина;
		КонецЕсли;
	КонецЦикла;
	
	Возврат Ложь;
	
КонецФункции

Функция ЭтоЕдиныйНалоговыйПлатеж(ВидНалога) Экспорт
	
	Если Не ЗначениеЗаполнено(ВидНалога) Тогда
		Возврат Ложь;
	КонецЕсли;
	
	Возврат ВидНалога = ПредопределенноеЗначение("Перечисление.ВидыНалогов.ЕдиныйНалоговыйПлатеж")
	
КонецФункции

Функция ВидыВзносовНаПенсионноеСтрахование()
	
	Взносы = Новый Массив;
	Взносы.Добавить(ПредопределенноеЗначение("Перечисление.ВидыНалогов.СтраховыеВзносы_ПФР_СтраховаяЧасть"));
	Взносы.Добавить(ПредопределенноеЗначение("Перечисление.ВидыНалогов.СтраховыеВзносы_ФФОМС"));
	Взносы.Добавить(ПредопределенноеЗначение("Перечисление.ВидыНалогов.ДополнительныеВзносы_ПФР_ВредныеУсловия"));
	Взносы.Добавить(ПредопределенноеЗначение("Перечисление.ВидыНалогов.ДополнительныеВзносы_ПФР_ЛетныеЭкипажи"));
	Взносы.Добавить(ПредопределенноеЗначение("Перечисление.ВидыНалогов.ДополнительныеВзносы_ПФР_ТяжелыеУсловия"));
	Взносы.Добавить(ПредопределенноеЗначение("Перечисление.ВидыНалогов.ДополнительныеВзносы_ПФР_Шахтеры"));
	Взносы.Добавить(ПредопределенноеЗначение("Перечисление.ВидыНалогов.ФиксированныеВзносы_ФФОМС"));
	Взносы.Добавить(ПредопределенноеЗначение("Перечисление.ВидыНалогов.ФиксированныеВзносы_ПФР_СтраховаяЧасть"));
	Взносы.Добавить(ПредопределенноеЗначение("Перечисление.ВидыНалогов.СтраховыеВзносы_ПФР_НакопительнаяЧасть")); // до 2014 года
	
	Возврат Взносы;
	
КонецФункции

Функция ВидыНаСоциальноеСтрахование()
	
	Взносы = Новый Массив;
	Взносы.Добавить(ПредопределенноеЗначение("Перечисление.ВидыНалогов.СтраховыеВзносы_ФСС"));
	
	Возврат Взносы;
	
КонецФункции

Функция ЭтоНалогУСН(ВидНалога) Экспорт
	
	Если НЕ ЗначениеЗаполнено(ВидНалога) Тогда
		Возврат Ложь;
	КонецЕсли;
	
	Для Каждого ВидНалогаУСН Из ВидыНалоговУСН() Цикл
		Если ВидНалогаУСН = ВидНалога Тогда
			Возврат Истина;
		КонецЕсли;
	КонецЦикла;
	
	Возврат Ложь;
	
КонецФункции

Функция ЭтоНалогАУСН(ВидНалога) Экспорт
	
	Если Не ЗначениеЗаполнено(ВидНалога) Тогда
		Возврат Ложь;
	КонецЕсли;
		
	Возврат ВидНалога = ПредопределенноеЗначение("Перечисление.ВидыНалогов.АУСН");
	
КонецФункции

Функция ВидыНалоговУСН() Экспорт
	
	Налоги = Новый Массив;
	
	Налоги.Добавить(ПредопределенноеЗначение("Перечисление.ВидыНалогов.УСН_Доходы"));
	Налоги.Добавить(ПредопределенноеЗначение("Перечисление.ВидыНалогов.УСН_ДоходыМинусРасходы"));
	Налоги.Добавить(ПредопределенноеЗначение("Перечисление.ВидыНалогов.УСН_МинимальныйНалог"));
	
	Возврат Налоги;
	
КонецФункции

Функция ВидыНалоговФиксированныеВзносы() Экспорт
	
	Налоги = Новый Массив;
	
	Налоги.Добавить(ПредопределенноеЗначение("Перечисление.ВидыНалогов.ФиксированныеВзносы_ПФР_СтраховаяЧасть"));
	Налоги.Добавить(ПредопределенноеЗначение("Перечисление.ВидыНалогов.ФиксированныеВзносы_ФФОМС"));
	Налоги.Добавить(ПредопределенноеЗначение("Перечисление.ВидыНалогов.ФиксированныеВзносы_ФСС"));
	Налоги.Добавить(ПредопределенноеЗначение("Перечисление.ВидыНалогов.ФиксированныеВзносы_ПФР_НакопительнаяЧасть"));
	
	Возврат Налоги;
	
КонецФункции

// Возвращает соответствие видов налога для КБК страховых взносов до 2023 года.
//
// Возвращаемое значение:
//   Соответствие
//
Функция СоответствиеКБКСтраховыхВзносов2022ГодаВ2023Году() Экспорт
	
	Результат = Новый Соответствие;
	
	Результат.Вставить("18210202010060000160",
		ПредопределенноеЗначение("Перечисление.ВидыНалогов.СтраховыеВзносы_ПФР_СтраховаяЧасть"));
	
	Результат.Вставить("18210202101080000160",
		ПредопределенноеЗначение("Перечисление.ВидыНалогов.СтраховыеВзносы_ФФОМС"));
	
	Результат.Вставить("18210202140060000160",
		ПредопределенноеЗначение("Перечисление.ВидыНалогов.ФиксированныеВзносы_ПФР_СтраховаяЧасть"));
	
	Результат.Вставить("18210202103080000160",
		ПредопределенноеЗначение("Перечисление.ВидыНалогов.ФиксированныеВзносы_ФФОМС"));
	
	Результат.Вставить("18210202090070000160",
		ПредопределенноеЗначение("Перечисление.ВидыНалогов.СтраховыеВзносы_ФСС"));
	
	Возврат Результат;
	
КонецФункции
