//@strict-types

#Область СлужебныйПрограммныйИнтерфейс

#Область ОбработкаДействийПоЭДО

// Добавляет действие в набор.
// 
// Параметры:
//  НаборДействий - См. НовыйНаборДействийПоЭДО
//  Действие      - ПеречислениеСсылка.ДействияПоЭДО
//
Процедура ДобавитьДействие(НаборДействий, Действие) Экспорт
	НаборДействий.Вставить(Действие, Истина);
КонецПроцедуры

// Возвращает признак наличия действия в наборе.
// 
// Параметры:
//  НаборДействий - См. НовыйНаборДействийПоЭДО
//  Действие      - ПеречислениеСсылка.ДействияПоЭДО
// Возвращаемое значение:
//  Булево - признак наличия действия в наборе.
//
Функция ЕстьДействие(НаборДействий, Действие) Экспорт
	Возврат НаборДействий[Действие] = Истина;
КонецФункции

// Возвращает пустую коллекцию дополнительных параметров действия по ЭДО.
// 
// Возвращаемое значение:
//  Структура:
//  * Комментарий - Строка
//  * Ответственный - Неопределено,ОпределяемыйТип.Пользователь
//
Функция НовыеДополнительныеПараметрыДействия() Экспорт
	Параметры = Новый Структура;
	Параметры.Вставить("Комментарий", "");
	Параметры.Вставить("Ответственный", Неопределено);
	Возврат Параметры;
КонецФункции

// Возвращает пустую коллекцию итогов выполнения действий по ЭДО.
// 
// Возвращаемое значение:
//  Структура:
//  * ОбработанныеДокументы - Соответствие из КлючИЗначение:
//    ** Ключ     - ДокументСсылка.ЭлектронныйДокументВходящийЭДО,
//                  ДокументСсылка.ЭлектронныйДокументИсходящийЭДО
//    ** Значение - Булево
//  * ОбработаноПоДействиям - Соответствие из КлючИЗначение:
//    ** Ключ     - ПеречислениеСсылка.ДействияПоЭДО
//    ** Значение - Число
//
Функция НовыйИтогВыполненияДействийПоЭДО() Экспорт
	Итог = Новый Структура;
	Итог.Вставить("ОбработаноПоДействиям", Новый Соответствие);
	Итог.Вставить("ОбработанныеДокументы", Новый Соответствие);
	Возврат Итог;
КонецФункции

// Возвращает пустую коллекцию типов объектов для обработки по действиям ЭДО.
// 
// Возвращаемое значение:
// 	Структура:
// * ОбъектыУчета              - Массив из ОпределяемыйТип.ОснованияЭлектронныхДокументовЭДО
// * ЭлектронныеДокументы      - Массив из ДокументСсылка.ЭлектронныйДокументВходящийЭДО,
//                                         ДокументСсылка.ЭлектронныйДокументИсходящийЭДО
// * Сообщения                 - Массив из ДокументСсылка.СообщениеЭДО
// * ПакетыДокументов          - Массив из УникальныйИдентификатор
// * ИдентификаторыОрганизаций - Массив из Строка
// * МЧД					   - Массив из СправочникСсылка.МашиночитаемыеДоверенностиОрганизаций
//
Функция НовыеОбъектыДействийПоЭДО() Экспорт
	ОбъектыДействий = Новый Структура;
	ОбъектыДействий.Вставить("ОбъектыУчета", Новый Массив);
	ОбъектыДействий.Вставить("ЭлектронныеДокументы", Новый Массив);
	ОбъектыДействий.Вставить("Сообщения", Новый Массив);
	ОбъектыДействий.Вставить("ПакетыДокументов", Новый Массив);
	ОбъектыДействий.Вставить("ИдентификаторыОрганизаций", Новый Массив);
	ОбъектыДействий.Вставить("МЧД", Новый Массив);
	Возврат ОбъектыДействий;
КонецФункции

// Возвращает пустые параметры для выполнения действий по ЭДО.
// 
// Возвращаемое значение:
//  Структура - Описание:
//  * НаборДействий - См. НовыйНаборДействийПоЭДО
//  * ОбъектыДействий - См. НовыеОбъектыДействийПоЭДО
//  * ДополнительныеПараметрыДействий - Соответствие из КлючИЗначение:
//    ** Ключ - ОпределяемыйТип.ОснованияЭлектронныхДокументовЭДО
//    ** Значение - См. НовыеДополнительныеПараметрыДействия
//  * КлючиНастроекОбъектов - Соответствие из КлючИЗначение:
//    ** Ключ - ОпределяемыйТип.ОснованияЭлектронныхДокументовЭДО
//    ** Значение - Структура - См. НастройкиБЭД.КлючОбъектаНастроекВнутреннегоЭДО
//  * НастройкиОбъектов - Соответствие из КлючИЗначение:
//    ** Ключ - ОпределяемыйТип.ОснованияЭлектронныхДокументовЭДО
//    ** Значение - Структура -  См. НастройкиБЭД.НастройкиОтправки
//  * МаршрутыПодписанияОбъектов - Соответствие из КлючИЗначение:
//    ** Ключ - ОпределяемыйТип.ОснованияЭлектронныхДокументовЭДО
//    ** Значение - СправочникСсылка.МаршрутыПодписания
//  * ДополнительныеДанныеОбъектов - Соответствие из КлючИЗначение:
//    ** Ключ - ОпределяемыйТип.ОснованияЭлектронныхДокументовЭДО
//    ** Значение - Структура
//  * ПодписантыОбъектов - Соответствие из КлючИЗначение:
//    ** Ключ - ОпределяемыйТип.ОснованияЭлектронныхДокументовЭДО
//    ** Значение - Массив из ОпределяемыйТип.Пользователь
//  * ОтпечаткиСертификатов - Неопределено - если получение отпечатков не выполнялось.
//                          - См. КриптографияБЭДКлиентСервер.НовыеРезультатыПолученияОтпечатков
//  * ВыбранныеСертификаты - Массив из СправочникСсылка.СертификатыКлючейЭлектроннойПодписиИШифрования
//  * ИдентификаторыПечатныхФормОбъектов - Соответствие из КлючИЗначение:
//    ** Ключ - ОпределяемыйТип.ОснованияЭлектронныхДокументовЭДО
//    ** Значение - Строка
//  * ДополнительныеФайлы - Соответствие из КлючИЗначение:
//    ** Ключ - ОпределяемыйТип.ОснованияЭлектронныхДокументовЭДО
//    ** Значение - Строка - ДвоичныеДанные
//  * ДанныеРучногоФормированияТитула - Неопределено - заполняется в формах ручного формирования титулов
//                                    - См. ЭлектронныеДокументыЭДОКлиентСервер.ДанныеРучногоФормированияТитула
//
Функция НовыеПараметрыВыполненияДействийПоЭДО() Экспорт
	
	ВыбранныеСертификаты = Новый Массив; // Массив из СправочникСсылка.СертификатыКлючейЭлектроннойПодписиИШифрования
	
	ПараметрыВыполнения = Новый Структура;
	ПараметрыВыполнения.Вставить("НаборДействий", НовыйНаборДействийПоЭДО());
	ПараметрыВыполнения.Вставить("ОбъектыДействий", НовыеОбъектыДействийПоЭДО());
	ПараметрыВыполнения.Вставить("ДополнительныеПараметрыДействий", Новый Соответствие);
	ПараметрыВыполнения.Вставить("КлючиНастроекОбъектов", Новый Соответствие);
	ПараметрыВыполнения.Вставить("НастройкиОбъектов", Новый Соответствие);
	ПараметрыВыполнения.Вставить("МаршрутыПодписанияОбъектов", Новый Соответствие);
	ПараметрыВыполнения.Вставить("ПодписантыОбъектов", Новый Соответствие);
	ПараметрыВыполнения.Вставить("ДополнительныеДанныеОбъектов", Новый Соответствие);
	ПараметрыВыполнения.Вставить("ОтпечаткиСертификатов", Неопределено);
	ПараметрыВыполнения.Вставить("ВыбранныеСертификаты", ВыбранныеСертификаты);
	ПараметрыВыполнения.Вставить("ИдентификаторыПечатныхФормОбъектов", Новый Соответствие);
	ПараметрыВыполнения.Вставить("ДополнительныеФайлы", Новый Соответствие);
	ПараметрыВыполнения.Вставить("ДанныеРучногоФормированияТитула", Неопределено);
	
	Возврат ПараметрыВыполнения;
	
КонецФункции

#КонецОбласти

#Область ДополнительныеПоля

// Возвращает поддерживаемые типы разделов дополнительных полей документов.
//
// Возвращаемое значение:
//  Структура:
//   * Шапка   - Строка
//   * Таблица - Строка
//
Функция ТипыРазделовДополнительныхПолей() Экспорт

	ТипыРазделов = Новый Структура;
	ТипыРазделов.Вставить("Шапка", "Шапка");
	ТипыРазделов.Вставить("Таблица", "Таблица");
	
	Возврат ТипыРазделов;
	
КонецФункции

#КонецОбласти

#Область СозданиеДокументаПоФайлу

// Возвращает пустые параметры создания документа по файлу.
// 
// Возвращаемое значение:
//  Структура - Новые параметры создания произвольного документа:
//  * Организация - Неопределено,ОпределяемыйТип.Организация - организация, от имени которой нужно отправить документ.
//  * Контрагент - Неопределено,ОпределяемыйТип.КонтрагентБЭД - контрагент, которому нужно отправить документ.
//  * Договор - Неопределено,ОпределяемыйТип.ДоговорСКонтрагентомЭДО - договор, по которому отправляется документ.
//  * ВидДокумента - СправочникСсылка.ВидыДокументовЭДО - вид электронного документа. Если не указан, то определяется автоматически.
//  * НомерДокумента - Строка - номер электронного документа.
//  * ДатаДокумента - Дата - дата электронного документа
//  * СуммаДокумента - Число - сумма по документу.
//  * ОбъектыУчета - Массив Из ОпределяемыйТип.ОснованияЭлектронныхДокументовЭДО - учетные объекты, которые нужно проставить в качестве основания.
//  * Подписанты - Массив из ОпределяемыйТип.Пользователь - подписанты электронного документа. Если не указаны, то заполняются из настроек. Если указаны, то устанавливается маршрут подписания См. МаршрутыПодписанияБЭД.МаршрутУказыватьПриСоздании.
//
Функция НовыеПараметрыСозданияДокументаПоФайлу() Экспорт
	Параметры = Новый Структура;
	Параметры.Вставить("Организация", Неопределено);
	Параметры.Вставить("Контрагент", Неопределено);
	Параметры.Вставить("Договор", Неопределено);
	Параметры.Вставить("ВидДокумента", ПредопределенноеЗначение("Справочник.ВидыДокументовЭДО.ПустаяСсылка"));
	Параметры.Вставить("НомерДокумента", "");
	Параметры.Вставить("ДатаДокумента", Дата(1,1,1));
	Параметры.Вставить("СуммаДокумента", 0);
	Параметры.Вставить("ОбъектыУчета", Новый Массив);
	Параметры.Вставить("Подписанты", Новый Массив);
	Возврат Параметры;
КонецФункции

#КонецОбласти

#Область РучноеФормированиеТитула

// Формирует структуру данных ручного формирования титула.
// По данным ручного формирования может заполняться описание данных электронного документа.
// 
// Параметры:
//  Форма - См. Обработка.ИнтерфейсДокументовЭДО.Форма.РучноеФормированиеОтветногоТитула
// 
// Возвращаемое значение:
//  См. ДанныеРучногоФормированияОтветногоТитулаУПД_УКД
Функция ДанныеРучногоФормированияТитула(Форма) Экспорт
	Формы = ФормыРучногоФормированияТитула();
	Если Форма.ИмяФормы = Формы.ОбщаяФормаДляУПД Тогда
		Возврат ДанныеРучногоФормированияОтветногоТитулаУПД_УКД(Форма);
	Иначе
		Возврат Неопределено;
	КонецЕсли;
КонецФункции

#КонецОбласти

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

#Область ОбработкаДействийПоЭДО

// Возвращает пустой набор действий по ЭДО.
// 
// Возвращаемое значение:
//  Соответствие из КлючИЗначение:
//  * Ключ - ПеречислениеСсылка.ДействияПоЭДО
//  * Значение - Булево
//
Функция НовыйНаборДействийПоЭДО()
	Возврат Новый Соответствие;
КонецФункции

#КонецОбласти

#Область ПредставлениеДокумента

// Заполняет имена полей для формирования представления электронного документа
// 
// Параметры:
//  Поля - Массив из Строка
//  СтандартнаяОбработка - Булево
//
Процедура ОбработкаПолученияПолейПредставленияДокумента(Поля, СтандартнаяОбработка) Экспорт
	СтандартнаяОбработка = Ложь;
	Поля.Добавить("ВидДокумента");
	Поля.Добавить("НомерДокумента");
	Поля.Добавить("ДатаДокумента");
КонецПроцедуры

// Заполняет представление электронного документа.
// 
// Параметры:
//  Данные - Структура
//  Представление - Строка
//  СтандартнаяОбработка - Булево
//
Процедура ОбработкаПолученияПредставленияДокумента(Данные, Представление, СтандартнаяОбработка) Экспорт
	СтандартнаяОбработка = Ложь;
	Представление = ПредставлениеДокументаПоСвойствам(Данные);
КонецПроцедуры

// Возвращает представление электронного документа по его свойствам.
// 
// Параметры:
//  СвойстваДокумента - Структура:
//  * ВидДокумента   - СправочникСсылка.ВидыДокументовЭДО
//  * НомерДокумента - Строка
//  * ДатаДокумента  - Дата
//  ЭтоНовый - Булево
// Возвращаемое значение:
//  Строка - представление электронного документа.
//
Функция ПредставлениеДокументаПоСвойствам(СвойстваДокумента, ЭтоНовый = Ложь) Экспорт
	
	Если ЗначениеЗаполнено(СвойстваДокумента.НомерДокумента) И ЗначениеЗаполнено(СвойстваДокумента.ДатаДокумента) Тогда
		Представление = СтрШаблон(НСтр("ru = '%1 № %2 от %3'"), СвойстваДокумента.ВидДокумента,
			СвойстваДокумента.НомерДокумента, Формат(СвойстваДокумента.ДатаДокумента, "ДЛФ=D;"));
	ИначеЕсли ЗначениеЗаполнено(СвойстваДокумента.НомерДокумента) Тогда
		Представление = СтрШаблон(НСтр("ru = '%1 № %2'"), СвойстваДокумента.ВидДокумента,
			СвойстваДокумента.НомерДокумента);
	ИначеЕсли ЗначениеЗаполнено(СвойстваДокумента.ДатаДокумента) Тогда
		Представление = СтрШаблон(НСтр("ru = '%1 от %2'"), СвойстваДокумента.ВидДокумента,
			Формат(СвойстваДокумента.ДатаДокумента, "ДЛФ=D;"));
	Иначе
		Представление = Строка(СвойстваДокумента.ВидДокумента);
	КонецЕсли;
	
	Если ЭтоНовый Тогда
		Представление = СтрШаблон(НСтр("ru = '%1 (Создание)'"), Представление);
	КонецЕсли;
	
	Возврат Представление;
	
КонецФункции

#КонецОбласти

#Область РучноеФормированиеТитула

// Структура полных имен форм, используемых для ручного формирования титулов
// 
// Возвращаемое значение:
//  Структура:
// * ОбщаяФормаДляУПД - Строка
Функция ФормыРучногоФормированияТитула()
	Формы = Новый Структура;
	Формы.Вставить("ОбщаяФормаДляУПД", "Обработка.ИнтерфейсДокументовЭДО.Форма.РучноеФормированиеОтветногоТитула");
	Возврат Формы;
КонецФункции

// Параметры:
//  Форма - См. Обработка.ИнтерфейсДокументовЭДО.Форма.РучноеФормированиеОтветногоТитула
// 
// Возвращаемое значение:
//  См. ДанныеРучногоФормированияОтветногоТитулаУПД_2019
//  См. ДанныеРучногоФормированияОтветногоТитулаУКД_2020
Функция ДанныеРучногоФормированияОтветногоТитулаУПД_УКД(Форма)
	Если Форма.ЭтоУПД Тогда
		Возврат ДанныеРучногоФормированияОтветногоТитулаУПД_2019(Форма);
	Иначе
		Возврат ДанныеРучногоФормированияОтветногоТитулаУКД_2020(Форма);
	КонецЕсли;
КонецФункции

// Служебный метод. Для получения данных см. ЭлектронныеДокументыЭДОКлиентСервер.ДанныеРучногоФормированияТитула
// 
// Параметры:
//  Форма - См. Обработка.ИнтерфейсДокументовЭДО.Форма.РучноеФормированиеОтветногоТитула
// 
// Возвращаемое значение:
//  Структура:
// * СоставительДокументаНаименование - Строка
// * СоставительДокументаДоверенность - Строка
// * СведенияОПринятииТоваров - Структура:
// ** КодИтога - Строка
// ** ДатаПолученияТоваров - Дата
// ** СодержаниеОперации - Строка
// * ДокументОРасхождениях - Структура:
// ** Вид - Строка
// ** Наименование - Строка
// ** Дата - Дата
// ** Номер - Строка
// * ЗакупкаДляГосударственныхНужд - Структура:
// ** КодЗакупки - Строка
// ** НомерЛицевогоСчетаПокупателя - Строка
// ** НаименованиеФинансовогоОрганаПокупателя - Строка
// ** НомерРеестровойЗаписиПокупателя - Строка
// ** НомерБюджетногоОбязательстваПокупателя - Строка
// ** КазначействоПокупателяКод - Строка
// ** КазначействоПокупателяНаименование - Строка
// ** ОКТМОМестаПоставки - Строка
// ** НомерДенежногоОбязательства - Строка
// ** ПредельнаяДатаОплаты - Дата
// ** ОКТМОПокупателя - Строка
// ** НомерРеестровойЗаписиПокупателя - Строка
// ** НомерБюджетногоОбязательстваПокупателя - Строка
// ** КазначействоПокупателяКод - Строка
// ** КазначействоПокупателяНаименование - Строка
// * ДенежныеОбязательства - Массив Из Структура:
// ** ВидСредств - Строка
// ** КодБюджетнойКлассификации - Строка
// ** КодОбъектаФАИП - Строка
// ** КодЦели - Строка
// ** НомерСтрокиИнформацииПродавца - Число
// ** СуммаАванса - Число
Функция ДанныеРучногоФормированияОтветногоТитулаУПД_2019(Форма) Экспорт
	Данные = Новый Структура;
	Данные.Вставить("СоставительДокументаНаименование", Форма.СоставительДокументаНаименование);
	Если Форма.СоставительДокумента <> Форма.Покупатель Тогда
		Данные.Вставить("СоставительДокументаДоверенность", Форма.СоставительДокументаДоверенность);
	КонецЕсли;

	СведенияОПринятииТоваров = Новый Структура;
	СведенияОПринятииТоваров.Вставить("КодИтога", Форма.КодИтога);
	СведенияОПринятииТоваров.Вставить("ДатаПолученияТоваров", Форма.ДатаПолученияТоваров);
	СведенияОПринятииТоваров.Вставить("СодержаниеОперации", Форма.СодержаниеОперации);
	Данные.Вставить("СведенияОПринятииТоваров", СведенияОПринятииТоваров);

	Если Форма.ЕстьДокументОРасхождениях Тогда
		ДокументОРасхождениях = Новый Структура;
		ДокументОРасхождениях.Вставить("Вид", Форма.ДокументОРасхожденияхВид);
		ДокументОРасхождениях.Вставить("Наименование", Форма.ДокументОРасхожденияхНаименование);
		ДокументОРасхождениях.Вставить("Дата", Форма.ДокументОРасхожденияхДата);
		ДокументОРасхождениях.Вставить("Номер", Форма.ДокументОРасхожденияхНомер);
		Данные.Вставить("ДокументОРасхождениях", ДокументОРасхождениях);
	КонецЕсли;

	Если Форма.ЗакупкаДляГосударственныхНужд Тогда
		ЗакупкаДляГосударственныхНуждСтруктура = Новый Структура;
		ЗакупкаДляГосударственныхНуждСтруктура.Вставить("КодЗакупки", Форма.КодЗакупки);
		ЗакупкаДляГосударственныхНуждСтруктура.Вставить("НомерЛицевогоСчетаПокупателя",
			Форма.НомерЛицевогоСчетаПокупателя);
		ЗакупкаДляГосударственныхНуждСтруктура.Вставить("НаименованиеФинансовогоОрганаПокупателя",
			Форма.НаименованиеФинансовогоОрганаПокупателя);
		ЗакупкаДляГосударственныхНуждСтруктура.Вставить("НомерРеестровойЗаписиПокупателя",
			Форма.НомерРеестровойЗаписиПокупателя);
		ЗакупкаДляГосударственныхНуждСтруктура.Вставить("НомерБюджетногоОбязательстваПокупателя",
			Форма.НомерБюджетногоОбязательстваПокупателя);
		ЗакупкаДляГосударственныхНуждСтруктура.Вставить("КазначействоПокупателяКод", Форма.КазначействоПокупателяКод);
		ЗакупкаДляГосударственныхНуждСтруктура.Вставить("КазначействоПокупателяНаименование",
			Форма.КазначействоПокупателяНаименование);
		ЗакупкаДляГосударственныхНуждСтруктура.Вставить("ОКТМОМестаПоставки", Форма.ОКТМОМестаПоставки);
		ЗакупкаДляГосударственныхНуждСтруктура.Вставить("НомерДенежногоОбязательства",
			Форма.НомерДенежногоОбязательства);
		ЗакупкаДляГосударственныхНуждСтруктура.Вставить("ПредельнаяДатаОплаты", Форма.ПредельнаяДатаОплаты);
		ЗакупкаДляГосударственныхНуждСтруктура.Вставить("ОКТМОПокупателя", Форма.ОКТМОПокупателя);
		ЗакупкаДляГосударственныхНуждСтруктура.Вставить("НомерРеестровойЗаписиПокупателя",
			Форма.НомерРеестровойЗаписиПокупателя);
		ЗакупкаДляГосударственныхНуждСтруктура.Вставить("НомерБюджетногоОбязательстваПокупателя", Форма.КодЗакупки);
		ЗакупкаДляГосударственныхНуждСтруктура.Вставить("КазначействоПокупателяКод", Форма.КазначействоПокупателяКод);
		ЗакупкаДляГосударственныхНуждСтруктура.Вставить("КазначействоПокупателяНаименование",
			Форма.КазначействоПокупателяНаименование);
		Данные.Вставить("ЗакупкаДляГосударственныхНужд", ЗакупкаДляГосударственныхНуждСтруктура);

		ДенежныеОбязательства = Новый Массив; // Массив Из Структура
		СтруктураСтроки = Новый ФиксированнаяСтруктура("ВидСредств, КодБюджетнойКлассификации, КодОбъектаФАИП, КодЦели,
			|НомерСтрокиИнформацииПродавца, СуммаАванса");
		Для Каждого СтрокаТаблицы Из Форма.ДенежныеОбязательства Цикл
			ДанныеСтроки = Новый Структура(СтруктураСтроки);
			ЗаполнитьЗначенияСвойств(ДанныеСтроки, СтрокаТаблицы);
			ДенежныеОбязательства.Добавить(ДанныеСтроки);
		КонецЦикла;
		Данные.Вставить("ДенежныеОбязательства", ДенежныеОбязательства);
	КонецЕсли;
	Возврат Данные;
КонецФункции

// Служебный метод. Для получения данных см. ЭлектронныеДокументыЭДОКлиентСервер.ДанныеРучногоФормированияТитула
// 
// Параметры:
//  Форма - См. Обработка.ИнтерфейсДокументовЭДО.Форма.РучноеФормированиеОтветногоТитула
// 
// Возвращаемое значение:
//  Структура:
// * СоставительДокументаНаименование - Строка
// * СоставительДокументаДоверенность - Строка
// * ДатаСогласования - Дата
// * СодержаниеОперации - Строка
Функция ДанныеРучногоФормированияОтветногоТитулаУКД_2020(Форма) Экспорт
	Данные = Новый Структура;
	Данные.Вставить("СоставительДокументаНаименование", Форма.СоставительДокументаНаименование);
	Если Форма.СоставительДокумента <> Форма.Покупатель Тогда
		Данные.Вставить("СоставительДокументаДоверенность", Форма.СоставительДокументаДоверенность);
	КонецЕсли;
	Данные.Вставить("ДатаСогласования", Форма.ДатаСогласования);
	Данные.Вставить("СодержаниеОперации", Форма.СодержаниеОперации_УКД);
	Возврат Данные;
КонецФункции

#КонецОбласти

#КонецОбласти
