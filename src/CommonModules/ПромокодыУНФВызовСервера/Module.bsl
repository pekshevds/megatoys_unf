
///////////////////////////////////////////////////////////////////////////////////////////////////////
// Copyright (c) 2022, ООО 1С-Софт
// Все права защищены. Эта программа и сопроводительные материалы предоставляются 
// в соответствии с условиями лицензии Attribution 4.0 International (CC BY 4.0)
// Текст лицензии доступен по ссылке:
// https://creativecommons.org/licenses/by/4.0/legalcode
///////////////////////////////////////////////////////////////////////////////////////////////////////

#Область ПрограммныйИнтерфейс

Процедура ДополнитьПараметрыПробитияЧекаВыданнымиПромокодами(ОбщиеПараметры, ДокументОбъект) Экспорт
	ШаблонЧекаСПромокодом = Неопределено;
	ПромокодыКВыдаче = ДокументОбъект.ПримененныеПромокоды.НайтиСтроки(Новый Структура("ЭтоАктивацияПромокода", Истина));
	СписокПромокодов = ДокументОбъект.ПримененныеПромокоды.Выгрузить(ПромокодыКВыдаче, "Промокод").ВыгрузитьКолонку("Промокод");
	ОписаниеПромокодов = СостояниеПромокодов(СписокПромокодов);
	Если ПромокодыКВыдаче.Количество() > 0 Тогда
		
		СработавшиеСкидки = ДокументОбъект.СкидкиНаценки.Выгрузить(,"СкидкаНаценка").ВыгрузитьКолонку("СкидкаНаценка");
		Для Каждого СтрокаПромокода Из ПромокодыКВыдаче Цикл
			СкидкиВыдатьПромокод = СкидкиВыдачиПромокодаПоУсловию(СтрокаПромокода.УсловиеПредоставленияСкидки, СработавшиеСкидки);			
			Если СкидкиВыдатьПромокод.Количество() = 0 Тогда 
				Продолжить;
			КонецЕсли;
			СкидкаСледующейПокупки = Неопределено;
			Для Каждого СкидкаВыдачиПромокода Из СкидкиВыдатьПромокод Цикл
				СкидкаСледующейПокупки = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(СкидкиВыдатьПромокод[0], "СкидкаНаСледующуюПокупкуПоПромокоду");
				Если ЗначениеЗаполнено(СкидкаСледующейПокупки) Тогда
					Прервать;
				КонецЕсли;
			КонецЦикла;
			ОписаниеДатПромокода = "";
			ОписаниеПромокода = ОписаниеПромокодов[СтрокаПромокода.Промокод];
			Если ОписаниеПромокода = Неопределено Тогда
				Продолжить;
			КонецЕсли;
			Если ЗначениеЗаполнено(ОписаниеПромокода.ДействуетС) Тогда
				ОписаниеДатПромокода = ОписаниеДатПромокода + Нстр("ru = 'с '") + Формат(ОписаниеПромокода.ДействуетС, "ДЛФ=D") + " ";
			КонецЕсли;
			Если ЗначениеЗаполнено(ОписаниеПромокода.ДействуетДо) Тогда
				ОписаниеДатПромокода = ОписаниеДатПромокода + Нстр("ru = 'по '") + Формат(ОписаниеПромокода.ДействуетДо, "ДЛФ=D") + " ";
			КонецЕсли;
			Если ЗначениеЗаполнено(ОписаниеДатПромокода) Тогда
				ОписаниеДатПромокода = Нстр("ru = 'в период '") + ОписаниеДатПромокода;
			КонецЕсли;
			ТекстСтрока1 = СтрШаблон(Нстр("ru = 'Предъявите промокод%1 чтобы получить скидку:'"), ОписаниеДатПромокода);
			ТекстСтрока2 = Строка(СкидкаСледующейПокупки);
			НефискальныйДокумент = Новый Массив;
			НефискальныйДокумент.Добавить(Новый Структура("ПереносСтроки, Текст, ТекстоваяСтрока", Истина, ТекстСтрока1, Неопределено));
			НефискальныйДокумент.Добавить(Новый Структура("ПереносСтроки, Текст, ТекстоваяСтрока", Истина, ТекстСтрока2, Неопределено));
			НефискальныйДокумент.Добавить(Новый Структура("ТипШтрихкода, ШтрихКод", "QR", СтрокаПромокода.Промокод));
			Если ОписаниеПромокода.Конечный Тогда
				ТекстКоличествоПрименений = "";
				Если ОписаниеПромокода.ДоступныйОстаток = 1 Тогда
					ТекстКоличествоПрименений = НСтр("ru = 'Применить промокод можно только один раз.'");
				Иначе
					ТекстКоличествоПрименений = СтрШаблон(НСтр("ru = 'Применить промокод можно не более %1 раз.'"), ОписаниеПромокода.ДоступныйОстаток);
				КонецЕсли;
				НефискальныйДокумент.Добавить(Новый Структура("ПереносСтроки, Текст, ТекстоваяСтрока", Истина, ТекстКоличествоПрименений, Неопределено));
			КонецЕсли;
			ОбщиеПараметры.НефискальныеДокументы.Добавить(НефискальныйДокумент);
		КонецЦикла;
		
	КонецЕсли;
КонецПроцедуры

Функция СостояниеПромокодов(Промокоды) Экспорт
	Возврат ПромокодыУНФ.СостояниеПромокодов(Промокоды);
КонецФункции

Функция СкидкиВыдачиПромокодаПоУсловию(УсловиеСледующейПокупки, СработавшиеСкидки = Неопределено) Экспорт
	Возврат ПромокодыУНФ.СкидкиВыдачиПромокодаПоУсловию(УсловиеСледующейПокупки, СработавшиеСкидки);
КонецФункции

#КонецОбласти