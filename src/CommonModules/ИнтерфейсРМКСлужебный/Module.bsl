
///////////////////////////////////////////////////////////////////////////////////////////////////////
// Copyright (c) 2022, ООО 1С-Софт
// Все права защищены. Эта программа и сопроводительные материалы предоставляются 
// в соответствии с условиями лицензии Attribution 4.0 International (CC BY 4.0)
// Текст лицензии доступен по ссылке:
// https://creativecommons.org/licenses/by/4.0/legalcode
///////////////////////////////////////////////////////////////////////////////////////////////////////

#Область СлужебныйПрограммныйИнтерфейс

// Заполняет исходные данные для программного формирования элементов плиточного интерфейса формы подбора
//
// Параметры:
//  Форма - ФормаКлиентскогоПриложения - ПлиточныйИнтерфейсВыбораТоваров
//
Процедура ЗаполнитьОпорныеДанныеПанелиПлиточногоИнтерфейса(Форма) Экспорт
	
	Форма.ОпорныеДанные.Очистить();
	УникальныйИдентификаторФормы = Форма.УникальныйИдентификатор;
	ИсточникиДанныхПлитки = ИнтерфейсРМКСлужебныйКлиентСервер.ИсточникиДанныхДляПлитки();
	
	Запрос = Новый Запрос(
	"ВЫБРАТЬ
	|	СтруктураПлиточногоИнтерфейсаПодбораРМКСостав.Номенклатура КАК Номенклатура,
	|	СтруктураПлиточногоИнтерфейсаПодбораРМКСостав.Характеристика КАК Характеристика,
	|	СтруктураПлиточногоИнтерфейсаПодбораРМКСостав.НомерКатегории КАК НомерКатегории,
	|	СтруктураПлиточногоИнтерфейсаПодбораРМКСостав.ИндексПозиции КАК ИндексПозиции,
	|	СтруктураПлиточногоИнтерфейсаПодбораРМКСостав.НомерКатегорииРазмещения КАК НомерКатегорииРазмещения,
	|	СтруктураПлиточногоИнтерфейсаПодбораРМКСостав.Шрифт КАК Шрифт,
	|	СтруктураПлиточногоИнтерфейсаПодбораРМКСостав.ЦветШрифта КАК ЦветШрифта,
	|	СтруктураПлиточногоИнтерфейсаПодбораРМКСостав.ЦветФона КАК ЦветФона,
	|	СтруктураПлиточногоИнтерфейсаПодбораРМКСостав.ЭтоКатегория КАК ЭтоКатегория,
	|	СтруктураПлиточногоИнтерфейсаПодбораРМКСостав.ИмяЭлемента КАК Наименование,
	|	СтруктураПлиточногоИнтерфейсаПодбораРМКСостав.ИмяЭлемента КАК ИмяЭлемента,
	|	СтруктураПлиточногоИнтерфейсаПодбораРМКСостав.ИзображениеЭлемента КАК ИзображениеЭлемента,
	|	СтруктураПлиточногоИнтерфейсаПодбораРМКСостав.ВидМодификатора КАК ВидМодификатора
	|ПОМЕСТИТЬ ПалитраТоваровРМКСостав
	|ИЗ
	|	Справочник.ПалитраТоваровРМК.Состав КАК СтруктураПлиточногоИнтерфейсаПодбораРМКСостав
	|ГДЕ
	|	СтруктураПлиточногоИнтерфейсаПодбораРМКСостав.Ссылка = &ДанныеДляЗаполнения
	|	И НЕ СтруктураПлиточногоИнтерфейсаПодбораРМКСостав.Ссылка.ПометкаУдаления
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ПалитраТоваровРМКСостав.НомерКатегорииРазмещения КАК НомерКатегорииРазмещения
	|ПОМЕСТИТЬ ВТНомераКатегорийРазмещения
	|ИЗ
	|	ПалитраТоваровРМКСостав КАК ПалитраТоваровРМКСостав
	|ГДЕ
	|	ПалитраТоваровРМКСостав.НомерКатегорииРазмещения > 0
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ПалитраТоваровРМКСостав.НомерКатегории КАК НомерКатегории,
	|	ПалитраТоваровРМКСостав.НомерКатегорииРазмещения КАК НомерКатегорииРазмещения,
	|	ПалитраТоваровРМКСостав.ИндексПозиции КАК ИндексПозиции
	|ПОМЕСТИТЬ ВТГрупповыеМодификаторы
	|ИЗ
	|	ПалитраТоваровРМКСостав КАК ПалитраТоваровРМКСостав
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ (ВЫБРАТЬ
	|			ПалитраТоваровРМКСостав.НомерКатегорииРазмещения КАК НомерКатегорииРазмещения
	|		ИЗ
	|			ПалитраТоваровРМКСостав КАК ПалитраТоваровРМКСостав
	|		ГДЕ
	|			ПалитраТоваровРМКСостав.НомерКатегорииРазмещения > 0
	|			И НЕ ПалитраТоваровРМКСостав.ВидМодификатора = ЗНАЧЕНИЕ(Перечисление.ВидыМодификаторовРМК.ПустаяСсылка)) КАК ВложенныйЗапрос
	|		ПО ПалитраТоваровРМКСостав.НомерКатегорииРазмещения = ВложенныйЗапрос.НомерКатегорииРазмещения
	|ГДЕ
	|	ПалитраТоваровРМКСостав.ВидМодификатора = ЗНАЧЕНИЕ(Перечисление.ВидыМодификаторовРМК.ПустаяСсылка)
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ПалитраТоваровРМКСостав.Номенклатура КАК Номенклатура,
	|	ПалитраТоваровРМКСостав.Характеристика КАК Характеристика,
	|	ПалитраТоваровРМКСостав.НомерКатегории КАК НомерКатегории,
	|	ПалитраТоваровРМКСостав.ИндексПозиции КАК ИндексПозицииВКатегории,
	|	ПалитраТоваровРМКСостав.НомерКатегорииРазмещения КАК НомерКатегорииРазмещенияЭлемента,
	|	ПалитраТоваровРМКСостав.Шрифт КАК Шрифт,
	|	ПалитраТоваровРМКСостав.ЦветШрифта КАК ЦветШрифта,
	|	ПалитраТоваровРМКСостав.ЦветФона КАК ЦветФона,
	|	ПалитраТоваровРМКСостав.ЭтоКатегория КАК ЭтоКатегория,
	|	ВТНомераКатегорийРазмещения.НомерКатегорииРазмещения ЕСТЬ НЕ NULL 
	|		ИЛИ ВТГрупповыеМодификаторы.НомерКатегорииРазмещения ЕСТЬ НЕ NULL  КАК ИмеетсяВложенность,
	|	ПалитраТоваровРМКСостав.ИмяЭлемента КАК Наименование,
	|	ПалитраТоваровРМКСостав.ИмяЭлемента КАК ИмяЭлемента,
	|	ПалитраТоваровРМКСостав.ИзображениеЭлемента КАК ИзображениеЭлемента
	|ИЗ
	|	ПалитраТоваровРМКСостав КАК ПалитраТоваровРМКСостав
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТНомераКатегорийРазмещения КАК ВТНомераКатегорийРазмещения
	|		ПО ПалитраТоваровРМКСостав.НомерКатегории = ВТНомераКатегорийРазмещения.НомерКатегорииРазмещения
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТГрупповыеМодификаторы КАК ВТГрупповыеМодификаторы
	|		ПО ПалитраТоваровРМКСостав.НомерКатегорииРазмещения = ВТГрупповыеМодификаторы.НомерКатегорииРазмещения
	|			И ПалитраТоваровРМКСостав.ИндексПозиции = ВТГрупповыеМодификаторы.ИндексПозиции
	|ГДЕ
	|	ПалитраТоваровРМКСостав.ВидМодификатора = ЗНАЧЕНИЕ(Перечисление.ВидыМодификаторовРМК.ПустаяСсылка)
	|
	|УПОРЯДОЧИТЬ ПО
	|	НомерКатегорииРазмещенияЭлемента,
	|	ИндексПозицииВКатегории");
	
	СтруктураПлиточногоИнтерфейсаПодбора = Неопределено;
	Если ОбщегоНазначенияКлиентСервер.ЕстьРеквизитИлиСвойствоОбъекта(Форма, "СтруктураПлиточногоИнтерфейсаПодбора") Тогда
		СтруктураПлиточногоИнтерфейсаПодбора = Форма.СтруктураПлиточногоИнтерфейсаПодбора;
	Иначе
		СтруктураПлиточногоИнтерфейсаПодбора = Форма.СтруктураПлиточногоИнтерфейса;
	КонецЕсли;
	
	Запрос.УстановитьПараметр("ДанныеДляЗаполнения", СтруктураПлиточногоИнтерфейсаПодбора);
	Выборка = Запрос.Выполнить().Выбрать();
	
	Если Не Форма.ВертикальнаяОриентация Тогда
		КоличествоЭлементовВРяду = СтруктураПлиточногоИнтерфейсаПодбора.КоличествоЭлементовВРяду;
		КоличествоРядовНаСтранице = СтруктураПлиточногоИнтерфейсаПодбора.КоличествоРядов;
		КоличествоЭлементовВРяду = 4;
		КоличествоРядовНаСтранице = 3;
	Иначе
		КоличествоЭлементовВРяду = СтруктураПлиточногоИнтерфейсаПодбора.КоличествоРядов;
		КоличествоРядовНаСтранице = СтруктураПлиточногоИнтерфейсаПодбора.КоличествоЭлементовВРяду;
		КоличествоЭлементовВРяду = 3;
		КоличествоРядовНаСтранице = 4;
	КонецЕсли;
	
	Форма.КоличествоЭлементовВРяду = КоличествоЭлементовВРяду;
	Форма.КоличествоРядовНаСтранице = КоличествоРядовНаСтранице;
	
	СоставПлитки = СтруктураПлиточногоИнтерфейсаПодбора.Состав.Выгрузить();
	ВыведенаПлиткаНазад = Ложь;
	ТекущийНомерКатегорииРазмещения = 0;
	ОпорныеДанные = Форма.ОпорныеДанные;
	ТаблицаОпорныхДанных = ОпорныеДанные.Выгрузить();
	
	Пока Выборка.Следующий() Цикл
		
		Если Не ТекущийНомерКатегорииРазмещения = Выборка.НомерКатегорииРазмещенияЭлемента Тогда
			ВыведенаПлиткаНазад = Ложь;
		КонецЕсли;
		
		ТекущийНомерКатегорииРазмещения = Выборка.НомерКатегорииРазмещенияЭлемента;
		
		Если Выборка.НомерКатегорииРазмещенияЭлемента > 0 И Не ВыведенаПлиткаНазад Тогда
			
			Фильтр = Новый Структура;
			Фильтр.Вставить("НомерКатегории", Выборка.НомерКатегорииРазмещенияЭлемента);
			
			СтрокиПлитки = СоставПлитки.НайтиСтроки(Фильтр);
			Если СтрокиПлитки.Количество() > 0 Тогда
				СтрокаПапка = СтрокиПлитки[0];
				СтрокаПапка.ИмеетсяВложенность = Истина;
				
				ДополнитьТаблицуОпорныхДанныхПоСтроке(ТаблицаОпорныхДанных, СтрокаПапка, Выборка.НомерКатегорииРазмещенияЭлемента, 
					1, Форма);
				
				ВыведенаПлиткаНазад = Истина;
			КонецЕсли;
		КонецЕсли;
		
		НовыеДанные = ТаблицаОпорныхДанных.Добавить();
		ЗаполнитьЗначенияСвойств(НовыеДанные, Выборка);
		НовыеДанные.ИсточникПлитки = ИсточникиДанныхПлитки.Палитра;
		
		НовыеДанные.ЦветШрифта = ОбщегоНазначения.ЗначениеИзСтрокиXML(Выборка.ЦветШрифта);
		НовыеДанные.ЦветФона = ОбщегоНазначения.ЗначениеИзСтрокиXML(Выборка.ЦветФона);
		
		Если НовыеДанные.ИмеетсяВложенность Тогда
			НовыеДанные.ПервыйИндексПлитки = 1;
		КонецЕсли;
		
		Если Выборка.НомерКатегорииРазмещенияЭлемента > 0 Тогда
			НовыеДанные.ИндексПозицииВКатегории = Выборка.ИндексПозицииВКатегории + 1;
		КонецЕсли;
		
		СсылкаНаПрисоединенныйФайл = Выборка.ИзображениеЭлемента;
		Если Не СсылкаНаПрисоединенныйФайл.Пустая() Тогда
			АдресКартинки = НавигационнаяСсылкаИзображения(СсылкаНаПрисоединенныйФайл, УникальныйИдентификаторФормы);
			НовыеДанные.АдресИзображения = АдресКартинки;
		КонецЕсли;
		
		Если Не Выборка.ЭтоКатегория И Выборка.ИмеетсяВложенность Тогда
			
			ИндексПозицииВКатегории = 1;
			
			//Кнопка назад
			Фильтр = Новый Структура;
			Фильтр.Вставить("НомерКатегории", Выборка.НомерКатегории);
			Фильтр.Вставить("ИндексПозиции", Выборка.ИндексПозицииВКатегории);
			
			СтрокиПлитки = СоставПлитки.НайтиСтроки(Фильтр);
			Если СтрокиПлитки.Количество() > 0 Тогда
				СтрокаПапка = СтрокиПлитки[0];
				ДополнитьТаблицуОпорныхДанныхПоСтроке(ТаблицаОпорныхДанных,СтрокаПапка, Выборка.НомерКатегории, 
					ИндексПозицииВКатегории, Форма);
			КонецЕсли;
			
			//Модификаторы на группу
			Фильтр = Новый Структура;
			Фильтр.Вставить("НомерКатегорииРазмещения", Выборка.НомерКатегорииРазмещенияЭлемента);
			Фильтр.Вставить("ВидМодификатора", Перечисления.ВидыМодификаторовРМК.ВключатьВЧек);
			
			СтрокиМодификаторов = СоставПлитки.НайтиСтроки(Фильтр);
			Для Каждого СтрокаМодификатора Из СтрокиМодификаторов Цикл
				ДополнитьТаблицуОпорныхДанныхПоСтроке(ТаблицаОпорныхДанных,СтрокаМодификатора, Выборка.НомерКатегории, 
					ИндексПозицииВКатегории, Форма);
			КонецЦикла;
			
			//Модификаторы на позицию
			Фильтр = Новый Структура;
			Фильтр.Вставить("НомерКатегорииРазмещения", Выборка.НомерКатегории);
			Фильтр.Вставить("ВидМодификатора", Перечисления.ВидыМодификаторовРМК.ВключатьВЧек);
			
			СтрокиМодификаторов = СоставПлитки.НайтиСтроки(Фильтр);
			Для Каждого СтрокаМодификатора Из СтрокиМодификаторов Цикл
				ДополнитьТаблицуОпорныхДанныхПоСтроке(ТаблицаОпорныхДанных,СтрокаМодификатора, Выборка.НомерКатегории, 
					ИндексПозицииВКатегории, Форма);
			КонецЦикла;
			
		КонецЕсли;
		
	КонецЦикла;
	
	ТаблицаОпорныхДанных.Сортировать("НомерКатегорииРазмещенияЭлемента, ИндексПозицииВКатегории");
	
	Для Каждого СтрокаОпорныхДанных Из ТаблицаОпорныхДанных Цикл
		НоваяСтрока = ОпорныеДанные.Добавить();
		ЗаполнитьЗначенияСвойств(НоваяСтрока, СтрокаОпорныхДанных);
	КонецЦикла;
	
	Попытка
		КоличествоПлитокНаСтранице = КоличествоЭлементовВРяду * КоличествоРядовНаСтранице;
		Фильтр = Новый Структура;
		Фильтр.Вставить("ИмеетсяВложенность", Истина);
		Фильтр.Вставить("ПервыйИндексПлитки", 1);
		СтрокиПлитки = ОпорныеДанные.НайтиСтроки(Фильтр);
		ФильтрЭлемента = Новый Структура;
		
		Для Каждого СтрокаПлитки Из СтрокиПлитки Цикл
			
			Фильтр.Вставить("ПервыйИндексПлитки", 0);
			Фильтр.Вставить("НомерКатегорииРазмещенияЭлемента", СтрокаПлитки.НомерКатегории);
			
			Фильтр.Вставить("НомерКатегории", 0);
			Фильтр.Вставить("ИндексПозицииВКатегории", 1);
			
			ЭлементыОпорныхДанных = ОпорныеДанные.НайтиСтроки(Фильтр);
			Если ЭлементыОпорныхДанных.Количество() Тогда
				ПервыйЭлементКатегорииПлитки = ЭлементыОпорныхДанных[0];
				СтрокаПлитки.ПервыйИндексПлитки = ПервыйЭлементКатегорииПлитки.ПолучитьИдентификатор();
				
				НомерСтраницыВКатегории = Цел((СтрокаПлитки.ИндексПозицииВКатегории-1) / КоличествоПлитокНаСтранице);
				НачальныйИндексПозицииНаСтранице = (НомерСтраницыВКатегории * КоличествоПлитокНаСтранице) + 1;
				ФильтрЭлемента.Вставить("НомерКатегорииРазмещенияЭлемента", СтрокаПлитки.НомерКатегорииРазмещенияЭлемента);
				ФильтрЭлемента.Вставить("ИндексПозицииВКатегории", НачальныйИндексПозицииНаСтранице);
				СтрокаНачальнойПозиции = ОпорныеДанные.НайтиСтроки(ФильтрЭлемента)[0];
				ПервыйЭлементКатегорииПлитки.ПервыйИндексПлитки = СтрокаНачальнойПозиции.ПолучитьИдентификатор();
			Иначе
				СтрокаПлитки.ИмеетсяВложенность = Ложь;
				СтрокаПлитки.ПервыйИндексПлитки = 0;
			КонецЕсли;
		КонецЦикла;
	Исключение
		ОпорныеДанные.Очистить();
	КонецПопытки;
	
КонецПроцедуры

Процедура ДополнитьТаблицуОпорныхДанныхПоСтроке(ТаблицаОпорныхДанных, СтрокаДополнения,
	НомерКатегорииРазмещения, ИндексПозицииВКатегории, Форма)
	ИсточникиДанныхПлитки = ИнтерфейсРМКСлужебныйКлиентСервер.ИсточникиДанныхДляПлитки();
	
	НовыеДанные = ТаблицаОпорныхДанных.Добавить();
	ЗаполнитьЗначенияСвойств(НовыеДанные, СтрокаДополнения);
	НовыеДанные.ИсточникПлитки = ИсточникиДанныхПлитки.Палитра;
	
	НовыеДанные.НомерКатегорииРазмещенияЭлемента = НомерКатегорииРазмещения;
	НовыеДанные.ИндексПозицииВКатегории = ИндексПозицииВКатегории;
	НовыеДанные.Наименование = СтрокаДополнения.ИмяЭлемента;
	НовыеДанные.НомерКатегории = 0;
	
	НовыеДанные.ЦветШрифта = ОбщегоНазначения.ЗначениеИзСтрокиXML(СтрокаДополнения.ЦветШрифта);
	НовыеДанные.ЦветФона = ОбщегоНазначения.ЗначениеИзСтрокиXML(СтрокаДополнения.ЦветФона);
	
	СсылкаНаПрисоединенныйФайл = СтрокаДополнения.ИзображениеЭлемента;
	
	Если Не СсылкаНаПрисоединенныйФайл.Пустая() Тогда
		АдресКартинки = НавигационнаяСсылкаИзображения(СсылкаНаПрисоединенныйФайл, Форма.УникальныйИдентификатор);
		НовыеДанные.АдресИзображения = АдресКартинки;
	КонецЕсли;
	
	ИндексПозицииВКатегории = ИндексПозицииВКатегории + 1;
	
КонецПроцедуры

Процедура НастроитьПервоначальныйИнтерфейсРежимаКассыСамообслуживания(Форма) Экспорт
	
	ВысотаКоманд = 2;
	
	ЭлементыФормы = Форма.Элементы;
	КомандыФормы = Форма.Команды;
	ЭлементыФормы.РассчитатьСкидки.Видимость = Форма.РаботаВРежимеМедленногоСоединения;
	КомандыФормы.РассчитатьСкидки.Отображение = ОтображениеКнопки.Текст;
	КомандыФормы.РассчитатьСкидки.Картинка = Новый Картинка();
	
	КомандыФормы.ОткрытьПлиточныйИнтерфейсКаталога.Отображение = ОтображениеКнопки.КартинкаИТекст;
	КомандыФормы.ОткрытьПлиточныйИнтерфейсКаталога.Заголовок = НСтр("ru='Каталог'");
	
	КомандыФормы.УдалитьЧек.Заголовок = НСтр("ru='Новая покупка'");
	ЭлементыФормы.УдалитьЧек.ВысотаЗаголовка = 2;
	
	ЭлементыФормы.ОплатаКартойВТихомРежиме.Картинка = БиблиотекаКартинок.РМКПластиковаяКарта;
	ЭлементыФормы.НачатьСканированиеКСО.Видимость = Истина;
	
	ЭлементыФормы.РассчитатьСкидки.Заголовок = НСтр("ru='Рассчитать скидки'");
	ЭлементыФормы.РассчитатьСкидки.Высота = ВысотаКоманд;
	ЭлементыФормы.ГруппаQRCode.Видимость = Ложь;
	ЭлементыФормы.ГруппаНайденнаяКартаПочта.Видимость = Ложь;
	ЭлементыФормы.ГруппаНайденнаяКартаФИО.Видимость = Ложь;
	ЭлементыФормы.ГруппаНайденнаяКартаДатаРождения.Видимость = Ложь;
	ЭлементыФормы.ГруппаИнформацияПокупателяФИО.Видимость = Ложь;
	ЭлементыФормы.ГруппаИнформацияПокупателяТелефон.Видимость = Ложь;
	ЭлементыФормы.ГруппаИнформацияПокупателяДатаРождения.Видимость = Ложь;
	ЭлементыФормы.ГруппаИнформацияПокупателяАдресЭлПочты.Видимость = Ложь;
	ЭлементыФормы.ОтложитьЧекИзОшибки.Видимость = Ложь;
	ЭлементыФормы.ЦифроваяПанельПоиск.ЦветФона = ЦветаСтиля.ЦветАктивности;
	ЭлементыФормы.ГруппаИнфоОшибка.ЦветФона = WebЦвета.Красный;
	ЭлементыФормы.ГруппаЗаменаПрав.ЦветФона = WebЦвета.Красный;
	ЭлементыФормы.ТекстПредупреждениеЗаголовок.ЦветТекста = WebЦвета.Белый;
	ЭлементыФормы.ТекстПредупреждениеОшибка.ЦветТекста = WebЦвета.Белый;
	ЭлементыФормы.ДекорацияЗаголовокЗаменаПрав.ЦветТекста = WebЦвета.Белый;
	ЭлементыФормы.ДекорацияТекстЗаменаПрав.ЦветТекста = WebЦвета.Белый;
	
КонецПроцедуры

Процедура УвеличитьРазмерКоманд(Форма) Экспорт
	Перем ПараметрыРазмеров;
	
	ПараметрыУвеличенногоИнтерфейса = ПараметрыУвеличенногоИнтерфейса(Форма.ВидОтображения);
	Высота = ПараметрыУвеличенногоИнтерфейса.ВысотаКоманды;
	Ширина = ПараметрыУвеличенногоИнтерфейса.ШиринаКоманды;
	Шрифт = ПараметрыУвеличенногоИнтерфейса.Шрифт;
	
	Элементы = Форма.Элементы;
	
	Элементы.ОперацииСтраницаКнопок.Видимость = Истина;
	Элементы.ОперацииСтраницы.ТекущаяСтраница = Элементы.ОперацииСтраницаКнопок;
	
	Если Не Форма.РежимКассыСамообслуживания Тогда
		НастроитьКомандыРежимИЕще(Форма);
	КонецЕсли;
	
	Для Каждого ЭлементФормы Из Элементы Цикл
		Если ИгнорироватьЭлементДляУвеличенияРазмера(Форма.РежимКассыСамообслуживания, Элементы, ЭлементФормы) Тогда
			Продолжить;
		КонецЕсли;
		Если ЭлементФормы.Высота = 0 Или ЭлементФормы.Высота = 1 Тогда
			ЭлементФормы.Высота = Высота;
		КонецЕсли;
		Если ЗначениеЗаполнено(ЭлементФормы.Ширина) И ЭлементФормы.Ширина < 4 Тогда
			ЭлементФормы.Ширина = Ширина;
		КонецЕсли;
	КонецЦикла;
	
	Если Форма.ВертикальнаяОриентация Тогда
		Элементы.ПанельВидовОплат.Ширина = ПараметрыУвеличенногоИнтерфейса.ШиринаПанелиВидовОплат;
		Элементы.ГруппаСлоевЛеваяВерхняяВспомогательнаяПанель.Ширина = 28;
	Иначе
		Элементы.ГруппаСлоевПанелиУправления.Ширина = 26;
	КонецЕсли;
	УвеличитьРазмерПолейОплат(Элементы.ПанельВидовОплат, ПараметрыУвеличенногоИнтерфейса);
	
	Элементы.СкидкаТекущийТоварПроцент.Ширина = Ширина;
	Элементы.СкидкаТекущийТоварСумма.Ширина = Ширина;
	Элементы.УказатьСерии.Ширина = Ширина;
	Элементы.СкидкаНаЧекПроцентом.Ширина = Ширина;
	Элементы.СкидкаНаЧекСуммой.Ширина = Ширина;
	Элементы.ТекущийТоварЦенаИзКарточки.Ширина = ПараметрыУвеличенногоИнтерфейса.ШиринаПоля;
	
	Если Форма.РежимКассыСамообслуживания Тогда
		ПараметрыРазмеров = ИнтерфейсРМКСлужебныйКлиентСервер.ПараметрыРазмеровКомандУправленияЧекомДляКСО();
	Иначе
		ПараметрыРазмеров = ПараметрыРазмеровКомандУправленияЧекомДляОбычногоРежима(ПараметрыУвеличенногоИнтерфейса);
	КонецЕсли;
	ПараметрыИнтерфейсаПлитки = ИнтерфейсРМКСлужебныйКлиентСервер.ПараметрыПлиточногоИнтерфейса();
	ПараметрыРазмеров.Вставить("ШиринаКомандыСНадписью", ПараметрыИнтерфейсаПлитки.ШиринаКомандыСНадписью);
	ИнтерфейсРМКСлужебныйКлиентСервер.НастроитьРазмерКомандУправленияСоставомЧека(Форма, ПараметрыРазмеров, Истина);
	УстановитьУвеличенныйШрифтПолей(Элементы, ПараметрыУвеличенногоИнтерфейса);
	
	ОбщегоНазначенияРМКПереопределяемый.УвеличитьРазмерКоманд(Форма, ПараметрыУвеличенногоИнтерфейса);
	
КонецПроцедуры

Процедура НастроитьЭлементыПоМасштабу(Форма) Экспорт
	
	Элементы = Форма.Элементы;
	Если Форма.ВидОтображения = Перечисления.ВидыОтображения.Уменьшенный Тогда
		Элементы.Предупреждение.Шрифт = ШрифтыСтиля.ШрифтОбычный32РМК;
	КонецЕсли;
	
КонецПроцедуры

// Устанавливает условное оформление формы
//
// Параметры:
//  Форма - ФормаКлиентскогоПриложения.
//
Процедура УстановитьУсловноеОформление(Форма) Экспорт

	Если Форма.ИмяФормы = "Обработка.РабочееМестоКассира.Форма.ФормаРМК" Тогда
		УстановитьУсловноеОформлениеФормыРМК(Форма);
	КонецЕсли;
	
КонецПроцедуры

// Подготавливает панель наличных купюр формы РМК
//
// Параметры:
//  Форма - форма клиентского приложения ФормаРМК
//  ИспользоватьПанельВводаНаличныхКупюр - Булево
//  ВертикальнаяОриентация - Булево. Признак настройки использования экрана в вертикальной ориентации.
//
Процедура ПодготовитьПанельВводаНаличныхКупюр(Форма, ИспользоватьПанельВводаНаличныхКупюр,
		ВертикальнаяОриентация = Ложь) Экспорт
	Перем ГруппаРядКупюр;
	
	КоличествоКупюрВРяде = 4;
	ОчиститьПанельКупюр(Форма);
	Если ИспользоватьПанельВводаНаличныхКупюр Тогда
	
		ШаблонИмениКартинкиКупюры = НСтр("ru='РМККупюраНоминалВеличина_ru'");
		КоличествоКупюрРяда1 = 0;
		МассивДанныхКупюр = Новый Массив;
		Элементы = Форма.Элементы;
		
		ЗапросНоминалов = Новый Запрос;
		ЗапросНоминалов.Текст =
		"ВЫБРАТЬ
		|	СправочникНастройкиРМК.ВводНаличныхАкселераторAlt КАК Alt,
		|	СправочникНастройкиРМК.ВводНаличныхАкселераторCtrl КАК Ctrl,
		|	СправочникНастройкиРМК.ВводНаличныхАкселераторShift КАК Shift
		|ИЗ
		|	Справочник.НастройкиРабочегоМестаКассира КАК СправочникНастройкиРМК
		|ГДЕ
		|	СправочникНастройкиРМК.Ссылка = &НастройкаСсылка
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	НастройкиРабочегоМестаКассираВводНаличных.Номинал КАК Номинал,
		|	НастройкиРабочегоМестаКассираВводНаличных.Клавиша КАК Клавиша
		|ИЗ
		|	Справочник.НастройкиРабочегоМестаКассира.ВводНаличных КАК НастройкиРабочегоМестаКассираВводНаличных
		|ГДЕ
		|	НастройкиРабочегоМестаКассираВводНаличных.Ссылка = &НастройкаСсылка
		|	И НастройкиРабочегоМестаКассираВводНаличных.Использование";
		ЗапросНоминалов.УстановитьПараметр("НастройкаСсылка", Форма.ТекущаяНастройкаРМК);
		РезультатыЗапросов = ЗапросНоминалов.ВыполнитьПакет();
		ВыборкаАкселераторов = РезультатыЗапросов[0].Выбрать();
		АкселераторыКупюр = Новый Структура("Alt,Ctrl,Shift", Ложь, Ложь, Ложь);
		Если ВыборкаАкселераторов.Следующий() Тогда
			ЗаполнитьЗначенияСвойств(АкселераторыКупюр, ВыборкаАкселераторов);
		КонецЕсли;
		ВыборкаНоминалов = РезультатыЗапросов[1].Выбрать();
		Пока ВыборкаНоминалов.Следующий() Цикл
			
			ИмяКартинки = СтрЗаменить(ШаблонИмениКартинкиКупюры, "Величина", ВыборкаНоминалов.Номинал);
			ОбъектКартинки = Метаданные.ОбщиеКартинки.Найти(ИмяКартинки);
			Если Не ОбъектКартинки = Неопределено Тогда
				КартинкаКупюры = БиблиотекаКартинок[ИмяКартинки];
				СочетаниеКлавишКупюры = ПодготовитьСочетаниеГорячейКлавиши(АкселераторыКупюр, ВыборкаНоминалов.Клавиша);
				ДанныеКупюры = Новый Структура("НоминалКупюры,КартинкаКупюры,ГорячаяКлавиша",
					ВыборкаНоминалов.Номинал, КартинкаКупюры, СочетаниеКлавишКупюры);
				МассивДанныхКупюр.Добавить(ДанныеКупюры);
			КонецЕсли;
			
		КонецЦикла;
		КоличествоКупюр = МассивДанныхКупюр.Количество();
		Если КоличествоКупюр > 0 Тогда
			Форма.ИспользоватьПанельВводаНаличных = Истина;
			Если ВертикальнаяОриентация Тогда
				КоличествоКупюрРяда1 = ?(КоличествоКупюр > КоличествоКупюрВРяде, Окр(КоличествоКупюр / 2, 0, 1), КоличествоКупюр);
			КонецЕсли;
			ИндексКупюры = 0;
			Пока ИндексКупюры < КоличествоКупюр Цикл
				ДанныеКупюры = МассивДанныхКупюр.Получить(ИндексКупюры);
				Если ВертикальнаяОриентация Тогда
					ГруппаРядКупюр = ?(ИндексКупюры < КоличествоКупюрРяда1, Элементы.ГруппаКупюрРяд1, Элементы.ГруппаКупюрРяд2);
				Иначе
					ГруппаРядКупюр = Элементы.ГруппаКупюр;
				КонецЕсли;
				ДобавитьКупюруНаПанельВводаНаличных(Элементы, Форма.Команды, ГруппаРядКупюр, ДанныеКупюры);
				ИндексКупюры = ИндексКупюры + 1;
			КонецЦикла;
		КонецЕсли;
		
	КонецЕсли;
	
КонецПроцедуры

// Подготавливает панель управления чеком формы РМК
//
// Параметры:
//  Форма - форма клиентского приложения ФормаРМК
//  ВертикальнаяОриентация - Булево. Признак настройки использования экрана в вертикальной ориентации.
//
Процедура НастроитьПанельУправленияЧеком(Форма, ВертикальнаяОриентация) Экспорт
	
	ПараметрыЭлементовПанели = ПолучитьПараметрыЭлементовПанелиУправленияЧеком(Форма);
	
	Для Каждого ДанныеЭлемента Из ПараметрыЭлементовПанели Цикл
		МодифицироватьЭлементФормы(Форма.Элементы, ДанныеЭлемента, ВертикальнаяОриентация);
	КонецЦикла;
	
	Форма.Элементы.ВернутьсяВРежимПодбораТовара.Видимость = (Не ВертикальнаяОриентация);
	Форма.Элементы.ГруппаВозвратВПодборИзУправления.Видимость = Ложь;
	Форма.Элементы.ГруппаВозвратВПодборИзСертификатов.Видимость = ВертикальнаяОриентация;
	Форма.Элементы.ГруппаВозвратВПодборИзПанелиНаличных.Видимость = ВертикальнаяОриентация;
	
	Форма.Элементы.ГруппаУправленияЧекомВер.Видимость = ВертикальнаяОриентация;
	Форма.Элементы.ГруппаУправленияЧекомГор.Видимость = (Не ВертикальнаяОриентация);

КонецПроцедуры

// Добавляет элемент отбора на равенство в отбор компоновки данных
//
// Параметры:
//  ЭлементВладелецОтбора - родительский элемент (отбор, группа отбора), которому добавляется элемент отбора.
//  ПутьКДаннымЭлемента - Строка - путь к элементу данных, значение которого сравнивается.
//  ЗначениеСравнения - любое значение, с которым сравнивается значение элемента.
//
Процедура ДобавитьЭлементОтбораКомпоновкиДанныхРавенство(ЭлементВладелецОтбора, ПутьКДаннымЭлемента, ЗначениеСравнения) Экспорт
	
	ЭлементОтбора = ЭлементВладелецОтбора.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));
	ЭлементОтбора.ЛевоеЗначение = Новый ПолеКомпоновкиДанных(ПутьКДаннымЭлемента);
	ЭлементОтбора.ВидСравнения = ВидСравненияКомпоновкиДанных.Равно;
	ЭлементОтбора.ПравоеЗначение = ЗначениеСравнения;
	
КонецПроцедуры

Функция ПараметрыУвеличенногоИнтерфейса(ВидОтображения) Экспорт
	
	Параметры = Новый Структура;
	Параметры.Вставить("ВысотаКоманды", 2);
	Параметры.Вставить("ШиринаКоманды", 4);
	Параметры.Вставить("ШиринаПоля", 10);
	Параметры.Вставить("ШиринаПанелиВидовОплат", 30);
	
	ШрифтПоляВвода = Неопределено;
	Если ВидОтображения = Перечисления.ВидыОтображения.Уменьшенный Тогда
		ШрифтПоляВвода = ШрифтыСтиля.ШрифтПоляВводаРМК18;
	ИначеЕсли ВидОтображения = Перечисления.ВидыОтображения.Стандартный Тогда
		ШрифтПоляВвода = ШрифтыСтиля.ШрифтПоляВводаРМК17;
	Иначе
		ШрифтПоляВвода = ШрифтыСтиля.ШрифтПоляВводаРМК;
	КонецЕсли;
	Параметры.Вставить("Шрифт", ШрифтПоляВвода);
	Параметры.Вставить("ШрифтКнопкиВидаОплаты", ШрифтыСтиля.ШрифтОбычныйПолужирныйРМК);
	Параметры.Вставить("ШрифтСуммОплат", ШрифтыСтиля.ШрифтОбычныйПолужирный16РМК);
	
	Возврат Параметры;
	
КонецФункции

Процедура ЗаполнитьИсходныеДанныеИзбранныхПозиций(ЗначениеНастройкиРМК, Форма) Экспорт
	
	Если ЗначениеЗаполнено(Форма.ТекущаяНастройкаРМК) Тогда
		
		ИзбранныеПозиции = Форма.ИзбранныеПозиции;
		ИзбранныеПозиции.Очистить();
		МаксимальныйИндекс = 0;
		
		УстановитьПривилегированныйРежим(Истина);
		Запрос = Новый Запрос;
		ОбщегоНазначенияРМКПереопределяемый.СформироватьЗапросДанныеИзбранныхТоваров(Запрос, Форма);
		
		Если ЗначениеЗаполнено(Запрос.Текст) Тогда
			РезультатЗапроса = Запрос.Выполнить();
			Если Не РезультатЗапроса.Пустой() Тогда
				
				ДанныеДляЗаполнения = РезультатЗапроса.Выгрузить();
				
				НомерСтроки = 1;
				
				Для Каждого СтрокаЗаполнения Из ДанныеДляЗаполнения Цикл
					
					СтрокаЗаполнения.НомерСтроки = НомерСтроки;
					СтруктураОтбора = Новый Структура("НомерКатегорииРазмещения", СтрокаЗаполнения.НомерКатегории);
					СтрокиКатегорииРазмещения = ДанныеДляЗаполнения.НайтиСтроки(СтруктураОтбора);
					Если СтрокиКатегорииРазмещения.Количество() И СтрокаЗаполнения.ИмеетсяВложенность Тогда
						ИндексПозиции = 1;
						Для Каждого СтрокаКатегорииРазмещения ИЗ СтрокиКатегорииРазмещения Цикл
							СтрокаКатегорииРазмещения.ИндексПозиции = ИндексПозиции;
							
							ИндексПозиции = ИндексПозиции + 1;
						КонецЦикла;
					КонецЕсли;
					
					НомерСтроки = НомерСтроки + 1;
					
				КонецЦикла;
				
				Для Каждого СтрокаЗаполнения Из ДанныеДляЗаполнения Цикл
					
					СтрокаИзбранных = ИзбранныеПозиции.Добавить();
					ЗаполнитьЗначенияСвойств(СтрокаИзбранных, СтрокаЗаполнения);
					
					Если ЗначениеЗаполнено(СтрокаИзбранных.ИзображениеЭлемента) Тогда
						СтрокаИзбранных.АдресИзображения = РаботаСФайлами.ДанныеФайла(
							СтрокаИзбранных.ИзображениеЭлемента, Форма.УникальныйИдентификатор).СсылкаНаДвоичныеДанныеФайла;
					КонецЕсли;
					
					СтрокаИзбранных.ЦветШрифта = ОбщегоНазначения.ЗначениеИзСтрокиXML(СтрокаЗаполнения.ЦветШрифта);
					СтрокаИзбранных.ЦветФона = ОбщегоНазначения.ЗначениеИзСтрокиXML(СтрокаЗаполнения.ЦветФона);
					
					МаксимальныйИндекс = Макс(МаксимальныйИндекс,
						(СтрокаИзбранных.ИндексПозиции + ?(СтрокаИзбранных.НомерКатегорииРазмещения > 0, 1, 0)));
					
				КонецЦикла;
				
			КонецЕсли;
		КонецЕсли;
		
		Форма.МаксимальноеКоличествоИзбранныхНаСтранице = МаксимальныйИндекс;
		
	КонецЕсли;
	
КонецПроцедуры

Процедура СформироватьЭлементыПанелиИзбранныхПозиций(Форма, ГорячиеКлавиши) Экспорт
	
	Элементы = Форма.Элементы;
	
	ДанныеКнопок = Форма.ДанныеКнопок;
	ОсновнаяГруппаЭлементов = Элементы.ГруппаРядовКнопокБыстрыхТоваров;
	
	Для ПорядковыйНомер = 1 По 12 Цикл
		СтрокаКнопка = ДанныеКнопок.Добавить();
	КонецЦикла;
	
	ИндексКнопки = 0;
	ИндексРяда = 1;
	
	КоличествоКнопокВРяду = 4;
	КоличествоРядов = 3;
	
	Для ИндексРяда = 1 По КоличествоРядов Цикл
		
		РядКнопок = ДобавитьРядКнопок(ОсновнаяГруппаЭлементов, ИндексРяда, Элементы);
		
		Для СчетчикКнопок = 1 По КоличествоКнопокВРяду Цикл
			ДобавитьКнопкуВРяд(РядКнопок, ИндексКнопки, ГорячиеКлавиши, Форма);
			ИндексКнопки = ИндексКнопки + 1;
		КонецЦикла;
		
	КонецЦикла;
	
КонецПроцедуры

Процедура УстановитьУсловноеОформлениеИерархииБыстрыхТоваров(Форма) Экспорт
	
	УсловноеОформление = Форма.УсловноеОформление;
	Элементы = Форма.Элементы;
	
	// Только просмотр для корня
	Элемент = УсловноеОформление.Элементы.Добавить();
	
	ПолеДереваТоваров = Элемент.Поля.Элементы.Добавить();
	ПолеДереваТоваров.Поле = Новый ПолеКомпоновкиДанных(Элементы.ИерархияТоваров.Имя);
	
	ОтборЭлемента = Элемент.Отбор.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));
	ОтборЭлемента.ЛевоеЗначение =
		Новый ПолеКомпоновкиДанных(Элементы.ИерархияТоваровНомерИзображения.ПутьКДанным);
	ОтборЭлемента.ВидСравнения = ВидСравненияКомпоновкиДанных.Равно;
	ОтборЭлемента.ПравоеЗначение = 0;
	
	Элемент.Оформление.УстановитьЗначениеПараметра("ТолькоПросмотр", Истина);
	
	// Не отображать шрифт, цвет шрифта и цвет фона для корня
	Элемент = УсловноеОформление.Элементы.Добавить();
	
	ПолеШрифт = Элемент.Поля.Элементы.Добавить();
	ПолеШрифт.Поле = Новый ПолеКомпоновкиДанных(Элементы.ИерархияТоваровШрифт.Имя);
	
	ПолеЦвет = Элемент.Поля.Элементы.Добавить();
	ПолеЦвет.Поле = Новый ПолеКомпоновкиДанных(Элементы.ИерархияТоваровЦветШрифта.Имя);
	
	ПолеФон = Элемент.Поля.Элементы.Добавить();
	ПолеФон.Поле = Новый ПолеКомпоновкиДанных(Элементы.ИерархияТоваровЦветФона.Имя);
	
	ОтборЭлемента = Элемент.Отбор.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));
	ОтборЭлемента.ЛевоеЗначение =
		Новый ПолеКомпоновкиДанных(Элементы.ИерархияТоваровНомерИзображения.ПутьКДанным);
	ОтборЭлемента.ВидСравнения = ВидСравненияКомпоновкиДанных.Равно;
	ОтборЭлемента.ПравоеЗначение = 0;
	
	Элемент.Оформление.УстановитьЗначениеПараметра("Отображать", Ложь);
	
	// Только просмотр для категорий
	Элемент = УсловноеОформление.Элементы.Добавить();
	
	ПолеНоменклатуры = Элемент.Поля.Элементы.Добавить();
	ПолеНоменклатуры.Поле = Новый ПолеКомпоновкиДанных(Элементы.ИерархияТоваровНоменклатура.Имя);
	
	ПолеХарактеристики = Элемент.Поля.Элементы.Добавить();
	ПолеХарактеристики.Поле = Новый ПолеКомпоновкиДанных(Элементы.ИерархияТоваровХарактеристика.Имя);
	
	ОтборЭлемента = Элемент.Отбор.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));
	ОтборЭлемента.ЛевоеЗначение = Новый ПолеКомпоновкиДанных(Элементы.ИерархияТоваровЭтоКатегория.ПутьКДанным);
	ОтборЭлемента.ВидСравнения = ВидСравненияКомпоновкиДанных.Равно;
	ОтборЭлемента.ПравоеЗначение = Истина;
	
	Элемент.Оформление.УстановитьЗначениеПараметра("ТолькоПросмотр", Истина);
	
	// Контроль заполнения характеристик
	Элемент = УсловноеОформление.Элементы.Добавить();
	
	ПолеЭлемента = Элемент.Поля.Элементы.Добавить();
	ПолеЭлемента.Поле = Новый ПолеКомпоновкиДанных(Элементы.ИерархияТоваровХарактеристика.Имя);
	
	ОтборПоИспользованиюХарактеристик = Элемент.Отбор.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));
	ОтборПоИспользованиюХарактеристик.ЛевоеЗначение = Новый ПолеКомпоновкиДанных(
		Элементы.ИерархияТоваровХарактеристикиИспользуются.ПутьКДанным);
	ОтборПоИспользованиюХарактеристик.ВидСравнения = ВидСравненияКомпоновкиДанных.Равно;
	ОтборПоИспользованиюХарактеристик.ПравоеЗначение = Ложь;
	
	ОтборПоПринадлежностиКатегории = Элемент.Отбор.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));
	ОтборПоПринадлежностиКатегории.ЛевоеЗначение = Новый ПолеКомпоновкиДанных(
		Элементы.ИерархияТоваровЭтоКатегория.ПутьКДанным);
	ОтборПоПринадлежностиКатегории.ВидСравнения = ВидСравненияКомпоновкиДанных.Равно;
	ОтборПоПринадлежностиКатегории.ПравоеЗначение = Ложь;
	
	Элемент.Оформление.УстановитьЗначениеПараметра("ОтметкаНезаполненного", Ложь);
	Элемент.Оформление.УстановитьЗначениеПараметра("Текст", НСтр("ru = '<характеристики не используются>'"));
	Элемент.Оформление.УстановитьЗначениеПараметра("ТолькоПросмотр", Истина);
	Элемент.Оформление.УстановитьЗначениеПараметра("ЦветТекста", ЦветаСтиля.ПоясняющийТекст);
	
	// Незаполненное изображение
	Элемент = УсловноеОформление.Элементы.Добавить();
	
	ПолеЭлемента = Элемент.Поля.Элементы.Добавить();
	ПолеЭлемента.Поле = Новый ПолеКомпоновкиДанных(Элементы.ИерархияТоваровИзображениеЭлемента.Имя);
	
	ОтборПоПустомуФайлуИзображения = Элемент.Отбор.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));
	ОтборПоПустомуФайлуИзображения.ЛевоеЗначение = Новый ПолеКомпоновкиДанных(
		Элементы.ИерархияТоваровИзображениеЭлемента.ПутьКДанным);
	ОтборПоПустомуФайлуИзображения.ВидСравнения = ВидСравненияКомпоновкиДанных.Равно;
	ЗначениеСтрокой = "Справочник.ПалитраТоваровРМКПрисоединенныеФайлы.ПустаяСсылка";
	ОтборПоПустомуФайлуИзображения.ПравоеЗначение = ОбщегоНазначения.ПредопределенныйЭлемент(ЗначениеСтрокой);
	
	ОтборПоПринадлежностиКатегории = Элемент.Отбор.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));
	ОтборПоПринадлежностиКатегории.ЛевоеЗначение = Новый ПолеКомпоновкиДанных(
		Элементы.ИерархияТоваровНомерИзображения.ПутьКДанным);
	ОтборПоПринадлежностиКатегории.ВидСравнения = ВидСравненияКомпоновкиДанных.НеРавно;
	ОтборПоПринадлежностиКатегории.ПравоеЗначение = 0;
	
	Элемент.Оформление.УстановитьЗначениеПараметра("Текст", НСтр("ru = '<Добавить изображение>'"));
	Элемент.Оформление.УстановитьЗначениеПараметра("ЦветТекста", ЦветаСтиля.ПоясняющийТекст);
	
КонецПроцедуры

Процедура ОбновитьСписокТоваров(Форма) Экспорт
	
	СтандартнаяОбработка = Истина;
	ОбщегоНазначенияРМКПереопределяемый.ОбновитьДинамическийСписокТоваров(Форма, СтандартнаяОбработка);
	Если СтандартнаяОбработка Тогда
		
		ПараметрыСписка = Форма.СписокТоваров.Параметры;
		Если Не ПараметрыСписка.Элементы.Найти("Дата") = Неопределено Тогда
			ПараметрыСписка.УстановитьЗначениеПараметра("Дата", ТекущаяДатаСеанса());
		КонецЕсли;
		
	КонецЕсли;
	Форма.Элементы.СписокТоваров.Обновить();
	Форма.Элементы.ДополнительныйСписокТоваров.Обновить();
	
КонецПроцедуры

Процедура СформироватьЭлементыПлиток(Форма) Экспорт
	
	Элементы = Форма.Элементы;
	ДанныеКнопокПлиток = Форма.ДанныеКнопокПлиток;
	ОсновнаяГруппаЭлементов = Элементы.ПлиточныйИнтерфейс;
	КоличествоКнопокВРяду = Форма.КоличествоЭлементовВРяду;
	КоличествоРядов = Форма.КоличествоРядовНаСтранице;
	
	ИндексКнопки = 0;
	Для ИндексРяда = 1 По КоличествоРядов Цикл
		
		РядКнопок = ДобавитьРядКнопокПлиток(ОсновнаяГруппаЭлементов, ИндексРяда, Элементы);
		
		Для СчетчикКнопок = 1 По КоличествоКнопокВРяду Цикл
			ДобавитьКнопкуВРядПлиток(РядКнопок, ИндексКнопки, Форма);
			СтрокаКнопка = ДанныеКнопокПлиток.Добавить();
			ИндексКнопки = ИндексКнопки + 1;
		КонецЦикла;
		
	КонецЦикла;
	
КонецПроцедуры

Функция ЗаполнитьПараметрыКартыЛояльности(ОписаниеКарты) Экспорт
	
	ПараметрыКарты = ИнтерфейсРМКСлужебныйКлиентСервер.ПараметрыКартыЛояльности();
	НомерКарты = ?(ЗначениеЗаполнено(ОписаниеКарты.Barcode), ОписаниеКарты.Barcode, ОписаниеКарты.MagneticCode);
	
	ПараметрыКарты.ИдентификаторКарты = ОписаниеКарты.CardGUID;
	ПараметрыКарты.КодКарты = НомерКарты;
	ПараметрыКарты.ФИО = ОписаниеКарты.ClientName;
	ПараметрыКарты.НомерТелефонаВладельцаКарты = ОписаниеКарты.Phone;
	ПараметрыКарты.АдресЭПВладельцаКарты = ОписаниеКарты.Email;
	ПараметрыКарты.ДатаРождения = XMLЗначение(Тип("Дата"), ОписаниеКарты.DateOfBirth);
	ПараметрыКарты.ЭтоКомпания = Не ОписаниеКарты.IsPerson;
	
	Если ОписаниеКарты.Свойство("SellCount") Тогда
		ПараметрыКарты.СуммаПродаж = Формат(ОписаниеКарты.SellCount,"ЧДЦ=2");
	КонецЕсли;
	
	Возврат ПараметрыКарты;
	
КонецФункции

// Включает или выключает отображение кнопки выбора у полей ввода, в зависимости от значения переменной
// Форма.СенсорныйЭкран на форме РМК
//
// Параметры:
//  Форма - ФормаКлиентскогоПриложения - форма РМК
//
Процедура НастроитьИспользованиеКнопокВыбораПолей(Форма) Экспорт
	
	Элементы = Форма.Элементы;
	УвеличитьШирину = Ложь;
	ПредыдущееЗначение = Элементы.ТекущийТоварКоличество.КнопкаВыбора;
	ПоказатьКнопкуВыбора = (Не Форма.СенсорныйЭкран);
	Если ПредыдущееЗначение И Не ПоказатьКнопкуВыбора Тогда
		УвеличитьШирину = Истина;
	КонецЕсли;
	
	НастроитьИспользованиеКнопкиВыбораПоля(Элементы, "ТекущийТоварЦенаИзКарточки", ПоказатьКнопкуВыбора, УвеличитьШирину);
	НастроитьИспользованиеКнопкиВыбораПоля(Элементы, "ТекущийТоварКоличество", ПоказатьКнопкуВыбора, УвеличитьШирину);
	НастроитьИспользованиеКнопкиВыбораПоля(Элементы, "СуммаОплаченоНал", ПоказатьКнопкуВыбора, УвеличитьШирину);
	НастроитьИспользованиеКнопкиВыбораПоля(Элементы, "СуммаОплаченоБН", ПоказатьКнопкуВыбора, УвеличитьШирину);
	НастроитьИспользованиеКнопкиВыбораПоля(Элементы, "СуммаОплаченоБонусами", ПоказатьКнопкуВыбора, УвеличитьШирину);
	НастроитьИспользованиеКнопкиВыбораПоля(Элементы, "РучнойШтрихкодДляПоиска", ПоказатьКнопкуВыбора, УвеличитьШирину);
	
КонецПроцедуры

Процедура СжатьПанельИтоговПоЧекам(Форма, ТребуетсяГоризонтальноеСжатиеВсегда) Экспорт
	Элементы = Форма.Элементы;
	Если НеобходимоСжиматьПанельИтогов(Форма, ТребуетсяГоризонтальноеСжатиеВсегда) Тогда
		Элементы.ПанельИтоговПоЧекам.Видимость = Ложь;
		Элементы.Переместить(Элементы.ГруппаСуммаИтогоПоЧеку, Элементы.СжатаяПанельИтогов);
		Если Форма.ВертикальнаяОриентация Тогда
			Элементы.Переместить(Элементы.ГруппаСдача, Элементы.ОтображениеСдачи);
			Элементы.СжатаяПанельСдача.ТекущаяСтраница = Элементы.ОтображениеСдачи;
		Иначе
			Элементы.Переместить(Элементы.ГруппаСдача, Элементы.СжатаяПанельИтогов);
		КонецЕсли;
		Элементы.СжатаяПанельИтогов.Видимость = Истина;
	КонецЕсли;
КонецПроцедуры

Процедура ВосстановитьПанельИтоговПоЧекам(Форма) Экспорт
	Элементы = Форма.Элементы;
	Если Не Элементы.ПанельИтоговПоЧекам.Видимость Тогда
		Элементы.Переместить(Элементы.ГруппаСуммаИтогоПоЧеку, Элементы.ГруппаСводныеДанныеЧека);
		Элементы.Переместить(Элементы.ГруппаСдача, Элементы.ГруппаСводныеДанныеЧека);
		Элементы.СжатаяПанельИтогов.Видимость = Ложь;
		Элементы.ПанельИтоговПоЧекам.Видимость = Истина;
	КонецЕсли;
КонецПроцедуры

Процедура НастроитьЭлементыФормыПриСозданииНаСервере(Форма) Экспорт
	
	Элементы = Форма.Элементы;
	МаскаПоляВводаТелефона = ИнтерфейсРМКСлужебныйКлиентСервер.МаскаВводаТелефона();
	Элементы.НоваяКартаТелефон.Маска = МаскаПоляВводаТелефона;
	Элементы.ОтправкаЧекаТелефон.Маска = МаскаПоляВводаТелефона;
	
	Если Форма.РежимКассыСамообслуживания Тогда
		ТекстВводаНомера = НСтр("ru = 'Введите номер'");
		ПодсказкаВвода = НСтр("ru = 'Телефон или карта'");
	Иначе
		ТекстВводаНомера = НСтр("ru = 'Введите'");
		ПодсказкаВвода = НСтр("ru = 'Тел., почта или карта'");
	КонецЕсли;
	Элементы.ДекорацияПоискКартыЗаголовок.Заголовок = ТекстВводаНомера;
	Элементы.СтрокаПоискаКарты.ПодсказкаВвода = ПодсказкаВвода;
	Элементы.СтрокаПовторныйПоискКарты.ПодсказкаВвода = ПодсказкаВвода;
	
	Элементы.ДекорацияВведитеДанныеОтправкаЧека.Видимость = Форма.РежимКассыСамообслуживания;
	Элементы.ГруппаОтправкаЧекаПочта.Видимость = Не Форма.РежимКассыСамообслуживания;
	Элементы.Декорация8.Видимость = Форма.ВертикальнаяОриентация И Не Форма.РежимКассыСамообслуживания;
	
КонецПроцедуры

Процедура УстановитьУсловноеОформлениеГорячихКлавиш(Форма) Экспорт
	
	УсловноеОформление = Форма.УсловноеОформление;
	Элементы = Форма.Элементы;
	
	// Шрифт раздела горячих клавиш
	Элемент = УсловноеОформление.Элементы.Добавить();
	ПолеДереваГорячихКлавиш = Элемент.Поля.Элементы.Добавить();
	ПолеДереваГорячихКлавиш.Поле = Новый ПолеКомпоновкиДанных(Элементы.ДеревоГорячиеКлавишиДействие.Имя);
	
	ДобавитьОтборРазделаГорячихКлавиш(Элементы, Элемент);
	Элемент.Оформление.УстановитьЗначениеПараметра("Шрифт", ШрифтыСтиля.ШрифтОбычныйПолужирный12РМК);
	
	// Только просмотр колонок сочетания клавиш
	Элемент = УсловноеОформление.Элементы.Добавить();
	ПолеДереваГорячихКлавиш = Элемент.Поля.Элементы.Добавить();
	ПолеДереваГорячихКлавиш.Поле = Новый ПолеКомпоновкиДанных(Элементы.ДеревоГорячиеКлавишиКлавиша.Имя);
	ПолеДереваГорячихКлавиш = Элемент.Поля.Элементы.Добавить();
	ПолеДереваГорячихКлавиш.Поле = Новый ПолеКомпоновкиДанных(Элементы.ДеревоГорячиеКлавишиАкселераторAlt.Имя);
	ПолеДереваГорячихКлавиш = Элемент.Поля.Элементы.Добавить();
	ПолеДереваГорячихКлавиш.Поле = Новый ПолеКомпоновкиДанных(Элементы.ДеревоГорячиеКлавишиАкселераторCtrl.Имя);
	ПолеДереваГорячихКлавиш = Элемент.Поля.Элементы.Добавить();
	ПолеДереваГорячихКлавиш.Поле = Новый ПолеКомпоновкиДанных(Элементы.ДеревоГорячиеКлавишиАкселераторShift.Имя);
	
	ДобавитьОтборРазделаГорячихКлавиш(Элементы, Элемент);
	Элемент.Оформление.УстановитьЗначениеПараметра("ТолькоПросмотр", Истина);
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

Процедура УстановитьУвеличенныйШрифтПолей(Элементы, ПараметрыУвеличенногоИнтерфейса)
	
	Шрифт = ПараметрыУвеличенногоИнтерфейса.Шрифт;
	
	Элементы.ДобавитьСертификат.Шрифт = ПараметрыУвеличенногоИнтерфейса.ШрифтСуммОплат;
	Элементы.УдалитьВсеСертификаты.Шрифт = ПараметрыУвеличенногоИнтерфейса.ШрифтСуммОплат;
	
	Элементы.ВводТовараПоСтроке.Шрифт = Шрифт;
	Элементы.ЗначениеСкидкиНаЧек.Шрифт = Шрифт;
	Элементы.ТекущийТоварЦенаИзКарточки.Шрифт = Шрифт;
	Элементы.ТекущийТоварКоличество.Шрифт = Шрифт;
	Элементы.ТекущийТоварСкидка.Шрифт = Шрифт;
	Элементы.ОплатаСертификатомНСПК.Шрифт = ПараметрыУвеличенногоИнтерфейса.ШрифтКнопкиВидаОплаты;
	Элементы.ДополнениеСтрокаПоиска.Шрифт = Шрифт;
	Элементы.ДополнениеДополнительнаяСтрокаПоиска.Шрифт = Шрифт;
	
	Элементы.КодДляЗаменыПрав.Шрифт = Шрифт;
	Элементы.ВыборСерии.Шрифт = Шрифт;
	Элементы.РучнойШтрихкодДляПоиска.Шрифт = Шрифт;
	Элементы.ВыборПартии.Шрифт = Шрифт;
	Элементы.СтрокаПоискаКарты.Шрифт = Шрифт;
	Элементы.СтрокаПовторныйПоискКарты.Шрифт = Шрифт;
	Элементы.ОтправкаЧекаПочта.Шрифт = Шрифт;
	Элементы.ОтправкаЧекаТелефон.Шрифт = Шрифт;
	
КонецПроцедуры

Процедура ЗаполнитьПараметрыГруппВерхнегоУровня(Элементы, ПараметрыЭлементов)
	
	ГоризонтальнаяГруппировка = ГруппировкаПодчиненныхЭлементовФормы.ГоризонтальнаяВсегда;
	ВертикальнаяГруппировка = ГруппировкаПодчиненныхЭлементовФормы.Вертикальная;

	ОписаниеРасположения = ОписаниеРасположенияЭлемента(Элементы.ГруппаУправленияЧекомГор, Неопределено,
		Элементы.ГруппаУправленияЧекомВер, Неопределено);
	ДанныеЭлемента = ДобавитьЭлементФормыВМассивИзменяемыхПараметров(ПараметрыЭлементов,
		Элементы.ГруппаСлоевПанелиУправления, ОписаниеРасположения);
	ДобавитьИзменяемыеПараметрыЭлементаФормы(ДанныеЭлемента, "Группировка",
		ВертикальнаяГруппировка, ГоризонтальнаяГруппировка);
	ДобавитьИзменяемыеПараметрыЭлементаФормы(ДанныеЭлемента, "РастягиватьПоГоризонтали", Ложь, Неопределено);
	
	ДанныеЭлемента = ДобавитьЭлементФормыВМассивИзменяемыхПараметров(ПараметрыЭлементов, Элементы.ПанельУправленияЧеком);
	ДобавитьИзменяемыеПараметрыЭлементаФормы(ДанныеЭлемента, "Группировка",
		ВертикальнаяГруппировка, ГоризонтальнаяГруппировка);
	ДобавитьИзменяемыеПараметрыЭлементаФормы(ДанныеЭлемента, "РастягиватьПоГоризонтали", Неопределено, Истина);
	ДобавитьИзменяемыеПараметрыЭлементаФормы(ДанныеЭлемента, "РастягиватьПоВертикали", Истина, Неопределено);
	ДобавитьИзменяемыеПараметрыЭлементаФормы(ДанныеЭлемента, "Высота", 0, 23);
	
	ДанныеЭлемента = ДобавитьЭлементФормыВМассивИзменяемыхПараметров(ПараметрыЭлементов, Элементы.ГруппаВыемка);
	ДобавитьИзменяемыеПараметрыЭлементаФормы(ДанныеЭлемента, "РастягиватьПоГоризонтали", Неопределено, Истина);
	ДобавитьИзменяемыеПараметрыЭлементаФормы(ДанныеЭлемента, "РастягиватьПоВертикали", Неопределено, Ложь);
	
	ДанныеЭлемента = ДобавитьЭлементФормыВМассивИзменяемыхПараметров(ПараметрыЭлементов, Элементы.ГруппаВнесение);
	ДобавитьИзменяемыеПараметрыЭлементаФормы(ДанныеЭлемента, "РастягиватьПоГоризонтали", Неопределено, Истина);
	ДобавитьИзменяемыеПараметрыЭлементаФормы(ДанныеЭлемента, "РастягиватьПоВертикали", Неопределено, Ложь);
	
КонецПроцедуры

Процедура ЗаполнитьПараметрыГруппСлоев(Элементы, ПараметрыЭлементов)

	ОписаниеРасположения = ОписаниеРасположенияЭлемента(Элементы.ПанельУправленияЧеком,
		Неопределено, Элементы.ПраваяКолонкаУправленияЧеком, Неопределено);
	ДанныеЭлемента = ДобавитьЭлементФормыВМассивИзменяемыхПараметров(ПараметрыЭлементов,
		Элементы.ГруппаСлоевОсновнаяКоманднаяПанельУправленияЧеком, ОписаниеРасположения);
	ДобавитьИзменяемыеПараметрыЭлементаФормы(ДанныеЭлемента, "ГоризонтальноеПоложениеВГруппе",
		ГоризонтальноеПоложениеЭлемента.Авто, ГоризонтальноеПоложениеЭлемента.Лево);
	
	ОписаниеРасположения = ОписаниеРасположенияЭлемента(Элементы.ПанельУправленияЧеком,
		Элементы.ГруппаСлоевОсновнаяКоманднаяПанельУправленияЧеком,
		Элементы.ЛеваяСредняяКолонкиУправленияЧеком, Неопределено);
	ДанныеЭлемента = ДобавитьЭлементФормыВМассивИзменяемыхПараметров(ПараметрыЭлементов,
		Элементы.ГруппаСлоевДополнительнаяКоманднаяПанель, ОписаниеРасположения);
	ДобавитьИзменяемыеПараметрыЭлементаФормы(ДанныеЭлемента, "РастягиватьПоВертикали", Ложь, Истина);
	
	ОписаниеРасположения = ОписаниеРасположенияЭлемента(Элементы.ПанельУправленияЧеком,
		Элементы.ГруппаСлоевДополнительнаяКоманднаяПанель, Элементы.ПраваяКолонкаУправленияЧеком,
		Элементы.ГруппаСлоевОсновнаяКоманднаяПанельУправленияЧеком);
	ДанныеЭлемента = ДобавитьЭлементФормыВМассивИзменяемыхПараметров(ПараметрыЭлементов,
		Элементы.ГруппаЦифроваяПанель, ОписаниеРасположения);
	ДобавитьИзменяемыеПараметрыЭлементаФормы(ДанныеЭлемента, "ГоризонтальноеПоложениеПодчиненных",
		ГоризонтальноеПоложениеЭлемента.Центр, ГоризонтальноеПоложениеЭлемента.Лево);
	ДобавитьИзменяемыеПараметрыЭлементаФормы(ДанныеЭлемента, "ГоризонтальноеПоложениеВГруппе",
		ГоризонтальноеПоложениеЭлемента.Центр, ГоризонтальноеПоложениеЭлемента.Лево);
	ДобавитьИзменяемыеПараметрыЭлементаФормы(ДанныеЭлемента, "ВертикальноеПоложениеВГруппе",
		ВертикальноеПоложениеЭлемента.Низ, ВертикальноеПоложениеЭлемента.Авто);
	
	ОписаниеРасположения = ОписаниеРасположенияЭлемента(Элементы.ПанельУправленияЧеком,
		Элементы.ГруппаСлоевСлужебнаяИнформацияЧека, Элементы.ПраваяКолонкаУправленияЧеком, Элементы.ГруппаЦифроваяПанель);
	ДанныеЭлемента = ДобавитьЭлементФормыВМассивИзменяемыхПараметров(ПараметрыЭлементов,
		Элементы.ПанельИтоговПоЧекам, ОписаниеРасположения);
		
	ОписаниеРасположения = ОписаниеРасположенияЭлемента(Элементы.ПанельУправленияЧеком,
		Элементы.ПанельИтоговПоЧекам, Элементы.ПраваяКолонкаУправленияЧеком, Элементы.ПанельИтоговПоЧекам);
	ДанныеЭлемента = ДобавитьЭлементФормыВМассивИзменяемыхПараметров(ПараметрыЭлементов,
		Элементы.СжатаяПанельИтогов, ОписаниеРасположения);
	
	ОписаниеРасположения = ОписаниеРасположенияЭлемента(Элементы.ПанельУправленияЧеком, Элементы.ГруппаЦифроваяПанель,
		Элементы.ЛеваяСредняяКолонкиУправленияЧеком, Элементы.ГруппаСлоевДополнительнаяКоманднаяПанель);
	ДанныеЭлемента = ДобавитьЭлементФормыВМассивИзменяемыхПараметров(ПараметрыЭлементов,
		Элементы.ГруппаСлоевСлужебнаяИнформацияЧека, ОписаниеРасположения);
	ДобавитьИзменяемыеПараметрыЭлементаФормы(ДанныеЭлемента, "Группировка",
		ГруппировкаПодчиненныхЭлементовФормы.Вертикальная, ГруппировкаПодчиненныхЭлементовФормы.ГоризонтальнаяЕслиВозможно);

	ДанныеЭлемента = ДобавитьЭлементФормыВМассивИзменяемыхПараметров(ПараметрыЭлементов,
		Элементы.ОбластьОперативногоУправленияЧеком);
	ДобавитьИзменяемыеПараметрыЭлементаФормы(ДанныеЭлемента, "Группировка",
		ГруппировкаПодчиненныхЭлементовФормы.Вертикальная, ГруппировкаПодчиненныхЭлементовФормы.ГоризонтальнаяВсегда);
	ДобавитьИзменяемыеПараметрыЭлементаФормы(ДанныеЭлемента, "РастягиватьПоГоризонтали", Неопределено, Истина);

	ДанныеЭлемента = ДобавитьЭлементФормыВМассивИзменяемыхПараметров(ПараметрыЭлементов,
		Элементы.ГруппаСлоевЛеваяВерхняяВспомогательнаяПанель);
	ДобавитьИзменяемыеПараметрыЭлементаФормы(ДанныеЭлемента, "ГоризонтальноеПоложениеПодчиненных",
		ГоризонтальноеПоложениеЭлемента.Авто, ГоризонтальноеПоложениеЭлемента.Лево);
	ДобавитьИзменяемыеПараметрыЭлементаФормы(ДанныеЭлемента, "Ширина", 0, 26);
	ДобавитьИзменяемыеПараметрыЭлементаФормы(ДанныеЭлемента, "РастягиватьПоГоризонтали", Неопределено, Ложь);

	ДанныеЭлемента = ДобавитьЭлементФормыВМассивИзменяемыхПараметров(ПараметрыЭлементов,
		Элементы.ГруппаДополнительноеУправлениеЧеком);
	ДобавитьИзменяемыеПараметрыЭлементаФормы(ДанныеЭлемента, "ГоризонтальноеПоложениеПодчиненных",
		ГоризонтальноеПоложениеЭлемента.Авто, ГоризонтальноеПоложениеЭлемента.Лево);

	ДанныеЭлемента = ДобавитьЭлементФормыВМассивИзменяемыхПараметров(ПараметрыЭлементов, Элементы.ГруппаПроверкаНСПК);
	ДобавитьИзменяемыеПараметрыЭлементаФормы(ДанныеЭлемента, "РастягиватьПоВертикали", Неопределено, Истина);
	
	ОписаниеРасположения = ОписаниеРасположенияЭлемента(Элементы.ОбластьОперативногоУправленияЧеком,
		Элементы.ГруппаСлоевЛеваяВерхняяВспомогательнаяПанель, Элементы.ОбластьОперативногоУправленияЧеком,
		Элементы.ГруппаСлоевПраваяНижняяВспомогательнаяПанель);
	ДанныеЭлемента = ДобавитьЭлементФормыВМассивИзменяемыхПараметров(ПараметрыЭлементов,
		Элементы.ПанельВидовОплат, ОписаниеРасположения);
	ДобавитьИзменяемыеПараметрыЭлементаФормы(ДанныеЭлемента, "Ширина", 0, 27);
	ДобавитьИзменяемыеПараметрыЭлементаФормы(ДанныеЭлемента, "ГоризонтальноеПоложениеВГруппе",
		ГоризонтальноеПоложениеЭлемента.Авто, ГоризонтальноеПоложениеЭлемента.Право);
	ДобавитьИзменяемыеПараметрыЭлементаФормы(ДанныеЭлемента, "РастягиватьПоГоризонтали", Неопределено, Ложь);
	
	ДанныеЭлемента = ДобавитьЭлементФормыВМассивИзменяемыхПараметров(ПараметрыЭлементов, Элементы.ГруппаВидовОплат);
	ДобавитьИзменяемыеПараметрыЭлементаФормы(ДанныеЭлемента, "РастягиватьПоГоризонтали", Неопределено, Ложь);
	
	ДанныеЭлемента = ДобавитьЭлементФормыВМассивИзменяемыхПараметров(ПараметрыЭлементов,
		Элементы.ГруппаСводныеДанныеЧека);
	ДобавитьИзменяемыеПараметрыЭлементаФормы(ДанныеЭлемента, "РастягиватьПоГоризонтали", Неопределено, Ложь);
	
	ДанныеЭлемента = ДобавитьЭлементФормыВМассивИзменяемыхПараметров(ПараметрыЭлементов,
		Элементы.ГруппаСлоевПраваяНижняяВспомогательнаяПанель);
	ДобавитьИзменяемыеПараметрыЭлементаФормы(ДанныеЭлемента, "Отображение", ОтображениеОбычнойГруппы.Нет,
		ОтображениеОбычнойГруппы.ОбычноеВыделение);
	ДобавитьИзменяемыеПараметрыЭлементаФормы(ДанныеЭлемента, "ГоризонтальноеПоложениеПодчиненных",
		ГоризонтальноеПоложениеЭлемента.Авто, ГоризонтальноеПоложениеЭлемента.Центр);
	ДобавитьИзменяемыеПараметрыЭлементаФормы(ДанныеЭлемента, "ГоризонтальноеПоложениеВГруппе",
		ГоризонтальноеПоложениеЭлемента.Авто, ГоризонтальноеПоложениеЭлемента.Центр);

КонецПроцедуры

Процедура ЗаполнитьПараметрыВспомогательныхЭлементов(Элементы, ПараметрыЭлементов)
	
	ДанныеЭлемента = ДобавитьЭлементФормыВМассивИзменяемыхПараметров(ПараметрыЭлементов,
		Элементы.ГруппаДополнительнаяИнформацияПоЧеку);
	ДобавитьИзменяемыеПараметрыЭлементаФормы(ДанныеЭлемента, "ГоризонтальноеПоложениеПодчиненных",
		ГоризонтальноеПоложениеЭлемента.Центр, ГоризонтальноеПоложениеЭлемента.Авто);
	ДобавитьИзменяемыеПараметрыЭлементаФормы(ДанныеЭлемента, "РастягиватьПоГоризонтали", Неопределено, Истина);

	ДанныеЭлемента = ДобавитьЭлементФормыВМассивИзменяемыхПараметров(ПараметрыЭлементов, Элементы.ГруппаQRCode);
	ДобавитьИзменяемыеПараметрыЭлементаФормы(ДанныеЭлемента, "ВертикальноеПоложениеПодчиненных",
		ВертикальноеПоложениеЭлемента.Низ, ВертикальноеПоложениеЭлемента.Центр);

	ДанныеЭлемента = ДобавитьЭлементФормыВМассивИзменяемыхПараметров(ПараметрыЭлементов, Элементы.ДекорацияОплатаКартой);
	ДобавитьИзменяемыеПараметрыЭлементаФормы(ДанныеЭлемента, "АвтоМаксимальнаяШирина", Истина, Ложь);
	ДобавитьИзменяемыеПараметрыЭлементаФормы(ДанныеЭлемента, "МаксимальнаяШирина", 25, 26);
	ДобавитьИзменяемыеПараметрыЭлементаФормы(ДанныеЭлемента, "МаксимальнаяВысота", 0, 26);
	ДобавитьИзменяемыеПараметрыЭлементаФормы(ДанныеЭлемента, "РастягиватьПоГоризонтали", Неопределено, Истина);

	ДанныеЭлемента = ДобавитьЭлементФормыВМассивИзменяемыхПараметров(ПараметрыЭлементов,
		Элементы.ДекорацияРазделительЭлементыВводаПромокода);
	ДобавитьИзменяемыеПараметрыЭлементаФормы(ДанныеЭлемента, "Видимость", Ложь, Истина);
	
КонецПроцедуры

Процедура ЗаполнитьПараметрыЭлементовПокупателя(Элементы, ПараметрыЭлементов)
	
	ДанныеЭлемента = ДобавитьЭлементФормыВМассивИзменяемыхПараметров(ПараметрыЭлементов, Элементы.ГруппаДанныеПокупателя);
	ДобавитьИзменяемыеПараметрыЭлементаФормы(ДанныеЭлемента, "ГоризонтальноеПоложениеВГруппе",
		ГоризонтальноеПоложениеЭлемента.Центр, ГоризонтальноеПоложениеЭлемента.Лево);
	ДобавитьИзменяемыеПараметрыЭлементаФормы(ДанныеЭлемента, "РастягиватьПоГоризонтали", Истина, Ложь);

	ДанныеЭлемента = ДобавитьЭлементФормыВМассивИзменяемыхПараметров(ПараметрыЭлементов, Элементы.ПанельДанныхПокупателя);
	ДобавитьИзменяемыеПараметрыЭлементаФормы(ДанныеЭлемента, "Группировка",
		ГруппировкаПодчиненныхЭлементовФормы.Вертикальная, ГруппировкаПодчиненныхЭлементовФормы.ГоризонтальнаяВсегда);

	ДанныеЭлемента = ДобавитьЭлементФормыВМассивИзменяемыхПараметров(ПараметрыЭлементов,
		Элементы.ГруппаДанныеПокупателяОсновнаяПанельВыбор);
	ДобавитьИзменяемыеПараметрыЭлементаФормы(ДанныеЭлемента, "РастягиватьПоГоризонтали", Неопределено, Ложь);
	
	ДанныеЭлемента = ДобавитьЭлементФормыВМассивИзменяемыхПараметров(ПараметрыЭлементов,
		Элементы.ГруппаСлоевДанныеПокупателяОсновнаяОбласть);
	ДобавитьИзменяемыеПараметрыЭлементаФормы(ДанныеЭлемента, "ГоризонтальноеПоложениеВГруппе",
		ГоризонтальноеПоложениеЭлемента.Центр, ГоризонтальноеПоложениеЭлемента.Авто);

	ДанныеЭлемента = ДобавитьЭлементФормыВМассивИзменяемыхПараметров(ПараметрыЭлементов, Элементы.ГруппаПоискКарты);
	ДобавитьИзменяемыеПараметрыЭлементаФормы(ДанныеЭлемента, "РастягиватьПоВертикали", Неопределено, Истина);

	ДанныеЭлемента = ДобавитьЭлементФормыВМассивИзменяемыхПараметров(ПараметрыЭлементов, Элементы.СтрокаПоискаКарты);
	ДобавитьИзменяемыеПараметрыЭлементаФормы(ДанныеЭлемента, "РастягиватьПоГоризонтали", Ложь, Истина);

	ДанныеЭлемента = ДобавитьЭлементФормыВМассивИзменяемыхПараметров(ПараметрыЭлементов, Элементы.ВыбратьКонтрагента);
	ДобавитьИзменяемыеПараметрыЭлементаФормы(ДанныеЭлемента, "Высота", 0, 2);
	ДобавитьИзменяемыеПараметрыЭлементаФормы(ДанныеЭлемента, "ВертикальноеПоложениеВГруппе",
		ВертикальноеПоложениеЭлемента.Авто, ВертикальноеПоложениеЭлемента.Низ);
	ДобавитьИзменяемыеПараметрыЭлементаФормы(ДанныеЭлемента, "РастягиватьПоГоризонтали", Ложь, Истина);

	ДанныеЭлемента = ДобавитьЭлементФормыВМассивИзменяемыхПараметров(ПараметрыЭлементов,
		Элементы.СтрокаПовторныйПоискКарты);
	ДобавитьИзменяемыеПараметрыЭлементаФормы(ДанныеЭлемента, "РастягиватьПоГоризонтали", Ложь, Истина);

	ДанныеЭлемента = ДобавитьЭлементФормыВМассивИзменяемыхПараметров(ПараметрыЭлементов,
		Элементы.ОсновнаяГруппаКартаНайдена);
	ДобавитьИзменяемыеПараметрыЭлементаФормы(ДанныеЭлемента, "РастягиватьПоВертикали", Ложь, Истина);

	ДанныеЭлемента = ДобавитьЭлементФормыВМассивИзменяемыхПараметров(ПараметрыЭлементов,
		Элементы.ГруппаПоискКартыДанныеКарты);
	ДобавитьИзменяемыеПараметрыЭлементаФормы(ДанныеЭлемента, "РастягиватьПоГоризонтали", Ложь, Истина);

	ДанныеЭлемента = ДобавитьЭлементФормыВМассивИзменяемыхПараметров(ПараметрыЭлементов, Элементы.НайденнаяКартаТелефон);
	ДобавитьИзменяемыеПараметрыЭлементаФормы(ДанныеЭлемента, "Ширина", 20, 22);
	ДобавитьИзменяемыеПараметрыЭлементаФормы(ДанныеЭлемента, "РастягиватьПоГоризонтали", Неопределено, Истина);

	ДанныеЭлемента = ДобавитьЭлементФормыВМассивИзменяемыхПараметров(ПараметрыЭлементов, Элементы.НайденнаяКартаПочта);
	ДобавитьИзменяемыеПараметрыЭлементаФормы(ДанныеЭлемента, "Ширина", 20, 22);
	ДобавитьИзменяемыеПараметрыЭлементаФормы(ДанныеЭлемента, "РастягиватьПоГоризонтали", Неопределено, Истина);

	ДанныеЭлемента = ДобавитьЭлементФормыВМассивИзменяемыхПараметров(ПараметрыЭлементов, Элементы.НайденнаяКартаФИО);
	ДобавитьИзменяемыеПараметрыЭлементаФормы(ДанныеЭлемента, "Ширина", 20, 22);

	ДанныеЭлемента = ДобавитьЭлементФормыВМассивИзменяемыхПараметров(ПараметрыЭлементов,
		Элементы.НайденнаяКартаДатаРождения);
	ДобавитьИзменяемыеПараметрыЭлементаФормы(ДанныеЭлемента, "Ширина", 20, 22);

	ДанныеЭлемента = ДобавитьЭлементФормыВМассивИзменяемыхПараметров(ПараметрыЭлементов, Элементы.НайденнаяКартаНомер);
	ДобавитьИзменяемыеПараметрыЭлементаФормы(ДанныеЭлемента, "Ширина", 20, 22);
	
	ДанныеЭлемента = ДобавитьЭлементФормыВМассивИзменяемыхПараметров(ПараметрыЭлементов, Элементы.НайденнаяКартаСуммаПродаж);
	ДобавитьИзменяемыеПараметрыЭлементаФормы(ДанныеЭлемента, "Ширина", 20, 22);

	ДанныеЭлемента = ДобавитьЭлементФормыВМассивИзменяемыхПараметров(ПараметрыЭлементов,
		Элементы.ГруппаОтменаКартыЛояльности);
	ДобавитьИзменяемыеПараметрыЭлементаФормы(ДанныеЭлемента, "Отображение", ОтображениеОбычнойГруппы.Нет,
		ОтображениеОбычнойГруппы.ОбычноеВыделение);
	ДобавитьИзменяемыеПараметрыЭлементаФормы(ДанныеЭлемента, "Группировка",
		ГруппировкаПодчиненныхЭлементовФормы.ГоризонтальнаяЕслиВозможно,
		ГруппировкаПодчиненныхЭлементовФормы.ГоризонтальнаяВсегда);
	ДобавитьИзменяемыеПараметрыЭлементаФормы(ДанныеЭлемента, "ВертикальноеПоложениеВГруппе",
		ВертикальноеПоложениеЭлемента.Авто, ВертикальноеПоложениеЭлемента.Низ);

	ДанныеЭлемента = ДобавитьЭлементФормыВМассивИзменяемыхПараметров(ПараметрыЭлементов, Элементы.ОтменитьВводКарты);
	ДобавитьИзменяемыеПараметрыЭлементаФормы(ДанныеЭлемента, "Ширина", 23, 0);
	ДобавитьИзменяемыеПараметрыЭлементаФормы(ДанныеЭлемента, "Высота", 1, 2);
	ДобавитьИзменяемыеПараметрыЭлементаФормы(ДанныеЭлемента, "РастягиватьПоГоризонтали", Ложь, Истина);

	ДанныеЭлемента = ДобавитьЭлементФормыВМассивИзменяемыхПараметров(ПараметрыЭлементов, Элементы.ГруппаОтправкаЧека);
	ДобавитьИзменяемыеПараметрыЭлементаФормы(ДанныеЭлемента, "РастягиватьПоГоризонтали", Ложь, Истина);
	ДобавитьИзменяемыеПараметрыЭлементаФормы(ДанныеЭлемента, "РастягиватьПоВертикали", Неопределено, Истина);

	ДанныеЭлемента = ДобавитьЭлементФормыВМассивИзменяемыхПараметров(ПараметрыЭлементов, Элементы.Декорация8);
	ДобавитьИзменяемыеПараметрыЭлементаФормы(ДанныеЭлемента, "Видимость", Ложь, Истина);

	ДанныеЭлемента = ДобавитьЭлементФормыВМассивИзменяемыхПараметров(ПараметрыЭлементов, Элементы.ОтправкаЧекаПочта);
	ДобавитьИзменяемыеПараметрыЭлементаФормы(ДанныеЭлемента, "РастягиватьПоГоризонтали", Ложь, Истина);

	ДанныеЭлемента = ДобавитьЭлементФормыВМассивИзменяемыхПараметров(ПараметрыЭлементов, Элементы.ОтправкаЧекаТелефон);
	ДобавитьИзменяемыеПараметрыЭлементаФормы(ДанныеЭлемента, "РастягиватьПоГоризонтали", Ложь, Истина);

	ДанныеЭлемента = ДобавитьЭлементФормыВМассивИзменяемыхПараметров(ПараметрыЭлементов,
		Элементы.ГруппаСтраницыКнопкиОтправитьЧек);
	ДобавитьИзменяемыеПараметрыЭлементаФормы(ДанныеЭлемента, "ВертикальноеПоложениеВГруппе",
		ВертикальноеПоложениеЭлемента.Авто, ВертикальноеПоложениеЭлемента.Низ);

	ДанныеЭлемента = ДобавитьЭлементФормыВМассивИзменяемыхПараметров(ПараметрыЭлементов,
		Элементы.ОсновнаяГруппаСозданиеКарты);
	ДобавитьИзменяемыеПараметрыЭлементаФормы(ДанныеЭлемента, "Группировка",
		ГруппировкаПодчиненныхЭлементовФормы.Вертикальная, ГруппировкаПодчиненныхЭлементовФормы.ГоризонтальнаяВсегда);
	ДобавитьИзменяемыеПараметрыЭлементаФормы(ДанныеЭлемента, "РастягиватьПоГоризонтали", Ложь, Неопределено);
	ДобавитьИзменяемыеПараметрыЭлементаФормы(ДанныеЭлемента, "РастягиватьПоВертикали", Ложь, Неопределено);

	ДанныеЭлемента = ДобавитьЭлементФормыВМассивИзменяемыхПараметров(ПараметрыЭлементов, Элементы.НоваяКартаНомер);
	ДобавитьИзменяемыеПараметрыЭлементаФормы(ДанныеЭлемента, "Ширина", 21, 22);
	ДобавитьИзменяемыеПараметрыЭлементаФормы(ДанныеЭлемента, "РастягиватьПоГоризонтали", Ложь, Истина);

	ДанныеЭлемента = ДобавитьЭлементФормыВМассивИзменяемыхПараметров(ПараметрыЭлементов, Элементы.НоваяКартаТелефон);
	ДобавитьИзменяемыеПараметрыЭлементаФормы(ДанныеЭлемента, "Ширина", 21, 22);
	ДобавитьИзменяемыеПараметрыЭлементаФормы(ДанныеЭлемента, "РастягиватьПоГоризонтали", Ложь, Истина);

	ДанныеЭлемента = ДобавитьЭлементФормыВМассивИзменяемыхПараметров(ПараметрыЭлементов, Элементы.НоваяКартаФИО);
	ДобавитьИзменяемыеПараметрыЭлементаФормы(ДанныеЭлемента, "Ширина", 21, 22);
	ДобавитьИзменяемыеПараметрыЭлементаФормы(ДанныеЭлемента, "РастягиватьПоГоризонтали", Ложь, Истина);

	ДанныеЭлемента = ДобавитьЭлементФормыВМассивИзменяемыхПараметров(ПараметрыЭлементов, Элементы.НоваяКартаПочта);
	ДобавитьИзменяемыеПараметрыЭлементаФормы(ДанныеЭлемента, "Ширина", 21, 22);
	ДобавитьИзменяемыеПараметрыЭлементаФормы(ДанныеЭлемента, "РастягиватьПоГоризонтали", Ложь, Истина);

	ДанныеЭлемента = ДобавитьЭлементФормыВМассивИзменяемыхПараметров(ПараметрыЭлементов, Элементы.НоваяКартаДатаРождения);
	ДобавитьИзменяемыеПараметрыЭлементаФормы(ДанныеЭлемента, "Ширина", 21, 22);

	ДанныеЭлемента = ДобавитьЭлементФормыВМассивИзменяемыхПараметров(ПараметрыЭлементов,
		Элементы.ДекорацияПредупреждение);
	ДобавитьИзменяемыеПараметрыЭлементаФормы(ДанныеЭлемента, "Ширина", 0, 2);

	ДанныеЭлемента = ДобавитьЭлементФормыВМассивИзменяемыхПараметров(ПараметрыЭлементов,
		Элементы.ГруппаКомандыСозданиеКарты);
	ДобавитьИзменяемыеПараметрыЭлементаФормы(ДанныеЭлемента, "ВертикальноеПоложениеПодчиненных",
		ВертикальноеПоложениеЭлемента.Центр, ВертикальноеПоложениеЭлемента.Низ);
	ДобавитьИзменяемыеПараметрыЭлементаФормы(ДанныеЭлемента, "РастягиватьПоВертикали", Неопределено, Истина);

	ДанныеЭлемента = ДобавитьЭлементФормыВМассивИзменяемыхПараметров(ПараметрыЭлементов, Элементы.СоздатьКарту);
	ДобавитьИзменяемыеПараметрыЭлементаФормы(ДанныеЭлемента, "Высота", 0, 2);

	ДанныеЭлемента = ДобавитьЭлементФормыВМассивИзменяемыхПараметров(ПараметрыЭлементов,
		Элементы.ГруппаСлоевДанныеПокупателяДополнительнаяОбласть);
	ДобавитьИзменяемыеПараметрыЭлементаФормы(ДанныеЭлемента, "Отображение", ОтображениеОбычнойГруппы.Нет,
		ОтображениеОбычнойГруппы.ОбычноеВыделение);
	ДобавитьИзменяемыеПараметрыЭлементаФормы(ДанныеЭлемента, "ГоризонтальноеПоложениеВГруппе",
		ГоризонтальноеПоложениеЭлемента.Центр, ГоризонтальноеПоложениеЭлемента.Авто);

	ДанныеЭлемента = ДобавитьЭлементФормыВМассивИзменяемыхПараметров(ПараметрыЭлементов,
		Элементы.ДополнительнаяГруппаКартаНайдена);
	ДобавитьИзменяемыеПараметрыЭлементаФормы(ДанныеЭлемента, "РастягиватьПоВертикали", Неопределено, Истина);
	ДобавитьИзменяемыеПараметрыЭлементаФормы(ДанныеЭлемента, "РастягиватьПоГоризонтали", Ложь, Неопределено);
	
	ДанныеЭлемента = ДобавитьЭлементФормыВМассивИзменяемыхПараметров(ПараметрыЭлементов,
		Элементы.ДополнительнаяГруппаКартаНайденаКонтейнер);
	ДобавитьИзменяемыеПараметрыЭлементаФормы(ДанныеЭлемента, "РастягиватьПоВертикали", Неопределено, Истина);

	ДанныеЭлемента = ДобавитьЭлементФормыВМассивИзменяемыхПараметров(ПараметрыЭлементов,
		Элементы.ДекорацияИнформацияОБонусахОтступ);
	ДобавитьИзменяемыеПараметрыЭлементаФормы(ДанныеЭлемента, "Видимость", Ложь, Истина);

	ДанныеЭлемента = ДобавитьЭлементФормыВМассивИзменяемыхПараметров(ПараметрыЭлементов, Элементы.КоличествоБонусов);
	ДобавитьИзменяемыеПараметрыЭлементаФормы(ДанныеЭлемента, "РастягиватьПоГоризонтали", Неопределено, Истина);
	
	ДанныеЭлемента = ДобавитьЭлементФормыВМассивИзменяемыхПараметров(ПараметрыЭлементов, Элементы.ГруппаПодтверждениеСМС);
	ДобавитьИзменяемыеПараметрыЭлементаФормы(ДанныеЭлемента, "ВертикальноеПоложениеПодчиненных",
		ВертикальноеПоложениеЭлемента.Низ, ВертикальноеПоложениеЭлемента.Авто);
	ДобавитьИзменяемыеПараметрыЭлементаФормы(ДанныеЭлемента, "РастягиватьПоВертикали", Ложь, Истина);

	ДанныеЭлемента = ДобавитьЭлементФормыВМассивИзменяемыхПараметров(ПараметрыЭлементов,
		Элементы.ГруппаВводКодаSMSОсновное);
	ДобавитьИзменяемыеПараметрыЭлементаФормы(ДанныеЭлемента, "РастягиватьПоВертикали", Ложь, Истина);

	ДанныеЭлемента = ДобавитьЭлементФормыВМассивИзменяемыхПараметров(ПараметрыЭлементов,
		Элементы.ДекорацияТекстПодтвердитеКарту);
	ДобавитьИзменяемыеПараметрыЭлементаФормы(ДанныеЭлемента, "Ширина", 0, 24);
	ДобавитьИзменяемыеПараметрыЭлементаФормы(ДанныеЭлемента, "Высота", 2, 6);
	ДобавитьИзменяемыеПараметрыЭлементаФормы(ДанныеЭлемента, "ГоризонтальноеПоложениеВГруппе",
		ГоризонтальноеПоложениеЭлемента.Лево, ГоризонтальноеПоложениеЭлемента.Центр);

	ДанныеЭлемента = ДобавитьЭлементФормыВМассивИзменяемыхПараметров(ПараметрыЭлементов,
		Элементы.ОтправитьSMSСКодомПроверки);
	ДобавитьИзменяемыеПараметрыЭлементаФормы(ДанныеЭлемента, "Высота", 0, 2);

	ДанныеЭлемента = ДобавитьЭлементФормыВМассивИзменяемыхПараметров(ПараметрыЭлементов,
		Элементы.ОтменитьЗаведениеКарты);
	ДобавитьИзменяемыеПараметрыЭлементаФормы(ДанныеЭлемента, "ВертикальноеПоложениеВГруппе",
		ВертикальноеПоложениеЭлемента.Авто, ВертикальноеПоложениеЭлемента.Низ);
	
КонецПроцедуры

Процедура ЗаполнитьПараметрыЭлементовМаркировки(Элементы, ПараметрыЭлементов)

	ДанныеЭлемента = ДобавитьЭлементФормыВМассивИзменяемыхПараметров(ПараметрыЭлементов,
		Элементы.ДекорацияЛинияВыделенияДанныеПоМаркам);
	ДобавитьИзменяемыеПараметрыЭлементаФормы(ДанныеЭлемента, "Видимость", Истина, Ложь);

	ДанныеЭлемента = ДобавитьЭлементФормыВМассивИзменяемыхПараметров(ПараметрыЭлементов,
		Элементы.ГруппаВыполненияВозвратаБезМарки);
	ДобавитьИзменяемыеПараметрыЭлементаФормы(ДанныеЭлемента, "ГоризонтальноеПоложениеПодчиненных",
		ГоризонтальноеПоложениеЭлемента.Центр, ГоризонтальноеПоложениеЭлемента.Авто);
	ДобавитьИзменяемыеПараметрыЭлементаФормы(ДанныеЭлемента, "ВертикальноеПоложениеПодчиненных",
		ВертикальноеПоложениеЭлемента.Низ, ВертикальноеПоложениеЭлемента.Авто);
	ДобавитьИзменяемыеПараметрыЭлементаФормы(ДанныеЭлемента, "ГоризонтальноеПоложениеВГруппе",
		ГоризонтальноеПоложениеЭлемента.Центр, ГоризонтальноеПоложениеЭлемента.Лево);

	ДанныеЭлемента = ДобавитьЭлементФормыВМассивИзменяемыхПараметров(ПараметрыЭлементов,
		Элементы.ОтступГруппыВыполненияВозвратаБезМарки);
	ДобавитьИзменяемыеПараметрыЭлементаФормы(ДанныеЭлемента, "Видимость", Истина, Ложь);

	ДанныеЭлемента = ДобавитьЭлементФормыВМассивИзменяемыхПараметров(ПараметрыЭлементов, Элементы.ВернутьПозициюБезМарки);
	ДобавитьИзменяемыеПараметрыЭлементаФормы(ДанныеЭлемента, "ВертикальноеПоложениеВГруппе",
		ВертикальноеПоложениеЭлемента.Авто, ВертикальноеПоложениеЭлемента.Низ);

	ДанныеЭлемента = ДобавитьЭлементФормыВМассивИзменяемыхПараметров(ПараметрыЭлементов,
		Элементы.ДекорацияЛинияВыделенияДанныеПоМаркам1);
	ДобавитьИзменяемыеПараметрыЭлементаФормы(ДанныеЭлемента, "Видимость", Истина, Ложь);

	ДанныеЭлемента = ДобавитьЭлементФормыВМассивИзменяемыхПараметров(ПараметрыЭлементов,
		Элементы.ГруппаВыполненияВозвратаБезМаркиПослеОшибкиВводаМарки);
	ДобавитьИзменяемыеПараметрыЭлементаФормы(ДанныеЭлемента, "ГоризонтальноеПоложениеПодчиненных",
		ГоризонтальноеПоложениеЭлемента.Центр, ГоризонтальноеПоложениеЭлемента.Авто);
	ДобавитьИзменяемыеПараметрыЭлементаФормы(ДанныеЭлемента, "ВертикальноеПоложениеПодчиненных",
		ВертикальноеПоложениеЭлемента.Низ, ВертикальноеПоложениеЭлемента.Авто);
	ДобавитьИзменяемыеПараметрыЭлементаФормы(ДанныеЭлемента, "ГоризонтальноеПоложениеВГруппе",
		ГоризонтальноеПоложениеЭлемента.Центр, ГоризонтальноеПоложениеЭлемента.Лево);
	ДобавитьИзменяемыеПараметрыЭлементаФормы(ДанныеЭлемента, "РастягиватьПоВертикали", Истина, Неопределено);

	ДанныеЭлемента = ДобавитьЭлементФормыВМассивИзменяемыхПараметров(ПараметрыЭлементов,
		Элементы.ОтступГруппыВыполненияВозвратаБезМаркиПослеОшибкиРазбораМарки);
	ДобавитьИзменяемыеПараметрыЭлементаФормы(ДанныеЭлемента, "Видимость", Истина, Ложь);

	ДанныеЭлемента = ДобавитьЭлементФормыВМассивИзменяемыхПараметров(ПараметрыЭлементов,
		Элементы.ВернутьПозициюБезМаркиПослеОшибкиРазбораМарки);
	ДобавитьИзменяемыеПараметрыЭлементаФормы(ДанныеЭлемента, "ВертикальноеПоложениеВГруппе",
		ВертикальноеПоложениеЭлемента.Авто, ВертикальноеПоложениеЭлемента.Низ);
	
КонецПроцедуры

Процедура ЗаполнитьПараметрыПанелиОшибок(Элементы, ПараметрыЭлементов)
	
	ДанныеЭлемента = ДобавитьЭлементФормыВМассивИзменяемыхПараметров(ПараметрыЭлементов, Элементы.ГруппаИнфоОшибка);
	ДобавитьИзменяемыеПараметрыЭлементаФормы(ДанныеЭлемента, "Группировка",
		ГруппировкаПодчиненныхЭлементовФормы.Вертикальная, ГруппировкаПодчиненныхЭлементовФормы.ГоризонтальнаяВсегда);
	ДобавитьИзменяемыеПараметрыЭлементаФормы(ДанныеЭлемента, "РастягиватьПоГоризонтали", Истина, Неопределено);

	ДанныеЭлемента = ДобавитьЭлементФормыВМассивИзменяемыхПараметров(ПараметрыЭлементов,
		Элементы.ДекорацияЛинияПредупреждение);
	ДобавитьИзменяемыеПараметрыЭлементаФормы(ДанныеЭлемента, "Видимость", Истина, Ложь);

	ДанныеЭлемента = ДобавитьЭлементФормыВМассивИзменяемыхПараметров(ПараметрыЭлементов,
		Элементы.ГруппаИнфоОшибкиКонтейнер);
	ДобавитьИзменяемыеПараметрыЭлементаФормы(ДанныеЭлемента, "РастягиватьПоВертикали", Неопределено, Истина);

	ДанныеЭлемента = ДобавитьЭлементФормыВМассивИзменяемыхПараметров(ПараметрыЭлементов,
		Элементы.ГруппаИнфоОшибкаВертикальныйКонтейнер);
	ДобавитьИзменяемыеПараметрыЭлементаФормы(ДанныеЭлемента, "РастягиватьПоГоризонтали", Неопределено, Истина);

	ДанныеЭлемента = ДобавитьЭлементФормыВМассивИзменяемыхПараметров(ПараметрыЭлементов,
		Элементы.ГруппаВерхнийРядИнфоОшибка);
	ДобавитьИзменяемыеПараметрыЭлементаФормы(ДанныеЭлемента, "Группировка",
		ГруппировкаПодчиненныхЭлементовФормы.Вертикальная, ГруппировкаПодчиненныхЭлементовФормы.ГоризонтальнаяВсегда);
	ДобавитьИзменяемыеПараметрыЭлементаФормы(ДанныеЭлемента, "РастягиватьПоГоризонтали", Неопределено, Истина);

	ДанныеЭлемента = ДобавитьЭлементФормыВМассивИзменяемыхПараметров(ПараметрыЭлементов, Элементы.ГруппаИнфоОшибкаВерх);
	ДобавитьИзменяемыеПараметрыЭлементаФормы(ДанныеЭлемента, "Группировка",
		ГруппировкаПодчиненныхЭлементовФормы.ГоризонтальнаяВсегда, ГруппировкаПодчиненныхЭлементовФормы.Вертикальная);

	ДанныеЭлемента = ДобавитьЭлементФормыВМассивИзменяемыхПараметров(ПараметрыЭлементов, Элементы.Декорация9);
	ДобавитьИзменяемыеПараметрыЭлементаФормы(ДанныеЭлемента, "Видимость", Истина, Ложь);
	
	ОписаниеРасположения = ОписаниеРасположенияЭлемента(Элементы.ГруппаИнфоОшибкаВертикальная,
		Элементы.ТекстПредупреждениеОшибка, Элементы.ГруппаИнфоОшибкаВерх, Неопределено);
	ДанныеЭлемента = ДобавитьЭлементФормыВМассивИзменяемыхПараметров(ПараметрыЭлементов,
		Элементы.ТекстПредупреждениеЗаголовок, ОписаниеРасположения);
	ДобавитьИзменяемыеПараметрыЭлементаФормы(ДанныеЭлемента, "АвтоМаксимальнаяШирина", Истина, Ложь);
	ДобавитьИзменяемыеПараметрыЭлементаФормы(ДанныеЭлемента, "Ширина", 23, 50);
	ДобавитьИзменяемыеПараметрыЭлементаФормы(ДанныеЭлемента, "ВертикальноеПоложениеВГруппе",
		ВертикальноеПоложениеЭлемента.Авто, ВертикальноеПоложениеЭлемента.Центр);
	ДобавитьИзменяемыеПараметрыЭлементаФормы(ДанныеЭлемента, "РастягиватьПоГоризонтали", Ложь, Неопределено);

	ОписаниеРасположения = ОписаниеРасположенияЭлемента(Элементы.ГруппаИнфоОшибкаВерх, Неопределено,
		Элементы.ГруппаВерхнийРядИнфоОшибка, Неопределено);
	ДанныеЭлемента = ДобавитьЭлементФормыВМассивИзменяемыхПараметров(ПараметрыЭлементов,
		Элементы.ЗакрытьСтраницуИнфоОшибка, ОписаниеРасположения);
	ДобавитьИзменяемыеПараметрыЭлементаФормы(ДанныеЭлемента, "ГоризонтальноеПоложениеВГруппе",
		ГоризонтальноеПоложениеЭлемента.Авто, ГоризонтальноеПоложениеЭлемента.Право);

	ОписаниеРасположения = ОписаниеРасположенияЭлемента(Элементы.ГруппаИнфоОшибка, Неопределено,
		Элементы.ГруппаВерхнийРядИнфоОшибка, Неопределено);
	ДанныеЭлемента = ДобавитьЭлементФормыВМассивИзменяемыхПараметров(ПараметрыЭлементов, Элементы.ДекорацияОтступСправа,
		ОписаниеРасположения);
	ДобавитьИзменяемыеПараметрыЭлементаФормы(ДанныеЭлемента, "Видимость", Ложь, Истина);

	ДанныеЭлемента = ДобавитьЭлементФормыВМассивИзменяемыхПараметров(ПараметрыЭлементов,
		Элементы.ГруппаНижнийРядИнфоОшибка);
	ДобавитьИзменяемыеПараметрыЭлементаФормы(ДанныеЭлемента, "Группировка",
		ГруппировкаПодчиненныхЭлементовФормы.Вертикальная, ГруппировкаПодчиненныхЭлементовФормы.ГоризонтальнаяВсегда);
	ДобавитьИзменяемыеПараметрыЭлементаФормы(ДанныеЭлемента, "РастягиватьПоВертикали", Истина, Неопределено);

	ДанныеЭлемента = ДобавитьЭлементФормыВМассивИзменяемыхПараметров(ПараметрыЭлементов,
		Элементы.ГруппаИнфоОшибкаГоризонтальная);
	ДобавитьИзменяемыеПараметрыЭлементаФормы(ДанныеЭлемента, "Ширина", 25, 0);
	ДобавитьИзменяемыеПараметрыЭлементаФормы(ДанныеЭлемента, "РастягиватьПоГоризонтали", Ложь, Истина);

	ДанныеЭлемента = ДобавитьЭлементФормыВМассивИзменяемыхПараметров(ПараметрыЭлементов, Элементы.Декорация17);
	ДобавитьИзменяемыеПараметрыЭлементаФормы(ДанныеЭлемента, "Видимость", Истина, Ложь);

	ДанныеЭлемента = ДобавитьЭлементФормыВМассивИзменяемыхПараметров(ПараметрыЭлементов,
		Элементы.ГруппаИнфоОшибкаВертикальная);
	ДобавитьИзменяемыеПараметрыЭлементаФормы(ДанныеЭлемента, "Отображение", ОтображениеОбычнойГруппы.СлабоеВыделение,
		ОтображениеОбычнойГруппы.Нет);
	ДобавитьИзменяемыеПараметрыЭлементаФормы(ДанныеЭлемента, "РастягиватьПоГоризонтали", Неопределено, Истина);

	ДанныеЭлемента = ДобавитьЭлементФормыВМассивИзменяемыхПараметров(ПараметрыЭлементов,
		Элементы.ТекстПредупреждениеОшибка);
	ДобавитьИзменяемыеПараметрыЭлементаФормы(ДанныеЭлемента, "АвтоМаксимальнаяШирина", Истина, Ложь);
	ДобавитьИзменяемыеПараметрыЭлементаФормы(ДанныеЭлемента, "Ширина", 23, 50);
	ДобавитьИзменяемыеПараметрыЭлементаФормы(ДанныеЭлемента, "Высота", 8, 0);
	ДобавитьИзменяемыеПараметрыЭлементаФормы(ДанныеЭлемента, "МаксимальнаяВысота", 0, 8);
	
	ОписаниеРасположения = ОписаниеРасположенияЭлемента(Элементы.ГруппаНижнийРядИнфоОшибка, Неопределено,
		Элементы.ГруппаИнфоОшибкиКонтейнер, Неопределено);
	ДанныеЭлемента = ДобавитьЭлементФормыВМассивИзменяемыхПараметров(ПараметрыЭлементов,
		Элементы.ГруппаИнфоОшибкаДействияСЧеком, ОписаниеРасположения);
	ДобавитьИзменяемыеПараметрыЭлементаФормы(ДанныеЭлемента, "Группировка",
		ГруппировкаПодчиненныхЭлементовФормы.Вертикальная, ГруппировкаПодчиненныхЭлементовФормы.ГоризонтальнаяВсегда);
	ДобавитьИзменяемыеПараметрыЭлементаФормы(ДанныеЭлемента, "ГоризонтальноеПоложениеВГруппе",
		ГоризонтальноеПоложениеЭлемента.Авто, ГоризонтальноеПоложениеЭлемента.Лево);

	ДанныеЭлемента = ДобавитьЭлементФормыВМассивИзменяемыхПараметров(ПараметрыЭлементов,
		Элементы.ПовторитьОперациюПакетнойФискализации);
	ДобавитьИзменяемыеПараметрыЭлементаФормы(ДанныеЭлемента, "Ширина", 0, 20);
	ДобавитьИзменяемыеПараметрыЭлементаФормы(ДанныеЭлемента, "Высота", 0, 2);

	ДанныеЭлемента = ДобавитьЭлементФормыВМассивИзменяемыхПараметров(ПараметрыЭлементов, Элементы.ВыполнитьОтменуОплаты);
	ДобавитьИзменяемыеПараметрыЭлементаФормы(ДанныеЭлемента, "Ширина", 25, 20);
	ДобавитьИзменяемыеПараметрыЭлементаФормы(ДанныеЭлемента, "РастягиватьПоГоризонтали", Ложь, Истина);

	ДанныеЭлемента = ДобавитьЭлементФормыВМассивИзменяемыхПараметров(ПараметрыЭлементов,
		Элементы.ГруппаИнфоОшибкаДействияСЧекомВерх);
	ДобавитьИзменяемыеПараметрыЭлементаФормы(ДанныеЭлемента, "Группировка",
		ГруппировкаПодчиненныхЭлементовФормы.ГоризонтальнаяВсегда, ГруппировкаПодчиненныхЭлементовФормы.Вертикальная);

	ДанныеЭлемента = ДобавитьЭлементФормыВМассивИзменяемыхПараметров(ПараметрыЭлементов,
		Элементы.ГруппаИнфоОшибкаДействияСЧекомНиз);
	ДобавитьИзменяемыеПараметрыЭлементаФормы(ДанныеЭлемента, "Группировка",
		ГруппировкаПодчиненныхЭлементовФормы.ГоризонтальнаяВсегда, ГруппировкаПодчиненныхЭлементовФормы.Вертикальная);

	ДанныеЭлемента = ДобавитьЭлементФормыВМассивИзменяемыхПараметров(ПараметрыЭлементов, Элементы.ОтложитьЧекИзОшибки);
	ДобавитьИзменяемыеПараметрыЭлементаФормы(ДанныеЭлемента, "Высота", 0, 2);

	ДанныеЭлемента = ДобавитьЭлементФормыВМассивИзменяемыхПараметров(ПараметрыЭлементов, Элементы.УдалитьЧекИзОшибки);
	ДобавитьИзменяемыеПараметрыЭлементаФормы(ДанныеЭлемента, "Высота", 0, 2);
	
КонецПроцедуры

Процедура ЗаполнитьПараметрыЭлементовКонтроляМарки(Элементы, ПараметрыЭлементов)
	
	ДанныеЭлемента = ДобавитьЭлементФормыВМассивИзменяемыхПараметров(ПараметрыЭлементов,
		Элементы.ГруппаПодтвержденияКонтрольнойМарки);
	ДобавитьИзменяемыеПараметрыЭлементаФормы(ДанныеЭлемента, "ГоризонтальноеПоложениеПодчиненных",
		ГоризонтальноеПоложениеЭлемента.Авто, ГоризонтальноеПоложениеЭлемента.Лево);
	ДобавитьИзменяемыеПараметрыЭлементаФормы(ДанныеЭлемента, "РастягиватьПоГоризонтали", Неопределено, Истина);

	ДанныеЭлемента = ДобавитьЭлементФормыВМассивИзменяемыхПараметров(ПараметрыЭлементов,
		Элементы.РазделительПодтвержденияПродажиКонтрольнойМарки);
	ДобавитьИзменяемыеПараметрыЭлементаФормы(ДанныеЭлемента, "Видимость", Истина, Ложь);

	ДанныеЭлемента = ДобавитьЭлементФормыВМассивИзменяемыхПараметров(ПараметрыЭлементов,
		Элементы.ПодтверждениеПродажиКонтрольнойМаркиПояснениеОтступ);
	ДобавитьИзменяемыеПараметрыЭлементаФормы(ДанныеЭлемента, "Видимость", Истина, Ложь);

	ДанныеЭлемента = ДобавитьЭлементФормыВМассивИзменяемыхПараметров(ПараметрыЭлементов,
		Элементы.ПодтверждениеПродажиБезПроверкиМарки);
	ДобавитьИзменяемыеПараметрыЭлементаФормы(ДанныеЭлемента, "РастягиватьПоВертикали", Неопределено, Истина);

	ДанныеЭлемента = ДобавитьЭлементФормыВМассивИзменяемыхПараметров(ПараметрыЭлементов,
		Элементы.ПодтверждениеПродажиБезПроверкиМаркиМарка);
	ДобавитьИзменяемыеПараметрыЭлементаФормы(ДанныеЭлемента, "Высота", 3, 2);
	ДобавитьИзменяемыеПараметрыЭлементаФормы(ДанныеЭлемента, "ВертикальноеПоложениеВГруппе",
		ВертикальноеПоложениеЭлемента.Центр, ВертикальноеПоложениеЭлемента.Верх);

	ДанныеЭлемента = ДобавитьЭлементФормыВМассивИзменяемыхПараметров(ПараметрыЭлементов,
		Элементы.ПодтверждениеПродажиБезПроверкиМаркиТекст);
	ДобавитьИзменяемыеПараметрыЭлементаФормы(ДанныеЭлемента, "АвтоМаксимальнаяВысота", Истина, Ложь);

	ДанныеЭлемента = ДобавитьЭлементФормыВМассивИзменяемыхПараметров(ПараметрыЭлементов,
		Элементы.ПодтверждениеПродажиБезПроверкиМаркиДействия);
	ДобавитьИзменяемыеПараметрыЭлементаФормы(ДанныеЭлемента, "ВертикальноеПоложениеПодчиненных",
		ВертикальноеПоложениеЭлемента.Центр, ВертикальноеПоложениеЭлемента.Низ);
	ДобавитьИзменяемыеПараметрыЭлементаФормы(ДанныеЭлемента, "ГоризонтальноеПоложениеВГруппе",
		ГоризонтальноеПоложениеЭлемента.Центр, ГоризонтальноеПоложениеЭлемента.Лево);
	ДобавитьИзменяемыеПараметрыЭлементаФормы(ДанныеЭлемента, "ВертикальноеПоложениеВГруппе",
		ВертикальноеПоложениеЭлемента.Центр, ВертикальноеПоложениеЭлемента.Низ);
	ДобавитьИзменяемыеПараметрыЭлементаФормы(ДанныеЭлемента, "РастягиватьПоВертикали", Истина, Неопределено);

	ДанныеЭлемента = ДобавитьЭлементФормыВМассивИзменяемыхПараметров(ПараметрыЭлементов,
		Элементы.ПродолжитьДобавлениеТовараПослеПроверкиМарки);
	ДобавитьИзменяемыеПараметрыЭлементаФормы(ДанныеЭлемента, "Высота", 0, 2);

	ДанныеЭлемента = ДобавитьЭлементФормыВМассивИзменяемыхПараметров(ПараметрыЭлементов,
		Элементы.ПодтверждениеПродажиПодтверждениеНаККМНеПройденоРазделитель);
	ДобавитьИзменяемыеПараметрыЭлементаФормы(ДанныеЭлемента, "Ширина", 2, 1);
	ДобавитьИзменяемыеПараметрыЭлементаФормы(ДанныеЭлемента, "Высота", 3, 2);

	ДанныеЭлемента = ДобавитьЭлементФормыВМассивИзменяемыхПараметров(ПараметрыЭлементов,
		Элементы.ОтказатьсяОтДобавленияТовараБезПроверкиМарки);
	ДобавитьИзменяемыеПараметрыЭлементаФормы(ДанныеЭлемента, "Высота", 0, 2);
	
КонецПроцедуры

Процедура ЗаполнитьПараметрыЭлементовСопоставленияТоваров(Элементы, ПараметрыЭлементов)
	
	ДанныеЭлемента = ДобавитьЭлементФормыВМассивИзменяемыхПараметров(ПараметрыЭлементов,
		Элементы.ГруппаРучноеСопоставлениеТовара);
	ДобавитьИзменяемыеПараметрыЭлементаФормы(ДанныеЭлемента, "ГоризонтальноеПоложениеПодчиненных",
		ГоризонтальноеПоложениеЭлемента.Авто, ГоризонтальноеПоложениеЭлемента.Лево);
	ДобавитьИзменяемыеПараметрыЭлементаФормы(ДанныеЭлемента, "РастягиватьПоГоризонтали", Неопределено, Истина);

	ДанныеЭлемента = ДобавитьЭлементФормыВМассивИзменяемыхПараметров(ПараметрыЭлементов,
		Элементы.ДекорацияЛинияВыделения);
	ДобавитьИзменяемыеПараметрыЭлементаФормы(ДанныеЭлемента, "Видимость", Истина, Ложь);

	ДанныеЭлемента = ДобавитьЭлементФормыВМассивИзменяемыхПараметров(ПараметрыЭлементов,
		Элементы.ГруппаГоризонтальнаяСопоставлениеТовара);
	ДобавитьИзменяемыеПараметрыЭлементаФормы(ДанныеЭлемента, "РастягиватьПоГоризонтали", Неопределено, Ложь);
	ДобавитьИзменяемыеПараметрыЭлементаФормы(ДанныеЭлемента, "РастягиватьПоВертикали", Истина, Неопределено);

	ДанныеЭлемента = ДобавитьЭлементФормыВМассивИзменяемыхПараметров(ПараметрыЭлементов, Элементы.ДекорацияВертикальная);
	ДобавитьИзменяемыеПараметрыЭлементаФормы(ДанныеЭлемента, "Видимость", Истина, Ложь);

	ДанныеЭлемента = ДобавитьЭлементФормыВМассивИзменяемыхПараметров(ПараметрыЭлементов,
		Элементы.ДекорацияТекстСопоставлениеТовара);
	ДобавитьИзменяемыеПараметрыЭлементаФормы(ДанныеЭлемента, "Ширина", 23, 24);
	ДобавитьИзменяемыеПараметрыЭлементаФормы(ДанныеЭлемента, "Высота", 5, 3);

	ДанныеЭлемента = ДобавитьЭлементФормыВМассивИзменяемыхПараметров(ПараметрыЭлементов,
		Элементы.ГруппаОперацииСопоставлениеТовара);
	ДобавитьИзменяемыеПараметрыЭлементаФормы(ДанныеЭлемента, "ГоризонтальноеПоложениеПодчиненных",
		ГоризонтальноеПоложениеЭлемента.Авто, ГоризонтальноеПоложениеЭлемента.Лево);
	ДобавитьИзменяемыеПараметрыЭлементаФормы(ДанныеЭлемента, "ВертикальноеПоложениеПодчиненных",
		ВертикальноеПоложениеЭлемента.Авто, ВертикальноеПоложениеЭлемента.Низ);
	ДобавитьИзменяемыеПараметрыЭлементаФормы(ДанныеЭлемента, "РастягиватьПоГоризонтали", Неопределено, Истина);
	ДобавитьИзменяемыеПараметрыЭлементаФормы(ДанныеЭлемента, "РастягиватьПоВертикали", Неопределено, Истина);

	ДанныеЭлемента = ДобавитьЭлементФормыВМассивИзменяемыхПараметров(ПараметрыЭлементов, Элементы.СопоставитьТовар);
	ДобавитьИзменяемыеПараметрыЭлементаФормы(ДанныеЭлемента, "Высота", 0, 2);

	ДанныеЭлемента = ДобавитьЭлементФормыВМассивИзменяемыхПараметров(ПараметрыЭлементов,
		Элементы.ОтменаСопоставленияТовара);
	ДобавитьИзменяемыеПараметрыЭлементаФормы(ДанныеЭлемента, "Высота", 0, 2);
	
КонецПроцедуры

Процедура ЗаполнитьПараметрыЭлементовСерийИПартий(Элементы, ПараметрыЭлементов)
	
	ДанныеЭлемента = ДобавитьЭлементФормыВМассивИзменяемыхПараметров(ПараметрыЭлементов, Элементы.ГруппаСерииИПартии);
	ДобавитьИзменяемыеПараметрыЭлементаФормы(ДанныеЭлемента, "ГоризонтальноеПоложениеПодчиненных",
		ГоризонтальноеПоложениеЭлемента.Авто, ГоризонтальноеПоложениеЭлемента.Лево);
	ДобавитьИзменяемыеПараметрыЭлементаФормы(ДанныеЭлемента, "РастягиватьПоГоризонтали", Неопределено, Истина);

	ДанныеЭлемента = ДобавитьЭлементФормыВМассивИзменяемыхПараметров(ПараметрыЭлементов,
		Элементы.ДекорацияЛинияПредупреждение5);
	ДобавитьИзменяемыеПараметрыЭлементаФормы(ДанныеЭлемента, "Видимость", Истина, Ложь);

	ДанныеЭлемента = ДобавитьЭлементФормыВМассивИзменяемыхПараметров(ПараметрыЭлементов,
		Элементы.ГруппаСерииГоризонтальная);
	ДобавитьИзменяемыеПараметрыЭлементаФормы(ДанныеЭлемента, "РастягиватьПоГоризонтали", Неопределено, Ложь);

	ДанныеЭлемента = ДобавитьЭлементФормыВМассивИзменяемыхПараметров(ПараметрыЭлементов, Элементы.Декорация21);
	ДобавитьИзменяемыеПараметрыЭлементаФормы(ДанныеЭлемента, "Видимость", Истина, Ложь);

	ДанныеЭлемента = ДобавитьЭлементФормыВМассивИзменяемыхПараметров(ПараметрыЭлементов,
		Элементы.ГруппаСерииВертикальная);
	ДобавитьИзменяемыеПараметрыЭлементаФормы(ДанныеЭлемента, "РастягиватьПоВертикали", Неопределено, Истина);

	ДанныеЭлемента = ДобавитьЭлементФормыВМассивИзменяемыхПараметров(ПараметрыЭлементов,
		Элементы.ГруппаСерииДекорацияНоменклатура);
	ДобавитьИзменяемыеПараметрыЭлементаФормы(ДанныеЭлемента, "ГоризонтальноеПоложениеПодчиненных",
		ГоризонтальноеПоложениеЭлемента.Авто, ГоризонтальноеПоложениеЭлемента.Лево);

	ДанныеЭлемента = ДобавитьЭлементФормыВМассивИзменяемыхПараметров(ПараметрыЭлементов, Элементы.ВыборСерии);
	ДобавитьИзменяемыеПараметрыЭлементаФормы(ДанныеЭлемента, "РастягиватьПоГоризонтали", Ложь, Истина);

	ДанныеЭлемента = ДобавитьЭлементФормыВМассивИзменяемыхПараметров(ПараметрыЭлементов, Элементы.ВыборПартии);
	ДобавитьИзменяемыеПараметрыЭлементаФормы(ДанныеЭлемента, "РастягиватьПоГоризонтали", Ложь, Истина);

	ДанныеЭлемента = ДобавитьЭлементФормыВМассивИзменяемыхПараметров(ПараметрыЭлементов, Элементы.ГруппаСерииКоманды);
	ДобавитьИзменяемыеПараметрыЭлементаФормы(ДанныеЭлемента, "ВертикальноеПоложениеВГруппе",
		ВертикальноеПоложениеЭлемента.Авто, ВертикальноеПоложениеЭлемента.Низ);

	ДанныеЭлемента = ДобавитьЭлементФормыВМассивИзменяемыхПараметров(ПараметрыЭлементов, Элементы.ОтменаВыбораСерии);
	ДобавитьИзменяемыеПараметрыЭлементаФормы(ДанныеЭлемента, "РастягиватьПоГоризонтали", Ложь, Истина);
	
КонецПроцедуры

Процедура ЗаполнитьПараметрыЭлементовЗаменыПрав(Элементы, ПараметрыЭлементов)

	ДанныеЭлемента = ДобавитьЭлементФормыВМассивИзменяемыхПараметров(ПараметрыЭлементов, Элементы.ГруппаЗаменаПрав);
	ДобавитьИзменяемыеПараметрыЭлементаФормы(ДанныеЭлемента, "ГоризонтальноеПоложениеПодчиненных",
		ГоризонтальноеПоложениеЭлемента.Авто, ГоризонтальноеПоложениеЭлемента.Лево);
	ДобавитьИзменяемыеПараметрыЭлементаФормы(ДанныеЭлемента, "РастягиватьПоГоризонтали", Неопределено, Истина);

	ДанныеЭлемента = ДобавитьЭлементФормыВМассивИзменяемыхПараметров(ПараметрыЭлементов,
		Элементы.ДекорацияЛинияПредупреждения);
	ДобавитьИзменяемыеПараметрыЭлементаФормы(ДанныеЭлемента, "Видимость", Истина, Ложь);

	ДанныеЭлемента = ДобавитьЭлементФормыВМассивИзменяемыхПараметров(ПараметрыЭлементов, Элементы.Декорация12);
	ДобавитьИзменяемыеПараметрыЭлементаФормы(ДанныеЭлемента, "Видимость", Истина, Ложь);

	ДанныеЭлемента = ДобавитьЭлементФормыВМассивИзменяемыхПараметров(ПараметрыЭлементов, Элементы.Группа6);
	ДобавитьИзменяемыеПараметрыЭлементаФормы(ДанныеЭлемента, "ГоризонтальноеПоложениеПодчиненных",
		ГоризонтальноеПоложениеЭлемента.Авто, ГоризонтальноеПоложениеЭлемента.Лево);
	ДобавитьИзменяемыеПараметрыЭлементаФормы(ДанныеЭлемента, "РастягиватьПоГоризонтали", Неопределено, Ложь);

	ДанныеЭлемента = ДобавитьЭлементФормыВМассивИзменяемыхПараметров(ПараметрыЭлементов,
		Элементы.ГруппаЗаменаПравПолеИКоманда);
	ДобавитьИзменяемыеПараметрыЭлементаФормы(ДанныеЭлемента, "РастягиватьПоВертикали", Неопределено, Истина);

	ДанныеЭлемента = ДобавитьЭлементФормыВМассивИзменяемыхПараметров(ПараметрыЭлементов,
		Элементы.ПодтвердитьПарольКассира);
	ДобавитьИзменяемыеПараметрыЭлементаФормы(ДанныеЭлемента, "Высота", 0, 2);
	ДобавитьИзменяемыеПараметрыЭлементаФормы(ДанныеЭлемента, "ВертикальноеПоложениеВГруппе",
		ВертикальноеПоложениеЭлемента.Авто, ВертикальноеПоложениеЭлемента.Низ);
		
	ДанныеЭлемента = ДобавитьЭлементФормыВМассивИзменяемыхПараметров(ПараметрыЭлементов,
		Элементы.ОтменитьПарольКассира);
	ДобавитьИзменяемыеПараметрыЭлементаФормы(ДанныеЭлемента, "Высота", 0, 2);
	ДобавитьИзменяемыеПараметрыЭлементаФормы(ДанныеЭлемента, "ВертикальноеПоложениеВГруппе",
		ВертикальноеПоложениеЭлемента.Авто, ВертикальноеПоложениеЭлемента.Низ);

	ДанныеЭлемента = ДобавитьЭлементФормыВМассивИзменяемыхПараметров(ПараметрыЭлементов, Элементы.Декорация13);
	ДобавитьИзменяемыеПараметрыЭлементаФормы(ДанныеЭлемента, "Видимость", Истина, Ложь);

	ДанныеЭлемента = ДобавитьЭлементФормыВМассивИзменяемыхПараметров(ПараметрыЭлементов,
		Элементы.ГруппаПравоУдалитьПоШтрихкоду);
	ДобавитьИзменяемыеПараметрыЭлементаФормы(ДанныеЭлемента, "РастягиватьПоГоризонтали", Неопределено, Ложь);

	ДанныеЭлемента = ДобавитьЭлементФормыВМассивИзменяемыхПараметров(ПараметрыЭлементов, Элементы.ДекорацияЛиния);
	ДобавитьИзменяемыеПараметрыЭлементаФормы(ДанныеЭлемента, "Видимость", Истина, Ложь);

	ДанныеЭлемента = ДобавитьЭлементФормыВМассивИзменяемыхПараметров(ПараметрыЭлементов,
		Элементы.ДекорацияУдалитьПоШтрихкоду);
	ДобавитьИзменяемыеПараметрыЭлементаФормы(ДанныеЭлемента, "Высота", 3, 2);

	ДанныеЭлемента = ДобавитьЭлементФормыВМассивИзменяемыхПараметров(ПараметрыЭлементов, Элементы.ШтрихкодДляПоиска);
	ДобавитьИзменяемыеПараметрыЭлементаФормы(ДанныеЭлемента, "РастягиватьПоГоризонтали", Ложь, Неопределено);
	
	ДанныеЭлемента = ДобавитьЭлементФормыВМассивИзменяемыхПараметров(ПараметрыЭлементов,
		Элементы.ГруппаПравоУдалитьПоШтрихкодуКоманды);
	ДобавитьИзменяемыеПараметрыЭлементаФормы(ДанныеЭлемента, "ВертикальноеПоложениеПодчиненных",
		ВертикальноеПоложениеЭлемента.Авто, ВертикальноеПоложениеЭлемента.Низ);
	ДобавитьИзменяемыеПараметрыЭлементаФормы(ДанныеЭлемента, "РастягиватьПоВертикали", Неопределено, Истина);
	
	ДанныеЭлемента = ДобавитьЭлементФормыВМассивИзменяемыхПараметров(ПараметрыЭлементов, Элементы.ПодтвердитьНайтиВЧеке);
	ДобавитьИзменяемыеПараметрыЭлементаФормы(ДанныеЭлемента, "Высота", 0, 2);

	ДанныеЭлемента = ДобавитьЭлементФормыВМассивИзменяемыхПараметров(ПараметрыЭлементов, Элементы.ОтменаНайтиВЧеке);
	ДобавитьИзменяемыеПараметрыЭлементаФормы(ДанныеЭлемента, "Высота", 0, 2);
	
	ДанныеЭлемента = ДобавитьЭлементФормыВМассивИзменяемыхПараметров(ПараметрыЭлементов,
		Элементы.ДекорацияЛинияПоискПоШтрихкоду);
	ДобавитьИзменяемыеПараметрыЭлементаФормы(ДанныеЭлемента, "Видимость", Истина, Ложь);
		
	ДанныеЭлемента = ДобавитьЭлементФормыВМассивИзменяемыхПараметров(ПараметрыЭлементов,
		Элементы.ДекорацияПоискПоШтрихкоду);
	ДобавитьИзменяемыеПараметрыЭлементаФормы(ДанныеЭлемента, "Высота", 3, 2);
	
	ДанныеЭлемента = ДобавитьЭлементФормыВМассивИзменяемыхПараметров(ПараметрыЭлементов,
		Элементы.РучнойШтрихкодДляПоиска);
	ДобавитьИзменяемыеПараметрыЭлементаФормы(ДанныеЭлемента, "РастягиватьПоГоризонтали", Ложь, Неопределено);
	
	ДанныеЭлемента = ДобавитьЭлементФормыВМассивИзменяемыхПараметров(ПараметрыЭлементов,
		Элементы.ГруппаНайтиПоШтрихкодуКоманды);
	ДобавитьИзменяемыеПараметрыЭлементаФормы(ДанныеЭлемента, "ВертикальноеПоложениеПодчиненных",
		ВертикальноеПоложениеЭлемента.Авто, ВертикальноеПоложениеЭлемента.Низ);
	ДобавитьИзменяемыеПараметрыЭлементаФормы(ДанныеЭлемента, "РастягиватьПоВертикали", Неопределено, Истина);
	
	ДанныеЭлемента = ДобавитьЭлементФормыВМассивИзменяемыхПараметров(ПараметрыЭлементов,
		Элементы.ПодтвердитьНайтиПоШтрихкоду);
	ДобавитьИзменяемыеПараметрыЭлементаФормы(ДанныеЭлемента, "Высота", 0, 2);
	
	ДанныеЭлемента = ДобавитьЭлементФормыВМассивИзменяемыхПараметров(ПараметрыЭлементов, Элементы.ОтменаНайтиПоШтрихкоду);
	ДобавитьИзменяемыеПараметрыЭлементаФормы(ДанныеЭлемента, "Высота", 0, 2);

	ДанныеЭлемента = ДобавитьЭлементФормыВМассивИзменяемыхПараметров(ПараметрыЭлементов,
		Элементы.ДекорацияЛинияГруппаВвестиКомментарийКЧеку);
	ДобавитьИзменяемыеПараметрыЭлементаФормы(ДанныеЭлемента, "Видимость", Истина, Ложь);

	ДанныеЭлемента = ДобавитьЭлементФормыВМассивИзменяемыхПараметров(ПараметрыЭлементов, Элементы.Декорация35);
	ДобавитьИзменяемыеПараметрыЭлементаФормы(ДанныеЭлемента, "Видимость", Истина, Ложь);
	
	ДанныеЭлемента = ДобавитьЭлементФормыВМассивИзменяемыхПараметров(ПараметрыЭлементов, 
		Элементы.ДекорацияЗаголовокЗаменаПрав);
	ДобавитьИзменяемыеПараметрыЭлементаФормы(ДанныеЭлемента, "Ширина", 22, 32);
	
КонецПроцедуры

Процедура ЗаполнитьПараметрыЭлементовЭквайринга(Элементы, ПараметрыЭлементов)

	ДанныеЭлемента = ДобавитьЭлементФормыВМассивИзменяемыхПараметров(ПараметрыЭлементов,
		Элементы.ГруппаВопросЭквайринговаяОперация);
	ДобавитьИзменяемыеПараметрыЭлементаФормы(ДанныеЭлемента, "РастягиватьПоГоризонтали", Неопределено, Ложь);

	ДанныеЭлемента = ДобавитьЭлементФормыВМассивИзменяемыхПараметров(ПараметрыЭлементов,
		Элементы.ДекорацияЛинияПредупреждение1);
	ДобавитьИзменяемыеПараметрыЭлементаФормы(ДанныеЭлемента, "Видимость", Истина, Ложь);

	ДанныеЭлемента = ДобавитьЭлементФормыВМассивИзменяемыхПараметров(ПараметрыЭлементов,
		Элементы.ДекорацияНадписьЭквайрингУспешно);
	ДобавитьИзменяемыеПараметрыЭлементаФормы(ДанныеЭлемента, "РастягиватьПоГоризонтали", Истина, Неопределено);

	ДанныеЭлемента = ДобавитьЭлементФормыВМассивИзменяемыхПараметров(ПараметрыЭлементов, Элементы.ГруппаОтветыДаНет);
	ДобавитьИзменяемыеПараметрыЭлементаФормы(ДанныеЭлемента, "РастягиватьПоГоризонтали", Истина, Неопределено);
	ДобавитьИзменяемыеПараметрыЭлементаФормы(ДанныеЭлемента, "РастягиватьПоВертикали", Неопределено, Истина);
	
	ДанныеЭлемента = ДобавитьЭлементФормыВМассивИзменяемыхПараметров(ПараметрыЭлементов,
		Элементы.ГруппаОтменаОплатыПоКарте);
	ДобавитьИзменяемыеПараметрыЭлементаФормы(ДанныеЭлемента, "Группировка",
		ГруппировкаПодчиненныхЭлементовФормы.Вертикальная, ГруппировкаПодчиненныхЭлементовФормы.ГоризонтальнаяВсегда);

	ДанныеЭлемента = ДобавитьЭлементФормыВМассивИзменяемыхПараметров(ПараметрыЭлементов,
		Элементы.ДекорацияЛинияПредупреждение2);
	ДобавитьИзменяемыеПараметрыЭлементаФормы(ДанныеЭлемента, "Видимость", Истина, Ложь);

	ДанныеЭлемента = ДобавитьЭлементФормыВМассивИзменяемыхПараметров(ПараметрыЭлементов,
		Элементы.ГруппаКартинкаКнопкаОтменаОтплатыПоКарте);
	ДобавитьИзменяемыеПараметрыЭлементаФормы(ДанныеЭлемента, "РастягиватьПоГоризонтали", Неопределено, Ложь);
	
	ДанныеЭлемента = ДобавитьЭлементФормыВМассивИзменяемыхПараметров(ПараметрыЭлементов,
		Элементы.ДекорацияКартинкаЭквайринговыйТерминал1);
	ДобавитьИзменяемыеПараметрыЭлементаФормы(ДанныеЭлемента, "Ширина", 25, 14);
	
	ОписаниеРасположения = ОписаниеРасположенияЭлемента(Элементы.ГруппаОтменаОплатыПоКарте, Неопределено,
		Элементы.ГруппаКартинкаКнопкаОтменаОтплатыПоКарте, Неопределено);
	ДанныеЭлемента = ДобавитьЭлементФормыВМассивИзменяемыхПараметров(ПараметрыЭлементов,
		Элементы.ГруппаОтменаПрошлаУспешно, ОписаниеРасположения);
	ДобавитьИзменяемыеПараметрыЭлементаФормы(ДанныеЭлемента, "ВертикальноеПоложениеПодчиненных",
		ВертикальноеПоложениеЭлемента.Авто, ВертикальноеПоложениеЭлемента.Низ);
	ДобавитьИзменяемыеПараметрыЭлементаФормы(ДанныеЭлемента, "ВертикальноеПоложениеВГруппе",
		ВертикальноеПоложениеЭлемента.Авто, ВертикальноеПоложениеЭлемента.Низ);
	ДобавитьИзменяемыеПараметрыЭлементаФормы(ДанныеЭлемента, "РастягиватьПоВертикали", Неопределено, Истина);

	ДанныеЭлемента = ДобавитьЭлементФормыВМассивИзменяемыхПараметров(ПараметрыЭлементов,
		Элементы.ДекорацияНадписьЭквайрингОшибка);
	ДобавитьИзменяемыеПараметрыЭлементаФормы(ДанныеЭлемента, "Ширина", 25, 27);
	ДобавитьИзменяемыеПараметрыЭлементаФормы(ДанныеЭлемента, "Высота", 9, 10);
	ДобавитьИзменяемыеПараметрыЭлементаФормы(ДанныеЭлемента, "ВертикальноеПоложениеВГруппе",
		ВертикальноеПоложениеЭлемента.Центр, ВертикальноеПоложениеЭлемента.Авто);
	ДобавитьИзменяемыеПараметрыЭлементаФормы(ДанныеЭлемента, "РастягиватьПоГоризонтали", Истина, Неопределено);

	ДанныеЭлемента = ДобавитьЭлементФормыВМассивИзменяемыхПараметров(ПараметрыЭлементов,
		Элементы.ГруппаЭквайринговаяОперация);
	ДобавитьИзменяемыеПараметрыЭлементаФормы(ДанныеЭлемента, "РастягиватьПоГоризонтали", Неопределено, Ложь);

	ДанныеЭлемента = ДобавитьЭлементФормыВМассивИзменяемыхПараметров(ПараметрыЭлементов,
		Элементы.ДекорацияЛинияПредупреждение3);
	ДобавитьИзменяемыеПараметрыЭлементаФормы(ДанныеЭлемента, "Видимость", Истина, Ложь);

	ДанныеЭлемента = ДобавитьЭлементФормыВМассивИзменяемыхПараметров(ПараметрыЭлементов,
		Элементы.ДекорацияЭквОперацияЗаголовок);
	ДобавитьИзменяемыеПараметрыЭлементаФормы(ДанныеЭлемента, "Высота", 2, 1);
	ДобавитьИзменяемыеПараметрыЭлементаФормы(ДанныеЭлемента, "ВысотаЗаголовка", 2, 0);

	ДанныеЭлемента = ДобавитьЭлементФормыВМассивИзменяемыхПараметров(ПараметрыЭлементов,
		Элементы.ДекорацияКартинкаЭквОперация);
	ДобавитьИзменяемыеПараметрыЭлементаФормы(ДанныеЭлемента, "ГоризонтальноеПоложениеВГруппе",
		ГоризонтальноеПоложениеЭлемента.Авто, ГоризонтальноеПоложениеЭлемента.Центр);

	ДанныеЭлемента = ДобавитьЭлементФормыВМассивИзменяемыхПараметров(ПараметрыЭлементов,
		Элементы.ДекорацияЭквОперацияОбменДанными);
	ДобавитьИзменяемыеПараметрыЭлементаФормы(ДанныеЭлемента, "РастягиватьПоГоризонтали", Истина, Неопределено);

	ДанныеЭлемента = ДобавитьЭлементФормыВМассивИзменяемыхПараметров(ПараметрыЭлементов,
		Элементы.ДекорацияЭквОперацияДействие);
	ДобавитьИзменяемыеПараметрыЭлементаФормы(ДанныеЭлемента, "Высота", 2, 1);
	ДобавитьИзменяемыеПараметрыЭлементаФормы(ДанныеЭлемента, "ВысотаЗаголовка", 2, 0);
	ДобавитьИзменяемыеПараметрыЭлементаФормы(ДанныеЭлемента, "РастягиватьПоГоризонтали", Неопределено, Истина);

	ДанныеЭлемента = ДобавитьЭлементФормыВМассивИзменяемыхПараметров(ПараметрыЭлементов, Элементы.ГруппаСторноЭквайринг);
	ДобавитьИзменяемыеПараметрыЭлементаФормы(ДанныеЭлемента, "Группировка",
		ГруппировкаПодчиненныхЭлементовФормы.Вертикальная, ГруппировкаПодчиненныхЭлементовФормы.ГоризонтальнаяВсегда);

	ДанныеЭлемента = ДобавитьЭлементФормыВМассивИзменяемыхПараметров(ПараметрыЭлементов,
		Элементы.ДекорацияЛинияПредупреждение4);
	ДобавитьИзменяемыеПараметрыЭлементаФормы(ДанныеЭлемента, "Видимость", Истина, Ложь);

	ДанныеЭлемента = ДобавитьЭлементФормыВМассивИзменяемыхПараметров(ПараметрыЭлементов, Элементы.Декорация18);
	ДобавитьИзменяемыеПараметрыЭлементаФормы(ДанныеЭлемента, "Видимость", Истина, Ложь);

	ДанныеЭлемента = ДобавитьЭлементФормыВМассивИзменяемыхПараметров(ПараметрыЭлементов,
		Элементы.ГруппаИнфоОшибкаВертикальная1);
	ДобавитьИзменяемыеПараметрыЭлементаФормы(ДанныеЭлемента, "РастягиватьПоВертикали", Неопределено, Истина);

	ДанныеЭлемента = ДобавитьЭлементФормыВМассивИзменяемыхПараметров(ПараметрыЭлементов,
		Элементы.ЗаголовокСторноЭквайринг);
	ДобавитьИзменяемыеПараметрыЭлементаФормы(ДанныеЭлемента, "Ширина", 23, 36);
	ДобавитьИзменяемыеПараметрыЭлементаФормы(ДанныеЭлемента, "Высота", 3, 2);

	ДанныеЭлемента = ДобавитьЭлементФормыВМассивИзменяемыхПараметров(ПараметрыЭлементов, Элементы.ТекстСторноЭквайринг);
	ДобавитьИзменяемыеПараметрыЭлементаФормы(ДанныеЭлемента, "Ширина", 23, 36);
	ДобавитьИзменяемыеПараметрыЭлементаФормы(ДанныеЭлемента, "Высота", 9, 6);
	
	ОписаниеРасположения = ОписаниеРасположенияЭлемента(Элементы.ГруппаСторноЭквайринг, Неопределено,
		Элементы.ГруппаИнфоОшибкаВертикальная1, Неопределено);
	ДанныеЭлемента = ДобавитьЭлементФормыВМассивИзменяемыхПараметров(ПараметрыЭлементов,
		Элементы.ВыполнитьСторноПоКарте, ОписаниеРасположения);
	ДобавитьИзменяемыеПараметрыЭлементаФормы(ДанныеЭлемента, "РастягиватьПоГоризонтали", Истина, Ложь);
	
КонецПроцедуры

Процедура ЗаполнитьПараметрыЭлементовПлатежнойСистемы(Элементы, ПараметрыЭлементов)
	
	ДанныеЭлемента = ДобавитьЭлементФормыВМассивИзменяемыхПараметров(ПараметрыЭлементов, Элементы.ГруппаПлатежнаяСистема);
	ДобавитьИзменяемыеПараметрыЭлементаФормы(ДанныеЭлемента, "Группировка",
		ГруппировкаПодчиненныхЭлементовФормы.Вертикальная, ГруппировкаПодчиненныхЭлементовФормы.ГоризонтальнаяВсегда);
	
	ОписаниеРасположения = ОписаниеРасположенияЭлемента(Элементы.ГруппаПлатежнаяСистема,
		Элементы.ГруппаСлоевРазделПлатежнаяСистема, Элементы.ГруппаПлатежнаяСистема, Неопределено);
	ДанныеЭлемента = ДобавитьЭлементФормыВМассивИзменяемыхПараметров(ПараметрыЭлементов,
		Элементы.ГруппаЗаголовокПлатежнаяСистема, ОписаниеРасположения);
	ДобавитьИзменяемыеПараметрыЭлементаФормы(ДанныеЭлемента, "РастягиватьПоГоризонтали", Неопределено, Истина);
	
	ДанныеЭлемента = ДобавитьЭлементФормыВМассивИзменяемыхПараметров(ПараметрыЭлементов, Элементы.НадписьЗаголовок);
	ДобавитьИзменяемыеПараметрыЭлементаФормы(ДанныеЭлемента, "Видимость", Истина, Ложь);
	
	ОписаниеРасположения = ОписаниеРасположенияЭлемента(
		Элементы.ГруппаПанельДействий, Элементы.ГруппаПлатежнаяСистемаКоманднаяПанель,
		Элементы.ГруппаПанельДействий, Элементы.ГруппаПлатежнаяСистемаКоманднаяПанель);
		
	ДанныеЭлемента = ДобавитьЭлементФормыВМассивИзменяемыхПараметров(ПараметрыЭлементов,
		Элементы.ГруппаСлоевПанелиДействийПлатежнойСистемы, ОписаниеРасположения);

	ОписаниеРасположения = ОписаниеРасположенияЭлемента(
		Элементы.ГруппаQRКод, Элементы.ГруппаПояснениеКQRКоду,
		Элементы.ГруппаQRКод, Неопределено);

	ДанныеЭлемента = ДобавитьЭлементФормыВМассивИзменяемыхПараметров(ПараметрыЭлементов,
	Элементы.ДанныеQRКода, ОписаниеРасположения);

	ОписаниеРасположения = ОписаниеРасположенияЭлемента(
		Элементы.ГруппаQRКодПовтор, Элементы.ГруппаПояснениеКQRКодуПовтор,
		Элементы.ГруппаQRКодПовтор, Неопределено);
		
	ДанныеЭлемента = ДобавитьЭлементФормыВМассивИзменяемыхПараметров(ПараметрыЭлементов,
	Элементы.ДанныеQRКодаПовтор, ОписаниеРасположения);

	ДанныеЭлемента = ДобавитьЭлементФормыВМассивИзменяемыхПараметров(
		ПараметрыЭлементов,
		Элементы.ГруппаQRКод);
		
	ДобавитьИзменяемыеПараметрыЭлементаФормы(
		ДанныеЭлемента, "Группировка",
		ГруппировкаПодчиненныхЭлементовФормы.Вертикальная, ГруппировкаПодчиненныхЭлементовФормы.ГоризонтальнаяВсегда);
		
	ДанныеЭлемента = ДобавитьЭлементФормыВМассивИзменяемыхПараметров(
		ПараметрыЭлементов,
		Элементы.ГруппаQRКодПовтор);
		
	ДобавитьИзменяемыеПараметрыЭлементаФормы(
		ДанныеЭлемента, "Группировка",
		ГруппировкаПодчиненныхЭлементовФормы.Вертикальная, ГруппировкаПодчиненныхЭлементовФормы.ГоризонтальнаяВсегда);
		
	ДанныеЭлемента = ДобавитьЭлементФормыВМассивИзменяемыхПараметров(ПараметрыЭлементов, Элементы.ИдентификаторОплаты);
	ДобавитьИзменяемыеПараметрыЭлементаФормы(ДанныеЭлемента, "АвтоМаксимальнаяШирина", Истина, Ложь);
	ДобавитьИзменяемыеПараметрыЭлементаФормы(ДанныеЭлемента, "МаксимальнаяШирина", 0, 24);

	ДанныеЭлемента = ДобавитьЭлементФормыВМассивИзменяемыхПараметров(ПараметрыЭлементов, Элементы.ПлатежнаяСистема);
	ДобавитьИзменяемыеПараметрыЭлементаФормы(ДанныеЭлемента, "МаксимальнаяШирина", 0, 24);

	ДанныеЭлемента = ДобавитьЭлементФормыВМассивИзменяемыхПараметров(ПараметрыЭлементов, Элементы.ДекорацияПустая);
	ДобавитьИзменяемыеПараметрыЭлементаФормы(ДанныеЭлемента, "Видимость", Истина, Ложь);

	ДанныеЭлемента = ДобавитьЭлементФормыВМассивИзменяемыхПараметров(ПараметрыЭлементов,
		Элементы.ДекорацияАвтоматическаяФискализацияНадпись);
	ДобавитьИзменяемыеПараметрыЭлементаФормы(ДанныеЭлемента, "ГоризонтальноеПоложениеВГруппе",
		ГоризонтальноеПоложениеЭлемента.Центр, ГоризонтальноеПоложениеЭлемента.Лево);
	
	ДанныеЭлемента = ДобавитьЭлементФормыВМассивИзменяемыхПараметров(ПараметрыЭлементов,
		Элементы.ГруппаПлатежнаяСистемаКоманднаяПанель);
	ДобавитьИзменяемыеПараметрыЭлементаФормы(ДанныеЭлемента, "РастягиватьПоГоризонтали", Неопределено, Истина);

	ДанныеЭлемента = ДобавитьЭлементФормыВМассивИзменяемыхПараметров(ПараметрыЭлементов,
		Элементы.ГруппаДействияПлатежнаяСистема);
	ДобавитьИзменяемыеПараметрыЭлементаФормы(ДанныеЭлемента, "ВертикальноеПоложениеПодчиненных",
		ВертикальноеПоложениеЭлемента.Авто, ВертикальноеПоложениеЭлемента.Низ);
	ДобавитьИзменяемыеПараметрыЭлементаФормы(ДанныеЭлемента, "РастягиватьПоВертикали", Неопределено, Истина);

	ДанныеЭлемента = ДобавитьЭлементФормыВМассивИзменяемыхПараметров(ПараметрыЭлементов,
		Элементы.ГруппаПлатежнаяСистемаЛево);
	ДобавитьИзменяемыеПараметрыЭлементаФормы(ДанныеЭлемента, "Отображение", ОтображениеОбычнойГруппы.СлабоеВыделение,
		ОтображениеОбычнойГруппы.Нет);
	ДобавитьИзменяемыеПараметрыЭлементаФормы(ДанныеЭлемента, "Группировка",
		ГруппировкаПодчиненныхЭлементовФормы.Вертикальная, ГруппировкаПодчиненныхЭлементовФормы.ГоризонтальнаяВсегда);

	ДанныеЭлемента = ДобавитьЭлементФормыВМассивИзменяемыхПараметров(ПараметрыЭлементов, Элементы.ФормаЗавершитьОплату);
	ДобавитьИзменяемыеПараметрыЭлементаФормы(ДанныеЭлемента, "Ширина", 12, 16);
	ДобавитьИзменяемыеПараметрыЭлементаФормы(ДанныеЭлемента, "Высота", 0, 2);
	ДобавитьИзменяемыеПараметрыЭлементаФормы(ДанныеЭлемента, "ОтображениеПодсказки", ОтображениеПодсказки.ОтображатьСнизу,
		ОтображениеПодсказки.ОтображатьСверху);

	ДанныеЭлемента = ДобавитьЭлементФормыВМассивИзменяемыхПараметров(ПараметрыЭлементов,
		Элементы.ФормаЗавершитьПринудительно);
	ДобавитьИзменяемыеПараметрыЭлементаФормы(ДанныеЭлемента, "ВысотаЗаголовка", 0, 1);
	ДобавитьИзменяемыеПараметрыЭлементаФормы(ДанныеЭлемента, "Ширина", 12, 16);
	ДобавитьИзменяемыеПараметрыЭлементаФормы(ДанныеЭлемента, "Высота", 0, 2);

	ДанныеЭлемента = ДобавитьЭлементФормыВМассивИзменяемыхПараметров(ПараметрыЭлементов,
		Элементы.ГруппаПлатежнаяСистемаПраво);
	ДобавитьИзменяемыеПараметрыЭлементаФормы(ДанныеЭлемента, "Отображение",
		ОтображениеОбычнойГруппы.СлабоеВыделение, ОтображениеОбычнойГруппы.Нет);
	ДобавитьИзменяемыеПараметрыЭлементаФормы(ДанныеЭлемента, "Группировка",
		ГруппировкаПодчиненныхЭлементовФормы.Вертикальная, ГруппировкаПодчиненныхЭлементовФормы.ГоризонтальнаяВсегда);

	ДанныеЭлемента = ДобавитьЭлементФормыВМассивИзменяемыхПараметров(ПараметрыЭлементов, Элементы.ФормаОтменитьОплату);
	ДобавитьИзменяемыеПараметрыЭлементаФормы(ДанныеЭлемента, "Высота", 0, 2);

	ДанныеЭлемента = ДобавитьЭлементФормыВМассивИзменяемыхПараметров(ПараметрыЭлементов, Элементы.ФормаОтложить);
	ДобавитьИзменяемыеПараметрыЭлементаФормы(ДанныеЭлемента, "Высота", 1, 2);

	ДанныеЭлемента = ДобавитьЭлементФормыВМассивИзменяемыхПараметров(ПараметрыЭлементов, Элементы.ГруппаВсегдаВыводить);
	ДобавитьИзменяемыеПараметрыЭлементаФормы(ДанныеЭлемента, "Видимость", Истина, Ложь);

	ДанныеЭлемента = ДобавитьЭлементФормыВМассивИзменяемыхПараметров(ПараметрыЭлементов,
		Элементы.ДекорацияЛинияПредупрежденияПодтвержденияОплаты);
	ДобавитьИзменяемыеПараметрыЭлементаФормы(ДанныеЭлемента, "Видимость", Истина, Ложь);

	ДанныеЭлемента = ДобавитьЭлементФормыВМассивИзменяемыхПараметров(ПараметрыЭлементов, Элементы.Декорация26);
	ДобавитьИзменяемыеПараметрыЭлементаФормы(ДанныеЭлемента, "Видимость", Истина, Ложь);

	ДанныеЭлемента = ДобавитьЭлементФормыВМассивИзменяемыхПараметров(ПараметрыЭлементов, Элементы.Группа12);
	ДобавитьИзменяемыеПараметрыЭлементаФормы(ДанныеЭлемента, "РастягиватьПоВертикали", Ложь, Истина);
	
	ОписаниеРасположения = ОписаниеРасположенияЭлемента(Элементы.Группа12,
		Элементы.ДекорацияТекстПодтверждениеОплатыОшибка, Элементы.Группа12, Неопределено);
	ДанныеЭлемента = ДобавитьЭлементФормыВМассивИзменяемыхПараметров(ПараметрыЭлементов,
		Элементы.ПодтвердитьПарольКассираПодтвержденияОплаты, ОписаниеРасположения);
	ДобавитьИзменяемыеПараметрыЭлементаФормы(ДанныеЭлемента, "Высота", 0, 2);
	ДобавитьИзменяемыеПараметрыЭлементаФормы(ДанныеЭлемента, "ВертикальноеПоложениеВГруппе",
		ВертикальноеПоложениеЭлемента.Авто, ВертикальноеПоложениеЭлемента.Низ);

	ДанныеЭлемента = ДобавитьЭлементФормыВМассивИзменяемыхПараметров(ПараметрыЭлементов, Элементы.ДекорацияЛинияВопроса);
	ДобавитьИзменяемыеПараметрыЭлементаФормы(ДанныеЭлемента, "Видимость", Истина, Ложь);

	ДанныеЭлемента = ДобавитьЭлементФормыВМассивИзменяемыхПараметров(ПараметрыЭлементов, Элементы.Декорация27);
	ДобавитьИзменяемыеПараметрыЭлементаФормы(ДанныеЭлемента, "Видимость", Истина, Ложь);

	ДанныеЭлемента = ДобавитьЭлементФормыВМассивИзменяемыхПараметров(ПараметрыЭлементов, Элементы.Группа15);
	ДобавитьИзменяемыеПараметрыЭлементаФормы(ДанныеЭлемента, "РастягиватьПоВертикали", Ложь, Истина);

	ДанныеЭлемента = ДобавитьЭлементФормыВМассивИзменяемыхПараметров(ПараметрыЭлементов,
		Элементы.КомандаЗакрытьПринудительно);
	ДобавитьИзменяемыеПараметрыЭлементаФормы(ДанныеЭлемента, "Высота", 0, 2);
	ДобавитьИзменяемыеПараметрыЭлементаФормы(ДанныеЭлемента, "ВертикальноеПоложениеВГруппе",
		ВертикальноеПоложениеЭлемента.Авто, ВертикальноеПоложениеЭлемента.Низ);

	ДанныеЭлемента = ДобавитьЭлементФормыВМассивИзменяемыхПараметров(ПараметрыЭлементов, Элементы.ДекорацияЛинияВопроса1);
	ДобавитьИзменяемыеПараметрыЭлементаФормы(ДанныеЭлемента, "Видимость", Истина, Ложь);

	ДанныеЭлемента = ДобавитьЭлементФормыВМассивИзменяемыхПараметров(ПараметрыЭлементов, Элементы.Декорация32);
	ДобавитьИзменяемыеПараметрыЭлементаФормы(ДанныеЭлемента, "Видимость", Истина, Ложь);

	ДанныеЭлемента = ДобавитьЭлементФормыВМассивИзменяемыхПараметров(ПараметрыЭлементов, Элементы.Группа17);
	ДобавитьИзменяемыеПараметрыЭлементаФормы(ДанныеЭлемента, "РастягиватьПоВертикали", Ложь, Истина);

	ДанныеЭлемента = ДобавитьЭлементФормыВМассивИзменяемыхПараметров(ПараметрыЭлементов,
		Элементы.КомандаОтложитьПринудительно);
	ДобавитьИзменяемыеПараметрыЭлементаФормы(ДанныеЭлемента, "Высота", 0, 2);
	ДобавитьИзменяемыеПараметрыЭлементаФормы(ДанныеЭлемента, "ВертикальноеПоложениеВГруппе",
		ВертикальноеПоложениеЭлемента.Авто, ВертикальноеПоложениеЭлемента.Низ);

	ДанныеЭлемента = ДобавитьЭлементФормыВМассивИзменяемыхПараметров(ПараметрыЭлементов,
		Элементы.ПлатежнаяСистема_ИдентификаторПС);
	ДобавитьИзменяемыеПараметрыЭлементаФормы(ДанныеЭлемента, "АвтоМаксимальнаяШирина", Истина, Ложь);
	ДобавитьИзменяемыеПараметрыЭлементаФормы(ДанныеЭлемента, "МаксимальнаяШирина", 0, 23);
	
КонецПроцедуры

Процедура ЗаполнитьПараметрыЭлементовНСПК(Элементы, ПараметрыЭлементов)
	
	ДанныеЭлемента = ДобавитьЭлементФормыВМассивИзменяемыхПараметров(ПараметрыЭлементов,
		Элементы.ГруппаПанельИдентификаторКорзиныНСПК);
	ДобавитьИзменяемыеПараметрыЭлементаФормы(ДанныеЭлемента, "РастягиватьПоВертикали", Неопределено, Истина);

	ДанныеЭлемента = ДобавитьЭлементФормыВМассивИзменяемыхПараметров(ПараметрыЭлементов,
		Элементы.ИдентификаторКорзиныНСПК);
	ДобавитьИзменяемыеПараметрыЭлементаФормы(ДанныеЭлемента, "АвтоМаксимальнаяШирина", Истина, Ложь);
	ДобавитьИзменяемыеПараметрыЭлементаФормы(ДанныеЭлемента, "МаксимальнаяШирина", 0, 24);
	
	ОписаниеРасположения = ОписаниеРасположенияЭлемента(Элементы.ГруппаПанельИдентификаторКорзиныНСПК,
		Элементы.ИдентификаторКорзиныНСПК, Элементы.ГруппаПанельИдентификаторКорзиныНСПК, Неопределено);
	ДанныеЭлемента = ДобавитьЭлементФормыВМассивИзменяемыхПараметров(ПараметрыЭлементов,
		Элементы.ГруппаИдентификаторКорзиныНСПК, ОписаниеРасположения);
	ДобавитьИзменяемыеПараметрыЭлементаФормы(ДанныеЭлемента, "ВертикальноеПоложениеВГруппе",
		ВертикальноеПоложениеЭлемента.Авто, ВертикальноеПоложениеЭлемента.Низ);

	ДанныеЭлемента = ДобавитьЭлементФормыВМассивИзменяемыхПараметров(ПараметрыЭлементов,
		Элементы.ИдентификаторКорзиныНСПКЗавершить);
	ДобавитьИзменяемыеПараметрыЭлементаФормы(ДанныеЭлемента, "Высота", 0, 2);

	ДанныеЭлемента = ДобавитьЭлементФормыВМассивИзменяемыхПараметров(ПараметрыЭлементов,
		Элементы.ИдентификаторКорзиныНСПКОтменить);
	ДобавитьИзменяемыеПараметрыЭлементаФормы(ДанныеЭлемента, "Высота", 0, 2);
	
	ОписаниеРасположения = ОписаниеРасположенияЭлемента(Элементы.ГруппаПанельИдентификаторКорзиныНСПК, Неопределено,
		Элементы.ГруппаИдентификаторКорзиныНСПК, Неопределено);
	ДанныеЭлемента = ДобавитьЭлементФормыВМассивИзменяемыхПараметров(ПараметрыЭлементов,
		Элементы.ПолучитьИдентификаторыКорзинПокупокНСПК, ОписаниеРасположения);
	ДобавитьИзменяемыеПараметрыЭлементаФормы(ДанныеЭлемента, "Высота", 0, 2);
	ДобавитьИзменяемыеПараметрыЭлементаФормы(ДанныеЭлемента, "ОтображениеПодсказки", ОтображениеПодсказки.ОтображатьСнизу,
		ОтображениеПодсказки.Всплывающая);
	
КонецПроцедуры

Процедура ЗаполнитьПараметрыЭлементовТерминала(Элементы, ПараметрыЭлементов)
	
	ДанныеЭлемента = ДобавитьЭлементФормыВМассивИзменяемыхПараметров(ПараметрыЭлементов,
		Элементы.ГруппаЭлементыСтраницыВыбораТерминала);
	ДобавитьИзменяемыеПараметрыЭлементаФормы(ДанныеЭлемента, "РастягиватьПоГоризонтали", Неопределено, Ложь);
	ДобавитьИзменяемыеПараметрыЭлементаФормы(ДанныеЭлемента, "РастягиватьПоВертикали", Неопределено, Истина);

	ДанныеЭлемента = ДобавитьЭлементФормыВМассивИзменяемыхПараметров(ПараметрыЭлементов, Элементы.ДекорацияЛинияОтсечки);
	ДобавитьИзменяемыеПараметрыЭлементаФормы(ДанныеЭлемента, "Видимость", Истина, Ложь);

	ДанныеЭлемента = ДобавитьЭлементФормыВМассивИзменяемыхПараметров(ПараметрыЭлементов, Элементы.ЭлементыПодтверждения);
	ДобавитьИзменяемыеПараметрыЭлементаФормы(ДанныеЭлемента, "ГоризонтальноеПоложениеПодчиненных",
		ГоризонтальноеПоложениеЭлемента.Центр, ГоризонтальноеПоложениеЭлемента.Лево);
	ДобавитьИзменяемыеПараметрыЭлементаФормы(ДанныеЭлемента, "ГоризонтальноеПоложениеВГруппе",
		ГоризонтальноеПоложениеЭлемента.Авто, ГоризонтальноеПоложениеЭлемента.Лево);
	ДобавитьИзменяемыеПараметрыЭлементаФормы(ДанныеЭлемента, "РастягиватьПоГоризонтали", Истина, Неопределено);

	ДанныеЭлемента = ДобавитьЭлементФормыВМассивИзменяемыхПараметров(ПараметрыЭлементов,
		Элементы.ВыбратьЭквайринговыйТерминал);
	ДобавитьИзменяемыеПараметрыЭлементаФормы(ДанныеЭлемента, "Ширина", 7, 12);
	ДобавитьИзменяемыеПараметрыЭлементаФормы(ДанныеЭлемента, "РастягиватьПоГоризонтали", Истина, Ложь);

	ДанныеЭлемента = ДобавитьЭлементФормыВМассивИзменяемыхПараметров(ПараметрыЭлементов,
		Элементы.ОтказатьсяОтВыбораТерминала);
	ДобавитьИзменяемыеПараметрыЭлементаФормы(ДанныеЭлемента, "Ширина", 7, 12);
	ДобавитьИзменяемыеПараметрыЭлементаФормы(ДанныеЭлемента, "РастягиватьПоГоризонтали", Истина, Ложь);

	ДанныеЭлемента = ДобавитьЭлементФормыВМассивИзменяемыхПараметров(ПараметрыЭлементов,
		Элементы.ГруппаВопросАвтономнаяКасса);
	ДобавитьИзменяемыеПараметрыЭлементаФормы(ДанныеЭлемента, "РастягиватьПоГоризонтали", Неопределено, Ложь);
	ДобавитьИзменяемыеПараметрыЭлементаФормы(ДанныеЭлемента, "РастягиватьПоВертикали", Неопределено, Истина);

	ДанныеЭлемента = ДобавитьЭлементФормыВМассивИзменяемыхПараметров(ПараметрыЭлементов,
		Элементы.ДекорацияЛинияПредупреждение6);
	ДобавитьИзменяемыеПараметрыЭлементаФормы(ДанныеЭлемента, "Видимость", Истина, Ложь);

	ДанныеЭлемента = ДобавитьЭлементФормыВМассивИзменяемыхПараметров(ПараметрыЭлементов,
		Элементы.ДекорацияНадписьАвтономнаяКасса);
	ДобавитьИзменяемыеПараметрыЭлементаФормы(ДанныеЭлемента, "РастягиватьПоГоризонтали", Истина, Неопределено);
	
	ДанныеЭлемента = ДобавитьЭлементФормыВМассивИзменяемыхПараметров(ПараметрыЭлементов,
		Элементы.ГруппаОтветыДаНетАвтономнаяКасса);
	ДобавитьИзменяемыеПараметрыЭлементаФормы(ДанныеЭлемента, "РастягиватьПоГоризонтали", Истина, Неопределено);
	
КонецПроцедуры

Процедура ЗаполнитьПараметрыЭлементовКоманднойПанели(Элементы, ПараметрыЭлементов)
	
	ДанныеЭлемента = ДобавитьЭлементФормыВМассивИзменяемыхПараметров(ПараметрыЭлементов,
		Элементы.ГруппаКомандПродолженияПослеПробитияДополнительно);
	ДобавитьИзменяемыеПараметрыЭлементаФормы(ДанныеЭлемента, "РастягиватьПоГоризонтали", Неопределено, Истина);

	ДанныеЭлемента = ДобавитьЭлементФормыВМассивИзменяемыхПараметров(ПараметрыЭлементов,
		Элементы.ГруппаКомандВозвратИзПробитияЧека);
	ДобавитьИзменяемыеПараметрыЭлементаФормы(ДанныеЭлемента, "Группировка",
		ГруппировкаПодчиненныхЭлементовФормы.Вертикальная, ГруппировкаПодчиненныхЭлементовФормы.ГоризонтальнаяВсегда);
	ДобавитьИзменяемыеПараметрыЭлементаФормы(ДанныеЭлемента, "ГоризонтальноеПоложениеПодчиненных",
		ГоризонтальноеПоложениеЭлемента.Авто, ГоризонтальноеПоложениеЭлемента.Лево);
	ДобавитьИзменяемыеПараметрыЭлементаФормы(ДанныеЭлемента, "ГоризонтальноеПоложениеВГруппе",
		ГоризонтальноеПоложениеЭлемента.Авто, ГоризонтальноеПоложениеЭлемента.Лево);
	
	ДанныеЭлемента = ДобавитьЭлементФормыВМассивИзменяемыхПараметров(ПараметрыЭлементов,
		Элементы.ГруппаДоступныеКомандыПослеПробитияЧека);
	ДобавитьИзменяемыеПараметрыЭлементаФормы(ДанныеЭлемента, "Группировка",
		ГруппировкаПодчиненныхЭлементовФормы.Вертикальная, ГруппировкаПодчиненныхЭлементовФормы.ГоризонтальнаяВсегда);
	ДобавитьИзменяемыеПараметрыЭлементаФормы(ДанныеЭлемента, "ГоризонтальноеПоложениеПодчиненных",
		ГоризонтальноеПоложениеЭлемента.Авто, ГоризонтальноеПоложениеЭлемента.Право);
	ДобавитьИзменяемыеПараметрыЭлементаФормы(ДанныеЭлемента, "ГоризонтальноеПоложениеВГруппе",
		ГоризонтальноеПоложениеЭлемента.Авто, ГоризонтальноеПоложениеЭлемента.Право);

	ДанныеЭлемента = ДобавитьЭлементФормыВМассивИзменяемыхПараметров(ПараметрыЭлементов,
		Элементы.РаспечататьТекущийТоварныйЧек);
	ДобавитьИзменяемыеПараметрыЭлементаФормы(ДанныеЭлемента, "ВысотаЗаголовка", 0, 2);
	ДобавитьИзменяемыеПараметрыЭлементаФормы(ДанныеЭлемента, "Ширина", 0, 12);
	ДобавитьИзменяемыеПараметрыЭлементаФормы(ДанныеЭлемента, "АвтоМаксимальнаяШирина", Истина, Ложь);
	ДобавитьИзменяемыеПараметрыЭлементаФормы(ДанныеЭлемента, "МаксимальнаяШирина", 0, 18);

	ДанныеЭлемента = ДобавитьЭлементФормыВМассивИзменяемыхПараметров(ПараметрыЭлементов,
		Элементы.ПробитьТекущийЧекПовторно);
	ДобавитьИзменяемыеПараметрыЭлементаФормы(ДанныеЭлемента, "ВысотаЗаголовка", 0, 2);
	ДобавитьИзменяемыеПараметрыЭлементаФормы(ДанныеЭлемента, "Ширина", 0, 12);
	ДобавитьИзменяемыеПараметрыЭлементаФормы(ДанныеЭлемента, "АвтоМаксимальнаяШирина", Истина, Ложь);
	ДобавитьИзменяемыеПараметрыЭлементаФормы(ДанныеЭлемента, "МаксимальнаяШирина", 0, 18);
	
	ДанныеЭлемента = ДобавитьЭлементФормыВМассивИзменяемыхПараметров(ПараметрыЭлементов,
		Элементы.ВернутьсяВРежимПодбораТовара);
	ДобавитьИзменяемыеПараметрыЭлементаФормы(ДанныеЭлемента, "Ширина", 0, 18);
	ДобавитьИзменяемыеПараметрыЭлементаФормы(ДанныеЭлемента, "РастягиватьПоГоризонтали", Истина, Ложь);

	ДанныеЭлемента = ДобавитьЭлементФормыВМассивИзменяемыхПараметров(ПараметрыЭлементов,
		Элементы.ВыполнитьВозвратТекущегоЧека);
	ДобавитьИзменяемыеПараметрыЭлементаФормы(ДанныеЭлемента, "Ширина", 0, 12);
	ДобавитьИзменяемыеПараметрыЭлементаФормы(ДанныеЭлемента, "АвтоМаксимальнаяШирина", Истина, Ложь);
	ДобавитьИзменяемыеПараметрыЭлементаФормы(ДанныеЭлемента, "МаксимальнаяШирина", 0, 18);
	
	ДанныеЭлемента = ДобавитьЭлементФормыВМассивИзменяемыхПараметров(ПараметрыЭлементов,
		Элементы.РаспечататьТекущееЗаявлениеНаВозврат);
	ДобавитьИзменяемыеПараметрыЭлементаФормы(ДанныеЭлемента, "ВысотаЗаголовка", 0, 2);
	ДобавитьИзменяемыеПараметрыЭлементаФормы(ДанныеЭлемента, "Ширина", 0, 12);
	ДобавитьИзменяемыеПараметрыЭлементаФормы(ДанныеЭлемента, "АвтоМаксимальнаяШирина", Истина, Ложь);
	ДобавитьИзменяемыеПараметрыЭлементаФормы(ДанныеЭлемента, "МаксимальнаяШирина", 0, 18);
	
	ДанныеЭлемента = ДобавитьЭлементФормыВМассивИзменяемыхПараметров(ПараметрыЭлементов, Элементы.ПовторитьЧек);
	ДобавитьИзменяемыеПараметрыЭлементаФормы(ДанныеЭлемента, "ВысотаЗаголовка", 0, 2);
	ДобавитьИзменяемыеПараметрыЭлементаФормы(ДанныеЭлемента, "Ширина", 0, 12);
	ДобавитьИзменяемыеПараметрыЭлементаФормы(ДанныеЭлемента, "АвтоМаксимальнаяШирина", Истина, Ложь);
	ДобавитьИзменяемыеПараметрыЭлементаФормы(ДанныеЭлемента, "МаксимальнаяШирина", 0, 18);
	
КонецПроцедуры

Процедура ЗаполнитьПараметрыГруппыИтог(Элементы, ПараметрыЭлементов)

	ДанныеЭлемента = ДобавитьЭлементФормыВМассивИзменяемыхПараметров(ПараметрыЭлементов, Элементы.СуммаБезСкидок);
	ДобавитьИзменяемыеПараметрыЭлементаФормы(ДанныеЭлемента, "Ширина", 15, 14);
	
	ДанныеЭлемента = ДобавитьЭлементФормыВМассивИзменяемыхПараметров(ПараметрыЭлементов, Элементы.СуммаСкидки);
	ДобавитьИзменяемыеПараметрыЭлементаФормы(ДанныеЭлемента, "Ширина", 15, 14);
	
	ДанныеЭлемента = ДобавитьЭлементФормыВМассивИзменяемыхПараметров(ПараметрыЭлементов, Элементы.ПоказатьСкидкиНаЧекРасширеннаяПодсказка);
	ДобавитьИзменяемыеПараметрыЭлементаФормы(ДанныеЭлемента, "Ширина", 14, 13);

	ДанныеЭлемента = ДобавитьЭлементФормыВМассивИзменяемыхПараметров(ПараметрыЭлементов, Элементы.СуммаБонусов);
	ДобавитьИзменяемыеПараметрыЭлементаФормы(ДанныеЭлемента, "Ширина", 15, 14);

	ДанныеЭлемента = ДобавитьЭлементФормыВМассивИзменяемыхПараметров(ПараметрыЭлементов,
		Элементы.СуммаОплаченоСертификатами);
	ДобавитьИзменяемыеПараметрыЭлементаФормы(ДанныеЭлемента, "Ширина", 15, 14);

	ДанныеЭлемента = ДобавитьЭлементФормыВМассивИзменяемыхПараметров(ПараметрыЭлементов, Элементы.СуммаИтого);
	ДобавитьИзменяемыеПараметрыЭлементаФормы(ДанныеЭлемента, "Ширина", 17, 16);

	ДанныеЭлемента = ДобавитьЭлементФормыВМассивИзменяемыхПараметров(ПараметрыЭлементов, Элементы.Сдача);
	ДобавитьИзменяемыеПараметрыЭлементаФормы(ДанныеЭлемента, "Ширина", 17, 16);

	ДанныеЭлемента = ДобавитьЭлементФормыВМассивИзменяемыхПараметров(ПараметрыЭлементов,
		Элементы.ВыполнитьПовторноеПробитие);
	ДобавитьИзменяемыеПараметрыЭлементаФормы(ДанныеЭлемента, "ГоризонтальноеПоложениеВГруппе",
		ГоризонтальноеПоложениеЭлемента.Авто, ГоризонтальноеПоложениеЭлемента.Центр);
	ДобавитьИзменяемыеПараметрыЭлементаФормы(ДанныеЭлемента, "РастягиватьПоГоризонтали", Ложь, Истина);
	
КонецПроцедуры

Процедура ЗаполнитьПараметрыГруппыОсновныхКоманд(Элементы, ПараметрыЭлементов)
	
	ДанныеЭлемента = ДобавитьЭлементФормыВМассивИзменяемыхПараметров(ПараметрыЭлементов, Элементы.ПробитьЧек);
	ДобавитьИзменяемыеПараметрыЭлементаФормы(ДанныеЭлемента, "Ширина", 25, 24);
	
	ДанныеЭлемента = ДобавитьЭлементФормыВМассивИзменяемыхПараметров(ПараметрыЭлементов, Элементы.ПерейтиКОплате);
	ДобавитьИзменяемыеПараметрыЭлементаФормы(ДанныеЭлемента, "Ширина", 25, 24);
	
	ДанныеЭлемента = ДобавитьЭлементФормыВМассивИзменяемыхПараметров(ПараметрыЭлементов,
		Элементы.ВыполнитьПовторноеПробитие);
	ДобавитьИзменяемыеПараметрыЭлементаФормы(ДанныеЭлемента, "Ширина", 25, 24);

	ДанныеЭлемента = ДобавитьЭлементФормыВМассивИзменяемыхПараметров(ПараметрыЭлементов, Элементы.ПробитьЧекНСПК);
	ДобавитьИзменяемыеПараметрыЭлементаФормы(ДанныеЭлемента, "ГоризонтальноеПоложениеВГруппе",
		ГоризонтальноеПоложениеЭлемента.Авто, ГоризонтальноеПоложениеЭлемента.Центр);
	ДобавитьИзменяемыеПараметрыЭлементаФормы(ДанныеЭлемента, "Ширина", 25, 24);

	ДанныеЭлемента = ДобавитьЭлементФормыВМассивИзменяемыхПараметров(ПараметрыЭлементов,
		Элементы.ГруппаКомандЦифроваяПанель);
	ДобавитьИзменяемыеПараметрыЭлементаФормы(ДанныеЭлемента, "ГоризонтальноеПоложениеВГруппе",
		ГоризонтальноеПоложениеЭлемента.Центр, ГоризонтальноеПоложениеЭлемента.Авто);

	ДанныеЭлемента = ДобавитьЭлементФормыВМассивИзменяемыхПараметров(ПараметрыЭлементов,
		Элементы.ЗакрытьФормуДанныеПокупателя);
	ДобавитьИзменяемыеПараметрыЭлементаФормы(ДанныеЭлемента, "ГоризонтальноеПоложениеВГруппе",
		ГоризонтальноеПоложениеЭлемента.Авто, ГоризонтальноеПоложениеЭлемента.Центр);
	ДобавитьИзменяемыеПараметрыЭлементаФормы(ДанныеЭлемента, "Ширина", 25, 24);

	ДанныеЭлемента = ДобавитьЭлементФормыВМассивИзменяемыхПараметров(ПараметрыЭлементов,
		Элементы.ГруппаКомандПродолженияПослеПробития);
	ДобавитьИзменяемыеПараметрыЭлементаФормы(ДанныеЭлемента, "ГоризонтальноеПоложениеВГруппе",
		ГоризонтальноеПоложениеЭлемента.Центр, ГоризонтальноеПоложениеЭлемента.Авто);

	ДанныеЭлемента = ДобавитьЭлементФормыВМассивИзменяемыхПараметров(ПараметрыЭлементов,
		Элементы.ПродолжитьПослеПробитияЧека);
	ДобавитьИзменяемыеПараметрыЭлементаФормы(ДанныеЭлемента, "Ширина", 25, 24);
	
КонецПроцедуры

Процедура ЗаполнитьПараметрыЭлементовВыемки(Элементы, ПараметрыЭлементов)

	ДанныеЭлемента = ДобавитьЭлементФормыВМассивИзменяемыхПараметров(ПараметрыЭлементов, Элементы.ГруппаЗаголовокВыемка);
	ДобавитьИзменяемыеПараметрыЭлементаФормы(ДанныеЭлемента, "Видимость", Истина, Ложь);

	ДанныеЭлемента = ДобавитьЭлементФормыВМассивИзменяемыхПараметров(ПараметрыЭлементов, Элементы.СтраницаВыемка);
	ДобавитьИзменяемыеПараметрыЭлементаФормы(ДанныеЭлемента, "РастягиватьПоВертикали", Неопределено, Истина);

	ДанныеЭлемента = ДобавитьЭлементФормыВМассивИзменяемыхПараметров(ПараметрыЭлементов, Элементы.ГруппаОперацииВыемка);
	ДобавитьИзменяемыеПараметрыЭлементаФормы(ДанныеЭлемента, "ВертикальноеПоложениеВГруппе",
		ВертикальноеПоложениеЭлемента.Авто, ВертикальноеПоложениеЭлемента.Низ);

	ДанныеЭлемента = ДобавитьЭлементФормыВМассивИзменяемыхПараметров(ПараметрыЭлементов,
		Элементы.ВыполнитьОперациюВыемка);
	ДобавитьИзменяемыеПараметрыЭлементаФормы(ДанныеЭлемента, "Высота", 1, 2);

	ДанныеЭлемента = ДобавитьЭлементФормыВМассивИзменяемыхПараметров(ПараметрыЭлементов, Элементы.ОтменаВыемки);
	ДобавитьИзменяемыеПараметрыЭлементаФормы(ДанныеЭлемента, "Высота", 0, 2);

	ДанныеЭлемента = ДобавитьЭлементФормыВМассивИзменяемыхПараметров(ПараметрыЭлементов,
		Элементы.ГруппаОтветыДаНетАвтономнаяКасса2);
	ДобавитьИзменяемыеПараметрыЭлементаФормы(ДанныеЭлемента, "РастягиватьПоВертикали", Неопределено, Истина);
	
КонецПроцедуры

Процедура ЗаполнитьПараметрыЭлементовВнесения(Элементы, ПараметрыЭлементов)

	ДанныеЭлемента = ДобавитьЭлементФормыВМассивИзменяемыхПараметров(ПараметрыЭлементов,
		Элементы.ГруппаЗаголовокВнесение);
	ДобавитьИзменяемыеПараметрыЭлементаФормы(ДанныеЭлемента, "Видимость", Истина, Ложь);

	ДанныеЭлемента = ДобавитьЭлементФормыВМассивИзменяемыхПараметров(ПараметрыЭлементов, Элементы.СтраницаВнесение);
	ДобавитьИзменяемыеПараметрыЭлементаФормы(ДанныеЭлемента, "РастягиватьПоВертикали", Неопределено, Истина);

	ДанныеЭлемента = ДобавитьЭлементФормыВМассивИзменяемыхПараметров(ПараметрыЭлементов, Элементы.ГруппаОперацииВнесение);
	ДобавитьИзменяемыеПараметрыЭлементаФормы(ДанныеЭлемента, "ВертикальноеПоложениеВГруппе",
		ВертикальноеПоложениеЭлемента.Авто, ВертикальноеПоложениеЭлемента.Низ);

	ДанныеЭлемента = ДобавитьЭлементФормыВМассивИзменяемыхПараметров(ПараметрыЭлементов,
		Элементы.ВыполнитьОперациюВнесение);
	ДобавитьИзменяемыеПараметрыЭлементаФормы(ДанныеЭлемента, "Высота", 1, 2);

	ДанныеЭлемента = ДобавитьЭлементФормыВМассивИзменяемыхПараметров(ПараметрыЭлементов, Элементы.ОтменаВнесения);
	ДобавитьИзменяемыеПараметрыЭлементаФормы(ДанныеЭлемента, "Высота", 0, 2);

	ДанныеЭлемента = ДобавитьЭлементФормыВМассивИзменяемыхПараметров(ПараметрыЭлементов,
		Элементы.ГруппаПодтверждениеОперацииВнесение);
	ДобавитьИзменяемыеПараметрыЭлементаФормы(ДанныеЭлемента, "РастягиватьПоВертикали", Неопределено, Истина);
	
КонецПроцедуры

Процедура ЗаполнитьПараметрыЭлементовЛояльности(Элементы, ПараметрыЭлементов)
	
	ДанныеЭлемента = ДобавитьЭлементФормыВМассивИзменяемыхПараметров(ПараметрыЭлементов,
		Элементы.ДекорацияРасширительГруппыДопУправленияЧеком);
	ДобавитьИзменяемыеПараметрыЭлементаФормы(ДанныеЭлемента, "Видимость", Ложь, Истина);
	
	ДанныеЭлемента = ДобавитьЭлементФормыВМассивИзменяемыхПараметров(ПараметрыЭлементов,
		Элементы.ДекорацияРазделительЭлементыВводаПромокода);
	ДобавитьИзменяемыеПараметрыЭлементаФормы(ДанныеЭлемента, "Видимость", Ложь, Истина);
	
	ДанныеЭлемента = ДобавитьЭлементФормыВМассивИзменяемыхПараметров(ПараметрыЭлементов,
		Элементы.ОписаниеНайденнойСкидки);
	ДобавитьИзменяемыеПараметрыЭлементаФормы(ДанныеЭлемента, "РастягиватьПоГоризонтали", Неопределено, Ложь);
	ДобавитьИзменяемыеПараметрыЭлементаФормы(ДанныеЭлемента, "ВысотаЗаголовка", 0, 2);
	
	ДанныеЭлемента = ДобавитьЭлементФормыВМассивИзменяемыхПараметров(ПараметрыЭлементов,
		Элементы.ГруппаИнформацияПокупателя);
	ДобавитьИзменяемыеПараметрыЭлементаФормы(ДанныеЭлемента, "РастягиватьПоГоризонтали", Истина, Ложь);
	
	ДанныеЭлемента = ДобавитьЭлементФормыВМассивИзменяемыхПараметров(ПараметрыЭлементов,
		Элементы.НадписьНайденнаяКартаФИО);
	ДобавитьИзменяемыеПараметрыЭлементаФормы(ДанныеЭлемента, "РастягиватьПоГоризонтали", Истина, Ложь);
	
	ДанныеЭлемента = ДобавитьЭлементФормыВМассивИзменяемыхПараметров(ПараметрыЭлементов,
		Элементы.НадписьНайденнаяКартаТелефон);
	ДобавитьИзменяемыеПараметрыЭлементаФормы(ДанныеЭлемента, "РастягиватьПоГоризонтали", Истина, Ложь);
	
	ДанныеЭлемента = ДобавитьЭлементФормыВМассивИзменяемыхПараметров(ПараметрыЭлементов,
		Элементы.НадписьНайденнаяКартаДатаРождения);
	ДобавитьИзменяемыеПараметрыЭлементаФормы(ДанныеЭлемента, "РастягиватьПоГоризонтали", Истина, Ложь);
	
	ДанныеЭлемента = ДобавитьЭлементФормыВМассивИзменяемыхПараметров(ПараметрыЭлементов,
		Элементы.НадписьНайденнаяКартаЭлектроннаяПочта);
	ДобавитьИзменяемыеПараметрыЭлементаФормы(ДанныеЭлемента, "РастягиватьПоГоризонтали", Истина, Ложь);
	
	ДанныеЭлемента = ДобавитьЭлементФормыВМассивИзменяемыхПараметров(ПараметрыЭлементов,
		Элементы.НадписьНайденнаяКартаНомер);
	ДобавитьИзменяемыеПараметрыЭлементаФормы(ДанныеЭлемента, "РастягиватьПоГоризонтали", Истина, Ложь);
	
	ДанныеЭлемента = ДобавитьЭлементФормыВМассивИзменяемыхПараметров(ПараметрыЭлементов,
		Элементы.ГруппаКоличествоБонусов);
	ДобавитьИзменяемыеПараметрыЭлементаФормы(ДанныеЭлемента, "РастягиватьПоГоризонтали", Истина, Неопределено);
	
	ДанныеЭлемента = ДобавитьЭлементФормыВМассивИзменяемыхПараметров(ПараметрыЭлементов, Элементы.ГруппаИнформацияБонусы);
	ДобавитьИзменяемыеПараметрыЭлементаФормы(ДанныеЭлемента, "Ширина", 24, 21);
	
	ДанныеЭлемента = ДобавитьЭлементФормыВМассивИзменяемыхПараметров(ПараметрыЭлементов, Элементы.БонусыДоступноКОплате);
	ДобавитьИзменяемыеПараметрыЭлементаФормы(ДанныеЭлемента, "РастягиватьПоГоризонтали", Истина, Истина);
	
	ДанныеЭлемента = ДобавитьЭлементФормыВМассивИзменяемыхПараметров(ПараметрыЭлементов,
		Элементы.ИнформацияМожноОплатитьБонусами);
	ДобавитьИзменяемыеПараметрыЭлементаФормы(ДанныеЭлемента, "Ширина", 20, 21);
	ДобавитьИзменяемыеПараметрыЭлементаФормы(ДанныеЭлемента, "РастягиватьПоГоризонтали", Истина, Ложь);
	
КонецПроцедуры

Процедура ЗаполнитьПараметрыОплаты(Элементы, ПараметрыЭлементов)
	
	ДанныеЭлемента = ДобавитьЭлементФормыВМассивИзменяемыхПараметров(ПараметрыЭлементов, Элементы.ДекорацияПодсказкаОплатаНаличными);
	ДобавитьИзменяемыеПараметрыЭлементаФормы(ДанныеЭлемента, "Ширина", 12, 11);
	
	ДанныеЭлемента = ДобавитьЭлементФормыВМассивИзменяемыхПараметров(ПараметрыЭлементов, Элементы.ДекорацияПодсказкаОплатаКартой);
	ДобавитьИзменяемыеПараметрыЭлементаФормы(ДанныеЭлемента, "Ширина", 12, 11);
	
	ДанныеЭлемента = ДобавитьЭлементФормыВМассивИзменяемыхПараметров(ПараметрыЭлементов, Элементы.ДекорацияПодсказкаОплатаСБП);
	ДобавитьИзменяемыеПараметрыЭлементаФормы(ДанныеЭлемента, "Ширина", 12, 11);
	
	ДанныеЭлемента = ДобавитьЭлементФормыВМассивИзменяемыхПараметров(ПараметрыЭлементов, Элементы.ДекорацияПодсказкаОплатаСертификатомНСПК);
	ДобавитьИзменяемыеПараметрыЭлементаФормы(ДанныеЭлемента, "Ширина", 12, 11);
	
	ДанныеЭлемента = ДобавитьЭлементФормыВМассивИзменяемыхПараметров(ПараметрыЭлементов, Элементы.ДекорацияПодсказкаПредоплата);
	ДобавитьИзменяемыеПараметрыЭлементаФормы(ДанныеЭлемента, "Ширина", 12, 11);
	
	ДанныеЭлемента = ДобавитьЭлементФормыВМассивИзменяемыхПараметров(ПараметрыЭлементов, Элементы.ДекорацияПодсказкаОплатаВРассрочку);
	ДобавитьИзменяемыеПараметрыЭлементаФормы(ДанныеЭлемента, "Ширина", 12, 11);
	
	ДанныеЭлемента = ДобавитьЭлементФормыВМассивИзменяемыхПараметров(ПараметрыЭлементов, Элементы.ДекорацияПодсказкаОплатаКредитом);
	ДобавитьИзменяемыеПараметрыЭлементаФормы(ДанныеЭлемента, "Ширина", 12, 11);
	
	
КонецПроцедуры

Функция ПолучитьПараметрыЭлементовПанелиУправленияЧеком(Форма)
	
	Элементы = Форма.Элементы;
	ПараметрыЭлементов = Новый Массив;
	
	ЗаполнитьПараметрыГруппВерхнегоУровня(Элементы, ПараметрыЭлементов);
	ЗаполнитьПараметрыГруппСлоев(Элементы, ПараметрыЭлементов);
	ЗаполнитьПараметрыВспомогательныхЭлементов(Элементы, ПараметрыЭлементов);
	ЗаполнитьПараметрыЭлементовГруппыВидовОплат(Элементы, ПараметрыЭлементов);
	ЗаполнитьПараметрыЭлементовПокупателя(Элементы, ПараметрыЭлементов);
	ЗаполнитьПараметрыЭлементовМаркировки(Элементы, ПараметрыЭлементов);
	ЗаполнитьПараметрыПанелиОшибок(Элементы, ПараметрыЭлементов);
	ЗаполнитьПараметрыЭлементовКонтроляМарки(Элементы, ПараметрыЭлементов);
	ЗаполнитьПараметрыЭлементовСопоставленияТоваров(Элементы, ПараметрыЭлементов);
	ЗаполнитьПараметрыЭлементовСерийИПартий(Элементы, ПараметрыЭлементов);
	ЗаполнитьПараметрыЭлементовЗаменыПрав(Элементы, ПараметрыЭлементов);
	ЗаполнитьПараметрыЭлементовЭквайринга(Элементы, ПараметрыЭлементов);
	ЗаполнитьПараметрыЭлементовПлатежнойСистемы(Элементы, ПараметрыЭлементов);
	ЗаполнитьПараметрыЭлементовНСПК(Элементы, ПараметрыЭлементов);
	ЗаполнитьПараметрыЭлементовТерминала(Элементы, ПараметрыЭлементов);
	ЗаполнитьПараметрыЭлементовКоманднойПанели(Элементы, ПараметрыЭлементов);
	ЗаполнитьПараметрыГруппыИтог(Элементы, ПараметрыЭлементов);
	ЗаполнитьПараметрыГруппыОсновныхКоманд(Элементы, ПараметрыЭлементов);
	ЗаполнитьПараметрыЭлементовВыемки(Элементы, ПараметрыЭлементов);
	ЗаполнитьПараметрыЭлементовВнесения(Элементы, ПараметрыЭлементов);
	ЗаполнитьПараметрыЭлементовЛояльности(Элементы, ПараметрыЭлементов);
	ЗаполнитьПараметрыОплаты(Элементы, ПараметрыЭлементов);
	
	Возврат ПараметрыЭлементов;
	
КонецФункции

Функция ОписаниеРасположенияЭлемента(РодительскийЭлементГоризонтально, 
		СледующийЭлементГоризонтально,
		РодительскийЭлементВертикально,
		СледующийЭлементВертикально)
	
	РезультатФункции = Новый Структура("РодительскийЭлементГоризонтально,СледующийЭлементГоризонтально,
		|РодительскийЭлементВертикально,СледующийЭлементВертикально");
	РезультатФункции.Вставить("РодительскийЭлементГоризонтально", РодительскийЭлементГоризонтально);
	РезультатФункции.Вставить("СледующийЭлементГоризонтально", СледующийЭлементГоризонтально);
	РезультатФункции.Вставить("РодительскийЭлементВертикально", РодительскийЭлементВертикально);
	РезультатФункции.Вставить("СледующийЭлементВертикально", СледующийЭлементВертикально);
	Возврат РезультатФункции;
	
КонецФункции

Функция ДобавитьЭлементФормыВМассивИзменяемыхПараметров(ПараметрыЭлементов,
				ЭлементФормы,
				ОписаниеРасположенияЭлемента = Неопределено)
				
	ДанныеЭлемента = Новый Структура("ЭлементФормы,РодительскийЭлементГоризонтально,СледующийЭлементГоризонтально,
		|РодительскийЭлементВертикально,СледующийЭлементВертикально,ИзменяемыеСвойства");
	ДанныеЭлемента.ЭлементФормы 					= ЭлементФормы;
	Если Не ОписаниеРасположенияЭлемента = Неопределено Тогда
		ДанныеЭлемента.РодительскийЭлементГоризонтально = ОписаниеРасположенияЭлемента.РодительскийЭлементГоризонтально;
		ДанныеЭлемента.СледующийЭлементГоризонтально 	= ОписаниеРасположенияЭлемента.СледующийЭлементГоризонтально;
		ДанныеЭлемента.РодительскийЭлементВертикально 	= ОписаниеРасположенияЭлемента.РодительскийЭлементВертикально;
		ДанныеЭлемента.СледующийЭлементВертикально		= ОписаниеРасположенияЭлемента.СледующийЭлементВертикально;
	КонецЕсли;
	ДанныеЭлемента.ИзменяемыеСвойства 				= Новый Массив;
	ПараметрыЭлементов.Добавить(ДанныеЭлемента);
	
	Возврат ДанныеЭлемента;
	
КонецФункции

Процедура ДобавитьИзменяемыеПараметрыЭлементаФормы(ДанныеЭлемента, ИмяСвойства,
	ЗначениеГоризонтально, ЗначениеВертикально)
	
	СтрокаИзменяемогоСвойства = Новый Структура("ИмяСвойства,ЗначениеГоризонтально,ЗначениеВертикально");
	СтрокаИзменяемогоСвойства.ИмяСвойства = ИмяСвойства;
	СтрокаИзменяемогоСвойства.ЗначениеГоризонтально = ЗначениеГоризонтально;
	СтрокаИзменяемогоСвойства.ЗначениеВертикально = ЗначениеВертикально;
	ДанныеЭлемента.ИзменяемыеСвойства.Добавить(СтрокаИзменяемогоСвойства);
	
КонецПроцедуры

Процедура МодифицироватьЭлементФормы(Элементы, ДанныеЭлемента, ВертикальнаяОриентация)

	УстанавливаемыйРодитель = ?(ВертикальнаяОриентация,
								ДанныеЭлемента.РодительскийЭлементВертикально,
								ДанныеЭлемента.РодительскийЭлементГоризонтально);
	Если Не УстанавливаемыйРодитель = Неопределено Тогда
		
		Если Не (ДанныеЭлемента.РодительскийЭлементГоризонтально = ДанныеЭлемента.РодительскийЭлементВертикально
			И ДанныеЭлемента.СледующийЭлементГоризонтально = ДанныеЭлемента.СледующийЭлементВертикально) Тогда
			
			СледующийЭлемент = ?(ВертикальнаяОриентация,
								ДанныеЭлемента.СледующийЭлементВертикально,
								ДанныеЭлемента.СледующийЭлементГоризонтально);
			Элементы.Переместить(ДанныеЭлемента.ЭлементФормы, УстанавливаемыйРодитель, СледующийЭлемент);
			
		КонецЕсли;
	КонецЕсли;
	Для Каждого СтрокаСвойства Из ДанныеЭлемента.ИзменяемыеСвойства Цикл
		УстанавливаемоеСвойство = ?(ВертикальнаяОриентация,
									СтрокаСвойства.ЗначениеВертикально,
									СтрокаСвойства.ЗначениеГоризонтально);
		ДанныеЭлемента.ЭлементФормы[СтрокаСвойства.ИмяСвойства] = УстанавливаемоеСвойство;
	КонецЦикла;
	
КонецПроцедуры

Процедура УвеличитьРазмерПоляГруппыОплат(ЭлементПоле, ПараметрыУвеличенногоИнтерфейса)
	
	Если ЭлементПоле.Имя = "СуммаОплаченоСБП" Или ЭлементПоле.Имя = "СуммаОплаченоЮКасса" Тогда
		ЭлементПоле.Ширина = ПараметрыУвеличенногоИнтерфейса.ШиринаПоля - 1;
	ИначеЕсли ЭлементПоле.Вид = ВидПоляФормы.ПолеНадписи Тогда
		ЭлементПоле.Ширина = ПараметрыУвеличенногоИнтерфейса.ШиринаПоля + 1;
	Иначе
		ЭлементПоле.Ширина = ПараметрыУвеличенногоИнтерфейса.ШиринаПоля;
	КонецЕсли;
	ЭлементПоле.Шрифт = ПараметрыУвеличенногоИнтерфейса.ШрифтСуммОплат;
	
КонецПроцедуры

Процедура УвеличитьРазмерПолейОплат(РодительскийЭлемент, ПараметрыУвеличенногоИнтерфейса)
	
	Для Каждого ЭлементГруппыОплат Из РодительскийЭлемент.ПодчиненныеЭлементы Цикл
		Если ТипЗнч(ЭлементГруппыОплат) = Тип("ГруппаФормы") Тогда
			УвеличитьРазмерПолейОплат(ЭлементГруппыОплат, ПараметрыУвеличенногоИнтерфейса);
		ИначеЕсли ТипЗнч(ЭлементГруппыОплат) = Тип("ПолеФормы") Или ТипЗнч(ЭлементГруппыОплат) = Тип("ПолеНадписиФормы") Тогда
			УвеличитьРазмерПоляГруппыОплат(ЭлементГруппыОплат, ПараметрыУвеличенногоИнтерфейса);
		КонецЕсли;
	КонецЦикла;
	
КонецПроцедуры

Функция НавигационнаяСсылкаИзображения(ДанныеИзображения, ИдентификаторФормы)

	УстановитьПривилегированныйРежим(Истина);
	Возврат РаботаСФайлами.ДанныеФайла(ДанныеИзображения, ИдентификаторФормы).СсылкаНаДвоичныеДанныеФайла;

КонецФункции

Процедура УстановитьУсловноеОформлениеФормыРМК(ФормаРМК)
	
	// Оплаченные товары
	Элемент = ФормаРМК.УсловноеОформление.Элементы.Добавить();
	ПолеЭлемента = Элемент.Поля.Элементы.Добавить();
	ПолеЭлемента.Поле = Новый ПолеКомпоновкиДанных(ФормаРМК.Элементы.Товары.Имя);
	ДобавитьЭлементОтбораКомпоновкиДанныхРавенство(Элемент.Отбор, ФормаРМК.Элементы.ТоварыОплачена.ПутьКДанным, Истина);
	Элемент.Оформление.УстановитьЗначениеПараметра("ЦветФона", ФормаРМК.ЦветаФормы.ЗеленаяКнопка);
	
	// Оплата недоступна
	Элемент = ФормаРМК.УсловноеОформление.Элементы.Добавить();
	ПолеЭлемента = Элемент.Поля.Элементы.Добавить();
	ПолеЭлемента.Поле = Новый ПолеКомпоновкиДанных(ФормаРМК.Элементы.Товары.Имя);
	ДобавитьЭлементОтбораКомпоновкиДанныхРавенство(Элемент.Отбор, ФормаРМК.Элементы.ТоварыОплатаНедоступна.ПутьКДанным, Истина);
	Элемент.Оформление.УстановитьЗначениеПараметра("ЦветФона", ФормаРМК.ЦветаФормы.КраснаяКнопка);
	
	// Замена товара
	Если ФормаРМК.ИспользоватьЗаменуТоваров Тогда
		Элемент = ФормаРМК.УсловноеОформление.Элементы.Добавить();
		ПолеЭлемента = Элемент.Поля.Элементы.Добавить();
		ПолеЭлемента.Поле = Новый ПолеКомпоновкиДанных(ФормаРМК.Элементы.Товары.Имя);
		ДобавитьЭлементОтбораКомпоновкиДанныхРавенство(Элемент.Отбор, ФормаРМК.Элементы.ТоварыТоварКЗамене.ПутьКДанным, Истина);
		Элемент.Оформление.УстановитьЗначениеПараметра("ЦветФона", ФормаРМК.ЦветаФормы.ФонРежимаВозврат);
		Элемент.Оформление.УстановитьЗначениеПараметра("Доступность", Ложь);
	КонецЕсли;
	
	// Товары без скидок и бонусов
	Элемент = ФормаРМК.УсловноеОформление.Элементы.Добавить();
	
	ПолеЭлемента = Элемент.Поля.Элементы.Добавить();
	ПолеЭлемента.Поле = Новый ПолеКомпоновкиДанных(ФормаРМК.Элементы.ТоварыСуммаСкидокОбщая.Имя);
	
	ГруппаОтбораЭлементаВерхнегоУровня = Элемент.Отбор.Элементы.Добавить(Тип("ГруппаЭлементовОтбораКомпоновкиДанных"));
	ГруппаОтбораЭлементаВерхнегоУровня.ТипГруппы = ТипГруппыЭлементовОтбораКомпоновкиДанных.ГруппаИ;
	
	ДобавитьЭлементОтбораКомпоновкиДанныхРавенство(ГруппаОтбораЭлементаВерхнегоУровня,
		"Объект.Товары.ЗапретОплатыБонусамиСкидками", Истина);
	
	ДобавитьЭлементОтбораКомпоновкиДанныхРавенство(ГруппаОтбораЭлементаВерхнегоУровня,
		"Объект.Товары.СуммаСкидокОбщая", 0);
	
	ЭлементОтбора = ГруппаОтбораЭлементаВерхнегоУровня.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));
	ЭлементОтбора.ЛевоеЗначение = Новый ПолеКомпоновкиДанных("БонусыДоступноКОплате");
	ЭлементОтбора.ВидСравнения = ВидСравненияКомпоновкиДанных.Больше;
	ЭлементОтбора.ПравоеЗначение = 0;
	
	Элемент.Оформление.УстановитьЗначениеПараметра("ЦветТекста", ЦветаСтиля.ЦветОтрицательногоЧисла);
	Элемент.Оформление.УстановитьЗначениеПараметра("Формат", НСтр("ru='ЧН=0.00'"));
	Элемент.Оформление.УстановитьЗначениеПараметра("Шрифт", ШрифтыСтиля.ШрифтОбычныйПолужирный12РМК);
	
	// Остатки товаров в корзине РМК
	Если ЗначениеЗаполнено(ФормаРМК.Объект.ТорговыйОбъект) Тогда
		Элемент = ФормаРМК.УсловноеОформление.Элементы.Добавить();
		ПолеЭлемента = Элемент.Поля.Элементы.Добавить();
		ПолеЭлемента.Поле = Новый ПолеКомпоновкиДанных(ФормаРМК.Элементы.ТаблицаОстатков.Имя);
		ДобавитьЭлементОтбораКомпоновкиДанныхРавенство(Элемент.Отбор, ФормаРМК.Элементы.ТаблицаОстатковМестоХранения.ПутьКДанным, Строка(ФормаРМК.Объект.ТорговыйОбъект));
		Элемент.Оформление.УстановитьЗначениеПараметра("Шрифт", ШрифтыСтиля.ШрифтОбычныйПолужирный12РМК);
	КонецЕсли;
	
	// Дерево скидок
	Элемент = ФормаРМК.УсловноеОформление.Элементы.Добавить();
	ПолеЭлемента = Элемент.Поля.Элементы.Добавить();
	ПолеЭлемента.Поле = Новый ПолеКомпоновкиДанных(ФормаРМК.Элементы.ДеревоСкидок.Имя);
	ДобавитьЭлементОтбораКомпоновкиДанныхРавенство(Элемент.Отбор, ФормаРМК.Элементы.ДеревоСкидокУровень.ПутьКДанным, 0);
	Элемент.Оформление.УстановитьЗначениеПараметра("Шрифт", ШрифтыСтиля.ШрифтОбычныйПолужирный12РМК);
	
	// Дерево подарков
	Элемент = ФормаРМК.УсловноеОформление.Элементы.Добавить();
	ПолеЭлемента = Элемент.Поля.Элементы.Добавить();
	ПолеЭлемента.Поле = Новый ПолеКомпоновкиДанных(ФормаРМК.Элементы.ДеревоПодарков.Имя);
	ДобавитьЭлементОтбораКомпоновкиДанныхРавенство(Элемент.Отбор, ФормаРМК.Элементы.ДеревоПодарковУровень.ПутьКДанным, 1);
	Элемент.Оформление.УстановитьЗначениеПараметра("Шрифт", ШрифтыСтиля.ШрифтОбычныйПолужирный12РМК);
	
	// Доступные скидки выбор
	Элемент = ФормаРМК.УсловноеОформление.Элементы.Добавить();
	ПолеЭлемента = Элемент.Поля.Элементы.Добавить();
	ПолеЭлемента.Поле = Новый ПолеКомпоновкиДанных(ФормаРМК.Элементы.ТаблицаВыборУправляемыхСкидок.Имя);
	ДобавитьЭлементОтбораКомпоновкиДанныхРавенство(Элемент.Отбор, ФормаРМК.Элементы.ТаблицаВыборУправляемыхСкидокОтметка.ПутьКДанным, Истина);
	Элемент.Оформление.УстановитьЗначениеПараметра("ЦветФона", ЦветаСтиля.ЦветФонаРежимаПродажиРМК);
	
	// Дерево действующих скидок
	Элемент = ФормаРМК.УсловноеОформление.Элементы.Добавить();
	ПолеЭлемента = Элемент.Поля.Элементы.Добавить();
	ПолеЭлемента.Поле = Новый ПолеКомпоновкиДанных(ФормаРМК.Элементы.ДеревоДействующихСкидок.Имя);
	ДобавитьЭлементОтбораКомпоновкиДанныхРавенство(Элемент.Отбор, ФормаРМК.Элементы.ДеревоДействующихСкидокУровень.ПутьКДанным, 1);
	Элемент.Оформление.УстановитьЗначениеПараметра("Шрифт", ШрифтыСтиля.ШрифтОбычныйПолужирный12РМК);
	
	Элемент = ФормаРМК.УсловноеОформление.Элементы.Добавить();
	ПолеЭлемента = Элемент.Поля.Элементы.Добавить();
	ПолеЭлемента.Поле = Новый ПолеКомпоновкиДанных(ФормаРМК.Элементы.ДеревоДействующихСкидок.Имя);
	ДобавитьЭлементОтбораКомпоновкиДанныхРавенство(Элемент.Отбор, ФормаРМК.Элементы.ДеревоДействующихСкидокУровень.ПутьКДанным, 2);
	Элемент.Оформление.УстановитьЗначениеПараметра("Шрифт", ШрифтыСтиля.ШрифтОбычныйНаклонный12РМК);
	
КонецПроцедуры

Процедура НастроитьКомандыРежимИЕще(Форма)
	
	Элементы = Форма.Элементы;
	
	Элементы.КомандаРежим.Видимость = Истина;
	Элементы.КомандаЕще.Видимость = Истина;
	
	Форма.СписокКомандРежим.Очистить();
	Форма.СписокКомандРежим.Добавить("Продажа",,, БиблиотекаКартинок.Sell);
	Форма.СписокКомандРежим.Добавить("Возврат",,, БиблиотекаКартинок.Return);
	Если Элементы.Скупка.Видимость Тогда
		Форма.СписокКомандРежим.Добавить("Скупка",,, БиблиотекаКартинок.Buy);
		Форма.СписокКомандРежим.Добавить("ВозвратСкупки", НСтр("ru = 'Возврат скупки'"),, БиблиотекаКартинок.ReturnBuy);
	КонецЕсли;
	Если Элементы.Заказ.Видимость Тогда
		Форма.СписокКомандРежим.Добавить("Заказ",,, БиблиотекаКартинок.Order);
	КонецЕсли;
	
	Форма.СписокКомандРежим.Добавить("ЧекКоррекции", НСтр("ru = 'Чек коррекции'"),, БиблиотекаКартинок.CorrectionCheque);
	
	ПечататьТоварныйЧек = ПечататьТоварныйЧек(Форма);
	ВесыПодключены = (Форма.ТаблицаЭлектронныхВесов.Количество() > 0);
	ИспользуютсяЗаказы = Элементы.ПродажаПоЗаказу.Видимость;
	ИспользуютсяБезналПлатежи = Элементы.БезналичныеПлатежи.Видимость;
	ИспользуютсяАвансы = Элементы.ПриемАванса.Видимость;
	ИспользуютсяРасчетыСПокупателями = Элементы.ДокументРасчета.Видимость;
	ИспользуютсяРассрочки = Элементы.ОплатаРассрочки.Видимость;
	ПечататьЗаявлениеНаВозврат = Не ОбщегоНазначенияРМК.ЭтоВидОперацииПродажа(Форма.Объект.ВидОперации);
	ИспользуетсяСписаниеАлкоголя = Элементы.СписатьАлкогольнуюПродукцию.Видимость;
	ДоступнаСменаМагазина = Элементы.СменитьМагазин.Видимость;
	ИспользуетсяОбменДанными = Элементы.ОткрытьФормуОбменаДанными.Видимость;
	ИспользуетсяОтчетЗаСмену = Элементы.ОтчетЗаСмену.Видимость;
	
	Форма.СписокКомандЕще.Очистить();
	Форма.СписокКомандЕще.Добавить("Внесение",,, БиблиотекаКартинок.Внесение);
	Форма.СписокКомандЕще.Добавить("Выемка",,, БиблиотекаКартинок.Выемка);
	Форма.СписокКомандЕще.Добавить("ПовторнаяПечатьЧека", НСтр("ru = 'Повторная печать чека'"),,
		БиблиотекаКартинок.ПовторнаяПечатьЧека);
	Если ПечататьТоварныйЧек Тогда
		Форма.СписокКомандЕще.Добавить("РаспечататьТоварныйЧек", НСтр("ru = 'Распечатать товарный чек'"),,
			БиблиотекаКартинок.ПечатьТоварногоЧека);
	КонецЕсли;
	Если ВесыПодключены Тогда
		Форма.СписокКомандЕще.Добавить("ОткрытьПараметрыТарирования", НСтр("ru = 'Тарирование'"),,
			БиблиотекаКартинок.НастройкиТарированияВесов);
	КонецЕсли;
	Если ИспользуютсяЗаказы Тогда 
		Форма.СписокКомандЕще.Добавить("ПродажаПоЗаказу", НСтр("ru = 'Продажа по заказу'"),,
			БиблиотекаКартинок.ПродажаПоЗаказу);
	КонецЕсли;
	Если ИспользуютсяБезналПлатежи Тогда
		Форма.СписокКомандЕще.Добавить("БезналичныеПлатежи", НСтр("ru = 'Безналичные платежи'"),,
			БиблиотекаКартинок.БезналичнаяОплата);
	КонецЕсли;
	Если ИспользуютсяАвансы Тогда
		Форма.СписокКомандЕще.Добавить("ПриемАванса", НСтр("ru = 'Прием аванса'"),,
			БиблиотекаКартинок.ПриемАванса);
	КонецЕсли;
	Если ИспользуютсяРасчетыСПокупателями Тогда
		Форма.СписокКомандЕще.Добавить("ДокументРасчета", НСтр("ru = 'Документ расчета'"),,
			БиблиотекаКартинок.ДокументРасчета);
	КонецЕсли;
	Если ИспользуютсяРассрочки Тогда
		Форма.СписокКомандЕще.Добавить("ОплатаРассрочки", НСтр("ru = 'Оплата рассрочки'"),,
			БиблиотекаКартинок.ОплатаРассрочки);
	КонецЕсли;
	Если ПечататьЗаявлениеНаВозврат Тогда
		Форма.СписокКомандЕще.Добавить("РаспечататьЗаявлениеНаВозврат", НСтр("ru = 'Заявление на возврат'"),,
			БиблиотекаКартинок.ЗаявлениеНаВозврат);
	КонецЕсли;
	Форма.СписокКомандЕще.Добавить("НайтиПоШтрихкоду", НСтр("ru = 'Найти по штрихкоду'"),,
		БиблиотекаКартинок.УдалитьПоШтрихкоду);
	Если ИспользуетсяСписаниеАлкоголя Тогда
		Форма.СписокКомандЕще.Добавить("СписатьАлкогольнуюПродукцию", НСтр("ru = 'Списать алкогольную продукцию'"),,
			БиблиотекаКартинок.АлкогольнаяПродукцияКега);
	КонецЕсли;
	Форма.СписокКомандЕще.Добавить("СменитьКассира", НСтр("ru = 'Сменить кассира'"),, БиблиотекаКартинок.СменитьКассира);
	Если ДоступнаСменаМагазина Тогда
		Форма.СписокКомандЕще.Добавить("СменитьМагазин", НСтр("ru = 'Сменить магазин'"),, БиблиотекаКартинок.СменитьМагазин);
	КонецЕсли;
	Если Форма.ИспользоватьОплатуСертификатамиНСПК Тогда
		Форма.СписокКомандЕще.Добавить("ОтправитьПодтверждениеНСПК", НСтр("ru = 'Отправить подтверждение ЭС (ФЗ-491)'"),,
			БиблиотекаКартинок.НСПК_МИР);
		Форма.СписокКомандЕще.Добавить("СписокСертификатовНСПК", НСтр("ru = 'Подбор товаров ЭС (ФЗ-491)'"),,
			БиблиотекаКартинок.РМККартаМИР);
	КонецЕсли;
	Если Форма.ИспользоватьЗапретПродаж Тогда
		Форма.СписокКомандЕще.Добавить("ОбновитьОграниченияПродаж", НСтр("ru = 'Обновить ограничения продаж'"),,
			БиблиотекаКартинок.ОбновлениеОграниченийПродаж);
	КонецЕсли;
	Если ИспользуетсяОбменДанными Тогда
		Форма.СписокКомандЕще.Добавить("ОткрытьФормуОбменаДанными", НСтр("ru = 'Выполнить обмен'"),,
			БиблиотекаКартинок.СинхронизацияДанных);
	КонецЕсли;
	Если Форма.ИспользоватьОплатуНаличными Тогда
		Форма.СписокКомандЕще.Добавить("ОткрытьДенежныйЯщик", НСтр("ru = 'Открыть денежный ящик'"),,
			БиблиотекаКартинок.РМКОткрытьДенежныйЯщик);
	КонецЕсли;
	Форма.СписокКомандЕще.Добавить("ЗакрытьСмену", НСтр("ru = 'Закрыть смену (Z-отчет)'"),,
		БиблиотекаКартинок.ЗакрытьСмену);
	Форма.СписокКомандЕще.Добавить("СнятьОтчетБезГашения", НСтр("ru = 'Отчёт без гашения (X-отчет)'"),,
		БиблиотекаКартинок.XОтчет);
	Если Форма.ИспользоватьОплатуПлатежнымиКартами Тогда
		Форма.СписокКомандЕще.Добавить("СверкаИтогов", НСтр("ru = 'Сверка итогов'"),, БиблиотекаКартинок.СверкаИтогов);
	КонецЕсли;
	Если ИспользуетсяОтчетЗаСмену Тогда
		Форма.СписокКомандЕще.Добавить("ОтчетЗаСмену", НСтр("ru = 'Отчет за смену'"),, БиблиотекаКартинок.РМКОтчетЗаСмену);
	КонецЕсли;
	
КонецПроцедуры

Функция ПечататьТоварныйЧек(Форма)
	
	ПечататьТоварныйЧек = Ложь;
	
	ЭтоПечатьТоварногоЧекаНаКассовомОборудовании = (Форма.СпособФормированияТоварногоЧека = 2);
	ЭтоПечатьТоварногоЧекаНаОфисномПринтере = (Форма.СпособФормированияТоварногоЧека = 1);
	Если (ЭтоПечатьТоварногоЧекаНаКассовомОборудовании
		И (ЗначениеЗаполнено(Форма.ПринтерЧеков) ИЛИ ЗначениеЗаполнено(Форма.ПодключаемоеОборудование)))
		Или ЭтоПечатьТоварногоЧекаНаОфисномПринтере Тогда
		ПечататьТоварныйЧек = Истина;
	КонецЕсли;
	
	Возврат ПечататьТоварныйЧек;
	
КонецФункции

Процедура ОчиститьПанельКупюр(Форма)
	
	ЭлементыФормы = Форма.Элементы;
	ОчиститьГруппуКупюр(ЭлементыФормы, ЭлементыФормы.ГруппаКупюр);
	ОчиститьГруппуКупюр(ЭлементыФормы, ЭлементыФормы.ГруппаКупюрРяд1);
	ОчиститьГруппуКупюр(ЭлементыФормы, ЭлементыФормы.ГруппаКупюрРяд2);
	
КонецПроцедуры

Процедура ОчиститьГруппуКупюр(ЭлементыФормы, ЭлементГруппаКупюр)
	КоличествоЭлементовКупюр = ЭлементГруппаКупюр.ПодчиненныеЭлементы.Количество();
	Позиция = 0;
	Пока Позиция < КоличествоЭлементовКупюр Цикл
		ИндексЭлемента = КоличествоЭлементовКупюр - Позиция - 1;
		ТекущийЭлемент = ЭлементГруппаКупюр.ПодчиненныеЭлементы.Получить(ИндексЭлемента);
		ЭлементыФормы.Удалить(ТекущийЭлемент);
		
		Позиция = Позиция + 1;
	КонецЦикла;
КонецПроцедуры

Процедура ДобавитьКупюруНаПанельВводаНаличных(Элементы, Команды, ГруппаРядКупюр, ДанныеКупюры)
	
	ИмяГруппыКупюры = "ГруппаКупюры" + ДанныеКупюры.НоминалКупюры;
	НоваяГруппаКупюры = Элементы.Добавить(ИмяГруппыКупюры, Тип("ГруппаФормы"), ГруппаРядКупюр);
	НоваяГруппаКупюры.Вид = ВидГруппыФормы.ОбычнаяГруппа;
	НоваяГруппаКупюры.Группировка = ГруппировкаПодчиненныхЭлементовФормы.Вертикальная;
	НоваяГруппаКупюры.ВертикальныйИнтервал = ИнтервалМеждуЭлементамиФормы.Нет;
	НоваяГруппаКупюры.ОтображатьЗаголовок = Ложь;
	НоваяГруппаКупюры.Отображение = ОтображениеОбычнойГруппы.Нет;
	
	ИмяКоманды = "ВыборКупюры" + ДанныеКупюры.НоминалКупюры;
	НоваяКоманда = Команды.Найти(ИмяКоманды);
	Если НоваяКоманда = Неопределено Тогда
		НоваяКоманда = Команды.Добавить(ИмяКоманды);
		НоваяКоманда.Действие = "Подключаемый_ВыбратьКупюру";
		Если Не ДанныеКупюры.ГорячаяКлавиша = Неопределено Тогда
			НоваяКоманда.СочетаниеКлавиш = ДанныеКупюры.ГорячаяКлавиша;
		КонецЕсли;
	КонецЕсли;
	
	ИмяГруппыДекораций = "ГруппаДекорацийКупюры" + ДанныеКупюры.НоминалКупюры;
	НоваяГруппаДекораций = Элементы.Добавить(ИмяГруппыДекораций, Тип("ГруппаФормы"), НоваяГруппаКупюры);
	НоваяГруппаДекораций.Вид = ВидГруппыФормы.ОбычнаяГруппа;
	НоваяГруппаДекораций.Группировка = ГруппировкаПодчиненныхЭлементовФормы.ГоризонтальнаяВсегда;
	НоваяГруппаДекораций.ГоризонтальныйИнтервал = ИнтервалМеждуЭлементамиФормы.Половинный;
	НоваяГруппаДекораций.ОтображатьЗаголовок = Ложь;
	НоваяГруппаДекораций.Отображение = ОтображениеОбычнойГруппы.Нет;
	
	ИмяДекорации = "КоличествоНажатийКупюры" + ДанныеКупюры.НоминалКупюры;
	ДекорацияКупюры = Элементы.Добавить(ИмяДекорации, Тип("ДекорацияФормы"), НоваяГруппаДекораций);
	ДекорацияКупюры.Вид = ВидДекорацииФормы.Надпись;
	ДекорацияКупюры.Шрифт = ШрифтыСтиля.ШрифтОбычныйПолужирныйРМК;
	ДекорацияКупюры.Ширина = 4;
	ДекорацияКупюры.Высота = 1;
	ДекорацияКупюры.ВертикальноеПоложениеВГруппе = ВертикальноеПоложениеЭлемента.Низ;
	ДекорацияКупюры.ВертикальноеПоложение = ВертикальноеПоложениеЭлемента.Низ;
	ДекорацияКупюры.ГоризонтальноеПоложение = ГоризонтальноеПоложениеЭлемента.Право;
	ДекорацияКупюры.ГоризонтальноеПоложениеВГруппе = ГоризонтальноеПоложениеЭлемента.Право;
	
	ИмяДекорацииОтступ = "КоличествоНажатийКупюрыОтступ" + ДанныеКупюры.НоминалКупюры;
	ДекорацияКупюрыОтступ = Элементы.Добавить(ИмяДекорацииОтступ, Тип("ДекорацияФормы"), НоваяГруппаДекораций);
	ДекорацияКупюрыОтступ.Вид = ВидДекорацииФормы.Надпись;
	ДекорацияКупюрыОтступ.Заголовок = " ";
	
	ИмяКнопкиКупюры = "Купюра" + ДанныеКупюры.НоминалКупюры;
	КнопкаКупюры = Элементы.Добавить(ИмяКнопкиКупюры, Тип("КнопкаФормы"), НоваяГруппаКупюры);
	КнопкаКупюры.ИмяКоманды = ИмяКоманды;
	КнопкаКупюры.Картинка = ДанныеКупюры.КартинкаКупюры;
	КнопкаКупюры.Ширина = 5;
	КнопкаКупюры.Высота = 5;
	КнопкаКупюры.Отображение = ОтображениеКнопки.Картинка;
	
КонецПроцедуры

Функция ДобавитьРядКнопок(РодительскийЭлемент, ИндексРяда, Элементы)
	
	ИмяРяда = СтрШаблон("РядКнопок_%1", ИндексРяда);
	НовыйРяд = Элементы.Найти(ИмяРяда);
	Если НовыйРяд = Неопределено Тогда
		НовыйРяд = Элементы.Добавить(ИмяРяда, Тип("ГруппаФормы"), РодительскийЭлемент);
	КонецЕсли;
	НовыйРяд.Вид 								= ВидГруппыФормы.ОбычнаяГруппа;
	НовыйРяд.ГоризонтальноеПоложениеПодчиненных	= ГоризонтальноеПоложениеЭлемента.Центр;
	НовыйРяд.Группировка						= ГруппировкаПодчиненныхЭлементовФормы.ГоризонтальнаяВсегда;
	НовыйРяд.ОтображатьЗаголовок 				= Ложь;
	НовыйРяд.Отображение						= ОтображениеОбычнойГруппы.Нет;
	НовыйРяд.РастягиватьПоГоризонтали			= Истина;
	НовыйРяд.РастягиватьПоВертикали				= Ложь;
	НовыйРяд.Видимость							= Ложь;
	
	Возврат НовыйРяд;
	
КонецФункции

Процедура ДобавитьКнопкуВРяд(РядКнопок, ИндексКнопки, ГорячаяКлавиша, Форма)
	
	ИмяКомандыНажатия = "Подключаемый_ИзбранноеВыбор";
	ПутьКДаннымПустойКартинки = "ПустаяКартинка";
	
	СочетаниеКлавиш = Неопределено;
	Если Не ГорячаяКлавиша = Неопределено Тогда
		Если (ГорячаяКлавиша.Alt ИЛИ ГорячаяКлавиша.Shift ИЛИ ГорячаяКлавиша.Ctrl) И ИндексКнопки < 10 Тогда
			
			ИмяКлавиши = СтрШаблон("_%1", ИндексКнопки);
			ДополнительнаяКлавиша = Клавиша[ИмяКлавиши];
			
			СочетаниеКлавиш = Новый СочетаниеКлавиш(ДополнительнаяКлавиша,
				ГорячаяКлавиша.Alt, ГорячаяКлавиша.Ctrl, ГорячаяКлавиша.Shift);
		КонецЕсли;
	КонецЕсли;
	
	ШрифтТекста = ШрифтыСтиля.ОбычныйШрифтТекста;
	ШрифтЦены = ШрифтыСтиля.ШрифтОбычныйПолужирныйРМК;
	ШрифтГорячейКлавиши = ШрифтыСтиля.ШрифтОбычныйПолужирный12РМК;
	БезРамки = Новый Рамка(ТипРамкиЭлементаУправления.БезРамки);
	ЭлементыФормы = Форма.Элементы;
	
	ИмяЭлемента = СтрШаблон("КомандаИзбранныйТовар_Элемент01_%1", ИндексКнопки);
	ЭлементФормы = ЭлементыФормы.Добавить(ИмяЭлемента, Тип("ГруппаФормы"), РядКнопок);
	ЭлементФормы.Вид = ВидГруппыФормы.ОбычнаяГруппа;
	ЭлементФормы.ОтображатьЗаголовок = Ложь;
	ЭлементФормы.Группировка = ГруппировкаПодчиненныхЭлементовФормы.ГоризонтальнаяВсегда;
	ЭлементФормы.РастягиватьПоВертикали = Ложь;
	ЭлементФормы.РастягиватьПоГоризонтали = Истина;
	ЭлементФормы.ГоризонтальныйИнтервал = ИнтервалМеждуЭлементамиФормы.Нет;
	ЭлементФормы.ВертикальныйИнтервал = ИнтервалМеждуЭлементамиФормы.Нет;
	ЭлементФормы.Ширина = 35;
	ЭлементФормы.Высота = 4;
	ГруппаОсновная = ЭлементФормы;
	
	ИмяЭлемента = СтрШаблон("КомандаИзбранныйТовар_Элемент02_%1", ИндексКнопки);
	ЭлементФормы = ЭлементыФормы.Добавить(ИмяЭлемента, Тип("ПолеФормы"), ГруппаОсновная);
	ЭлементФормы.Вид 						= ВидПоляФормы.ПолеКартинки;
	ЭлементФормы.Рамка 						= БезРамки;
	ЭлементФормы.ПоложениеЗаголовка 		= ПоложениеЗаголовкаЭлементаФормы.Нет;
	ЭлементФормы.Гиперссылка 				= Истина;
	ЭлементФормы.АвтоМаксимальнаяШирина		= Ложь;
	ЭлементФормы.МаксимальнаяШирина			= 7;
	ЭлементФормы.РастягиватьПоВертикали		= Истина;
	ЭлементФормы.РастягиватьПоГоризонтали	= Ложь;
	ЭлементФормы.Ширина						= 7;
	ЭлементФормы.РазмерКартинки 			= РазмерКартинки.Пропорционально;
	ЭлементФормы.УстановитьДействие("Нажатие", ИмяКомандыНажатия);
	ЭлементФормы.ПутьКДанным = СтрШаблон("ДанныеКнопок[%1].АдресИзображения", ИндексКнопки);
	
	ИмяЭлемента = СтрШаблон("КомандаИзбранныйТовар_Элемент03_%1", ИндексКнопки);
	ЭлементФормы = ЭлементыФормы.Добавить(ИмяЭлемента, Тип("ГруппаФормы"), ГруппаОсновная);
	ЭлементФормы.Вид 						= ВидГруппыФормы.ОбычнаяГруппа;
	ЭлементФормы.ОтображатьЗаголовок 		= Ложь;
	ЭлементФормы.Группировка				= ГруппировкаПодчиненныхЭлементовФормы.Вертикальная;
	ГруппаПравая = ЭлементФормы;
	
	ИмяЭлемента = СтрШаблон("КомандаИзбранныйТовар_Элемент04_%1", ИндексКнопки);
	ЭлементФормы = ЭлементыФормы.Добавить(ИмяЭлемента, Тип("ГруппаФормы"), ГруппаПравая);
	ЭлементФормы.Вид 						= ВидГруппыФормы.ОбычнаяГруппа;
	ЭлементФормы.ОтображатьЗаголовок 		= Ложь;
	ЭлементФормы.Группировка				= ГруппировкаПодчиненныхЭлементовФормы.ГоризонтальнаяВсегда;
	ГруппаВерхняя = ЭлементФормы;
	
	ИмяЭлемента = СтрШаблон("КомандаИзбранныйТовар_Элемент05_%1", ИндексКнопки);
	ЭлементФормы = ЭлементыФормы.Добавить(ИмяЭлемента, Тип("ПолеФормы"), ГруппаВерхняя);
	ЭлементФормы.Вид 						= ВидПоляФормы.ПолеКартинки;
	ЭлементФормы.Рамка 						= БезРамки;
	ЭлементФормы.ПоложениеЗаголовка 		= ПоложениеЗаголовкаЭлементаФормы.Нет;
	ЭлементФормы.Гиперссылка 				= Истина;
	ЭлементФормы.Шрифт						= ШрифтТекста;
	ЭлементФормы.ПутьКДанным 				= ПутьКДаннымПустойКартинки;
	ЭлементФормы.УстановитьДействие("Нажатие", ИмяКомандыНажатия);
	
	ИмяЭлемента = СтрШаблон("КомандаИзбранныйТовар_Элемент06_%1", ИндексКнопки);
	ЭлементФормы = ЭлементыФормы.Добавить(ИмяЭлемента, Тип("ГруппаФормы"), ГруппаВерхняя);
	ЭлементФормы.Вид 						= ВидГруппыФормы.ОбычнаяГруппа;
	ЭлементФормы.ОтображатьЗаголовок 		= Ложь;
	ЭлементФормы.Группировка				= ГруппировкаПодчиненныхЭлементовФормы.Вертикальная;
	ЭлементФормы.РастягиватьПоГоризонтали	= Ложь;
	ЭлементФормы.Ширина						= 2;
	ГруппаПраваяВерхняя = ЭлементФормы;
	
	ИмяЭлемента = СтрШаблон("КомандаИзбранныйТовар_Элемент07_%1", ИндексКнопки);
	ЭлементФормы = ЭлементыФормы.Добавить(ИмяЭлемента, Тип("ПолеФормы"), ГруппаПраваяВерхняя);
	ЭлементФормы.Вид 						= ВидПоляФормы.ПолеКартинки;
	ЭлементФормы.Рамка 						= БезРамки;
	ЭлементФормы.ПоложениеЗаголовка 		= ПоложениеЗаголовкаЭлементаФормы.Нет;
	ЭлементФормы.Гиперссылка 				= Истина;
	ЭлементФормы.Шрифт						= ШрифтГорячейКлавиши;
	ЭлементФормы.ЦветТекста					= Новый Цвет(160,160,160);
	ЭлементФормы.ПутьКДанным 				= ПутьКДаннымПустойКартинки;
	ЭлементФормы.УстановитьДействие("Нажатие", ИмяКомандыНажатия);
	
	Если Не СочетаниеКлавиш = Неопределено Тогда
		ЭлементФормы.СочетаниеКлавиш = СочетаниеКлавиш;
		ЭлементФормы.ТекстНевыбраннойКартинки = ИндексКнопки;
	КонецЕсли;
	
	ИмяЭлемента = СтрШаблон("КомандаИзбранныйТовар_Элемент08_%1", ИндексКнопки);
	ЭлементФормы = ЭлементыФормы.Добавить(ИмяЭлемента, Тип("ПолеФормы"), ГруппаПраваяВерхняя);
	ЭлементФормы.Вид						= ВидПоляФормы.ПолеКартинки;
	ЭлементФормы.Рамка						= БезРамки;
	ЭлементФормы.ПоложениеЗаголовка 		= ПоложениеЗаголовкаЭлементаФормы.Нет;
	ЭлементФормы.Гиперссылка 				= Истина;
	ЭлементФормы.Высота						= 1;
	ЭлементФормы.ПутьКДанным 				= СтрШаблон("ДанныеКнопок[%1].АдресИзображенияПапка", ИндексКнопки);
	ЭлементФормы.УстановитьДействие("Нажатие", ИмяКомандыНажатия);
	
	ИмяЭлемента = СтрШаблон("КомандаИзбранныйТовар_Элемент09_%1", ИндексКнопки);
	ЭлементФормы = ЭлементыФормы.Добавить(ИмяЭлемента, Тип("ГруппаФормы"), ГруппаПравая);
	ЭлементФормы.Вид 						= ВидГруппыФормы.ОбычнаяГруппа;
	ЭлементФормы.ОтображатьЗаголовок 		= Ложь;
	ЭлементФормы.Группировка				= ГруппировкаПодчиненныхЭлементовФормы.ГоризонтальнаяВсегда;
	ЭлементФормы.РастягиватьПоВертикали		= Ложь;
	ЭлементФормы.Высота						= 1;
	ГруппаНижняя = ЭлементФормы;
	
	ИмяЭлемента = СтрШаблон("КомандаИзбранныйТовар_Элемент10_%1", ИндексКнопки);
	ЭлементФормы = ЭлементыФормы.Добавить(ИмяЭлемента, Тип("ПолеФормы"), ГруппаНижняя);
	ЭлементФормы.Вид 						= ВидПоляФормы.ПолеКартинки;
	ЭлементФормы.Рамка 						= БезРамки;
	ЭлементФормы.ПоложениеЗаголовка 		= ПоложениеЗаголовкаЭлементаФормы.Нет;
	ЭлементФормы.Гиперссылка 				= Истина;
	ЭлементФормы.ПутьКДанным 				= ПутьКДаннымПустойКартинки;
	ЭлементФормы.Ширина						= 1;
	ЭлементФормы.УстановитьДействие("Нажатие", ИмяКомандыНажатия);
	
	ИмяЭлемента = СтрШаблон("КомандаИзбранныйТовар_Элемент11_%1", ИндексКнопки);
	ЭлементФормы = ЭлементыФормы.Добавить(ИмяЭлемента, Тип("ПолеФормы"), ГруппаНижняя);
	ЭлементФормы.Вид 						= ВидПоляФормы.ПолеКартинки;
	ЭлементФормы.Рамка 						= БезРамки;
	ЭлементФормы.ПоложениеЗаголовка 		= ПоложениеЗаголовкаЭлементаФормы.Нет;
	ЭлементФормы.Гиперссылка 				= Истина;
	ЭлементФормы.ПутьКДанным 				= ПутьКДаннымПустойКартинки;
	ЭлементФормы.АвтоМаксимальнаяШирина		= Ложь;
	ЭлементФормы.Ширина						= 7;
	ЭлементФормы.МаксимальнаяШирина			= 7;
	ЭлементФормы.РастягиватьПоГоризонтали	= Истина;
	ЭлементФормы.Шрифт						= ШрифтЦены;
	ЭлементФормы.УстановитьДействие("Нажатие", ИмяКомандыНажатия);
	
КонецПроцедуры

Функция ПараметрыРазмеровКомандУправленияЧекомДляОбычногоРежима(ПараметрыУвеличенногоИнтерфейса)
	
	ПараметрыРазмеров = Новый Структура;
	
	ПараметрыРазмеров.Вставить("ВысотаКоманды", ПараметрыУвеличенногоИнтерфейса.ВысотаКоманды);
	ПараметрыРазмеров.Вставить("ШиринаКоманды", ПараметрыУвеличенногоИнтерфейса.ШиринаКоманды);
	ПараметрыРазмеров.Вставить("ВысотаКомандыОперации", ПараметрыУвеличенногоИнтерфейса.ВысотаКоманды);
	ПараметрыРазмеров.Вставить("ШиринаКомандыОперации", ПараметрыУвеличенногоИнтерфейса.ШиринаКоманды);
	
	Возврат ПараметрыРазмеров;
	
КонецФункции

Функция ПринадлежитГруппеОпераций(Элементы, ЭлементФормы)
	
	РезультатФункции = Ложь;
	ГруппаОперации = Элементы.ГруппаОперации;
	Если ЭлементФормы.Родитель = ГруппаОперации
		Или (ТипЗнч(ЭлементФормы.Родитель) = Тип("ГруппаФормы") И ЭлементФормы.Родитель.Родитель = ГруппаОперации) Тогда
		
		РезультатФункции = Истина;
		
	КонецЕсли;
	Возврат РезультатФункции;
	
КонецФункции

Функция ИгнорироватьЭлементДляУвеличенияРазмера(РежимКСО, Элементы, ЭлементФормы)
	
	РезультатФункции = Ложь;

	Если (Не ТипЗнч(ЭлементФормы) = Тип("КнопкаФормы")) Или ЭлементФормы.Вид = ВидКнопкиФормы.Гиперссылка 
		Или ЭлементФормы = Элементы.ЦифроваяПанельПоиск
		Или (РежимКСО И ПринадлежитГруппеОпераций(Элементы, ЭлементФормы)) Тогда
		
		РезультатФункции = Истина;
		
	КонецЕсли;
	
	Возврат РезультатФункции;
	
КонецФункции

Функция ДобавитьРядКнопокПлиток(РодительскийЭлемент, ИндексРяда, Элементы)
	
	ИмяРяда = СтрШаблон("ПлиткаРядКнопок_%1", ИндексРяда);
	НовыйРяд = Элементы.Найти(ИмяРяда);
	Если НовыйРяд = Неопределено Тогда
		НовыйРяд = Элементы.Добавить(ИмяРяда, Тип("ГруппаФормы"), РодительскийЭлемент);
	КонецЕсли;
	НовыйРяд.Вид 						= ВидГруппыФормы.ОбычнаяГруппа;
	НовыйРяд.Группировка				= ГруппировкаПодчиненныхЭлементовФормы.ГоризонтальнаяВсегда;
	НовыйРяд.ОтображатьЗаголовок 		= Ложь;
	НовыйРяд.РастягиватьПоГоризонтали	= Истина;
	НовыйРяд.РастягиватьПоВертикали		= Истина;
	НовыйРяд.Высота 					= 10;
	
	Возврат НовыйРяд;
	
КонецФункции

Процедура ДобавитьКнопкуВРядПлиток(РядКнопок, ИндексКнопки, Форма)
	
	ЭлементыФормы = Форма.Элементы;
	ИмяКомандыНажатия = "Подключаемый_ПлиткаВыбор";
	ЦветФона = ЦветаСтиля.ЦветФонаФормы;
	ЦветШрифта = ЦветаСтиля.ЦветФонаФормы;
	ШрифтТекстом = Форма.СтруктураПлиточногоИнтерфейсаПодбора.ШрифтЭлементовПодбора;
	Шрифт = ОбщегоНазначения.ЗначениеИзСтрокиXML(ШрифтТекстом);
	ШрифтЦены = Новый Шрифт(Шрифт, , , Ложь);
	ШрифтЛинии = Новый Шрифт(, , 12);
	ОтображатьОстаток = Форма.ОтображатьОстаток;
	
	ИмяЭлемента = СтрШаблон("Плитка_Элемент01_%1", ИндексКнопки);
	
	ЭлементФормы = ЭлементыФормы.Добавить(ИмяЭлемента, Тип("ГруппаФормы"), РядКнопок);
	ЭлементФормы.Вид = ВидГруппыФормы.ОбычнаяГруппа;
	ЭлементФормы.Группировка = ГруппировкаПодчиненныхЭлементовФормы.ГоризонтальнаяВсегда;
	ЭлементФормы.ОтображатьЗаголовок = Ложь; 
	ЭлементФормы.РастягиватьПоГоризонтали = Истина;
	ЭлементФормы.РастягиватьПоВертикали = Истина;
	ЭлементФормы.Ширина = 26;
	ЭлементФормы.ВертикальныйИнтервал = ИнтервалМеждуЭлементамиФормы.Нет;
	ЭлементФормы.ГоризонтальныйИнтервал = ИнтервалМеждуЭлементамиФормы.Нет;
	ГруппаОсновная = ЭлементФормы;
	
	ИмяЭлемента = СтрШаблон("Плитка_Элемент02_%1", ИндексКнопки);
	ЭлементФормы = ЭлементыФормы.Добавить(ИмяЭлемента, Тип("ГруппаФормы"), ГруппаОсновная);
	ЭлементФормы.Вид = ВидГруппыФормы.Страницы;
	ЭлементФормы.Отображениестраниц = ОтображениеСтраницФормы.Нет;
	Страницы = ЭлементФормы;
	
	ИмяЭлемента = СтрШаблон("Плитка_Элемент03_%1", ИндексКнопки);
	ЭлементФормы = ЭлементыФормы.Добавить(ИмяЭлемента, Тип("ГруппаФормы"), Страницы);
	ЭлементФормы.Вид = ВидГруппыФормы.Страница;
	ЭлементФормы.Группировка = ГруппировкаПодчиненныхЭлементовФормы.ГоризонтальнаяВсегда;
	Страница = ЭлементФормы;
	
	ИмяЭлемента = СтрШаблон("Плитка_Элемент04_%1", ИндексКнопки);
	ЭлементФормы = ЭлементыФормы.Добавить(ИмяЭлемента, Тип("ДекорацияФормы"), Страница);
	ЭлементФормы.Вид = ВидДекорацииФормы.Надпись;
	ЭлементФормы.Шрифт = ШрифтЛинии;
	ЭлементФормы.РастягиватьПоВертикали = Истина;
	ЭлементФормы.Заголовок = " ";
	
	ИмяЭлемента = СтрШаблон("Плитка_Элемент05_%1", ИндексКнопки);
	ЭлементФормы = ЭлементыФормы.Добавить(ИмяЭлемента, Тип("ГруппаФормы"), Страницы);
	ЭлементФормы.Вид = ВидГруппыФормы.Страница;
	ЭлементФормы.Группировка = ГруппировкаПодчиненныхЭлементовФормы.ГоризонтальнаяВсегда;
	Страница = ЭлементФормы;
	
	ИмяЭлемента = СтрШаблон("Плитка_Элемент06_%1", ИндексКнопки);
	ЭлементФормы = ЭлементыФормы.Добавить(ИмяЭлемента, Тип("ДекорацияФормы"), Страница);
	ЭлементФормы.Вид = ВидДекорацииФормы.Надпись;
	ЭлементФормы.Шрифт = ШрифтЛинии;
	ЭлементФормы.ЦветФона = ЦветаСтиля.ЦветАктивизированногоПунктаРМК;
	ЭлементФормы.РастягиватьПоВертикали = Истина;
	ЭлементФормы.Заголовок = " ";
	
	ИмяЭлемента = СтрШаблон("Плитка_Элемент07_%1", ИндексКнопки);
	ЭлементФормы = ЭлементыФормы.Добавить(ИмяЭлемента, Тип("ГруппаФормы"), ГруппаОсновная);
	ЭлементФормы.Вид = ВидГруппыФормы.ОбычнаяГруппа;
	ЭлементФормы.Группировка = ГруппировкаПодчиненныхЭлементовФормы.Вертикальная;
	ЭлементФормы.ОтображатьЗаголовок = Ложь; 
	ЭлементФормы.РастягиватьПоГоризонтали = Истина;
	ЭлементФормы.РастягиватьПоВертикали = Истина;
	ЭлементФормы.ВертикальныйИнтервал = ИнтервалМеждуЭлементамиФормы.Нет;
	ЭлементФормы.ГоризонтальныйИнтервал = ИнтервалМеждуЭлементамиФормы.Нет;
	ГруппаДанных = ЭлементФормы;
	
	ИмяЭлемента = СтрШаблон("Плитка_Элемент08_%1", ИндексКнопки);
	ЭлементФормы = ЭлементыФормы.Добавить(ИмяЭлемента, Тип("ДекорацияФормы"), ГруппаДанных);
	ЭлементФормы.Вид = ВидДекорацииФормы.Картинка;
	ЭлементФормы.РастягиватьПоГоризонтали = Истина;
	ЭлементФормы.УстановитьДействие("Нажатие", ИмяКомандыНажатия);
	ЭлементФормы.Гиперссылка = Истина;
	ЭлементФормы.Шрифт = Шрифт;
	ЭлементФормы.Высота = 2;
	ЭлементФормы.МаксимальнаяВысота = 2;
	ЭлементФормы.АвтоМаксимальнаяВысота = Ложь;
	ЭлементФормы.РастягиватьПоГоризонтали = Истина;
	ЭлементФормы.УстановитьДействие("Нажатие", ИмяКомандыНажатия);
	
	ИмяЭлемента = СтрШаблон("Плитка_Элемент09_%1", ИндексКнопки);
	ЭлементФормы = ЭлементыФормы.Добавить(ИмяЭлемента, Тип("ПолеФормы"), ГруппаДанных);
	ЭлементФормы.Вид = ВидПоляФормы.ПолеКартинки;
	ЭлементФормы.Высота = 1;
	ЭлементФормы.Ширина = 1;
	ЭлементФормы.Гиперссылка = Истина;
	ЭлементФормы.РастягиватьПоВертикали = Истина;
	ЭлементФормы.РастягиватьПоГоризонтали = Истина;
	ЭлементФормы.Видимость = Истина;
	ЭлементФормы.ПутьКДанным = СтрШаблон("ДанныеКнопокПлиток[%1].АдресИзображения", ИндексКнопки);
	ЭлементФормы.ПоложениеЗаголовка = ПоложениеЗаголовкаЭлементаФормы.Нет;
	ЭлементФормы.РазмерКартинки = РазмерКартинки.Пропорционально;
	ЭлементФормы.Рамка = Новый Рамка(ТипРамкиЭлементаУправления.БезРамки);
	ЭлементФормы.УстановитьДействие("Нажатие", ИмяКомандыНажатия);
	
	ИмяЭлемента = СтрШаблон("Плитка_Элемент10_%1", ИндексКнопки);
	ЭлементФормы = ЭлементыФормы.Добавить(ИмяЭлемента, Тип("ДекорацияФормы"), ГруппаДанных);
	ЭлементФормы.Вид = ВидДекорацииФормы.Картинка;
	ЭлементФормы.Высота = 1;
	ЭлементФормы.Ширина = 1;
	ЭлементФормы.Гиперссылка = Истина;
	ЭлементФормы.РастягиватьПоВертикали = Истина;
	ЭлементФормы.РастягиватьПоГоризонтали = Истина;
	ЭлементФормы.Видимость = Ложь;
	ЭлементФормы.Картинка = БиблиотекаКартинок.РМКПлиткаПапкаПоУмолчанию;
	ЭлементФормы.РазмерКартинки = РазмерКартинки.Пропорционально;
	ЭлементФормы.Рамка = Новый Рамка(ТипРамкиЭлементаУправления.БезРамки);
	ЭлементФормы.УстановитьДействие("Нажатие", ИмяКомандыНажатия);
	
	Если ОтображатьОстаток Тогда
		ИмяЭлемента = СтрШаблон("Плитка_Элемент13_%1", ИндексКнопки);
		ЭлементФормы = ЭлементыФормы.Добавить(ИмяЭлемента, Тип("ГруппаФормы"), ГруппаДанных);
		ЭлементФормы.Вид = ВидГруппыФормы.ОбычнаяГруппа;
		ЭлементФормы.Группировка = ГруппировкаПодчиненныхЭлементовФормы.ГоризонтальнаяВсегда;
		ЭлементФормы.Ширина = 26;
		ЭлементФормы.ОтображатьЗаголовок = Ложь;
		ЭлементФормы.РастягиватьПоГоризонтали = Истина;
		ЭлементФормы.РастягиватьПоВертикали = Истина;
		ЭлементФормы.ВертикальныйИнтервал = ИнтервалМеждуЭлементамиФормы.Нет;
		ЭлементФормы.ГоризонтальныйИнтервал = ИнтервалМеждуЭлементамиФормы.Нет;
		ГруппаДанных = ЭлементФормы;
		
		ИмяЭлемента = СтрШаблон("Плитка_Элемент12_%1", ИндексКнопки);
		ЭлементФормы = ЭлементыФормы.Добавить(ИмяЭлемента, Тип("ДекорацияФормы"), ГруппаДанных);
		ЭлементФормы.Вид = ВидДекорацииФормы.Надпись;
		ЭлементФормы.РастягиватьПоГоризонтали = Истина;
		ЭлементФормы.РастягиватьПоВертикали = Ложь;
		ЭлементФормы.Шрифт = ШрифтЦены;
		ЭлементФормы.Высота = 1;
		ЭлементФормы.Ширина = 1;
		
		ИмяЭлемента = СтрШаблон("Плитка_Элемент11_%1", ИндексКнопки);
		ЭлементФормы = ЭлементыФормы.Добавить(ИмяЭлемента, Тип("ДекорацияФормы"), ГруппаДанных);
		ЭлементФормы.Вид = ВидДекорацииФормы.Надпись;
		ЭлементФормы.РастягиватьПоГоризонтали = Истина;
		ЭлементФормы.РастягиватьПоВертикали = Ложь;
		ЭлементФормы.ГоризонтальноеПоложение = ГоризонтальноеПоложениеЭлемента.Право;
		ЭлементФормы.Шрифт = ШрифтЦены;
		ЭлементФормы.Высота = 1;
		ЭлементФормы.Ширина = 1;
		
	Иначе
		ИмяЭлемента = СтрШаблон("Плитка_Элемент11_%1", ИндексКнопки);
		ЭлементФормы = ЭлементыФормы.Добавить(ИмяЭлемента, Тип("ДекорацияФормы"), ГруппаДанных);
		ЭлементФормы.Вид = ВидДекорацииФормы.Картинка;
		ЭлементФормы.РастягиватьПоГоризонтали = Истина;
		ЭлементФормы.РастягиватьПоВертикали = Ложь;
		ЭлементФормы.Гиперссылка = Истина;
		ЭлементФормы.Шрифт = ШрифтЦены;
		ЭлементФормы.Высота = 1;
		ЭлементФормы.Ширина = 1;
		ЭлементФормы.УстановитьДействие("Нажатие", ИмяКомандыНажатия);
	КонецЕсли;
	
КонецПроцедуры

Процедура ЗаполнитьПараметрыЭлементовГруппыВидовОплат(Элементы, ПараметрыЭлементов)
	
	ДанныеЭлемента = ДобавитьЭлементФормыВМассивИзменяемыхПараметров(ПараметрыЭлементов, Элементы.СжатаяПанельСдача);
	ДобавитьИзменяемыеПараметрыЭлементаФормы(ДанныеЭлемента, "Видимость", Ложь, Истина);
	
КонецПроцедуры

Функция ЭтоРежимРаботыПослеВводаТоваров(Форма)
	РезультатФункции = Не (Форма.РежимРаботыСЧеком = Форма.РежимыРаботыСЧеком.ВводТоваров
						Или Форма.РежимРаботыСЧеком = Форма.РежимыРаботыСЧеком.ЧекПустой);
	Возврат РезультатФункции;
КонецФункции

Функция КоличествоДоступныхВидовОплат(Форма)
	КоличествоВидовОплат = 0;
	МассивГруппИсключений = Новый Массив;
	МассивГруппИсключений.Добавить("ГруппаКоманднаяПанельКарта");
	МассивГруппИсключений.Добавить("СжатаяПанельСдача");
	
	Элементы = Форма.Элементы;

	Для Каждого ГруппаВидаОплаты Из Элементы.ГруппаВидовОплат.ПодчиненныеЭлементы Цикл
		Если МассивГруппИсключений.Найти(ГруппаВидаОплаты.Имя) = Неопределено И ГруппаВидаОплаты.Видимость Тогда
			КоличествоВидовОплат = КоличествоВидовОплат + 1;
		КонецЕсли;
	КонецЦикла;

	ГруппаСлоевВспомогательнаяПанель = Элементы.ГруппаСлоевЛеваяВерхняяВспомогательнаяПанель;
	Если ИнтерфейсРМКСлужебныйКлиентСервер.ПолучитьТекущийСлойГруппы(ГруппаСлоевВспомогательнаяПанель)
			= Элементы.ГруппаПоискСертификатов Тогда
			
		КоличествоВидовОплат = КоличествоВидовОплат + Форма.ТаблицаПодарочныхСертификатов.Количество();
			
	КонецЕсли;
	
	Возврат КоличествоВидовОплат;
КонецФункции

Процедура НастроитьИспользованиеКнопкиВыбораПоля(Элементы, ИмяПоля, ПоказатьКнопкуВыбора, УвеличитьШирину)
	
	ДельтаШирины = 2;
	Элементы[ИмяПоля].КнопкаВыбора = ПоказатьКнопкуВыбора;
	Если УвеличитьШирину Тогда
		Элементы[ИмяПоля].Ширина = Элементы[ИмяПоля].Ширина + ДельтаШирины;
	КонецЕсли;
	
КонецПроцедуры

Функция ОпределитьДоступноеКоличествоВидовОплатыЦифровойПанели(Форма)
	РезультатФункции = 5;
	
	Если Форма.ВидОтображения = Перечисления.ВидыОтображения.Уменьшенный Тогда
		РезультатФункции = 6;
	ИначеЕсли Форма.ВидОтображения = Перечисления.ВидыОтображения.Увеличенный Тогда
		РезультатФункции = 4;
	КонецЕсли;
	Если Форма.РежимКассыСамообслуживания Тогда
		РезультатФункции = РезультатФункции + 1;
	КонецЕсли;
	
	Возврат РезультатФункции;
КонецФункции

Функция НеобходимоСжиматьПанельИтогов(Форма, ТребуетсяГоризонтальноеСжатиеВсегда)
	РезультатФункции = Ложь;
	ДопустимоеКоличествоВидовОплатЦифровойПанели = ОпределитьДоступноеКоличествоВидовОплатыЦифровойПанели(Форма);
	
	Если Форма.ВертикальнаяОриентация Или ТребуетсяГоризонтальноеСжатиеВсегда
		Или (ЭтоРежимРаботыПослеВводаТоваров(Форма)
			И КоличествоДоступныхВидовОплат(Форма) >= ДопустимоеКоличествоВидовОплатЦифровойПанели) Тогда
			
		РезультатФункции = Истина;
			
	КонецЕсли;
	
	Возврат РезультатФункции;
КонецФункции

Процедура ДобавитьОтборРазделаГорячихКлавиш(Элементы, Элемент)
	
	ОтборЭлемента = Элемент.Отбор.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));
	ОтборЭлемента.ЛевоеЗначение =
		Новый ПолеКомпоновкиДанных(Элементы.ДеревоГорячиеКлавишиНомерСтроки.ПутьКДанным);
	ОтборЭлемента.ВидСравнения = ВидСравненияКомпоновкиДанных.Равно;
	ОтборЭлемента.ПравоеЗначение = 0;
	
КонецПроцедуры

функция ПодготовитьСочетаниеГорячейКлавиши(АкселераторыКупюр, КлавишаСтрокой)
	СочетаниеКлавиш = Неопределено;
	ПустаяКлавиша = ИнтерфейсРМКСлужебныйКлиентСервер.ПредставлениеПустойКлавиши();
	Если ЗначениеЗаполнено(КлавишаСтрокой) И Не КлавишаСтрокой = ПустаяКлавиша Тогда
		
		ДополнительнаяКлавиша = Клавиша[КлавишаСтрокой];
		СочетаниеКлавиш = Новый СочетаниеКлавиш(ДополнительнаяКлавиша,
			АкселераторыКупюр.Alt, АкселераторыКупюр.Ctrl, АкселераторыКупюр.Shift);
				
	КонецЕсли;
	Возврат СочетаниеКлавиш;
КонецФункции

#КонецОбласти