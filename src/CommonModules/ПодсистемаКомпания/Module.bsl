#Область ПрограммныйИнтерфейс

// См. ОбновлениеИнформационнойБазыУНФ.ОбновлениеРозницыДоУНФ
Процедура ОбновлениеРозницыДоУНФ() Экспорт
	
	УстановитьКонстантыОбновленияРозницыДоУНФ();
	ЗаполнитьДанныеПриПереходеСРозницы();
	
КонецПроцедуры

// Процедура выполняет первоначальное заполнение данных подсистемы и включение функциональности при первом запуске приложения
//
Процедура ПриПервомЗапуске() Экспорт
	
	УстановитьКонстантыНачальногоЗаполнения();
	ПервоначальноеЗаполнениеОбъектовПодсистемы();
	
КонецПроцедуры

// Процедура выполняет первоначальное заполнение данных подсистемы
//
Процедура ПервоначальноеЗаполнениеОбъектовПодсистемы() Экспорт
	
	// заполнение производственного календаря организации
	КалендарьПоПроизводственномуКалендарюРФ = ГрафикиРаботыУНФ.КалендарьПоПроизводственномуКалендарюРФ();
	Если КалендарьПоПроизводственномуКалендарюРФ <> Неопределено Тогда
		ОсновнаяОрганизация = Справочники.Организации.ОсновнаяОрганизация.ПолучитьОбъект();
		ОсновнаяОрганизация.ПроизводственныйКалендарь = КалендарьПоПроизводственномуКалендарюРФ;
		ОбновлениеИнформационнойБазы.ЗаписатьДанные(ОсновнаяОрганизация);
	КонецЕсли;
	
	// Создание стартового набора показателей бизнеса
	Справочники.ПоказателиБизнеса.СформироватьПоказателиБизнесаДоходыРасходыПоШаблону();
	Справочники.ПоказателиБизнеса.СформироватьПоказателиБизнесаДенежныйПотокПоШаблону();
	Справочники.ПоказателиБизнеса.СформироватьПоказателиБизнесаБалансПоШаблону();
			
	// Создание стартового набора карточек анализа бизнеса
	Справочники.КарточкиАнализаБизнеса.СформироватьНаборПоставляемыхКарточек();
	
	ОтчетыУНФ.Обновить();
	ОтчетыУНФ.ОбновитьТегиОтчетов();
	
КонецПроцедуры

// Процедура выполняет первоначальное включение функциональности подсистемы
//
Процедура УстановитьКонстантыНачальногоЗаполнения() Экспорт
	
	РежимЗапускаУНФ = Константы.ТекущийРежимЗапускаУНФ.Получить();
	ЭтоРозница 		= ВозможностиПриложения.ЭтоРозница();
	ЭтоУНФ 			= ВозможностиПриложения.ЭтоУНФ();
	ЭтоНастольноеПриложениеУНФ = ЭтоУНФ И РежимЗапускаУНФ = Перечисления.РежимыЗапускаУНФ.НастольноеПриложение;
		
	Если ЭтоУНФ Тогда
		
		Константы.ИспользоватьАнализБизнеса.Установить(Истина);
		Константы.ИспользоватьФинансовыеОперации.Установить(Истина);
		Константы.ИспользоватьРасчетФинансовогоРезультата.Установить(Истина);
		Константы.ИспользоватьРаспределениеЗатрат.Установить(Истина);
		Константы.НеИспользоватьНесколькоОрганизаций.Установить(Истина);
		Константы.КонтролироватьОстаткиПриПроведении.Установить(Истина);
		Константы.ИспользоватьДополнительныеРеквизитыИСведения.Установить(Истина);
		
		Если ЭтоНастольноеПриложениеУНФ Тогда
			Константы.ОтображатьСчетаУчета.Установить(Истина);
			Константы.ИспользоватьПодсистемуКомпания.Установить(Истина);
			Константы.ОтображатьПульсБизнеса.Установить(Истина);
			Константы.ОтображатьТекущиеДела.Установить(Истина);
		КонецЕсли;
		
	КонецЕсли;
		
	Если ЭтоРозница Тогда
		Константы.НеИспользоватьНесколькоОрганизаций.Установить(Истина);
		Константы.КонтролироватьОстаткиПриПроведении.Установить(Истина);
		Константы.ИспользоватьДополнительныеРеквизитыИСведения.Установить(Истина);
		Константы.ИспользоватьПодсистемуКомпания.Установить(Истина);
		Константы.ОтображатьПульсБизнеса.Установить(Истина);
		Константы.ОтображатьТекущиеДела.Установить(Истина);
	КонецЕсли;

КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

Процедура УстановитьКонстантыОбновленияРозницыДоУНФ()
	Константы.ИспользоватьАнализБизнеса.Установить(Истина);
	Константы.ИспользоватьФинансовыеОперации.Установить(Истина);
	Константы.ИспользоватьРасчетФинансовогоРезультата.Установить(Истина);
	Константы.ИспользоватьРаспределениеЗатрат.Установить(Истина);
	Константы.ОтображатьСчетаУчета.Установить(Истина);
КонецПроцедуры

Процедура ЗаполнитьДанныеПриПереходеСРозницы()
	Возврат;
КонецПроцедуры

#КонецОбласти