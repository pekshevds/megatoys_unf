#Область ПрограммныйИнтерфейс

// Емкость упаковки по GTIN.
// Результат выполнения операции будет передан в ОписаниеОповещения в переданном параметре.
// 
// Параметры:
//  ПараметрыЗапроса - (см. ИнтерфейсИСМПКлиент.ПараметрыЗапросаДанных).
Процедура ЕмкостьУпаковкиПоGTIN(ПараметрыЗапроса) Экспорт
	
	ПараметрыОбработки                = ПараметрыОбработкиЗапросаДанных(ПараметрыЗапроса);
	ДоступныеМетодыИнтерфейса         = ИнтерфейсИСМПКлиентСервер.ДоступныеМетодыИнтерфейса();
	ПараметрыОбработки.ИмяОбработчика = ДоступныеМетодыИнтерфейса.ЕмкостьУпаковкиПоGTIN;
	
	ОбработкаМетодаИнтефрейсаСАвторизацией(ПараметрыЗапроса, ПараметрыОбработки);
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

// Выполняет операцию авторизации ГИС МТ.
// 
// Параметры:
//  ПараметрыЗапроса - см. ИнтерфейсИСМПКлиент.ПараметрыЗапросаДанных.
Процедура ВыполнитьАвторизациюГИСМТ(ПараметрыЗапроса) Экспорт
	
	ПараметрыОбработки                = ПараметрыОбработкиЗапросаДанных(ПараметрыЗапроса);
	ДоступныеМетодыИнтерфейса         = ИнтерфейсИСМПКлиентСервер.ДоступныеМетодыИнтерфейса();
	ПараметрыОбработки.ИмяОбработчика = ДоступныеМетодыИнтерфейса.ВыполнитьАвторизацию;
	ПараметрыОбработки.ВидПродукции   = ПараметрыЗапроса.Параметры;
	
	ОбработкаМетодаИнтефрейсаСАвторизацией(ПараметрыЗапроса, ПараметрыОбработки);
	
КонецПроцедуры

// Проверяет результат авторизации на наличие ошибки.
// 
// Параметры:
//  РезультатАвторизации - см. ИнтерфейсИСМПКлиент.ПараметрыЗавершенияОбработки.
// 
// Возвращаемое значение:
//  Булево - Авторизация ГИС МТ выполнена с ошибкой.
Функция АвторизацияГИСМТВыполненаСОшибкой(РезультатАвторизации) Экспорт
	
	ЕстьОшибка = Ложь;
	
	Если РезультатАвторизации <> Неопределено
		И РезультатАвторизации.ЕстьОшибки Тогда
		
		Если ЗначениеЗаполнено(РезультатАвторизации.ТекстОшибки) Тогда
			ПоказатьПредупреждение(, РезультатАвторизации.ТекстОшибки);
		КонецЕсли;
		
		ЕстьОшибка = Истина
		
	КонецЕсли;
	
	Возврат ЕстьОшибка;
	
КонецФункции

#Область ИнтерфейсИСМП

Процедура ОбработкаМетодаИнтефрейсаСАвторизацией(ПараметрыЗапроса, ПараметрыОбработки)
	
	ДоступныеМетодыИнтерфейса = ИнтерфейсИСМПКлиентСервер.ДоступныеМетодыИнтерфейса();
	
	Если ПараметрыОбработки.ИмяОбработчика = ДоступныеМетодыИнтерфейса.ВыполнитьАвторизацию Тогда
		Если Не ПараметрыОбработки.ВызовПослеАвторизации Тогда
			ПараметрыОбработки.ТребуетсяОбновлениеКлючаСессии = Истина;
		КонецЕсли;
	Иначе
		ИнтерфейсИСМПВызовСервера.ЗапросаМетодаИнтефрейсаСОбработкой(ПараметрыОбработки);
	КонецЕсли;
	
	Результат = ПараметрыЗавершенияОбработки();
	ДополнительныеПараметры = Новый Структура();
	ДополнительныеПараметры.Вставить("ПараметрыЗапроса",   ПараметрыЗапроса);
	ДополнительныеПараметры.Вставить("ПараметрыОбработки", ПараметрыОбработки);
	
	Если ПараметрыОбработки.ОрганизацияПоСертификатам <> Неопределено
		И ПараметрыОбработки.ОрганизацияПоСертификатам Тогда
		
		ОповещениеПриЗапросеКлючаСессии = Новый ОписаниеОповещения(
			"ПоискОрганизацияПоСертификатамЗавершение",
			ЭтотОбъект,
			ДополнительныеПараметры);
		ЭлектроннаяПодписьКлиент.НайтиДействительныеЛичныеСертификаты(ОповещениеПриЗапросеКлючаСессии);
		Возврат;
		
	ИначеЕсли ПараметрыОбработки.ТребуетсяОбновлениеКлючаСессии Тогда
		
		Если ПараметрыОбработки.ВызовПослеАвторизации Тогда
			Результат.ЕстьОшибки  = Истина;
			Если ЗначениеЗаполнено(ПараметрыОбработки.ТекстОшибки) Тогда
				ТекстОшибки = СтрШаблон(
					НСтр("ru = 'Не удалось выполнить авторизацию ГИС МТ по причине:
						       |%1'"),
					ПараметрыОбработки.ТекстОшибки);
			Иначе
				ТекстОшибки = НСтр("ru = 'Не удалось выполнить авторизацию ГИС МТ.'");
			КонецЕсли;
			Результат.ТекстОшибки = ТекстОшибки;
		Иначе
			
			ОповещениеПриЗапросеКлючаСессии = Новый ОписаниеОповещения(
				"ЗапроситьКлючСессииЗавершение",
				ЭтотОбъект,
				ДополнительныеПараметры);
			
			Если ИнтеграцияИСКлиентСервер.ЭтоПродукцияМОТП(ПараметрыОбработки.ВидПродукции) Тогда
				ПараметрыЗапросаКлючаСесии = ИнтерфейсМОТПКлиентСервер.ПараметрыЗапросаКлючаСессии(ПараметрыОбработки.Организация);
			Иначе
				ПараметрыЗапросаКлючаСесии = ИнтерфейсИСМПКлиентСервер.ПараметрыЗапросаКлючаСессии(
					ПараметрыОбработки.Организация);
			КонецЕсли;
			
			ИнтерфейсАвторизацииИСМПКлиент.ЗапроситьКлючСессии(
				ПараметрыЗапросаКлючаСесии, 
				ОповещениеПриЗапросеКлючаСессии);
				
			Возврат;
			
		КонецЕсли;
		
	ИначеЕсли ПараметрыОбработки.ЕстьОшибки Тогда
		ТекстОшибки = СтрШаблон(
			НСтр("ru = 'Не удалось запросить данные ГИС МТ по причине: %1'"),
			ПараметрыОбработки.ТекстОшибки);
		Результат.ЕстьОшибки  = Истина;
		Результат.ТекстОшибки = ТекстОшибки;
	Иначе
		Результат.Результат = ПараметрыОбработки.Результат;
	КонецЕсли;
	
	ВыполнитьОбработкуОповещения(ПараметрыЗапроса.ОповещениеОЗавершении, Результат);
	
КонецПроцедуры

#КонецОбласти

#Область Авторизация

Процедура ПоискОрганизацияПоСертификатамЗавершение(Результат, ДополнительныеПараметры) Экспорт
	
	ДополнительныеПараметры.ПараметрыОбработки.ОрганизацияПоСертификатам = Ложь;
	
	Если Результат = Неопределено
		Или Результат.Количество() = 0 Тогда
		ДополнительныеПараметры.ПараметрыОбработки.ЕстьОшибки  = Истина;
		ДополнительныеПараметры.ПараметрыОбработки.ТекстОшибки = НСтр("ru = 'Не найдено доступных сертификатов для подписи.'");
	Иначе
		ДополнительныеПараметры.ПараметрыОбработки.Организация = Результат[0].Организация;
	КонецЕсли;
	
	ОбработкаМетодаИнтефрейсаСАвторизацией(ДополнительныеПараметры.ПараметрыЗапроса, ДополнительныеПараметры.ПараметрыОбработки)
	
КонецПроцедуры

Процедура ЗапроситьКлючСессииЗавершение(Результат, ДополнительныеПараметры) Экспорт
	
	ОтказОтАвторизации = Ложь;
	ОшибкаАвторизации  = Ложь;
	
	Если ТипЗнч(Результат) <> Тип("Соответствие")
		Или (ДополнительныеПараметры.ПараметрыОбработки.Организация <> Неопределено
		И Результат[ДополнительныеПараметры.ПараметрыОбработки.Организация] = Неопределено) Тогда
		ОтказОтАвторизации = Истина;
	Иначе
		
		Если ДополнительныеПараметры.ПараметрыОбработки.Организация = Неопределено Тогда
			Для Каждого КлючИЗначение Из Результат Цикл
				РезультатАвторизации = КлючИЗначение.Значение;
			КонецЦикла;
		Иначе
			РезультатАвторизации = Результат[ДополнительныеПараметры.ПараметрыОбработки.Организация];
		КонецЕсли;
		
		Если РезультатАвторизации = Неопределено Тогда
			ОшибкаАвторизации = Истина;
			ТекстОшибки = НСтр("ru = 'Произошла ошибка при авторизации.'");
		ИначеЕсли РезультатАвторизации <> Истина Тогда
			ОшибкаАвторизации = Истина;
			ТекстОшибки = РезультатАвторизации;
		Иначе
			ДополнительныеПараметры.ПараметрыОбработки.ТребуетсяОбновлениеКлючаСессии = Ложь;
		КонецЕсли;
	КонецЕсли;
	
	Если ОтказОтАвторизации Тогда
		Возврат;
	ИначеЕсли ОшибкаАвторизации Тогда
		ДополнительныеПараметры.ПараметрыОбработки.ЕстьОшибки  = Истина;
		ДополнительныеПараметры.ПараметрыОбработки.ТекстОшибки = ТекстОшибки;
	КонецЕсли;

	ДополнительныеПараметры.ПараметрыОбработки.ВызовПослеАвторизации = Истина;
	ОбработкаМетодаИнтефрейсаСАвторизацией(ДополнительныеПараметры.ПараметрыЗапроса, ДополнительныеПараметры.ПараметрыОбработки)
	
КонецПроцедуры

#КонецОбласти

#Область ПараметрыОбработки

// Параметры запроса данных.
// 
// Возвращаемое значение:
//  Структура - Параметры запроса данных:
// * Параметры - Структура - Параметры запроса.
// * Организация - ОпределяемыйТип.Организация - Организация.
// * ОповещениеОЗавершении - Неопределено, ОписаниеОповещения - Точка возврата после выполенения метода.
Функция ПараметрыЗапросаДанных() Экспорт
	
	ВозвращаемоеЗначение = Новый Структура();
	ВозвращаемоеЗначение.Вставить("Параметры",             Неопределено);
	ВозвращаемоеЗначение.Вставить("Организация",           Неопределено);
	ВозвращаемоеЗначение.Вставить("ОповещениеОЗавершении", Неопределено);
	
	Возврат ВозвращаемоеЗначение;
	
КонецФункции

Функция ПараметрыОбработкиЗапросаДанных(ПараметрыЗапроса)
	
	ВозвращаемоеЗначение = Новый Структура();
	ВозвращаемоеЗначение.Вставить("ИмяОбработчика",                 Неопределено);
	ВозвращаемоеЗначение.Вставить("ТребуетсяОбновлениеКлючаСессии", Ложь);
	ВозвращаемоеЗначение.Вставить("ВызовПослеАвторизации",          Ложь);
	ВозвращаемоеЗначение.Вставить("Результат",                      Неопределено);
	ВозвращаемоеЗначение.Вставить("ЕстьОшибки",                     Ложь);
	ВозвращаемоеЗначение.Вставить("ТекстОшибки",                    Неопределено);
	ВозвращаемоеЗначение.Вставить("Параметры",                      ПараметрыЗапроса.Параметры);
	ВозвращаемоеЗначение.Вставить("Организация",                    ПараметрыЗапроса.Организация);
	ВозвращаемоеЗначение.Вставить("ОрганизацияПоСертификатам",      Неопределено);
	ВозвращаемоеЗначение.Вставить("ВидПродукции",                   Неопределено);
	
	Возврат ВозвращаемоеЗначение;
	
КонецФункции

// Параметры завершения обработки.
// 
// Возвращаемое значение:
//  Структура - Параметры завершения обработки:
// * ЕстьОшибки - Булево - Наличие ошибок.
// * ТекстОшибки - Неопределено - Текст Ошибки.
// * Результат - Неопределено - Результат.
Функция ПараметрыЗавершенияОбработки() Экспорт
	
	ВозвращаемоеЗначение = Новый Структура();
	ВозвращаемоеЗначение.Вставить("ЕстьОшибки",                  Ложь);
	ВозвращаемоеЗначение.Вставить("ТекстОшибки",                 Неопределено);
	ВозвращаемоеЗначение.Вставить("Результат",                   Неопределено);
	
	Возврат ВозвращаемоеЗначение;
	
КонецФункции

#КонецОбласти

#КонецОбласти
