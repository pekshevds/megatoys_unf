
#Область ПрограммныйИнтерфейс

#Область СобытияЭлементовФормы

// Вызывается при активизации динамического списка с объектами, содержащими контактную информацию.
// Подключает отложенный обработчик заполнения таблицы контактной информации.
//
// Параметры:
//  Форма             - УправляемаяФорма
//  Элемент           - ТаблицаФормы
//  ТекущийВладелецКИ - ОпределяемыйТип.ВладелецКонтактнойИнформации - Реквизит формы в котором хранится текущий 
//                      выбранный владелец контактной информации.
//  КолонкаВладелецКИ - Строка - Название колонки динамического списка, в котором содержатся владельцы КИ.
//
Процедура ПриАктивизацииДинамическогоСписка(Форма, Элемент, ТекущийВладелецКИ, КолонкаВладелецКИ) Экспорт
	
	Если ТипЗнч(Элемент.ТекущаяСтрока) = Тип("СтрокаГруппировкиДинамическогоСписка") Тогда
		Возврат;
	КонецЕсли;
	
	ВладелецКИАктивнойСтроки = Неопределено;
	Если Элемент.ТекущиеДанные <> Неопределено Тогда
		ВладелецКИАктивнойСтроки = Элемент.ТекущиеДанные[КолонкаВладелецКИ];
	КонецЕсли;
	
	Если Не Форма.ЕстьТаблицаДанныеПанелиКонтактнойИнформации Тогда
		ТекущийВладелецКИ = ВладелецКИАктивнойСтроки;
		Возврат;
	КонецЕсли;
	
	Если ВладелецКИАктивнойСтроки <> ТекущийВладелецКИ Тогда
		ТекущийВладелецКИ = ВладелецКИАктивнойСтроки;
		Форма.ПодключитьОбработчикОжидания("Подключаемый_ОбработатьАктивизациюСтрокиСписка", 0.7, Истина);
	КонецЕсли;
	
КонецПроцедуры

Процедура ДанныеПанелиКонтактнойИнформацииВыбор(Форма, Элемент, ВыбраннаяСтрока, Поле, СтандартнаяОбработка) Экспорт
	
	СтандартнаяОбработка = Ложь;
	
	СтрокаКИ = Форма.ДанныеПанелиКонтактнойИнформации.НайтиПоИдентификатору(ВыбраннаяСтрока);
	
	Если СтрокаКИ.ТипОтображаемыхДанных = "ЗначениеКИ" Тогда
		
		ДанныеКИ = Новый Структура;
		ДанныеКИ.Вставить("Тип", СтрокаКИ.ТипКИ);
		ДанныеКИ.Вставить("Представление", СтрокаКИ.ПредставлениеКИ);
		ДанныеКИ.Вставить("Владелец", СтрокаКИ.ВладелецКИ);
		
		ОснованиеЗаполненияСобытия = Новый Структура;
		ОснованиеЗаполненияСобытия.Вставить("Контакт", СтрокаКИ.ВладелецКИ);
		ОснованиеЗаполненияСобытия.Вставить("КонтактРодитель", СтрокаКИ.Родитель);
		ОснованиеЗаполненияСобытия.Вставить("ЗначениеКИ", СтрокаКИ.ПредставлениеКИ);
		
		ВыполнитьДействиеПриНажатииКИ(Форма, ДанныеКИ, ОснованиеЗаполненияСобытия);
		
	ИначеЕсли СтрокаКИ.ТипОтображаемыхДанных = "КонтактноеЛицо" Тогда
		
		ПоказатьЗначение(,СтрокаКИ.ВладелецКИ);
		
	ИначеЕсли СтрокаКИ.ТипОтображаемыхДанных = "ГоловнойКонтрагент" Тогда
		Если Поле.Имя = "ДанныеПанелиКонтактнойИнформацииКартинкаГоловного" Тогда
			ОписаниеОповещенияОВыборе = Новый ОписаниеОповещения("ВыборКонтрагентаИзИерархии",Форма);
			Форма.ПоказатьВыборИзМеню(ОписаниеОповещенияОВыборе,СтрокаКИ.СписокПодразделенийГоловногоКонтрагента,Поле);
		Иначе
			ПоказатьЗначение(,СтрокаКИ.ВладелецКИ);
		КонецЕсли;
		
	КонецЕсли;
	
КонецПроцедуры

Процедура ДанныеПанелиКонтактнойИнформацииПриАктивизацииСтроки(Форма, Элемент) Экспорт
	
	СтрокаКИ = Форма.Элементы.ДанныеПанелиКонтактнойИнформации.ТекущиеДанные;
	Если СтрокаКИ = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	КнопкаЯндекс = Форма.Элементы.Найти("КонтекстноеМенюПанелиКартаЯндекс");
	Если КнопкаЯндекс <> Неопределено Тогда
		КнопкаЯндекс.Доступность = СтрокаКИ.ТипОтображаемыхДанных = "ЗначениеКИ"
			И СтрокаКИ.ИндексПиктограммы = 12; // Адрес
	КонецЕсли;
	
	КнопкаGoogle = Форма.Элементы.Найти("КонтекстноеМенюПанелиКартаGoogle");
	Если КнопкаGoogle <> Неопределено Тогда
		КнопкаGoogle.Доступность = СтрокаКИ.ТипОтображаемыхДанных = "ЗначениеКИ"
			И СтрокаКИ.ИндексПиктограммы = 12; // Адрес
	КонецЕсли;
	
КонецПроцедуры

Процедура ВыполнитьКоманду(Форма, Команда, ВладелецКИ) Экспорт
	
	Если Команда.Имя = "КонтекстноеМенюПанелиКартаЯндекс" Тогда
		
		СтрокаКИ = Форма.Элементы.ДанныеПанелиКонтактнойИнформации.ТекущиеДанные;
		Если СтрокаКИ = Неопределено Тогда
			Возврат;
		КонецЕсли;
		
		УправлениеКонтактнойИнформациейКлиент.ПоказатьАдресНаКарте(СтрокаКИ.ПредставлениеКИ, "Яндекс.Карты");
		
	ИначеЕсли Команда.Имя = "КонтекстноеМенюПанелиКартаGoogle" Тогда
		
		СтрокаКИ = Форма.Элементы.ДанныеПанелиКонтактнойИнформации.ТекущиеДанные;
		Если СтрокаКИ = Неопределено Тогда
			Возврат;
		КонецЕсли;
		
		УправлениеКонтактнойИнформациейКлиент.ПоказатьАдресНаКарте(СтрокаКИ.ПредставлениеКИ, "GoogleMaps");
		
	ИначеЕсли Команда.Имя = "СписокПоказатьКонтактнуюИнформациюТекущегоОбъекта" Тогда
		
		ОткрытьФорму("ОбщаяФорма.КонтактнаяИнформацияВладельца_МК", Новый Структура("ВладелецКИ", ВладелецКИ));
		
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

Функция ОбрабатыватьОповещения(Форма, ИмяСобытия, Параметр) Экспорт
	
	Результат = ИмяСобытия = "Запись_Контрагент"
		Или ИмяСобытия = "Запись_КонтактноеЛицо";
	
	Возврат Результат;
	
КонецФункции

// Заполняет панель данными контактной информации владельца.
//
// Параметры:
//  Форма - УправляемаяФорма
//  НовыеДанныеПанели - См. КонтактнаяИнформацияПанельУНФ.ДанныеПанелиКонтактнойИнформации()
//
Процедура ЗаполнитьДанныеПанелиКИ(Форма, НовыеДанныеПанели) Экспорт
	
	Если Не Форма.ЕстьТаблицаДанныеПанелиКонтактнойИнформации Тогда
		Возврат;
	КонецЕсли;
	
	Форма.ДанныеПанелиКонтактнойИнформации.Очистить();
	Для каждого Строка Из НовыеДанныеПанели Цикл
		НоваяСтрока = Форма.ДанныеПанелиКонтактнойИнформации.Добавить();
		ЗаполнитьЗначенияСвойств(НоваяСтрока, Строка);
	КонецЦикла;
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

Процедура ВыполнитьДействиеПриНажатииКИ(Форма, ДанныеКИ, ОснованиеЗаполненияСобытия)
	
	Если ДанныеКИ.Тип = ПредопределенноеЗначение("Перечисление.ТипыКонтактнойИнформации.Телефон") Тогда
		
		Если Не Форма.ИспользуетсяРаботаССобытиями Тогда
			УправлениеКонтактнойИнформациейКлиент.ПозвонитьПоТелефону(ДанныеКИ.Представление);
		ИначеЕсли ТелефонияКлиент.ПоддерживаютсяВызовы() Тогда
			ТелефонияКлиент.ПозвонитьПоНомеру(ДанныеКИ.Представление, ДанныеКИ.Владелец);
		Иначе
			ЗначенияЗаполнения = Новый Структура;
			ЗначенияЗаполнения.Вставить("ТипСобытия", ТипСобытияПоТипуКонтактнойИнформации(ДанныеКИ.Тип));
			ЗначенияЗаполнения.Вставить("ОснованиеЗаполнения", ОснованиеЗаполненияСобытия);
			ОткрытьФорму("Документ.Событие.ФормаОбъекта", Новый Структура("ЗначенияЗаполнения", ЗначенияЗаполнения), Форма);
		КонецЕсли;
		
	ИначеЕсли ДанныеКИ.Тип = ПредопределенноеЗначение("Перечисление.ТипыКонтактнойИнформации.Skype") Тогда
		
		Если ЗначениеЗаполнено(ДанныеКИ.Представление) Тогда
			УправлениеКонтактнойИнформациейКлиент.НачатьБеседуВSkype(ДанныеКИ.Представление);
		КонецЕсли;
		
	ИначеЕсли ДанныеКИ.Тип = ПредопределенноеЗначение("Перечисление.ТипыКонтактнойИнформации.ВебСтраница") Тогда
		
		УправлениеКонтактнойИнформациейКлиент.ПерейтиПоВебСсылке("", ДанныеКИ.Представление, ДанныеКИ.Тип);
		
	ИначеЕсли ДанныеКИ.Тип = ПредопределенноеЗначение("Перечисление.ТипыКонтактнойИнформации.АдресЭлектроннойПочты") Тогда
		
		Если Не Форма.ИспользуетсяРаботаССобытиями Тогда
			АдресПочты = ДанныеКИ.Представление;
			ИсточникКонтактнойИнформации = ДанныеКИ.Владелец;
			УправлениеКонтактнойИнформациейКлиент.СоздатьЭлектронноеПисьмо("", АдресПочты, ДанныеКИ.Тип, ИсточникКонтактнойИнформации);
		Иначе
			ЗначенияЗаполнения = Новый Структура;
			ЗначенияЗаполнения.Вставить("ТипСобытия", ТипСобытияПоТипуКонтактнойИнформации(ДанныеКИ.Тип));
			ЗначенияЗаполнения.Вставить("ОснованиеЗаполнения", ОснованиеЗаполненияСобытия);
			ОткрытьФорму("Документ.Событие.ФормаОбъекта", Новый Структура("ЗначенияЗаполнения", ЗначенияЗаполнения), Форма);
		КонецЕсли;
		
	Иначе
		
		Если Форма.ИспользуетсяРаботаССобытиями Тогда
			ЗначенияЗаполнения = Новый Структура;
			ЗначенияЗаполнения.Вставить("ТипСобытия", ТипСобытияПоТипуКонтактнойИнформации(ДанныеКИ.Тип));
			ЗначенияЗаполнения.Вставить("ОснованиеЗаполнения", ОснованиеЗаполненияСобытия);
			ОткрытьФорму("Документ.Событие.ФормаОбъекта", Новый Структура("ЗначенияЗаполнения", ЗначенияЗаполнения), Форма);
		КонецЕсли;
		
	КонецЕсли;
	
КонецПроцедуры

Функция ТипСобытияПоТипуКонтактнойИнформации(ТипКИ)
	
	Если ТипКИ = ПредопределенноеЗначение("Перечисление.ТипыКонтактнойИнформации.Skype") Тогда
		ТипСобытия = ПредопределенноеЗначение("Перечисление.ТипыСобытий.Прочее");
	ИначеЕсли ТипКИ = ПредопределенноеЗначение("Перечисление.ТипыКонтактнойИнформации.Адрес") Тогда
		ТипСобытия = ПредопределенноеЗначение("Перечисление.ТипыСобытий.ЛичнаяВстреча");
	ИначеЕсли ТипКИ = ПредопределенноеЗначение("Перечисление.ТипыКонтактнойИнформации.АдресЭлектроннойПочты") Тогда
		ТипСобытия = ПредопределенноеЗначение("Перечисление.ТипыСобытий.ЭлектронноеПисьмо");
	ИначеЕсли ТипКИ = ПредопределенноеЗначение("Перечисление.ТипыКонтактнойИнформации.ВебСтраница") Тогда
		ТипСобытия = ПредопределенноеЗначение("Перечисление.ТипыСобытий.Прочее");
	ИначеЕсли ТипКИ = ПредопределенноеЗначение("Перечисление.ТипыКонтактнойИнформации.Другое") Тогда
		ТипСобытия = ПредопределенноеЗначение("Перечисление.ТипыСобытий.Прочее");
	ИначеЕсли ТипКИ = ПредопределенноеЗначение("Перечисление.ТипыКонтактнойИнформации.Телефон") Тогда
		ТипСобытия = ПредопределенноеЗначение("Перечисление.ТипыСобытий.ТелефонныйЗвонок");
	ИначеЕсли ТипКИ = ПредопределенноеЗначение("Перечисление.ТипыКонтактнойИнформации.Факс") Тогда
		ТипСобытия = ПредопределенноеЗначение("Перечисление.ТипыСобытий.ТелефонныйЗвонок");
	Иначе
		ТипСобытия = ПредопределенноеЗначение("Перечисление.ТипыСобытий.ПустаяСсылка");
	КонецЕсли;
	
	Возврат ТипСобытия;
	
КонецФункции

#КонецОбласти