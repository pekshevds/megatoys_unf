////////////////////////////////////////////////////////////////////////////////
// Кадровый учет для небольших организаций
// 
////////////////////////////////////////////////////////////////////////////////

#Область СлужебныйПрограммныйИнтерфейс

#Область УправлениеДоступом

// См. УправлениеДоступомПереопределяемый.ПриЗаполненииСписковСОграничениемДоступа.
Процедура ПриЗаполненииСписковСОграничениемДоступа(Списки) Экспорт
	
	Списки.Вставить(Метаданные.Документы.КадровыйПеревод, Истина);
	Списки.Вставить(Метаданные.Справочники.КадровыйПереводПрисоединенныеФайлы, Истина);
	Списки.Вставить(Метаданные.Документы.ПриемНаРаботу, Истина);
	Списки.Вставить(Метаданные.Справочники.ПриемНаРаботуПрисоединенныеФайлы, Истина);
	Списки.Вставить(Метаданные.Документы.Увольнение, Истина);
	Списки.Вставить(Метаданные.Справочники.УвольнениеПрисоединенныеФайлы, Истина);
	
КонецПроцедуры

#КонецОбласти

Функция СведенияОСреднемЗаработкеДляСправкиПоБезработице(КадровыеДанныеСотрудников) Экспорт
	
	СведенияОСреднемЗаработке = Новый Соответствие;
	
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = Новый МенеджерВременныхТаблиц;
	
	Запрос.УстановитьПараметр("КадровыеДанныеСотрудников", КадровыеДанныеСотрудников);
	
	Запрос.Текст =
		"ВЫБРАТЬ
		|	КадровыеДанныеСотрудников.ГоловнаяОрганизация КАК ГоловнаяОрганизация,
		|	КадровыеДанныеСотрудников.Сотрудник,
		|	КадровыеДанныеСотрудников.ДатаПриема,
		|	КадровыеДанныеСотрудников.ДатаУвольнения,
		|	КОНЕЦПЕРИОДА(ДОБАВИТЬКДАТЕ(КадровыеДанныеСотрудников.ДатаУвольнения, МЕСЯЦ, -1), МЕСЯЦ) КАК ОкончаниеПериода
		|ПОМЕСТИТЬ ВТПериодыРаботыФизическихЛицПредварительно
		|ИЗ
		|	&КадровыеДанныеСотрудников КАК КадровыеДанныеСотрудников
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ РАЗЛИЧНЫЕ
		|	ПериодыРаботы.ГоловнаяОрганизация,
		|	ПериодыРаботы.Сотрудник,
		|	ПериодыРаботы.ДатаПриема,
		|	ПериодыРаботы.ДатаУвольнения,
		|	НАЧАЛОПЕРИОДА(ДОБАВИТЬКДАТЕ(ПериодыРаботы.ОкончаниеПериода, МЕСЯЦ, -2), МЕСЯЦ) КАК НачалоТрехмесячногоПериода,
		|	ВЫБОР
		|		КОГДА НАЧАЛОПЕРИОДА(ДОБАВИТЬКДАТЕ(ПериодыРаботы.ОкончаниеПериода, МЕСЯЦ, -2), МЕСЯЦ) > ПериодыРаботы.ДатаПриема
		|			ТОГДА НАЧАЛОПЕРИОДА(ДОБАВИТЬКДАТЕ(ПериодыРаботы.ОкончаниеПериода, МЕСЯЦ, -2), МЕСЯЦ)
		|		ИНАЧЕ ПериодыРаботы.ДатаПриема
		|	КОНЕЦ КАК НачалоПериода,
		|	ПериодыРаботы.ОкончаниеПериода
		|ПОМЕСТИТЬ ВТПериодыРаботыФизическихЛиц
		|ИЗ
		|	ВТПериодыРаботыФизическихЛицПредварительно КАК ПериодыРаботы";
	
	Запрос.Выполнить();
	
	РасчетЗарплатыДляНебольшихОрганизаций.СоздатьВТНачисленияЗарплаты(Запрос.МенеджерВременныхТаблиц);
	
	Запрос.Текст =
		"ВЫБРАТЬ
		|	ПериодыРаботыФизическихЛиц.ГоловнаяОрганизация КАК ГоловнаяОрганизация,
		|	ПериодыРаботыФизическихЛиц.Сотрудник КАК Сотрудник,
		|	ПериодыРаботыФизическихЛиц.НачалоТрехмесячногоПериода КАК НачалоТрехмесячногоПериода,
		|	ПериодыРаботыФизическихЛиц.НачалоПериода КАК НачалоПериода,
		|	ПериодыРаботыФизическихЛиц.ОкончаниеПериода КАК ОкончаниеПериода,
		|	СУММА(НачисленияЗарплаты.Сумма) КАК Сумма,
		|	КОЛИЧЕСТВО(РАЗЛИЧНЫЕ НАЧАЛОПЕРИОДА(НачисленияЗарплаты.ДатаНачала, МЕСЯЦ)) КАК Месяцев
		|ПОМЕСТИТЬ ВТПериодыРаботыФизическихЛицССуммой
		|ИЗ
		|	ВТПериодыРаботыФизическихЛиц КАК ПериодыРаботыФизическихЛиц
		|		ЛЕВОЕ СОЕДИНЕНИЕ ВТНачисленияЗарплаты КАК НачисленияЗарплаты
		|		ПО ПериодыРаботыФизическихЛиц.ГоловнаяОрганизация = НачисленияЗарплаты.ГоловнаяОрганизация
		|			И ПериодыРаботыФизическихЛиц.Сотрудник = НачисленияЗарплаты.Сотрудник
		|
		|СГРУППИРОВАТЬ ПО
		|	ПериодыРаботыФизическихЛиц.ГоловнаяОрганизация,
		|	ПериодыРаботыФизическихЛиц.Сотрудник,
		|	ПериодыРаботыФизическихЛиц.НачалоТрехмесячногоПериода,
		|	ПериодыРаботыФизическихЛиц.НачалоПериода,
		|	ПериодыРаботыФизическихЛиц.ОкончаниеПериода
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ПериодыРаботыФизическихЛиц.ГоловнаяОрганизация КАК ГоловнаяОрганизация,
		|	ПериодыРаботыФизическихЛиц.Сотрудник КАК Сотрудник,
		|	ПериодыРаботыФизическихЛиц.НачалоТрехмесячногоПериода КАК НачалоТрехмесячногоПериода,
		|	ПериодыРаботыФизическихЛиц.ОкончаниеПериода КАК ОкончаниеПериода,
		|	ПериодыРаботыФизическихЛиц.Сумма КАК Сумма,
		|	КОЛИЧЕСТВО(РАЗЛИЧНЫЕ ДанныеПроизводственногоКалендаря.Дата) КАК ОтработаноДней,
		|	ПериодыРаботыФизическихЛиц.Месяцев КАК Месяцев
		|ПОМЕСТИТЬ ВТПериодыРаботыФизическихЛицССуммойИКоличествомОтработанныхДней
		|ИЗ
		|	ВТПериодыРаботыФизическихЛицССуммой КАК ПериодыРаботыФизическихЛиц
		|		ЛЕВОЕ СОЕДИНЕНИЕ ВТНачисленияЗарплаты КАК НачисленияЗарплаты
		|			ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ДанныеПроизводственногоКалендаря КАК ДанныеПроизводственногоКалендаря
		|			ПО (ДанныеПроизводственногоКалендаря.Дата МЕЖДУ НачисленияЗарплаты.ДатаНачала И НачисленияЗарплаты.ДатаОкончания)
		|				И (ДанныеПроизводственногоКалендаря.ВидДня В (ЗНАЧЕНИЕ(Перечисление.ВидыДнейПроизводственногоКалендаря.Рабочий), ЗНАЧЕНИЕ(Перечисление.ВидыДнейПроизводственногоКалендаря.Предпраздничный)))
		|		ПО ПериодыРаботыФизическихЛиц.ГоловнаяОрганизация = НачисленияЗарплаты.ГоловнаяОрганизация
		|			И ПериодыРаботыФизическихЛиц.Сотрудник = НачисленияЗарплаты.Сотрудник
		|
		|СГРУППИРОВАТЬ ПО
		|	ПериодыРаботыФизическихЛиц.ГоловнаяОрганизация,
		|	ПериодыРаботыФизическихЛиц.Сотрудник,
		|	ПериодыРаботыФизическихЛиц.НачалоТрехмесячногоПериода,
		|	ПериодыРаботыФизическихЛиц.ОкончаниеПериода,
		|	ПериодыРаботыФизическихЛиц.Сумма,
		|	ПериодыРаботыФизическихЛиц.Месяцев
		|
		|ИМЕЮЩИЕ
		|	КОЛИЧЕСТВО(РАЗЛИЧНЫЕ ДанныеПроизводственногоКалендаря.Дата) > 0
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ПериодыРаботыФизическихЛиц.ГоловнаяОрганизация КАК ГоловнаяОрганизация,
		|	ПериодыРаботыФизическихЛиц.Сотрудник КАК Сотрудник,
		|	ПериодыРаботыФизическихЛиц.Сумма КАК Сумма,
		|	ПериодыРаботыФизическихЛиц.ОтработаноДней КАК ОтработаноДней,
		|	КОЛИЧЕСТВО(РАЗЛИЧНЫЕ ДанныеПроизводственногоКалендаряЗаТриМесяца.Дата) КАК РабочихДнейВТрехМесяцах,
		|	ЕСТЬNULL(КОЛИЧЕСТВО(РАЗЛИЧНЫЕ НАЧАЛОПЕРИОДА(ДанныеПроизводственногоКалендаряЗаТриМесяца.Дата, МЕСЯЦ)), 3) КАК Месяцев
		|ИЗ
		|	ВТПериодыРаботыФизическихЛицССуммойИКоличествомОтработанныхДней КАК ПериодыРаботыФизическихЛиц
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ДанныеПроизводственногоКалендаря КАК ДанныеПроизводственногоКалендаряЗаТриМесяца
		|		ПО ПериодыРаботыФизическихЛиц.НачалоТрехмесячногоПериода <= ДанныеПроизводственногоКалендаряЗаТриМесяца.Дата
		|			И ПериодыРаботыФизическихЛиц.ОкончаниеПериода >= ДанныеПроизводственногоКалендаряЗаТриМесяца.Дата
		|			И (ДанныеПроизводственногоКалендаряЗаТриМесяца.ВидДня В (ЗНАЧЕНИЕ(Перечисление.ВидыДнейПроизводственногоКалендаря.Рабочий), ЗНАЧЕНИЕ(Перечисление.ВидыДнейПроизводственногоКалендаря.Предпраздничный)))
		|
		|СГРУППИРОВАТЬ ПО
		|	ПериодыРаботыФизическихЛиц.ГоловнаяОрганизация,
		|	ПериодыРаботыФизическихЛиц.Сотрудник,
		|	ПериодыРаботыФизическихЛиц.Сумма,
		|	ПериодыРаботыФизическихЛиц.ОтработаноДней";
	
	Выборка = Запрос.Выполнить().Выбрать();
	Пока Выборка.Следующий() Цикл
		
		СтруктураПоиска = Новый Структура;
		СтруктураПоиска.Вставить("ГоловнаяОрганизация", Выборка.ГоловнаяОрганизация);
		СтруктураПоиска.Вставить("Сотрудник", Выборка.Сотрудник);
		
		СтрокиСотрудников = КадровыеДанныеСотрудников.НайтиСтроки(СтруктураПоиска);
		Если СтрокиСотрудников.Количество() > 0 Тогда
			
			СреднедневнойЗаработок = Выборка.Сумма / Выборка.ОтработаноДней;
			СреднийЗаработок = СреднедневнойЗаработок * Выборка.РабочихДнейВТрехМесяцах / Выборка.Месяцев;
			
			Для Каждого СтрокаСотрудника Из СтрокиСотрудников Цикл
				СведенияОСреднемЗаработке.Вставить(СтрокаСотрудника.Сотрудник, Окр(СреднийЗаработок, 2, РежимОкругления.Окр15как20));
			КонецЦикла;
			
		КонецЕсли;
		
	КонецЦикла;
		
	Возврат СведенияОСреднемЗаработке;
	
КонецФункции

Функция СведенияОПериодахНеРаботыДляСправкиПоБезработице(КадровыеДанныеСотрудников) Экспорт
	
	СведенияОПериодахНеРаботы = Новый Соответствие;
	
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = Новый МенеджерВременныхТаблиц;
	
	Запрос.УстановитьПараметр("КадровыеДанныеСотрудников", КадровыеДанныеСотрудников);
	
	Запрос.Текст =
		"ВЫБРАТЬ
		|	КадровыеДанныеСотрудников.ГоловнаяОрганизация КАК ГоловнаяОрганизация,
		|	КадровыеДанныеСотрудников.Сотрудник,
		|	ВЫБОР
		|		КОГДА ДОБАВИТЬКДАТЕ(КадровыеДанныеСотрудников.ДатаУвольнения, ГОД, -1) > КадровыеДанныеСотрудников.ДатаПриема
		|			ТОГДА ДОБАВИТЬКДАТЕ(КадровыеДанныеСотрудников.ДатаУвольнения, ГОД, -1)
		|		ИНАЧЕ КадровыеДанныеСотрудников.ДатаПриема
		|	КОНЕЦ КАК НачалоПериода,
		|	КадровыеДанныеСотрудников.ДатаУвольнения КАК ОкончаниеПериода
		|ПОМЕСТИТЬ ВТПериодыРаботыФизическихЛиц
		|ИЗ
		|	&КадровыеДанныеСотрудников КАК КадровыеДанныеСотрудников";
	
	Запрос.Выполнить();
	
	РасчетЗарплатыДляНебольшихОрганизаций.СоздатьВТПериодыОтсутствий(Запрос.МенеджерВременныхТаблиц);
	
	Запрос.Текст =
		"ВЫБРАТЬ
		|	ПериодыОтсутствий.Сотрудник КАК Сотрудник,
		|	МИНИМУМ(ПериодыОтсутствий.ДатаНачала) КАК ДатаНачала,
		|	МАКСИМУМ(ПериодыОтсутствий.ДатаОкончания) КАК ДатаОкончания,
		|	ПериодыОтсутствий.СсылкаНаДокумент КАК СсылкаНаДокумент,
		|	ПериодыОтсутствий.ПричинаНеРаботы КАК ПричинаНеРаботы
		|ИЗ
		|	ВТПериодыОтсутствий КАК ПериодыОтсутствий
		|
		|СГРУППИРОВАТЬ ПО
		|	ПериодыОтсутствий.Сотрудник,
		|	ПериодыОтсутствий.СсылкаНаДокумент,
		|	ПериодыОтсутствий.ПричинаНеРаботы
		|
		|УПОРЯДОЧИТЬ ПО
		|	Сотрудник,
		|	ДатаНачала";
	
	Выборка = Запрос.Выполнить().Выбрать();
	Пока Выборка.СледующийПоЗначениюПоля("Сотрудник") Цикл
		
		СтрокиСотрудников = КадровыеДанныеСотрудников.НайтиСтроки(Новый Структура("Сотрудник", Выборка.Сотрудник));
		ПериодыНеРаботы = Новый Массив;
		
		Пока Выборка.Следующий() Цикл
			
			ПериодНеРаботы = Новый Структура;
			ПериодНеРаботы.Вставить("НачалоПериода", Выборка.ДатаНачала);
			ПериодНеРаботы.Вставить("ОкончаниеПериода", Выборка.ДатаОкончания);
			Если ТипЗнч(Выборка.СсылкаНаДокумент) = Тип("ДокументСсылка.Отпуск") Тогда
				
				ПериодНеРаботы.Вставить("ПричинаОтсутствия",
					НСтр("ru='Период, когда заработная плата не выплачивалась'"));
				
			Иначе
				
				ПериодНеРаботы.Вставить("ПричинаОтсутствия",
					НСтр("ru='Временная нетрудоспособность, в том числе отпуск по беременности и родам'"));
				
				
			КонецЕсли;
			
			ПериодыНеРаботы.Добавить(ПериодНеРаботы);
			
		КонецЦикла;
		
		Если ПериодыНеРаботы.Количество() > 0 Тогда
			
			Для Каждого СтрокаДанныхСотрудника Из СтрокиСотрудников Цикл
				СведенияОПериодахНеРаботы.Вставить(СтрокаДанныхСотрудника.Сотрудник, ПериодыНеРаботы);
			КонецЦикла;
			
		КонецЕсли;
		
	КонецЦикла;
		
	Возврат СведенияОПериодахНеРаботы;
	
КонецФункции

Процедура ПолученияФормыТекущихДанныхСотрудников(Источник, ВидФормы, Параметры, ВыбраннаяФорма, ДополнительнаяИнформация, СтандартнаяОбработка) Экспорт
	
	Если ВидФормы = "ФормаСписка" Тогда
		
		СтандартнаяОбработка = Ложь;
		ВыбраннаяФорма = "ФормаСписка";
		
	КонецЕсли;
	
КонецПроцедуры

Процедура УточнитьПериодКадровойИсторииСотрудников(Источник, Отказ, Замещение) Экспорт
	
	Если ЗарплатаКадры.ОтключитьБизнесЛогикуПриЗаписи(Источник) Тогда
		Возврат;
	КонецЕсли;
	
	Для Каждого Запись Из Источник Цикл
		Запись.Период = НачалоДня(Запись.Период);
	КонецЦикла;
	
КонецПроцедуры

Функция ПриСозданииФормыСпискаСотрудников(УправляемаяФорма) Экспорт
	
	Список = УправляемаяФорма.Список;
	Список.ТекстЗапроса = ТекстЗапросаСпискаСотрудников();
	
	ОбщегоНазначенияКлиентСервер.УстановитьПараметрДинамическогоСписка(
		Список, "МаксимальнаяДатаНачалоДня", НачалоДня(ЗарплатаКадрыПериодическиеРегистры.МаксимальнаяДата()), Истина);
	
	ОбщегоНазначенияКлиентСервер.УстановитьПараметрДинамическогоСписка(
		Список, "МаксимальнаяДатаКонецДня", ЗарплатаКадрыПериодическиеРегистры.МаксимальнаяДата(), Истина);
	
КонецФункции

Процедура ПроверитьДанныеСотрудников(Источник, Отказ, Замещение) Экспорт

	Если Источник.ОбменДанными.Загрузка = Истина Тогда
		Возврат;
	КонецЕсли;
	
	Если Источник.ДополнительныеСвойства.Свойство("ПолноеПереформирование") Тогда
		Возврат;
	КонецЕсли;
	
	Если (Источник.Отбор.Найти("Сотрудник") = Неопределено
		Или Не Источник.Отбор.Сотрудник.Использование)
			И (Источник.Отбор.Найти("ФизическоеЛицо") = Неопределено
				Или Не Источник.Отбор.ФизическоеЛицо.Использование) Тогда
		
		Возврат;
	КонецЕсли;
	
	Если Источник.Количество() = 0 Тогда
		Возврат;
	КонецЕсли;
	
	Запрос = Новый Запрос;
	Запрос.Текст =
		ТекстЗапросаСпискаСотрудников();
		
	Если Источник.Отбор.Найти("Сотрудник") <> Неопределено
		И Не Источник.Отбор.Сотрудник.Использование Тогда
		
		Запрос.УстановитьПараметр("Сотрудник", Источник.Отбор.Сотрудник.Значение);
		Запрос.Текст = Запрос.Текст
			+ "
				|ГДЕ
				|	СправочникСотрудники.Ссылка = &Сотрудник";
	Иначе
		
		Запрос.УстановитьПараметр("ФизическоеЛицо", Источник.Отбор.ФизическоеЛицо.Значение);
		Запрос.Текст = Запрос.Текст
			+ "
				|ГДЕ
				|	СправочникСотрудники.ФизическоеЛицо = &ФизическоеЛицо";
	КонецЕсли;
	
	Запрос.УстановитьПараметр("МаксимальнаяДатаНачалоДня", НачалоДня(ЗарплатаКадрыПериодическиеРегистры.МаксимальнаяДата()));
	Запрос.УстановитьПараметр("МаксимальнаяДатаКонецДня", ЗарплатаКадрыПериодическиеРегистры.МаксимальнаяДата());
	
	Запрос.Текст = СтрЗаменить(Запрос.Текст,
		"ИЗ
			|	Справочник.Сотрудники КАК СправочникСотрудники",
		"ПОМЕСТИТЬ ВТСписок
			|ИЗ
			|	Справочник.Сотрудники КАК СправочникСотрудники");
	
	Запрос.Текст =
		Запрос.Текст
		+ ЗарплатаКадрыОбщиеНаборыДанных.РазделительЗапросов()
		+	"ВЫБРАТЬ
		 	|	Список.Ссылка КАК Ссылка
		 	|ИЗ
		 	|	ВТСписок КАК Список
		 	|
		 	|СГРУППИРОВАТЬ ПО
		 	|	Список.Ссылка
		 	|
		 	|ИМЕЮЩИЕ
		 	|	КОЛИЧЕСТВО(Список.Ссылка) > 1";
	
	УстановитьПривилегированныйРежим(Истина);
	Выборка = Запрос.Выполнить().Выбрать();
	УстановитьПривилегированныйРежим(Ложь);
	Пока Выборка.Следующий() Цикл
		
		ТекстСообщения = СтрШаблон(
			НСтр("ru = '%1: Нарушена уникальность списка справочника Сотрудники (%2).'"),
			Источник.Метаданные().ПолноеИмя(),
			Выборка.Ссылка);
		ОбщегоНазначения.СообщитьПользователю(ТекстСообщения, , , , Отказ);
		
	КонецЦикла;
	
КонецПроцедуры

Функция ТекстЗапросаСпискаСотрудников()
	
	Если ПолучитьФункциональнуюОпцию("ИспользоватьКадровыйУчет") Тогда
		
		Возврат
			"ВЫБРАТЬ РАЗРЕШЕННЫЕ
			|	0 КАК ИндикаторПроблем,
			|	СправочникСотрудники.Ссылка КАК Ссылка,
			|	СправочникСотрудники.ВерсияДанных КАК ВерсияДанных,
			|	СправочникСотрудники.ПометкаУдаления КАК ПометкаУдаления,
			|	СправочникСотрудники.Предопределенный КАК Предопределенный,
			|	СправочникСотрудники.Код КАК Код,
			|	СправочникСотрудники.Наименование КАК Наименование,
			|	СправочникСотрудники.ФизическоеЛицо КАК ФизическоеЛицо,
			|	СправочникСотрудники.ГоловнаяОрганизация КАК ГоловнаяОрганизация,
			|	СправочникСотрудники.ТекущийПроцентСевернойНадбавки КАК ТекущийПроцентСевернойНадбавки,
			|	СправочникСотрудники.ВАрхиве КАК ВАрхиве,
			|	СправочникСотрудники.УточнениеНаименования КАК УточнениеНаименования,
			|	СправочникСотрудники.ГоловнойСотрудник КАК ГоловнойСотрудник,
			|	ЕСТЬNULL(ВидыЗанятостиСотрудниковИнтервальный.ВидЗанятости, ЗНАЧЕНИЕ(Перечисление.ВидыЗанятости.ПустаяСсылка)) КАК ВидЗанятости,
			|	ВЫБОР
			|		КОГДА ОсновныеСотрудникиФизическихЛиц.Сотрудник ЕСТЬ NULL
			|			ТОГДА ЛОЖЬ
			|		ИНАЧЕ ИСТИНА
			|	КОНЕЦ КАК ОсновноеРабочееМестоВОрганизации,
			|	ЕСТЬNULL(КадроваяИсторияСотрудниковИнтервальный.Организация, ЗНАЧЕНИЕ(Справочник.Организации.ПустаяСсылка)) КАК ТекущаяОрганизация,
			|	ЕСТЬNULL(КадроваяИсторияСотрудниковИнтервальный.Подразделение, ЗНАЧЕНИЕ(Справочник.ПодразделенияОрганизаций.ПустаяСсылка)) КАК ТекущееПодразделение,
			|	ЕСТЬNULL(КадроваяИсторияСотрудниковИнтервальный.Должность, ЗНАЧЕНИЕ(Справочник.Должности.ПустаяСсылка)) КАК ТекущаяДолжность,
			|	ЕСТЬNULL(ТекущиеКадровыеДанныеСотрудников.ДатаПриема, ДАТАВРЕМЯ(1, 1, 1)) КАК ДатаПриема,
			|	ЕСТЬNULL(ТекущиеКадровыеДанныеСотрудников.ДатаУвольнения, ДАТАВРЕМЯ(1, 1, 1)) КАК ДатаУвольнения,
			|	ЕСТЬNULL(ТекущаяТарифнаяСтавкаСотрудников.ТекущаяТарифнаяСтавка, 0) КАК ТекущаяТарифнаяСтавка,
			|	ЕСТЬNULL(ТекущаяТарифнаяСтавкаСотрудников.ТекущийСпособРасчетаАванса, ЗНАЧЕНИЕ(Перечисление.СпособыРасчетаАванса.ПустаяСсылка)) КАК ТекущийСпособРасчетаАванса,
			|	ЕСТЬNULL(ТекущаяТарифнаяСтавкаСотрудников.ТекущийАванс, 0) КАК ТекущийАванс,
			|	ЕСТЬNULL(ТекущиеКадровыеДанныеСотрудников.ОформленПоТрудовомуДоговору, ЛОЖЬ) КАК ОформленПоТрудовомуДоговору
			|ИЗ
			|	Справочник.Сотрудники КАК СправочникСотрудники
			|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ТекущиеКадровыеДанныеСотрудников КАК ТекущиеКадровыеДанныеСотрудников
			|		ПО (ТекущиеКадровыеДанныеСотрудников.Сотрудник = СправочникСотрудники.Ссылка)
			|			И (ТекущиеКадровыеДанныеСотрудников.ФизическоеЛицо = СправочникСотрудники.ФизическоеЛицо)
			|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ОсновныеСотрудникиФизическихЛиц КАК ОсновныеСотрудникиФизическихЛиц
			|		ПО СправочникСотрудники.Ссылка = ОсновныеСотрудникиФизическихЛиц.Сотрудник
			|			И (&МаксимальнаяДатаНачалоДня = ОсновныеСотрудникиФизическихЛиц.ДатаОкончания)
			|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.КадроваяИсторияСотрудниковИнтервальный КАК КадроваяИсторияСотрудниковИнтервальный
			|		ПО СправочникСотрудники.Ссылка = КадроваяИсторияСотрудниковИнтервальный.Сотрудник
			|			И (&МаксимальнаяДатаКонецДня = КадроваяИсторияСотрудниковИнтервальный.ДатаОкончания)
			|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ВидыЗанятостиСотрудниковИнтервальный КАК ВидыЗанятостиСотрудниковИнтервальный
			|		ПО СправочникСотрудники.Ссылка = ВидыЗанятостиСотрудниковИнтервальный.Сотрудник
			|			И (&МаксимальнаяДатаКонецДня = ВидыЗанятостиСотрудниковИнтервальный.ДатаОкончания)
			|		{ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ТекущаяТарифнаяСтавкаСотрудников КАК ТекущаяТарифнаяСтавкаСотрудников
			|		ПО (ТекущаяТарифнаяСтавкаСотрудников.Сотрудник = СправочникСотрудники.Ссылка)
			|			И (ТекущаяТарифнаяСтавкаСотрудников.ФизическоеЛицо = СправочникСотрудники.ФизическоеЛицо)}";
	Иначе
		
		Возврат
			"ВЫБРАТЬ РАЗРЕШЕННЫЕ
			|	0 КАК ИндикаторПроблем,
			|	СправочникСотрудники.Ссылка КАК Ссылка,
			|	СправочникСотрудники.ВерсияДанных КАК ВерсияДанных,
			|	СправочникСотрудники.ПометкаУдаления КАК ПометкаУдаления,
			|	СправочникСотрудники.Предопределенный КАК Предопределенный,
			|	СправочникСотрудники.Код КАК Код,
			|	СправочникСотрудники.Наименование КАК Наименование,
			|	СправочникСотрудники.ФизическоеЛицо КАК ФизическоеЛицо,
			|	СправочникСотрудники.ГоловнаяОрганизация КАК ГоловнаяОрганизация,
			|	СправочникСотрудники.ТекущийПроцентСевернойНадбавки КАК ТекущийПроцентСевернойНадбавки,
			|	СправочникСотрудники.ВАрхиве КАК ВАрхиве,
			|	СправочникСотрудники.УточнениеНаименования КАК УточнениеНаименования,
			|	СправочникСотрудники.ГоловнойСотрудник КАК ГоловнойСотрудник,
			|	ЕСТЬNULL(ТекущиеКадровыеДанныеСотрудников.ТекущийВидЗанятости, ЗНАЧЕНИЕ(Перечисление.ВидыЗанятости.ПустаяСсылка)) КАК ВидЗанятости,
			|	ЕСТЬNULL(ТекущиеКадровыеДанныеСотрудников.ОсновноеРабочееМестоВОрганизации, ЛОЖЬ) КАК ОсновноеРабочееМестоВОрганизации,
			|	ЕСТЬNULL(ТекущиеКадровыеДанныеСотрудников.ТекущаяОрганизация, ЗНАЧЕНИЕ(Справочник.Организации.ПустаяСсылка)) КАК ТекущаяОрганизация,
			|	ЕСТЬNULL(ТекущиеКадровыеДанныеСотрудников.ТекущееПодразделение, ЗНАЧЕНИЕ(Справочник.ПодразделенияОрганизаций.ПустаяСсылка)) КАК ТекущееПодразделение,
			|	ЕСТЬNULL(ТекущиеКадровыеДанныеСотрудников.ТекущаяДолжность, ЗНАЧЕНИЕ(Справочник.Должности.ПустаяСсылка)) КАК ТекущаяДолжность,
			|	ЕСТЬNULL(ТекущиеКадровыеДанныеСотрудников.ДатаПриема, ДАТАВРЕМЯ(1, 1, 1)) КАК ДатаПриема,
			|	ЕСТЬNULL(ТекущиеКадровыеДанныеСотрудников.ДатаУвольнения, ДАТАВРЕМЯ(1, 1, 1)) КАК ДатаУвольнения,
			|	ЕСТЬNULL(ТекущаяТарифнаяСтавкаСотрудников.ТекущаяТарифнаяСтавка, 0) КАК ТекущаяТарифнаяСтавка,
			|	ЕСТЬNULL(ТекущаяТарифнаяСтавкаСотрудников.ТекущийСпособРасчетаАванса, ЗНАЧЕНИЕ(Перечисление.СпособыРасчетаАванса.ПустаяСсылка)) КАК ТекущийСпособРасчетаАванса,
			|	ЕСТЬNULL(ТекущаяТарифнаяСтавкаСотрудников.ТекущийАванс, 0) КАК ТекущийАванс,
			|	ВЫБОР
			|		КОГДА ЕСТЬNULL(ТекущиеКадровыеДанныеСотрудников.ДатаПриема, ДАТАВРЕМЯ(1, 1, 1)) = ДАТАВРЕМЯ(1, 1, 1)
			|				ИЛИ ЕСТЬNULL(ТекущиеКадровыеДанныеСотрудников.ТекущаяОрганизация, ЗНАЧЕНИЕ(Справочник.Организации.ПустаяСсылка)) = ЗНАЧЕНИЕ(Справочник.Организации.ПустаяСсылка)
			|			ТОГДА ЛОЖЬ
			|		ИНАЧЕ ИСТИНА
			|	КОНЕЦ КАК ОформленПоТрудовомуДоговору
			|ИЗ
			|	Справочник.Сотрудники КАК СправочникСотрудники
			|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ТекущиеКадровыеДанныеСотрудников КАК ТекущиеКадровыеДанныеСотрудников
			|		ПО (ТекущиеКадровыеДанныеСотрудников.Сотрудник = СправочникСотрудники.Ссылка)
			|			И (ТекущиеКадровыеДанныеСотрудников.ФизическоеЛицо = СправочникСотрудники.ФизическоеЛицо)
			|		{ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ТекущаяТарифнаяСтавкаСотрудников КАК ТекущаяТарифнаяСтавкаСотрудников
			|		ПО (ТекущаяТарифнаяСтавкаСотрудников.Сотрудник = СправочникСотрудники.Ссылка)
			|			И (ТекущаяТарифнаяСтавкаСотрудников.ФизическоеЛицо = СправочникСотрудники.ФизическоеЛицо)}";
		
	КонецЕсли;
	
КонецФункции

#КонецОбласти
