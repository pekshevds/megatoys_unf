#Область ПрограммныйИнтерфейс

// См. РаботаСоШтрихкодамиПереопределяемый.ЗаполнитьПрефиксыШтрихкодовНоменклатуры.
Процедура ЗаполнитьПрефиксыШтрихкодовНоменклатуры(СтруктураПрефиксов) Экспорт
	
	Префикс = НСтр("ru='2'");
	
	СтруктураПрефиксов = Новый ТаблицаЗначений;
	СтруктураПрефиксов.Колонки.Добавить("Ключ");
	СтруктураПрефиксов.Колонки.Добавить("Значение");
	
	ПрефиксыВесовыхШтрихкодов = РегистрыСведений.ШтрихкодыНоменклатуры.ПрефиксыВесовыхШтрихкодов();
	
	Для Каждого ПрефиксВесовогоШтрихкода Из ПрефиксыВесовыхШтрихкодов Цикл
		Доб1 = СтруктураПрефиксов.Добавить();
		Доб1.Ключ = "НоменклатураВесовой";
		Доб1.Значение = Префикс + ПрефиксВесовогоШтрихкода;
	КонецЦикла;
	
	Доб1 = СтруктураПрефиксов.Добавить();
	Доб1.Ключ = "НоменклатураШтучный";
	Доб1.Значение=  Префикс + Константы.ПрефиксВнутреннегоШтрихкодаШтучногоТовара.Получить();
	
	Если ПолучитьФункциональнуюОпцию("ВестиУчетСредствИндивидуальнойЗащиты") Тогда
		Доб1 = СтруктураПрефиксов.Добавить();
		Доб1.Ключ = "НоменклатураСИЗ";
		Доб1.Значение= НСтр("ru='24'");
	КонецЕсли;
	
КонецПроцедуры

// См. РаботаСоШтрихкодамиПереопределяемый.ДобавитьТекстЗапросаШтрихкоды.
Процедура ДобавитьТекстЗапросаШтрихкоды(ФильтрПоискаПоШтрихкоду, МассивЗапросов) Экспорт
	
	ТекстЗапроса =
	"ВЫБРАТЬ
	|	Штрихкоды.Штрихкод КАК Штрихкод,
	|	Штрихкоды.Номенклатура КАК Владелец,
	|	Штрихкоды.Характеристика КАК Характеристика,
	|	Штрихкоды.ЕдиницаИзмерения КАК Упаковка,
	|	NULL КАК Серия,
	|	Штрихкоды.Партия КАК Партия,
	|	1 КАК Количество,
	|	ЗНАЧЕНИЕ(Перечисление.ШаблоныШтрихкодов.НоменклатураШтучный) КАК ШаблонШтрихкода
	|ПОМЕСТИТЬ ШтрихкодыВсе
	|ИЗ
	|	РегистрСведений.ШтрихкодыНоменклатуры КАК Штрихкоды";
	
	Если ПолучитьФункциональнуюОпцию("ИспользоватьСерииНоменклатуры") Тогда
		
		ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "NULL КАК Серия", "СерииНоменклатуры.Ссылка КАК Серия");
		ТекстЗапроса = ТекстЗапроса + "
			|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.СерииНоменклатуры КАК СерииНоменклатуры
			|		ПО Штрихкоды.Номенклатура = СерииНоменклатуры.Владелец
			|			И (Штрихкоды.Номенклатура.ИспользоватьСерииНоменклатуры)
			|			И Штрихкоды.Штрихкод = СерииНоменклатуры.Наименование
			|			И НЕ СерииНоменклатуры.ПометкаУдаления
			|			И НЕ СерииНоменклатуры.Продан";
		
		Если ФильтрПоискаПоШтрихкоду.Свойство("МассивУжеДобавленныхСерий") Тогда
			ТекстЗапроса = ТекстЗапроса + " И НЕ СерииНоменклатуры.Ссылка В (&МассивУжеДобавленныхСерий)";
		КонецЕсли;
		
	КонецЕсли;
	
	Если ФильтрПоискаПоШтрихкоду.Количество() > 0 Тогда
		
		ТекстЗапроса = ТекстЗапроса + " ГДЕ Штрихкоды.Штрихкод = &Штрихкод
			|	И НЕ Штрихкоды.Номенклатура = Значение(Справочник.Номенклатура.ПустаяСсылка)";
		
		Если ФильтрПоискаПоШтрихкоду.Свойство("ЭтоКодМаркировки") Тогда
			
			ТекстЗапроса = ТекстЗапроса + "
				| И НЕ Штрихкоды.Номенклатура В
				|(ВЫБРАТЬ
				|	ШтрихкодыУпаковокТоваров.Номенклатура КАК Номенклатура
				|ИЗ
				|	Справочник.ШтрихкодыУпаковокТоваров КАК ШтрихкодыУпаковокТоваров
				|ГДЕ
				|	ШтрихкодыУпаковокТоваров.ЗначениеШтрихкода = &ШтрихкодМарки
				|	И НЕ ШтрихкодыУпаковокТоваров.Номенклатура = Значение(Справочник.Номенклатура.ПустаяСсылка))";
			
			МассивЗапросов.Добавить(ТекстЗапроса);
			Возврат;
			
		КонецЕсли;
		
		КоличествоТипов = 0;
		Если ФильтрПоискаПоШтрихкоду.Свойство("Номенклатура") Тогда
			КоличествоТипов = КоличествоТипов + 1;
		КонецЕсли;
		
		Если КоличествоТипов = 0 Тогда
			ТекстЗапроса = ТекстЗапроса + " И ЛОЖЬ";
		КонецЕсли;
		
	КонецЕсли;
	
	МассивЗапросов.Добавить(ТекстЗапроса);
	
КонецПроцедуры

// См. РаботаСоШтрихкодамиПереопределяемый.ДобавитьТекстЗапросаСерии.
Процедура ДобавитьТекстЗапросаСерии(ФильтрПоискаПоШтрихкоду, МассивЗапросов) Экспорт
	
	Если ПолучитьФункциональнуюОпцию("ИспользоватьСерииНоменклатуры")
		И ФильтрПоискаПоШтрихкоду.Свойство("СерииНоменклатуры") Тогда
		
		ТекстЗапроса =
		"ВЫБРАТЬ
		|	СерииНоменклатуры.Наименование,
		|	СерииНоменклатуры.Ссылка,
		|	NULL,
		|	NULL,
		|	NULL,
		|	NULL,
		|	1,
		|	НЕОПРЕДЕЛЕНО
		|ИЗ
		|	Справочник.СерииНоменклатуры КАК СерииНоменклатуры
		|ГДЕ
		|	СерииНоменклатуры.Владелец = &НоменклатураДляПоискаСерии
		|	И СерииНоменклатуры.Наименование = &Штрихкод
		|	И НЕ СерииНоменклатуры.ПометкаУдаления
		|	И НЕ СерииНоменклатуры.Продан";
		
		Если ФильтрПоискаПоШтрихкоду.Свойство("МассивУжеДобавленныхСерий") Тогда
			ТекстЗапроса = ТекстЗапроса + " И НЕ СерииНоменклатуры.Ссылка В (&МассивУжеДобавленныхСерий)";
		КонецЕсли;
		
		Если ФильтрПоискаПоШтрихкоду.Свойство("ЭтоВозвратПродажи") Тогда
			ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "И НЕ СерииНоменклатуры.Продан", "И СерииНоменклатуры.Продан");
		КонецЕсли;
		
		МассивЗапросов.Добавить(ТекстЗапроса);
		
	КонецЕсли;
	
	Если ПолучитьФункциональнуюОпцию("ИспользоватьПартии")
		И ФильтрПоискаПоШтрихкоду.Свойство("СерииНоменклатуры") Тогда
		
		ТекстЗапроса =
		"ВЫБРАТЬ
		|	ПартииНоменклатуры.Наименование,
		|	ПартииНоменклатуры.Ссылка,
		|	NULL,
		|	NULL,
		|	NULL,
		|	NULL,
		|	1,
		|	НЕОПРЕДЕЛЕНО
		|ИЗ
		|	Справочник.ПартииНоменклатуры КАК ПартииНоменклатуры
		|ГДЕ
		|	ПартииНоменклатуры.Владелец = &НоменклатураДляПоискаСерии
		|	И ПартииНоменклатуры.Наименование = &Штрихкод
		|	И НЕ ПартииНоменклатуры.ПометкаУдаления
		|	И НЕ ПартииНоменклатуры.Недействителен";
		
		МассивЗапросов.Добавить(ТекстЗапроса);
		
	КонецЕсли;
	
КонецПроцедуры

// См. РаботаСоШтрихкодамиПереопределяемый.ДобавитьТекстЗапросаКодыSKU.
Процедура ДобавитьТекстЗапросаКодыSKU(ФильтрПоискаПоШтрихкоду, МассивЗапросов) Экспорт
	
	Если НЕ ФильтрПоискаПоШтрихкоду.Свойство("ШаблонКодТовараSKU") Тогда
		Возврат;
	КонецЕсли;
	
	ТекстЗапроса =
	"ВЫБРАТЬ
	|	КодыТоваровSKU.SKU,
	|	КодыТоваровSKU.Номенклатура,
	|	КодыТоваровSKU.Характеристика,
	|	КодыТоваровSKU.ЕдиницаИзмерения,
	|	NULL,
	|	КодыТоваровSKU.Партия,
	|	&КоличествоТовара,
	|	ЗНАЧЕНИЕ(Перечисление.ШаблоныШтрихкодов.НоменклатураВесовой)
	|ИЗ
	|	РегистрСведений.КодыТоваровSKU КАК КодыТоваровSKU
	|ГДЕ
	|	КодыТоваровSKU.SKU = &КодТовара
	|	И НЕ КодыТоваровSKU.Номенклатура = ЗНАЧЕНИЕ(Справочник.Номенклатура.ПустаяСсылка)";
	
	МассивЗапросов.Добавить(ТекстЗапроса);
	
	ТекстЗапроса =
	"ВЫБРАТЬ
	|	&КодТовара,
	|	Штрихкоды.Номенклатура,
	|	Штрихкоды.Характеристика,
	|	Штрихкоды.ЕдиницаИзмерения,
	|	NULL,
	|	Штрихкоды.Партия,
	|	&КоличествоТовара,
	|	ЗНАЧЕНИЕ(Перечисление.ШаблоныШтрихкодов.НоменклатураВесовой)
	|ИЗ
	|	РегистрСведений.ШтрихкодыНоменклатуры КАК Штрихкоды
	|ГДЕ
	|	Штрихкоды.Штрихкод = &ШтрихкодСНулевымВесом
	|	И &КоличествоТовара > 0
	|	И НЕ Штрихкоды.Номенклатура = ЗНАЧЕНИЕ(Справочник.Номенклатура.ПустаяСсылка)";
	
	МассивЗапросов.Добавить(ТекстЗапроса);
	
КонецПроцедуры

// См. РаботаСоШтрихкодамиПереопределяемый.ДобавитьТекстЗапросаШтрихкодыУпаковокТоваров.
Процедура ДобавитьТекстЗапросаШтрихкодыУпаковокТоваров(ФильтрПоискаПоШтрихкоду, МассивЗапросов) Экспорт
	
	СУсловиемПоиска = ФильтрПоискаПоШтрихкоду.Количество() > 0;
	
	Если СУсловиемПоиска И НЕ ФильтрПоискаПоШтрихкоду.Свойство("Номенклатура") Тогда
		Возврат;
	КонецЕсли;
	
	ТекстЗапроса = "ВЫБРАТЬ
	|	Штрихкоды.ЗначениеШтрихкода,
	|	Штрихкоды.Ссылка,
	|	Штрихкоды.Характеристика,
	|	ВЫБОР
	|		КОГДА Штрихкоды.Упаковка ССЫЛКА Справочник.ЕдиницыИзмерения
	|			ТОГДА Штрихкоды.Упаковка
	|		ИНАЧЕ Значение(Справочник.ЕдиницыИзмерения.ПустаяСсылка)
	|	КОНЕЦ,
	|	ВЫБОР
	|		КОГДА Штрихкоды.Серия ССЫЛКА Справочник.СерииНоменклатуры
	|			ТОГДА Штрихкоды.Серия
	|	КОНЕЦ,
	|	ВЫБОР
	|		КОГДА Штрихкоды.Серия ССЫЛКА Справочник.ПартииНоменклатуры
	|			ТОГДА Штрихкоды.Серия
	|	КОНЕЦ,
	|	ВЫБОР
	|	КОГДА Штрихкоды.ТипУпаковки = ЗНАЧЕНИЕ(Перечисление.ТипыУпаковок.МаркированныйТовар)
	|		И НЕ Штрихкоды.Количество = 0
	|			ТОГДА Штрихкоды.Количество
	|		ИНАЧЕ 1
	|	КОНЕЦ,
	|	НЕОПРЕДЕЛЕНО
	|ИЗ
	|	Справочник.ШтрихкодыУпаковокТоваров КАК Штрихкоды";
	
	Если СУсловиемПоиска Тогда
		ТекстЗапроса = ТекстЗапроса + " ГДЕ Штрихкоды.ЗначениеШтрихкода = &ШтрихкодМарки
			| И НЕ Штрихкоды.Номенклатура = Значение(Справочник.Номенклатура.ПустаяСсылка)";
	КонецЕсли;
	
	МассивЗапросов.Добавить(ТекстЗапроса);
	
КонецПроцедуры

// См. РаботаСоШтрихкодамиПереопределяемый.ДобавитьТекстЗапросаНоменклатурнойКлассификации.
Процедура ДобавитьТекстЗапросаНоменклатурнойКлассификации(ФильтрПоискаПоШтрихкоду, МассивЗапросов) Экспорт
	
	Если НЕ ПолучитьФункциональнуюОпцию("ВестиУчетСредствИндивидуальнойЗащиты") Тогда
		Возврат;
	КонецЕсли;
	
	СУсловиемПоиска = ФильтрПоискаПоШтрихкоду.Количество() > 0;
	
	Если СУсловиемПоиска И НЕ ФильтрПоискаПоШтрихкоду.Свойство("Номенклатура") Тогда
		Возврат;
	КонецЕсли;
	
	ТекстЗапроса =
	"ВЫБРАТЬ
	|	Номенклатура.КодМедицинскогоИзделия,
	|	Номенклатура.Ссылка,
	|	ЗНАЧЕНИЕ(Справочник.ХарактеристикиНоменклатуры.ПустаяСсылка),
	|	NULL,
	|	NULL,
	|	NULL,
	|	1,
	|	ЗНАЧЕНИЕ(Перечисление.ШаблоныШтрихкодов.НоменклатураСИЗ)
	|ИЗ
	|	Справочник.Номенклатура КАК Номенклатура";
	
	ТекстЗапроса = ТекстЗапроса + ?(СУсловиемПоиска,
		" ГДЕ Номенклатура.КодМедицинскогоИзделия = &Штрихкод",
		" ГДЕ НЕ Номенклатура.КодМедицинскогоИзделия = """" ");
	
	МассивЗапросов.Добавить(ТекстЗапроса);
	
КонецПроцедуры

// См. РаботаСоШтрихкодамиПереопределяемый.ДобавитьТекстЗапросаШаблоныРегистрацииКарт.
Процедура ДобавитьТекстЗапросаШаблоныРегистрацииКарт(ФильтрПоискаПоШтрихкоду, МассивЗапросов) Экспорт
	
	Возврат ;
	
КонецПроцедуры

// См. РаботаСоШтрихкодамиПереопределяемый.ДобавитьТекстЗапросаПоТелефону.
Процедура ДобавитьТекстЗапросаПоТелефону(ФильтрПоискаПоШтрихкоду, МассивЗапросов) Экспорт
	
	Если НЕ ФильтрПоискаПоШтрихкоду.Свойство("ИнформационныеКарты")
		И НЕ ФильтрПоискаПоШтрихкоду.Свойство("ПоследниеЦифрыТелефона") Тогда
		Возврат;
	КонецЕсли;
	
	ТекстЗапроса =
	"ВЫБРАТЬ
	|	&НомерТелефона,
	|	ЕСТЬNULL(ДисконтныеКарты.Ссылка, КонтрагентыКонтактнаяИнформация.Ссылка),
	|	NULL,
	|	NULL,
	|	NULL,
	|	NULL,
	|	NULL,
	|	ЗНАЧЕНИЕ(Перечисление.ШаблоныШтрихкодов.Телефон)
	|ИЗ
	|	Справочник.Контрагенты.КонтактнаяИнформация КАК КонтрагентыКонтактнаяИнформация
	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.ДисконтныеКарты КАК ДисконтныеКарты
	|		ПО КонтрагентыКонтактнаяИнформация.Ссылка = ДисконтныеКарты.ВладелецКарты
	|ГДЕ
	|	КонтрагентыКонтактнаяИнформация.Тип = ЗНАЧЕНИЕ(Перечисление.ТипыКонтактнойИнформации.Телефон)
	|	И КонтрагентыКонтактнаяИнформация.ОбратныйНомерТелефона = &НомерТелефона";
	
	Если ФильтрПоискаПоШтрихкоду.Свойство("ПоследниеЦифрыТелефона") Тогда
		ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "ОбратныйНомерТелефона = &НомерТелефона", "ОбратныйНомерТелефона ПОДОБНО &ШтрихкодИнверсия");
	КонецЕсли;
	
	МассивЗапросов.Добавить(ТекстЗапроса);
	
КонецПроцедуры

// См. РаботаСоШтрихкодамиПереопределяемый.ДобавитьТекстЗапросаПоАдресуЭП.
Процедура ДобавитьТекстЗапросаПоАдресуЭП(ФильтрПоискаПоШтрихкоду, МассивЗапросов) Экспорт
	
	Если НЕ ФильтрПоискаПоШтрихкоду.Свойство("ИнформационныеКарты") Тогда
		Возврат;
	КонецЕсли;
	
	ТекстЗапроса =
	"ВЫБРАТЬ
	|	&АдресЭП,
	|	ЕСТЬNULL(ДисконтныеКарты.Ссылка, КонтрагентыКонтактнаяИнформация.Ссылка),
	|	NULL,
	|	NULL,
	|	NULL,
	|	NULL,
	|	NULL,
	|	ЗНАЧЕНИЕ(Перечисление.ШаблоныШтрихкодов.АдресЭП)
	|ИЗ
	|	Справочник.Контрагенты.КонтактнаяИнформация КАК КонтрагентыКонтактнаяИнформация
	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.ДисконтныеКарты КАК ДисконтныеКарты
	|		ПО КонтрагентыКонтактнаяИнформация.Ссылка = ДисконтныеКарты.ВладелецКарты
	|ГДЕ
	|	КонтрагентыКонтактнаяИнформация.Тип = ЗНАЧЕНИЕ(Перечисление.ТипыКонтактнойИнформации.АдресЭлектроннойПочты)
	|	И КонтрагентыКонтактнаяИнформация.АдресЭП = &АдресЭП";
	
	МассивЗапросов.Добавить(ТекстЗапроса);
	
КонецПроцедуры

// См. РаботаСоШтрихкодамиПереопределяемый.ДобавитьТекстЗапросаДополнительныеОбъекты.
Процедура ДобавитьТекстЗапросаДополнительныеОбъекты(ФильтрПоискаПоШтрихкоду, МассивЗапросов) Экспорт
	
	СУсловиемПоиска = ФильтрПоискаПоШтрихкоду.Количество() > 0;
	
	Если НЕ СУсловиемПоиска ИЛИ ФильтрПоискаПоШтрихкоду.Свойство("ФизическиеЛица") Тогда
		
		ТекстЗапроса =
		"ВЫБРАТЬ
		|	Сотрудники.ШтрихКод,
		|	Сотрудники.Ссылка,
		|	NULL,
		|	NULL,
		|	NULL,
		|	NULL,
		|	1,
		|	НЕОПРЕДЕЛЕНО
		|ИЗ
		|	Справочник.Сотрудники КАК Сотрудники
		|ГДЕ
		|	НЕ Сотрудники.ЭтоГруппа
		|	И НЕ Сотрудники.ПометкаУдаления
		|	И НЕ Сотрудники.Недействителен
		|	И &Условие";
		
		ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "&Условие",
			?(СУсловиемПоиска, "Сотрудники.ШтрихКод = &Штрихкод",
				"НЕ Сотрудники.ШтрихКод = """" "));
			
		Если ФильтрПоискаПоШтрихкоду.Свойство("КассирДляВхода") Тогда
			ТекстЗапроса = ТекстЗапроса +
				"
				|И Сотрудники.Ссылка = &КассирДляВхода";
		КонецЕсли;

		МассивЗапросов.Добавить(ТекстЗапроса);
		
		ТекстЗапроса =
		"ВЫБРАТЬ
		|	Сотрудники.МагнитныйКод,
		|	Сотрудники.Ссылка,
		|	NULL,
		|	NULL,
		|	NULL,
		|	NULL,
		|	1,
		|	НЕОПРЕДЕЛЕНО
		|ИЗ
		|	Справочник.Сотрудники КАК Сотрудники
		|ГДЕ
		|	НЕ Сотрудники.ЭтоГруппа
		|	И НЕ Сотрудники.ПометкаУдаления
		|	И НЕ Сотрудники.Недействителен
		|	И &Условие";
		
		ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "&Условие",
			?(СУсловиемПоиска, "Сотрудники.МагнитныйКод = &Штрихкод",
				"НЕ Сотрудники.МагнитныйКод = """" "));
			
		Если ФильтрПоискаПоШтрихкоду.Свойство("КассирДляВхода") Тогда
			ТекстЗапроса = ТекстЗапроса +
				"
				|И Сотрудники.Ссылка = &КассирДляВхода";
		КонецЕсли;
		
		МассивЗапросов.Добавить(ТекстЗапроса);
		
	КонецЕсли;
	
	Если НЕ СУсловиемПоиска ИЛИ ФильтрПоискаПоШтрихкоду.Свойство("ИнформационныеКарты") Тогда
		
		ТекстЗапроса =
		"ВЫБРАТЬ
		|	ДисконтныеКарты.КодКартыШтрихкод,
		|	ДисконтныеКарты.Ссылка,
		|	NULL,
		|	NULL,
		|	NULL,
		|	NULL,
		|	1,
		|	НЕОПРЕДЕЛЕНО
		|ИЗ
		|	Справочник.ДисконтныеКарты КАК ДисконтныеКарты
		|ГДЕ
		|	НЕ ДисконтныеКарты.ПометкаУдаления
		|	И &Условие";
		
		ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "&Условие",
			?(СУсловиемПоиска, "ДисконтныеКарты.КодКартыШтрихкод = &Штрихкод",
				"НЕ ДисконтныеКарты.КодКартыШтрихкод = """" "));  
		
		МассивЗапросов.Добавить(ТекстЗапроса);
		
		ТекстЗапроса =
		"ВЫБРАТЬ
		|	ДисконтныеКарты.КодКартыМагнитный,
		|	ДисконтныеКарты.Ссылка,
		|	NULL,
		|	NULL,
		|	NULL,
		|	NULL,
		|	1,
		|	НЕОПРЕДЕЛЕНО
		|ИЗ
		|	Справочник.ДисконтныеКарты КАК ДисконтныеКарты
		|ГДЕ
		|	НЕ ДисконтныеКарты.ПометкаУдаления
		|	И &Условие";
		
		ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "&Условие",
			?(СУсловиемПоиска, "ДисконтныеКарты.КодКартыМагнитный = &Штрихкод",
				"НЕ ДисконтныеКарты.КодКартыМагнитный = """" "));
			
		МассивЗапросов.Добавить(ТекстЗапроса);
		
	КонецЕсли;
	
КонецПроцедуры

// См. РаботаСоШтрихкодамиПереопределяемый.ЗаполнитьПризнакВводаНеизвестнойКИ.
Процедура ЗаполнитьПризнакВводаНеизвестнойКИ(Форма, ДобавлятьНеизвестнуюКИ) Экспорт
	
	Если Форма.ИмяФормы = "ОбщаяФорма.АнализШтрихкодов" Тогда
		ДобавлятьНеизвестнуюКИ = Истина;
	КонецЕсли;
	
КонецПроцедуры

// См. РаботаСоШтрихкодамиПереопределяемый.ЗаполнитьМассивСправочниковСКИ.
Процедура ЗаполнитьМассивСправочниковСКИ(СправочникиСКИ, ФильтрПоискаПоШтрихкоду) Экспорт
	
	СУсловиемПоиска = ФильтрПоискаПоШтрихкоду.Количество() > 0;
	
	СправочникиСКИ.Добавить("Пользователи");
	
КонецПроцедуры

// См. РаботаСоШтрихкодамиПереопределяемый.ЗаполнитьТаблицуШаблоновРегистрацииНовыхКарт.
Процедура ЗаполнитьТаблицуШаблоновРегистрацииНовыхКарт(Шаблоны) Экспорт
	
	Возврат;
	
КонецПроцедуры

// См. РаботаСоШтрихкодамиПереопределяемый.ДополнитьСтрокуТаблицыВыбора.
Процедура ДополнитьСтрокуТаблицыВыбора(НоваяСтрока, СтрокаВыбора) Экспорт
	
	ДополнительныеДанные = СтрокаВыбора.ДополнительныеДанные;
	
	Если ТипЗнч(СтрокаВыбора.Владелец) = Тип("СправочникСсылка.СерииНоменклатуры") Тогда
		НоваяСтрока.ПредставлениеОбъекта =
			"" + СтрокаВыбора.Владелец
			+ ", " + СтрокаВыбора.Владелец.Владелец;
	ИначеЕсли ТипЗнч(СтрокаВыбора.Владелец) = Тип("СправочникСсылка.ПартииНоменклатуры") Тогда
			НоваяСтрока.ПредставлениеОбъекта =
			"" + СтрокаВыбора.Владелец
			+ ", " + СтрокаВыбора.Владелец.Владелец;
	ИначеЕсли ДополнительныеДанные.Свойство("Карта") Тогда
		НоваяСтрока.ПредставлениеОбъекта = СтрокаВыбора.Владелец;
	ИначеЕсли ТипЗнч(СтрокаВыбора.Владелец) = Тип("СправочникСсылка.Номенклатура") Тогда
		НоваяСтрока.ПредставлениеОбъекта =
			"" + СтрокаВыбора.Владелец
			+ ?(ЗначениеЗаполнено(СтрокаВыбора.Характеристика), ", " + СтрокаВыбора.Характеристика , "")
			+ ?(ЗначениеЗаполнено(СтрокаВыбора.Упаковка), ", " + СтрокаВыбора.Упаковка, "")
			+ ?(ЗначениеЗаполнено(СтрокаВыбора.СерияНоменклатуры), ", " + СтрокаВыбора.СерияНоменклатуры, "")
			+ ?(ЗначениеЗаполнено(ДополнительныеДанные.Партия), ", " + ДополнительныеДанные.Партия, "");
	КонецЕсли;
	
КонецПроцедуры

// См. РаботаСоШтрихкодамиПереопределяемый.ЗаполнитьКодИКоличествоВесовогоТовара.
Процедура ЗаполнитьКодИКоличествоВесовогоТовара(Штрихкод, СтруктураВесовогоТовара) Экспорт
	
	ПрефиксыВесовыхШтрихкодов = РегистрыСведений.ШтрихкодыНоменклатуры.ПрефиксыВесовыхШтрихкодов();
	
	Если СтрДлина(Штрихкод) = 13 // EAN13
		И Лев(Штрихкод, 1) = "2" // Внутренний штрихкод
		И ПрефиксыВесовыхШтрихкодов.Найти(Сред(Штрихкод, 2, 1)) <> Неопределено Тогда // Найден префикс весового товара
		
		// Штрихкод является весовым, выполняем преобразование.
		// Формат весового штрихкода: 2 + П + ЧЧЧЧЧ + BBBBB + K
		// Где,
		//  П     - Префикс весового товара
		//  ЧЧЧЧЧ - код весового товара
		//  BBBBB - Вес
		//  К     - Контрольное число
		
		Вес = Число(Сред(Штрихкод, 8, 2)) + Число(Сред(Штрихкод, 10, 3)) / 1000;
		
		СтруктураВесовогоТовара = Новый Структура;
		СтруктураВесовогоТовара.Вставить("КодТовара", Число(Сред(Штрихкод, 3, 5)));
		СтруктураВесовогоТовара.Вставить("КоличествоТовара", Вес);
		
	КонецЕсли;
	
КонецПроцедуры

// См. РаботаСоШтрихкодамиПереопределяемый.ЗаполнитьДополнительныеДанныеОбъектовВыборки.
Процедура ЗаполнитьДополнительныеДанныеОбъектовВыборки(СтруктураШтрихкода, Выборка) Экспорт 
	
	ТипВладельца = ТипЗнч(Выборка.Владелец);
	
	СтруктураШтрихкода.Вставить("Партия", Выборка.Партия);
	
	Если ТипВладельца = Тип("СправочникСсылка.ШтрихкодыУпаковокТоваров") Тогда
		СтруктураШтрихкода.Вставить("Номенклатура", Выборка.Владелец.Номенклатура);
		СтруктураШтрихкода.Вставить("Характеристика", Выборка.Характеристика);
		СтруктураШтрихкода.Вставить("Упаковка", Выборка.Упаковка);
		СтруктураШтрихкода.Вставить("СерияНоменклатуры", Выборка.СерияНоменклатуры);
		СтруктураШтрихкода.Вставить("ВесИзШтрихкода", Истина);
	ИначеЕсли ТипВладельца = Тип("СправочникСсылка.Номенклатура") Тогда
		СтруктураШтрихкода.Вставить("Номенклатура", Выборка.Владелец);
		СтруктураШтрихкода.Вставить("СерияНоменклатуры", Выборка.СерияНоменклатуры);
		Если Выборка.ШаблонШтрихкода = Перечисления.ШаблоныШтрихкодов.НоменклатураВесовой Тогда
			СтруктураШтрихкода.Вставить("ВесИзШтрихкода", Истина);
		КонецЕсли;
	ИначеЕсли ТипВладельца = Тип("Неопределено") Тогда
		Если Выборка.ШаблонШтрихкода = Перечисления.ШаблоныШтрихкодов.Телефон Тогда
			СтруктураШтрихкода.Вставить("НомерТелефона", Выборка.Штрихкод);
		КонецЕсли;
	КонецЕсли;
	
	Если СтруктураШтрихкода.Свойство("Номенклатура") Тогда
		СтруктураШтрихкода.Вставить("ОтображатьОстатки", Истина);
	КонецЕсли;
	
КонецПроцедуры

// См. РаботаСоШтрихкодамиПереопределяемый.ЗаполнитьОстаткиПоСкладу.
Процедура ЗаполнитьОстаткиПоСкладу(ТаблицаНоменклатурыДляОстатков,
	СкладОстатков, ТаблицаОстатков) Экспорт
	
	Запрос = Новый Запрос(
	"ВЫБРАТЬ
	|	ТаблицаНоменклатуры.Номенклатура КАК Номенклатура,
	|	ТаблицаНоменклатуры.Характеристика КАК Характеристика,
	|	ТаблицаНоменклатуры.Упаковка КАК Упаковка
	|ПОМЕСТИТЬ ТаблицаНоменклатуры
	|ИЗ
	|	&ИсходныеДанные КАК ТаблицаНоменклатуры
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	СтруктурныеЕдиницы.Ссылка КАК Склад,
	|	СтруктурныеЕдиницы.ТипСтруктурнойЕдиницы КАК ТипСтруктурнойЕдиницы
	|ПОМЕСТИТЬ ДанныеТорговогоОбъекта
	|ИЗ
	|	Справочник.СтруктурныеЕдиницы КАК СтруктурныеЕдиницы
	|ГДЕ
	|	СтруктурныеЕдиницы.Ссылка = &Магазин
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	СтруктурныеЕдиницы.Ссылка КАК Склад
	|ПОМЕСТИТЬ ТаблицаСклады
	|ИЗ
	|	ДанныеТорговогоОбъекта КАК ДанныеТорговогоОбъекта
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.СтруктурныеЕдиницы КАК СтруктурныеЕдиницы
	|		ПО ДанныеТорговогоОбъекта.Склад = СтруктурныеЕдиницы.Родитель
	|ГДЕ
	|	ДанныеТорговогоОбъекта.ТипСтруктурнойЕдиницы = ЗНАЧЕНИЕ(Перечисление.ТипыСтруктурныхЕдиниц.МагазинГруппаСкладов)
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	СтруктурныеЕдиницы.Ссылка
	|ИЗ
	|	ДанныеТорговогоОбъекта КАК ДанныеТорговогоОбъекта
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.СтруктурныеЕдиницы КАК СтруктурныеЕдиницы
	|		ПО ДанныеТорговогоОбъекта.Склад = СтруктурныеЕдиницы.Ссылка
	|ГДЕ
	|	(ДанныеТорговогоОбъекта.ТипСтруктурнойЕдиницы = ЗНАЧЕНИЕ(Перечисление.ТипыСтруктурныхЕдиниц.Склад)
	|			ИЛИ ДанныеТорговогоОбъекта.ТипСтруктурнойЕдиницы = ЗНАЧЕНИЕ(Перечисление.ТипыСтруктурныхЕдиниц.Розница))
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	Остатки.Номенклатура КАК Номенклатура,
	|	Остатки.Характеристика КАК Характеристика,
	|	СУММА(Остатки.Количество) КАК Остаток,
	|	СУММА(Остатки.Резерв) КАК Резерв
	|ПОМЕСТИТЬ ОстаткиНоменклатуры
	|ИЗ
	|	РегистрСведений.ОстаткиТоваров КАК Остатки
	|ГДЕ
	|	Остатки.СтруктурнаяЕдиница В
	|			(ВЫБРАТЬ
	|				ТаблицаСклады.Склад КАК Склад
	|			ИЗ
	|				ТаблицаСклады КАК ТаблицаСклады)
	|	И (Остатки.Номенклатура, Остатки.Характеристика) В
	|			(ВЫБРАТЬ РАЗЛИЧНЫЕ
	|				ТаблицаНоменклатуры.Номенклатура КАК Номенклатура,
	|				ТаблицаНоменклатуры.Характеристика КАК Характеристика
	|			ИЗ
	|				ТаблицаНоменклатуры КАК ТаблицаНоменклатуры)
	|
	|СГРУППИРОВАТЬ ПО
	|	Остатки.Номенклатура,
	|	Остатки.Характеристика
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ТаблицаНоменклатуры.Номенклатура КАК Номенклатура,
	|	ТаблицаНоменклатуры.Характеристика КАК Характеристика,
	|	ТаблицаНоменклатуры.Упаковка КАК Упаковка,
	|	Остатки.Остаток / ВЫБОР
	|		КОГДА ТаблицаНоменклатуры.Упаковка ССЫЛКА Справочник.ЕдиницыИзмерения
	|			ТОГДА ЕСТЬNULL(ЕдиницыИзмерения.Коэффициент, 1)
	|		ИНАЧЕ 1
	|	КОНЕЦ КАК Остаток,
	|	Остатки.Резерв / ВЫБОР
	|		КОГДА ТаблицаНоменклатуры.Упаковка ССЫЛКА Справочник.ЕдиницыИзмерения
	|			ТОГДА ЕСТЬNULL(ЕдиницыИзмерения.Коэффициент, 1)
	|		ИНАЧЕ 1
	|	КОНЕЦ КАК Резерв
	|ИЗ
	|	ТаблицаНоменклатуры КАК ТаблицаНоменклатуры
	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.ЕдиницыИзмерения КАК ЕдиницыИзмерения
	|		ПО ТаблицаНоменклатуры.Упаковка = ЕдиницыИзмерения.Ссылка
	|		ЛЕВОЕ СОЕДИНЕНИЕ ОстаткиНоменклатуры КАК Остатки
	|		ПО ТаблицаНоменклатуры.Номенклатура = Остатки.Номенклатура
	|			И ТаблицаНоменклатуры.Характеристика = Остатки.Характеристика");
	
	Запрос.УстановитьПараметр("ИсходныеДанные", ТаблицаНоменклатурыДляОстатков);
	Запрос.УстановитьПараметр("Магазин", СкладОстатков);
	
	ТаблицаОстатков = Запрос.Выполнить().Выгрузить();
	
КонецПроцедуры

// См. РаботаСоШтрихкодамиПереопределяемый.ЗаполнитьТекущийСклад.
Процедура ЗаполнитьТекущийСклад(ТекущийСклад) Экспорт
	
	ТекущийСклад = Справочники.СтруктурныеЕдиницы.ОсновнойСклад();
	
КонецПроцедуры

// См. РаботаСоШтрихкодамиПереопределяемый.ДополнитьСтруктуруРезультатами.
Процедура СкорректироватьСтруктуруРезультата(
			СтруктураПараметров,
			Штрихкод,
			СтруктураДействий,
			НеизвестныеДанныеПО,
			ВозможнаРегистрацияНовойНоменклатуры) Экспорт
			
	Возврат;
	
КонецПроцедуры

// См. РаботаСоШтрихкодамиПереопределяемый.ДополнитьПараметрыЗапросаПоиска.
Процедура ДополнитьПараметрыЗапросаПоиска(Запрос, Форма, ДополнительныеПараметры) Экспорт
	
	Если Запрос.Параметры.Свойство("КодТовара") Тогда
		КоличествоТовара = Запрос.Параметры.КоличествоТовара;
		Если КоличествоТовара > 0 Тогда
			КодТовара = Запрос.Параметры.КодТовара;
			ПрефиксШК = Сред(Запрос.Параметры.Штрихкод, 2, 1);
			ШтрихкодТовара = РегистрыСведений.ШтрихкодыНоменклатуры.ПолучитьШтрихкодВесовогоТовараПоКоду(КодТовара, ПрефиксШК);
		Иначе
			ШтрихкодТовара = "";
		КонецЕсли;
		Запрос.УстановитьПараметр("ШтрихкодСНулевымВесом", ШтрихкодТовара);
	КонецЕсли;
	
	Если Форма.ИмяФормы = "ОбщаяФорма.АнализШтрихкодов" Тогда
		Возврат;
	КонецЕсли;
	
	Если Не ОбщегоНазначенияКлиентСервер.ЕстьРеквизитИлиСвойствоОбъекта(Форма, "ФильтрПоискаПоШтрихкоду") Тогда
		Возврат
	КонецЕсли;
	
	ФильтрПоискаПоШтрихкоду = Форма.ФильтрПоискаПоШтрихкоду;
	Если НЕ ФильтрПоискаПоШтрихкоду = Неопределено Тогда
		НоменклатураДляПоискаСерии = Неопределено;
		ФильтрПоискаПоШтрихкоду.Свойство("СерииНоменклатуры", НоменклатураДляПоискаСерии);
		Запрос.УстановитьПараметр("НоменклатураДляПоискаСерии", НоменклатураДляПоискаСерии);
		
		МассивУжеДобавленныхСерий = Неопределено;
		ФильтрПоискаПоШтрихкоду.Свойство("МассивУжеДобавленныхСерий", МассивУжеДобавленныхСерий);
		Запрос.УстановитьПараметр("МассивУжеДобавленныхСерий", МассивУжеДобавленныхСерий);
		
		КассирДляВхода = Неопределено;
		ФильтрПоискаПоШтрихкоду.Свойство("КассирДляВхода", КассирДляВхода);
		Запрос.УстановитьПараметр("КассирДляВхода", КассирДляВхода);
	КонецЕсли;
	
КонецПроцедуры

// См. РаботаСоШтрихкодамиПереопределяемый.ЗаполнитьФильтрПоискаПоУмолчанию.
Процедура ЗаполнитьФильтрПоискаПоУмолчанию(ФильтрПоискаПоУмолчанию) Экспорт
	
	ФильтрПоискаПоШтрихкоду = Новый Структура;
	ФильтрПоискаПоШтрихкоду.Вставить("Номенклатура");
	
	ФильтрПоискаПоШтрихкоду.Вставить("ФизическиеЛица");
	ФильтрПоискаПоШтрихкоду.Вставить("ИнформационныеКарты");
	
	ФильтрПоискаПоУмолчанию = ФильтрПоискаПоШтрихкоду;
	
КонецПроцедуры

// См. РаботаСоШтрихкодамиПереопределяемый.ОпределитьФильтрПоискаШтрихкода.
Процедура ОпределитьФильтрПоискаШтрихкода(Форма) Экспорт
	
	Возврат;
	
КонецПроцедуры

// См. РаботаСоШтрихкодамиПереопределяемый.НастроитьФормуАнализаШтрихкодов.
Процедура НастроитьФормуАнализаШтрихкодов(Форма) Экспорт
	
	Форма.Элементы.ТаблицаОшибокУпаковка.Заголовок = НСтр("ru='Единица измерения'");
	Форма.Элементы.ТаблицаШаблоновДополнительноеОписание.Видимость = Ложь;
	Форма.Элементы.ТаблицаОшибокПартия.Видимость = Истина;
	
КонецПроцедуры

// См. РаботаСоШтрихкодамиПереопределяемый.ЗаполнитьДанныеПоискаПоШтрихкоду.
Процедура ЗаполнитьДанныеПоискаПоШтрихкоду(Штрихкод, Форма, ДанныеШтрихкода) Экспорт
	
	ДанныеШтрихкода = РаботаСоШтрихкодами.ДанныеПоискаПоШтрихкоду(Штрихкод, Форма);
	
КонецПроцедуры

// Настраивает подключаемое оборудование в форме,
// устанавливает флаг ИспользоватьПодключаемоеОборудование в форме.
//
// Параметры:
//  Форма - УправляемаяФорма - форма в которой настраивается подключение оборудования.
//
Процедура НастроитьПодключаемоеОборудование(Форма) Экспорт
	
	ОбщегоНазначенияРМК.НастроитьПодключаемоеОборудование(Форма);
	
КонецПроцедуры

#КонецОбласти



