#Область ПрограммныйИнтерфейс

#Область ДляВызоваИзДругихПодсистем

// См. УправлениеСвойствамиПереопределяемый.ПриПолученииПредопределенныхНаборовСвойств.
Процедура ПриПолученииПредопределенныхНаборовСвойств(Наборы) Экспорт
	
	УправлениеСвойствамиБЗК.ЗарегистрироватьНаборСвойств(Наборы, "288a6bf2-e678-4baa-9cd3-99fba7e73c36", Метаданные.Справочники.Резервы);
	Если ОбщегоНазначения.ПодсистемаСуществует("ЗарплатаКадрыПриложения.ЗарплатаКадрыДляНебольшихОрганизаций.ОценочныеОбязательства") Тогда
		МодульРезервыПоОплатеТрудаДляНебольшихОрганизаций = ОбщегоНазначения.ОбщийМодуль("РезервыПоОплатеТрудаДляНебольшихОрганизаций");
		МодульРезервыПоОплатеТрудаДляНебольшихОрганизаций.ПриПолученииПредопределенныхНаборовСвойств(Наборы);
	КонецЕсли;
	
КонецПроцедуры

// Содержит настройки размещения вариантов отчетов в панели отчетов.
// Описание см. ЗарплатаКадрыВариантыОтчетов.НастроитьВариантыОтчетов.
//
Процедура НастроитьВариантыОтчетов(Настройки) Экспорт
	
	ВариантыОтчетов.НастроитьОтчетВМодулеМенеджера(Настройки, Метаданные.Отчеты.ОстаткиИОборотыРезервовПоОплатеТруда);
	
КонецПроцедуры

// См. УправлениеДоступомПереопределяемый.ПриЗаполненииСписковСОграничениемДоступа.
Процедура ПриЗаполненииСписковСОграничениемДоступа(Списки) Экспорт
	
	Списки.Вставить(Метаданные.Справочники.РезервыПоОплатеТрудаПрисоединенныеФайлы, Истина);
	Списки.Вставить(Метаданные.РегистрыНакопления.ОценочныеОбязательства, Истина);
	Списки.Вставить(Метаданные.РегистрыНакопления.ОценочныеОбязательстваПоСотрудникам, Истина);
	
	Если ОбщегоНазначения.ПодсистемаСуществует("ЗарплатаКадрыПриложения.ЗарплатаКадрыДляНебольшихОрганизаций.ОценочныеОбязательства") Тогда
		МодульРезервыПоОплатеТрудаДляНебольшихОрганизаций = ОбщегоНазначения.ОбщийМодуль("РезервыПоОплатеТрудаДляНебольшихОрганизаций");
		МодульРезервыПоОплатеТрудаДляНебольшихОрганизаций.ПриЗаполненииСписковСОграничениемДоступа(Списки);
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиОбновления

// Добавляет в список Обработчики процедуры-обработчики обновления,
// необходимые данной подсистеме.
//
// Параметры:
//   Обработчики - ТаблицаЗначений - см. описание функции НоваяТаблицаОбработчиковОбновления
//                                   общего модуля ОбновлениеИнформационнойБазы.
// 
Процедура ЗарегистрироватьОбработчикиОбновления(Обработчики) Экспорт
	
	Обработчик = Обработчики.Добавить();
	Обработчик.Версия = "3.1.24.15";
	Обработчик.РежимВыполнения = "Монопольно";
	Обработчик.Процедура = "РезервыПоОплатеТруда.ВключитьРезервыПоОплатеТрудаПоОплатуТруда";
	Обработчик.НачальноеЗаполнение = Истина;
	
	Обработчик = Обработчики.Добавить();
	Обработчик.Версия = "3.1.24.15";
	Обработчик.РежимВыполнения = "Монопольно";
	Обработчик.Процедура = "Справочники.Резервы.СоздатьЭлементы";
	Обработчик.НачальноеЗаполнение = Истина;
	
	Обработчик = Обработчики.Добавить();
	Обработчик.Версия = "3.1.24.15";
	Обработчик.РежимВыполнения = "Монопольно";
	Обработчик.Процедура = "РезервыПоОплатеТруда.СоздатьНовуюНастройкуУчетаРезервовОтпусков";
	Обработчик.НачальноеЗаполнение = Истина;
	
	Обработчик = Обработчики.Добавить();
	Обработчик.Версия = "3.1.25.1";
	Обработчик.Процедура = "РезервыПоОплатеТруда.ЗаполнитьАналитикуВРегистрахУчетаРезервов";
	Обработчик.РежимВыполнения = ОбновлениеИнформационнойБазыЗарплатаКадрыБазовый.ОсновнойРежимВыполненияОбновления();
	Обработчик.Идентификатор = Новый УникальныйИдентификатор("bf2f3d00-1a27-495f-b11e-fa058bf03d34");
	Обработчик.Комментарий = НСтр("ru = 'Заполнение аналитики в регистрах учета резервов.'");
	
КонецПроцедуры

Процедура СоздатьНовуюНастройкуУчетаРезервовОтпусков() Экспорт
	
	РезервЕжегодныхОтпусков = Справочники.Резервы.РезервЕжегодныхОтпусков();
	
	Запрос = Новый Запрос;
	Запрос.Текст =
	"ВЫБРАТЬ
	|	НастройкиРасчетаРезервовОтпусковСрезПоследних.Организация КАК Организация,
	|	НастройкиРасчетаРезервовОтпусковСрезПоследних.Период КАК Период,
	|	НастройкиРасчетаРезервовОтпусковСрезПоследних.ФормироватьРезервОтпусковБУ КАК ФормироватьРезервОтпусковБУ,
	|	НастройкиРасчетаРезервовОтпусковСрезПоследних.ФормироватьРезервОтпусковНУ КАК ФормироватьРезервОтпусковНУ,
	|	НастройкиРасчетаРезервовОтпусковСрезПоследних.МетодНачисленияРезерваОтпусков КАК МетодНачисленияРезерваОтпусков,
	|	НастройкиРасчетаРезервовОтпусковСрезПоследних.НормативОтчисленийВРезервОтпусков КАК НормативОтчисленийВРезервОтпусков,
	|	НастройкиРасчетаРезервовОтпусковСрезПоследних.ПредельнаяВеличинаОтчисленийВРезервОтпусков КАК ПредельнаяВеличинаОтчисленийВРезервОтпусков
	|ПОМЕСТИТЬ ВТ_НастройкаРезервовОтпусков
	|ИЗ
	|	РегистрСведений.НастройкиРасчетаРезервовОтпусков.СрезПоследних КАК НастройкиРасчетаРезервовОтпусковСрезПоследних
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	НастройкиРасчетаРезервовПоОплатеТруда.Организация КАК Организация,
	|	НастройкиРасчетаРезервовПоОплатеТруда.НачалоПериода КАК Период
	|ПОМЕСТИТЬ ВТ_НастройкиРезервовПоОплатеТруда
	|ИЗ
	|	Справочник.НастройкиРасчетаРезервовПоОплатеТруда КАК НастройкиРасчетаРезервовПоОплатеТруда
	|ГДЕ
	|	НастройкиРасчетаРезервовПоОплатеТруда.ВидРезерва = ЗНАЧЕНИЕ(Перечисление.ВидыРезервовПоОплатеТруда.Отпуск)
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВТ_НастройкаРезервовОтпусков.Организация КАК Организация,
	|	ВТ_НастройкаРезервовОтпусков.Период КАК Период,
	|	ВТ_НастройкаРезервовОтпусков.ФормироватьРезервОтпусковБУ КАК ФормироватьРезервОтпусковБУ,
	|	ВТ_НастройкаРезервовОтпусков.ФормироватьРезервОтпусковНУ КАК ФормироватьРезервОтпусковНУ,
	|	ВТ_НастройкаРезервовОтпусков.МетодНачисленияРезерваОтпусков КАК МетодНачисленияРезерваОтпусков,
	|	ВТ_НастройкаРезервовОтпусков.НормативОтчисленийВРезервОтпусков КАК НормативОтчисленийВРезервОтпусков,
	|	ВТ_НастройкаРезервовОтпусков.ПредельнаяВеличинаОтчисленийВРезервОтпусков КАК ПредельнаяВеличинаОтчисленийВРезервОтпусков,
	|	ВТ_НастройкиРезервовПоОплатеТруда.Организация КАК ОрганизацияНовойНастройки
	|ИЗ
	|	ВТ_НастройкаРезервовОтпусков КАК ВТ_НастройкаРезервовОтпусков
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_НастройкиРезервовПоОплатеТруда КАК ВТ_НастройкиРезервовПоОплатеТруда
	|		ПО ВТ_НастройкаРезервовОтпусков.Организация = ВТ_НастройкиРезервовПоОплатеТруда.Организация
	|			И ВТ_НастройкаРезервовОтпусков.Период < ВТ_НастройкиРезервовПоОплатеТруда.Период";
	
	Выборка = Запрос.Выполнить().Выбрать();
	
	ТекущийПериод = ТекущаяДатаСеанса();
	
	Пока Выборка.Следующий() Цикл
		
		Если ЗначениеЗаполнено(Выборка.ОрганизацияНовойНастройки) Тогда
			Продолжить;
		КонецЕсли;
		Если Не Выборка.ФормироватьРезервОтпусковБУ Тогда
			Продолжить;
		КонецЕсли;
		ПоследнийПериодТекущейНастройки = Выборка.Период;
		Если Год(ПоследнийПериодТекущейНастройки) < Год(ТекущийПериод) Тогда
			ПоследнийПериодТекущейНастройки = НачалоГода(ТекущийПериод);
		КонецЕсли;
		
		СправочникОбъект = Справочники.НастройкиРасчетаРезервовПоОплатеТруда.СоздатьЭлемент();
		СправочникОбъект.Организация                               = Выборка.Организация;
		СправочникОбъект.ВидРезерва                                = Перечисления.ВидыРезервовПоОплатеТруда.Отпуск;
		СправочникОбъект.Резерв                                    = РезервЕжегодныхОтпусков;
		СправочникОбъект.НачалоПериода                             = НачалоГода(ДобавитьМесяц(ПоследнийПериодТекущейНастройки, 12));
		СправочникОбъект.КонецПериода                              = КонецГода(СправочникОбъект.НачалоПериода);
		СправочникОбъект.ФормироватьРезервНУ                       = Выборка.ФормироватьРезервОтпусковНУ;
		СправочникОбъект.НормативОтчисленийВРезерв                 = Выборка.НормативОтчисленийВРезервОтпусков;
		СправочникОбъект.ПредельнаяВеличинаОтчисленийВРезервНУ     = Выборка.ПредельнаяВеличинаОтчисленийВРезервОтпусков;
		СправочникОбъект.Наименование                              = РезервыПоОплатеТруда.НаименованиеНастройки(СправочникОбъект);
		СправочникОбъект.ПолноеНаименование                        = РезервыПоОплатеТруда.ПолноеНаименованиеНастройки(СправочникОбъект);
		СправочникОбъект.ИсключенияИзРасчетнойБазыФондаОплатыТруда.Загрузить(РезервыПоОплатеТруда.ИсключенияИзРасчетнойБазы());
		
		Отбор = Новый Структура("КатегорияНачисленияИлиНеоплаченногоВремени", Перечисления.КатегорииНачисленийИНеоплаченногоВремени.ОплатаОтпуска);
		ВидНачисления = ПланыВидовРасчета.Начисления.НачислениеПоУмолчанию(Отбор);
		
		ОписаниеЭлемента = Новый Структура();
		ОписаниеЭлемента.Вставить("Организация",          Выборка.Организация);
		ОписаниеЭлемента.Вставить("Резерв",               РезервЕжегодныхОтпусков);
		ОписаниеЭлемента.Вставить("ВидРасчета",           ВидНачисления);
		ОписаниеЭлемента.Вставить("ЭтоРасчетОтпуска",     Истина);
		
		ВидРасчетаРезерва = Справочники.ВидыРасчетовРезервовПоОплатеТруда.СоздатьЭлементПоОписанию(ОписаниеЭлемента);
		
		НоваяСтрока = СправочникОбъект.ВидыРасчетовРезерва.Добавить();
		НоваяСтрока.ВидРасчетаРезерва = ВидРасчетаРезерва;
		
		ОбновлениеИнформационнойБазы.ЗаписатьОбъект(СправочникОбъект);
		
	КонецЦикла;
	
КонецПроцедуры

Функция ИсключенияИзРасчетнойБазы() Экспорт
	
	СписокКатегорий = Новый Массив;
	СписокКатегорий.Добавить(Перечисления.КатегорииНачисленийИНеоплаченногоВремени.ПовременнаяОплатаТруда);
	СписокКатегорий.Добавить(Перечисления.КатегорииНачисленийИНеоплаченногоВремени.РайонныйКоэффициент);
	СписокКатегорий.Добавить(Перечисления.КатегорииНачисленийИНеоплаченногоВремени.СевернаяНадбавка);
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("СписокКатегорий", СписокКатегорий);
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	Начисления.Ссылка КАК Ссылка
	|ПОМЕСТИТЬ БазовыеНачисления
	|ИЗ
	|	ПланВидовРасчета.Начисления КАК Начисления
	|ГДЕ
	|	Начисления.КатегорияНачисленияИлиНеоплаченногоВремени В(&СписокКатегорий)
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	Начисления.Ссылка КАК ВидРасчета
	|ИЗ
	|	ПланВидовРасчета.Начисления КАК Начисления
	|ГДЕ
	|	НЕ Начисления.Ссылка В
	|				(ВЫБРАТЬ
	|					БазовыеНачисления.Ссылка
	|				ИЗ
	|					БазовыеНачисления)";
	
	Результат = Запрос.Выполнить().Выгрузить();
	
	Возврат Результат;
	
КонецФункции

#КонецОбласти

Функция НовыйСодержимоеДокументаРасчетаРезервов() Экспорт
	
	СодержимоеДокумента = Новый Структура;
	СодержимоеДокумента.Вставить("Начисления",                          РезервыПоОплатеТруда.ТаблицаНачисления());
	СодержимоеДокумента.Вставить("Взносы",                              РезервыПоОплатеТруда.ТаблицаВзносы());
	СодержимоеДокумента.Вставить("РасчетРезервов",                      РезервыПоОплатеТруда.ТаблицаРасчетРезервов());
	СодержимоеДокумента.Вставить("ОценочныеОбязательстваПоСотрудникам", РезервыПоОплатеТруда.ТаблицаОценочныеОбязательстваПоСотрудникам());
	СодержимоеДокумента.Вставить("ОценочныеОбязательства",              РезервыПоОплатеТруда.ТаблицаОценочныеОбязательства());
	
	Возврат СодержимоеДокумента;
	
КонецФункции

Функция ТаблицаНачисления() Экспорт
	
	Начисления = Новый ТаблицаЗначений;
	Начисления.Колонки.Добавить("Организация", Новый ОписаниеТипов("СправочникСсылка.Организации"));
	Начисления.Колонки.Добавить("Подразделение", Новый ОписаниеТипов("СправочникСсылка.ПодразделенияОрганизаций"));
	Начисления.Колонки.Добавить("Сотрудник", Новый ОписаниеТипов("СправочникСсылка.Сотрудники"));
	Начисления.Колонки.Добавить("ФизическоеЛицо", Новый ОписаниеТипов("СправочникСсылка.ФизическиеЛица"));
	Начисления.Колонки.Добавить("ВидРасчетаРезерва", Новый ОписаниеТипов("СправочникСсылка.ВидыРасчетовРезервовПоОплатеТруда"));
	Начисления.Колонки.Добавить("ИдентификаторСтрокиВидаРасчета", Новый ОписаниеТипов("Число"));
	
	Начисления.Колонки.Добавить("Показатели", Новый ОписаниеТипов("ТаблицаЗначений"));
	
	Начисления.Колонки.Добавить("ФондОплатыТруда", Новый ОписаниеТипов("Число", , , Новый КвалификаторыЧисла(15, 2)));
	Начисления.Колонки.Добавить("НормативОтчисленийВРезерв", Новый ОписаниеТипов("Число", , , Новый КвалификаторыЧисла(4, 2)));
	Начисления.Колонки.Добавить("Результат", Новый ОписаниеТипов("Число", , , Новый КвалификаторыЧисла(15, 2)));
	Начисления.Колонки.Добавить("РезультатНУ", Новый ОписаниеТипов("Число", , , Новый КвалификаторыЧисла(15, 2)));
	
	Начисления.Колонки.Добавить("Зачислен", Новый ОписаниеТипов("Булево"));
	Начисления.Колонки.Добавить("Перемещен", Новый ОписаниеТипов("Булево"));
	Начисления.Колонки.Добавить("Уволен", Новый ОписаниеТипов("Булево"));
	Начисления.Колонки.Добавить("Зарезервирован", Новый ОписаниеТипов("Булево"));
	
	Начисления.Колонки.Добавить("ФиксСтрока", Новый ОписаниеТипов("Булево"));
	Начисления.Колонки.Добавить("ФиксЗаполнение", Новый ОписаниеТипов("Булево"));
	Начисления.Колонки.Добавить("ФиксРасчет", Новый ОписаниеТипов("Булево"));
	
	Возврат Начисления;
	
КонецФункции

Функция ТаблицаПоказателей() Экспорт
	
	Показатели = Новый ТаблицаЗначений;
	Показатели.Колонки.Добавить("ИдентификаторСтроки", Новый ОписаниеТипов("Число"));
	Показатели.Колонки.Добавить("Показатель", Новый ОписаниеТипов("Строка"));
	Показатели.Колонки.Добавить("Значение", Новый ОписаниеТипов("Число"));

	Возврат Показатели;
	
КонецФункции

Функция ДополнительныеПараметрыЗаполненияТаблицДокумента() Экспорт
	
	ДополнительныеПараметры = Новый Структура("ДокументСсылка,Организация,Подразделение,ВидОперации,Резерв,Сотрудники,ДопПараметрыОтбора,АдресХранилища");
	Возврат ДополнительныеПараметры;
	
КонецФункции

Процедура СортироватьДанныеДляЗаполнения(ДанныеЗаполнения, Организация, МесяцНачисления, ИспользоватьСортировкуПоУмолчанию = Истина) Экспорт
	СортироватьРезультатРасчетаНачислений(ДанныеЗаполнения);
	СортироватьРезультатыРасчетаПоФизическимЛицам(ДанныеЗаполнения, Организация, МесяцНачисления);
КонецПроцедуры

Процедура СортироватьРезультатРасчетаНачислений(ДанныеЗаполнения)
	
	СортируемыеКоллекции = Новый Массив;
	
	Коллекция = СотрудникиФормы.СортируемаяКоллекцияСотрудников(ДанныеЗаполнения.Начисления);
	Коллекция.ОписаниеКоллекции.Псевдоним            = "Начисления";
	Коллекция.ОписаниеКоллекции.ИмяПоляСотрудник     = "Сотрудник";
	Коллекция.ОписаниеКоллекции.ИмяПоляПодразделение = "Подразделение";
	СортируемыеКоллекции.Добавить(Коллекция);
	
	НастройкиСортировки = СотрудникиФормы.НастройкиСортировкиПоУмолчанию();
	
	Коллекция = СотрудникиФормы.СортируемаяКоллекцияСотрудников(ДанныеЗаполнения.РасчетРезервов);
	Коллекция.ОписаниеКоллекции.Псевдоним        = "РасчетРезервов";
	Коллекция.ОписаниеКоллекции.ИмяПоляСотрудник = "Сотрудник";
	СортируемыеКоллекции.Добавить(Коллекция);
	
	Коллекция = СотрудникиФормы.СортируемаяКоллекцияСотрудников(ДанныеЗаполнения.ОценочныеОбязательстваПоСотрудникам);
	Коллекция.ОписаниеКоллекции.Псевдоним            = "ОценочныеОбязательстваПоСотрудникам";
	Коллекция.ОписаниеКоллекции.ИмяПоляСотрудник     = "Сотрудник";
	Коллекция.ОписаниеКоллекции.ИмяПоляПодразделение = "Подразделение";
	СортируемыеКоллекции.Добавить(Коллекция);
	
	УстановитьПривилегированныйРежим(Истина);
	ПорядокСортировки = СотрудникиФормы.ПорядокСтрокКоллекцийСотрудников(СортируемыеКоллекции, НастройкиСортировки);
	УстановитьПривилегированныйРежим(Ложь);
	
	Для Каждого КлючЗначение Из ПорядокСортировки Цикл
	    ТаблицаИсходныхДанных = ДанныеЗаполнения[КлючЗначение.Ключ];
		Если ТаблицаИсходныхДанных.Колонки.Найти("Порядок") = Неопределено Тогда
			ТаблицаИсходныхДанных.Колонки.Добавить("Порядок", Новый ОписаниеТипов("Число"));
		КонецЕсли;
		
		Для Каждого СтрокаПорядка Из КлючЗначение.Значение Цикл
			СтрокаТаблицы = ТаблицаИсходныхДанных[СтрокаПорядка.ИндексСтрокиИсходнойТаблицы];
			СтрокаТаблицы.Порядок = СтрокаПорядка.Порядок;	
		КонецЦикла;	
		
		ТаблицаИсходныхДанных.Сортировать("Порядок");
		ТаблицаИсходныхДанных.Колонки.Удалить("Порядок");
	КонецЦикла;
		
КонецПроцедуры	

Процедура СортироватьРезультатыРасчетаПоФизическимЛицам(ДанныеЗаполнения, Организация, МесяцНачисления)	
	СортируемыеКоллекции = Новый Массив;
	
	Коллекция = СотрудникиФормы.СортируемаяКоллекцияФизическихЛиц(ДанныеЗаполнения.Взносы);
	Коллекция.ОписаниеКоллекции.Псевдоним             = "Взносы";
	Коллекция.ОписаниеКоллекции.ИмяПоляФизическоеЛицо = "ФизическоеЛицо";
	
	СортируемыеКоллекции.Добавить(Коллекция);
	
	УстановитьПривилегированныйРежим(Истина);
	ПорядокСортировки = СотрудникиФормы.ПорядокСортировкиКоллекцияФизическихЛиц(СортируемыеКоллекции, Организация, КонецМесяца(МесяцНачисления));
	УстановитьПривилегированныйРежим(Ложь);
	
	Для Каждого КлючЗначение Из ПорядокСортировки Цикл
	    ТаблицаИсходныхДанных = ДанныеЗаполнения[КлючЗначение.Ключ];
		ТаблицаИсходныхДанных.Колонки.Добавить("Порядок", Новый ОписаниеТипов("Число"));
			
		Для Каждого СтрокаПорядка Из КлючЗначение.Значение Цикл
			СтрокаТаблицы = ТаблицаИсходныхДанных[СтрокаПорядка.ИндексСтрокиИсходнойТаблицы];
			СтрокаТаблицы.Порядок = СтрокаПорядка.Порядок;	
		КонецЦикла;	
		
		ТаблицаИсходныхДанных.Сортировать("Порядок");
		ТаблицаИсходныхДанных.Колонки.Удалить("Порядок");
	КонецЦикла;	
		
КонецПроцедуры

Процедура ДополнитьТаблицуСведениямиОбОсобенностяхОтпусков(НачисленнаяЗарплатаИВзносы) Экспорт
	
	НачисленнаяЗарплатаИВзносы.Колонки.Добавить("ВидОтпуска", Новый ОписаниеТипов("Строка"));
	НачисленнаяЗарплатаИВзносы.Колонки.Добавить("КомпенсацияОтпуска", Новый ОписаниеТипов("Булево"));
	НачисленнаяЗарплатаИВзносы.Колонки.Добавить("ОтпускАвансом", Новый ОписаниеТипов("Булево"));
	
	НачисленнаяЗарплатаИВзносы.Индексы.Добавить("Начисление");
	
	РезервыПоОплатеТрудаПереопределяемый.ДополнитьТаблицуСведениямиОбОсобенностяхОтпусков(НачисленнаяЗарплатаИВзносы);
	
	НачисленнаяЗарплатаИВзносы.Индексы.Удалить(0);
	
КонецПроцедуры

Функция СостоянияСотрудниковДляРасчетаОценочныхОбязательств(Организация, Сотрудники, Период) Экспорт
	
	ТаблицаСотрудников = Новый ТаблицаЗначений;
	ТаблицаСотрудников.Колонки.Добавить("Сотрудник", Новый ОписаниеТипов("СправочникСсылка.Сотрудники"));
	ТаблицаСотрудников.Колонки.Добавить("Период",    Новый ОписаниеТипов("Дата"));
	Для Каждого Сотрудник ИЗ Сотрудники Цикл
		НоваяСтрока = ТаблицаСотрудников.Добавить();
		НоваяСтрока.Сотрудник = Сотрудник;
		НоваяСтрока.Период    = КонецМесяца(Период);
		НоваяСтрока = ТаблицаСотрудников.Добавить();
		НоваяСтрока.Сотрудник = Сотрудник;
		НоваяСтрока.Период    = КонецМесяца(НачалоМесяца(Период-1));
	КонецЦикла;
	
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = Новый МенеджерВременныхТаблиц;
	Запрос.УстановитьПараметр("ТаблицаСотрудников", ТаблицаСотрудников);
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	ТаблицаСотрудников.Сотрудник КАК Сотрудник,
	|	ТаблицаСотрудников.Период КАК Период
	|ПОМЕСТИТЬ ВТСотрудникиИПериод
	|ИЗ
	|	&ТаблицаСотрудников КАК ТаблицаСотрудников";
	
	Запрос.Выполнить();
	
	ОписательВременныхТаблиц = КадровыйУчет.ОписательВременныхТаблицДляСоздатьВТКадровыеДанныеСотрудников(
									Запрос.МенеджерВременныхТаблиц,
									"ВТСотрудникиИПериод");
									
	КадровыйУчет.СоздатьВТКадровыеДанныеСотрудников(ОписательВременныхТаблиц, Истина, "Организация, ДатаУвольнения");
									
	Запрос.УстановитьПараметр("Организация",   Организация);
	Запрос.УстановитьПараметр("ТекущийПериод", КонецМесяца(Период));
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	КадровыеДанныеСотрудников.Сотрудник КАК Сотрудник,
	|	КОНЕЦПЕРИОДА(КадровыеДанныеСотрудников.ДатаУвольнения, МЕСЯЦ) = &ТекущийПериод КАК Уволен,
	|	КадровыеДанныеСотрудников.Организация <> &Организация КАК Перемещен,
	|	КОНЕЦПЕРИОДА(КадровыеДанныеСотрудников.ДатаУвольнения, МЕСЯЦ) <> &ТекущийПериод
	|		И КадровыеДанныеСотрудников.Организация = &Организация
	|		И КадровыеДанныеСотрудников.Организация <> ЕСТЬNULL(КадровыеДанныеСотрудниковПрежние.Организация, КадровыеДанныеСотрудников.Организация) КАК Зачислен,
	|	ЛОЖЬ КАК Зарезервирован
	|ИЗ
	|	ВТКадровыеДанныеСотрудников КАК КадровыеДанныеСотрудников
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТКадровыеДанныеСотрудников КАК КадровыеДанныеСотрудниковПрежние
	|		ПО КадровыеДанныеСотрудников.Сотрудник = КадровыеДанныеСотрудниковПрежние.Сотрудник
	|			И КадровыеДанныеСотрудников.Период > КадровыеДанныеСотрудниковПрежние.Период
	|ГДЕ
	|	КадровыеДанныеСотрудников.Период = &ТекущийПериод";
	
	Возврат Запрос.Выполнить().Выгрузить();
	
КонецФункции

Процедура ПодготовитьДанныеДляЗаполнения(СтруктураПараметров, АдресХранилища) Экспорт
	
	РезультатЗаполнения = Новый Структура;
	
	// Получение данных для заполнения табличных частей документа.
	ОписаниеДокумента = СтруктураПараметров.ОписаниеДокумента;
	Организация       = СтруктураПараметров.Организация;
	Резерв            = СтруктураПараметров.Резерв;
	МесяцНачисления   = СтруктураПараметров.МесяцНачисления;
	
	ДополнительныеПараметры = РезервыПоОплатеТруда.ДополнительныеПараметрыЗаполненияТаблицДокумента();
	ЗаполнитьЗначенияСвойств(ДополнительныеПараметры, СтруктураПараметров);
	ДополнительныеПараметры.Вставить("АдресХранилища", АдресХранилища);
	
	ДанныеЗаполнения = РезервыПоОплатеТруда.ОписаниеДанныхДляЗаполненияТаблицДокумента();
	
	Если ОбщегоНазначения.ПодсистемаСуществует("ЗарплатаКадрыПриложения.ЗарплатаКадрыДляНебольшихОрганизаций.ОценочныеОбязательства") Тогда
		МодульРезервыПоОплатеТрудаДляНебольшихОрганизаций = ОбщегоНазначения.ОбщийМодуль("РезервыПоОплатеТрудаДляНебольшихОрганизаций");
		ДанныеЗаполнения = МодульРезервыПоОплатеТрудаДляНебольшихОрганизаций.ДанныеДляЗаполненияТаблицДокумента(ОписаниеДокумента, Организация, Резерв, МесяцНачисления, ДополнительныеПараметры);
	КонецЕсли;
	
	РезультатЗаполнения.Вставить("ДанныеДляЗаполненияТаблицДокумента", ДанныеЗаполнения);
	
	ПоместитьВоВременноеХранилище(РезультатЗаполнения, АдресХранилища);
	
КонецПроцедуры

Процедура Печать(МассивОбъектов, ПараметрыПечати, КоллекцияПечатныхФорм, ОбъектыПечати, ПараметрыВывода) Экспорт
	
	Если УправлениеПечатью.НужноПечататьМакет(КоллекцияПечатныхФорм, "ПФ_MXL_СправкаРасчетРезервовПоОплатеТруда") Тогда
		УправлениеПечатью.ВывестиТабличныйДокументВКоллекцию(
						КоллекцияПечатныхФорм,
						"ПФ_MXL_СправкаРасчетРезервовПоОплатеТруда", НСтр("ru='Справка-расчет'"),
						РезервыПоОплатеТруда.ПечатьСправкаРасчет(МассивОбъектов, ОбъектыПечати, ПараметрыПечати), ,);
	КонецЕсли;
	
	Если УправлениеПечатью.НужноПечататьМакет(КоллекцияПечатныхФорм, "ПФ_MXL_СправкаРасчетРезервовПоОплатеТрудаНУ") Тогда
		УправлениеПечатью.ВывестиТабличныйДокументВКоллекцию(
						КоллекцияПечатныхФорм,
						"ПФ_MXL_СправкаРасчетРезервовПоОплатеТрудаНУ", НСтр("ru='Справка-расчет (налоговый учет)'"),
						РезервыПоОплатеТруда.ПечатьСправкаРасчет(МассивОбъектов, ОбъектыПечати, ПараметрыПечати, "НУ"), ,);
	КонецЕсли;
	
КонецПроцедуры

Процедура ЗапросДанныеПечатиДокументов(Запрос) Экспорт
	
	Если ОбщегоНазначения.ПодсистемаСуществует("ЗарплатаКадрыПриложения.ЗарплатаКадрыДляНебольшихОрганизаций.ОценочныеОбязательства") Тогда
		МодульРезервыПоОплатеТрудаДляНебольшихОрганизаций = ОбщегоНазначения.ОбщийМодуль("РезервыПоОплатеТрудаДляНебольшихОрганизаций");
		СвойстваПоказателей = МодульРезервыПоОплатеТрудаДляНебольшихОрганизаций.ТаблицаПоказателейРасчетаРезервов();
	Иначе
		СвойстваПоказателей = РезервыПоОплатеТруда.НоваяТаблицаПоказателейРасчетаРезервов();
	КонецЕсли;
	
	Запрос.УстановитьПараметр("СвойстваПоказателей", СвойстваПоказателей);
	Запрос.Текст =
	"ВЫБРАТЬ
	|	СвойстваПоказателей.ВидРезерваПоОплатеТруда КАК ВидРасчетаРезерва,
	|	СвойстваПоказателей.КраткоеНаименование КАК Показатель,
	|	СвойстваПоказателей.КраткоеНаименование КАК КраткоеНаименование,
	|	СвойстваПоказателей.Идентификатор КАК Идентификатор,
	|	СвойстваПоказателей.Формула КАК Формула,
	|	СвойстваПоказателей.НомерСтроки КАК НомерСтроки
	|ПОМЕСТИТЬ ВТ_СвойстваПоказателей
	|ИЗ
	|	&СвойстваПоказателей КАК СвойстваПоказателей
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ВТ_СвойстваПоказателей.ВидРасчетаРезерва КАК ВидРасчетаРезерва,
	|	ВТ_СвойстваПоказателей.Формула КАК Формула
	|ПОМЕСТИТЬ ВТ_Формула
	|ИЗ
	|	ВТ_СвойстваПоказателей КАК ВТ_СвойстваПоказателей
	|
	|СГРУППИРОВАТЬ ПО
	|	ВТ_СвойстваПоказателей.ВидРасчетаРезерва,
	|	ВТ_СвойстваПоказателей.Формула
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	РезервыПоОплатеТруда.Ссылка КАК Документ,
	|	РезервыПоОплатеТруда.Организация КАК Организация,
	|	РезервыПоОплатеТруда.МесяцНачисления КАК МесяцНачисления,
	|	РезервыПоОплатеТруда.Резерв КАК Резерв,
	|	РезервыПоОплатеТруда.Дата КАК Дата,
	|	РезервыПоОплатеТруда.Номер КАК Номер,
	|	РезервыПоОплатеТруда.Подразделение КАК Подразделение,
	|	РезервыПоОплатеТруда.Исполнитель.ФИО КАК Исполнитель,
	|	РезервыПоОплатеТруда.ДолжностьИсполнителя КАК ДолжностьИсполнителя,
	|	РезервыПоОплатеТруда.ВидОперации КАК ВидОперации
	|ПОМЕСТИТЬ ВТ_Документ
	|ИЗ
	|	Документ.РезервыПоОплатеТруда КАК РезервыПоОплатеТруда
	|ГДЕ
	|	РезервыПоОплатеТруда.Ссылка В(&МассивОбъектов)
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВТ_Документ.Документ КАК Документ,
	|	ВТ_Документ.Организация КАК Организация,
	|	НастройкиРасчетаРезервовПоОплатеТруда.Резерв КАК Резерв,
	|	НастройкиРасчетаРезервовПоОплатеТруда.ВидРезерва КАК ВидРезерва,
	|	НастройкиРасчетаРезервовПоОплатеТруда.НачалоПериода КАК НачалоПериода,
	|	НастройкиРасчетаРезервовПоОплатеТруда.КонецПериода КАК КонецПериода,
	|	НастройкиРасчетаРезервовПоОплатеТруда.ФормироватьРезервНУ КАК ФормироватьРезервНУ,
	|	ЗНАЧЕНИЕ(Перечисление.МетодыНачисленияРезервовПоОплатеТруда.НормативныйМетод) КАК МетодНачисленияРезерваБУ,
	|	ЗНАЧЕНИЕ(Перечисление.МетодыНачисленияРезервовПоОплатеТруда.НормативныйМетод) КАК МетодНачисленияРезерваНУ,
	|	ИСТИНА КАК НормативныйМетодБУ,
	|	ИСТИНА КАК НормативныйМетодНУ,
	|	ИСТИНА КАК ОграничиватьНачислениеПредельнойСуммойНУ,
	|	НастройкиРасчетаРезервовПоОплатеТруда.ПредельнаяВеличинаОтчисленийВРезервНУ КАК ПредельнаяВеличинаОтчисленийВРезервНУ,
	|	ВТ_Формула.Формула КАК Формула,
	|	НастройкиРасчетаРезервовПоОплатеТруда.Ссылка КАК Ссылка
	|ПОМЕСТИТЬ ВТ_НастройкаРасчета
	|ИЗ
	|	ВТ_Документ КАК ВТ_Документ
	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.НастройкиРасчетаРезервовПоОплатеТруда КАК НастройкиРасчетаРезервовПоОплатеТруда
	|			ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТ_Формула КАК ВТ_Формула
	|			ПО НастройкиРасчетаРезервовПоОплатеТруда.ВидРезерва = ВТ_Формула.ВидРасчетаРезерва
	|		ПО ВТ_Документ.Организация = НастройкиРасчетаРезервовПоОплатеТруда.Организация
	|			И ВТ_Документ.Резерв = НастройкиРасчетаРезервовПоОплатеТруда.Резерв
	|			И (ВТ_Документ.МесяцНачисления МЕЖДУ НАЧАЛОПЕРИОДА(НастройкиРасчетаРезервовПоОплатеТруда.НачалоПериода, МЕСЯЦ) И КОНЕЦПЕРИОДА(НастройкиРасчетаРезервовПоОплатеТруда.КонецПериода, МЕСЯЦ))
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВТ_Документ.Документ КАК Документ,
	|	ВТ_Документ.Организация КАК Организация,
	|	ВТ_Документ.МесяцНачисления КАК МесяцНачисления,
	|	ВТ_Документ.Резерв КАК Резерв,
	|	РезервыПоОплатеТрудаНачисления.Сотрудник КАК Сотрудник,
	|	РезервыПоОплатеТрудаНачисления.Подразделение КАК Подразделение,
	|	НастройкиРасчетаРезервовПоОплатеТрудаВидыРасчетовРезерва.Ссылка КАК ВидРасчетаРезерва,
	|	ВидыРасчетовРезервовПоОплатеТруда.ВидРасчета КАК ВидРасчета,
	|	СУММА(РезервыПоОплатеТрудаНачисления.Результат) КАК Результат,
	|	СУММА(РезервыПоОплатеТрудаНачисления.РезультатНУ) КАК РезультатНУ,
	|	РезервыПоОплатеТрудаНачисления.ФондОплатыТруда КАК ФондОплатыТруда,
	|	РезервыПоОплатеТрудаНачисления.НормативОтчисленийВРезерв КАК НормативОтчисленийВРезерв,
	|	РезервыПоОплатеТрудаНачисления.ИдентификаторСтрокиВидаРасчета КАК ИдентификаторСтрокиВидаРасчета,
	|	ВЫРАЗИТЬ(ВТ_НастройкаРасчета.Формула КАК СТРОКА(300)) КАК ФормулаРасчета,
	|	Сотрудники.ФизическоеЛицо КАК ФизическоеЛицо,
	|	ФизическиеЛица.Наименование КАК ФизическоеЛицоНаименование
	|ПОМЕСТИТЬ ВТ_Начисления
	|ИЗ
	|	ВТ_Документ КАК ВТ_Документ
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.РезервыПоОплатеТруда.Начисления КАК РезервыПоОплатеТрудаНачисления
	|			ЛЕВОЕ СОЕДИНЕНИЕ Справочник.Сотрудники КАК Сотрудники
	|				ЛЕВОЕ СОЕДИНЕНИЕ Справочник.ФизическиеЛица КАК ФизическиеЛица
	|				ПО Сотрудники.ФизическоеЛицо = ФизическиеЛица.Ссылка
	|			ПО РезервыПоОплатеТрудаНачисления.Сотрудник = Сотрудники.Ссылка
	|			ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТ_НастройкаРасчета КАК ВТ_НастройкаРасчета
	|				ЛЕВОЕ СОЕДИНЕНИЕ Справочник.ВидыРасчетовРезервовПоОплатеТруда КАК ВидыРасчетовРезервовПоОплатеТруда
	|					ПРАВОЕ СОЕДИНЕНИЕ Справочник.НастройкиРасчетаРезервовПоОплатеТруда.ВидыРасчетовРезерва КАК НастройкиРасчетаРезервовПоОплатеТрудаВидыРасчетовРезерва
	|					ПО (НастройкиРасчетаРезервовПоОплатеТрудаВидыРасчетовРезерва.ВидРасчетаРезерва = ВидыРасчетовРезервовПоОплатеТруда.Ссылка)
	|				ПО (ВТ_НастройкаРасчета.Ссылка = НастройкиРасчетаРезервовПоОплатеТрудаВидыРасчетовРезерва.Ссылка)
	|			ПО РезервыПоОплатеТрудаНачисления.Ссылка = ВТ_НастройкаРасчета.Документ
	|		ПО ВТ_Документ.Документ = РезервыПоОплатеТрудаНачисления.Ссылка
	|
	|СГРУППИРОВАТЬ ПО
	|	ВТ_Документ.Документ,
	|	ВТ_Документ.Организация,
	|	ВТ_Документ.МесяцНачисления,
	|	ВТ_Документ.Резерв,
	|	РезервыПоОплатеТрудаНачисления.Сотрудник,
	|	Сотрудники.ФизическоеЛицо,
	|	РезервыПоОплатеТрудаНачисления.Подразделение,
	|	РезервыПоОплатеТрудаНачисления.ФондОплатыТруда,
	|	РезервыПоОплатеТрудаНачисления.НормативОтчисленийВРезерв,
	|	РезервыПоОплатеТрудаНачисления.ИдентификаторСтрокиВидаРасчета,
	|	ВидыРасчетовРезервовПоОплатеТруда.ВидРасчета,
	|	ВЫРАЗИТЬ(ВТ_НастройкаРасчета.Формула КАК СТРОКА(300)),
	|	НастройкиРасчетаРезервовПоОплатеТрудаВидыРасчетовРезерва.Ссылка,
	|	ФизическиеЛица.Наименование
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВТ_Документ.Документ КАК Документ,
	|	ВТ_Документ.Организация КАК Организация,
	|	ВТ_Документ.МесяцНачисления КАК МесяцНачисления,
	|	ВТ_Документ.Резерв КАК Резерв,
	|	РезервыПоОплатеТрудаПоказатели.НомерСтроки КАК НомерСтроки,
	|	РезервыПоОплатеТрудаПоказатели.Показатель КАК Показатель,
	|	РезервыПоОплатеТрудаПоказатели.Значение КАК Значение,
	|	РезервыПоОплатеТрудаПоказатели.ИдентификаторСтрокиВидаРасчета КАК ИдентификаторСтрокиВидаРасчета,
	|	КОЛИЧЕСТВО(РезервыПоОплатеТрудаПоказатели1.ИдентификаторСтрокиВидаРасчета) КАК КоличествоПоказателей,
	|	ВТ_Начисления.ВидРасчетаРезерва КАК ВидРасчетаРезерва,
	|	ВТ_НастройкаРасчета.ВидРезерва КАК ВидРезерва
	|ПОМЕСТИТЬ ВТ_Показатели
	|ИЗ
	|	ВТ_Документ КАК ВТ_Документ
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.РезервыПоОплатеТруда.Показатели КАК РезервыПоОплатеТрудаПоказатели
	|			ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.РезервыПоОплатеТруда.Показатели КАК РезервыПоОплатеТрудаПоказатели1
	|			ПО РезервыПоОплатеТрудаПоказатели.Ссылка = РезервыПоОплатеТрудаПоказатели1.Ссылка
	|				И РезервыПоОплатеТрудаПоказатели.ИдентификаторСтрокиВидаРасчета = РезервыПоОплатеТрудаПоказатели1.ИдентификаторСтрокиВидаРасчета
	|		ПО ВТ_Документ.Документ = РезервыПоОплатеТрудаПоказатели.Ссылка
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_Начисления КАК ВТ_Начисления
	|		ПО (РезервыПоОплатеТрудаПоказатели.ИдентификаторСтрокиВидаРасчета = ВТ_Начисления.ИдентификаторСтрокиВидаРасчета)
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТ_НастройкаРасчета КАК ВТ_НастройкаРасчета
	|		ПО ВТ_Документ.Документ = ВТ_НастройкаРасчета.Документ
	|			И ВТ_Документ.Организация = ВТ_НастройкаРасчета.Организация
	|			И ВТ_Документ.Резерв = ВТ_НастройкаРасчета.Резерв
	|
	|СГРУППИРОВАТЬ ПО
	|	ВТ_Документ.Документ,
	|	ВТ_Документ.Организация,
	|	ВТ_Документ.МесяцНачисления,
	|	ВТ_Документ.Резерв,
	|	РезервыПоОплатеТрудаПоказатели.Показатель,
	|	РезервыПоОплатеТрудаПоказатели.Значение,
	|	РезервыПоОплатеТрудаПоказатели.ИдентификаторСтрокиВидаРасчета,
	|	РезервыПоОплатеТрудаПоказатели.НомерСтроки,
	|	ВТ_Начисления.ВидРасчетаРезерва,
	|	ВТ_НастройкаРасчета.ВидРезерва
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВТ_Начисления.ВидРасчетаРезерва КАК ВидРасчетаРезерва,
	|	ВТ_НастройкаРасчета.ВидРезерва КАК ВидРезерва
	|ПОМЕСТИТЬ ВТ_ВидыРасчетов
	|ИЗ
	|	ВТ_Начисления КАК ВТ_Начисления
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТ_НастройкаРасчета КАК ВТ_НастройкаРасчета
	|		ПО ВТ_Начисления.Документ = ВТ_НастройкаРасчета.Документ
	|			И ВТ_Начисления.Организация = ВТ_НастройкаРасчета.Организация
	|			И ВТ_Начисления.Резерв = ВТ_НастройкаРасчета.Резерв
	|
	|СГРУППИРОВАТЬ ПО
	|	ВТ_Начисления.ВидРасчетаРезерва,
	|	ВТ_НастройкаРасчета.ВидРезерва
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВТ_ВидыРасчетов.ВидРасчетаРезерва КАК ВидРасчетаРезерва,
	|	ВТ_СвойстваПоказателей.НомерСтроки КАК НомерСтроки,
	|	ВТ_СвойстваПоказателей.Идентификатор КАК Показатель,
	|	КОЛИЧЕСТВО(РАЗЛИЧНЫЕ ВТ_СвойстваПоказателей1.НомерСтроки) КАК КоличествоПоказателей,
	|	ВТ_СвойстваПоказателей.КраткоеНаименование КАК КраткоеНаименование,
	|	ВТ_СвойстваПоказателей.Идентификатор КАК Идентификатор
	|ПОМЕСТИТЬ ВТ_НастройкаПоказателей
	|ИЗ
	|	ВТ_ВидыРасчетов КАК ВТ_ВидыРасчетов
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТ_СвойстваПоказателей КАК ВТ_СвойстваПоказателей
	|			ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТ_СвойстваПоказателей КАК ВТ_СвойстваПоказателей1
	|			ПО ВТ_СвойстваПоказателей.ВидРасчетаРезерва = ВТ_СвойстваПоказателей1.ВидРасчетаРезерва
	|		ПО ВТ_ВидыРасчетов.ВидРезерва = ВТ_СвойстваПоказателей.ВидРасчетаРезерва
	|
	|СГРУППИРОВАТЬ ПО
	|	ВТ_ВидыРасчетов.ВидРасчетаРезерва,
	|	ВТ_СвойстваПоказателей.Идентификатор,
	|	ВТ_СвойстваПоказателей.НомерСтроки,
	|	ВТ_СвойстваПоказателей.КраткоеНаименование,
	|	ВТ_СвойстваПоказателей.Идентификатор";
	
	Запрос.Выполнить();
	
КонецПроцедуры

#Область ВидыРасчетовРезервовПоОплатеТруда

Функция ВидыРасчетовРезервовПоОплатеТрудаЭлементПоОписанию(ОписаниеЭлемента) Экспорт
	
	ВидРасчетаРезерваОбъект = РезервыПоОплатеТруда.ВидыРасчетовРезервовПоОплатеТрудаНовыйЭлементПоОписанию(ОписаниеЭлемента);
	ВидРасчетаРезерваОбъект.Записать();
	
	Возврат ВидРасчетаРезерваОбъект.Ссылка;
	
КонецФункции

#КонецОбласти

#Область НастройкиРасчетаРезервовПоОплатеТруда

Процедура НастройкиРасчетаРезервовПоОплатеТрудаОбработкаПроверкиЗаполнения(Объект, Отказ, ПроверяемыеРеквизиты) Экспорт
	
	Если ОбщегоНазначения.ПодсистемаСуществует("ЗарплатаКадрыПриложения.ЗарплатаКадрыДляНебольшихОрганизаций.ОценочныеОбязательства") Тогда
		ОбменИспользуется = Ложь;
		Если ОбщегоНазначения.ПодсистемаСуществует("ЗарплатаКадрыПриложения.ОбменЗарплата3Бухгалтерия3") Тогда
			МодульОбменДаннымиЗарплата3Бухгалтерия3 = ОбщегоНазначения.ОбщийМодуль("ОбменДаннымиЗарплата3Бухгалтерия3");
			НастройкиОбмена = Неопределено;
			ОбменИспользуется = МодульОбменДаннымиЗарплата3Бухгалтерия3.ОбменИспользуется(Объект.Организация, НастройкиОбмена);
			
			МодульРезервыПоОплатеТрудаДляНебольшихОрганизацийПереопределяемый = ОбщегоНазначения.ОбщийМодуль("РезервыПоОплатеТрудаДляНебольшихОрганизацийПереопределяемый");
			МодульРезервыПоОплатеТрудаДляНебольшихОрганизацийПереопределяемый.ОбменИспользуется(ОбменИспользуется);
		КонецЕсли;
		
		Если ОбменИспользуется Тогда
			ОбщегоНазначенияКлиентСервер.УдалитьЗначениеИзМассива(ПроверяемыеРеквизиты, "ВидРезерва");
			ОбщегоНазначенияКлиентСервер.УдалитьЗначениеИзМассива(ПроверяемыеРеквизиты, "НормативОтчисленийВРезерв");
			ОбщегоНазначенияКлиентСервер.УдалитьЗначениеИзМассива(ПроверяемыеРеквизиты, "ПредельнаяВеличинаОтчисленийВРезервНУ");
			ОбщегоНазначенияКлиентСервер.УдалитьЗначениеИзМассива(ПроверяемыеРеквизиты, "ВидыРасчетовРезерва");
			ОбщегоНазначенияКлиентСервер.УдалитьЗначениеИзМассива(ПроверяемыеРеквизиты, "ИсключенияИзРасчетнойБазыФондаОплатыТруда");
		КонецЕсли;
	КонецЕсли;
	
КонецПроцедуры

Функция ПлановыеНачисленияРезервов(Организация, Резерв, Период) Экспорт
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("Организация",    Организация);
	Запрос.УстановитьПараметр("Резерв",         Резерв);
	Запрос.УстановитьПараметр("Период",         Период);
	Запрос.Текст = ТекстЗапросаПлановыеНачисленияРезервов();
	
	Результат = Запрос.Выполнить().Выгрузить();
	
	Возврат Результат;
	
КонецФункции

Функция ТекстЗапросаПлановыеНачисленияРезервов()
	
	ТекстЗапроса =
	"ВЫБРАТЬ
	|	НастройкиРасчетаРезервовПоОплатеТруда.Ссылка КАК Ссылка,
	|	НастройкиРасчетаРезервовПоОплатеТруда.Организация КАК Организация,
	|	НастройкиРасчетаРезервовПоОплатеТруда.Резерв КАК Резерв,
	|	НастройкиРасчетаРезервовПоОплатеТруда.ВидРезерва = ЗНАЧЕНИЕ(Перечисление.ВидыРезервовПоОплатеТруда.Отпуск) КАК ЭтоРезервОтпусков
	|ПОМЕСТИТЬ ВТ_НастройкиРасчетаРезервовПоОплатеТруда
	|ИЗ
	|	Справочник.НастройкиРасчетаРезервовПоОплатеТруда КАК НастройкиРасчетаРезервовПоОплатеТруда
	|ГДЕ
	|	НастройкиРасчетаРезервовПоОплатеТруда.Организация = &Организация
	|	И НастройкиРасчетаРезервовПоОплатеТруда.Резерв = &Резерв
	|	И &Период МЕЖДУ НАЧАЛОПЕРИОДА(НастройкиРасчетаРезервовПоОплатеТруда.НачалоПериода, МЕСЯЦ) И КОНЕЦПЕРИОДА(НастройкиРасчетаРезервовПоОплатеТруда.КонецПериода, МЕСЯЦ)
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВТ_НастройкиРасчетаРезервовПоОплатеТруда.Ссылка КАК Ссылка,
	|	ВТ_НастройкиРасчетаРезервовПоОплатеТруда.Организация КАК Организация,
	|	ВТ_НастройкиРасчетаРезервовПоОплатеТруда.Резерв КАК Резерв,
	|	НастройкиРасчетаРезервовПоОплатеТрудаВидыРасчетовРезерва.ВидРасчетаРезерва КАК ВидРасчетаРезерва,
	|	ВТ_НастройкиРасчетаРезервовПоОплатеТруда.ЭтоРезервОтпусков КАК ЭтоРезервОтпусков
	|ПОМЕСТИТЬ ВТ_ВидыРасчетаРезерва
	|ИЗ
	|	ВТ_НастройкиРасчетаРезервовПоОплатеТруда КАК ВТ_НастройкиРасчетаРезервовПоОплатеТруда
	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.НастройкиРасчетаРезервовПоОплатеТруда.ВидыРасчетовРезерва КАК НастройкиРасчетаРезервовПоОплатеТрудаВидыРасчетовРезерва
	|		ПО ВТ_НастройкиРасчетаРезервовПоОплатеТруда.Ссылка = НастройкиРасчетаРезервовПоОплатеТрудаВидыРасчетовРезерва.Ссылка
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВТ_ВидыРасчетаРезерва.Ссылка КАК Ссылка,
	|	ВТ_ВидыРасчетаРезерва.Организация КАК Организация,
	|	ВТ_ВидыРасчетаРезерва.Резерв КАК Резерв,
	|	ВТ_ВидыРасчетаРезерва.ВидРасчетаРезерва КАК ВидРасчетаРезерва,
	|	ВидыРасчетовРезервовПоОплатеТруда.ВидРасчета КАК ВидРасчета,
	|	ВТ_ВидыРасчетаРезерва.ВидРасчетаРезерва КАК Начисление,
	|	ВТ_ВидыРасчетаРезерва.ЭтоРезервОтпусков КАК ЭтоРезервОтпусков
	|ИЗ
	|	ВТ_ВидыРасчетаРезерва КАК ВТ_ВидыРасчетаРезерва
	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.ВидыРасчетовРезервовПоОплатеТруда КАК ВидыРасчетовРезервовПоОплатеТруда
	|		ПО ВТ_ВидыРасчетаРезерва.ВидРасчетаРезерва = ВидыРасчетовРезервовПоОплатеТруда.Ссылка";
	
	Возврат ТекстЗапроса;
	
КонецФункции

Функция ТекстЗапросаНастройкаРезервов() Экспорт
	
	ТекстЗапроса =
	"ВЫБРАТЬ
	|	НастройкиРасчетаРезервовПоОплатеТруда.Ссылка КАК Ссылка,
	|	НастройкиРасчетаРезервовПоОплатеТруда.ВерсияДанных КАК ВерсияДанных,
	|	НастройкиРасчетаРезервовПоОплатеТруда.ПометкаУдаления КАК ПометкаУдаления,
	|	НастройкиРасчетаРезервовПоОплатеТруда.Наименование КАК Наименование,
	|	НастройкиРасчетаРезервовПоОплатеТруда.Организация КАК Организация,
	|	НастройкиРасчетаРезервовПоОплатеТруда.Резерв КАК Резерв,
	|	НастройкиРасчетаРезервовПоОплатеТруда.ВидРезерва КАК ВидРезерва,
	|	НастройкиРасчетаРезервовПоОплатеТруда.НачалоПериода КАК НачалоПериода,
	|	НастройкиРасчетаРезервовПоОплатеТруда.КонецПериода КАК КонецПериода,
	|	НастройкиРасчетаРезервовПоОплатеТруда.ПолноеНаименование КАК ПолноеНаименование,
	|	ИСТИНА КАК ФормироватьРезервБУ,
	|	НастройкиРасчетаРезервовПоОплатеТруда.ФормироватьРезервНУ КАК ФормироватьРезервНУ,
	|	Значение(Перечисление.МетодыНачисленияРезервовПоОплатеТруда.НормативныйМетод) КАК МетодНачисленияРезерваБУ,
	|	Значение(Перечисление.МетодыНачисленияРезервовПоОплатеТруда.НормативныйМетод) КАК МетодНачисленияРезерваНУ,
	|	НастройкиРасчетаРезервовПоОплатеТруда.НормативОтчисленийВРезерв КАК НормативОтчисленийВРезерв,
	|	НастройкиРасчетаРезервовПоОплатеТруда.НормативОтчисленийВРезерв КАК НормативОтчисленийВРезервБУ,
	|	НастройкиРасчетаРезервовПоОплатеТруда.НормативОтчисленийВРезерв КАК НормативОтчисленийВРезервНУ,
	|	0 КАК ПредельнаяВеличинаОтчисленийВРезервБУ,
	|	НастройкиРасчетаРезервовПоОплатеТруда.ПредельнаяВеличинаОтчисленийВРезервНУ КАК ПредельнаяВеличинаОтчисленийВРезервНУ,
	|	НастройкиРасчетаРезервовПоОплатеТруда.ПредельнаяВеличинаОтчисленийВРезервНУ КАК ПредельнаяВеличинаОтчисленийВРезерв,
	|	ЛОЖЬ КАК ОграничиватьНачислениеПредельнойСуммойБУ,
	|	ИСТИНА КАК ОграничиватьНачислениеПредельнойСуммойНУ,
	|	ИСТИНА КАК НалоговыйУчетПоНастройкамБухгалтерскогоУчета,
	|	ИСТИНА КАК ИспользоватьНастройкиГоловнойОрганизации
	|ИЗ
	|	Справочник.НастройкиРасчетаРезервовПоОплатеТруда КАК НастройкиРасчетаРезервовПоОплатеТруда
	|ГДЕ
	|	НастройкиРасчетаРезервовПоОплатеТруда.Организация = &Организация
	|	И НастройкиРасчетаРезервовПоОплатеТруда.Резерв = &Резерв
	|	И &Период МЕЖДУ НАЧАЛОПЕРИОДА(НастройкиРасчетаРезервовПоОплатеТруда.НачалоПериода, МЕСЯЦ) И КОНЕЦПЕРИОДА(НастройкиРасчетаРезервовПоОплатеТруда.КонецПериода, МЕСЯЦ)";
	
	Возврат ТекстЗапроса;
	
КонецФункции

Функция ОписаниеНастройкиДействующихРезервов() Экспорт
	
	ОписаниеНастройкиДействующихРезервов = Новый Структура();
	ОписаниеНастройкиДействующихРезервов.Вставить("Организация",               Справочники.Организации.ПустаяСсылка());
	ОписаниеНастройкиДействующихРезервов.Вставить("СоответствиеНастроек",      Новый Соответствие);
	ОписаниеНастройкиДействующихРезервов.Вставить("СоответствиеНачислений",    Новый Соответствие);
	
	Возврат ОписаниеНастройкиДействующихРезервов;
	
КонецФункции

Функция НастройкиДействующихРезервов(Организация, Период) Экспорт
	
	НастройкиДействующихРезервов = ОписаниеНастройкиДействующихРезервов();
	НастройкиДействующихРезервов.Вставить("Организация", Организация);
	
	Выборка = РезервыПоОплатеТруда.ВыборкаДействующихНастроек(Организация, Период);
	
	Пока Выборка.Следующий() Цикл
		
		НастройкиДействующихРезервов.СоответствиеНастроек.Вставить(Выборка.Резерв, РезервыПоОплатеТруда.НастройкаРезервов(Организация, Выборка.Резерв, Период));
		
		ПлановыеНачисленияРезервов = РезервыПоОплатеТруда.ПлановыеНачисленияРезервов(Организация, Выборка.Резерв, Период);
		НастройкиДействующихРезервов.СоответствиеНачислений.Вставить(Выборка.Резерв,
			ОбщегоНазначенияКлиентСервер.СвернутьМассив(ПлановыеНачисленияРезервов.ВыгрузитьКолонку("Начисление")));
		
	КонецЦикла;
	
	Возврат НастройкиДействующихРезервов;
	
КонецФункции

Функция БазовыеНачисленияРезерваПоОплатеТруда(Организация, Резерв, Период) Экспорт
	
	БазовыеНачисления = Неопределено;
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("Организация", Организация);
	Запрос.УстановитьПараметр("Резерв",      Резерв);
	Запрос.УстановитьПараметр("Период",      Период);
	Запрос.Текст =
	"ВЫБРАТЬ
	|	НастройкиРасчетаРезервовПоОплатеТруда.Ссылка КАК Ссылка,
	|	НастройкиРасчетаРезервовПоОплатеТрудаИсключенияИзРасчетнойБазыФондаОплатыТруда.ВидРасчета КАК ВидРасчета
	|ПОМЕСТИТЬ ВТ_ИсключенияИЗРасчетнойБазы
	|ИЗ
	|	Справочник.НастройкиРасчетаРезервовПоОплатеТруда КАК НастройкиРасчетаРезервовПоОплатеТруда
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.НастройкиРасчетаРезервовПоОплатеТруда.ИсключенияИзРасчетнойБазыФондаОплатыТруда КАК НастройкиРасчетаРезервовПоОплатеТрудаИсключенияИзРасчетнойБазыФондаОплатыТруда
	|		ПО НастройкиРасчетаРезервовПоОплатеТруда.Ссылка = НастройкиРасчетаРезервовПоОплатеТрудаИсключенияИзРасчетнойБазыФондаОплатыТруда.Ссылка
	|ГДЕ
	|	НастройкиРасчетаРезервовПоОплатеТруда.Организация = &Организация
	|	И НастройкиРасчетаРезервовПоОплатеТруда.Резерв = &Резерв
	|	И &Период МЕЖДУ НАЧАЛОПЕРИОДА(НастройкиРасчетаРезервовПоОплатеТруда.НачалоПериода, МЕСЯЦ) И КОНЕЦПЕРИОДА(НастройкиРасчетаРезервовПоОплатеТруда.КонецПериода, МЕСЯЦ)
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	Начисления.Ссылка КАК Ссылка
	|ИЗ
	|	ПланВидовРасчета.Начисления КАК Начисления
	|ГДЕ
	|	НЕ Начисления.Ссылка В
	|				(ВЫБРАТЬ
	|					ВТ_ИсключенияИЗРасчетнойБазы.ВидРасчета
	|				ИЗ
	|					ВТ_ИсключенияИЗРасчетнойБазы)";
	
	Результат = Запрос.Выполнить();
	Если Не Результат.Пустой() Тогда
		БазовыеНачисления = Новый Массив;
		Выборка = Результат.Выбрать();
		Пока Выборка.Следующий() Цикл
			БазовыеНачисления.Добавить(Выборка.Ссылка);
		КонецЦикла;
	КонецЕсли;
	
	Возврат БазовыеНачисления;
	
КонецФункции

#КонецОбласти

Процедура ПроверитьИспользованиеОбмена(ОбменИспользуется, Организация) Экспорт
	
	Если ОбщегоНазначения.ПодсистемаСуществует("ЗарплатаКадрыПриложения.ОбменЗарплата3Бухгалтерия3") Тогда
		Модуль = ОбщегоНазначения.ОбщийМодуль("ОбменДаннымиЗарплата3Бухгалтерия3");
		ОбменИспользуется = Модуль.ОбменИспользуется(Организация);
	КонецЕсли;
	
	Если ОбщегоНазначения.ПодсистемаСуществует("ЗарплатаКадрыПриложения.ОбменДаннымиУниверсальныйФормат") Тогда
		Модуль = ОбщегоНазначения.ОбщийМодуль("ОбменДаннымиУниверсальныйФормат");
		ОбменИспользуется = ОбменИспользуется Или Модуль.ИспользуетсяОбменБП3(Организация);
	КонецЕсли;
	
Конецпроцедуры

#КонецОбласти
