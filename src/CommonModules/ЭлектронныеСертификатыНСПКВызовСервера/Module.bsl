///////////////////////////////////////////////////////////////////////////////////////////////////////
// Copyright (c) 2022, ООО 1С-Софт
// Все права защищены. Эта программа и сопроводительные материалы предоставляются 
// в соответствии с условиями лицензии Attribution 4.0 International (CC BY 4.0)
// Текст лицензии доступен по ссылке:
// https://creativecommons.org/licenses/by/4.0/legalcode
///////////////////////////////////////////////////////////////////////////////////////////////////////

#Область СлужебныйПрограммныйИнтерфейс

Функция ПолучитьJSONТоварныеПозиции(ТоварныеПозиции) Экспорт
	
	ЗаписьJSON = Новый ЗаписьJSON();
	ЗаписьJSON.ПроверятьСтруктуру = Ложь;
	ЗаписьJSON.УстановитьСтроку();  
	Позиции = Новый Массив();
	Для Каждого Позиция Из ТоварныеПозиции Цикл
		Товар = Новый Структура();
		Товар.Вставить("articleNumber", Позиция.НомерПозиции);
		Если Позиция.Свойство("Артикул") Тогда
			Товар.Вставить("articleCode", Позиция.Артикул);
		КонецЕсли;
		Если Позиция.Свойство("НомерПозицииВозврата") Тогда
			Товар.Вставить("originalArticleNumber", Позиция.НомерПозицииВозврата);
		КонецЕсли;
		Товар.Вставить("truCode", Позиция.КодТовараТРУ);
		Товар.Вставить("count"  , Позиция.Количество);
		Товар.Вставить("price"  , Позиция.Цена * 100); // Цена за единицу товара в копейках
		Позиции.Добавить(Товар);
	КонецЦикла;
	ЗаписатьJSON(ЗаписьJSON, Позиции);
	Результат = ЗаписьJSON.Закрыть();
	
	Возврат Результат;
	
КонецФункции

Функция ПрочитатьJSONРезультатОперации(СтрокаJSON, СписокОшибок = Неопределено, ОснованиеФискальнойОперации = Неопределено) Экспорт 
	
	ОписаниеОшибки = ?(ПустаяСтрока(СписокОшибок), "", СписокОшибок); 
	РезультатВыполнения = ЭлектронныеСертификатыНСПККлиентСервер.ПараметрыВыполненияОперации(Ложь, ОписаниеОшибки);
	
	Если Не ПустаяСтрока(СтрокаJSON) И Не СтрНачинаетсяС(СтрокаJSON, "<!DOCTYPE") Тогда
		ЧтениеJSON = Новый ЧтениеJSON;
		ЧтениеJSON.УстановитьСтроку(СтрокаJSON);
	
		РезультатОперации = ПрочитатьJSON(ЧтениеJSON);
		Если РезультатОперации.Свойство("result") Тогда
			РезультатВыполнения.КодРезультата = Число(РезультатОперации.result.code);
			РезультатВыполнения.Результат = РезультатВыполнения.КодРезультата = 0;
			РезультатВыполнения.ОписаниеОшибки = РезультатОперации.result.description;   
			Если НЕ ПустаяСтрока(ОписаниеОшибки) Тогда
				РезультатВыполнения.ОписаниеОшибки = РезультатВыполнения.ОписаниеОшибки = Символы.ПС + ОписаниеОшибки;            
			КонецЕсли;               
		КонецЕсли;               
		
		Если РезультатВыполнения.Результат И РезультатОперации.Свойство("purchaseBasketId") Тогда
			РезультатВыполнения.ИдентификаторКорзины = РезультатОперации.purchaseBasketId; 
		КонецЕсли; 
		
		Если РезультатВыполнения.Результат И РезультатОперации.Свойство("basket") Тогда
			
			Если РезультатОперации.basket.Свойство("purchaseBasketId") Тогда
				РезультатВыполнения.ИдентификаторКорзины = РезультатОперации.basket.purchaseBasketId;
			КонецЕсли; 
			Если РезультатОперации.basket.Свойство("returnBasketId") Тогда
				РезультатВыполнения.ИдентификаторКорзины = РезультатОперации.basket.returnBasketId; 
			КонецЕсли; 
			Если РезультатОперации.basket.Свойство("totalCertAmount") И Число(РезультатОперации.basket.totalCertAmount) > 0 Тогда
				РезультатВыполнения.СуммаСертификатами = Число(РезультатОперации.basket.totalCertAmount) / 100; 
			КонецЕсли;       
			
			Если РезультатОперации.basket.Свойство("article") Тогда
				Для Каждого Позиция Из РезультатОперации.basket.article Цикл
					
					ТоварнаяПозиция =  ЭлектронныеСертификатыНСПККлиентСервер.ПараметрыТоварнойПозиции();
					Если Позиция.Свойство("articleCode") Тогда
						ТоварнаяПозиция.Артикул = Позиция.articleCode;
					КонецЕсли;                     
					Если Позиция.Свойство("articleNumber") Тогда
						ТоварнаяПозиция.НомерПозиции = Позиция.articleNumber;
					КонецЕсли; 
					Если Позиция.Свойство("price") Тогда
						ТоварнаяПозиция.Цена = Число(Позиция.price) / 100;
					КонецЕсли; 
					Если Позиция.Свойство("truCode") Тогда
						ТоварнаяПозиция.КодТовараТРУ = Позиция.truCode;
					КонецЕсли;     
					
					Если Позиция.Свойство("certificate") Тогда
						Для Каждого Сертификат Из Позиция.certificate Цикл
							СертификатСтрока =  ЭлектронныеСертификатыНСПККлиентСервер.ПараметрыСертификата();
							Если Сертификат.Свойство("certificateId") Тогда
								СертификатСтрока.Идентификатор = Сертификат.certificateId;
							КонецЕсли;                     
							Если Сертификат.Свойство("certCount") Тогда
								СертификатСтрока.Количество = Сертификат.certCount;
							КонецЕсли;                     
							Если Сертификат.Свойство("certPrice") Тогда
								СертификатСтрока.Цена = Число(Сертификат.certPrice) / 100;
							КонецЕсли;                     
							Если Сертификат.Свойство("certMaxPrice") Тогда
								СертификатСтрока.МаксимальнаяЦена = Число(Сертификат.certMaxPrice) / 100;
							КонецЕсли;                     
							ТоварнаяПозиция.Сертификаты.Добавить(СертификатСтрока);
						КонецЦикла;
					КонецЕсли;     
					РезультатВыполнения.ТоварныеПозиции.Добавить(ТоварнаяПозиция);
					
				КонецЦикла;
			КонецЕсли;  
		КонецЕсли;
		
		Если РезультатВыполнения.Результат И РезультатОперации.Свойство("baskets") И ЗначениеЗаполнено(РезультатОперации.baskets) Тогда
			Для Каждого ИдентификаторКорзины Из РезультатОперации.baskets Цикл   
				ИдентификаторКорзиныСтрока = ЭлектронныеСертификатыНСПККлиентСервер.ПараметрыИдентификаторовКорзинПокупокТСП();
				Если ИдентификаторКорзины.Свойство("basketId") Тогда
					ИдентификаторКорзиныСтрока.ИдентификаторКорзины = ИдентификаторКорзины.basketId;
				КонецЕсли;                     
				Если ИдентификаторКорзины.Свойство("authDate") Тогда
					ИдентификаторКорзиныСтрока.ДатаАвторизации = XMLЗначение(Тип("Дата"), ИдентификаторКорзины.authDate);
				КонецЕсли;                     
				РезультатВыполнения.ИдентификаторыКорзинПокупок.Добавить(ИдентификаторКорзиныСтрока);
			КонецЦикла;
		КонецЕсли;  
		
		Если РезультатВыполнения.Результат И РезультатОперации.Свойство("certificates") Тогда
			Для Каждого Сертификат Из РезультатОперации.certificates Цикл    
				
				СертификатСтрока = ЭлектронныеСертификатыНСПККлиентСервер.ПараметрыДоступногоСертификата(); 
				Если Сертификат.Свойство("id") Тогда
					СертификатСтрока.Идентификатор = Сертификат.id;
				КонецЕсли;                     
				Если Сертификат.Свойство("comment") Тогда
					СертификатСтрока.Комментарий = Сертификат.comment;
				КонецЕсли;                     
				Если Сертификат.Свойство("balanceCount") И ЗначениеЗаполнено(Сертификат.balanceCount) Тогда
					СертификатСтрока.БалансКоличество = Число(Сертификат.balanceCount);
				КонецЕсли;                     
				Если Сертификат.Свойство("balanceMoney") И ЗначениеЗаполнено(Сертификат.balanceMoney) Тогда
					СертификатСтрока.БалансДенежныхСредств = Число(Сертификат.balanceMoney) / 100;
				КонецЕсли;                     
				Если Сертификат.Свойство("limitMoney") И ЗначениеЗаполнено(Сертификат.limitMoney) Тогда
					СертификатСтрока.ЛимитДенежныхСредств = Число(Сертификат.limitMoney) / 100;
				КонецЕсли;                     
				Если Сертификат.Свойство("type") Тогда
					СертификатСтрока.Тип = Сертификат.type;
				КонецЕсли;                     
				Если Сертификат.Свойство("startDate") И ЗначениеЗаполнено(Сертификат.startDate)Тогда
					СертификатСтрока.ДатаНачалаДействия = XMLЗначение(Тип("Дата"), Сертификат.startDate);
				КонецЕсли;                     
				Если Сертификат.Свойство("expiryDate") И ЗначениеЗаполнено(Сертификат.expiryDate) Тогда
					СертификатСтрока.ДатаЗавершенияДействия = XMLЗначение(Тип("Дата"), Сертификат.expiryDate);
				КонецЕсли;                     
				
				Если Сертификат.Свойство("tru") Тогда
					Для Каждого КодТовараТРУ Из Сертификат.tru Цикл       
						СтрокаКодТовараТРУ = ЭлектронныеСертификатыНСПККлиентСервер.ПараметрыДоступногоКодТовараТРУ();
						Если КодТовараТРУ.Свойство("truCode") Тогда
							СтрокаКодТовараТРУ.КодТовараТРУ = КодТовараТРУ.truCode;
						КонецЕсли;                     
						Если КодТовараТРУ.Свойство("balanceCount") И ЗначениеЗаполнено(КодТовараТРУ.balanceCount) Тогда
							СтрокаКодТовараТРУ.БалансКоличество = Число(КодТовараТРУ.balanceCount);
						КонецЕсли;                     
						Если КодТовараТРУ.Свойство("balanceMoney") И ЗначениеЗаполнено(КодТовараТРУ.balanceMoney) Тогда
							СтрокаКодТовараТРУ.БалансДенежныхСредств = Число(КодТовараТРУ.balanceMoney) / 100;
						КонецЕсли;                     
						Если КодТовараТРУ.Свойство("limitMoney") И ЗначениеЗаполнено(КодТовараТРУ.limitMoney) Тогда
							СтрокаКодТовараТРУ.ЛимитДенежныхСредств = Число(КодТовараТРУ.limitMoney) / 100;
						КонецЕсли;                     
						СертификатСтрока.КодыТоваровТРУ.Добавить(СтрокаКодТовараТРУ);
						РезультатВыполнения.ТоварныеПозиции.Добавить(СтрокаКодТовараТРУ);
					КонецЦикла;
				КонецЕсли;     
				
				РезультатВыполнения.ДоступныеСертификаты.Добавить(СертификатСтрока);
				
			КонецЦикла;
		КонецЕсли;  
		
		ЧтениеJSON.Закрыть();
	Иначе                      
		РезультатВыполнения.ОписаниеОшибки = ?(ПустаяСтрока(ОписаниеОшибки), НСтр("ru = 'Ответ не получен'"), ОписаниеОшибки);
	КонецЕсли;
	
	Если ЗначениеЗаполнено(ОснованиеФискальнойОперации) Тогда
		ЭлектронныеСертификатыНСПК.ОбработатьРезультатОтправкиПодтверждения(ОснованиеФискальнойОперации, РезультатВыполнения);
	КонецЕсли;
	
	Возврат РезультатВыполнения;
	
КонецФункции

Функция ОбработатьРезультатВыполненияНаСервере(Параметры) Экспорт
	
	ТекстРезультата             = Параметры.ТекстРезультата;
	СписокОшибок                = Параметры.СписокОшибок;
	ОснованиеФискальнойОперации = Параметры.ОснованиеФискальнойОперации;
	ПараметрыОперации           = Параметры.ПараметрыОперации;
	ТипПлатежнойОперации        = Параметры.ТипПлатежнойОперации;
	
	РезультатВыполнения = ПрочитатьJSONРезультатОперации(ТекстРезультата, СписокОшибок, ОснованиеФискальнойОперации);
	ЗаписатьИсториюПлатежнойОперации(ТипПлатежнойОперации, ПараметрыОперации, РезультатВыполнения, ТекстРезультата);
	
	Возврат РезультатВыполнения;
	
КонецФункции

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

Функция ТипПлатежнойОперацииПоКоманде(Команда)
	
	ТипыОпераций = Новый Соответствие();
	
	ТипыОпераций.Вставить(ЭлектронныеСертификатыНСПККлиентСервер.ТипПлатежнойОперацииПредварительноеОдобрениеИспользованияЭС(), 
		Перечисления.ТипыПлатежныхОпераций.ПредварительноеОдобрениеИспользованияЭС);
	ТипыОпераций.Вставить(ЭлектронныеСертификатыНСПККлиентСервер.ТипПлатежнойОперацииПредварительноеОдобрениеВозвратаЭС(),
		Перечисления.ТипыПлатежныхОпераций.ПредварительноеОдобрениеВозвратаЭС);
	ТипыОпераций.Вставить(ЭлектронныеСертификатыНСПККлиентСервер.ТипПлатежнойОперацииПередачаДанныхФискальногоЧека(),
		Перечисления.ТипыПлатежныхОпераций.ПередачаДанныхФискальногоЧека);
	ТипыОпераций.Вставить(ЭлектронныеСертификатыНСПККлиентСервер.ТипПлатежнойОперацииПолучениеИдентификатораОперации(),
		Перечисления.ТипыПлатежныхОпераций.ПолучениеИдентификатораОперации);
	ТипыОпераций.Вставить(ЭлектронныеСертификатыНСПККлиентСервер.ТипПлатежнойОперацииПолучениеСоставаКорзины(),
		Перечисления.ТипыПлатежныхОпераций.ПолучениеСоставаКорзины);
	ТипыОпераций.Вставить(ЭлектронныеСертификатыНСПККлиентСервер.ТипПлатежнойОперацииПолучениеСпискаСертификатов(),
		Перечисления.ТипыПлатежныхОпераций.ПолучениеСпискаЭС);
	ТипыОпераций.Вставить(ЭлектронныеСертификатыНСПККлиентСервер.ТипПлатежнойОперацииПолучениеСпискаИдентификаторовКорзинПокупокТСП(),
		Перечисления.ТипыПлатежныхОпераций.ПолучениеСпискаИдентификаторовКорзинПокупокТСП);
	Возврат ТипыОпераций.Получить(Команда);
	
КонецФункции

Процедура ЗаписатьИсториюПлатежнойОперации(ТипПлатежнойОперации, ДанныеОперации, РезультатВыполнения, ТекстОтветаJSON)
	
	Если Не МенеджерОборудованияВызовСервера.ДоступноЛогированиеПлатежныхОпераций() Тогда
		Возврат;
	КонецЕсли;
	
	ТипОперации = ТипПлатежнойОперацииПоКоманде(ТипПлатежнойОперации);
	Если ТипОперации = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	УстановитьПривилегированныйРежим(Истина);
	
	НаборЗаписей = РегистрыСведений.ПлатежныеОперации.СоздатьНаборЗаписей();
	Запись = НаборЗаписей.Добавить();
	
	Запись.ИдентификаторЗапроса = Строка(ДанныеОперации.ИдентификаторЗапроса);
	Если Запись.ИдентификаторЗапроса = Неопределено Или Запись.ИдентификаторЗапроса = "0" Тогда
		Запись.ИдентификаторЗапроса = Строка(Новый УникальныйИдентификатор());
	КонецЕсли;
	
	ДатаЗаписи = МенеджерОборудованияВызовСервера.ДатаСеанса();
	Запись.ДокументОснование = ДанныеОперации.ОснованиеФискальнойОперации;
	Если ДанныеОперации.ИдентификаторКорзины = Неопределено Тогда
		Запись.ИдентификаторОперации = РезультатВыполнения.ИдентификаторКорзины;
	Иначе
		Запись.ИдентификаторОперации = ДанныеОперации.ИдентификаторКорзины;
	КонецЕсли;
	Запись.ДатаЗапроса = ДатаЗаписи;
	Запись.ГодМесяц = Год(ДатаЗаписи)*100+Месяц(ДатаЗаписи);
	Запись.ТипОперации = ТипОперации;
	СуммаОперации = 0;
	Если ТипОперации = Перечисления.ТипыПлатежныхОпераций.ПередачаДанныхФискальногоЧека Тогда
		СуммаОперации = ДанныеОперации.ФискальныйЧекСумма;
	Иначе
		Для Каждого ТоварнаяПозиция Из ДанныеОперации.ТоварныеПозиции Цикл
			Если ТоварнаяПозиция.Цена <> Неопределено И ТоварнаяПозиция.Количество <> Неопределено Тогда
				СуммаОперации = СуммаОперации + (ТоварнаяПозиция.Цена * ТоварнаяПозиция.Количество);
			КонецЕсли;
		КонецЦикла;
	КонецЕсли;
	Запись.СуммаОперации = СуммаОперации;
	Запись.ОперацияВыполнена = РезультатВыполнения.Результат;
	

	ПараметрыЗаписиJSON = Новый ПараметрыЗаписиJSON(, Символы.Таб);
	ЧтениеJSON          = Новый ЧтениеJSON();
	ЗаписьJSON          = Новый ЗаписьJSON();
	ЗаписьJSON.УстановитьСтроку(ПараметрыЗаписиJSON);
	Сжатие              = Новый СжатиеДанных(6);
	ОтветBase64         = "";

	Если Не ПустаяСтрока(ТекстОтветаJSON) Тогда 
		ЧтениеJSON.УстановитьСтроку(ТекстОтветаJSON);
		ОтветJSON = ПрочитатьJSON(ЧтениеJSON);
		Если ОтветJSON.Свойство("request", ОтветBase64) <> Неопределено Тогда
			ОтветJSON.Удалить("request");
			ЗаписатьJSON(ЗаписьJSON, ОтветJSON, , "ЗаписатьИсториюПлатежнойОперации_ПреобразованиеВJSON", ЭлектронныеСертификатыНСПКВызовСервера);
			ТекстОтвета  = ЗаписьJSON.Закрыть();
			ТекстЗапроса = ПолучитьСтрокуИзДвоичныхДанных(Base64Значение(ОтветBase64));
		Иначе
			ЗаписатьJSON(ЗаписьJSON, ДанныеОперации, , "ЗаписатьИсториюПлатежнойОперации_ПреобразованиеВJSON", ЭлектронныеСертификатыНСПКВызовСервера);
			ТекстЗапроса = ЗаписьJSON.Закрыть();
			ТекстОтвета  = ТекстОтветаJSON;
		КонецЕсли;
	Иначе
		ТекстОтвета  = ТекстОтветаJSON;
	КонецЕсли;
		
	Запись.ДанныеЗапроса = Новый ХранилищеЗначения(ТекстЗапроса, Сжатие);
	Запись.ДанныеОтвета  = Новый ХранилищеЗначения(ТекстОтвета,  Сжатие);
	
	НаборЗаписей.Записать(Ложь);

КонецПроцедуры

Функция ЗаписатьИсториюПлатежнойОперации_ПреобразованиеВJSON(Свойство, Значение, ДополнительныеПараметры, Отказ) Экспорт
	
	Возврат Строка(Значение); 
	
КонецФункции

#КонецОбласти
