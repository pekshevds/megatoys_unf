#Область ПрограммныйИнтерфейс

// Если после получения новости надо "доработать" ее текст, реквизиты, категории и т.п.,
//  то это можно сделать в этой процедуре.
// Объект новости еще не записан, можно менять все его реквизиты (например, пометку удаления, чтобы управлять видимостью
// новости). Дополнительно передается НовостьХДТО - на случай, если передаются дополнительные теги, их можно отсюда получить.
// Здесь можно изменить все данные новости перед записью, например:
//   для новостей с определенными идентификаторами, которые в НовостномЦентре выдаются специфическим новостям,
//   изменить тексты новости и т.п.
// Список предопределенных УИН новостей (проверять на равенство СокрЛП(ВРег(ОбъектНовости.УИННовости)) и ВРег(указанный УИН)):
//  - для 7be471d8-3a5d-4a2b-bf67-ca8d632f34d8, сообщается о том, что лента новостей - закрытая,
//      и необходимо ввести логин / пароль для доступа к ней;
//  - для 8cb9d0fa-dd13-49d7-a023-b207d2cbc8c4 сообщается о том, что лента новостей - закрытая,
//      и введенные логин / пароль для доступа к ней неправильные;
//  - для bf94d306-8e11-41c2-a7cb-ebc92e8acb3b сообщается о том, что лента новостей - закрытая,
//      и требуется действующая подписка на ИТС;
//  - для 15796c0d-ed48-4a48-90f0-87aa03a158c6 сообщается о том, что лента новостей - закрытая,
//      а текущая подписка на ИТС уже закончена (просрочена);
//  - для a170042d-a073-456a-91b5-881796995a27 сообщается о том, что текущая конфигурация
//      не находится в списке купленных, хотя доступ к ленте новостей разрешен только тем, кто официально
//      приобрел конфигурацию;
//  - для 41dbfdc8-665b-4944-b771-608809627916 сообщается о том, что переданный URL содержит ошибки;
//  - для 1db8ce78-10e1-4556-b891-44b549fe22d7 сообщается о том, что лента новостей
//      не привязана в новостном центре к текущей конфигурации, а значит не должна пытаться получать новости по ней;
//  - для 505748bb-758a-47a5-9566-e4894f85b382 сообщается о том, что лента новостей не существует;
//  - для e91fabe3-adfd-4fdb-b37d-4799faee32ae сообщается о том, что указан неправильный формат (должен быть atom, rss
//  или atom1c); - для 313f4928-a71c-4cef-96ee-a4b6106c1275 или id=Ошибка сообщается обо всех остальных системных ошибках;
//  - для 6588f3f9-d569-478f-a370-7cd75d833966 сообщается о том, что по ленте новостей
//      давно не были получены новости из-за технических ошибок;
//      Новость должна создаваться самой конфигурацией, но возможны ситуации, что сервер сам предупреждает, что он будет
//      отключен.
//  - для 8f9c7dca-3641-4ce1-88cb-5ea1ad021dfd можно в текст новости вставить тег <a id="ClientDebugInformation" />,
//      который будет заменяться на клиентскую отладочную информацию (в дополнение к информации от сервера).
//
// Параметры:
//  ОбъектНовости - СправочникОбъект.Новости - Новость, у которой необходимо изменить данные;
//  НовостьХДТО   - ОбъектXDTO - полученный объект новости.
//
//@skip-warning
Процедура ДополнительноОбработатьНовостьПослеПолученияПередЗаписью(ОбъектНовости, НовостьХДТО) Экспорт

	РазделениеВключено = ОбщегоНазначения.РазделениеВключено(); 
	
	Если НЕ РазделениеВключено Тогда
		Возврат;
	КонецЕсли;
	
	ЛентаВажныхНовостей = ОбработкаНовостейПовтИсп.ПолучитьЛентуНовостейПоКоду("urgent");
	
	Если ОбъектНовости.ЛентаНовостей = ЛентаВажныхНовостей Тогда
		Возврат;
	КонецЕсли;
	
	Если ОбъектНовости.Важность = 0 Тогда
		Возврат;
	КонецЕсли;
	
	ОбъектНовости.Важность = 0;
	
КонецПроцедуры

// Переопределяет сброс состояния новости при ее записи.
// По-умолчанию, если новость "приходит" заново (в результате перепубликации, например),
//  то ей заново устанавливаются свойства "Не прочтена", "Оповещение включено" и т.п.
// Здесь можно переопределить поведение по-умолчанию и в зависимости от своих условий сбрасывать или не сбрасывать
// состояние новости. Важное замечание: нельзя вносить изменения в ОбъектНовость, т.к. метод вызывается из события ПриЗаписи.
// Если новость новая, то этот метод не вызывается, т.е. нельзя переопределить сброс свойств для новых новостей.
// В ОбъектНовость.ДополнительныеСвойства есть полезное свойство "ВажностьДоЗаписи". Если увеличилась важность,
//  то рекомендуется сбросить свойства новости до "Не прочтена", "Оповещение включено" (т.е. установить
//  СброситьСостояниеНовости = Истина).
// Возможны и более сложные сценарии: например, сбрасывать состояние новости только
//  если в тексте есть комментарий "<!-- Сбросить состояние новости -->".
//
// Параметры:
//  ОбъектНовость            - СправочникОбъект.Новости - записываемая новость;
//  СброситьСостояниеНовости - Булево - В эту переменную необходимо вернуть "Истина", если необходимо установить
//                             свойства "Не прочтена", "Оповещение включено",
//                             или Ложь, если надо оставить эти свойства в текущем состоянии.
//
//@skip-warning
Процедура ПереопределитьСбросСостоянияНовостиПриЗаписи(Знач ОбъектНовость, СброситьСостояниеНовости) Экспорт

	СброситьСостояниеНовости = СтрНайти(ОбъектНовость.ТекстНовости, "<!--SmallBusiness_MarkUnread-->") <> 0;
	
КонецПроцедуры

// Переопределяет создание новости при неактивности ленты новостей.
//
// Параметры:
//  ЛентаНовостей - СправочникСсылка.ЛентыНовостей - Лента новостей;
//  НовостьОбъект - СправочникОбъект.Новости - заполненный объект справочника Новости, который будет создан или изменен;
//  Отказ         - Булево - в этот параметр надо передать Истина, если создание / изменение новости надо отменить.
//
//@skip-warning
Процедура ПереопределитьДействияКогдаНайденаНеактивнаяЛентаНовостей(ЛентаНовостей, НовостьОбъект, Отказ) Экспорт

	Отказ = Истина;
	
КонецПроцедуры

// В этой процедуре можно переопределить состав новостей формы показа новостей для рабочего стола и другие действия с
// управляемой формой. Пример:
//   ВозвращаемыеЗначения = Новый Структура("ПропуститьЗаполнениеНовостями", Истина);
//   НоваяСтрока = Форма.Новости.Добавить();
//   НоваяСтрока.Наименование = НСтр("ru='Как обновить конфигурацию'");
//   НоваяСтрока.Ссылка = Справочники.Новости.НайтиПоРеквизиту("УИННовости", "123456"); // Новость должна присутствовать
//   в справочнике! НоваяСтрока = Форма.Новости.Добавить();
//   НоваяСтрока.Наименование = НСтр("ru='Как настроить автообновление'");
//   НоваяСтрока.Ссылка = Справочники.Новости.НайтиПоРеквизиту("УИННовости", "234567"); // Новость должна присутствовать
//   в справочнике!
//
// Параметры:
//  Форма                - ФормаКлиентскогоПриложения - форма просмотра новостей для рабочего стола;
//  ВозвращаемыеЗначения - Структура - структура с возвращаемыми значениями для дальнейшей обработки формой. Может
//    содержать ключи:
//    * ПропуститьЗаполнениеНовостями - Булево - если Истина, то форма рабочего стола не будет проводить заполнение новостями.
//
//@skip-warning
Процедура ДополнительноОбработатьФормуПросмотраНовостейДляРабочегоСтолаПриСозданииНаСервере(
			Форма,
			ВозвращаемыеЗначения) Экспорт          
			
	ПятьЧасовВМинутах = 300;
	Если ОбщегоНазначенияКлиентСервер.ЕстьРеквизитИлиСвойствоОбъекта(Форма, "СписокНовостей_ИнтервалАвтообновления") Тогда
		Форма.СписокНовостей_ИнтервалАвтообновления = ПятьЧасовВМинутах;
	Иначе
		ТекстОшибки = НСтр("ru='Не обнаружен ожидаемый реквизит формы %1'");
		ТекстОшибки = СтрШаблон(ТекстОшибки, "СписокНовостей_ИнтервалАвтообновления");
		ЗаписьЖурналаРегистрации(
			НСтр("ru='ОбработкаНовостей'", ОбщегоНазначения.КодОсновногоЯзыка()), 
			УровеньЖурналаРегистрации.Ошибка,
			,
			, ТекстОшибки);
	КонецЕсли;

КонецПроцедуры

// Переопределяет значение категории, если для нее установлено свойство "ЗаполняетсяАвтоматически".
// Переопределение имеет смысл только если необходимо возвращать значения, отличные от значений по-умолчанию.
//
// Параметры:
//  Категория - ПланВидовХарактеристикСсылка.КатегорииНовостей, Строка - категория новостей или ее код;
//  Значение  - Произвольный - значение, которое можно изменить.
//
//@skip-warning
Процедура ЗначениеПредопределеннойКатегории(Категория, Значение) Экспорт

	Если ТипЗнч(Категория) = Тип("ПланВидовХарактеристикСсылка.КатегорииНовостей") Тогда
		КатегорияКод = СокрЛП(Категория.Код);
	ИначеЕсли ТипЗнч(Категория) = Тип("Строка") Тогда
		КатегорияКод = СокрЛП(Категория);
	Иначе
		Возврат;
	КонецЕсли;
	
	Если ВРег(КатегорияКод) = ВРег("ProductName") Тогда // В плане видов характеристик "КатегорииНовостей" такого элемента нет
		// Определять ИмяКонфигурации английскими буквами!
		
		Если ВРег(Метаданные.Имя) = ВРег("УправлениеНебольшойФирмой") Тогда
			Значение = "SmallBusiness";
		ИначеЕсли ВРег(Метаданные.Имя) = ВРег("УправлениеНебольшойФирмойБазовая") Тогда
			Значение = "SmallBusinessBase";
		ИначеЕсли ВРег(Метаданные.Имя) = ВРег("Розница") Тогда
			Значение = "SmallBusiness";
		ИначеЕсли ВРег(Метаданные.Имя) = ВРег("РозницаБазовая") Тогда
			Значение = "SmallBusinessBase";
		Иначе // При встраивании в другие конфигурации добавьте другие условия и пропишите точное имя конфигурации английскими буквами
			Значение = "Unknown"; // Конфигурации с таким кодом нет, поэтому будут получены новости только по платформе и другие подобные новости, не привязанные ни к какой конфигурации
		КонецЕсли;
			
	ИначеЕсли ВРег(КатегорияКод) = ВРег("TaxReportID") Тогда // Коды подключенных отчетов
		// Определять список подключенных (возможных) отчетов для сдачи в ИФНС, ПФР и т.п.
		Значение = Новый СписокЗначений;
		
	ИначеЕсли ВРег(КатегорияКод) = ВРег("TaxAdministration") Тогда // Номера ИФНС
		// Определять список ИФНС (через справочник Организации, или другим способом?)
		Значение = Новый СписокЗначений;
		
	ИначеЕсли ВРег(КатегорияКод) = ВРег("Bank") Тогда // Список банков
		// Определять список банков (через справочник РасчетныеСчета или другим способом?)
		Значение = Новый СписокЗначений;
		
	КонецЕсли;

КонецПроцедуры

// Рассчитывает значение отбора по категории и значению категории для дальнейшего определения,
//  какие новости скрывать в зависимости от категории и значения категории новости.
//
// Параметры:
//  КатегорияНовостей         - ПланВидовХарактеристикСсылка.КатегорииНовостей - категория новостей;
//  КодКатегорииНовостей      - Строка - код категории новостей;
//  ЗначениеКатегорииНовостей - Строка - значение категории новостей;
//  РезультатРасчета          - Булево - в эту переменную будет возвращено значение расчета по категории новостей;
//  ОбластьДанных             - Число, Неопределено - номер области данных или Неопределено для неразделенных значений
//                                или при работе в коробке;
//  КонтекстВыполнения        - Структура, Неопределено - структура контекста выполнения;
//  СтандартнаяОбработка      - Булево - признак выполнения стандартной обработки.
//
//@skip-warning
Процедура РассчитатьОтборПоКатегории(
			КатегорияНовостей,
			КодКатегорииНовостей,
			ЗначениеКатегорииНовостей,
			РезультатРасчета,
			ОбластьДанных = Неопределено,
			КонтекстВыполнения = Неопределено,
			СтандартнаяОбработка = Истина) Экспорт

	Если ВРег(КодКатегорииНовостей) = ВРег("FnOptionDataAreaOff") Тогда
		
		Если ЗначениеКатегорииНовостей = "ЭтоНоваяБаза" Тогда
			
			ВерсияНачалаРаботыСПрограммой = Неопределено;
			
			Если ОбластьДанных = Неопределено Тогда
				
				ВерсияНачалаРаботыСПрограммой = Константы.ВерсияНачалаРаботыСПрограммой.Получить();
				
			Иначе
				
				Запрос = Новый Запрос;
				Запрос.Текст = 
				"ВЫБРАТЬ
				|	ВерсияНачалаРаботыСПрограммой.Значение КАК ЗначениеКонстанты
				|ИЗ
				|	Константа.ВерсияНачалаРаботыСПрограммой КАК ВерсияНачалаРаботыСПрограммой
				|ГДЕ
				|	ВерсияНачалаРаботыСПрограммой.ОбластьДанныхВспомогательныеДанные = &ОбластьДанных";
				Запрос.УстановитьПараметр("ОбластьДанных", ОбластьДанных);
				
				РезультатЗапроса = Запрос.Выполнить();
				Если НЕ РезультатЗапроса.Пустой() Тогда
					Выборка = РезультатЗапроса.Выбрать();
					Если Выборка.Следующий() Тогда
						ВерсияНачалаРаботыСПрограммой = Выборка.ЗначениеКонстанты;
					КонецЕсли;
				КонецЕсли;
				
			КонецЕсли;

			Если ВерсияНачалаРаботыСПрограммой <> Неопределено Тогда
				
				ЭтоНоваяБаза = ОбщегоНазначенияКлиентСервер.СравнитьВерсииБезНомераСборки(
					ОбщегоНазначенияКлиентСервер.ВерсияКонфигурацииБезНомераСборки(Метаданные.Версия),
					ОбщегоНазначенияКлиентСервер.ВерсияКонфигурацииБезНомераСборки(ВерсияНачалаРаботыСПрограммой));
						
				ЭтоНоваяБаза = (ЭтоНоваяБаза = 0);
				
			Иначе
				ЭтоНоваяБаза = Ложь;
			КонецЕсли;
			
			РезультатРасчета = ЭтоНоваяБаза <> Истина;
			СтандартнаяОбработка = Ложь;
			
		ИначеЕсли ЗначениеКатегорииНовостей = "ЭтоУНФ30" Тогда
			
			РезультатРасчета 	 = ОбщегоНазначенияУНФ.ЭтоУНФ();
			СтандартнаяОбработка = Ложь;
			
		КонецЕсли;
		
	КонецЕсли;
	
	Если ВРег(КодКатегорииНовостей) = ВРег("ApplicationType") Тогда
		
		Если ЗначениеКатегорииНовостей = "Розница" Тогда
			
			РезультатРасчета = ОбщегоНазначенияУНФ.ЭтоРозница();
			СтандартнаяОбработка = Ложь;
			
		ИначеЕсли ЗначениеКатегорииНовостей = "УНФ" Тогда 
			
			РезультатРасчета = ОбщегоНазначенияУНФ.ЭтоУНФ();
			СтандартнаяОбработка = Ложь;
			
		КонецЕсли;
		
	КонецЕсли;

КонецПроцедуры

// В этой процедуре можно переопределить действия с управляемой формой просмотра новости.
//
// Параметры:
//  Форма                - ФормаКлиентскогоПриложения - форма просмотра новости;
//  Отказ                - Булево - Признак отказа от создания формы. Если установить данному параметру значение Истина,
//                            то форма создана не будет;
//  СтандартнаяОбработка - Булево - В данный параметр передается признак выполнения стандартной (системной) обработки события.
//                            Если в установить данному параметру значение Ложь, стандартная обработка события
//                            производиться не будет.
//
//@skip-warning
Процедура ДополнительноОбработатьФормуНовостиПриСозданииНаСервере(
			Форма,
			Отказ,
			СтандартнаяОбработка) Экспорт
	
	Объект   = Форма.Объект;
	Элементы = Форма.Элементы;
	
	// Скроем видимость команд "Отписаться от ленты" и "Отключить оповещения" в новостях об изменениях программы.
	Если ЗначениеЗаполнено(Объект.ЛентаНовостей) 
		И ОбщегоНазначения.ЗначениеРеквизитаОбъекта(Объект.ЛентаНовостей, "Код") = "WhatIsNew" Тогда
		ОбщегоНазначенияКлиентСервер.УстановитьСвойствоЭлементаФормы(Элементы, "КомандаОповещения", "Видимость", Ложь);
		ОбщегоНазначенияКлиентСервер.УстановитьСвойствоЭлементаФормы(Элементы, "КомандаПодписка", "Видимость", Ложь);
	КонецЕсли;
	
КонецПроцедуры

// После вызова ОбработкаНовостей.ДобавитьПрограммноеЗначениеОтбора_*
//  или ОбработкаНовостей.УдалитьПрограммноеЗначениеОтбора_*
//  эти значения категорий должны попасть в регистры сведений ОтборыПоЛентамНовостей*.
// Чтобы эти значения попали туда автоматически, необходимо заполнить массив кодами категорий,
//   для которых необходимо найти значения категорий в новостях,
//   для дальнейшего расчета соответствия этих значений настройкам базы.
//
// Параметры:
//  КодыКатегорийНовостей - Массив из Строка - Массив кодов категорий новостей;
//  ОбластьВидимости      - Строка - "Общее" или "ДляОбластиДанных". Пользовательские - не заполнять;
//  КонтекстВыполнения    - Структура, Неопределено - структура контекста выполнения.
//
//@skip-warning
Процедура ЗаполнитьКодыКатегорийДляАвтоматическогоРасчетаОтборовНовостей(
			КодыКатегорийНовостей,
			ОбластьВидимости = "Общее",
			КонтекстВыполнения = Неопределено) Экспорт
			
	Если ОбластьВидимости = "ДляОбластиДанных" Тогда
		КодыКатегорийНовостей.Добавить("ApplicationType");
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти
