#Область ПрограммныйИнтерфейс

// См. ОбновлениеИнформационнойБазыУНФ.ОбновлениеРозницыДоУНФ
Процедура ОбновлениеРозницыДоУНФ() Экспорт
	
	УстановитьКонстантыОбновленияРозницыДоУНФ();
	ЗаполнитьДанныеПриПереходеСРозницы();
	
КонецПроцедуры

// Процедура выполняет первоначальное заполнение данных подсистемы и включение функциональности при первом запуске приложения
//
Процедура ПриПервомЗапуске() Экспорт
	
	УстановитьКонстантыНачальногоЗаполнения();
	ПервоначальноеЗаполнениеОбъектовПодсистемы();
	
КонецПроцедуры

// Процедура выполняет первоначальное заполнение данных подсистемы
//
Процедура ПервоначальноеЗаполнениеОбъектовПодсистемы() Экспорт
	
	Возврат;
	
КонецПроцедуры

// Процедура выполняет первоначальное включение функциональности подсистемы
//
Процедура УстановитьКонстантыНачальногоЗаполнения() Экспорт
	
	РежимЗапускаУНФ = Константы.ТекущийРежимЗапускаУНФ.Получить();
	ЭтоРозница 		= ВозможностиПриложения.ЭтоРозница();
	ЭтоУНФ 			= ВозможностиПриложения.ЭтоУНФ();
	
	ЭтоНастольноеПриложениеУНФ 	= ЭтоУНФ И РежимЗапускаУНФ = Перечисления.РежимыЗапускаУНФ.НастольноеПриложение;	
	
	Если ЭтоУНФ Тогда
		Константы.ИспользоватьАктыВыполненныхРабот.Установить(Истина);
		Константы.СчетУчетаЗапасовДляНоменклатурыПоУмолчанию.Установить(ПланыСчетов.Управленческий.СырьеИМатериалы);
		Константы.ИспользоватьПередачуВЭксплуатацию.Установить(Истина);
		Константы.ИспользоватьВозвратИзЭксплуатации.Установить(Истина);
		// Расчет стоимости операций сдельным нарядом с учетом нормы времени
		Константы.РасчетСтоимостиОперацийПоНормеВремени.Установить(Перечисления.ДаНет.Да);
		// Установить значение константы использования ручного распределения материалов по умолчанию
		Константы.ИспользоватьРучноеРаспределениеМатериаловПоУмолчанию.Установить(Перечисления.ДаНет.Нет);
		
		// Дата изменения движений по ордерному складу.
		Константы.ДатаОбновленияНаРелиз_1_2_1.Установить("19800101");
		// Коды товаров SKU 
		Константы.НижняяГраницаДиапазонаSKUВесовогоТовара.Установить(1);
		Константы.ВерхняяГраницаДиапазонаSKUВесовогоТовара.Установить(99999);
		
		Если ЭтоНастольноеПриложениеУНФ Тогда
			Константы.ИспользоватьПодсистемуСклад.Установить(Истина);
			Константы.ИспользоватьУправлениеЗапасами.Установить(Истина);
			Константы.ОтображатьДокументыПоЗапасам.Установить(Истина);
			Константы.ОтображатьДокументыПоСкладу.Установить(Истина);
		КонецЕсли;
		
	КонецЕсли;
	
	Если ЭтоРозница Тогда
		// Дата изменения движений по ордерному складу.
		Константы.ДатаОбновленияНаРелиз_1_2_1.Установить("19800101");
		Константы.ИспользоватьПодсистемуСклад.Установить(Истина);
		Константы.ИспользоватьУправлениеЗапасами.Установить(Истина);
		Константы.ОтображатьДокументыПоЗапасам.Установить(Истина);
		Константы.ОтображатьДокументыПоСкладу.Установить(Истина);
		// Коды товаров SKU 
		Константы.НижняяГраницаДиапазонаSKUВесовогоТовара.Установить(1);
		Константы.ВерхняяГраницаДиапазонаSKUВесовогоТовара.Установить(99999);
		// Расчет стоимости операций сдельным нарядом с учетом нормы времени
		Константы.РасчетСтоимостиОперацийПоНормеВремени.Установить(Перечисления.ДаНет.Да);
		// Установить значение константы использования ручного распределения материалов по умолчанию
		Константы.ИспользоватьРучноеРаспределениеМатериаловПоУмолчанию.Установить(Перечисления.ДаНет.Нет);
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

Процедура УстановитьКонстантыОбновленияРозницыДоУНФ()
	
	Константы.СчетУчетаЗапасовДляНоменклатурыПоУмолчанию.Установить(ПланыСчетов.Управленческий.СырьеИМатериалы);
	Константы.ИспользоватьПередачуВЭксплуатацию.Установить(Истина);
	Константы.ИспользоватьВозвратИзЭксплуатации.Установить(Истина);
	
КонецПроцедуры

Процедура ЗаполнитьДанныеПриПереходеСРозницы()
	Возврат;
КонецПроцедуры

#КонецОбласти