#Область СлужебныйПрограммныйИнтерфейс

Процедура ОбработкаПрерыванияОперацииПлатежнойСистемы(Форма, Отказ = Ложь, ОповещениеЗавершитьОтмену = Неопределено) Экспорт
	
	Если Форма.ПлатежнаяСистема_СанкционированноеЗакрытие Тогда	
		Возврат;
	КонецЕсли;
	
	ДополнительныеПараметры		 = Новый Структура("Форма, ОповещениеЗавершитьОтмену", Форма, ОповещениеЗавершитьОтмену);
	ПродолжитьПрерываниеОперации = Новый ОписаниеОповещения("ОбработатьПрерываниеПроцессаЗавершение", 
											ЭтотОбъект, 
											ДополнительныеПараметры);
											
	ПояснениеКОшибке 			 = НСтр("ru = 'Хотите закрыть окно с потерей данных?'"); 
	
	ИспользоватьСлои = ИнтерфейсРМКСлужебныйКлиентСервер.ИспользоватьСлои(Форма);
	ТекущийСлойПанелиПлатежнойСистемы = ?(ИспользоватьСлои, 
		ИнтерфейсРМКСлужебныйКлиентСервер.ПолучитьТекущийСлойГруппы(Форма.Элементы.ГруппаСлоевПанелиДействийПлатежнойСистемы), 
		"");
		
	Если ИнтеграцияСПлатежнымиСистемамиРМККлиентСервер.ТекущаяСтраница(Форма.Элементы.ГруппаЗавершение, 
			ТекущийСлойПанелиПлатежнойСистемы) Тогда
		
		Отказ = Истина;
		
		Если Форма.ПлатежнаяСистема_НоваяЗаявка.ВидОперацииПродажа Тогда
			
			Если ЗначениеЗаполнено(Форма.ПлатежнаяСистема_НоваяЗаявка.СсылочныйНомер) Тогда
			
				ТекстОшибки = НСтр("ru = 'Оплата проведена по платежной системе.'");
			
				Если Форма.ПлатежнаяСистема_НоваяЗаявка.НастройкиИнтеграции.ОтменаОплаты Тогда
				
					ПояснениеКОшибке				= НСтр("ru = 'Необходимо выполнить сторно оплаты.'"); 
					ПродолжитьПрерываниеОперации    = Неопределено;
				
				КонецЕсли;
				
			Иначе
				ТекстОшибки = НСтр("ru = 'При закрытии QR-код станет неактуальным для подтверждения оплаты.'");
			КонецЕсли;
			
		Иначе
			ТекстОшибки = НСтр("ru = 'Возврат проведен по платежной системе.'");
		КонецЕсли;
		
	ИначеЕсли ИнтеграцияСПлатежнымиСистемамиРМККлиентСервер.ТекущаяСтраница(Форма.Элементы.ГруппаДлительнаяОперация, ТекущийСлойПанелиПлатежнойСистемы) Тогда
		
		ТекстОшибки = НСтр("ru = 'Будет прервано выполнение операции.'");
		Отказ 		= Истина;
		
	ИначеЕсли Не Форма.ПлатежнаяСистема_НоваяЗаявка.Оплачивается 
			И (ИнтеграцияСПлатежнымиСистемамиРМККлиентСервер.ТекущаяСтраница(Форма.Элементы.ГруппаВыполняется, ТекущийСлойПанелиПлатежнойСистемы)
				ИЛИ ИнтеграцияСПлатежнымиСистемамиРМККлиентСервер.ТекущаяСтраница(Форма.Элементы.ГруппаQRКод, ТекущийСлойПанелиПлатежнойСистемы)
				ИЛИ ИнтеграцияСПлатежнымиСистемамиРМККлиентСервер.ТекущаяСтраница(Форма.Элементы.ГруппаИнструкция, ТекущийСлойПанелиПлатежнойСистемы)
				ИЛИ (Форма.Элементы.Найти("ГруппаИнструкцияПовтор") <> Неопределено
					И ИнтеграцияСПлатежнымиСистемамиРМККлиентСервер.ТекущаяСтраница(Форма.Элементы.ГруппаИнструкцияПовтор, ТекущийСлойПанелиПлатежнойСистемы))
				ИЛИ (Форма.Элементы.Найти("ГруппаQRКодПовтор") <> Неопределено
					И ИнтеграцияСПлатежнымиСистемамиРМККлиентСервер.ТекущаяСтраница(Форма.Элементы.ГруппаQRКодПовтор, ТекущийСлойПанелиПлатежнойСистемы))) Тогда
		
		Если Форма.ПлатежнаяСистема_НоваяЗаявка.ВидОперацииПродажа Тогда
			
			ТекстОшибки = НСтр("ru = 'При закрытии QR-код станет неактуальным для проведения оплаты.'");
			Отказ 		= Истина;
		
		КонецЕсли;
		
	КонецЕсли;
	
	Если Отказ 
		И ЗначениеЗаполнено(ТекстОшибки) Тогда
			
		ВыводитьПредупреждение = Форма.Элементы.Найти("ГруппаВопросПредупреждение") = Неопределено;
		
		Если ВыводитьПредупреждение Тогда
			
			ТекстОшибки = ТекстОшибки + ?(ЗначениеЗаполнено(ПояснениеКОшибке), Символы.ПС + ПояснениеКОшибке, "");
			
			ПоказатьВопрос(ПродолжитьПрерываниеОперации, 
							ТекстОшибки, 
							РежимДиалогаВопрос.ДаНет,
							,
							, 
							НСтр("ru = 'Обработка прерывания операции'"));
				
		Иначе
				
			ВывестиИнформацию(Форма, ТекстОшибки, ПояснениеКОшибке, "ВопросПредупреждение");
				
		КонецЕсли;
			
	КонецЕсли;
		
КонецПроцедуры

Процедура ЗапуститьФоновыеЗадания(Форма, АктивацияNFC = Ложь) Экспорт
	
	ПараметрыСтраницы = Новый Структура("АктивацияNFC", АктивацияNFC);
	
	Форма.Элементы.ФормаЗавершитьОплату.Видимость = Истина;
	
	Если Форма.ПлатежнаяСистема_НоваяЗаявка.ВидОперацииПродажа Тогда
	
		Если ЗначениеЗаполнено(Форма.ПлатежнаяСистема_НоваяЗаявка.ВидОплатыПлатежнойСистемы) Тогда
			
			Форма.Элементы.ФормаЗавершитьОплату.Видимость = Ложь;
			
			Если Форма.ПлатежнаяСистема_НоваяЗаявка.Оплачивается Тогда
				Форма.ПодключитьОбработчикОжидания("ОпределитьСтатусОплаты", 0.1, Истина);
			Иначе
				Форма.ПодключитьОбработчикОжидания("ПолучитьИдентификаторОплаты", 0.1, Истина);
			КонецЕсли;
			
			ПерейтиНаСтраницу(Форма, "ДлительнаяОперация", ПараметрыСтраницы);
			
		Иначе
			ИнтеграцияСПлатежнымиСистемамиРМККлиентСервер.НастроитьФормуПоИнтеграции(Форма);
		КонецЕсли;
		
	ИначеЕсли ЗначениеЗаполнено(Форма.ПлатежнаяСистема_НоваяЗаявка.ВидОплатыПлатежнойСистемы) Тогда
		
			Если Форма.ПлатежнаяСистема_НоваяЗаявка.Оплачивается Тогда
		
				Форма.Элементы.ФормаЗавершитьОплату.Видимость = Ложь;
				Форма.ПодключитьОбработчикОжидания("ОпределитьСтатусВозврата", 0.1, Истина);
				
				ПерейтиНаСтраницу(Форма, "ДлительнаяОперация", ПараметрыСтраницы);
		
			Иначе
				ИнтеграцияСПлатежнымиСистемамиРМККлиентСервер.НастроитьФормуПоИнтеграции(Форма);
			КонецЕсли;
			
	Иначе
		ИнтеграцияСПлатежнымиСистемамиРМККлиентСервер.НастроитьФормуПоИнтеграции(Форма);
	КонецЕсли;
			
КонецПроцедуры

Функция ПрерватьОперацию(Форма, ОповещениеЗавершитьОтмену = Неопределено) Экспорт
	
	Отказ = Ложь;
	
	ОтменитьОперацию(Форма, ОповещениеЗавершитьОтмену, Отказ);
		
	Форма.ПлатежнаяСистема_СанкционированноеЗакрытие = Истина;
	
	Возврат Не Отказ;
	
КонецФункции

Функция ОтложитьЧек(Форма, ОповещениеЗавершитьОткладывание) Экспорт
	
	ДополнительныеПараметры		 = Новый Структура();
	ДополнительныеПараметры.Вставить("Форма", 				Форма);
	ДополнительныеПараметры.Вставить("ОповещениеЗавершить", ОповещениеЗавершитьОткладывание);
	ДополнительныеПараметры.Вставить("ВыполнитьОтмену", 	Истина);
	
	ПродолжитьПрерываниеОперации = Новый ОписаниеОповещения(
		"ОбработатьОткладываниеЧека", 
		ЭтотОбъект, 
		ДополнительныеПараметры);

	ДействиеВыполнено 			 = Ложь;
	
	Если ЗначениеЗаполнено(Форма.ПлатежнаяСистема_НоваяЗаявка.КассоваяСсылка) Тогда

		ВыводитьПредупреждение 		 = Форма.Элементы.Найти("ГруппаВопросОтложитьЧек") = Неопределено;
		
		ПояснениеКОшибке 			 = НСтр("ru = 'Проведите операцию, если клиент подтверждает оплату.'"); 
		ТекстОшибки 				 = НСтр("ru = 'Уточните оплатил ли клиент чек.'");
		
		Если ВыводитьПредупреждение Тогда
			
			ТекстОшибки = ТекстОшибки + ?(ЗначениеЗаполнено(ПояснениеКОшибке), Символы.ПС + ПояснениеКОшибке, "");
			
			ПоказатьВопрос(ПродолжитьПрерываниеОперации, 
							ТекстОшибки, 
							РежимДиалогаВопрос.ДаНет,
							,
							, 
							НСтр("ru = 'Обработка откладывания оплаты'"));
				
		Иначе
				
			ВывестиИнформацию(
				Форма, 
				ТекстОшибки, 
				ПояснениеКОшибке, 
				"ВопросОтложитьЧек");
				
		КонецЕсли;


	Иначе
		
		ДополнительныеПараметры.Вставить("ВыполнитьОтмену", 	Ложь);
		ВыполнитьОбработкуОповещения(ПродолжитьПрерываниеОперации, "ДА");
	
	КонецЕсли;
	
	Возврат ДействиеВыполнено;
	
КонецФункции

Процедура ОбработатьОткладываниеЧека(РезультатОткрытияФормы, ДополнительныеПараметры) Экспорт
	
	Если НЕ РезультатОткрытияФормы = Неопределено 
		И ВРЕГ(РезультатОткрытияФормы) = "ДА"  Тогда
		
		Форма 					= ДополнительныеПараметры.Форма;
        ОповещениеЗавершить 	= ДополнительныеПараметры.ОповещениеЗавершить;
		ВыполнитьОтмену			= ДополнительныеПараметры.ВыполнитьОтмену;
		
		ОтложитьОперацию(Форма, ОповещениеЗавершить, ВыполнитьОтмену);
		
	КонецЕсли;

КонецПроцедуры

Процедура ВывестиИнформацию(Форма, 
								ЗаголовокИнформации, 
								ТекстИнформации, 
								СтраницаФормы = Неопределено, 
								ОбработчикОповещения = Неопределено, 
								ОтветПоУмолчанию = "Нет") Экспорт
	
	Форма.Элементы["ДекорацияЗаголовок" + СтраницаФормы].Заголовок = ЗаголовокИнформации;
	Форма.Элементы["ДекорацияТекст" + СтраницаФормы].Заголовок     = ТекстИнформации;
	
	ИспользоватьСлои = ИнтерфейсРМКСлужебныйКлиентСервер.ИспользоватьСлои(Форма);
	УстановитьТекущуюСтраницуСлой(Форма.Элементы["Группа" + СтраницаФормы], ИспользоватьСлои);
	
КонецПроцедуры

Процедура ПриОткрытии(Форма, Отказ) Экспорт
	
	ЗапуститьФоновыеЗадания(Форма);
	
КонецПроцедуры

Процедура ОбработатьПрерываниеПроцессаЗавершение(РезультатОткрытияФормы, ДополнительныеПараметры) Экспорт
	
	Если НЕ РезультатОткрытияФормы = Неопределено 
		И ВРЕГ(РезультатОткрытияФормы) = "ДА"  Тогда
		
		Форма 						= ДополнительныеПараметры.Форма;
        ОповещениеЗавершитьОтмену 	= ДополнительныеПараметры.ОповещениеЗавершитьОтмену;
		
		Если ПрерватьОперацию(Форма, ОповещениеЗавершитьОтмену) Тогда
			Форма.Закрыть();
		КонецЕсли;
		
	КонецЕсли;

КонецПроцедуры

Процедура ПечатьПречека(Форма, ПовторнаяПечатьЧека = Ложь, ИдентификаторУстройстваФР = Неопределено) Экспорт
	
	Если НЕ ПовторнаяПечатьЧека
		И ОборудованиеДисплеиПокупателяКлиент.ПодключенныеДисплеиПокупателяВыводятQRКод() Тогда
		
		ВывестиПречекНаЭкран(Форма);
		
	Иначе 
		
		Форма.Доступность 				 = Ложь;
		СтруктураСФормой				 = Новый Структура("Форма", Форма);
		ОписаниеОповещениеПриЗавершении  = Новый ОписаниеОповещения("ПечатьПречекаЗавершение", ЭтотОбъект, СтруктураСФормой);
	
		ПараметрыОперации = ОборудованиеЧекопечатающиеУстройстваКлиентСервер.ПараметрыПечатиQRКодаНаФискальномУстройстве();
		
		ПараметрыОперации.СуммаОперации		  = Форма.ПлатежнаяСистема_НоваяЗаявка.ИтогПоОрганизации;
		ПараметрыОперации.ТипПлатежнойСистемы = Форма.ПлатежнаяСистема_НоваяЗаявка.ТипПлатежнойСистемы;
		ПараметрыОперации.QRКод.ЗначениеКода  = Форма.ПлатежнаяСистема_НоваяЗаявка.ИдентификаторQRКода;
		ПараметрыОперации.QRКод.ТекстПользователя = НСтр("ru='Для совершения платежа отсканируйте QR-код'");
	
		ОборудованиеЧекопечатающиеУстройстваКлиент.НачатьПечатьQRКодаНаФискальномУстройстве(ОписаниеОповещениеПриЗавершении, 
																								Новый УникальныйИдентификатор, 
																								ИдентификаторУстройстваФР, 
																								ПараметрыОперации); 
	КонецЕсли;
	
КонецПроцедуры

Процедура ПечатьПречекаЗавершение(РезультатВыполнения, Параметры) Экспорт
	
	Форма			  = Параметры.Форма;
	Форма.Доступность = Истина;
	
	Если НЕ РезультатВыполнения.Результат Тогда  
		
		ЗаголовокИнформации	= НСтр("ru = 'Печать последнего слип чека'");
		ТекстИнформации		= РезультатВыполнения.ОписаниеОшибки;
		
		ВыводитьПредупреждение = Форма.Элементы.Найти("ГруппаОшибкаПредупреждение") = Неопределено;
		
		Если ВыводитьПредупреждение Тогда
			ОбщегоНазначенияКлиент.СообщитьПользователю(ТекстИнформации);
		Иначе
			ВывестиИнформацию(Форма, ЗаголовокИнформации, ТекстИнформации, "ОшибкаПредупреждение");
		КонецЕсли;
		
	КонецЕсли;
	
КонецПроцедуры

Процедура ПолучитьИдентификаторОплаты(Форма, ОповещениеОЗавершении, ПечатьQRКода = Неопределено, АктивацияNFC = Ложь) Экспорт
	
	ПараметрыСтраницы = Новый Структура("АктивацияNFC", АктивацияNFC);
	ПерейтиНаСтраницу(Форма, "ДлительнаяОперация", ПараметрыСтраницы);
		
	ПараметрыОжидания 	= ДлительныеОперацииКлиент.ПараметрыОжидания(Форма);
	ПараметрыОжидания.ВыводитьОкноОжидания = Ложь;
	
	ЗаявкаНаОплату 	  	= НоваяЗаявка(Форма);
	РезультатВыполнения = ИнтеграцияСПлатежнымиСистемамиРМКВызовСервера.ПолучитьИдентификаторОплаты(
		ЗаявкаНаОплату, 
		Форма.УникальныйИдентификатор);
	
	Форма.ПлатежнаяСистема_НоваяЗаявка.ИдентификаторЗаданияФормированияQRКода = РезультатВыполнения.ИдентификаторЗадания;
	
	СтруктураСФормой	= Новый Структура();
	СтруктураСФормой.Вставить("Форма", 					   Форма);
	СтруктураСФормой.Вставить("ИдентификаторУстройстваФР", Форма.ПлатежнаяСистема_НоваяЗаявка.ПодключаемоеОборудование);
	СтруктураСФормой.Вставить("ПечатьQRКода",			   ПечатьQRКода);
	СтруктураСФормой.Вставить("АктивацияNFC",			   АктивацияNFC);
	
	ОповещениеОЗавершении = Новый ОписаниеОповещения(
		"ПолучитьИдентификаторОплатыЗавершение", 
		ЭтотОбъект, 
		СтруктураСФормой);
	
	Если РезультатВыполнения.Статус <> "Выполняется" Тогда
		ПолучитьИдентификаторОплатыЗавершение(РезультатВыполнения, СтруктураСФормой);
		Возврат;
	КонецЕсли;
	
	ДлительныеОперацииКлиент.ОжидатьЗавершение(
		РезультатВыполнения,
		ОповещениеОЗавершении,
		ПараметрыОжидания);
	
КонецПроцедуры

Процедура ПолучитьИдентификаторОплатыЗавершение(РезультатВыполнения, ДополнительныеПараметры) Экспорт

	Перем СтруктураQRКода;
	
	Если РезультатВыполнения = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	Форма		    			= ДополнительныеПараметры.Форма;
	ИдентификаторУстройстваФР   = ДополнительныеПараметры.ИдентификаторУстройстваФР;  
	ПечатьQRКода				= ДополнительныеПараметры.ПечатьQRКода;
	АктивацияNFC				= ДополнительныеПараметры.АктивацияNFC;
	
	Если Форма.ПлатежнаяСистема_СанкционированноеЗакрытие Тогда // уже на актуально
		Возврат;
	КонецЕсли;
	
	ПараметрыСтраницы = Новый Структура("АктивацияNFC", АктивацияNFC);
	
	Если РезультатВыполнения.Статус = "Выполнено" Тогда
		
		РезультатОперации = ПолучитьИзВременногоХранилища(РезультатВыполнения.АдресРезультата);
		
		Если Не ЗначениеЗаполнено(Форма.ПлатежнаяСистема_НоваяЗаявка.ДокументОплаты) Тогда
			Форма.ПлатежнаяСистема_НоваяЗаявка.ДокументОплаты = РезультатОперации.ДокументОплаты;
		КонецЕсли;

		Если РезультатОперации.Свойство("КассоваяСсылка") Тогда
			Форма.ПлатежнаяСистема_НоваяЗаявка.КассоваяСсылка = РезультатОперации.КассоваяСсылка;
		КонецЕсли;

		Если РезультатОперации.Свойство("ОтменаЗаказа") Тогда
			Форма.ПлатежнаяСистема_НоваяЗаявка.ОтменаЗаказа = РезультатОперации.ОтменаЗаказа;
		КонецЕсли;
		
		Если ЗначениеЗаполнено(РезультатОперации.КодОшибки) Тогда
			
			ОбщегоНазначенияКлиентСервер.ДополнитьСтруктуру(ПараметрыСтраницы, РезультатОперации, Ложь);
			
			ПерейтиНаСтраницу(Форма, "Ошибка", ПараметрыСтраницы);
			
		Иначе
				
			ИнтеграцияСПлатежнымиСистемамиРМКВызовСервера.СформироватьДанныеQRКода(
				СтруктураQRКода, 
				Форма.ПлатежнаяСистема_НоваяЗаявка.Интеграция, 
				РезультатОперации.QRКод, 
				Форма.УникальныйИдентификатор);
			
			ПерейтиНаСтраницу(Форма, "QRКод", ПараметрыСтраницы);
			
			ЗаполнитьЗначенияСвойств(Форма.ПлатежнаяСистема_НоваяЗаявка, СтруктураQRКода);
			
			Форма.ПлатежнаяСистема_ДанныеQRКода = Форма.ПлатежнаяСистема_НоваяЗаявка.ДанныеQRКода;
			
			Если ПечатьQRКода = Неопределено Тогда
				
				Если ЗначениеЗаполнено(Форма.ПлатежнаяСистема_НоваяЗаявка.КассоваяСсылка) Тогда
					ВывестиПречекНаЭкран(Форма);
				Иначе
					ПечатьПречека(Форма, , ИдентификаторУстройстваФР);
				КонецЕсли;
				
			ИначеЕсли ПечатьQRКода Тогда 
				ПечатьПречека(Форма, , ИдентификаторУстройстваФР);
			Иначе
				ВывестиПречекНаЭкран(Форма);
			КонецЕсли;
			
			Форма.ПодключитьОбработчикОжидания("ОпределитьСтатусОплаты", 0.1, Истина);
			
		КонецЕсли;
		
	ИначеЕсли РезультатВыполнения.Статус = "Ошибка" Тогда
		
		ПараметрыСтраницы.Вставить("СообщениеОбОшибке", РезультатВыполнения.КраткоеПредставлениеОшибки);
		ПерейтиНаСтраницу(Форма, "Ошибка", ПараметрыСтраницы);
			
	ИначеЕсли РезультатВыполнения.Статус = "Отменено" Тогда
		
		ИнформацияОбОшибке = НСтр("ru = 'Не удалось выполнить получение QR-кода. Задание отменено администратором.'");
		
		ПараметрыСтраницы.Вставить("СообщениеОбОшибке", ИнформацияОбОшибке);
		
		ПерейтиНаСтраницу(Форма, "Ошибка", ПараметрыСтраницы);
		
	КонецЕсли;
	
КонецПроцедуры

Процедура ОпределитьСтатусОплаты(Форма, ОповещениеЗавершитьОплату, АктивацияNFC = Ложь, ОповещениеЗакрытьПанельNFC = Неопределено) Экспорт
	
	РазрешеноПовторноеПолучениеСтатуса 	= Ложь;
	ПараметрыСтраницы					= Новый Структура("АктивацияNFC", АктивацияNFC);
	
	Если Форма.ПлатежнаяСистема_НоваяЗаявка.Оплачивается Тогда
		
		ПерейтиНаСтраницу(Форма, "ДлительнаяОперация", ПараметрыСтраницы);
		
	ИначеЕсли Не Форма.ПлатежнаяСистема_НоваяЗаявка.ВидОперацииПродажа Тогда

		ПараметрыСтраницы.Вставить(
			"ТекстДлительнойОперации",
			НСтр("ru = 'Получение подтверждения оплаты. Пожалуйста, подождите...'"));
		
		ПерейтиНаСтраницу(Форма, "ДлительнаяОперация", ПараметрыСтраницы);
		
	Иначе
		
		РазрешеноПовторноеПолучениеСтатуса = Форма.Элементы.Найти("ГруппаQRКодПовтор") <> Неопределено;
		
		ПерейтиНаСтраницу(Форма, "QRКод", ПараметрыСтраницы);
		
	КонецЕсли;
	
	ПараметрыОжидания = ДлительныеОперацииКлиент.ПараметрыОжидания(Форма);
	ПараметрыОжидания.ВыводитьОкноОжидания = Ложь;
	ПараметрыОжидания.Интервал = 1;
	
	ДокументОплаты		  = Форма.ПлатежнаяСистема_НоваяЗаявка.ДокументОплаты;
	Интеграция			  = Форма.ПлатежнаяСистема_НоваяЗаявка.Интеграция;
	РезультатВыполнения   = ИнтеграцияСПлатежнымиСистемамиРМКВызовСервера.ОпределитьСтатусОплатыОплаты(
		ДокументОплаты, 
		Интеграция, 
		Форма.УникальныйИдентификатор);
	
	Форма.ПлатежнаяСистема_НоваяЗаявка.ИдентификаторЗаданияПроверкиСтатуса = РезультатВыполнения.ИдентификаторЗадания;
	
	ПараметрыЗавершения	  = Новый Структура();
	ПараметрыЗавершения.Вставить("Форма", 								Форма);	
	ПараметрыЗавершения.Вставить("ОповещениеЗавершитьОплату", 			ОповещениеЗавершитьОплату);	
	ПараметрыЗавершения.Вставить("Повторно", 							Ложь);	
	ПараметрыЗавершения.Вставить("РазрешеноПовторноеПолучениеСтатуса",	РазрешеноПовторноеПолучениеСтатуса);    
	ПараметрыЗавершения.Вставить("КоличествоПовторов",					3);
	ПараметрыЗавершения.Вставить("АктивацияNFC",						АктивацияNFC);       
	ПараметрыЗавершения.Вставить("ОповещениеЗакрытьПанельNFC",			ОповещениеЗакрытьПанельNFC);
	
	ОповещениеОЗавершении = Новый ОписаниеОповещения("ОпределитьСтатусОплатыЗавершение", ЭтотОбъект, ПараметрыЗавершения);
	
	Если РезультатВыполнения.Статус <> "Выполняется" Тогда
		ОпределитьСтатусОплатыЗавершение(РезультатВыполнения, ПараметрыЗавершения);
		Возврат;
	КонецЕсли;
	
	ДлительныеОперацииКлиент.ОжидатьЗавершение(
		РезультатВыполнения,
		ОповещениеОЗавершении,
		ПараметрыОжидания);
	
КонецПроцедуры

Процедура ОпределитьСтатусОплатыПовторно(Форма, ОповещениеЗавершитьОплату, КоличествоПовторов, АктивацияNFC, ОповещениеЗакрытьПанельNFC = Неопределено) Экспорт
	
	ПараметрыСтраницы					= Новый Структура("АктивацияNFC", АктивацияNFC);

	Если Форма.ПлатежнаяСистема_НоваяЗаявка.Оплачивается Тогда

		ПерейтиНаСтраницу(Форма, "ДлительнаяОперация", ПараметрыСтраницы);
		
	ИначеЕсли Не Форма.ПлатежнаяСистема_НоваяЗаявка.ВидОперацииПродажа Тогда

		ПараметрыСтраницы.Вставить(
			"ТекстДлительнойОперации",
			НСтр("ru = 'Получение подтверждения оплаты. Пожалуйста, подождите...'"));
		
		ПерейтиНаСтраницу(Форма, "ДлительнаяОперация", ПараметрыСтраницы);
		
	Иначе
		ПерейтиНаСтраницу(Форма, "QRКодПовтор", ПараметрыСтраницы);
	КонецЕсли;
	
	ПараметрыОжидания = ДлительныеОперацииКлиент.ПараметрыОжидания(Форма);
	ПараметрыОжидания.ВыводитьОкноОжидания = Ложь;
	ПараметрыОжидания.Интервал = 1;
	
	ДокументОплаты		  = Форма.ПлатежнаяСистема_НоваяЗаявка.ДокументОплаты;
	Интеграция			  = Форма.ПлатежнаяСистема_НоваяЗаявка.Интеграция;
	РезультатВыполнения   = ИнтеграцияСПлатежнымиСистемамиРМКВызовСервера.ОпределитьСтатусОплатыОплаты(
		ДокументОплаты, 
		Интеграция, 
		Форма.УникальныйИдентификатор);
	
	Форма.ПлатежнаяСистема_НоваяЗаявка.ИдентификаторЗаданияПроверкиСтатуса = РезультатВыполнения.ИдентификаторЗадания;
	
	ПараметрыЗавершения	  = Новый Структура();
	ПараметрыЗавершения.Вставить("Форма", 								Форма);	
	ПараметрыЗавершения.Вставить("ОповещениеЗавершитьОплату", 			ОповещениеЗавершитьОплату);	
	ПараметрыЗавершения.Вставить("Повторно", 							Истина);	
	ПараметрыЗавершения.Вставить("РазрешеноПовторноеПолучениеСтатуса",	Истина);  
	ПараметрыЗавершения.Вставить("КоличествоПовторов",					КоличествоПовторов);
	ПараметрыЗавершения.Вставить("АктивацияNFC",						АктивацияNFC);
	ПараметрыЗавершения.Вставить("ОповещениеЗакрытьПанельNFC",			ОповещениеЗакрытьПанельNFC);
	
	ОповещениеОЗавершении = Новый ОписаниеОповещения("ОпределитьСтатусОплатыЗавершение", ЭтотОбъект, ПараметрыЗавершения);
	
	Если РезультатВыполнения.Статус <> "Выполняется" Тогда
		ОпределитьСтатусОплатыЗавершение(РезультатВыполнения, ПараметрыЗавершения);
		Возврат;
	КонецЕсли;
	
	ДлительныеОперацииКлиент.ОжидатьЗавершение(
		РезультатВыполнения,
		ОповещениеОЗавершении,
		ПараметрыОжидания);
	
КонецПроцедуры

Процедура ОпределитьСтатусОплатыЗавершение(РезультатВыполнения, ДополнительныеПараметры) Экспорт
	
	Если РезультатВыполнения = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	Форма		      			= ДополнительныеПараметры.Форма;
	ОповещениеЗавершитьОплату   = ДополнительныеПараметры.ОповещениеЗавершитьОплату;        
	СообщениеОбОшибке 			= "";
	
	Если Форма.ПлатежнаяСистема_СанкционированноеЗакрытие Тогда // уже на актуально
		Возврат;
	КонецЕсли;
	
	ПараметрыСтраницы 			= Новый Структура("АктивацияNFC", ДополнительныеПараметры.АктивацияNFC);
	
	Если РезультатВыполнения.Статус = "Выполнено" Тогда
		
		РезультатОперации 			= ПолучитьИзВременногоХранилища(РезультатВыполнения.АдресРезультата);
		
		СтатусОперацииВыполняется 	= ИнтеграцияСПлатежнымиСистемамиКлиентСервер.СтатусОперацииВыполняется();
		СтатусОперацииВыполнена		= ИнтеграцияСПлатежнымиСистемамиКлиентСервер.СтатусОперацииВыполнена();
		СтатусОперацииОтменена		= ИнтеграцияСПлатежнымиСистемамиКлиентСервер.СтатусОперацииОтменена();
		СтатусОперацииОшибка		= ИнтеграцияСПлатежнымиСистемамиКлиентСервер.СтатусОперацииОшибка();
		
		Если РезультатОперации.СтатусОперации = СтатусОперацииВыполняется Тогда
			
			ВыполнитьПовторноеПолучениеСтатуса = Ложь;
			
			Если Не Форма.ПлатежнаяСистема_НоваяЗаявка.ВидОперацииПродажа Тогда
				
				ПараметрыСтраницы.Вставить(
					"СообщениеОбОшибке",
					НСтр("ru = 'Не определен идентификатор оплаты в платежной системе'"));
					
				ПерейтиНаСтраницу(Форма, "Ошибка", ПараметрыСтраницы);
				
			Иначе

				Если Не ДополнительныеПараметры.Повторно 
					И ДополнительныеПараметры.РазрешеноПовторноеПолучениеСтатуса Тогда
					
					ВыполнитьПовторноеПолучениеСтатуса = Истина;
					
				ИначеЕсли ДополнительныеПараметры.Повторно 
					И ДополнительныеПараметры.КоличествоПовторов > 0  Тогда
						
					ДополнительныеПараметры.КоличествоПовторов = ДополнительныеПараметры.КоличествоПовторов - 1;
					ВыполнитьПовторноеПолучениеСтатуса = Истина;
					
				Иначе
					ПерейтиНаСтраницу(Форма, "Выполняется", ПараметрыСтраницы);
				КонецЕсли;
				
			КонецЕсли;
			
			Если ВыполнитьПовторноеПолучениеСтатуса Тогда

				ОпределитьСтатусОплатыПовторно(
					Форма, 
					ОповещениеЗавершитьОплату, 
					ДополнительныеПараметры.КоличествоПовторов,
					ДополнительныеПараметры.АктивацияNFC,
					ДополнительныеПараметры.ОповещениеЗакрытьПанельNFC);			
					
			КонецЕсли;
			
		ИначеЕсли РезультатОперации.СтатусОперации = СтатусОперацииВыполнена Тогда

			ЗаполнитьЗначенияСвойств(Форма.ПлатежнаяСистема_НоваяЗаявка, РезультатОперации);
			ЗаполнитьЗначенияСвойств(Форма.ПлатежнаяСистема_НоваяЗаявка, РезультатОперации.ПараметрыОперации);

			Если Форма.ПлатежнаяСистема_НоваяЗаявка.ИтогПоОрганизации > Форма.ПлатежнаяСистема_НоваяЗаявка.СуммаОперации Тогда
				
				СообщениеОбОшибке = НСтр("ru = 'Сумма оплаты по СБП (%1) меньше суммы к оплате в чеке (%2). Необходимо оплатить разницу другим видом оплаты.'");
				СообщениеОбОшибке = СтрШаблон(СообщениеОбОшибке, 
					Форма.ПлатежнаяСистема_НоваяЗаявка.СуммаОперации, 
					Форма.ПлатежнаяСистема_НоваяЗаявка.ИтогПоОрганизации);
				
			ИначеЕсли Форма.ПлатежнаяСистема_НоваяЗаявка.ИтогПоОрганизации < Форма.ПлатежнаяСистема_НоваяЗаявка.СуммаОперации Тогда
				
				СообщениеОбОшибке = НСтр("ru = 'Сумма оплаты по СБП (%1) больше суммы к оплате в чеке (%2). Необходимо увеличить чек на разницу.'");
				СообщениеОбОшибке = СтрШаблон(СообщениеОбОшибке, 
					Форма.ПлатежнаяСистема_НоваяЗаявка.СуммаОперации, 
					Форма.ПлатежнаяСистема_НоваяЗаявка.ИтогПоОрганизации);
				
			КонецЕсли;
			
			Если ЗначениеЗаполнено(СообщениеОбОшибке) Тогда 

				ПараметрыСтраницы.Вставить("СообщениеОбОшибке", СообщениеОбОшибке);
				ПерейтиНаСтраницу(Форма, "Ошибка", ПараметрыСтраницы);
				
			ИначеЕсли Не Форма.ПлатежнаяСистема_НоваяЗаявка.ВидОперацииПродажа Тогда
				ВозвратОплаты(Форма, ОповещениеЗавершитьОплату);
			Иначе

				ПерейтиНаСтраницу(Форма, "Завершение", ПараметрыСтраницы);
				ВыполнитьОбработкуОповещения(ОповещениеЗавершитьОплату, "ДобавитьВидОплаты");
				
			КонецЕсли;
			
		ИначеЕсли РезультатОперации.СтатусОперации = СтатусОперацииОтменена Тогда
			
			СообщениеОбОшибке = НСтр("ru = 'Операция отменена. Истек срок действия QR-кода или операция была отклонена СБП.'");
			
			ПараметрыСтраницы.Вставить("СообщениеОбОшибке", СообщениеОбОшибке);
			ПерейтиНаСтраницу(Форма, "Ошибка", ПараметрыСтраницы);
			
		ИначеЕсли РезультатОперации.СтатусОперации = СтатусОперацииОшибка Тогда
			
			СообщениеОбОшибке = РезультатОперации.СообщениеОбОшибке;
			ПараметрыСтраницы.Вставить("СообщениеОбОшибке", СообщениеОбОшибке);
			
			Если Не Форма.ПлатежнаяСистема_НоваяЗаявка.ВидОперацииПродажа Тогда
				ПерейтиНаСтраницу(Форма, "Ошибка", ПараметрыСтраницы);
			Иначе
				ПерейтиНаСтраницу(Форма, "ОшибкаПолученияСтатуса", ПараметрыСтраницы);
			КонецЕсли;
		
		КонецЕсли;
		
	ИначеЕсли РезультатВыполнения.Статус = "Ошибка" Тогда
		
		ПараметрыСтраницы.Вставить("СообщениеОбОшибке", РезультатВыполнения.КраткоеПредставлениеОшибки);
		ПерейтиНаСтраницу(Форма, "Ошибка", ПараметрыСтраницы);
	
	ИначеЕсли РезультатВыполнения.Статус = "Отменено" Тогда
		
		ПараметрыСтраницы.Вставить(
			"СообщениеОбОшибке", 
			НСтр("ru = 'Не удалось определить статус оплаты. Задание отменено администратором.'"));
			
		ПерейтиНаСтраницу(Форма, "Ошибка", ПараметрыСтраницы);
			
	КонецЕсли;
	
КонецПроцедуры

Процедура ВозвратОплаты(Форма, ОповещениеЗавершитьОплату) Экспорт
	
	ПерейтиНаСтраницу(Форма, "ДлительнаяОперация");
	
	ПараметрыОжидания = ДлительныеОперацииКлиент.ПараметрыОжидания(Форма);
	ПараметрыОжидания.ВыводитьОкноОжидания = Ложь;
	
	ЗаявкаНаВозврат 	= НоваяЗаявка(Форма);
	РезультатВыполнения = ИнтеграцияСПлатежнымиСистемамиРМКВызовСервера.ВозвратОплаты(
		ЗаявкаНаВозврат, 
		Форма.УникальныйИдентификатор);
	
	Форма.ПлатежнаяСистема_НоваяЗаявка.ИдентификаторЗаданияВозврата = РезультатВыполнения.ИдентификаторЗадания;
	ПараметрыЗавершения	  = Новый Структура("Форма, ОповещениеЗавершитьОплату", Форма, ОповещениеЗавершитьОплату);
	ОповещениеОЗавершении = Новый ОписаниеОповещения("ВозвратОплатыЗавершение", ЭтотОбъект, ПараметрыЗавершения);
	
	Если РезультатВыполнения.Статус <> "Выполняется" Тогда
		ВозвратОплатыЗавершение(РезультатВыполнения, ПараметрыЗавершения);
		Возврат;
	КонецЕсли;
	
	ДлительныеОперацииКлиент.ОжидатьЗавершение(
		РезультатВыполнения,
		ОповещениеОЗавершении,
		ПараметрыОжидания);
	
КонецПроцедуры

Процедура ВозвратОплатыЗавершение(РезультатВыполнения, ДополнительныеПараметры) Экспорт
	
	Если РезультатВыполнения = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	Форма		      			= ДополнительныеПараметры.Форма;
	ОповещениеЗавершитьОплату	= ДополнительныеПараметры.ОповещениеЗавершитьОплату;
	
	Если Форма.ПлатежнаяСистема_СанкционированноеЗакрытие Тогда // уже на актуально
		Возврат;
	КонецЕсли;
	
	Если РезультатВыполнения.Статус = "Выполнено" Тогда
		
		РезультатОперации = ПолучитьИзВременногоХранилища(РезультатВыполнения.АдресРезультата);
		
		Если Не ЗначениеЗаполнено(Форма.ПлатежнаяСистема_НоваяЗаявка.ДокументВозврата) Тогда
			Форма.ПлатежнаяСистема_НоваяЗаявка.ДокументВозврата = РезультатОперации.ДокументВозврата;
		КонецЕсли;
		
		ОбработатьСтатусВозврата(Форма, РезультатОперации, ОповещениеЗавершитьОплату);
		
	ИначеЕсли РезультатВыполнения.Статус = "Ошибка" Тогда
		
		ПараметрыСтраницы = Новый Структура("СообщениеОбОшибке", РезультатВыполнения.КраткоеПредставлениеОшибки);
		ПерейтиНаСтраницу(Форма, "Ошибка");
	
	ИначеЕсли РезультатВыполнения.Статус = "Отменено" Тогда
		
		ПараметрыСтраницы = Новый Структура(
			"СообщениеОбОшибке", 
			НСтр("ru = 'Не удалось выполнить возврат. Задание отменено администратором.'"));
			
		ПерейтиНаСтраницу(Форма, "Ошибка");
			
	КонецЕсли;
	
КонецПроцедуры

Процедура ОпределитьСтатусВозврата(Форма, ОповещениеЗавершитьОплату) Экспорт
	
	ПерейтиНаСтраницу(Форма, "ДлительнаяОперация");
	
	ИнтеграцияСПлатежнымиСистемамиРМККлиентСервер.НастроитьФормуПоИнтеграции(Форма);
	
	ПараметрыОжидания = ДлительныеОперацииКлиент.ПараметрыОжидания(Форма);
	ПараметрыОжидания.ВыводитьОкноОжидания 	= Ложь;
	ПараметрыОжидания.Интервал 				= 1;
	
	ДокументВозврата 	= Форма.ПлатежнаяСистема_НоваяЗаявка.ДокументВозврата;
	Интеграция			= Форма.ПлатежнаяСистема_НоваяЗаявка.Интеграция;
	
	РезультатВыполнения = ИнтеграцияСПлатежнымиСистемамиРМКВызовСервера.ОпределитьСтатусВозврата(ДокументВозврата, 
																									Интеграция, 
																									Форма.УникальныйИдентификатор);
	
	Форма.ПлатежнаяСистема_НоваяЗаявка.ИдентификаторЗаданияПроверкиСтатуса = РезультатВыполнения.ИдентификаторЗадания;
	СтруктураСФормой					= Новый Структура("Форма, ОповещениеЗавершитьОплату", Форма, ОповещениеЗавершитьОплату);
	
	ОповещениеОЗавершении = Новый ОписаниеОповещения("ОпределитьСтатусВозвратаЗавершение", ЭтотОбъект, СтруктураСФормой);
	
	Если РезультатВыполнения.Статус <> "Выполняется" Тогда
		ОпределитьСтатусВозвратаЗавершение(РезультатВыполнения, Новый Структура("Форма, ОповещениеЗавершитьОплату", Форма, ОповещениеЗавершитьОплату));
		Возврат;
	КонецЕсли;
	
	ДлительныеОперацииКлиент.ОжидатьЗавершение(
		РезультатВыполнения,
		ОповещениеОЗавершении,
		ПараметрыОжидания);
	
КонецПроцедуры

Процедура ОпределитьСтатусВозвратаЗавершение(РезультатВыполнения, ДополнительныеПараметры) Экспорт
	
	Если РезультатВыполнения = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	Форма						= ДополнительныеПараметры.Форма;
	ОповещениеЗавершитьОплату   = ДополнительныеПараметры.ОповещениеЗавершитьОплату;
	
	Если Форма.ПлатежнаяСистема_СанкционированноеЗакрытие Тогда // уже на актуально
		Возврат;
	КонецЕсли;
	
	Если РезультатВыполнения.Статус = "Выполнено" Тогда
		
		РезультатОперации = ПолучитьИзВременногоХранилища(РезультатВыполнения.АдресРезультата);
		
		ОбработатьСтатусВозврата(Форма, РезультатОперации, ОповещениеЗавершитьОплату, Ложь);
		
	ИначеЕсли РезультатВыполнения.Статус = "Ошибка" Тогда
		
		ПараметрыСтраницы = Новый Структура("СообщениеОбОшибке", РезультатВыполнения.КраткоеПредставлениеОшибки);
		ПерейтиНаСтраницу(Форма, "ОшибкаПолученияСтатуса", ПараметрыСтраницы);
	
	ИначеЕсли РезультатВыполнения.Статус = "Отменено" Тогда
		
		ПараметрыСтраницы = Новый Структура(
			"СообщениеОбОшибке", 
			НСтр("ru = 'Не удалось получить статус возврата. Задание отменено администратором.'"));
			
		ПерейтиНаСтраницу(Форма, "ОшибкаПолученияСтатуса", ПараметрыСтраницы);
			
	КонецЕсли;
	
КонецПроцедуры

Процедура ПодтвердитьВозврат(Форма, ОповещениеЗавершитьОплату) Экспорт
	
	ДокументВозврата = Форма.ПлатежнаяСистема_НоваяЗаявка.ДокументВозврата;
	Интеграция		 = Форма.ПлатежнаяСистема_НоваяЗаявка.Интеграция;
	
	РезультатОперации = ИнтеграцияСПлатежнымиСистемамиРМКВызовСервера.ПодтвердитьВозврат(ДокументВозврата, Интеграция);
		
	ОбработатьСтатусВозврата(Форма, РезультатОперации, ОповещениеЗавершитьОплату);
	
КонецПроцедуры

Процедура ОтменитьОперацию(Форма, ОповещениеЗавершитьОтмену, Отказ = Ложь) Экспорт
	
	ДокументОплаты 							= Форма.ПлатежнаяСистема_НоваяЗаявка.ДокументОплаты;
	ОтменаЗаказа							= Форма.ПлатежнаяСистема_НоваяЗаявка.ОтменаЗаказа;
	Интеграция 								= Форма.ПлатежнаяСистема_НоваяЗаявка.Интеграция;
	ИдентификаторЗаданияФормированияQRКода 	= Форма.ПлатежнаяСистема_НоваяЗаявка.ИдентификаторЗаданияФормированияQRКода;
	ИдентификаторЗаданияПроверкиСтатуса 	= Форма.ПлатежнаяСистема_НоваяЗаявка.ИдентификаторЗаданияПроверкиСтатуса;
	ИдентификаторЗаданияВозврата			= Форма.ПлатежнаяСистема_НоваяЗаявка.ИдентификаторЗаданияВозврата;

	ПараметрыСтраницы = Новый Структура(
		"ТекстДлительнойОперации",
		НСтр("ru = 'Отмена заказа. Пожалуйста, подождите...'"));

	ПерейтиНаСтраницу(Форма, "ДлительнаяОперация", ПараметрыСтраницы);	
		
	ПараметрыОжидания 	= ДлительныеОперацииКлиент.ПараметрыОжидания(Форма);
	ПараметрыОжидания.ВыводитьОкноОжидания = Ложь;

	РезультатВыполнения = ИнтеграцияСПлатежнымиСистемамиРМКВызовСервера.ОтменитьОперацию(
		ДокументОплаты, 
		ОтменаЗаказа,
		Интеграция, 
		ИдентификаторЗаданияФормированияQRКода, 
		ИдентификаторЗаданияПроверкиСтатуса, 
		ИдентификаторЗаданияВозврата,
		Форма.УникальныйИдентификатор);
	
	Форма.ПлатежнаяСистема_НоваяЗаявка.ИдентификаторЗаданияОтменаЗаказа = РезультатВыполнения.ИдентификаторЗадания;
	
	СтруктураСФормой		= Новый Структура("Форма, ОповещениеЗавершитьОтмену", Форма, ОповещениеЗавершитьОтмену);
	ОповещениеОЗавершении 	= Новый ОписаниеОповещения("ОтменитьОперациюЗавершение", ЭтотОбъект, СтруктураСФормой);

	Отказ 				    = Истина;
	
	Если РезультатВыполнения.Статус <> "Выполняется" Тогда
		ОтменитьОперациюЗавершение(РезультатВыполнения, СтруктураСФормой); 
		Возврат;
	КонецЕсли;
		
	ДлительныеОперацииКлиент.ОжидатьЗавершение(
		РезультатВыполнения,
		ОповещениеОЗавершении,
		ПараметрыОжидания);

	
КонецПроцедуры

Процедура ОтменитьОперациюЗавершение(РезультатВыполнения, ДополнительныеПараметры) Экспорт

	Если РезультатВыполнения = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	Форма		    			= ДополнительныеПараметры.Форма;

	Если РезультатВыполнения.Статус = "Выполнено" Тогда
		
		РезультатОперации = ПолучитьИзВременногоХранилища(РезультатВыполнения.АдресРезультата);
		
		Если РезультатОперации <> Неопределено
			И ЗначениеЗаполнено(РезультатОперации.КодОшибки) Тогда
			
			ПараметрыСтраницы = Новый Структура("СообщениеОбОшибке", РезультатОперации.СообщениеОбОшибке);
			ПерейтиНаСтраницу(Форма, "Ошибка", ПараметрыСтраницы);	
				
		Иначе
			
			ВыполнитьОбработкуОповещения(ДополнительныеПараметры.ОповещениеЗавершитьОтмену, "ОтменитьЧек");
			
		КонецЕсли;
		
	ИначеЕсли РезультатВыполнения.Статус = "Ошибка" Тогда
		
		ПараметрыСтраницы = Новый Структура("СообщениеОбОшибке", РезультатВыполнения.КраткоеПредставлениеОшибки);
		ПерейтиНаСтраницу(Форма, "Ошибка", ПараметрыСтраницы);	
	
	ИначеЕсли РезультатВыполнения.Статус = "Отменено" Тогда
		
		ПараметрыСтраницы = Новый Структура(
			"СообщениеОбОшибке", 
			НСтр("ru = 'Не удалось отменить оплату. Задание отменено администратором.'"));
			
		ПерейтиНаСтраницу(Форма, "Ошибка", ПараметрыСтраницы);	
			
	КонецЕсли;
	
КонецПроцедуры

Процедура ОтложитьОперацию(Форма, ОповещениеЗавершить, ВыполнитьОтмену = Истина) Экспорт
	
	ДокументОплаты 							= Форма.ПлатежнаяСистема_НоваяЗаявка.ДокументОплаты;
	ОтменаЗаказа							= Форма.ПлатежнаяСистема_НоваяЗаявка.ОтменаЗаказа;
	Интеграция 								= Форма.ПлатежнаяСистема_НоваяЗаявка.Интеграция;
	ИдентификаторЗаданияФормированияQRКода 	= Форма.ПлатежнаяСистема_НоваяЗаявка.ИдентификаторЗаданияФормированияQRКода;
	ИдентификаторЗаданияПроверкиСтатуса 	= Форма.ПлатежнаяСистема_НоваяЗаявка.ИдентификаторЗаданияПроверкиСтатуса;
	ИдентификаторЗаданияВозврата			= Форма.ПлатежнаяСистема_НоваяЗаявка.ИдентификаторЗаданияВозврата;

	ПараметрыСтраницы = Новый Структура(
		"ТекстДлительнойОперации",
		НСтр("ru = 'Откладывание платежа. Пожалуйста, подождите...'"));

	ПерейтиНаСтраницу(Форма, "ДлительнаяОперация", ПараметрыСтраницы);	
		
	Если ВыполнитьОтмену Тогда
			
		ПараметрыОжидания 	= ДлительныеОперацииКлиент.ПараметрыОжидания(Форма);
		ПараметрыОжидания.ВыводитьОкноОжидания = Ложь;

		РезультатВыполнения = ИнтеграцияСПлатежнымиСистемамиРМКВызовСервера.ОтменитьОперацию(
			ДокументОплаты, 
			ОтменаЗаказа,
			Интеграция, 
			ИдентификаторЗаданияФормированияQRКода, 
			ИдентификаторЗаданияПроверкиСтатуса, 
			ИдентификаторЗаданияВозврата,
			Форма.УникальныйИдентификатор);
		
		Форма.ПлатежнаяСистема_НоваяЗаявка.ИдентификаторЗаданияОтменаЗаказа = РезультатВыполнения.ИдентификаторЗадания;
	
		СтруктураСФормой		= Новый Структура("Форма, ОповещениеЗавершить", Форма, ОповещениеЗавершить);
		ОповещениеОЗавершении 	= Новый ОписаниеОповещения("ОтложитьОперациюЗавершение", ЭтотОбъект, СтруктураСФормой);
	
		Если РезультатВыполнения.Статус <> "Выполняется" Тогда
			ОтложитьОперациюЗавершение(РезультатВыполнения, СтруктураСФормой);
			Возврат;
		КонецЕсли;
		
		ДлительныеОперацииКлиент.ОжидатьЗавершение(
			РезультатВыполнения,
			ОповещениеОЗавершении,
			ПараметрыОжидания);
	Иначе
			
		ИнтеграцияСПлатежнымиСистемамиРМКВызовСервера.ОтменитьФоновыеЗадания(
			ИдентификаторЗаданияФормированияQRКода, 
			ИдентификаторЗаданияПроверкиСтатуса, 
			ИдентификаторЗаданияВозврата);
			
		ВыполнитьОбработкуОповещения(ОповещениеЗавершить, "ОтложитьЧек");
		
	КонецЕсли;
		
КонецПроцедуры

Процедура ПодтвердитьОплату(Форма, ОповещениеЗавершить) Экспорт
	
	ДокументОплаты 							= Форма.ПлатежнаяСистема_НоваяЗаявка.ДокументОплаты;
	ОтменаЗаказа							= Форма.ПлатежнаяСистема_НоваяЗаявка.ОтменаЗаказа;
	Интеграция 								= Форма.ПлатежнаяСистема_НоваяЗаявка.Интеграция;
	ИдентификаторЗаданияФормированияQRКода 	= Форма.ПлатежнаяСистема_НоваяЗаявка.ИдентификаторЗаданияФормированияQRКода;
	ИдентификаторЗаданияПроверкиСтатуса 	= Форма.ПлатежнаяСистема_НоваяЗаявка.ИдентификаторЗаданияПроверкиСтатуса;
	ИдентификаторЗаданияВозврата			= Форма.ПлатежнаяСистема_НоваяЗаявка.ИдентификаторЗаданияВозврата;

	ПараметрыСтраницы = Новый Структура(
		"ТекстДлительнойОперации",
		НСтр("ru = 'Подтверждение платежа. Пожалуйста, подождите...'"));

	ПерейтиНаСтраницу(Форма, "ДлительнаяОперация", ПараметрыСтраницы);	
		
	ИнтеграцияСПлатежнымиСистемамиРМКВызовСервера.ОтменитьФоновыеЗадания(
		ИдентификаторЗаданияФормированияQRКода, 
		ИдентификаторЗаданияПроверкиСтатуса, 
		ИдентификаторЗаданияВозврата);
			
	ВыполнитьОбработкуОповещения(ОповещениеЗавершить, "Да");
		
КонецПроцедуры

Процедура ОтложитьОперациюЗавершение(РезультатВыполнения, ДополнительныеПараметры) Экспорт

	Если РезультатВыполнения = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	Форма = ДополнительныеПараметры.Форма;
	
	Если РезультатВыполнения.Статус = "Выполнено" Тогда
		
		РезультатОперации = ПолучитьИзВременногоХранилища(РезультатВыполнения.АдресРезультата);
		
		Если РезультатОперации <> Неопределено
			И ЗначениеЗаполнено(РезультатОперации.КодОшибки) Тогда
			
			ПараметрыСтраницы = Новый Структура("СообщениеОбОшибке", РезультатОперации.СообщениеОбОшибке);
			ПерейтиНаСтраницу(Форма, "Ошибка", ПараметрыСтраницы);	
				
		КонецЕсли;
			
	ИначеЕсли РезультатВыполнения.Статус = "Ошибка" Тогда
		
		ПараметрыСтраницы = Новый Структура("СообщениеОбОшибке", РезультатВыполнения.КраткоеПредставлениеОшибки);
		ПерейтиНаСтраницу(Форма, "Ошибка", ПараметрыСтраницы);	
	
	ИначеЕсли РезультатВыполнения.Статус = "Отменено" Тогда
		
		ПараметрыСтраницы = Новый Структура(
			"СообщениеОбОшибке", 
			НСтр("ru = 'Не удалось завершить оплату. Задание отменено администратором.'"));
			
		ПерейтиНаСтраницу(Форма, "Ошибка", ПараметрыСтраницы);	
			
	КонецЕсли;
	
	ВыполнитьОбработкуОповещения(ДополнительныеПараметры.ОповещениеЗавершить, "ОтложитьЧек");
		
КонецПроцедуры

Функция ОпределитьПараметрыОплатыПоОперациямДокумента(Форма, ВидыОплат, ДокументОперации) Экспорт
	
	ПараметрыОплаты	= Новый Структура("ВидОплаты, ПлатежнаяСистема, ИдентификаторПС");
	
	ТорговыеТочки 	= ИнтеграцияСПлатежнымиСистемамиРМКВызовСервера.ТорговыеТочкиОперации(ДокументОперации);
	
	Для Каждого Интеграция Из ТорговыеТочки Цикл
		
		СтрокиОплаты = ВидыОплат.НайтиСтроки(Новый Структура("Интеграция", Интеграция));
		
		Если СтрокиОплаты.Количество() Тогда
			ПараметрыОплаты.ВидОплаты		 = СтрокиОплаты[0].ВидОплаты;
			ПараметрыОплаты.ПлатежнаяСистема = СтрокиОплаты[0].ПлатежнаяСистема;
			ПараметрыОплаты.ИдентификаторПС	 = СтрокиОплаты[0].ИдентификаторПС;
			Прервать;
		КонецЕсли;
		
	КонецЦикла;
	
	Возврат ПараметрыОплаты;
	
КонецФункции

Функция ОпределитьПлатежнуюСистему(Форма, ВидыОплат, ВыбраннаяОрганизация = Неопределено) Экспорт
	
	Ключ = Новый Структура("ИдентификаторПС", Форма.ПлатежнаяСистема_НоваяЗаявка.ИдентификаторПС);
	
	Если ВыбраннаяОрганизация <> Неопределено Тогда
		Ключ.Вставить("Организация",  ВыбраннаяОрганизация);
	КонецЕсли;
	
	СтрокиОплаты = ВидыОплат.НайтиСтроки(Ключ);
		
	Если СтрокиОплаты.Количество() Тогда
		ПлатежнаяСистема = СтрокиОплаты[0].ПлатежнаяСистема;
	КонецЕсли;
	
	Возврат ПлатежнаяСистема;
	
КонецФункции

Функция ОпределитьВидОплаты(Форма, ВидыОплат) Экспорт
	
	Ключ = Новый Структура("ИдентификаторПС", Форма.ПлатежнаяСистема_ИдентификаторПС);
	
	СтрокиОплаты = ВидыОплат.НайтиСтроки(Ключ);
		
	Если СтрокиОплаты.Количество() Тогда
		ВидОплаты = СтрокиОплаты[0].ВидОплаты;
	КонецЕсли;
	
	Возврат ВидОплаты;
	
КонецФункции

Функция ОпределитьСпособОплаты(Форма, ВидыОплат, ВыбраннаяОрганизация = Неопределено) Экспорт
	
	Ключ = Новый Структура("ИдентификаторПС", Форма.ПлатежнаяСистема_ИдентификаторПС);
	
	Если ВыбраннаяОрганизация <> Неопределено Тогда
		Ключ.Вставить("Организация",  ВыбраннаяОрганизация);
	КонецЕсли;
	
	СтрокиОплаты = ВидыОплат.НайтиСтроки(Ключ);
		
	Если СтрокиОплаты.Количество() Тогда
		СпособОплаты = СтрокиОплаты[0].СпособОплаты;
	КонецЕсли;
	
	Возврат СпособОплаты;
	
КонецФункции

Функция ОпределитьКомиссию(Форма, ВидыОплат, Организация, ВидОперацииПродажа) Экспорт
	
	Ключ = Новый Структура();
	Ключ.Вставить("ИдентификаторПС", 	Форма.ПлатежнаяСистема_ИдентификаторПС);
	Ключ.Вставить("Организация", 		Организация);
	
	СтрокиОплаты = ВидыОплат.НайтиСтроки(Ключ);
		
	Если СтрокиОплаты.Количество() Тогда
		Комиссия = ?(ВидОперацииПродажа, СтрокиОплаты[0].ПроцентКомиссии, СтрокиОплаты[0].ПроцентКомиссииПриВозврате);
	Иначе
		Комиссия = 0;
	КонецЕсли;
	
	Возврат Комиссия;
	
КонецФункции

Функция ВозвратВозможен(ПлатежнаяСистема, ТекстПредупреждения = "") Экспорт
	
	ВозвратВозможен = Истина;
	
	Если ПлатежнаяСистема = ПредопределенноеЗначение("Перечисление.ТипыПлатежнойСистемыККТ.ЮКасса") Тогда
		
		ВозвратВозможен 	= Ложь;
		ТекстПредупреждения = НСтр("ru = 'Чек был оплачен платежной системой ЮKassa. Возврат по данной системе невозможен. 
								|Проведите возврат другими видами оплат'");
		
	КонецЕсли;
	
	Возврат ВозвратВозможен
	
КонецФункции

#Область ПомощникНастройкиКассовогоМеста

Процедура ОбработкаЭлементаФормыПомощника(Форма, Элемент, ВидДействия, СтандартнаяОбработка = Ложь) Экспорт
	
	Отказ 			= Ложь;
    ОписаниеОшибки 	= "";

	МодульИнтеграцияСПлатежнымиСистемамиКлиент = ОбщегоНазначенияКлиент.ОбщийМодуль("ИнтеграцияСПлатежнымиСистемамиКлиент");
	
	Если ВидДействия = "ПерейтиНаИнструкциюNFC" Тогда

		СтандартнаяОбработка = Ложь;
		МодульИнтеграцияСПлатежнымиСистемамиКлиент.ОткрытьИнструкциюПоПрограммированиюNFCМетки();
			
	ИначеЕсли ВидДействия = "Подключить" Тогда
		
		КассовыеСсылки 			= Форма.НастройкиКассовыхСсылокСБП.КассовыеСсылки;
					
		НастройкиСпособаОплаты  = КассовыеСсылки.СпособыОплаты.Получить(Форма.СпособОплатыКассовойСсылкиСБП);

		Если НастройкиСпособаОплаты <> Неопределено Тогда
		
			ОписаниеОповещения = Новый ОписаниеОповещения(
				"ПодключитьКассовуюСсылкуЗавершение",
				ЭтотОбъект,
				Новый Структура("Форма", Форма));

			Для Каждого НастройкаПодключения Из Форма.НастройкиКассовыхСсылокСБП.НастройкиПодключения Цикл
		
				Если НастройкаПодключения.СпособОплаты = Форма.СпособОплатыКассовойСсылкиСБП Тогда
			
					МодульИнтеграцияСПлатежнымиСистемамиКлиент.ПодключитьКассовуюСсылку(
						НастройкаПодключения.Интеграция,
						ОписаниеОповещения,
						ЭтотОбъект);

				КонецЕсли;
				
			КонецЦикла;			
				
		КонецЕсли;
			
	ИначеЕсли ВидДействия = "ПерейтиНаИнструкциюКассовыйQRКод"  Тогда

		СтандартнаяОбработка = Ложь;
		МодульИнтеграцияСПлатежнымиСистемамиКлиент.ОткрытьОписаниеКассовыхСсылок();
			
	ИначеЕсли ВидДействия = "СпособОплатыКассовойСсылкиСБП"  Тогда

		РеквизитыКассы			= Форма.НастройкиКассовыхСсылокСБП.РеквизитыКассы;
		КассовыеСсылки 			= Форма.НастройкиКассовыхСсылокСБП.КассовыеСсылки;
					
		КассовыеСсылки.СпособОплатыДляПечати = Форма.СпособОплатыКассовойСсылкиСБП;
				
		ИнтеграцияСПлатежнымиСистемамиРМКВызовСервера.ЗаписатьДанныеКассовойСсылки(
			РеквизитыКассы.КассаККМ,
			КассовыеСсылки);
			
	ИначеЕсли ВидДействия = "ИспользоватьКассовыйQRКодСБП"  Тогда

		РеквизитыКассы			= Форма.НастройкиКассовыхСсылокСБП.РеквизитыКассы;
		КассовыеСсылки 			= Форма.НастройкиКассовыхСсылокСБП.КассовыеСсылки;
		
		КассовыеСсылки.ИспользоватьКассовыйQRКодСБП = Форма.ИспользоватьКассовыйQRКодСБП;
		
		ИнтеграцияСПлатежнымиСистемамиРМКВызовСервера.ЗаписатьДанныеКассовойСсылки(
			РеквизитыКассы.КассаККМ,
			КассовыеСсылки);
		
	ИначеЕсли ВидДействия = "КопироватьВБуферСБП" Тогда

		Форма.БуферОбменаСБП = СтрШаблон(
	
		"<!DOCTYPE html>
		|<html>
		|	<body onload='copy()'>
		|		<input id='input' type='text'/>
		|		<script>
		|			function copy() {
		|				var text = '%1';
		|				var ua = navigator.userAgent;
		|					if (ua.search(/MSIE/) > 0 || ua.search(/Trident/) > 0) {
		|					window.clipboardData.setData('Text', text);
		|				} else {
		|					var copyText = document.getElementById('input');
		|					copyText.value = text;
		|					copyText.select();
		|					document.execCommand('copy');
		|				}
		|			}
		|		</script>
		|	</body>
		|</html>", Форма.NFCСсылкаСБП);
	
		ПоказатьОповещениеПользователя(НСтр("ru = 'Ссылка получена'"),, 
			НСтр("ru = 'NFC cсылка для оплаты через СБП скопирована в буфер обмена'")); // АПК:216
		
	ИначеЕсли ВидДействия = "СформироватьКассовыеСсылки"  Тогда
		
		Отказ = Ложь;
		
		Если ПроверитьЗаполнениеНастроек(Форма, ВидДействия) Тогда

			СформироватьКассовыеСсылки(Форма, Отказ, ОписаниеОшибки);
			
			Если Не Отказ Тогда
				ОбработкаЭлементаФормыПомощника(Форма, Элемент, "ПечатьQRКода", Отказ);
			КонецЕсли;
			
		Иначе
			Отказ = Истина;
		КонецЕсли;		
		
	ИначеЕсли ВидДействия = "ПечатьQRКода" Тогда
		
		РеквизитыКассы			= Форма.НастройкиКассовыхСсылокСБП.РеквизитыКассы;
		КассовыеСсылки 			= Форма.НастройкиКассовыхСсылокСБП.КассовыеСсылки;
					
		НастройкиСпособаОплаты  = КассовыеСсылки.СпособыОплаты.Получить(Форма.СпособОплатыКассовойСсылкиСБП);

		Если НастройкиСпособаОплаты = Неопределено Тогда
			СформироватьКассовыеСсылки(Форма, Отказ, ОписаниеОшибки);
		КонецЕсли;			

		Если Не Отказ Тогда  

			МассивОбъектов = Новый Массив;
			МассивОбъектов.Добавить(РеквизитыКассы.КассаККМ);
			
			УправлениеПечатьюКлиент.ВыполнитьКомандуПечати(
				"Обработка.ПомощникНастройкиКассовогоМестаРМК",
				Форма.МакетQRКодаСБП,
				МассивОбъектов,
				Форма);
			
		КонецЕсли;
		
	КонецЕсли;

	ИнтеграцияСПлатежнымиСистемамиРМККлиентСервер.НастроитьПояснениеКФормеПомощника(Форма, ОписаниеОшибки);
	
КонецПроцедуры

Процедура ПодключитьКассовуюСсылкуЗавершение(Результат, ДополнительныеПараметры) Экспорт
	
	Если Результат = Неопределено Тогда
		Возврат;
	КонецЕсли;

	РеквизитыКассы					= ДополнительныеПараметры.Форма.НастройкиКассовыхСсылокСБП.РеквизитыКассы;
	КассовыеСсылки 					= ДополнительныеПараметры.Форма.НастройкиКассовыхСсылокСБП.КассовыеСсылки;
	СпособОплатыКассовойСсылкиСБП 	= ДополнительныеПараметры.Форма.СпособОплатыКассовойСсылкиСБП;
	
	НастройкиСпособаОплаты  = КассовыеСсылки.СпособыОплаты.Получить(СпособОплатыКассовойСсылкиСБП);

	ЗаполнитьЗначенияСвойств(НастройкиСпособаОплаты, Результат);
	
	ИнтеграцияСПлатежнымиСистемамиРМКВызовСервера.ЗаписатьДанныеКассовойСсылки(
		РеквизитыКассы.КассаККМ,
		КассовыеСсылки);
	
	ИнтеграцияСПлатежнымиСистемамиРМККлиентСервер.НастроитьПояснениеКФормеПомощника(ДополнительныеПараметры.Форма);
	
КонецПроцедуры

#КонецОбласти

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

Процедура УстановитьТекущуюСтраницуСлой(СтраницаСлой, ИспользоватьСлои)
	
	Если ИспользоватьСлои Тогда
		ИнтерфейсРМКСлужебныйКлиентСервер.УстановитьТекущийСлойГруппы(СтраницаСлой);
	Иначе
		ИнтеграцияСПлатежнымиСистемамиРМККлиентСервер.УстановитьТекущуюСтраницу(СтраницаСлой);
	КонецЕсли;
	
КонецПроцедуры

Функция ПроверитьЗаполнениеНастроек(Форма, ВидДействия)

	Отказ = Ложь;
	
	Если Не ЗначениеЗаполнено(Форма.СпособОплатыКассовойСсылкиСБП) Тогда
		ПоказатьПредупреждение(, НСтр("ru = 'Не заполнено поле ""Способ оплаты""'"));
		Отказ = Истина;
	КонецЕсли;

	Если ВидДействия = "ЗаписатьНастройкиКассовойСсылки"  Тогда	

		Если Не ЗначениеЗаполнено(Форма.КассоваяСсылкаСБП) Тогда
			ПоказатьПредупреждение(, НСтр("ru = 'Необходимо сформировать кассовую ссылку'"));
			Отказ = Истина;
		КонецЕсли;
		
	КонецЕсли;
	
	Возврат Не Отказ;
	
КонецФункции

Процедура СформироватьКассовыеСсылки(Форма, Отказ, ОписаниеОшибки = "")

	КассоваяСсылка = ИнтеграцияСПлатежнымиСистемамиРМКВызовСервера.СформироватьКассовыеСсылки(
		Форма.СпособОплатыКассовойСсылкиСБП,
		Форма.НастройкиКассовыхСсылокСБП, 
		Отказ);
				
	Если Не ЗначениеЗаполнено(КассоваяСсылка) Тогда
		Отказ = Истина;
	КонецЕсли;
			
	Если Не Отказ Тогда
				
		РеквизитыКассы			= Форма.НастройкиКассовыхСсылокСБП.РеквизитыКассы;
		КассовыеСсылки 			= Форма.НастройкиКассовыхСсылокСБП.КассовыеСсылки;
					
		НастройкиСпособаОплаты  = Новый Структура;
		НастройкиСпособаОплаты.Вставить("КассоваяСсылка", 		КассоваяСсылка.КассоваяСсылка);
		НастройкиСпособаОплаты.Вставить("ИдентификаторОплаты",	КассоваяСсылка.ИдентификаторОплаты);

		КассовыеСсылки.СпособыОплаты.Вставить(Форма.СпособОплатыКассовойСсылкиСБП, НастройкиСпособаОплаты);
		КассовыеСсылки.СпособОплатыДляПечати = Форма.СпособОплатыКассовойСсылкиСБП;
				
		ИнтеграцияСПлатежнымиСистемамиРМКВызовСервера.ЗаписатьДанныеКассовойСсылки(
			РеквизитыКассы.КассаККМ,
			КассовыеСсылки,
			Отказ);

	ИначеЕсли ЗначениеЗаполнено(КассоваяСсылка) Тогда
		ОписаниеОшибки = КассоваяСсылка;
	КонецЕсли;			

КонецПроцедуры

Процедура ВывестиПречекНаЭкран(Форма)
	
	Если ОборудованиеДисплеиПокупателяКлиент.ПодключенныеДисплеиПокупателяВыводятQRКод() Тогда
		
		Форма.Доступность 				 = Ложь;
		СтруктураСФормой				 = Новый Структура("Форма", Форма);
		ОписаниеОповещениеПриЗавершении  = Новый ОписаниеОповещения("ПечатьПречекаЗавершение", ЭтотОбъект, СтруктураСФормой);
	
		ПараметрыОперации = ОборудованиеДисплеиПокупателяКлиент.ПараметрыОперацииДисплейПокупателя();
		ПараметрыОперации.ЗначениеQRКода = Форма.ПлатежнаяСистема_НоваяЗаявка.ИдентификаторQRКода;
		ПараметрыОперации.КартинкаQRКода = Форма.ПлатежнаяСистема_НоваяЗаявка.КартинкаQRКода;
		
		ОборудованиеДисплеиПокупателяКлиент.НачатьВыводQRКодаНаДисплейПокупателя(ОписаниеОповещениеПриЗавершении, 
																					Новый УникальныйИдентификатор, 
																					Неопределено, 
																					ПараметрыОперации);
		
	КонецЕсли;
	
КонецПроцедуры

Процедура ОбработатьСтатусВозврата(Форма, РезультатОперации, ОповещениеЗавершитьОплату, ЗапускПроверкиСтатуса = Истина)
	
	ПлатежнаяСистема    				 = Форма.ПлатежнаяСистема_БанкКлиента;
	СтатусОперацииТребуетсяПодтверждение = ИнтеграцияСПлатежнымиСистемамиКлиентСервер.СтатусОперацииТребуетсяПодтверждение();
	СтатусОперацииВыполняется			 = ИнтеграцияСПлатежнымиСистемамиКлиентСервер.СтатусОперацииВыполняется();
	СтатусОперацииВыполнена				 = ИнтеграцияСПлатежнымиСистемамиКлиентСервер.СтатусОперацииВыполнена();

	ИспользоватьСлои = ИнтерфейсРМКСлужебныйКлиентСервер.ИспользоватьСлои(Форма);
	Если РезультатОперации.СтатусОперации = СтатусОперацииТребуетсяПодтверждение Тогда
		
		Если ЗначениеЗаполнено(РезультатОперации.Подтверждение.НомерТелефона)
			И ЗначениеЗаполнено(РезультатОперации.Подтверждение.НомерСчета) Тогда
		
			Форма.Элементы.ДекорацияПодтверждение.Заголовок = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
				НСтр("ru = 'Денежные средства будут переведены %1 (номер телефона %2) в %3 на расчетный счет %4. 
							|Проверьте реквизиты и подтвердите перевод.'"),
					РезультатОперации.Подтверждение.ФИО,
					РезультатОперации.Подтверждение.НомерТелефона,
					Форма.Элементы.ПлатежнаяСистема.СписокВыбора.НайтиПоЗначению(ПлатежнаяСистема).Представление,
					РезультатОперации.Подтверждение.НомерСчета);
				
		Иначе
				
			Форма.Элементы.ДекорацияПодтверждение.Заголовок = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
				НСтр("ru = 'Денежные средства будут переведены %1 в %2 на расчетный счет. 
							|Проверьте реквизиты и подтвердите перевод.'"),
				
					РезультатОперации.Подтверждение.ФИО,
					Форма.Элементы.ПлатежнаяСистема.СписокВыбора.НайтиПоЗначению(ПлатежнаяСистема).Представление);
					
		КонецЕсли;
			
		УстановитьТекущуюСтраницуСлой(Форма.Элементы.ГруппаПодтверждение, ИспользоватьСлои);
		ИнтеграцияСПлатежнымиСистемамиРМККлиентСервер.НастроитьФормуПоИнтеграции(Форма);
			
	ИначеЕсли РезультатОперации.СтатусОперации = СтатусОперацииВыполняется Тогда
		
		Если ЗапускПроверкиСтатуса Тогда
			Форма.ПодключитьОбработчикОжидания("ОпределитьСтатусВозврата", 0.1, Истина);
		Иначе
			УстановитьТекущуюСтраницуСлой(Форма.Элементы.ГруппаВыполняется, ИспользоватьСлои);
			ИнтеграцияСПлатежнымиСистемамиРМККлиентСервер.НастроитьФормуПоИнтеграции(Форма);
		КонецЕсли;
		
	ИначеЕсли РезультатОперации.СтатусОперации = СтатусОперацииВыполнена Тогда
		
		УстановитьТекущуюСтраницуСлой(Форма.Элементы.ГруппаЗавершение, ИспользоватьСлои);
		ИнтеграцияСПлатежнымиСистемамиРМККлиентСервер.НастроитьФормуПоИнтеграции(Форма, РезультатОперации.СообщениеОбОшибке);

		ВыполнитьОбработкуОповещения(ОповещениеЗавершитьОплату, "ДобавитьВидОплаты");
		
	Иначе
		
		УстановитьТекущуюСтраницуСлой(Форма.Элементы.ГруппаОшибка, ИспользоватьСлои);
		ИнтеграцияСПлатежнымиСистемамиРМККлиентСервер.НастроитьФормуПоИнтеграции(Форма, РезультатОперации.СообщениеОбОшибке);
		
	КонецЕсли;
	
КонецПроцедуры

Функция НоваяЗаявка(Форма) 
	
	Перем КассоваяСсылка;
	
	ТекущаяДата 		= ОбщегоНазначенияКлиент.ДатаСеанса();
	НастройкиИнтеграции = Форма.ПлатежнаяСистема_НоваяЗаявка.НастройкиИнтеграции;
	
	Заявка = Новый Структура;
	Заявка.Вставить("ДокументОплаты", 	   			Форма.ПлатежнаяСистема_НоваяЗаявка.ДокументОплаты);
	Заявка.Вставить("ИтогПоЧеку", 		   			Форма.ПлатежнаяСистема_НоваяЗаявка.ИтогПоОрганизации);
	Заявка.Вставить("НомерДокумента", 	   			Форма.ПлатежнаяСистема_НоваяЗаявка.НомерДокумента);
	Заявка.Вставить("Дата",				   			ТекущаяДата);
	Заявка.Вставить("Интеграция", 					Форма.ПлатежнаяСистема_НоваяЗаявка.Интеграция);
	Заявка.Вставить("Организация",    	   			Форма.ПлатежнаяСистема_НоваяЗаявка.Организация);
	Заявка.Вставить("ТорговыйОбъект",    	   		Форма.ПлатежнаяСистема_НоваяЗаявка.Магазин);

	Заявка.Вставить("ИспользоватьКассовуюСсылку", 	НастройкиИнтеграции.КассовыеСсылки);
	Заявка.Вставить("КассаККМ", 					Форма.ПлатежнаяСистема_НоваяЗаявка.КассаККМ);
	Заявка.Вставить("СпособОплаты",    	   			Форма.ПлатежнаяСистема_НоваяЗаявка.СпособОплатыПлатежнойСистемы);
	
	Если Не Форма.ПлатежнаяСистема_НоваяЗаявка.ВидОперацииПродажа Тогда
		
		Заявка.Вставить("ДокументОплаты",		Форма.ПлатежнаяСистема_НоваяЗаявка.ДокументОплаты); 
		Заявка.Вставить("ДокументВозврата", 	Форма.ПлатежнаяСистема_НоваяЗаявка.ДокументВозврата);
		Заявка.Вставить("ИдентификаторОплаты", 	Форма.ПлатежнаяСистема_НоваяЗаявка.ИдентификаторОплаты);
		Заявка.Вставить("ПлатежнаяСистема",    	?(ЗначениеЗаполнено(Форма.ПлатежнаяСистема_БанкКлиента),
													Форма.ПлатежнаяСистема_БанкКлиента,
													Неопределено));
		
	Иначе
		Заявка.Вставить("Товары", Форма.ПлатежнаяСистема_НоваяЗаявка.Товары);
	КонецЕсли;
	
	Возврат Заявка;
	
КонецФункции

Процедура ПерейтиНаСтраницу(Форма, Имя, ПараметрыСтраницы = Неопределено)

	Перем ДополнительныйТекст;
	
	АктивацияNFC	 = ПараметрыСтраницы <> Неопределено 
		И ПараметрыСтраницы.Свойство("АктивацияNFC")
		И ПараметрыСтраницы.АктивацияNFC;
		
	ИспользоватьСлои = ИнтерфейсРМКСлужебныйКлиентСервер.ИспользоватьСлои(Форма);
	ИмяЭлемента		 = "Группа" + Имя;
	ИмяЭлементаNFC	 = "Группа" + Имя + "NFC";
	
	Если СтрНачинаетсяС(Имя, "Ошибка") Тогда

		Если ПараметрыСтраницы <> Неопределено Тогда
			ПараметрыСтраницы.Свойство("СообщениеОбОшибке", ДополнительныйТекст);
		КонецЕсли;
		
		УстановитьТекущуюСтраницуСлой(Форма.Элементы[ИмяЭлемента], ИспользоватьСлои);
		ИнтеграцияСПлатежнымиСистемамиРМККлиентСервер.НастроитьФормуПоИнтеграции(Форма, ДополнительныйТекст);
		
	ИначеЕсли Имя = "ДлительнаяОперация" Тогда
		
		Если ПараметрыСтраницы <> Неопределено Тогда
			ПараметрыСтраницы.Свойство("ТекстДлительнойОперации", ДополнительныйТекст);
		КонецЕсли;
		
		УстановитьТекущуюСтраницуСлой(Форма.Элементы[ИмяЭлемента], ИспользоватьСлои);
		ИнтеграцияСПлатежнымиСистемамиРМККлиентСервер.НастроитьФормуПоИнтеграции(Форма, ДополнительныйТекст);
		
	Иначе
		
		УстановитьТекущуюСтраницуСлой(Форма.Элементы[ИмяЭлемента], ИспользоватьСлои);
		ИнтеграцияСПлатежнымиСистемамиРМККлиентСервер.НастроитьФормуПоИнтеграции(Форма);
		
	КонецЕсли;
	
	Если АктивацияNFC Тогда
		
		УстановитьТекущуюСтраницуСлой(Форма.Элементы[ИмяЭлементаNFC], ИспользоватьСлои);
		ИнтеграцияСПлатежнымиСистемамиРМККлиентСервер.НастроитьФормуПоИнтеграции(Форма, ДополнительныйТекст);
		
	КонецЕсли;
	
КонецПроцедуры


#КонецОбласти

