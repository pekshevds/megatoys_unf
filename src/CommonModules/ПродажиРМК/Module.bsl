
///////////////////////////////////////////////////////////////////////////////////////////////////////
// Copyright (c) 2022, ООО 1С-Софт
// Все права защищены. Эта программа и сопроводительные материалы предоставляются 
// в соответствии с условиями лицензии Attribution 4.0 International (CC BY 4.0)
// Текст лицензии доступен по ссылке:
// https://creativecommons.org/licenses/by/4.0/legalcode
///////////////////////////////////////////////////////////////////////////////////////////////////////

#Область ПрограммныйИнтерфейс

// Заполнить таблицу оборудование на форме
//
// Параметры:
//  Форма - ФормаКлиентскогоПриложения - Форма, содержит в том числе:
//    Оборудование - ТаблицаЗначений - Таблица со списком подключаемого торгового оборудования
//  ПоддерживаемыеТипыПодключаемогоОборудования - Строка - Поддерживаемые типы оборудования.
//
Процедура ЗаполнитьТаблицуОборудование(Форма, ПоддерживаемыеТипыПодключаемогоОборудования) Экспорт
	
	ТипыПО = СтроковыеФункцииКлиентСервер.РазложитьСтрокуВМассивПодстрок(ПоддерживаемыеТипыПодключаемогоОборудования, 
		",", Истина, Истина);
	
	РабочееМесто = МенеджерОборудованияВызовСервера.РабочееМестоКлиента();
	СписокОборудования = МенеджерОборудованияВызовСервера.ОборудованиеПоПараметрам(
		ТипыПО,
		Неопределено,
		РабочееМесто);
	
	Для Каждого СтрокаТЧ Из СписокОборудования Цикл
		
		Если СтрокаТЧ.ТипОборудования = "ФискальныйРегистратор"
			Или СтрокаТЧ.ТипОборудования = "ККТ" Тогда
				Продолжить;
		КонецЕсли;
		НоваяСтрока = Форма.Оборудование.Добавить();
		ЗаполнитьЗначенияСвойств(НоваяСтрока, СтрокаТЧ);
		ИмяЭлемента = СтрШаблон("Перечисление.ТипыПодключаемогоОборудования.%1",СтрокаТЧ.ТипОборудования);
		НоваяСтрока.ТипОборудования = ОбщегоНазначения.ПредопределенныйЭлемент(ИмяЭлемента);
		НоваяСтрока.Подключено		= 1;
		НоваяСтрока.Представление	= ПредставлениеУстройства(НоваяСтрока);
		
	КонецЦикла;
	
КонецПроцедуры

// Возвращает значение системы налогообложения организации на указанную дату.
//
//  Параметры:
//   Организация - СправочникСсылка.Организации - организация для которой нужно определить СНО.
//   Дата - Дата, Неопределено - дата на которую нужно определить тип СНО.
//  
// Возвращаемое значение:
//  СистемыНалогообложенияККТ - ОпределяемыйТип.ТипыСистемНалогообложенияККТРМК - значение СНО.
//
Функция ТипСистемыНалогообложенияККТ(Организация, Дата = Неопределено) Экспорт
	
	СНОККТ = Неопределено;
	ОбщегоНазначенияРМКПереопределяемый.ОпределитьСНОККТДляОрганизации(Организация, Дата, СНОККТ);
	
	Возврат СНОККТ;
	
КонецФункции

// Подготавливает массив для передачи в алкогольных данных в ЕГАИС
//
// Параметры:
//  ПодготовленнаяСтрока - СтрокаТабличнойЧасти - строка с данными.
//
// Возвращаемое значение:
//  Массив
//
Функция ПараметрыАлкогольнойПродукции(ПодготовленнаяСтрока) Экспорт
	
	ПараметрыАлкогольнойПродукции = Новый Массив;
	Если ПодготовленнаяСтрока.АлкогольнаяПродукция Тогда
		
		ПараметрыАлкогольнойПродукции.Добавить(ПодготовленнаяСтрока.Маркируемый);      // 1 - Признак передаваемой акцизной продукции
		ПараметрыАлкогольнойПродукции.Добавить(ПодготовленнаяСтрока.КодАкцизнойМарки); // 2 - Штрихкод марки алкогольной продукции
		ПараметрыАлкогольнойПродукции.Добавить(10 * ПодготовленнаяСтрока.ОбъемДАЛ);    // 3 - Объем алкогольной продукции
		ПараметрыАлкогольнойПродукции.Добавить(ПодготовленнаяСтрока.Крепость);         // 4 - Крепость алкогольной продукции
		ПараметрыАлкогольнойПродукции.Добавить(ПодготовленнаяСтрока.КодВидаПродукции); // 5 - КодВидаПродукции - код вида продукции по классификатору
		
	КонецЕсли;
	
	Возврат ПараметрыАлкогольнойПродукции;
	
КонецФункции // ПараметрыАлкогольнойПродукции()

// Проверяет наличие в таблице товаров алкогольной продукция ЕГАИС по реквизиту НеобходимостьВводаКодаМаркировки
//
// Параметры:
//  ЧекККМ - ОпределяемыйТип.ЧекККМРМК
//
// Возвращаемое значение:
//  ЕстьПродукцияЕГАИС - Булево
//
Функция ЕстьПродукцияЕГАИС(ЧекККМ) Экспорт
	
	Результат = Ложь;
	ОбщегоНазначенияРМКПереопределяемый.ПроверитьНаличиеПродукцииЕГАИСВЧекККМ(ЧекККМ, Результат);
	
	Возврат Результат;
	
КонецФункции

// Функция получает реквизиты кассы.
//
// Параметры:
//  КассаККМ - ОпределяемыйТип.КассыККМРМК - Ссылка на кассу ККМ.
//  РабочееМесто - ОпределяемыйТип.РабочееМестоРМК, Неопределено - (необязательный) ссылка на рабочее место.
//
// Возвращаемое значение:
//  Структура - параметры кассы ккм.
//
Функция РеквизитыКассыККМ(КассаККМ, РабочееМесто = Неопределено) Экспорт
	
	Реквизиты = Новый Структура;
	Реквизиты.Вставить("Организация");
	Реквизиты.Вставить("ТорговыйОбъект");
	Реквизиты.Вставить("РабочееМесто");
	Реквизиты.Вставить("КассаККМ");
	
	ОбщегоНазначенияРМКПереопределяемый.ЗаполнитьРеквизитыКассыККМ(КассаККМ, РабочееМесто, Реквизиты);
	
	Возврат Реквизиты;
	
КонецФункции

// Определяет актуальную ставку НДС для товара по данным СНО
//
// Параметры:
//  Объект - ДанныеФормыСтруктура - данные текущего объекта.
//  ТекущаяСтрока - СтрокаТабличнойЧасти - текущая строка.
//  СистемаНалогообложенияПоУмолчанию - ОпределяемыйТип.ТипыСистемНалогообложенияККТРМК - СНО по умолчанию в РМК.
//
// Возвращаемое значение:
//  АктуальнаяСтавкаНДС - ОпределяемыйТип.СтавкаНДСРМК.
//
Функция АктуальнаяСтавкаНДСДляТовара(Объект, ТекущаяСтрока, СистемаНалогообложенияПоУмолчанию = Неопределено) Экспорт
	
	СтавкаНДС = ТекущаяСтрока.СтавкаНДС;
	
	Если ЗначениеЗаполнено(ТекущаяСтрока.Номенклатура) Тогда
		ОбщегоНазначенияРМКПереопределяемый.ЗаполнитьСтавкуНДС(Объект,
			ТекущаяСтрока,
			СистемаНалогообложенияПоУмолчанию,
			СтавкаНДС);
	КонецЕсли;
	
	Возврат СтавкаНДС;
	
КонецФункции

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

Функция ПредставлениеУстройства(СтрокаТЧ)
	
	Представление = "";
	
	Если СтрокаТЧ.ТипОборудования = Перечисления.ТипыПодключаемогоОборудования.ВесыСПечатьюЭтикеток Тогда
		Представление = НСтр("ru = 'Весы с печатью этикеток';
							|en = 'Label printing scales'");
	ИначеЕсли СтрокаТЧ.ТипОборудования = Перечисления.ТипыПодключаемогоОборудования.ДисплейПокупателя Тогда
		Представление = НСтр("ru = 'Дисплей покупателя';
							|en = 'Customer display'");
	ИначеЕсли СтрокаТЧ.ТипОборудования = Перечисления.ТипыПодключаемогоОборудования.СканерШтрихкода Тогда
		Представление = НСтр("ru = 'Сканер штрихкода';
							|en = 'Barcode scanner'");
	ИначеЕсли СтрокаТЧ.ТипОборудования = Перечисления.ТипыПодключаемогоОборудования.СчитывательМагнитныхКарт Тогда
		Представление = НСтр("ru = 'Считыватель магнитных карт';
							|en = 'Magnetic stripe card reader'");
	ИначеЕсли СтрокаТЧ.ТипОборудования = Перечисления.ТипыПодключаемогоОборудования.ТерминалСбораДанных Тогда
		Представление = НСтр("ru = 'Терминал сбора данных';
							|en = 'Portable data terminal'");
	ИначеЕсли СтрокаТЧ.ТипОборудования = Перечисления.ТипыПодключаемогоОборудования.ФискальныйРегистратор Тогда
		Представление = НСтр("ru = 'Фискальный регистратор';
							|en = 'Fiscal register'");
	ИначеЕсли СтрокаТЧ.ТипОборудования = Перечисления.ТипыПодключаемогоОборудования.ЭквайринговыйТерминал Тогда
		Представление = НСтр("ru = 'Эквайринговый терминал';
							|en = 'POS terminal'");
	ИначеЕсли СтрокаТЧ.ТипОборудования = Перечисления.ТипыПодключаемогоОборудования.ЭлектронныеВесы Тогда
		Представление = НСтр("ru = 'Электронные весы';
							|en = 'Electronic scales'");
	КонецЕсли;
	
	Возврат Представление;
	
КонецФункции

#КонецОбласти

