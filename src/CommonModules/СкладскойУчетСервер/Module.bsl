#Область ПрограммныйИнтерфейс

// Возвращает табличную часть с данными по остаткам приходных ордеров
//
// Параметры:
//  Объект	 - ДанныеФормыСтруктура, ДокументОбъект	 - Заполняемый документ
//  ДополнительныеПараметры	 - Структура								 - Дополнительные параметры
//
Функция ПолучитьТаблицуОстатковПоПриходнымОрдерам(Объект, ДополнительныеПараметры) Экспорт 
	
	Если ДополнительныеПараметры = Неопределено Тогда
		ПоложениеСклада = Неопределено;
		ПоложениеДокументаПоступления = Неопределено;
		ТолькоОстатки = Ложь;
	Иначе
		
		Если Не ДополнительныеПараметры.Свойство("ПоложениеСклада") тогда
			ПоложениеСклада = Неопределено;
		Иначе
			ПоложениеСклада = ДополнительныеПараметры.ПоложениеСклада;
		КонецЕсли;
		
		Если Не ДополнительныеПараметры.Свойство("ПоложениеДокументаПоступления") Тогда
			ПоложениеДокументаПоступления = Неопределено;
		Иначе
			ПоложениеДокументаПоступления = ДополнительныеПараметры.ПоложениеДокументаПоступления;
		КонецЕсли;
		
		Если Не ДополнительныеПараметры.Свойство("ТолькоОстатки") Тогда
			ТолькоОстатки = Ложь;
		Иначе
			ТолькоОстатки = ДополнительныеПараметры.ТолькоОстатки;
		КонецЕсли;
		
	КонецЕсли;
	
	Запрос = Новый Запрос;
	
	Запрос.УстановитьПараметр("Контрагент", Объект.Контрагент);
	Запрос.УстановитьПараметр("Организация", Объект.Организация);
	Запрос.УстановитьПараметр("Ссылка", Объект.Ссылка);
	
	СкладВТабличнойЧасти = ПоложениеСклада = Перечисления.ПоложениеРеквизитаНаФорме.ВТабличнойЧасти;
	ДокументПоступленияВТабличнойЧасти = ПоложениеДокументаПоступления = Перечисления.ПоложениеРеквизитаНаФорме.ВТабличнойЧасти;
	
	Запрос.УстановитьПараметр("СкладВТабличнойЧасти", СкладВТабличнойЧасти);
	Запрос.УстановитьПараметр("Склад", Объект.СтруктурнаяЕдиница);
	
	Запрос.УстановитьПараметр("ДокументПоступленияВТабличнойЧасти", ДокументПоступленияВТабличнойЧасти);
	Запрос.УстановитьПараметр("ДокументПоступления", Объект.ДокументПоступления);
	
	Запрос.Текст =
	"ВЫБРАТЬ
	|	ЗапасыКПоступлениюНаСкладыОстатки.Номенклатура КАК Номенклатура,
	|	ЗапасыКПоступлениюНаСкладыОстатки.Характеристика КАК Характеристика,
	|	ЗапасыКПоступлениюНаСкладыОстатки.Партия КАК Партия,
	|	ЗапасыКПоступлениюНаСкладыОстатки.СтруктурнаяЕдиница КАК СтруктурнаяЕдиница,
	|	СУММА(ЗапасыКПоступлениюНаСкладыОстатки.КоличествоОстаток) КАК Количество,
	|	ЗапасыКПоступлениюНаСкладыОстатки.ДокументОснование КАК ДокументОснование,
	|	ЗапасыКПоступлениюНаСкладыОстатки.Номенклатура.ЕдиницаИзмерения КАК НоменклатураЕдиницаИзмерения,
	|	ЗапасыКПоступлениюНаСкладыОстатки.Ячейка КАК Ячейка
	|ПОМЕСТИТЬ ВТЗапасыКПоступлению
	|ИЗ
	|	РегистрНакопления.ЗапасыКПоступлениюНаСклады.Остатки(
	|			,
	|			ТИПЗНАЧЕНИЯ(ДокументОснование) = ТИП(Документ.ПриходныйОрдер)
	|				И Организация = &Организация
	|				И ВЫБОР
	|					КОГДА НЕ &СкладВТабличнойЧасти
	|						ТОГДА СтруктурнаяЕдиница = &Склад
	|					ИНАЧЕ ИСТИНА
	|				КОНЕЦ
	|				И ВЫБОР
	|					КОГДА НЕ &ДокументПоступленияВТабличнойЧасти
	|						ТОГДА ДокументОснование = &ДокументПоступления
	|					ИНАЧЕ ИСТИНА
	|				КОНЕЦ
	|				И ВЫБОР
	|					КОГДА НЕ ДокументОснование.Контрагент ЕСТЬ NULL
	|						ТОГДА ДокументОснование.Контрагент = &Контрагент
	|					ИНАЧЕ ИСТИНА
	|				КОНЕЦ) КАК ЗапасыКПоступлениюНаСкладыОстатки
	|
	|СГРУППИРОВАТЬ ПО
	|	ЗапасыКПоступлениюНаСкладыОстатки.Номенклатура,
	|	ЗапасыКПоступлениюНаСкладыОстатки.Характеристика,
	|	ЗапасыКПоступлениюНаСкладыОстатки.Партия,
	|	ЗапасыКПоступлениюНаСкладыОстатки.СтруктурнаяЕдиница,
	|	ЗапасыКПоступлениюНаСкладыОстатки.ДокументОснование,
	|	ЗапасыКПоступлениюНаСкладыОстатки.Номенклатура.ЕдиницаИзмерения,
	|	ЗапасыКПоступлениюНаСкладыОстатки.Ячейка
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ЗапасыКПоступлениюНаСклады.Номенклатура,
	|	ЗапасыКПоступлениюНаСклады.Характеристика,
	|	ЗапасыКПоступлениюНаСклады.Партия,
	|	ЗапасыКПоступлениюНаСклады.СтруктурнаяЕдиница,
	|	СУММА(ЗапасыКПоступлениюНаСклады.Количество),
	|	ЗапасыКПоступлениюНаСклады.ДокументОснование,
	|	ЗапасыКПоступлениюНаСклады.Номенклатура.ЕдиницаИзмерения,
	|	ЗапасыКПоступлениюНаСклады.Ячейка
	|ИЗ
	|	РегистрНакопления.ЗапасыКПоступлениюНаСклады КАК ЗапасыКПоступлениюНаСклады
	|ГДЕ
	|	ЗапасыКПоступлениюНаСклады.Регистратор = &Ссылка
	|	И ВЫБОР
	|			КОГДА НЕ &СкладВТабличнойЧасти
	|				ТОГДА ЗапасыКПоступлениюНаСклады.СтруктурнаяЕдиница = &Склад
	|			ИНАЧЕ ИСТИНА
	|		КОНЕЦ
	|	И ВЫБОР
	|			КОГДА НЕ &ДокументПоступленияВТабличнойЧасти
	|				ТОГДА ЗапасыКПоступлениюНаСклады.ДокументОснование = &ДокументПоступления
	|			ИНАЧЕ ИСТИНА
	|		КОНЕЦ
	|
	|СГРУППИРОВАТЬ ПО
	|	ЗапасыКПоступлениюНаСклады.ДокументОснование,
	|	ЗапасыКПоступлениюНаСклады.СтруктурнаяЕдиница,
	|	ЗапасыКПоступлениюНаСклады.Партия,
	|	ЗапасыКПоступлениюНаСклады.Номенклатура,
	|	ЗапасыКПоступлениюНаСклады.Характеристика,
	|	ЗапасыКПоступлениюНаСклады.Номенклатура.ЕдиницаИзмерения,
	|	ЗапасыКПоступлениюНаСклады.Ячейка
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВТЗапасыКПоступлению.Номенклатура КАК Номенклатура,
	|	ВТЗапасыКПоступлению.Характеристика КАК Характеристика,
	|	ВТЗапасыКПоступлению.Партия КАК Партия,
	|	ВТЗапасыКПоступлению.СтруктурнаяЕдиница КАК СтруктурнаяЕдиница,
	|	СУММА(ВТЗапасыКПоступлению.Количество) КАК Количество,
	|	ВТЗапасыКПоступлению.ДокументОснование КАК ДокументПоступления,
	|	ВТЗапасыКПоступлению.НоменклатураЕдиницаИзмерения КАК ЕдиницаИзмерения,
	|	ВТЗапасыКПоступлению.Ячейка КАК Ячейка
	|ПОМЕСТИТЬ ВТЗапасыКПоступлениюИтог
	|ИЗ
	|	ВТЗапасыКПоступлению КАК ВТЗапасыКПоступлению
	|
	|СГРУППИРОВАТЬ ПО
	|	ВТЗапасыКПоступлению.Партия,
	|	ВТЗапасыКПоступлению.СтруктурнаяЕдиница,
	|	ВТЗапасыКПоступлению.Номенклатура,
	|	ВТЗапасыКПоступлению.ДокументОснование,
	|	ВТЗапасыКПоступлению.НоменклатураЕдиницаИзмерения,
	|	ВТЗапасыКПоступлению.Характеристика,
	|	ВТЗапасыКПоступлению.Ячейка
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВТЗапасыКПоступлению.Номенклатура КАК Номенклатура,
	|	ВТЗапасыКПоступлению.Характеристика КАК Характеристика,
	|	ВТЗапасыКПоступлению.Партия КАК Партия,
	|	ВТЗапасыКПоступлению.СтруктурнаяЕдиница КАК СтруктурнаяЕдиница,
	|	СУММА(ВТЗапасыКПоступлению.Количество) КАК Количество,
	|	ВТЗапасыКПоступлению.ДокументОснование КАК ДокументПоступления,
	|	ВТЗапасыКПоступлению.НоменклатураЕдиницаИзмерения КАК ЕдиницаИзмерения
	|ПОМЕСТИТЬ ВТЗапасыКПоступлениюИтогБезЯчеек
	|ИЗ
	|	ВТЗапасыКПоступлению КАК ВТЗапасыКПоступлению
	|
	|СГРУППИРОВАТЬ ПО
	|	ВТЗапасыКПоступлению.Партия,
	|	ВТЗапасыКПоступлению.СтруктурнаяЕдиница,
	|	ВТЗапасыКПоступлению.Номенклатура,
	|	ВТЗапасыКПоступлению.ДокументОснование,
	|	ВТЗапасыКПоступлению.НоменклатураЕдиницаИзмерения,
	|	ВТЗапасыКПоступлению.Характеристика
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВТЗапасыКПоступлениюИтогБезЯчеек.Номенклатура КАК Номенклатура,
	|	ВТЗапасыКПоступлениюИтогБезЯчеек.Характеристика КАК Характеристика,
	|	ВТЗапасыКПоступлениюИтогБезЯчеек.Партия КАК Партия,
	|	ВТЗапасыКПоступлениюИтогБезЯчеек.СтруктурнаяЕдиница КАК СтруктурнаяЕдиница,
	|	СУММА(ЕСТЬNULL(СерииНоменклатурыКПоступлениюОстатки.КоличествоОстаток, 0)) КАК Количество,
	|	СерииНоменклатурыКПоступлениюОстатки.Серия КАК Серия,
	|	СерииНоменклатурыКПоступлениюОстатки.ДокументОснование КАК ДокументПоступления
	|ПОМЕСТИТЬ ВТСерииОстаткиИтог
	|ИЗ
	|	ВТЗапасыКПоступлениюИтогБезЯчеек КАК ВТЗапасыКПоступлениюИтогБезЯчеек
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрНакопления.СерииНоменклатурыКПоступлению.Остатки(
	|				,
	|				ТИПЗНАЧЕНИЯ(ДокументОснование) = ТИП(Документ.ПриходныйОрдер)
	|					И Организация = &Организация
	|					И ВЫБОР
	|						КОГДА НЕ &СкладВТабличнойЧасти
	|							ТОГДА СтруктурнаяЕдиница = &Склад
	|						ИНАЧЕ ИСТИНА
	|					КОНЕЦ
	|					И ВЫБОР
	|						КОГДА НЕ &ДокументПоступленияВТабличнойЧасти
	|							ТОГДА ДокументОснование = &ДокументПоступления
	|						ИНАЧЕ ИСТИНА
	|					КОНЕЦ
	|					И ВЫБОР
	|						КОГДА НЕ ДокументОснование.Контрагент ЕСТЬ NULL
	|							ТОГДА ДокументОснование.Контрагент = &Контрагент
	|						ИНАЧЕ ИСТИНА
	|					КОНЕЦ) КАК СерииНоменклатурыКПоступлениюОстатки
	|		ПО ВТЗапасыКПоступлениюИтогБезЯчеек.Номенклатура = СерииНоменклатурыКПоступлениюОстатки.Номенклатура
	|			И ВТЗапасыКПоступлениюИтогБезЯчеек.Характеристика = СерииНоменклатурыКПоступлениюОстатки.Характеристика
	|			И ВТЗапасыКПоступлениюИтогБезЯчеек.Партия = СерииНоменклатурыКПоступлениюОстатки.Партия
	|			И ВТЗапасыКПоступлениюИтогБезЯчеек.ДокументПоступления = СерииНоменклатурыКПоступлениюОстатки.ДокументОснование
	|			И ВТЗапасыКПоступлениюИтогБезЯчеек.СтруктурнаяЕдиница = СерииНоменклатурыКПоступлениюОстатки.СтруктурнаяЕдиница
	|ГДЕ
	|	ЕСТЬNULL(СерииНоменклатурыКПоступлениюОстатки.КоличествоОстаток, 0) > 0
	|
	|СГРУППИРОВАТЬ ПО
	|	ВТЗапасыКПоступлениюИтогБезЯчеек.Номенклатура,
	|	ВТЗапасыКПоступлениюИтогБезЯчеек.Характеристика,
	|	ВТЗапасыКПоступлениюИтогБезЯчеек.Партия,
	|	ВТЗапасыКПоступлениюИтогБезЯчеек.СтруктурнаяЕдиница,
	|	СерииНоменклатурыКПоступлениюОстатки.Серия,
	|	СерииНоменклатурыКПоступлениюОстатки.ДокументОснование
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ВТЗапасыКПоступлениюИтогБезЯчеек.Номенклатура,
	|	ВТЗапасыКПоступлениюИтогБезЯчеек.Характеристика,
	|	ВТЗапасыКПоступлениюИтогБезЯчеек.Партия,
	|	ВТЗапасыКПоступлениюИтогБезЯчеек.СтруктурнаяЕдиница,
	|	СУММА(ЕСТЬNULL(СерииНоменклатурыКПоступлению.Количество, 0)),
	|	СерииНоменклатурыКПоступлению.Серия,
	|	СерииНоменклатурыКПоступлению.ДокументОснование
	|ИЗ
	|	ВТЗапасыКПоступлениюИтогБезЯчеек КАК ВТЗапасыКПоступлениюИтогБезЯчеек
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрНакопления.СерииНоменклатурыКПоступлению КАК СерииНоменклатурыКПоступлению
	|		ПО ВТЗапасыКПоступлениюИтогБезЯчеек.Номенклатура = СерииНоменклатурыКПоступлению.Номенклатура
	|			И ВТЗапасыКПоступлениюИтогБезЯчеек.Характеристика = СерииНоменклатурыКПоступлению.Характеристика
	|			И ВТЗапасыКПоступлениюИтогБезЯчеек.Партия = СерииНоменклатурыКПоступлению.Партия
	|			И ВТЗапасыКПоступлениюИтогБезЯчеек.ДокументПоступления = СерииНоменклатурыКПоступлению.ДокументОснование
	|			И ВТЗапасыКПоступлениюИтогБезЯчеек.СтруктурнаяЕдиница = СерииНоменклатурыКПоступлению.СтруктурнаяЕдиница
	|ГДЕ
	|	СерииНоменклатурыКПоступлению.Регистратор = &Ссылка
	|	И ВЫБОР
	|			КОГДА НЕ &СкладВТабличнойЧасти
	|				ТОГДА СерииНоменклатурыКПоступлению.СтруктурнаяЕдиница = &Склад
	|			ИНАЧЕ ИСТИНА
	|		КОНЕЦ
	|	И ВЫБОР
	|			КОГДА НЕ &ДокументПоступленияВТабличнойЧасти
	|				ТОГДА СерииНоменклатурыКПоступлению.ДокументОснование = &ДокументПоступления
	|			ИНАЧЕ ИСТИНА
	|		КОНЕЦ
	|	И ЕСТЬNULL(СерииНоменклатурыКПоступлению.Количество, 0) > 0
	|
	|СГРУППИРОВАТЬ ПО
	|	ВТЗапасыКПоступлениюИтогБезЯчеек.Номенклатура,
	|	ВТЗапасыКПоступлениюИтогБезЯчеек.Характеристика,
	|	ВТЗапасыКПоступлениюИтогБезЯчеек.Партия,
	|	ВТЗапасыКПоступлениюИтогБезЯчеек.СтруктурнаяЕдиница,
	|	СерииНоменклатурыКПоступлению.Серия,
	|	СерииНоменклатурыКПоступлению.ДокументОснование
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВТЗапасыКПоступлениюИтог.Номенклатура КАК Номенклатура,
	|	ВТЗапасыКПоступлениюИтог.Характеристика КАК Характеристика,
	|	ВТЗапасыКПоступлениюИтог.Партия КАК Партия,
	|	ВТЗапасыКПоступлениюИтог.СтруктурнаяЕдиница КАК СтруктурнаяЕдиница,
	|	СУММА(ВТЗапасыКПоступлениюИтог.Количество) КАК Количество,
	|	ВТЗапасыКПоступлениюИтог.ДокументПоступления КАК ДокументПоступления,
	|	ВТЗапасыКПоступлениюИтог.ЕдиницаИзмерения КАК ЕдиницаИзмерения,
	|	ВТЗапасыКПоступлениюИтог.Ячейка КАК Ячейка
	|ИЗ
	|	ВТЗапасыКПоступлениюИтог КАК ВТЗапасыКПоступлениюИтог
	|
	|СГРУППИРОВАТЬ ПО
	|	ВТЗапасыКПоступлениюИтог.СтруктурнаяЕдиница,
	|	ВТЗапасыКПоступлениюИтог.ЕдиницаИзмерения,
	|	ВТЗапасыКПоступлениюИтог.Номенклатура,
	|	ВТЗапасыКПоступлениюИтог.ДокументПоступления,
	|	ВТЗапасыКПоступлениюИтог.Партия,
	|	ВТЗапасыКПоступлениюИтог.Характеристика,
	|	ВТЗапасыКПоступлениюИтог.Ячейка
	|
	|УПОРЯДОЧИТЬ ПО
	|	Номенклатура,
	|	Характеристика,
	|	Партия,
	|	СтруктурнаяЕдиница,
	|	ДокументПоступления
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВТСерииОстаткиИтог.Номенклатура КАК Номенклатура,
	|	ВТСерииОстаткиИтог.Характеристика КАК Характеристика,
	|	ВТСерииОстаткиИтог.Партия КАК Партия,
	|	ВТСерииОстаткиИтог.СтруктурнаяЕдиница КАК СтруктурнаяЕдиница,
	|	СУММА(ВТСерииОстаткиИтог.Количество) КАК Количество,
	|	ВТСерииОстаткиИтог.Серия КАК Серия,
	|	ВТСерииОстаткиИтог.ДокументПоступления КАК ДокументПоступления
	|ИЗ
	|	ВТСерииОстаткиИтог КАК ВТСерииОстаткиИтог
	|
	|СГРУППИРОВАТЬ ПО
	|	ВТСерииОстаткиИтог.Номенклатура,
	|	ВТСерииОстаткиИтог.ДокументПоступления,
	|	ВТСерииОстаткиИтог.Характеристика,
	|	ВТСерииОстаткиИтог.СтруктурнаяЕдиница,
	|	ВТСерииОстаткиИтог.Партия,
	|	ВТСерииОстаткиИтог.Серия
	|
	|УПОРЯДОЧИТЬ ПО
	|	Номенклатура,
	|	Характеристика,
	|	Партия,
	|	СтруктурнаяЕдиница,
	|	ДокументПоступления,
	|	Серия";
	
	ПакетЗапросов = Запрос.ВыполнитьПакет();

	Если ТолькоОстатки Тогда

		СтруктураВозврата = Новый Структура();
		СтруктураВозврата.Вставить("ТаблицаОстатковНоменклатуры", ПакетЗапросов[4].Выгрузить());
		СтруктураВозврата.Вставить("ТаблицаОстатковСерииНоменклатуры", ПакетЗапросов[5].Выгрузить());
		
		Возврат СтруктураВозврата;
		
	КонецЕсли;
	
	Если ТипЗнч(Объект.Ссылка) = Тип("ДокументСсылка.АвансовыйОтчет") Тогда
		Возврат ПоместитьВоВременноеХранилище(ПакетЗапросов[4].Выгрузить(), Новый УникальныйИдентификатор);
	КонецЕсли;
	
	ВыборкаЗапасы = ПакетЗапросов[4].Выбрать();
	ТаблицаСерии = ПакетЗапросов[5].Выгрузить();
	
	СтруктураПоискаСерий = Новый Структура("Номенклатура, Характеристика, Партия, СтруктурнаяЕдиница, ДокументПоступления");
	ТаблицаЗапасы = Объект.Запасы.Выгрузить();
	
	КлючСвязи = 1;
	
	Пока ВыборкаЗапасы.Следующий() Цикл
		
		Если Не ЗначениеЗаполнено(ВыборкаЗапасы.Количество)Тогда
			Продолжить
		КонецЕсли;
		
		НоваяСтрока = ТаблицаЗапасы.Добавить();
		НоваяСтрока.КлючСвязи = КлючСвязи;
		
		ЗаполнитьЗначенияСвойств(НоваяСтрока, ВыборкаЗапасы);
		
		ЗаполнитьЗначенияСвойств(СтруктураПоискаСерий, ВыборкаЗапасы);
		НайденныеСерии = ТаблицаСерии.НайтиСтроки(СтруктураПоискаСерий);
		
		Если Не НайденныеСерии.Количество() Тогда 
			КлючСвязи = КлючСвязи + 1;
			Продолжить
		КонецЕсли;
		
		КоличествоЗапасов = НоваяСтрока.Количество;
		
		Для Каждого НайденнаяСтрока Из НайденныеСерии Цикл
			
			Если Не НайденнаяСтрока.Количество > 0 Тогда
				Продолжить;
			КонецЕсли;
			
			НоваяСтрокаСерии = Объект.СерииНоменклатуры.Добавить();
			НоваяСтрокаСерии.КлючСвязи = КлючСвязи;
			
			ЗаполнитьЗначенияСвойств(НоваяСтрокаСерии, НайденнаяСтрока);
			
			Если НоваяСтрокаСерии.Количество >= КоличествоЗапасов Тогда
				НоваяСтрокаСерии.Количество = КоличествоЗапасов;
				НайденнаяСтрока.Количество = НайденнаяСтрока.Количество - НоваяСтрокаСерии.Количество;
				Прервать;
			КонецЕсли;
			
			КоличествоЗапасов = КоличествоЗапасов - НоваяСтрокаСерии.Количество;
			НайденнаяСтрока.Количество = НайденнаяСтрока.Количество - НоваяСтрокаСерии.Количество;
			
		КонецЦикла;
		
		НоваяСтрока.СерииНоменклатуры = СерииНоменклатурыУНФ.ПредставлениеСерийНоменклатуры(Объект.СерииНоменклатуры, НоваяСтрока.КлючСвязи);
		
		КлючСвязи = КлючСвязи + 1;
	КонецЦикла;
	
	Возврат ПоместитьВоВременноеХранилище(ТаблицаЗапасы, Новый УникальныйИдентификатор);
	
КонецФункции

// Возвращает табличную часть с данными по остаткам расходных ордеров
//
// Параметры:
//  Объект	 - ДанныеФормыСтруктура, ДокументОбъект	 - Заполняемый документ
//  ДополнительныеПараметры	 - Структура								 - Дополнительные параметры
//
Функция ПолучитьТаблицуОстатковПоРасходнымОрдерам(Объект, ДополнительныеПараметры) Экспорт 
	
	ИмяПоляСтруктурнаяЕдиница = "СтруктурнаяЕдиница";
	
	Если ДополнительныеПараметры = Неопределено Тогда
		ПоложениеСклада = Неопределено;
		ПоложениеДокументаПоступления = Неопределено;
		ТолькоОстатки = Ложь;
	Иначе
		
		Если Не ДополнительныеПараметры.Свойство("ПоложениеСклада") тогда
			ПоложениеСклада = Неопределено;
		Иначе
			ПоложениеСклада = ДополнительныеПараметры.ПоложениеСклада;
		КонецЕсли;
		
		Если Не ДополнительныеПараметры.Свойство("ПоложениеДокументаПоступления") Тогда
			ПоложениеДокументаПоступления = Неопределено;
		Иначе
			ПоложениеДокументаПоступления = ДополнительныеПараметры.ПоложениеДокументаПоступления;
		КонецЕсли;
		
		Если Не ДополнительныеПараметры.Свойство("ТолькоОстатки") Тогда
			ТолькоОстатки = Ложь;
		Иначе
			ТолькоОстатки = ДополнительныеПараметры.ТолькоОстатки;
		КонецЕсли;
		
		Если ДополнительныеПараметры.Свойство("ИмяПоляСтруктурнаяЕдиница") Тогда
			ИмяПоляСтруктурнаяЕдиница = ДополнительныеПараметры.ИмяПоляСтруктурнаяЕдиница;
		КонецЕсли;
		
	КонецЕсли;
	
	Запрос = Новый Запрос;
	
	Запрос.УстановитьПараметр("Контрагент", Объект.Контрагент);
	Запрос.УстановитьПараметр("Организация", Объект.Организация);
	Запрос.УстановитьПараметр("Ссылка", Объект.Ссылка);
	
	СкладВТабличнойЧасти = ПоложениеСклада = Перечисления.ПоложениеРеквизитаНаФорме.ВТабличнойЧасти;
	ДокументПоступленияВТабличнойЧасти = ПоложениеДокументаПоступления = Перечисления.ПоложениеРеквизитаНаФорме.ВТабличнойЧасти;
	
	Запрос.УстановитьПараметр("СкладВТабличнойЧасти", СкладВТабличнойЧасти);
	Запрос.УстановитьПараметр("Склад", Объект[ИмяПоляСтруктурнаяЕдиница]);
	
	Запрос.УстановитьПараметр("ДокументПоступленияВТабличнойЧасти", ДокументПоступленияВТабличнойЧасти);
	Запрос.УстановитьПараметр("ДокументПоступления", Объект.ДокументПоступления);
	
	Запрос.Текст =
	"ВЫБРАТЬ
	|	ЗапасыКРасходуСоСкладовОстатки.Номенклатура КАК Номенклатура,
	|	ЗапасыКРасходуСоСкладовОстатки.Характеристика КАК Характеристика,
	|	ЗапасыКРасходуСоСкладовОстатки.Партия КАК Партия,
	|	ЗапасыКРасходуСоСкладовОстатки.СтруктурнаяЕдиница КАК СтруктурнаяЕдиница,
	|	СУММА(ЗапасыКРасходуСоСкладовОстатки.КоличествоОстаток) КАК Количество,
	|	ЗапасыКРасходуСоСкладовОстатки.ДокументОснование КАК ДокументОснование,
	|	ЗапасыКРасходуСоСкладовОстатки.Номенклатура.ЕдиницаИзмерения КАК НоменклатураЕдиницаИзмерения,
	|	ЗапасыКРасходуСоСкладовОстатки.Ячейка КАК Ячейка
	|ПОМЕСТИТЬ ВТЗапасыКОтгрузке
	|ИЗ
	|	РегистрНакопления.ЗапасыКРасходуСоСкладов.Остатки(
	|			,
	|			ТИПЗНАЧЕНИЯ(ДокументОснование) = ТИП(Документ.РасходныйОрдер)
	|				И Организация = &Организация
	|				И ВЫБОР
	|					КОГДА НЕ &СкладВТабличнойЧасти
	|						ТОГДА СтруктурнаяЕдиница = &Склад
	|					ИНАЧЕ ИСТИНА
	|				КОНЕЦ
	|				И ВЫБОР
	|					КОГДА НЕ &ДокументПоступленияВТабличнойЧасти
	|						ТОГДА ДокументОснование = &ДокументПоступления
	|					ИНАЧЕ ИСТИНА
	|				КОНЕЦ
	|				И ВЫБОР
	|					КОГДА НЕ ДокументОснование.Контрагент ЕСТЬ NULL
	|						ТОГДА ДокументОснование.Контрагент = &Контрагент
	|					ИНАЧЕ ИСТИНА
	|				КОНЕЦ) КАК ЗапасыКРасходуСоСкладовОстатки
	|
	|СГРУППИРОВАТЬ ПО
	|	ЗапасыКРасходуСоСкладовОстатки.Номенклатура,
	|	ЗапасыКРасходуСоСкладовОстатки.Характеристика,
	|	ЗапасыКРасходуСоСкладовОстатки.Партия,
	|	ЗапасыКРасходуСоСкладовОстатки.СтруктурнаяЕдиница,
	|	ЗапасыКРасходуСоСкладовОстатки.ДокументОснование,
	|	ЗапасыКРасходуСоСкладовОстатки.Номенклатура.ЕдиницаИзмерения,
	|	ЗапасыКРасходуСоСкладовОстатки.Ячейка
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ЗапасыКРасходуСоСкладовОстатки.Номенклатура,
	|	ЗапасыКРасходуСоСкладовОстатки.Характеристика,
	|	ЗапасыКРасходуСоСкладовОстатки.Партия,
	|	ЗапасыКРасходуСоСкладовОстатки.СтруктурнаяЕдиница,
	|	NULL,
	|	ЗапасыКРасходуСоСкладовОстатки.ДокументОснование,
	|	ЗапасыКРасходуСоСкладовОстатки.Номенклатура.ЕдиницаИзмерения,
	|	ЗапасыКРасходуСоСкладовОстатки.Ячейка
	|ИЗ
	|	РегистрНакопления.ЗапасыКРасходуСоСкладов.Остатки(, ) КАК ЗапасыКРасходуСоСкладовОстатки
	|ГДЕ
	|	ВЫБОР
	|			КОГДА НЕ &СкладВТабличнойЧасти
	|				ТОГДА ЗапасыКРасходуСоСкладовОстатки.СтруктурнаяЕдиница = &Склад
	|			ИНАЧЕ ИСТИНА
	|		КОНЕЦ
	|	И ВЫБОР
	|			КОГДА НЕ &ДокументПоступленияВТабличнойЧасти
	|				ТОГДА ЗапасыКРасходуСоСкладовОстатки.ДокументОснование = &ДокументПоступления
	|			ИНАЧЕ ИСТИНА
	|		КОНЕЦ
	|
	|СГРУППИРОВАТЬ ПО
	|	ЗапасыКРасходуСоСкладовОстатки.ДокументОснование,
	|	ЗапасыКРасходуСоСкладовОстатки.СтруктурнаяЕдиница,
	|	ЗапасыКРасходуСоСкладовОстатки.Партия,
	|	ЗапасыКРасходуСоСкладовОстатки.Номенклатура,
	|	ЗапасыКРасходуСоСкладовОстатки.Характеристика,
	|	ЗапасыКРасходуСоСкладовОстатки.Номенклатура.ЕдиницаИзмерения,
	|	ЗапасыКРасходуСоСкладовОстатки.Ячейка
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВТЗапасыКОтгрузке.Номенклатура КАК Номенклатура,
	|	ВТЗапасыКОтгрузке.Характеристика КАК Характеристика,
	|	ВТЗапасыКОтгрузке.Партия КАК Партия,
	|	ВТЗапасыКОтгрузке.СтруктурнаяЕдиница КАК СтруктурнаяЕдиница,
	|	СУММА(ВТЗапасыКОтгрузке.Количество) КАК Количество,
	|	ВТЗапасыКОтгрузке.ДокументОснование КАК ДокументПоступления,
	|	ВТЗапасыКОтгрузке.НоменклатураЕдиницаИзмерения КАК ЕдиницаИзмерения,
	|	ВТЗапасыКОтгрузке.Ячейка КАК Ячейка
	|ПОМЕСТИТЬ ВТЗапасыКОтгрузкеИтог
	|ИЗ
	|	ВТЗапасыКОтгрузке КАК ВТЗапасыКОтгрузке
	|
	|СГРУППИРОВАТЬ ПО
	|	ВТЗапасыКОтгрузке.Партия,
	|	ВТЗапасыКОтгрузке.СтруктурнаяЕдиница,
	|	ВТЗапасыКОтгрузке.Номенклатура,
	|	ВТЗапасыКОтгрузке.ДокументОснование,
	|	ВТЗапасыКОтгрузке.НоменклатураЕдиницаИзмерения,
	|	ВТЗапасыКОтгрузке.Характеристика,
	|	ВТЗапасыКОтгрузке.Ячейка
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВТЗапасыКОтгрузке.Номенклатура КАК Номенклатура,
	|	ВТЗапасыКОтгрузке.Характеристика КАК Характеристика,
	|	ВТЗапасыКОтгрузке.Партия КАК Партия,
	|	ВТЗапасыКОтгрузке.СтруктурнаяЕдиница КАК СтруктурнаяЕдиница,
	|	СУММА(ВТЗапасыКОтгрузке.Количество) КАК Количество,
	|	ВТЗапасыКОтгрузке.ДокументОснование КАК ДокументПоступления,
	|	ВТЗапасыКОтгрузке.НоменклатураЕдиницаИзмерения КАК ЕдиницаИзмерения
	|ПОМЕСТИТЬ ВТЗапасыКОтгрузкеИтогБезЯчеек
	|ИЗ
	|	ВТЗапасыКОтгрузке КАК ВТЗапасыКОтгрузке
	|
	|СГРУППИРОВАТЬ ПО
	|	ВТЗапасыКОтгрузке.Партия,
	|	ВТЗапасыКОтгрузке.СтруктурнаяЕдиница,
	|	ВТЗапасыКОтгрузке.Номенклатура,
	|	ВТЗапасыКОтгрузке.ДокументОснование,
	|	ВТЗапасыКОтгрузке.НоменклатураЕдиницаИзмерения,
	|	ВТЗапасыКОтгрузке.Характеристика
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВТЗапасыКОтгрузкеИтогБезЯчеек.Номенклатура КАК Номенклатура,
	|	ВТЗапасыКОтгрузкеИтогБезЯчеек.Характеристика КАК Характеристика,
	|	ВТЗапасыКОтгрузкеИтогБезЯчеек.Партия КАК Партия,
	|	ВТЗапасыКОтгрузкеИтогБезЯчеек.СтруктурнаяЕдиница КАК СтруктурнаяЕдиница,
	|	СУММА(ЕСТЬNULL(СерииНоменклатурыКРасходуОстатки.КоличествоОстаток, 0)) КАК Количество,
	|	СерииНоменклатурыКРасходуОстатки.Серия КАК Серия,
	|	СерииНоменклатурыКРасходуОстатки.ДокументОснование КАК ДокументПоступления
	|ПОМЕСТИТЬ ВТСерииОстаткиИтог
	|ИЗ
	|	ВТЗапасыКОтгрузкеИтогБезЯчеек КАК ВТЗапасыКОтгрузкеИтогБезЯчеек
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрНакопления.СерииНоменклатурыКРасходу.Остатки(
	|				,
	|				ТИПЗНАЧЕНИЯ(ДокументОснование) = ТИП(Документ.РасходныйОрдер)
	|					И Организация = &Организация
	|					И ВЫБОР
	|						КОГДА НЕ &СкладВТабличнойЧасти
	|							ТОГДА СтруктурнаяЕдиница = &Склад
	|						ИНАЧЕ ИСТИНА
	|					КОНЕЦ
	|					И ВЫБОР
	|						КОГДА НЕ &ДокументПоступленияВТабличнойЧасти
	|							ТОГДА ДокументОснование = &ДокументПоступления
	|						ИНАЧЕ ИСТИНА
	|					КОНЕЦ
	|					И ВЫБОР
	|						КОГДА НЕ ДокументОснование.Контрагент ЕСТЬ NULL
	|							ТОГДА ДокументОснование.Контрагент = &Контрагент
	|						ИНАЧЕ ИСТИНА
	|					КОНЕЦ) КАК СерииНоменклатурыКРасходуОстатки
	|		ПО ВТЗапасыКОтгрузкеИтогБезЯчеек.Номенклатура = СерииНоменклатурыКРасходуОстатки.Номенклатура
	|			И ВТЗапасыКОтгрузкеИтогБезЯчеек.Характеристика = СерииНоменклатурыКРасходуОстатки.Характеристика
	|			И ВТЗапасыКОтгрузкеИтогБезЯчеек.Партия = СерииНоменклатурыКРасходуОстатки.Партия
	|			И ВТЗапасыКОтгрузкеИтогБезЯчеек.ДокументПоступления = СерииНоменклатурыКРасходуОстатки.ДокументОснование
	|			И ВТЗапасыКОтгрузкеИтогБезЯчеек.СтруктурнаяЕдиница = СерииНоменклатурыКРасходуОстатки.СтруктурнаяЕдиница
	|ГДЕ
	|	ЕСТЬNULL(СерииНоменклатурыКРасходуОстатки.КоличествоОстаток, 0) < 0
	|
	|СГРУППИРОВАТЬ ПО
	|	ВТЗапасыКОтгрузкеИтогБезЯчеек.Номенклатура,
	|	ВТЗапасыКОтгрузкеИтогБезЯчеек.Характеристика,
	|	ВТЗапасыКОтгрузкеИтогБезЯчеек.Партия,
	|	ВТЗапасыКОтгрузкеИтогБезЯчеек.СтруктурнаяЕдиница,
	|	СерииНоменклатурыКРасходуОстатки.Серия,
	|	СерииНоменклатурыКРасходуОстатки.ДокументОснование
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ВТЗапасыКОтгрузкеИтогБезЯчеек.Номенклатура,
	|	ВТЗапасыКОтгрузкеИтогБезЯчеек.Характеристика,
	|	ВТЗапасыКОтгрузкеИтогБезЯчеек.Партия,
	|	ВТЗапасыКОтгрузкеИтогБезЯчеек.СтруктурнаяЕдиница,
	|	СУММА(ЕСТЬNULL(СерииНоменклатурыКРасходу.Количество, 0)),
	|	СерииНоменклатурыКРасходу.Серия,
	|	СерииНоменклатурыКРасходу.ДокументОснование
	|ИЗ
	|	ВТЗапасыКОтгрузкеИтогБезЯчеек КАК ВТЗапасыКОтгрузкеИтогБезЯчеек
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрНакопления.СерииНоменклатурыКРасходу КАК СерииНоменклатурыКРасходу
	|		ПО ВТЗапасыКОтгрузкеИтогБезЯчеек.Номенклатура = СерииНоменклатурыКРасходу.Номенклатура
	|			И ВТЗапасыКОтгрузкеИтогБезЯчеек.Характеристика = СерииНоменклатурыКРасходу.Характеристика
	|			И ВТЗапасыКОтгрузкеИтогБезЯчеек.Партия = СерииНоменклатурыКРасходу.Партия
	|			И ВТЗапасыКОтгрузкеИтогБезЯчеек.ДокументПоступления = СерииНоменклатурыКРасходу.ДокументОснование
	|			И ВТЗапасыКОтгрузкеИтогБезЯчеек.СтруктурнаяЕдиница = СерииНоменклатурыКРасходу.СтруктурнаяЕдиница
	|ГДЕ
	|	СерииНоменклатурыКРасходу.Регистратор = &Ссылка
	|	И ВЫБОР
	|			КОГДА НЕ &СкладВТабличнойЧасти
	|				ТОГДА СерииНоменклатурыКРасходу.СтруктурнаяЕдиница = &Склад
	|			ИНАЧЕ ИСТИНА
	|		КОНЕЦ
	|	И ВЫБОР
	|			КОГДА НЕ &ДокументПоступленияВТабличнойЧасти
	|				ТОГДА СерииНоменклатурыКРасходу.ДокументОснование = &ДокументПоступления
	|			ИНАЧЕ ИСТИНА
	|		КОНЕЦ
	|	И ЕСТЬNULL(СерииНоменклатурыКРасходу.Количество, 0) > 0
	|
	|СГРУППИРОВАТЬ ПО
	|	ВТЗапасыКОтгрузкеИтогБезЯчеек.Номенклатура,
	|	ВТЗапасыКОтгрузкеИтогБезЯчеек.Характеристика,
	|	ВТЗапасыКОтгрузкеИтогБезЯчеек.Партия,
	|	ВТЗапасыКОтгрузкеИтогБезЯчеек.СтруктурнаяЕдиница,
	|	СерииНоменклатурыКРасходу.Серия,
	|	СерииНоменклатурыКРасходу.ДокументОснование
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВТЗапасыКОтгрузкеИтог.Номенклатура КАК Номенклатура,
	|	ВТЗапасыКОтгрузкеИтог.Характеристика КАК Характеристика,
	|	ВТЗапасыКОтгрузкеИтог.Партия КАК Партия,
	|	ВТЗапасыКОтгрузкеИтог.СтруктурнаяЕдиница КАК СтруктурнаяЕдиница,
	|	СУММА(-ВТЗапасыКОтгрузкеИтог.Количество) КАК Количество,
	|	ВТЗапасыКОтгрузкеИтог.ДокументПоступления КАК ДокументПоступления,
	|	ВТЗапасыКОтгрузкеИтог.ЕдиницаИзмерения КАК ЕдиницаИзмерения,
	|	ВТЗапасыКОтгрузкеИтог.Ячейка КАК Ячейка
	|ИЗ
	|	ВТЗапасыКОтгрузкеИтог КАК ВТЗапасыКОтгрузкеИтог
	|
	|СГРУППИРОВАТЬ ПО
	|	ВТЗапасыКОтгрузкеИтог.СтруктурнаяЕдиница,
	|	ВТЗапасыКОтгрузкеИтог.ЕдиницаИзмерения,
	|	ВТЗапасыКОтгрузкеИтог.Номенклатура,
	|	ВТЗапасыКОтгрузкеИтог.ДокументПоступления,
	|	ВТЗапасыКОтгрузкеИтог.Партия,
	|	ВТЗапасыКОтгрузкеИтог.Характеристика,
	|	ВТЗапасыКОтгрузкеИтог.Ячейка
	|
	|УПОРЯДОЧИТЬ ПО
	|	Номенклатура,
	|	Характеристика,
	|	Партия,
	|	СтруктурнаяЕдиница,
	|	ДокументПоступления
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВТСерииОстаткиИтог.Номенклатура КАК Номенклатура,
	|	ВТСерииОстаткиИтог.Характеристика КАК Характеристика,
	|	ВТСерииОстаткиИтог.Партия КАК Партия,
	|	ВТСерииОстаткиИтог.СтруктурнаяЕдиница КАК СтруктурнаяЕдиница,
	|	СУММА(-ВТСерииОстаткиИтог.Количество) КАК Количество,
	|	ВТСерииОстаткиИтог.Серия КАК Серия,
	|	ВТСерииОстаткиИтог.ДокументПоступления КАК ДокументПоступления
	|ИЗ
	|	ВТСерииОстаткиИтог КАК ВТСерииОстаткиИтог
	|
	|СГРУППИРОВАТЬ ПО
	|	ВТСерииОстаткиИтог.Номенклатура,
	|	ВТСерииОстаткиИтог.ДокументПоступления,
	|	ВТСерииОстаткиИтог.Характеристика,
	|	ВТСерииОстаткиИтог.СтруктурнаяЕдиница,
	|	ВТСерииОстаткиИтог.Партия,
	|	ВТСерииОстаткиИтог.Серия
	|
	|УПОРЯДОЧИТЬ ПО
	|	Номенклатура,
	|	Характеристика,
	|	Партия,
	|	СтруктурнаяЕдиница,
	|	ДокументПоступления,
	|	Серия";
	
	ПакетЗапросов = Запрос.ВыполнитьПакет();

	Если ТолькоОстатки Тогда

		СтруктураВозврата = Новый Структура();
		СтруктураВозврата.Вставить("ТаблицаОстатковНоменклатуры", ПакетЗапросов[4].Выгрузить());
		СтруктураВозврата.Вставить("ТаблицаОстатковСерииНоменклатуры", ПакетЗапросов[5].Выгрузить());
		
		Возврат СтруктураВозврата;
		
	КонецЕсли;
	
	ВыборкаЗапасы = ПакетЗапросов[4].Выбрать();
	ТаблицаСерии = ПакетЗапросов[5].Выгрузить();
	
	СтруктураПоискаСерий = Новый Структура("Номенклатура, Характеристика, Партия, СтруктурнаяЕдиница, ДокументПоступления");
	ТаблицаЗапасы = Объект.Запасы.Выгрузить();
	
	Если ТаблицаЗапасы.Колонки.Найти("СтруктурнаяЕдиница") = Неопределено Тогда
		ТаблицаЗапасы.Колонки.Добавить("СтруктурнаяЕдиница");
	КонецЕсли;
	
	КлючСвязи = 1;
	
	Пока ВыборкаЗапасы.Следующий() Цикл
		
		Если Не ЗначениеЗаполнено(ВыборкаЗапасы.Количество) Тогда
			Продолжить
		КонецЕсли;
		
		НоваяСтрока = ТаблицаЗапасы.Добавить();
		НоваяСтрока.КлючСвязи = КлючСвязи;
		
		ЗаполнитьЗначенияСвойств(НоваяСтрока, ВыборкаЗапасы);
		
		ЗаполнитьЗначенияСвойств(СтруктураПоискаСерий, ВыборкаЗапасы);
		НайденныеСерии = ТаблицаСерии.НайтиСтроки(СтруктураПоискаСерий);
		
		Если Не НайденныеСерии.Количество() Тогда 
			КлючСвязи = КлючСвязи + 1;
			Продолжить
		КонецЕсли;
		
		КоличествоЗапасов = НоваяСтрока.Количество;
		
		Для Каждого НайденнаяСтрока Из НайденныеСерии Цикл
			
			Если Не НайденнаяСтрока.Количество > 0 Тогда
				Продолжить;
			КонецЕсли;
			
			НоваяСтрокаСерии = Объект.СерииНоменклатуры.Добавить();
			НоваяСтрокаСерии.КлючСвязи = КлючСвязи;
			
			ЗаполнитьЗначенияСвойств(НоваяСтрокаСерии, НайденнаяСтрока);
			
			Если НоваяСтрокаСерии.Количество >= КоличествоЗапасов Тогда
				НоваяСтрокаСерии.Количество = КоличествоЗапасов;
				НайденнаяСтрока.Количество = НайденнаяСтрока.Количество - НоваяСтрокаСерии.Количество;
				Прервать;
			КонецЕсли;
			
			КоличествоЗапасов = КоличествоЗапасов - НоваяСтрокаСерии.Количество;
			НайденнаяСтрока.Количество = НайденнаяСтрока.Количество - НоваяСтрокаСерии.Количество;
			
		КонецЦикла;
		
		НоваяСтрока.СерииНоменклатуры = СерииНоменклатурыУНФ.ПредставлениеСерийНоменклатуры(Объект.СерииНоменклатуры, НоваяСтрока.КлючСвязи);
		
		КлючСвязи = КлючСвязи + 1;
	КонецЦикла;
	
	Возврат ПоместитьВоВременноеХранилище(ТаблицаЗапасы, Новый УникальныйИдентификатор);
	
КонецФункции

// Возвращает табличную часть с данными по остаткам приходных ордеров
//
// Параметры:
//  Форма - ДанныеФормыСтруктура - Заполняемый документ
//  ДополнительныеПараметры - Структура - Дополнительные параметры
//  ИмяТабличнойЧасти - Строка - Имя табличной части документа
//
Процедура РаспределитьНоменклатуруПоОрдерам(Форма, ДополнительныеПараметры = Неопределено, ИмяТабличнойЧасти = "Запасы") Экспорт 
	
	Объект = Форма.Объект;
	
	ТабличнаяЧастьОбъекта = Объект[ИмяТабличнойЧасти];
	ТабличнаяЧасть = Объект[ИмяТабличнойЧасти].Выгрузить();
	
	ТабличнаяЧастьОбъекта.Очистить();
	
	Отгрузка = Ложь;
	ИмяПоляСтруктурнаяЕдиница = "СтруктурнаяЕдиница";
	Если ДополнительныеПараметры = Неопределено Тогда
		ДополнительныеПараметры = Новый Структура("ПоложениеСклада, ПоложениеДокументаПоступления, ТолькоОстатки", Объект.ПоложениеСклада, Объект.ПоложениеДокументаПоступления, Истина);
	Иначе
		ДополнительныеПараметры.Вставить("ТолькоОстатки", Истина);
		
		Если ДополнительныеПараметры.Свойство("Отгрузка") Тогда
			Отгрузка = ДополнительныеПараметры.Отгрузка;
		КонецЕсли;
		
		Если ДополнительныеПараметры.Свойство("ИмяПоляСтруктурнаяЕдиница") Тогда
			ИмяПоляСтруктурнаяЕдиница = ДополнительныеПараметры.ИмяПоляСтруктурнаяЕдиница;
		КонецЕсли;
		
	КонецЕсли;
	
	Если Не Отгрузка Тогда
		ТаблицаОстатков = ПолучитьТаблицуОстатковПоПриходнымОрдерам(Объект, ДополнительныеПараметры);
	Иначе
		ТаблицаОстатков = ПолучитьТаблицуОстатковПоРасходнымОрдерам(Объект, ДополнительныеПараметры);
	КонецЕсли;
	
	ТаблицаОстатковНоменклатуры = ТаблицаОстатков.ТаблицаОстатковНоменклатуры;
	ТаблицаОстатковСерииНоменклатуры = ТаблицаОстатков.ТаблицаОстатковСерииНоменклатуры;
	
	ПараметрыОтбора = Новый Структура("Номенклатура, Характеристика, Партия, СтруктурнаяЕдиница, Ячейка");
	СтруктураПоискаСерий = Новый Структура("Номенклатура, Характеристика, Партия, СтруктурнаяЕдиница, ДокументПоступления");
	
	СтрокиКУдалению = Новый Массив;
	
	КлючСвязи = 1;
	Для Каждого СтрокаТабличнойЧасти Из ТабличнаяЧасть Цикл
		
		Если Не ЗначениеЗаполнено(СтрокаТабличнойЧасти.Номенклатура) Тогда Продолжить КонецЕсли;
		Если Не ЗначениеЗаполнено(СтрокаТабличнойЧасти.Количество) Тогда Продолжить КонецЕсли;
		
		ЗаполнитьЗначенияСвойств(ПараметрыОтбора, СтрокаТабличнойЧасти);
		
		Если ИмяПоляСтруктурнаяЕдиница = "СтруктурнаяЕдиницаРезерв" Тогда
			ПараметрыОтбора.СтруктурнаяЕдиница = СтрокаТабличнойЧасти.СтруктурнаяЕдиницаРезерв;
		КонецЕсли;
		
		НайденныеСтроки = ТаблицаОстатковНоменклатуры.НайтиСтроки(ПараметрыОтбора);
		
		Если Не НайденныеСтроки.Количество() Тогда
			
			НоваяСтрока = ТабличнаяЧастьОбъекта.Добавить();
			ЗаполнитьЗначенияСвойств(НоваяСтрока, СтрокаТабличнойЧасти);
			
			Если ИмяПоляСтруктурнаяЕдиница = "СтруктурнаяЕдиницаРезерв" Тогда
				НоваяСтрока.СтруктурнаяЕдиницаРезерв = СтрокаТабличнойЧасти.СтруктурнаяЕдиницаРезерв;
			КонецЕсли;
			
			НоваяСтрока.КлючСвязи = КлючСвязи;
			КлючСвязи = КлючСвязи + 1;
			
			Продолжить
			
		КонецЕсли;
		
		КоличествоДляРаспределения = СтрокаТабличнойЧасти.Количество;
		
		Для Каждого НайденнаяСтрока Из НайденныеСтроки Цикл
			
			Если Не ЗначениеЗаполнено(НайденнаяСтрока.Количество) Тогда 
				Продолжить
			КонецЕсли;
			
			НоваяСтрока = ТабличнаяЧастьОбъекта.Добавить();
			ЗаполнитьЗначенияСвойств(НоваяСтрока, СтрокаТабличнойЧасти);
			
			Если ИмяПоляСтруктурнаяЕдиница = "СтруктурнаяЕдиницаРезерв" Тогда
				НоваяСтрока.СтруктурнаяЕдиницаРезерв = СтрокаТабличнойЧасти.СтруктурнаяЕдиницаРезерв;
			КонецЕсли;
			
			НоваяСтрока.КлючСвязи = КлючСвязи;
			
			СуммыРасчитаны = Ложь;
			Если КоличествоДляРаспределения >= НайденнаяСтрока.Количество Тогда
				
				НоваяСтрока.Количество = НайденнаяСтрока.Количество;
				НоваяСтрока.ДокументПоступления = НайденнаяСтрока.ДокументПоступления;
				
				КоличествоДляРаспределения = КоличествоДляРаспределения - НоваяСтрока.Количество;
				НайденнаяСтрока.Количество = 0;
				
			Иначе
				
				НоваяСтрока.Количество = КоличествоДляРаспределения;
				НоваяСтрока.ДокументПоступления = НайденнаяСтрока.ДокументПоступления;
				
				НайденнаяСтрока.Количество = НайденнаяСтрока.Количество - НоваяСтрока.Количество;
				КоличествоДляРаспределения = 0;
				
			КонецЕсли;
			
			ЗаполнитьЗначенияСвойств(СтруктураПоискаСерий, НоваяСтрока);
			
			Если ИмяПоляСтруктурнаяЕдиница = "СтруктурнаяЕдиницаРезерв" Тогда
				СтруктураПоискаСерий.СтруктурнаяЕдиница = НоваяСтрока.СтруктурнаяЕдиницаРезерв;
			КонецЕсли;
			
			НайденныеСерии = ТаблицаОстатковСерииНоменклатуры.НайтиСтроки(СтруктураПоискаСерий);
			
			Если НайденныеСерии.Количество() Тогда 
				
				КоличествоЗапасов = НоваяСтрока.Количество;
				
				Для Каждого НайденнаяСтрока Из НайденныеСерии Цикл
					
					Если Не НайденнаяСтрока.Количество > 0 Тогда
						Продолжить;
					КонецЕсли;
					
					НоваяСтрокаСерии = Объект.СерииНоменклатуры.Добавить();
					НоваяСтрокаСерии.КлючСвязи = КлючСвязи;
					
					ЗаполнитьЗначенияСвойств(НоваяСтрокаСерии, НайденнаяСтрока);
					
					Если НоваяСтрокаСерии.Количество >= КоличествоЗапасов Тогда
						НоваяСтрокаСерии.Количество = КоличествоЗапасов;
						НайденнаяСтрока.Количество = НайденнаяСтрока.Количество - НоваяСтрокаСерии.Количество;
						Прервать;
					КонецЕсли;
					
					КоличествоЗапасов = КоличествоЗапасов - НоваяСтрокаСерии.Количество;
					НайденнаяСтрока.Количество = НайденнаяСтрока.Количество - НоваяСтрокаСерии.Количество;
					
				КонецЦикла;
				
			КонецЕсли;
			
			НоваяСтрока.СерииНоменклатуры = СерииНоменклатурыУНФ.ПредставлениеСерийНоменклатуры(Объект.СерииНоменклатуры, НоваяСтрока.КлючСвязи);
			
			КлючСвязи = КлючСвязи + 1;
			
			Если КоличествоДляРаспределения = 0 Тогда Прервать КонецЕсли;
			
		КонецЦикла;
	
	КонецЦикла;
		
КонецПроцедуры

// Возвращает признак видимости колонки приходного ордера в документах
//
// Параметры:
//  Форма - ДанныеФормыСтруктура - Заполняемый документ
//  ИмяТабличнойЧасти - Строка - Имя проверяемой табличной части
//  ИмяСтруктурнойЕдиницы - Строка - Имя проверяемой колонки табличной части
// 
// Возвращаемое значение:
//  Булево - Признак отображения видимости колонки 
Функция ПоказыватьКолонкуДокументПоступления(Форма, НомерСтроки = 0, ИмяТабличнойЧасти = "Запасы", ИмяСтруктурнойЕдиницы = "СтруктурнаяЕдиница") Экспорт 
	
	Если Не ПолучитьФункциональнуюОпцию("ИспользоватьОрдерныйСклад") Тогда
		Возврат Ложь
	КонецЕсли;
	
	Объект = Форма.Объект;
	
	Если Объект.ПоложениеДокументаПоступления = Перечисления.ПоложениеРеквизитаНаФорме.ВШапке Или Не Форма.УчетОстатковПоСкладскимОрдерам Тогда
		Возврат Ложь;
	КонецЕсли;
	
	Если Не НомерСтроки <= 0 Тогда
		ВидУчета = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(Объект[ИмяТабличнойЧасти][НомерСтроки - 1].СтруктурнаяЕдиница, "ВидУчетаОрдерныхСкладов");
		Возврат ВидУчета = Перечисления.ВидыУчетаОрдерныхСкладов.УчетОстатковПоСкладскимОрдерам;
	КонецЕсли;
	
	Для Каждого СтрокаТабличнойЧасти Из Объект[ИмяТабличнойЧасти] Цикл
		
		Если Не ЗначениеЗаполнено(СтрокаТабличнойЧасти[ИмяСтруктурнойЕдиницы]) Тогда
			Продолжить
		КонецЕсли;
		
		ВидУчета = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(СтрокаТабличнойЧасти[ИмяСтруктурнойЕдиницы], "ВидУчетаОрдерныхСкладов");
		Если ВидУчета = Перечисления.ВидыУчетаОрдерныхСкладов.УчетОстатковПоСкладскимОрдерам Тогда
			Возврат Истина;
		КонецЕсли;
		
	КонецЦикла;
	
	Возврат Ложь;
	
КонецФункции

// Заполняет признак видимости колонки приходного ордера в документах
//
// Параметры:
//  Объект - ДанныеФормыСтруктура - Обрабатываемый объект
//
Процедура ЗаполнитьПризнакОбязательногоЗаполненияДокументаОснования(Объект) Экспорт
	
	Если Не ПолучитьФункциональнуюОпцию("ИспользоватьОрдерныйСклад") Тогда
		Возврат
	КонецЕсли;

	МассивОбрабатываемыхТиповДокументов = МассивТиповОбрабатываемыхДокументов();
	
	Если МассивОбрабатываемыхТиповДокументов.Найти(ТипЗнч(Объект.Ссылка)) = Неопределено Тогда
		Возврат
	КонецЕсли;
	
	Если ТипЗнч(Объект.Ссылка) = Тип("ДокументСсылка.ПриходнаяНакладная") 
		Или ТипЗнч(Объект.Ссылка) = Тип("ДокументСсылка.РасходнаяНакладная")
		Или ТипЗнч(Объект.Ссылка) = Тип("ДокументСсылка.ЗаказПокупателя") Тогда
		Если Объект.ПоложениеДокументаПоступления = Перечисления.ПоложениеРеквизитаНаФорме.ВШапке Тогда
			Возврат
		КонецЕсли;
	КонецЕсли;
	
	Запрос = Новый Запрос;
	
	Запрос.Текст =
	"ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	СтруктурныеЕдиницы.Ссылка КАК Ссылка
	|ИЗ
	|	Справочник.СтруктурныеЕдиницы КАК СтруктурныеЕдиницы
	|ГДЕ
	|	СтруктурныеЕдиницы.ВидУчетаОрдерныхСкладов = ЗНАЧЕНИЕ(Перечисление.ВидыУчетаОрдерныхСкладов.УчетОстатковПоСкладскимОрдерам)";
	
	МассивСтруктурныхЕдиницСОстаткамиПоОрдерам = Запрос.Выполнить().Выгрузить();
	
	ЭтоЗаказНаряд = ТипЗнч(Объект.Ссылка) = Тип("ДокументСсылка.ЗаказПокупателя");
	ИмяРеквизитаСтруктурнаяЕдиница = ?(ЭтоЗаказНаряд,"СтруктурнаяЕдиницаРезерв", "СтруктурнаяЕдиница");
	
	Для Каждого СтрокаЗапасы Из Объект.Запасы Цикл
		
		Если Не ЗначениеЗаполнено(СтрокаЗапасы[ИмяРеквизитаСтруктурнаяЕдиница]) Тогда
			Продолжить;
		КонецЕсли;
		
		СтрокаЗапасы.УказыватьДокументПоступления = Не МассивСтруктурныхЕдиницСОстаткамиПоОрдерам.Найти(СтрокаЗапасы[ИмяРеквизитаСтруктурнаяЕдиница]) = Неопределено;
		
	КонецЦикла;
	
	Если ЭтоЗаказНаряд Тогда
		
		Для Каждого СтрокаМатериалы Из Объект.Материалы Цикл
			
			Если Не ЗначениеЗаполнено(СтрокаМатериалы[ИмяРеквизитаСтруктурнаяЕдиница]) Тогда
				Продолжить;
			КонецЕсли;
			
			СтрокаМатериалы.УказыватьДокументПоступления = Не МассивСтруктурныхЕдиницСОстаткамиПоОрдерам.Найти(СтрокаМатериалы[ИмяРеквизитаСтруктурнаяЕдиница]) = Неопределено;
			
		КонецЦикла;
	
	КонецЕсли;
	
КонецПроцедуры

// Возвращает признак видимости колонки приходного ордера в документах
//
// Параметры:
//  СтруктурнаяЕдиница - Справчоник ссылка - Структурная единица по которой получается признак
//
Функция УказыватьДокументПоступления(СтруктурнаяЕдиница, Поступление = Истина, Перемещение = Ложь) Экспорт
	
	Если Не ПолучитьФункциональнуюОпцию("ИспользоватьОрдерныйСклад") Тогда
		Возврат Ложь
	КонецЕсли;

	Запрос = Новый Запрос;
	
	Запрос.УстановитьПараметр("СтруктурнаяЕдиница", СтруктурнаяЕдиница);
	ЗапросТекст =
	"ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	СтруктурныеЕдиницы.Ссылка КАК Ссылка
	|ИЗ
	|	Справочник.СтруктурныеЕдиницы КАК СтруктурныеЕдиницы
	|ГДЕ
	|	СтруктурныеЕдиницы.ВидУчетаОрдерныхСкладов = ЗНАЧЕНИЕ(Перечисление.ВидыУчетаОрдерныхСкладов.УчетОстатковПоСкладскимОрдерам)
	|	И СтруктурныеЕдиницы.Ссылка = &СтруктурнаяЕдиница
	|	И СтруктурныеЕдиницы.ИспользоватьОрдернуюСхемуПриПоступлении";
	
	Если Не Перемещение И Не Поступление Тогда
		ЗапросТекст = СтрЗаменить(ЗапросТекст, "ИспользоватьОрдернуюСхемуПриПоступлении", "ИспользоватьОрдернуюСхемуПриОтгрузке");
	КонецЕсли;
	
	Запрос.Текст = ЗапросТекст;
	
	Возврат Не Запрос.Выполнить().Пустой();
	
КонецФункции

// Возвращает табличную часть с данными по остаткам документов основания
//
// Параметры:
//  Объект	 - ДанныеФормыСтруктура, ДокументОбъект	 - Заполняемый документ
//  ДополнительныеПараметры	 - Структура								 - Дополнительные параметры
//
// Возвращаемое значение:
//  ТаблицЗначений - Таблица остатков по документам основания 
//
Функция ПолучитьТаблицуОстатковПоДокументамОснованияПриход(Объект, ДополнительныеПараметры) Экспорт 
	
	Если ДополнительныеПараметры = Неопределено Тогда
		ПоложениеДокументаПоступления = Неопределено;
		ТолькоОстатки = Ложь;
	Иначе
		
		Если Не ДополнительныеПараметры.Свойство("ПоложениеДокументаПоступления") Тогда
			ПоложениеДокументаПоступления = Неопределено;
		Иначе
			ПоложениеДокументаПоступления = ДополнительныеПараметры.ПоложениеДокументаПоступления;
		КонецЕсли;
		
		Если Не ДополнительныеПараметры.Свойство("ТолькоОстатки") Тогда
			ТолькоОстатки = Ложь;
		Иначе
			ТолькоОстатки = ДополнительныеПараметры.ТолькоОстатки;
		КонецЕсли;
		
	КонецЕсли;
	
	Запрос = Новый Запрос;
	
	Запрос.УстановитьПараметр("Контрагент", Объект.Контрагент);
	Запрос.УстановитьПараметр("Организация", Объект.Организация);
	Запрос.УстановитьПараметр("Ссылка", Объект.Ссылка);
	
	СкладВТабличнойЧасти = Ложь;
	ДокументПоступленияВТабличнойЧасти = ПоложениеДокументаПоступления = Перечисления.ПоложениеРеквизитаНаФорме.ВТабличнойЧасти;
	
	Запрос.УстановитьПараметр("СкладВТабличнойЧасти", СкладВТабличнойЧасти);
	Запрос.УстановитьПараметр("Склад", Объект.СтруктурнаяЕдиница);
	
	Запрос.УстановитьПараметр("ДокументПоступленияВТабличнойЧасти", ДокументПоступленияВТабличнойЧасти);
	Запрос.УстановитьПараметр("ДокументПоступления", Объект.ДокументПоступления);
	
	Запрос.Текст =
	"ВЫБРАТЬ
	|	ЗапасыКПоступлениюНаСкладыОстатки.Номенклатура КАК Номенклатура,
	|	ЗапасыКПоступлениюНаСкладыОстатки.Характеристика КАК Характеристика,
	|	ЗапасыКПоступлениюНаСкладыОстатки.Партия КАК Партия,
	|	ЗапасыКПоступлениюНаСкладыОстатки.СтруктурнаяЕдиница КАК СтруктурнаяЕдиница,
	|	СУММА(-ЗапасыКПоступлениюНаСкладыОстатки.КоличествоОстаток) КАК Количество,
	|	ЗапасыКПоступлениюНаСкладыОстатки.ДокументОснование КАК ДокументОснование,
	|	ЗапасыКПоступлениюНаСкладыОстатки.Номенклатура.ЕдиницаИзмерения КАК НоменклатураЕдиницаИзмерения,
	|	ЗапасыКПоступлениюНаСкладыОстатки.Ячейка КАК Ячейка
	|ПОМЕСТИТЬ ВТЗапасыКПоступлению
	|ИЗ
	|	РегистрНакопления.ЗапасыКПоступлениюНаСклады.Остатки(
	|			,
	|			НЕ ТИПЗНАЧЕНИЯ(ДокументОснование) = ТИП(Документ.ПриходныйОрдер)
	|				И Организация = &Организация
	|				И ВЫБОР
	|					КОГДА НЕ &СкладВТабличнойЧасти
	|						ТОГДА СтруктурнаяЕдиница = &Склад
	|					ИНАЧЕ ИСТИНА
	|				КОНЕЦ
	|				И ВЫБОР
	|					КОГДА НЕ &ДокументПоступленияВТабличнойЧасти
	|						ТОГДА ДокументОснование = &ДокументПоступления
	|					ИНАЧЕ ИСТИНА
	|				КОНЕЦ
	|				И ВЫБОР
	|					КОГДА НЕ ДокументОснование.Контрагент ЕСТЬ NULL
	|						ТОГДА ДокументОснование.Контрагент = &Контрагент
	|					ИНАЧЕ ИСТИНА
	|				КОНЕЦ) КАК ЗапасыКПоступлениюНаСкладыОстатки
	|
	|СГРУППИРОВАТЬ ПО
	|	ЗапасыКПоступлениюНаСкладыОстатки.Номенклатура,
	|	ЗапасыКПоступлениюНаСкладыОстатки.Характеристика,
	|	ЗапасыКПоступлениюНаСкладыОстатки.Партия,
	|	ЗапасыКПоступлениюНаСкладыОстатки.СтруктурнаяЕдиница,
	|	ЗапасыКПоступлениюНаСкладыОстатки.ДокументОснование,
	|	ЗапасыКПоступлениюНаСкладыОстатки.Номенклатура.ЕдиницаИзмерения,
	|	ЗапасыКПоступлениюНаСкладыОстатки.Ячейка
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ЗапасыКПоступлениюНаСклады.Номенклатура,
	|	ЗапасыКПоступлениюНаСклады.Характеристика,
	|	ЗапасыКПоступлениюНаСклады.Партия,
	|	ЗапасыКПоступлениюНаСклады.СтруктурнаяЕдиница,
	|	СУММА(ЗапасыКПоступлениюНаСклады.Количество),
	|	ЗапасыКПоступлениюНаСклады.ДокументОснование,
	|	ЗапасыКПоступлениюНаСклады.Номенклатура.ЕдиницаИзмерения,
	|	ЗапасыКПоступлениюНаСклады.Ячейка
	|ИЗ
	|	РегистрНакопления.ЗапасыКПоступлениюНаСклады КАК ЗапасыКПоступлениюНаСклады
	|ГДЕ
	|	ЗапасыКПоступлениюНаСклады.Регистратор = &Ссылка
	|	И ВЫБОР
	|			КОГДА НЕ &СкладВТабличнойЧасти
	|				ТОГДА ЗапасыКПоступлениюНаСклады.СтруктурнаяЕдиница = &Склад
	|			ИНАЧЕ ИСТИНА
	|		КОНЕЦ
	|	И ВЫБОР
	|			КОГДА НЕ &ДокументПоступленияВТабличнойЧасти
	|				ТОГДА ЗапасыКПоступлениюНаСклады.ДокументОснование = &ДокументПоступления
	|			ИНАЧЕ ИСТИНА
	|		КОНЕЦ
	|
	|СГРУППИРОВАТЬ ПО
	|	ЗапасыКПоступлениюНаСклады.ДокументОснование,
	|	ЗапасыКПоступлениюНаСклады.СтруктурнаяЕдиница,
	|	ЗапасыКПоступлениюНаСклады.Партия,
	|	ЗапасыКПоступлениюНаСклады.Номенклатура,
	|	ЗапасыКПоступлениюНаСклады.Характеристика,
	|	ЗапасыКПоступлениюНаСклады.Номенклатура.ЕдиницаИзмерения,
	|	ЗапасыКПоступлениюНаСклады.Ячейка
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВТЗапасыКПоступлению.Номенклатура КАК Номенклатура,
	|	ВТЗапасыКПоступлению.Характеристика КАК Характеристика,
	|	ВТЗапасыКПоступлению.Партия КАК Партия,
	|	ВТЗапасыКПоступлению.СтруктурнаяЕдиница КАК СтруктурнаяЕдиница,
	|	СУММА(ВТЗапасыКПоступлению.Количество) КАК Количество,
	|	ВТЗапасыКПоступлению.ДокументОснование КАК ДокументПоступления,
	|	ВТЗапасыКПоступлению.НоменклатураЕдиницаИзмерения КАК ЕдиницаИзмерения,
	|	ВТЗапасыКПоступлению.Ячейка КАК Ячейка
	|ПОМЕСТИТЬ ВТЗапасыКПоступлениюИтог
	|ИЗ
	|	ВТЗапасыКПоступлению КАК ВТЗапасыКПоступлению
	|
	|СГРУППИРОВАТЬ ПО
	|	ВТЗапасыКПоступлению.Партия,
	|	ВТЗапасыКПоступлению.СтруктурнаяЕдиница,
	|	ВТЗапасыКПоступлению.Номенклатура,
	|	ВТЗапасыКПоступлению.ДокументОснование,
	|	ВТЗапасыКПоступлению.НоменклатураЕдиницаИзмерения,
	|	ВТЗапасыКПоступлению.Характеристика,
	|	ВТЗапасыКПоступлению.Ячейка
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВТЗапасыКПоступлению.Номенклатура КАК Номенклатура,
	|	ВТЗапасыКПоступлению.Характеристика КАК Характеристика,
	|	ВТЗапасыКПоступлению.Партия КАК Партия,
	|	ВТЗапасыКПоступлению.СтруктурнаяЕдиница КАК СтруктурнаяЕдиница,
	|	СУММА(ВТЗапасыКПоступлению.Количество) КАК Количество,
	|	ВТЗапасыКПоступлению.ДокументОснование КАК ДокументПоступления,
	|	ВТЗапасыКПоступлению.НоменклатураЕдиницаИзмерения КАК ЕдиницаИзмерения
	|ПОМЕСТИТЬ ВТЗапасыКПоступлениюИтогБезЯчеек
	|ИЗ
	|	ВТЗапасыКПоступлению КАК ВТЗапасыКПоступлению
	|
	|СГРУППИРОВАТЬ ПО
	|	ВТЗапасыКПоступлению.Партия,
	|	ВТЗапасыКПоступлению.СтруктурнаяЕдиница,
	|	ВТЗапасыКПоступлению.Номенклатура,
	|	ВТЗапасыКПоступлению.ДокументОснование,
	|	ВТЗапасыКПоступлению.НоменклатураЕдиницаИзмерения,
	|	ВТЗапасыКПоступлению.Характеристика
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВТЗапасыКПоступлениюИтогБезЯчеек.Номенклатура КАК Номенклатура,
	|	ВТЗапасыКПоступлениюИтогБезЯчеек.Характеристика КАК Характеристика,
	|	ВТЗапасыКПоступлениюИтогБезЯчеек.Партия КАК Партия,
	|	ВТЗапасыКПоступлениюИтогБезЯчеек.СтруктурнаяЕдиница КАК СтруктурнаяЕдиница,
	|	СУММА(-ЕСТЬNULL(СерииНоменклатурыКПоступлениюОстатки.КоличествоОстаток, 0)) КАК Количество,
	|	СерииНоменклатурыКПоступлениюОстатки.Серия КАК Серия,
	|	СерииНоменклатурыКПоступлениюОстатки.ДокументОснование КАК ДокументПоступления
	|ПОМЕСТИТЬ ВТСерииОстаткиИтог
	|ИЗ
	|	ВТЗапасыКПоступлениюИтогБезЯчеек КАК ВТЗапасыКПоступлениюИтогБезЯчеек
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрНакопления.СерииНоменклатурыКПоступлению.Остатки(
	|				,
	|				НЕ ТИПЗНАЧЕНИЯ(ДокументОснование) = ТИП(Документ.ПриходныйОрдер)
	|					И Организация = &Организация
	|					И ВЫБОР
	|						КОГДА НЕ &СкладВТабличнойЧасти
	|							ТОГДА СтруктурнаяЕдиница = &Склад
	|						ИНАЧЕ ИСТИНА
	|					КОНЕЦ
	|					И ВЫБОР
	|						КОГДА НЕ &ДокументПоступленияВТабличнойЧасти
	|							ТОГДА ДокументОснование = &ДокументПоступления
	|						ИНАЧЕ ИСТИНА
	|					КОНЕЦ
	|					И ВЫБОР
	|						КОГДА НЕ ДокументОснование.Контрагент ЕСТЬ NULL
	|							ТОГДА ДокументОснование.Контрагент = &Контрагент
	|						ИНАЧЕ ИСТИНА
	|					КОНЕЦ) КАК СерииНоменклатурыКПоступлениюОстатки
	|		ПО ВТЗапасыКПоступлениюИтогБезЯчеек.Номенклатура = СерииНоменклатурыКПоступлениюОстатки.Номенклатура
	|			И ВТЗапасыКПоступлениюИтогБезЯчеек.Характеристика = СерииНоменклатурыКПоступлениюОстатки.Характеристика
	|			И ВТЗапасыКПоступлениюИтогБезЯчеек.Партия = СерииНоменклатурыКПоступлениюОстатки.Партия
	|			И ВТЗапасыКПоступлениюИтогБезЯчеек.ДокументПоступления = СерииНоменклатурыКПоступлениюОстатки.ДокументОснование
	|			И ВТЗапасыКПоступлениюИтогБезЯчеек.СтруктурнаяЕдиница = СерииНоменклатурыКПоступлениюОстатки.СтруктурнаяЕдиница
	|ГДЕ
	|	ЕСТЬNULL(СерииНоменклатурыКПоступлениюОстатки.КоличествоОстаток, 0) < 0
	|
	|СГРУППИРОВАТЬ ПО
	|	ВТЗапасыКПоступлениюИтогБезЯчеек.Номенклатура,
	|	ВТЗапасыКПоступлениюИтогБезЯчеек.Характеристика,
	|	ВТЗапасыКПоступлениюИтогБезЯчеек.Партия,
	|	ВТЗапасыКПоступлениюИтогБезЯчеек.СтруктурнаяЕдиница,
	|	СерииНоменклатурыКПоступлениюОстатки.Серия,
	|	СерииНоменклатурыКПоступлениюОстатки.ДокументОснование
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ВТЗапасыКПоступлениюИтогБезЯчеек.Номенклатура,
	|	ВТЗапасыКПоступлениюИтогБезЯчеек.Характеристика,
	|	ВТЗапасыКПоступлениюИтогБезЯчеек.Партия,
	|	ВТЗапасыКПоступлениюИтогБезЯчеек.СтруктурнаяЕдиница,
	|	СУММА(ЕСТЬNULL(СерииНоменклатурыКПоступлению.Количество, 0)),
	|	СерииНоменклатурыКПоступлению.Серия,
	|	СерииНоменклатурыКПоступлению.ДокументОснование
	|ИЗ
	|	ВТЗапасыКПоступлениюИтогБезЯчеек КАК ВТЗапасыКПоступлениюИтогБезЯчеек
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрНакопления.СерииНоменклатурыКПоступлению КАК СерииНоменклатурыКПоступлению
	|		ПО ВТЗапасыКПоступлениюИтогБезЯчеек.Номенклатура = СерииНоменклатурыКПоступлению.Номенклатура
	|			И ВТЗапасыКПоступлениюИтогБезЯчеек.Характеристика = СерииНоменклатурыКПоступлению.Характеристика
	|			И ВТЗапасыКПоступлениюИтогБезЯчеек.Партия = СерииНоменклатурыКПоступлению.Партия
	|			И ВТЗапасыКПоступлениюИтогБезЯчеек.ДокументПоступления = СерииНоменклатурыКПоступлению.ДокументОснование
	|			И ВТЗапасыКПоступлениюИтогБезЯчеек.СтруктурнаяЕдиница = СерииНоменклатурыКПоступлению.СтруктурнаяЕдиница
	|ГДЕ
	|	СерииНоменклатурыКПоступлению.Регистратор = &Ссылка
	|	И ВЫБОР
	|			КОГДА НЕ &СкладВТабличнойЧасти
	|				ТОГДА СерииНоменклатурыКПоступлению.СтруктурнаяЕдиница = &Склад
	|			ИНАЧЕ ИСТИНА
	|		КОНЕЦ
	|	И ВЫБОР
	|			КОГДА НЕ &ДокументПоступленияВТабличнойЧасти
	|				ТОГДА СерииНоменклатурыКПоступлению.ДокументОснование = &ДокументПоступления
	|			ИНАЧЕ ИСТИНА
	|		КОНЕЦ
	|	И ЕСТЬNULL(СерииНоменклатурыКПоступлению.Количество, 0) > 0
	|
	|СГРУППИРОВАТЬ ПО
	|	ВТЗапасыКПоступлениюИтогБезЯчеек.Номенклатура,
	|	ВТЗапасыКПоступлениюИтогБезЯчеек.Характеристика,
	|	ВТЗапасыКПоступлениюИтогБезЯчеек.Партия,
	|	ВТЗапасыКПоступлениюИтогБезЯчеек.СтруктурнаяЕдиница,
	|	СерииНоменклатурыКПоступлению.Серия,
	|	СерииНоменклатурыКПоступлению.ДокументОснование
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВТЗапасыКПоступлениюИтог.Номенклатура КАК Номенклатура,
	|	ВТЗапасыКПоступлениюИтог.Характеристика КАК Характеристика,
	|	ВТЗапасыКПоступлениюИтог.Партия КАК Партия,
	|	ВТЗапасыКПоступлениюИтог.СтруктурнаяЕдиница КАК СтруктурнаяЕдиница,
	|	СУММА(ВТЗапасыКПоступлениюИтог.Количество) КАК Количество,
	|	ВТЗапасыКПоступлениюИтог.ДокументПоступления КАК ДокументПоступления,
	|	ВТЗапасыКПоступлениюИтог.ЕдиницаИзмерения КАК ЕдиницаИзмерения,
	|	ВТЗапасыКПоступлениюИтог.Ячейка КАК Ячейка
	|ИЗ
	|	ВТЗапасыКПоступлениюИтог КАК ВТЗапасыКПоступлениюИтог
	|
	|СГРУППИРОВАТЬ ПО
	|	ВТЗапасыКПоступлениюИтог.СтруктурнаяЕдиница,
	|	ВТЗапасыКПоступлениюИтог.ЕдиницаИзмерения,
	|	ВТЗапасыКПоступлениюИтог.Номенклатура,
	|	ВТЗапасыКПоступлениюИтог.ДокументПоступления,
	|	ВТЗапасыКПоступлениюИтог.Партия,
	|	ВТЗапасыКПоступлениюИтог.Характеристика,
	|	ВТЗапасыКПоступлениюИтог.Ячейка
	|
	|УПОРЯДОЧИТЬ ПО
	|	Номенклатура,
	|	Характеристика,
	|	Партия,
	|	СтруктурнаяЕдиница,
	|	ДокументПоступления
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВТСерииОстаткиИтог.Номенклатура КАК Номенклатура,
	|	ВТСерииОстаткиИтог.Характеристика КАК Характеристика,
	|	ВТСерииОстаткиИтог.Партия КАК Партия,
	|	ВТСерииОстаткиИтог.СтруктурнаяЕдиница КАК СтруктурнаяЕдиница,
	|	СУММА(ВТСерииОстаткиИтог.Количество) КАК Количество,
	|	ВТСерииОстаткиИтог.Серия КАК Серия,
	|	ВТСерииОстаткиИтог.ДокументПоступления КАК ДокументПоступления
	|ИЗ
	|	ВТСерииОстаткиИтог КАК ВТСерииОстаткиИтог
	|
	|СГРУППИРОВАТЬ ПО
	|	ВТСерииОстаткиИтог.Номенклатура,
	|	ВТСерииОстаткиИтог.ДокументПоступления,
	|	ВТСерииОстаткиИтог.Характеристика,
	|	ВТСерииОстаткиИтог.СтруктурнаяЕдиница,
	|	ВТСерииОстаткиИтог.Партия,
	|	ВТСерииОстаткиИтог.Серия
	|
	|УПОРЯДОЧИТЬ ПО
	|	Номенклатура,
	|	Характеристика,
	|	Партия,
	|	СтруктурнаяЕдиница,
	|	ДокументПоступления,
	|	Серия";
	
	ПакетЗапросов = Запрос.ВыполнитьПакет();

	Если ТолькоОстатки Тогда

		СтруктураВозврата = Новый Структура();
		СтруктураВозврата.Вставить("ТаблицаОстатковНоменклатуры", ПакетЗапросов[4].Выгрузить());
		СтруктураВозврата.Вставить("ТаблицаОстатковСерииНоменклатуры", ПакетЗапросов[5].Выгрузить());
		
		Возврат СтруктураВозврата;
		
	КонецЕсли;
	
	Если ТипЗнч(Объект.Ссылка) = Тип("ДокументСсылка.АвансовыйОтчет") Тогда
		Возврат ПоместитьВоВременноеХранилище(ПакетЗапросов[4].Выгрузить(), Новый УникальныйИдентификатор);
	КонецЕсли;
	
	ВыборкаЗапасы = ПакетЗапросов[4].Выбрать();
	ТаблицаСерии = ПакетЗапросов[5].Выгрузить();
	
	СтруктураПоискаСерий = Новый Структура("Номенклатура, Характеристика, Партия, СтруктурнаяЕдиница, ДокументПоступления");
	ТаблицаЗапасы = Объект.Запасы.Выгрузить();
	
	КлючСвязи = 1;
	
	Пока ВыборкаЗапасы.Следующий() Цикл
		
		НоваяСтрока = ТаблицаЗапасы.Добавить();
		НоваяСтрока.КлючСвязи = КлючСвязи;
		
		ЗаполнитьЗначенияСвойств(НоваяСтрока, ВыборкаЗапасы);
		
		ЗаполнитьЗначенияСвойств(СтруктураПоискаСерий, ВыборкаЗапасы);
		НайденныеСерии = ТаблицаСерии.НайтиСтроки(СтруктураПоискаСерий);
		
		Если Не НайденныеСерии.Количество() Тогда 
			КлючСвязи = КлючСвязи + 1;
			Продолжить
		КонецЕсли;
		
		КоличествоЗапасов = НоваяСтрока.Количество;
		
		Для Каждого НайденнаяСтрока Из НайденныеСерии Цикл
			
			Если Не НайденнаяСтрока.Количество > 0 Тогда
				Продолжить;
			КонецЕсли;
			
			НоваяСтрокаСерии = Объект.СерииНоменклатуры.Добавить();
			НоваяСтрокаСерии.КлючСвязи = КлючСвязи;
			
			ЗаполнитьЗначенияСвойств(НоваяСтрокаСерии, НайденнаяСтрока);
			
			Если НоваяСтрокаСерии.Количество >= КоличествоЗапасов Тогда
				НоваяСтрокаСерии.Количество = КоличествоЗапасов;
				НайденнаяСтрока.Количество = НайденнаяСтрока.Количество - КоличествоЗапасов;
				Прервать;
			КонецЕсли;
			
			КоличествоЗапасов = КоличествоЗапасов - НоваяСтрокаСерии.Количество;
			НайденнаяСтрока.Количество = НайденнаяСтрока.Количество - НоваяСтрокаСерии.Количество;
			
		КонецЦикла;
		
		НоваяСтрока.СерииНоменклатуры = СерииНоменклатурыУНФ.ПредставлениеСерийНоменклатуры(Объект.СерииНоменклатуры, НоваяСтрока.КлючСвязи);
		
		КлючСвязи = КлючСвязи + 1;
	КонецЦикла;
	
	Возврат ПоместитьВоВременноеХранилище(ТаблицаЗапасы, Новый УникальныйИдентификатор);
	
КонецФункции

// Возвращает распределенную табличную часть с данными по остаткам документов оснований
//
// Параметры:
//  Форма - ДанныеФормыСтруктура - Заполняемый документ
//  ДополнительныеПараметры - Структура - Дополнительные параметры
//  ИмяТабличнойЧасти - Строка - Имя табличной части документа
//
// Возвращаемое значение:
//  ТаблицЗначений - Распределенная таблица остатков по документам основания 
///
Процедура РаспределитьНоменклатуруПоДокументамОснованияПриход(Форма, ДополнительныеПараметры = Неопределено, ИмяТабличнойЧасти = "Запасы") Экспорт 
	
	Объект = Форма.Объект;
	
	ТабличнаяЧастьОбъекта = Объект[ИмяТабличнойЧасти];
	ТабличнаяЧасть = Объект[ИмяТабличнойЧасти].Выгрузить();
	
	ТабличнаяЧастьОбъекта.Очистить();
	
	Если ДополнительныеПараметры = Неопределено Тогда
		ДополнительныеПараметры = Новый Структура("ПоложениеДокументаПоступления, ТолькоОстатки", Объект.ПоложениеДокументаПоступления, Истина);
	Иначе
		ДополнительныеПараметры.Вставить("ТолькоОстатки", Истина);
	КонецЕсли;

	ТаблицаОстатков = ПолучитьТаблицуОстатковПоДокументамОснованияПриход(Объект, ДополнительныеПараметры);
	
	ТаблицаОстатковНоменклатуры = ТаблицаОстатков.ТаблицаОстатковНоменклатуры;
	ТаблицаОстатковСерииНоменклатуры = ТаблицаОстатков.ТаблицаОстатковСерииНоменклатуры;
	
	ПараметрыОтбора = Новый Структура("Номенклатура, Характеристика, Партия, СтруктурнаяЕдиница, Ячейка");
	СтруктураПоискаСерий = Новый Структура("Номенклатура, Характеристика, Партия, СтруктурнаяЕдиница, ДокументПоступления");
	
	КлючСвязи = 1;
	Для Каждого СтрокаТабличнойЧасти Из ТабличнаяЧасть Цикл
		
		Если Не ЗначениеЗаполнено(СтрокаТабличнойЧасти.Номенклатура) Тогда Продолжить КонецЕсли;
		Если Не ЗначениеЗаполнено(СтрокаТабличнойЧасти.Количество) Тогда Продолжить КонецЕсли;
		
		ЗаполнитьЗначенияСвойств(ПараметрыОтбора, СтрокаТабличнойЧасти);
		ПараметрыОтбора.СтруктурнаяЕдиница = Объект.СтруктурнаяЕдиница;
		
		НайденныеСтроки = ТаблицаОстатковНоменклатуры.НайтиСтроки(ПараметрыОтбора);
		
		Если Не НайденныеСтроки.Количество() Тогда
			НоваяСтрока = ТабличнаяЧастьОбъекта.Добавить();
			ЗаполнитьЗначенияСвойств(НоваяСтрока, СтрокаТабличнойЧасти);
			НоваяСтрока.КлючСвязи = КлючСвязи;
			КлючСвязи = КлючСвязи + 1;
			Продолжить
		КонецЕсли;
		
		КоличествоДляРаспределения = СтрокаТабличнойЧасти.Количество;
		
		Для Каждого НайденнаяСтрока Из НайденныеСтроки Цикл
			
			Если НЕ НайденнаяСтрока.Количество > 0 Тогда 
				Продолжить
			КонецЕсли;
			
			НоваяСтрока = ТабличнаяЧастьОбъекта.Добавить();
			ЗаполнитьЗначенияСвойств(НоваяСтрока, СтрокаТабличнойЧасти);
			НоваяСтрока.КлючСвязи = КлючСвязи;
			
			СуммыРасчитаны = Ложь;
			Если КоличествоДляРаспределения >= НайденнаяСтрока.Количество Тогда
				
				НоваяСтрока.Количество = НайденнаяСтрока.Количество;
				НоваяСтрока.ДокументПоступления = НайденнаяСтрока.ДокументПоступления;
				
				КоличествоДляРаспределения = КоличествоДляРаспределения - НоваяСтрока.Количество;
				НайденнаяСтрока.Количество = 0;
				
			Иначе
				
				НоваяСтрока.Количество = КоличествоДляРаспределения;
				НоваяСтрока.ДокументПоступления = НайденнаяСтрока.ДокументПоступления;
				
				НайденнаяСтрока.Количество = НайденнаяСтрока.Количество - НоваяСтрока.Количество;
				КоличествоДляРаспределения = 0;
				
			КонецЕсли;
			
			ЗаполнитьЗначенияСвойств(СтруктураПоискаСерий, НоваяСтрока);
			СтруктураПоискаСерий.СтруктурнаяЕдиница = Объект.СтруктурнаяЕдиница;
			
			НайденныеСерии = ТаблицаОстатковСерииНоменклатуры.НайтиСтроки(СтруктураПоискаСерий);
			
			Если НайденныеСерии.Количество() Тогда 
				
				КоличествоЗапасов = НоваяСтрока.Количество;
				
				Для Каждого НайденнаяСтрока Из НайденныеСерии Цикл
					
					Если НЕ НайденнаяСтрока.Количество > 0 Тогда 
						Продолжить
					КонецЕсли;
					
					НоваяСтрокаСерии = Объект.СерииНоменклатуры.Добавить();
					НоваяСтрокаСерии.КлючСвязи = КлючСвязи;
					
					ЗаполнитьЗначенияСвойств(НоваяСтрокаСерии, НайденнаяСтрока);
					
					Если НоваяСтрокаСерии.Количество >= КоличествоЗапасов Тогда
						НоваяСтрокаСерии.Количество = КоличествоЗапасов;
						НайденнаяСтрока.Количество = НайденнаяСтрока.Количество - КоличествоЗапасов;
						Прервать;
					КонецЕсли;
					
					КоличествоЗапасов = КоличествоЗапасов - НоваяСтрокаСерии.Количество;
					НайденнаяСтрока.Количество = НайденнаяСтрока.Количество - НоваяСтрокаСерии.Количество;
					
				КонецЦикла;
				
			КонецЕсли;
			
			НоваяСтрока.СерииНоменклатуры = СерииНоменклатурыУНФ.ПредставлениеСерийНоменклатуры(Объект.СерииНоменклатуры, НоваяСтрока.КлючСвязи);
			
			КлючСвязи = КлючСвязи + 1;

			
			Если КоличествоДляРаспределения = 0 Тогда Прервать КонецЕсли;
			
		КонецЦикла;
		
	КонецЦикла;
		
КонецПроцедуры


// Возвращает табличную часть с данными по остаткам документов основания
//
// Параметры:
//  Объект	 - ДанныеФормыСтруктура, ДокументОбъект	 - Заполняемый документ
//  ДополнительныеПараметры	 - Структура								 - Дополнительные параметры
//
// Возвращаемое значение:
//  ТаблицЗначений - Таблица остатков по документам основания 
//
Функция ПолучитьТаблицуОстатковПоДокументамОснованияРасход(Объект, ДополнительныеПараметры) Экспорт 
	
	Если ДополнительныеПараметры = Неопределено Тогда
		ПоложениеДокументаПоступления = Неопределено;
		ТолькоОстатки = Ложь;
	Иначе
		
		Если Не ДополнительныеПараметры.Свойство("ПоложениеДокументаПоступления") Тогда
			ПоложениеДокументаПоступления = Неопределено;
		Иначе
			ПоложениеДокументаПоступления = ДополнительныеПараметры.ПоложениеДокументаПоступления;
		КонецЕсли;
		
		Если Не ДополнительныеПараметры.Свойство("ТолькоОстатки") Тогда
			ТолькоОстатки = Ложь;
		Иначе
			ТолькоОстатки = ДополнительныеПараметры.ТолькоОстатки;
		КонецЕсли;
		
	КонецЕсли;
	
	Запрос = Новый Запрос;
	
	Запрос.УстановитьПараметр("Контрагент", Объект.Контрагент);
	Запрос.УстановитьПараметр("Организация", Объект.Организация);
	Запрос.УстановитьПараметр("Ссылка", Объект.Ссылка);
	
	СкладВТабличнойЧасти = Ложь;
	ДокументПоступленияВТабличнойЧасти = ПоложениеДокументаПоступления = Перечисления.ПоложениеРеквизитаНаФорме.ВТабличнойЧасти;
	
	Запрос.УстановитьПараметр("СкладВТабличнойЧасти", СкладВТабличнойЧасти);
	Запрос.УстановитьПараметр("Склад", Объект.СтруктурнаяЕдиница);
	
	Запрос.УстановитьПараметр("ДокументПоступленияВТабличнойЧасти", ДокументПоступленияВТабличнойЧасти);
	Запрос.УстановитьПараметр("ДокументПоступления", Объект.ДокументПоступления);
	
	Запрос.Текст =
	"ВЫБРАТЬ
	|	ЗапасыКРасходуСоСкладовОстатки.Номенклатура КАК Номенклатура,
	|	ЗапасыКРасходуСоСкладовОстатки.Характеристика КАК Характеристика,
	|	ЗапасыКРасходуСоСкладовОстатки.Партия КАК Партия,
	|	ЗапасыКРасходуСоСкладовОстатки.СтруктурнаяЕдиница КАК СтруктурнаяЕдиница,
	|	СУММА(ЗапасыКРасходуСоСкладовОстатки.КоличествоОстаток) КАК Количество,
	|	ЗапасыКРасходуСоСкладовОстатки.ДокументОснование КАК ДокументОснование,
	|	ЗапасыКРасходуСоСкладовОстатки.Номенклатура.ЕдиницаИзмерения КАК НоменклатураЕдиницаИзмерения,
	|	ЗапасыКРасходуСоСкладовОстатки.Ячейка КАК Ячейка
	|ПОМЕСТИТЬ ВТЗапасыКРасходу
	|ИЗ
	|	РегистрНакопления.ЗапасыКРасходуСоСкладов.Остатки(
	|			,
	|			НЕ ТИПЗНАЧЕНИЯ(ДокументОснование) = ТИП(Документ.РасходныйОрдер)
	|				И Организация = &Организация
	|				И ВЫБОР
	|					КОГДА НЕ &СкладВТабличнойЧасти
	|						ТОГДА СтруктурнаяЕдиница = &Склад
	|					ИНАЧЕ ИСТИНА
	|				КОНЕЦ
	|				И ВЫБОР
	|					КОГДА НЕ &ДокументПоступленияВТабличнойЧасти
	|						ТОГДА ДокументОснование = &ДокументПоступления
	|					ИНАЧЕ ИСТИНА
	|				КОНЕЦ
	|				И ВЫБОР
	|					КОГДА НЕ ДокументОснование.Контрагент ЕСТЬ NULL
	|						ТОГДА ДокументОснование.Контрагент = &Контрагент
	|					ИНАЧЕ ИСТИНА
	|				КОНЕЦ) КАК ЗапасыКРасходуСоСкладовОстатки
	|
	|СГРУППИРОВАТЬ ПО
	|	ЗапасыКРасходуСоСкладовОстатки.Номенклатура,
	|	ЗапасыКРасходуСоСкладовОстатки.Характеристика,
	|	ЗапасыКРасходуСоСкладовОстатки.Партия,
	|	ЗапасыКРасходуСоСкладовОстатки.СтруктурнаяЕдиница,
	|	ЗапасыКРасходуСоСкладовОстатки.ДокументОснование,
	|	ЗапасыКРасходуСоСкладовОстатки.Номенклатура.ЕдиницаИзмерения,
	|	ЗапасыКРасходуСоСкладовОстатки.Ячейка
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ЗапасыКРасходуСоСкладов.Номенклатура,
	|	ЗапасыКРасходуСоСкладов.Характеристика,
	|	ЗапасыКРасходуСоСкладов.Партия,
	|	ЗапасыКРасходуСоСкладов.СтруктурнаяЕдиница,
	|	СУММА(ЗапасыКРасходуСоСкладов.Количество),
	|	ЗапасыКРасходуСоСкладов.ДокументОснование,
	|	ЗапасыКРасходуСоСкладов.Номенклатура.ЕдиницаИзмерения,
	|	ЗапасыКРасходуСоСкладов.Ячейка
	|ИЗ
	|	РегистрНакопления.ЗапасыКРасходуСоСкладов КАК ЗапасыКРасходуСоСкладов
	|ГДЕ
	|	ЗапасыКРасходуСоСкладов.Регистратор = &Ссылка
	|	И ВЫБОР
	|			КОГДА НЕ &СкладВТабличнойЧасти
	|				ТОГДА ЗапасыКРасходуСоСкладов.СтруктурнаяЕдиница = &Склад
	|			ИНАЧЕ ИСТИНА
	|		КОНЕЦ
	|	И ВЫБОР
	|			КОГДА НЕ &ДокументПоступленияВТабличнойЧасти
	|				ТОГДА ЗапасыКРасходуСоСкладов.ДокументОснование = &ДокументПоступления
	|			ИНАЧЕ ИСТИНА
	|		КОНЕЦ
	|
	|СГРУППИРОВАТЬ ПО
	|	ЗапасыКРасходуСоСкладов.ДокументОснование,
	|	ЗапасыКРасходуСоСкладов.СтруктурнаяЕдиница,
	|	ЗапасыКРасходуСоСкладов.Партия,
	|	ЗапасыКРасходуСоСкладов.Номенклатура,
	|	ЗапасыКРасходуСоСкладов.Характеристика,
	|	ЗапасыКРасходуСоСкладов.Номенклатура.ЕдиницаИзмерения,
	|	ЗапасыКРасходуСоСкладов.Ячейка
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВТЗапасыКРасходу.Номенклатура КАК Номенклатура,
	|	ВТЗапасыКРасходу.Характеристика КАК Характеристика,
	|	ВТЗапасыКРасходу.Партия КАК Партия,
	|	ВТЗапасыКРасходу.СтруктурнаяЕдиница КАК СтруктурнаяЕдиница,
	|	СУММА(ВТЗапасыКРасходу.Количество) КАК Количество,
	|	ВТЗапасыКРасходу.ДокументОснование КАК ДокументПоступления,
	|	ВТЗапасыКРасходу.НоменклатураЕдиницаИзмерения КАК ЕдиницаИзмерения,
	|	ВТЗапасыКРасходу.Ячейка КАК Ячейка
	|ПОМЕСТИТЬ ВТЗапасыКРасходуИтог
	|ИЗ
	|	ВТЗапасыКРасходу КАК ВТЗапасыКРасходу
	|
	|СГРУППИРОВАТЬ ПО
	|	ВТЗапасыКРасходу.Партия,
	|	ВТЗапасыКРасходу.СтруктурнаяЕдиница,
	|	ВТЗапасыКРасходу.Номенклатура,
	|	ВТЗапасыКРасходу.ДокументОснование,
	|	ВТЗапасыКРасходу.НоменклатураЕдиницаИзмерения,
	|	ВТЗапасыКРасходу.Характеристика,
	|	ВТЗапасыКРасходу.Ячейка
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВТЗапасыКРасходу.Номенклатура КАК Номенклатура,
	|	ВТЗапасыКРасходу.Характеристика КАК Характеристика,
	|	ВТЗапасыКРасходу.Партия КАК Партия,
	|	ВТЗапасыКРасходу.СтруктурнаяЕдиница КАК СтруктурнаяЕдиница,
	|	СУММА(ВТЗапасыКРасходу.Количество) КАК Количество,
	|	ВТЗапасыКРасходу.ДокументОснование КАК ДокументПоступления,
	|	ВТЗапасыКРасходу.НоменклатураЕдиницаИзмерения КАК ЕдиницаИзмерения
	|ПОМЕСТИТЬ ВТЗапасыКРасходуИтогБезЯчеек
	|ИЗ
	|	ВТЗапасыКРасходу КАК ВТЗапасыКРасходу
	|
	|СГРУППИРОВАТЬ ПО
	|	ВТЗапасыКРасходу.Партия,
	|	ВТЗапасыКРасходу.СтруктурнаяЕдиница,
	|	ВТЗапасыКРасходу.Номенклатура,
	|	ВТЗапасыКРасходу.ДокументОснование,
	|	ВТЗапасыКРасходу.НоменклатураЕдиницаИзмерения,
	|	ВТЗапасыКРасходу.Характеристика
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВТЗапасыКРасходуИтогБезЯчеек.Номенклатура КАК Номенклатура,
	|	ВТЗапасыКРасходуИтогБезЯчеек.Характеристика КАК Характеристика,
	|	ВТЗапасыКРасходуИтогБезЯчеек.Партия КАК Партия,
	|	ВТЗапасыКРасходуИтогБезЯчеек.СтруктурнаяЕдиница КАК СтруктурнаяЕдиница,
	|	СУММА(ЕСТЬNULL(СерииНоменклатурыКРасходуОстатки.КоличествоОстаток, 0)) КАК Количество,
	|	СерииНоменклатурыКРасходуОстатки.Серия КАК Серия,
	|	СерииНоменклатурыКРасходуОстатки.ДокументОснование КАК ДокументПоступления
	|ПОМЕСТИТЬ ВТСерииОстаткиИтог
	|ИЗ
	|	ВТЗапасыКРасходуИтогБезЯчеек КАК ВТЗапасыКРасходуИтогБезЯчеек
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрНакопления.СерииНоменклатурыКРасходу.Остатки(
	|				,
	|				НЕ ТИПЗНАЧЕНИЯ(ДокументОснование) = ТИП(Документ.РасходныйОрдер)
	|					И Организация = &Организация
	|					И ВЫБОР
	|						КОГДА НЕ &СкладВТабличнойЧасти
	|							ТОГДА СтруктурнаяЕдиница = &Склад
	|						ИНАЧЕ ИСТИНА
	|					КОНЕЦ
	|					И ВЫБОР
	|						КОГДА НЕ &ДокументПоступленияВТабличнойЧасти
	|							ТОГДА ДокументОснование = &ДокументПоступления
	|						ИНАЧЕ ИСТИНА
	|					КОНЕЦ
	|					И ВЫБОР
	|						КОГДА НЕ ДокументОснование.Контрагент ЕСТЬ NULL
	|							ТОГДА ДокументОснование.Контрагент = &Контрагент
	|						ИНАЧЕ ИСТИНА
	|					КОНЕЦ) КАК СерииНоменклатурыКРасходуОстатки
	|		ПО ВТЗапасыКРасходуИтогБезЯчеек.Номенклатура = СерииНоменклатурыКРасходуОстатки.Номенклатура
	|			И ВТЗапасыКРасходуИтогБезЯчеек.Характеристика = СерииНоменклатурыКРасходуОстатки.Характеристика
	|			И ВТЗапасыКРасходуИтогБезЯчеек.Партия = СерииНоменклатурыКРасходуОстатки.Партия
	|			И ВТЗапасыКРасходуИтогБезЯчеек.ДокументПоступления = СерииНоменклатурыКРасходуОстатки.ДокументОснование
	|			И ВТЗапасыКРасходуИтогБезЯчеек.СтруктурнаяЕдиница = СерииНоменклатурыКРасходуОстатки.СтруктурнаяЕдиница
	|ГДЕ
	|	ЕСТЬNULL(СерииНоменклатурыКРасходуОстатки.КоличествоОстаток, 0) > 0
	|
	|СГРУППИРОВАТЬ ПО
	|	ВТЗапасыКРасходуИтогБезЯчеек.Номенклатура,
	|	ВТЗапасыКРасходуИтогБезЯчеек.Характеристика,
	|	ВТЗапасыКРасходуИтогБезЯчеек.Партия,
	|	ВТЗапасыКРасходуИтогБезЯчеек.СтруктурнаяЕдиница,
	|	СерииНоменклатурыКРасходуОстатки.Серия,
	|	СерииНоменклатурыКРасходуОстатки.ДокументОснование
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ВТЗапасыКРасходуИтогБезЯчеек.Номенклатура,
	|	ВТЗапасыКРасходуИтогБезЯчеек.Характеристика,
	|	ВТЗапасыКРасходуИтогБезЯчеек.Партия,
	|	ВТЗапасыКРасходуИтогБезЯчеек.СтруктурнаяЕдиница,
	|	СУММА(ЕСТЬNULL(СерииНоменклатурыКРасходу.Количество, 0)),
	|	СерииНоменклатурыКРасходу.Серия,
	|	СерииНоменклатурыКРасходу.ДокументОснование
	|ИЗ
	|	ВТЗапасыКРасходуИтогБезЯчеек КАК ВТЗапасыКРасходуИтогБезЯчеек
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрНакопления.СерииНоменклатурыКРасходу КАК СерииНоменклатурыКРасходу
	|		ПО ВТЗапасыКРасходуИтогБезЯчеек.Номенклатура = СерииНоменклатурыКРасходу.Номенклатура
	|			И ВТЗапасыКРасходуИтогБезЯчеек.Характеристика = СерииНоменклатурыКРасходу.Характеристика
	|			И ВТЗапасыКРасходуИтогБезЯчеек.Партия = СерииНоменклатурыКРасходу.Партия
	|			И ВТЗапасыКРасходуИтогБезЯчеек.ДокументПоступления = СерииНоменклатурыКРасходу.ДокументОснование
	|			И ВТЗапасыКРасходуИтогБезЯчеек.СтруктурнаяЕдиница = СерииНоменклатурыКРасходу.СтруктурнаяЕдиница
	|ГДЕ
	|	СерииНоменклатурыКРасходу.Регистратор = &Ссылка
	|	И ВЫБОР
	|			КОГДА НЕ &СкладВТабличнойЧасти
	|				ТОГДА СерииНоменклатурыКРасходу.СтруктурнаяЕдиница = &Склад
	|			ИНАЧЕ ИСТИНА
	|		КОНЕЦ
	|	И ВЫБОР
	|			КОГДА НЕ &ДокументПоступленияВТабличнойЧасти
	|				ТОГДА СерииНоменклатурыКРасходу.ДокументОснование = &ДокументПоступления
	|			ИНАЧЕ ИСТИНА
	|		КОНЕЦ
	|	И ЕСТЬNULL(СерииНоменклатурыКРасходу.Количество, 0) > 0
	|
	|СГРУППИРОВАТЬ ПО
	|	ВТЗапасыКРасходуИтогБезЯчеек.Номенклатура,
	|	ВТЗапасыКРасходуИтогБезЯчеек.Характеристика,
	|	ВТЗапасыКРасходуИтогБезЯчеек.Партия,
	|	ВТЗапасыКРасходуИтогБезЯчеек.СтруктурнаяЕдиница,
	|	СерииНоменклатурыКРасходу.Серия,
	|	СерииНоменклатурыКРасходу.ДокументОснование
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВТЗапасыКРасходуИтог.Номенклатура КАК Номенклатура,
	|	ВТЗапасыКРасходуИтог.Характеристика КАК Характеристика,
	|	ВТЗапасыКРасходуИтог.Партия КАК Партия,
	|	ВТЗапасыКРасходуИтог.СтруктурнаяЕдиница КАК СтруктурнаяЕдиница,
	|	СУММА(ВТЗапасыКРасходуИтог.Количество) КАК Количество,
	|	ВТЗапасыКРасходуИтог.ДокументПоступления КАК ДокументПоступления,
	|	ВТЗапасыКРасходуИтог.ЕдиницаИзмерения КАК ЕдиницаИзмерения,
	|	ВТЗапасыКРасходуИтог.Ячейка КАК Ячейка
	|ИЗ
	|	ВТЗапасыКРасходуИтог КАК ВТЗапасыКРасходуИтог
	|
	|СГРУППИРОВАТЬ ПО
	|	ВТЗапасыКРасходуИтог.СтруктурнаяЕдиница,
	|	ВТЗапасыКРасходуИтог.ЕдиницаИзмерения,
	|	ВТЗапасыКРасходуИтог.Номенклатура,
	|	ВТЗапасыКРасходуИтог.ДокументПоступления,
	|	ВТЗапасыКРасходуИтог.Партия,
	|	ВТЗапасыКРасходуИтог.Характеристика,
	|	ВТЗапасыКРасходуИтог.Ячейка
	|
	|УПОРЯДОЧИТЬ ПО
	|	Номенклатура,
	|	Характеристика,
	|	Партия,
	|	СтруктурнаяЕдиница,
	|	ДокументПоступления
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВТСерииОстаткиИтог.Номенклатура КАК Номенклатура,
	|	ВТСерииОстаткиИтог.Характеристика КАК Характеристика,
	|	ВТСерииОстаткиИтог.Партия КАК Партия,
	|	ВТСерииОстаткиИтог.СтруктурнаяЕдиница КАК СтруктурнаяЕдиница,
	|	СУММА(ВТСерииОстаткиИтог.Количество) КАК Количество,
	|	ВТСерииОстаткиИтог.Серия КАК Серия,
	|	ВТСерииОстаткиИтог.ДокументПоступления КАК ДокументПоступления
	|ИЗ
	|	ВТСерииОстаткиИтог КАК ВТСерииОстаткиИтог
	|
	|СГРУППИРОВАТЬ ПО
	|	ВТСерииОстаткиИтог.Номенклатура,
	|	ВТСерииОстаткиИтог.ДокументПоступления,
	|	ВТСерииОстаткиИтог.Характеристика,
	|	ВТСерииОстаткиИтог.СтруктурнаяЕдиница,
	|	ВТСерииОстаткиИтог.Партия,
	|	ВТСерииОстаткиИтог.Серия
	|
	|УПОРЯДОЧИТЬ ПО
	|	Номенклатура,
	|	Характеристика,
	|	Партия,
	|	СтруктурнаяЕдиница,
	|	ДокументПоступления,
	|	Серия";
	
	ПакетЗапросов = Запрос.ВыполнитьПакет();

	Если ТолькоОстатки Тогда

		СтруктураВозврата = Новый Структура();
		СтруктураВозврата.Вставить("ТаблицаОстатковНоменклатуры", ПакетЗапросов[4].Выгрузить());
		СтруктураВозврата.Вставить("ТаблицаОстатковСерииНоменклатуры", ПакетЗапросов[5].Выгрузить());
		
		Возврат СтруктураВозврата;
		
	КонецЕсли;
	
	Если ТипЗнч(Объект.Ссылка) = Тип("ДокументСсылка.АвансовыйОтчет") Тогда
		Возврат ПоместитьВоВременноеХранилище(ПакетЗапросов[4].Выгрузить(), Новый УникальныйИдентификатор);
	КонецЕсли;
	
	ВыборкаЗапасы = ПакетЗапросов[4].Выбрать();
	ТаблицаСерии = ПакетЗапросов[5].Выгрузить();
	
	СтруктураПоискаСерий = Новый Структура("Номенклатура, Характеристика, Партия, СтруктурнаяЕдиница, ДокументПоступления");
	ТаблицаЗапасы = Объект.Запасы.Выгрузить();
	
	КлючСвязи = 1;
	
	Пока ВыборкаЗапасы.Следующий() Цикл
		
		НоваяСтрока = ТаблицаЗапасы.Добавить();
		НоваяСтрока.КлючСвязи = КлючСвязи;
		
		ЗаполнитьЗначенияСвойств(НоваяСтрока, ВыборкаЗапасы);
		
		ЗаполнитьЗначенияСвойств(СтруктураПоискаСерий, ВыборкаЗапасы);
		НайденныеСерии = ТаблицаСерии.НайтиСтроки(СтруктураПоискаСерий);
		
		Если Не НайденныеСерии.Количество() Тогда 
			КлючСвязи = КлючСвязи + 1;
			Продолжить
		КонецЕсли;
		
		КоличествоЗапасов = НоваяСтрока.Количество;
		
		Для Каждого НайденнаяСтрока Из НайденныеСерии Цикл
			
			Если Не НайденнаяСтрока.Количество > 0 Тогда
				Продолжить;
			КонецЕсли;
			
			НоваяСтрокаСерии = Объект.СерииНоменклатуры.Добавить();
			НоваяСтрокаСерии.КлючСвязи = КлючСвязи;
			
			ЗаполнитьЗначенияСвойств(НоваяСтрокаСерии, НайденнаяСтрока);
			
			Если НоваяСтрокаСерии.Количество >= КоличествоЗапасов Тогда
				НоваяСтрокаСерии.Количество = КоличествоЗапасов;
				НайденнаяСтрока.Количество = НайденнаяСтрока.Количество - КоличествоЗапасов;
				Прервать;
			КонецЕсли;
			
			КоличествоЗапасов = КоличествоЗапасов - НоваяСтрокаСерии.Количество;
			НайденнаяСтрока.Количество = НайденнаяСтрока.Количество - НоваяСтрокаСерии.Количество;
			
		КонецЦикла;
		
		НоваяСтрока.СерииНоменклатуры = СерииНоменклатурыУНФ.ПредставлениеСерийНоменклатуры(Объект.СерииНоменклатуры, НоваяСтрока.КлючСвязи);
		
		КлючСвязи = КлючСвязи + 1;
	КонецЦикла;
	
	Возврат ПоместитьВоВременноеХранилище(ТаблицаЗапасы, Новый УникальныйИдентификатор);
	
КонецФункции

// Возвращает распределенную табличную часть с данными по остаткам документов оснований
//
// Параметры:
//  Форма - ДанныеФормыСтруктура - Заполняемый документ
//  ДополнительныеПараметры - Структура - Дополнительные параметры
//  ИмяТабличнойЧасти - Строка - Имя табличной части документа
//
// Возвращаемое значение:
//  ТаблицЗначений - Распределенная таблица остатков по документам основания 
///
Процедура РаспределитьНоменклатуруПоДокументамОснованияРасход(Форма, ДополнительныеПараметры = Неопределено, ИмяТабличнойЧасти = "Запасы") Экспорт 
	
	Объект = Форма.Объект;
	
	ТабличнаяЧастьОбъекта = Объект[ИмяТабличнойЧасти];
	ТабличнаяЧасть = Объект[ИмяТабличнойЧасти].Выгрузить();
	
	ТабличнаяЧастьОбъекта.Очистить();
	
	Если ДополнительныеПараметры = Неопределено Тогда
		ДополнительныеПараметры = Новый Структура("ПоложениеДокументаПоступления, ТолькоОстатки", Объект.ПоложениеДокументаПоступления, Истина);
	Иначе
		ДополнительныеПараметры.Вставить("ТолькоОстатки", Истина);
	КонецЕсли;

	ТаблицаОстатков = ПолучитьТаблицуОстатковПоДокументамОснованияРасход(Объект, ДополнительныеПараметры);
	
	ТаблицаОстатковНоменклатуры = ТаблицаОстатков.ТаблицаОстатковНоменклатуры;
	ТаблицаОстатковСерииНоменклатуры = ТаблицаОстатков.ТаблицаОстатковСерииНоменклатуры;
	
	ПараметрыОтбора = Новый Структура("Номенклатура, Характеристика, Партия, СтруктурнаяЕдиница, Ячейка");
	СтруктураПоискаСерий = Новый Структура("Номенклатура, Характеристика, Партия, СтруктурнаяЕдиница, ДокументПоступления");
	
	КлючСвязи = 1;
	Для Каждого СтрокаТабличнойЧасти Из ТабличнаяЧасть Цикл
		
		Если Не ЗначениеЗаполнено(СтрокаТабличнойЧасти.Номенклатура) Тогда Продолжить КонецЕсли;
		Если Не ЗначениеЗаполнено(СтрокаТабличнойЧасти.Количество) Тогда Продолжить КонецЕсли;
		
		ЗаполнитьЗначенияСвойств(ПараметрыОтбора, СтрокаТабличнойЧасти);
		ПараметрыОтбора.СтруктурнаяЕдиница = Объект.СтруктурнаяЕдиница;
		
		НайденныеСтроки = ТаблицаОстатковНоменклатуры.НайтиСтроки(ПараметрыОтбора);
		
		Если Не НайденныеСтроки.Количество() Тогда
			НоваяСтрока = ТабличнаяЧастьОбъекта.Добавить();
			ЗаполнитьЗначенияСвойств(НоваяСтрока, СтрокаТабличнойЧасти);
			НоваяСтрока.КлючСвязи = КлючСвязи;
			КлючСвязи = КлючСвязи + 1;
			Продолжить
		КонецЕсли;
		
		КоличествоДляРаспределения = СтрокаТабличнойЧасти.Количество;
		
		Для Каждого НайденнаяСтрока Из НайденныеСтроки Цикл
			
			Если НЕ НайденнаяСтрока.Количество > 0 Тогда 
				Продолжить
			КонецЕсли;
			
			НоваяСтрока = ТабличнаяЧастьОбъекта.Добавить();
			ЗаполнитьЗначенияСвойств(НоваяСтрока, СтрокаТабличнойЧасти);
			НоваяСтрока.КлючСвязи = КлючСвязи;
			
			СуммыРасчитаны = Ложь;
			Если КоличествоДляРаспределения >= НайденнаяСтрока.Количество Тогда
				
				НоваяСтрока.Количество = НайденнаяСтрока.Количество;
				НоваяСтрока.ДокументПоступления = НайденнаяСтрока.ДокументПоступления;
				
				КоличествоДляРаспределения = КоличествоДляРаспределения - НоваяСтрока.Количество;
				НайденнаяСтрока.Количество = 0;
				
			Иначе
				
				НоваяСтрока.Количество = КоличествоДляРаспределения;
				НоваяСтрока.ДокументПоступления = НайденнаяСтрока.ДокументПоступления;
				
				НайденнаяСтрока.Количество = НайденнаяСтрока.Количество - НоваяСтрока.Количество;
				КоличествоДляРаспределения = 0;
				
			КонецЕсли;
			
			ЗаполнитьЗначенияСвойств(СтруктураПоискаСерий, НоваяСтрока);
			СтруктураПоискаСерий.СтруктурнаяЕдиница = Объект.СтруктурнаяЕдиница;
			
			НайденныеСерии = ТаблицаОстатковСерииНоменклатуры.НайтиСтроки(СтруктураПоискаСерий);
			
			Если НайденныеСерии.Количество() Тогда 
				
				КоличествоЗапасов = НоваяСтрока.Количество;
				
				Для Каждого НайденнаяСтрока Из НайденныеСерии Цикл
					
					Если НЕ НайденнаяСтрока.Количество > 0 Тогда 
						Продолжить
					КонецЕсли;
					
					НоваяСтрокаСерии = Объект.СерииНоменклатуры.Добавить();
					НоваяСтрокаСерии.КлючСвязи = КлючСвязи;
					
					ЗаполнитьЗначенияСвойств(НоваяСтрокаСерии, НайденнаяСтрока);
					
					Если НоваяСтрокаСерии.Количество >= КоличествоЗапасов Тогда
						НоваяСтрокаСерии.Количество = КоличествоЗапасов;
						НайденнаяСтрока.Количество = НайденнаяСтрока.Количество - КоличествоЗапасов;
						Прервать;
					КонецЕсли;
					
					КоличествоЗапасов = КоличествоЗапасов - НоваяСтрокаСерии.Количество;
					НайденнаяСтрока.Количество = НайденнаяСтрока.Количество - НоваяСтрокаСерии.Количество;
					
				КонецЦикла;
				
			КонецЕсли;
			
			НоваяСтрока.СерииНоменклатуры = СерииНоменклатурыУНФ.ПредставлениеСерийНоменклатуры(Объект.СерииНоменклатуры, НоваяСтрока.КлючСвязи);
			
			КлючСвязи = КлючСвязи + 1;

			
			Если КоличествоДляРаспределения = 0 Тогда Прервать КонецЕсли;
			
		КонецЦикла;
		
	КонецЦикла;
		
КонецПроцедуры

// Возвращает структуру с используемыми видами учета ордерных складов
//
Функция ИспользуемыеВидыУчетаОрдерныхСкладов() Экспорт
	
	ИспользуемыеВидыУчета = Новый Структура("ПоСкладуВЦелом, УчетОстатковПоПрочимДокументам, УчетОстатковПоСкладскимОрдерам", Ложь, Ложь, Ложь);
	
	Если Не ПолучитьФункциональнуюОпцию("ИспользоватьОрдерныйСклад") Тогда
		Возврат ИспользуемыеВидыУчета;
	КонецЕсли;

	Запрос = Новый Запрос;
	
	Запрос.Текст =
	"ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	СтруктурныеЕдиницы.ВидУчетаОрдерныхСкладов КАК ВидУчетаОрдерныхСкладов
	|ИЗ
	|	Справочник.СтруктурныеЕдиницы КАК СтруктурныеЕдиницы
	|ГДЕ
	|	СтруктурныеЕдиницы.ОрдерныйСклад";
	
	Выборка = Запрос.Выполнить().Выбрать();
	
	Пока Выборка.Следующий() Цикл
		
		Если Выборка.ВидУчетаОрдерныхСкладов = Перечисления.ВидыУчетаОрдерныхСкладов.ПоСкладуВЦелом Тогда
			ИспользуемыеВидыУчета.ПоСкладуВЦелом = Истина;
		ИначеЕсли Выборка.ВидУчетаОрдерныхСкладов = Перечисления.ВидыУчетаОрдерныхСкладов.УчетОстатковПоПрочимДокументам Тогда
			ИспользуемыеВидыУчета.УчетОстатковПоПрочимДокументам = Истина;
		ИначеЕсли Выборка.ВидУчетаОрдерныхСкладов = Перечисления.ВидыУчетаОрдерныхСкладов.УчетОстатковПоСкладскимОрдерам Тогда
			ИспользуемыеВидыУчета.УчетОстатковПоСкладскимОрдерам = Истина;
		КонецЕсли;
		
	КонецЦикла;
	
	Возврат ИспользуемыеВидыУчета;
	
КонецФункции

// Возвращает признак учета остатков в разрезе складских ордеров
//
// Параметры:
//  СтруктурнаяЕдиница - СправочникСсылка - Склад по которому получается значение
//  Приход - Булево - Признак приходных или расходных документов
//  Перемещение - Булево - Признак операции перемещения
//
// Возвращаемое значение:
//  Булево - Признак учета 
//
Функция УчетОстатковВРазрезеСкладскихОрдеров(СтруктурнаяЕдиница, Приход = Истина, Перемещение = Ложь) Экспорт 
	
	Если Не ЗначениеЗаполнено(СтруктурнаяЕдиница) Тогда
		Возврат Ложь
	КонецЕсли;
	
	РеквизитыСклада = ОбщегоНазначения.ЗначенияРеквизитовОбъекта(СтруктурнаяЕдиница, "ОрдерныйСклад, ВидУчетаОрдерныхСкладов, ИспользоватьОрдернуюСхемуПриОтгрузке
	|, ИспользоватьОрдернуюСхемуПриПеремещении, ИспользоватьОрдернуюСхемуПриПоступлении");
	
	Если Не РеквизитыСклада.ОрдерныйСклад Тогда
		Возврат Ложь
	КонецЕсли;
	
	Если Приход Тогда
		Возврат РеквизитыСклада.ВидУчетаОрдерныхСкладов = Перечисления.ВидыУчетаОрдерныхСкладов.УчетОстатковПоСкладскимОрдерам
		И РеквизитыСклада.ИспользоватьОрдернуюСхемуПриПоступлении;
	КонецЕсли;
	
	Если Перемещение Тогда
		Возврат РеквизитыСклада.ВидУчетаОрдерныхСкладов = Перечисления.ВидыУчетаОрдерныхСкладов.УчетОстатковПоСкладскимОрдерам
		И РеквизитыСклада.ИспользоватьОрдернуюСхемуПриПеремещении;
	КонецЕсли;
	
	Если Не Приход Тогда
		Возврат РеквизитыСклада.ВидУчетаОрдерныхСкладов = Перечисления.ВидыУчетаОрдерныхСкладов.УчетОстатковПоСкладскимОрдерам
		И РеквизитыСклада.ИспользоватьОрдернуюСхемуПриОтгрузке;
	КонецЕсли;
	
	Возврат Ложь;
	
КонецФункции

// Возвращает ордерные склады по видам учета
//
// Параметры:
//
// Возвращаемое значение:
//  ТаблицаЗначений - Таблица ордерных складов по видам учета
//
Функция ТаблицаОрдерныхСкладовПоВидамУчета() Экспорт 
	
	Запрос = Новый Запрос;
	
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	СтруктурныеЕдиницы.Ссылка КАК СтруктурнаяЕдиница,
	|	ВЫБОР
	|		КОГДА СтруктурныеЕдиницы.ВидУчетаОрдерныхСкладов = ЗНАЧЕНИЕ(Перечисление.ВидыУчетаОрдерныхСкладов.УчетОстатковПоСкладскимОрдерам)
	|				И СтруктурныеЕдиницы.ИспользоватьОрдернуюСхемуПриПоступлении
	|			ТОГДА ИСТИНА
	|		ИНАЧЕ ЛОЖЬ
	|	КОНЕЦ КАК Приход,
	|	ВЫБОР
	|		КОГДА СтруктурныеЕдиницы.ВидУчетаОрдерныхСкладов = ЗНАЧЕНИЕ(Перечисление.ВидыУчетаОрдерныхСкладов.УчетОстатковПоСкладскимОрдерам)
	|				И СтруктурныеЕдиницы.ИспользоватьОрдернуюСхемуПриПеремещении
	|			ТОГДА ИСТИНА
	|		ИНАЧЕ ЛОЖЬ
	|	КОНЕЦ КАК Перемещение,
	|	ВЫБОР
	|		КОГДА СтруктурныеЕдиницы.ВидУчетаОрдерныхСкладов = ЗНАЧЕНИЕ(Перечисление.ВидыУчетаОрдерныхСкладов.УчетОстатковПоСкладскимОрдерам)
	|				И СтруктурныеЕдиницы.ИспользоватьОрдернуюСхемуПриОтгрузке
	|			ТОГДА ИСТИНА
	|		ИНАЧЕ ЛОЖЬ
	|	КОНЕЦ КАК Расход
	|ИЗ
	|	Справочник.СтруктурныеЕдиницы КАК СтруктурныеЕдиницы
	|ГДЕ
	|	СтруктурныеЕдиницы.ОрдерныйСклад
	|	И НЕ СтруктурныеЕдиницы.ВидУчетаОрдерныхСкладов = ЗНАЧЕНИЕ(Перечисление.ВидыУчетаОрдерныхСкладов.ПоСкладуВЦелом)
	|	И НЕ СтруктурныеЕдиницы.ВидУчетаОрдерныхСкладов = ЗНАЧЕНИЕ(Перечисление.ВидыУчетаОрдерныхСкладов.ПустаяСсылка)";
	
	Возврат Запрос.Выполнить().Выгрузить();
	
	
КонецФункции

// Возвращает признак учета остатков в разрезе прочих
//
// Параметры:
//  СтруктурнаяЕдиница - СправочникСсылка - Склад по которому получается значение
//  Приход - Булево - Признак приходных или расходных документов
//  Перемещение - Булево - Признак операции перемещения
//
// Возвращаемое значение:
//  Булево - Признак учета 
//
Функция УчетОстатковВРазрезеПрочихДокументов(СтруктурнаяЕдиница, Приход = Истина, Перемещение = Ложь) Экспорт 
	
	Если Не ЗначениеЗаполнено(СтруктурнаяЕдиница) Тогда
		Возврат Ложь
	КонецЕсли;
	
	РеквизитыСклада = ОбщегоНазначения.ЗначенияРеквизитовОбъекта(СтруктурнаяЕдиница, "ВидУчетаОрдерныхСкладов, ИспользоватьОрдернуюСхемуПриОтгрузке
	|, ИспользоватьОрдернуюСхемуПриПеремещении, ИспользоватьОрдернуюСхемуПриПоступлении");
	
	Если Приход Тогда
		Возврат РеквизитыСклада.ВидУчетаОрдерныхСкладов = Перечисления.ВидыУчетаОрдерныхСкладов.УчетОстатковПоПрочимДокументам
		И РеквизитыСклада.ИспользоватьОрдернуюСхемуПриПоступлении;
	КонецЕсли;
	
	Если Перемещение Тогда
		Возврат РеквизитыСклада.ВидУчетаОрдерныхСкладов = Перечисления.ВидыУчетаОрдерныхСкладов.УчетОстатковПоПрочимДокументам
		И РеквизитыСклада.ИспользоватьОрдернуюСхемуПриПеремещении;
	КонецЕсли;
	
	Если Не Приход Тогда
		Возврат РеквизитыСклада.ВидУчетаОрдерныхСкладов = Перечисления.ВидыУчетаОрдерныхСкладов.УчетОстатковПоПрочимДокументам
		И РеквизитыСклада.ИспользоватьОрдернуюСхемуПриОтгрузке;
	КонецЕсли;
	
	Возврат Ложь;
	
КонецФункции

// Возвращает признак потребности контроля остатков по документам основания ордерных складов к поступлению
//
// Параметры:
//  МассивСтруктурныхЕдиниц - Массив - Массив структурных единиц для проверки
//
// Возвращаемое значение:
//  Булево - Признак контроля 
//
Функция МассивКонтроляПоЗапасамКПоступлениюПоСкладскимОрдерам(МассивСтруктурныхЕдиниц, ЭтоПеремещение = Ложь) Экспорт 
	
	Если Не МассивСтруктурныхЕдиниц.Количество() Тогда
		Возврат Новый Массив;
	КонецЕсли;

	Запрос = Новый Запрос;
	
	Запрос.УстановитьПараметр("СтруктурныеЕдиницы", МассивСтруктурныхЕдиниц);
	Запрос.УстановитьПараметр("ЭтоПеремещение", ЭтоПеремещение);
	
	Запрос.Текст = 
	"ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	СтруктурныеЕдиницы.Ссылка КАК Ссылка
	|ИЗ
	|	Справочник.СтруктурныеЕдиницы КАК СтруктурныеЕдиницы
	|ГДЕ
	|	СтруктурныеЕдиницы.Ссылка В(&СтруктурныеЕдиницы)
	|	И СтруктурныеЕдиницы.ИспользоватьОрдернуюСхемуПриПоступлении
	|	И СтруктурныеЕдиницы.ВидУчетаОрдерныхСкладов = ЗНАЧЕНИЕ(Перечисление.ВидыУчетаОрдерныхСкладов.УчетОстатковПоСкладскимОрдерам)
	|	И ВЫБОР
	|			КОГДА &ЭтоПеремещение
	|				ТОГДА СтруктурныеЕдиницы.ИспользоватьОрдернуюСхемуПриПеремещении
	|			ИНАЧЕ ИСТИНА
	|		КОНЕЦ";
	
	Возврат Запрос.Выполнить().Выгрузить();
	
КонецФункции

// Возвращает признак потребности контроля остатков по документам основания ордерных складов к отгрузке
//
// Параметры:
//  МассивСтруктурныхЕдиниц - Массив - Массив структурных единиц для проверки
//
// Возвращаемое значение:
//  Булево - Признак контроля 
//
Функция МассивКонтроляПоЗапасамКОтгрузкеПоСкладскимОрдерам(МассивСтруктурныхЕдиниц, ЭтоПеремещение = Ложь) Экспорт 
	
	Если Не МассивСтруктурныхЕдиниц.Количество() Тогда
		Возврат Новый Массив;
	КонецЕсли;

	Запрос = Новый Запрос;
	
	Запрос.УстановитьПараметр("СтруктурныеЕдиницы", МассивСтруктурныхЕдиниц);
	Запрос.УстановитьПараметр("ЭтоПеремещение", ЭтоПеремещение);
	
	Запрос.Текст = 
	"ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	СтруктурныеЕдиницы.Ссылка КАК Ссылка
	|ИЗ
	|	Справочник.СтруктурныеЕдиницы КАК СтруктурныеЕдиницы
	|ГДЕ
	|	СтруктурныеЕдиницы.Ссылка В(&СтруктурныеЕдиницы)
	|	И СтруктурныеЕдиницы.ИспользоватьОрдернуюСхемуПриОтгрузке
	|	И СтруктурныеЕдиницы.ВидУчетаОрдерныхСкладов = ЗНАЧЕНИЕ(Перечисление.ВидыУчетаОрдерныхСкладов.УчетОстатковПоСкладскимОрдерам)
	|	И ВЫБОР
	|			КОГДА &ЭтоПеремещение
	|				ТОГДА СтруктурныеЕдиницы.ИспользоватьОрдернуюСхемуПриПеремещении
	|			ИНАЧЕ ИСТИНА
	|		КОНЕЦ";
	
	Возврат Запрос.Выполнить().Выгрузить();
	
КонецФункции

// Возвращает признак учета остатков в разрезе складских ордеров
//
// Параметры:
//  СтруктурнаяЕдиница - СправочникСсылка - Склад по которому получается значение
//  Приход - Булево - Признак приходных или расходных документов
//  Перемещение - Булево - Признак операции перемещения
//
// Возвращаемое значение:
//  Булево - Признак учета 
//
Функция ИспользоватьОрдернуюСхемуПоСкладуВДокументе(СтруктурнаяЕдиница, Приход = Истина, Перемещение = Ложь) Экспорт 
	
	Если Не ЗначениеЗаполнено(СтруктурнаяЕдиница) Тогда
		Возврат Ложь
	КонецЕсли;
	
	РеквизитыСклада = ОбщегоНазначения.ЗначенияРеквизитовОбъекта(СтруктурнаяЕдиница, "ОрдерныйСклад, ВидУчетаОрдерныхСкладов, ИспользоватьОрдернуюСхемуПриОтгрузке
	|, ИспользоватьОрдернуюСхемуПриПеремещении, ИспользоватьОрдернуюСхемуПриПоступлении");
	
	Если Не РеквизитыСклада.ОрдерныйСклад Тогда
		Возврат Ложь
	КонецЕсли;
	
	Если Приход Тогда
		Возврат РеквизитыСклада.ИспользоватьОрдернуюСхемуПриПоступлении;
	КонецЕсли;
	
	Если Перемещение Тогда
		Возврат РеквизитыСклада.ИспользоватьОрдернуюСхемуПриПеремещении;
	КонецЕсли;
	
	Если Не Приход Тогда
		Возврат РеквизитыСклада.ИспользоватьОрдернуюСхемуПриОтгрузке;
	КонецЕсли;
	
	Возврат Ложь;
	
КонецФункции

// Возвращает признак контроля остатков по ячейкам по регистрам к поступлению/отгрзуке
//
// Параметры:
//  СтруктурнаяЕдиница - СправочникСсылка - Склад по которому получается значение
//
// Возвращаемое значение:
//  Булево - Признак контроля 
//
Функция КонтролироватьОстаткиПоЯчейкамКПоступлениюОтгрзуке(СтруктурнаяЕдиница) Экспорт 
	
	Если Не ЗначениеЗаполнено(СтруктурнаяЕдиница) Тогда
		Возврат Ложь
	КонецЕсли;
	
	РеквизитыСклада = ОбщегоНазначения.ЗначенияРеквизитовОбъекта(СтруктурнаяЕдиница, "ОрдерныйСклад, УчетОстатковПоЯчейкам");
	
	Если Не РеквизитыСклада.ОрдерныйСклад Тогда
		Возврат Ложь
	КонецЕсли;
	
	Возврат РеквизитыСклада.УчетОстатковПоЯчейкам;
	
КонецФункции

// Возвращает массив ордерных складов по массиву документов
//
// Параметры:
//  МассивДокументов - Массив - Массив документов из табличных частей которых будут выбраны ордерные склады
//  ИмяТабличнойЧасти - Строка - Имя табличной части для выборки структурных единиц
//
// Возвращаемое значение:
//  ТаблицаЗначений  - Состав ордерных складов по документам 
//
Функция ОрдерныеСкладыПоДокументам(МассивДокументов, ТипДокумента = "ПриходныйОрдер") Экспорт

	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("Ссылка", МассивДокументов);
	
	Если ТипДокумента = "ПриходныйОрдер" Тогда
		Запрос.Текст = ТекстЗапросаОрдерныеСкладыДокументыПоступления();
	КонецЕсли;
	
	Если ТипДокумента = "РасходныйОрдер" Тогда
		Запрос.Текст = ТекстЗапросаОрдерныеСкладыДокументыОтгрузки();
	КонецЕсли;

	
	Запрос.УстановитьПараметр("Ссылка", МассивДокументов);
	
	Возврат Запрос.Выполнить().Выгрузить();
	
КонецФункции

// Возвращает массив ордерных складов по массиву документов
//
// Параметры:
//  МассивДокументов - Массив - Массив документов для по которым будет сформированы приходные ордера
//  ТипДокумента - Строка - Тип формируемого ордера
//  НаОснованииОдногоДокумента - Булево - Признак того что в массиве один элемент прошедший контроль на множественное создание
//
// Возвращаемое значение:
//  МассивДокументов  - Массив ордеров
//
Функция СформироватьОрдераИЗаписать(МассивДокументов, ТипДокумента, НаОснованииОдногоДокумента = Ложь) Экспорт
	
	ТаблицаСоответствияОрдерныхСкладовДокументам = ОрдерныеСкладыПоДокументам(МассивДокументов, ТипДокумента);
	
	МассивСкладскихОрдеров = Новый Массив();
	
	Если Не ТаблицаСоответствияОрдерныхСкладовДокументам.Количество() Тогда
		Возврат МассивСкладскихОрдеров;
	КонецЕсли;
	
	СтруктураЗаполненияДокумента = Новый Структура("МассивДокументов, Склад");
	ПараметрыПоиска = Новый Структура("Документ");
	МассивЗаполнения = Новый Массив;
	
	ТекстЗапроса = ?(ТипДокумента = "ПриходныйОрдер", ТекстЗапросаТаблицаНоменклатурыПоКлючевымРеквизитамФинДокументыПоступелния(), "");
	ТекстЗапроса = ?(ТипДокумента = "РасходныйОрдер", ТекстЗапросаТаблицаНоменклатурыПоКлючевымРеквизитамФинДокументыОтгрузки(), ТекстЗапроса);
	
	Если Не ЗначениеЗаполнено(ТекстЗапроса) Тогда
		Возврат МассивСкладскихОрдеров;
	КонецЕсли;
	
	Запрос = Новый Запрос;
	Запрос.Текст = ТекстЗапроса;
	Запрос.УстановитьПараметр("Ссылка", МассивДокументов);
	
	ВыборкаОрганизации = Запрос.Выполнить().Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
	
	ТаблицаОбработкиДанных = СоздатьВременнуюТаблицуДляОбработкиДанных();
	
	ПараметрыПоискаСерии = Новый Структура("ДокументПоступления, КлючСвязи");
	ПараметрыПоискаОстаткиЗапасы = Новый Структура("Номенклатура, Характеристика, Партия, Ячейка, ДокументПоступления");
	ПараметрыПоискаОстаткиСерииНоменклатуры = Новый Структура("Номенклатура, Характеристика, Партия, Серия, ДокументПоступления");
	
	Пока ВыборкаОрганизации.Следующий() Цикл
		
		Организация = ВыборкаОрганизации.Организация;
		
		ВыборкаСтруктурнаяЕдиница = ВыборкаОрганизации.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
		Пока ВыборкаСтруктурнаяЕдиница.Следующий() Цикл
			
			СтруктурнаяЕдиница = ВыборкаСтруктурнаяЕдиница.СтруктурнаяЕдиница;
			
			ВыборкаКонтрагент = ВыборкаСтруктурнаяЕдиница.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
			
			Пока ВыборкаКонтрагент.Следующий() Цикл
				
				НовыйДокумент = Документы[ТипДокумента].СоздатьДокумент();
				НовыйДокумент.Заполнить(Неопределено);
				НовыйДокумент.Организация = Организация;
				НовыйДокумент.СтруктурнаяЕдиница = СтруктурнаяЕдиница;
				НовыйДокумент.Контрагент = ВыборкаКонтрагент.Контрагент;
				НовыйДокумент.Автор = Пользователи.ТекущийПользователь();
				НовыйДокумент.ПоложениеЯчейки = Перечисления.ПоложениеРеквизитаНаФорме.ВТабличнойЧасти;
				НовыйДокумент.ПоложениеДокументаПоступления = Перечисления.ПоложениеРеквизитаНаФорме.ВТабличнойЧасти;
				НовыйДокумент.Дата = ТекущаяДатаСеанса();
				
				Если НаОснованииОдногоДокумента Тогда
					НовыйДокумент.ДокументОснование = МассивДокументов[0];
				КонецЕсли;
				
				ВыборкаТаблицаОбработкиДанных = ВыборкаКонтрагент.Выбрать();
				
				ТаблицаОбработкиДанных.Очистить();
				
				//Подготовка данных
				
				Пока ВыборкаТаблицаОбработкиДанных.Следующий() Цикл
					
					СтрокаВременнойТаблицы = ТаблицаОбработкиДанных.Добавить();
					ЗаполнитьЗначенияСвойств(СтрокаВременнойТаблицы, ВыборкаТаблицаОбработкиДанных);
					
				КонецЦикла;
				
				ТаблицаНоменклатурыДокумента = ТаблицаОбработкиДанных.Скопировать(, "Номенклатура, Характеристика, Партия, ДокументПоступления, ЕдиницаИзмерения, КлючСвязи, Количество, Коэффициент, Ячейка");
				ТаблицаНоменклатурыДокумента.Свернуть("Номенклатура, Характеристика, Партия, ДокументПоступления, ЕдиницаИзмерения, КлючСвязи, Количество, Коэффициент, Ячейка");
				
				ТаблицаСерииНоменклатуры = ТаблицаОбработкиДанных.Скопировать(, "Серия, КлючСвязи, СерииКоличество, ДокументПоступления, Номенклатура, Характеристика, Партия");
				ТаблицаСерииНоменклатуры.Свернуть("Серия, КлючСвязи, СерииКоличество, ДокументПоступления, Номенклатура, Характеристика, Партия");
				
				Если ТипДокумента = "ПриходныйОрдер" Тогда
					СтруктураОстатков = СтруктураОстатковПоДокументамОснования(ТаблицаНоменклатурыДокумента.ВыгрузитьКолонку("ДокументПоступления"));
				ИначеЕсли ТипДокумента = "РасходныйОрдер" Тогда
					СтруктураОстатков = СтруктураОстатковПоДокументамОснованияОтгрузка(ТаблицаНоменклатурыДокумента.ВыгрузитьКолонку("ДокументПоступления"));
				КонецЕсли;
				
				ТаблицаОстаткиСерииНоменклатуры = СтруктураОстатков.ТаблицаОстаткиСерииНоменклатуры;
				ТаблицаОстаткиЗапасы = СтруктураОстатков.ТаблицаОстаткиЗапасы;
				
				//Заполнение табличной части с учетом остатков
				
				КлючСвязи = 1;
				Для Каждого СтрокаНоменклатурыКДобавлению Из ТаблицаНоменклатурыДокумента Цикл
					
					Если Не ЗначениеЗаполнено(СтрокаНоменклатурыКДобавлению.Количество) Тогда
						Продолжить;
					КонецЕсли;
					
					ЗаполнитьЗначенияСвойств(ПараметрыПоискаОстаткиЗапасы, СтрокаНоменклатурыКДобавлению);
					НайденныеОстаткиЗапасы = ТаблицаОстаткиЗапасы.НайтиСтроки(ПараметрыПоискаОстаткиЗапасы);
					
					Если Не НайденныеОстаткиЗапасы.Количество() Или (НайденныеОстаткиЗапасы.Количество() И НайденныеОстаткиЗапасы[0].Количество = 0) Тогда
						Продолжить
					КонецЕсли;
					
					ЗаполнитьЗначенияСвойств(ПараметрыПоискаСерии, СтрокаНоменклатурыКДобавлению);
					НайденныеСерии = ТаблицаСерииНоменклатуры.НайтиСтроки(ПараметрыПоискаСерии);
					
					КоличествоСерий = 0;
					ИспользуютсяСерииВСтроке = Ложь;
					Для Каждого СтрокаСерии Из НайденныеСерии Цикл
						
						ИспользуютсяСерииВСтроке = Истина;
						
						ЗаполнитьЗначенияСвойств(ПараметрыПоискаОстаткиСерииНоменклатуры, СтрокаСерии);
						НайденныеОстаткиСерий = ТаблицаОстаткиСерииНоменклатуры.НайтиСтроки(ПараметрыПоискаОстаткиСерииНоменклатуры);
						
						Если Не НайденныеОстаткиСерий.Количество() Или (НайденныеОстаткиСерий.Количество() И НайденныеОстаткиСерий[0].Количество = 0) Тогда
							Продолжить
						КонецЕсли;
						
						ОстатокСерий = НайденныеОстаткиСерий[0];
						
						Если Не ОстатокСерий.Количество > 0 Тогда
							Продолжить;
						КонецЕсли;
						
						НоваяСтрокаСерии = НовыйДокумент.СерииНоменклатуры.Добавить();
						ЗаполнитьЗначенияСвойств(НоваяСтрокаСерии, СтрокаСерии);
						НоваяСтрокаСерии.КлючСвязи = КлючСвязи;
						НоваяСтрокаСерии.Количество = СтрокаСерии.СерииКоличество;
						
						Если НоваяСтрокаСерии.Количество >= ОстатокСерий.Количество Тогда
							НоваяСтрокаСерии.Количество = ОстатокСерий.Количество;
						КонецЕсли;
						
						ОстатокСерий.Количество = ОстатокСерий.Количество - НоваяСтрокаСерии.Количество;
						
						КоличествоСерий = КоличествоСерий + НоваяСтрокаСерии.Количество;
						
					КонецЦикла;
					
					Если ИспользуютсяСерииВСтроке И КоличествоСерий = 0 Тогда
						КлючСвязи = КлючСвязи + 1;
						Продолжить
					КонецЕсли;
					
					ОстатокЗапасов = НайденныеОстаткиЗапасы[0];
					
					НоваяСтрокаЗапасы = НовыйДокумент.Запасы.Добавить();
					ЗаполнитьЗначенияСвойств(НоваяСтрокаЗапасы, СтрокаНоменклатурыКДобавлению);
					
					КоличествоВСтрокеЗапасов = ?(КоличествоСерий > 0, КоличествоСерий, НоваяСтрокаЗапасы.Количество);
					
					Если КоличествоВСтрокеЗапасов >= ОстатокЗапасов.Количество Тогда
						КоличествоВСтрокеЗапасов = ОстатокЗапасов.Количество;
						ОстатокЗапасов.Количество = 0;
					Иначе
						ОстатокЗапасов.Количество = ОстатокЗапасов.Количество - КоличествоВСтрокеЗапасов;
					КонецЕсли;
					
					НоваяСтрокаЗапасы.Количество = КоличествоВСтрокеЗапасов;
					
					НоваяСтрокаЗапасы.КлючСвязи = КлючСвязи;
					КлючСвязи = КлючСвязи + 1;
					
					Если СерииНоменклатурыУНФ.ИспользоватьСерииНоменклатурыОстатки() = Истина Тогда
						НоваяСтрокаЗапасы.СерииНоменклатуры = СерииНоменклатурыУНФ.ПредставлениеСерийНоменклатуры(
						НовыйДокумент.СерииНоменклатуры, НоваяСтрокаЗапасы.КлючСвязи)
					КонецЕсли;
					
				КонецЦикла;
				
				НовыйДокумент.Записать();
				МассивСкладскихОрдеров.Добавить(НовыйДокумент.Ссылка);
				
			КонецЦикла
		КонецЦикла
	КонецЦикла;
	
	Возврат МассивСкладскихОрдеров;
	
КонецФункции

//Заполненяет ордер при открытии формы документа с идентичными ключевыми реквизитами
//
// Параметры:
//  Объект - ДанныеФормыСтруктура - Объект заполнения
//  ДанныеЗаполнения - Структура - Данные заполнения объекта
//
Процедура ЗаполнитьОрдерСУчетомОстатковКлючевыеРеквизитыИдентичны(Объект, ДанныеЗаполнения, ТипДокумента) Экспорт

	МассивДокументов = Новый Массив;
	МассивДокументов.Добавить(ДанныеЗаполнения);
	
	Если ТипЗнч(ДанныеЗаполнения) = Тип("Массив") Тогда
		Для Каждого ДокументМассива Из ДанныеЗаполнения Цикл
			МассивДокументов.Добавить(ДокументМассива);
		КонецЦикла
	Иначе
		МассивДокументов.Добавить(ДанныеЗаполнения);
	КонецЕсли;
	
	Если Не МассивДокументов.Количество() Тогда
		Возврат;
	КонецЕсли;
	
	ЗаполнитьЗначенияСвойств(Объект, МассивДокументов[0]);
	
	Объект.Номер = Неопределено;
	Объект.Дата = ТекущаяДатаСеанса();
	
	ТаблицаСоответствияОрдерныхСкладовДокументам = СкладскойУчетСервер.ОрдерныеСкладыПоДокументам(МассивДокументов, ТипДокумента);
	
	СтруктураЗаполненияДокумента = Новый Структура("МассивДокументов, Склад");
	ПараметрыПоиска = Новый Структура("Документ");
	МассивЗаполнения = Новый Массив;
	
	ТекстЗапроса = ?(ТипДокумента = "ПриходныйОрдер", ТекстЗапросаТаблицаНоменклатурыПоКлючевымРеквизитамФинДокументыПоступелния(), "");
	ТекстЗапроса = ?(ТипДокумента = "РасходныйОрдер", ТекстЗапросаТаблицаНоменклатурыПоКлючевымРеквизитамФинДокументыОтгрузки(), ТекстЗапроса);
	
	Если Не ЗначениеЗаполнено(ТекстЗапроса) Тогда
		Возврат
	КонецЕсли;
	
	Запрос = Новый Запрос;
	Запрос.Текст = ТекстЗапроса;
	Запрос.УстановитьПараметр("Ссылка", МассивДокументов);
	
	ВыборкаОрганизации = Запрос.Выполнить().Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
	
	ТаблицаОбработкиДанных = СоздатьВременнуюТаблицуДляОбработкиДанных();
	
	ПараметрыПоискаСерии = Новый Структура("ДокументПоступления, КлючСвязи");
	ПараметрыПоискаОстаткиСерииНоменклатуры = Новый Структура("Номенклатура, Характеристика, Партия, Серия, ДокументПоступления");
	
	РазрешитьСкладыВТабличныхЧастях = ПолучитьФункциональнуюОпцию("РазрешитьСкладыВТабличныхЧастях");
	
	Пока ВыборкаОрганизации.Следующий() Цикл
		
		Организация = ВыборкаОрганизации.Организация;
		
		ВыборкаСтруктурнаяЕдиница = ВыборкаОрганизации.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
		Пока ВыборкаСтруктурнаяЕдиница.Следующий() Цикл
			
			СтруктурнаяЕдиница = ВыборкаСтруктурнаяЕдиница.СтруктурнаяЕдиница;
			
			Если СкладскойУчетСервер.КонтролироватьОстаткиПоЯчейкамКПоступлениюОтгрзуке(СтруктурнаяЕдиница) Тогда
				ПараметрыПоискаОстаткиЗапасы = Новый Структура("Номенклатура, Характеристика, Партия, Ячейка, ДокументПоступления");
			Иначе
				ПараметрыПоискаОстаткиЗапасы = Новый Структура("Номенклатура, Характеристика, Партия, ДокументПоступления");
			КонецЕсли;
			
			ВыборкаКонтрагент = ВыборкаСтруктурнаяЕдиница.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
			
			Пока ВыборкаКонтрагент.Следующий() Цикл
				
				Объект.Организация = Организация;
				Объект.СтруктурнаяЕдиница = СтруктурнаяЕдиница;
				Объект.Контрагент = ВыборкаКонтрагент.Контрагент;
				Объект.Автор = Пользователи.ТекущийПользователь();
				Объект.ПоложениеЯчейки = ?(РазрешитьСкладыВТабличныхЧастях, Перечисления.ПоложениеРеквизитаНаФорме.ВТабличнойЧасти, Перечисления.ПоложениеРеквизитаНаФорме.ВШапке);
				Объект.ПоложениеДокументаПоступления = ?(МассивДокументов.Количество() = 1, Перечисления.ПоложениеРеквизитаНаФорме.ВШапке, Перечисления.ПоложениеРеквизитаНаФорме.ВТабличнойЧасти);
				Объект.ДокументПоступления = ?(МассивДокументов.Количество() = 1, МассивДокументов[0], Неопределено);
				Объект.Дата = ТекущаяДатаСеанса();
				
				Объект.ДокументОснование = МассивДокументов[0];
				
				ВыборкаТаблицаОбработкиДанных = ВыборкаКонтрагент.Выбрать();
				
				ТаблицаОбработкиДанных.Очистить();
				
				//Подготовка данных
				
				Пока ВыборкаТаблицаОбработкиДанных.Следующий() Цикл
					
					СтрокаВременнойТаблицы = ТаблицаОбработкиДанных.Добавить();
					ЗаполнитьЗначенияСвойств(СтрокаВременнойТаблицы, ВыборкаТаблицаОбработкиДанных);
					
				КонецЦикла;
				
				ТаблицаНоменклатурыДокумента = ТаблицаОбработкиДанных.Скопировать(, "Номенклатура, Характеристика, Партия, ДокументПоступления, ЕдиницаИзмерения, КлючСвязи, Количество, Коэффициент, Ячейка");
				ТаблицаНоменклатурыДокумента.Свернуть("Номенклатура, Характеристика, Партия, ДокументПоступления, ЕдиницаИзмерения, КлючСвязи, Количество, Коэффициент, Ячейка");
				
				ТаблицаСерииНоменклатуры = ТаблицаОбработкиДанных.Скопировать(, "Серия, КлючСвязи, СерииКоличество, ДокументПоступления, Номенклатура, Характеристика, Партия");
				ТаблицаСерииНоменклатуры.Свернуть("Серия, КлючСвязи, СерииКоличество, ДокументПоступления, Номенклатура, Характеристика, Партия");
				
				Если ТипДокумента = "ПриходныйОрдер" Тогда
					СтруктураОстатков = СтруктураОстатковПоДокументамОснования(ТаблицаНоменклатурыДокумента.ВыгрузитьКолонку("ДокументПоступления"));
				ИначеЕсли ТипДокумента = "РасходныйОрдер" Тогда
					СтруктураОстатков = СтруктураОстатковПоДокументамОснованияОтгрузка(ТаблицаНоменклатурыДокумента.ВыгрузитьКолонку("ДокументПоступления"));
				КонецЕсли;
				
				ТаблицаОстаткиСерииНоменклатуры = СтруктураОстатков.ТаблицаОстаткиСерииНоменклатуры;
				ТаблицаОстаткиЗапасы = СтруктураОстатков.ТаблицаОстаткиЗапасы;
				
				//Заполнение табличной части с учетом остатков
				
				КлючСвязи = 1;
				Для Каждого СтрокаНоменклатурыКДобавлению Из ТаблицаНоменклатурыДокумента Цикл
					
					Если Не ЗначениеЗаполнено(СтрокаНоменклатурыКДобавлению.Количество) Тогда
						Продолжить;
					КонецЕсли;
					
					ЗаполнитьЗначенияСвойств(ПараметрыПоискаОстаткиЗапасы, СтрокаНоменклатурыКДобавлению);
					НайденныеОстаткиЗапасы = ТаблицаОстаткиЗапасы.НайтиСтроки(ПараметрыПоискаОстаткиЗапасы);
					
					Если Не НайденныеОстаткиЗапасы.Количество() Или (НайденныеОстаткиЗапасы.Количество() И НайденныеОстаткиЗапасы[0].Количество = 0) Тогда
						Продолжить
					КонецЕсли;
					
					ЗаполнитьЗначенияСвойств(ПараметрыПоискаСерии, СтрокаНоменклатурыКДобавлению);
					НайденныеСерии = ТаблицаСерииНоменклатуры.НайтиСтроки(ПараметрыПоискаСерии);
					
					КоличествоСерий = 0;
					ИспользуютсяСерииВСтроке = Ложь;
					Для Каждого СтрокаСерии Из НайденныеСерии Цикл
						
						ЗаполнитьЗначенияСвойств(ПараметрыПоискаОстаткиСерииНоменклатуры, СтрокаСерии);
						НайденныеОстаткиСерий = ТаблицаОстаткиСерииНоменклатуры.НайтиСтроки(ПараметрыПоискаОстаткиСерииНоменклатуры);
						
						ИспользуютсяСерииВСтроке = ?(ИспользуютсяСерииВСтроке, ИспользуютсяСерииВСтроке, ЗначениеЗаполнено(СтрокаСерии.Серия));
						
						Если Не НайденныеОстаткиСерий.Количество() Или (НайденныеОстаткиСерий.Количество() И НайденныеОстаткиСерий[0].Количество = 0) Тогда
							Продолжить
						КонецЕсли;
						
						ОстатокСерий = НайденныеОстаткиСерий[0];
						
						Если Не ОстатокСерий.Количество > 0 Тогда
							Продолжить;
						КонецЕсли;
						
						НоваяСтрокаСерии = Объект.СерииНоменклатуры.Добавить();
						ЗаполнитьЗначенияСвойств(НоваяСтрокаСерии, СтрокаСерии);
						НоваяСтрокаСерии.КлючСвязи = КлючСвязи;
						НоваяСтрокаСерии.Количество = СтрокаСерии.СерииКоличество;
						
						Если НоваяСтрокаСерии.Количество >= ОстатокСерий.Количество Тогда
							НоваяСтрокаСерии.Количество = ОстатокСерий.Количество;
						КонецЕсли;
						
						КоличествоСерий = КоличествоСерий + НоваяСтрокаСерии.Количество;
						ОстатокСерий.Количество = ОстатокСерий.Количество - НоваяСтрокаСерии.Количество;
						
					КонецЦикла;
					
					Если ИспользуютсяСерииВСтроке И КоличествоСерий = 0 Тогда
						КлючСвязи = КлючСвязи + 1;
						Продолжить;
					КонецЕсли;
					
					ОстатокЗапасов = НайденныеОстаткиЗапасы[0];
					
					НоваяСтрокаЗапасы = Объект.Запасы.Добавить();
					ЗаполнитьЗначенияСвойств(НоваяСтрокаЗапасы, СтрокаНоменклатурыКДобавлению);
					
					НоваяСтрокаЗапасы.КлючСвязи = КлючСвязи;
					
					КлючСвязи = КлючСвязи + 1;
					
					Если ТипЗнч(НоваяСтрокаЗапасы.ЕдиницаИзмерения) = ТИП("СправочникСсылка.КлассификаторЕдиницИзмерения") Тогда
						
						Если Не КоличествоСерий = 0 Тогда
							НоваяСтрокаЗапасы.Количество = КоличествоСерий;
						КонецЕсли;
						
						Если НоваяСтрокаЗапасы.Количество >= ОстатокЗапасов.Количество Тогда
							НоваяСтрокаЗапасы.Количество = ОстатокЗапасов.Количество;
							ОстатокЗапасов.Количество = 0;
						Иначе
							ОстатокЗапасов.Количество = ОстатокЗапасов.Количество - НоваяСтрокаЗапасы.Количество;
						КонецЕсли;
						
					Иначе
						
						КоличествоСтрокиВЕдиницахХранения = НоваяСтрокаЗапасы.Количество * НоваяСтрокаЗапасы.ЕдиницаИзмерения.Коэффициент;
						
						Если Не КоличествоСерий = 0 Тогда
							КоличествоСтрокиВЕдиницахХранения = КоличествоСерий;
						КонецЕсли;
						
						Если КоличествоСтрокиВЕдиницахХранения >= ОстатокЗапасов.Количество Тогда
							КоличествоСтрокиВЕдиницахХранения = ОстатокЗапасов.Количество;
							ОстатокЗапасов.Количество = 0;
						Иначе
							ОстатокЗапасов.Количество = ОстатокЗапасов.Количество - КоличествоСтрокиВЕдиницахХранения;
						КонецЕсли;
						
						НоваяСтрокаЗапасы.Количество = КоличествоСтрокиВЕдиницахХранения/ НоваяСтрокаЗапасы.ЕдиницаИзмерения.Коэффициент;
						
					КонецЕсли;
					
					Если СерииНоменклатурыУНФ.ИспользоватьСерииНоменклатурыОстатки() = Истина Тогда
						НоваяСтрокаЗапасы.СерииНоменклатуры = СерииНоменклатурыУНФ.ПредставлениеСерийНоменклатуры(
						Объект.СерииНоменклатуры, НоваяСтрокаЗапасы.КлючСвязи)
					КонецЕсли;
					
				КонецЦикла;
				
			КонецЦикла
		КонецЦикла
	КонецЦикла;
	
КонецПроцедуры

//Заполненяет табличную часть при открытии формы финансового документа с идентичными ключевыми реквизитами
//
// Параметры:
//  Объект - ДанныеФормыСтруктура - Объект заполнения
//  ДанныеЗаполнения - Структура - Данные заполнения объекта
//
Процедура ЗаполнитьТабличнуюЧастьДокументаСУчетомОстатковКлючевыеРеквизитыИдентичны(Объект, ДанныеЗаполнения, ТипДокумента) Экспорт
	
	ОблагаетсяНДС = Объект.НалогообложениеНДС = Перечисления.ТипыНалогообложенияНДС.ОблагаетсяНДС;
	Компания = Константы.УчетПоКомпании.Компания(Объект.Организация);
	УчетГТД = ПолучитьФункциональнуюОпцию("УчетГТД");
	
	ИгнорироватьГТД = Ложь;
	ИгнорироватьНДС = Ложь;
	
	МассивДокументов = Новый Массив;
	
	Если ТипЗнч(ДанныеЗаполнения) = Тип("Массив") Тогда
		Для Каждого ДокументМассива Из ДанныеЗаполнения Цикл
			МассивДокументов.Добавить(ДокументМассива);
		КонецЦикла
	Иначе
		МассивДокументов.Добавить(ДанныеЗаполнения);
	КонецЕсли;
	
	Если Не МассивДокументов.Количество() Тогда
		Возврат;
	КонецЕсли;
	
	СтруктураЗаполненияДокумента = Новый Структура("МассивДокументов, Склад");
	ПараметрыПоиска = Новый Структура("Документ");
	МассивЗаполнения = Новый Массив;
	
	ТекстЗапроса = ?(ТипДокумента = "ПриходныйОрдер", ТекстЗапросаТаблицаНоменклатурыПоКлючевымРеквизитамПриходныеОрдера(), "");
	ТекстЗапроса = ?(ТипДокумента = "РасходныйОрдер", ТекстЗапросаТаблицаНоменклатурыПоКлючевымРеквизитамРасходныеОрдера(), ТекстЗапроса);
	
	Если Не ЗначениеЗаполнено(ТекстЗапроса) Тогда
		Возврат
	КонецЕсли;
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("Ссылка", МассивДокументов);
	Запрос.Текст = ТекстЗапроса;
		
	ВыборкаОрганизации = Запрос.Выполнить().Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
	
	ТаблицаОбработкиДанных = СоздатьВременнуюТаблицуДляОбработкиДанных();
	
	ПараметрыПоискаСерии = Новый Структура("ДокументПоступления, КлючСвязи");
	
	Если СкладскойУчетСервер.КонтролироватьОстаткиПоЯчейкамКПоступлениюОтгрзуке(МассивДокументов[0].СтруктурнаяЕдиница) Тогда
		ПараметрыПоискаОстаткиЗапасы = Новый Структура("Номенклатура, Характеристика, Партия, Ячейка, ДокументПоступления");
	Иначе
		ПараметрыПоискаОстаткиЗапасы = Новый Структура("Номенклатура, Характеристика, Партия, ДокументПоступления");
	КонецЕсли;
	
	ПараметрыПоискаОстаткиСерииНоменклатуры = Новый Структура("Номенклатура, Характеристика, Партия, Серия, ДокументПоступления");
	
	Если ТипДокумента = "РасходныйОрдер" Тогда
		
		СтруктураЦен = Новый Структура;
		СтруктураЦен.Вставить("ВидЦен", Объект.ВидЦен);
		СтруктураЦен.Вставить("ЭтоНовыйОбъект", Истина);
		СтруктураЦен.Вставить("ДатаОбработки", ТекущаяДатаСеанса());
		СтруктураЦен.Вставить("Номенклатура", Неопределено);
		СтруктураЦен.Вставить("Коэффициент", 1);
		СтруктураЦен.Вставить("ВалютаДокумента",Объект. ВалютаДокумента);
		СтруктураЦен.Вставить("Характеристика", Неопределено);
		СтруктураЦен.Вставить("СуммаВключаетНДС", Объект.СуммаВключаетНДС);
		
		ДанныеСтроки = Новый Структура;
		ДанныеСтроки.Вставить("Количество", 1);
		ДанныеСтроки.Вставить("Цена", 0);
		ДанныеСтроки.Вставить("Сумма", 0);
		ДанныеСтроки.Вставить("ПроцентСкидкиНаценки", 0);
		ДанныеСтроки.Вставить("СуммаСкидкиНаценки", 0);
		ДанныеСтроки.Вставить("СтавкаНДС", Неопределено);
		ДанныеСтроки.Вставить("СуммаНДС", 0);
		ДанныеСтроки.Вставить("СуммаВключаетНДС", Объект.СуммаВключаетНДС);
		ДанныеСтроки.Вставить("Всего", 0);
		
	КонецЕсли;
	
	Пока ВыборкаОрганизации.Следующий() Цикл
		
		Организация = ВыборкаОрганизации.Организация;
		
		ВыборкаСтруктурнаяЕдиница = ВыборкаОрганизации.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
		Пока ВыборкаСтруктурнаяЕдиница.Следующий() Цикл
			
			ВыборкаКонтрагент = ВыборкаСтруктурнаяЕдиница.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
			
			Пока ВыборкаКонтрагент.Следующий() Цикл
				
				ВыборкаТаблицаОбработкиДанных = ВыборкаКонтрагент.Выбрать();
				
				ТаблицаОбработкиДанных.Очистить();
				
				//Подготовка данных
				
				Пока ВыборкаТаблицаОбработкиДанных.Следующий() Цикл
					
					СтрокаВременнойТаблицы = ТаблицаОбработкиДанных.Добавить();
					ЗаполнитьЗначенияСвойств(СтрокаВременнойТаблицы, ВыборкаТаблицаОбработкиДанных);
					
				КонецЦикла;
				
				ТаблицаНоменклатурыДокумента = ТаблицаОбработкиДанных.Скопировать(, "Номенклатура, Характеристика, Партия, ДокументПоступления, ЕдиницаИзмерения, КлючСвязи, Количество, Коэффициент, Ячейка");
				ТаблицаНоменклатурыДокумента.Свернуть("Номенклатура, Характеристика, Партия, ДокументПоступления, ЕдиницаИзмерения, КлючСвязи, Количество, Коэффициент, Ячейка");
				
				ТаблицаСерииНоменклатуры = ТаблицаОбработкиДанных.Скопировать(, "Серия, КлючСвязи, СерииКоличество, ДокументПоступления, Номенклатура, Характеристика, Партия");
				ТаблицаСерииНоменклатуры.Свернуть("Серия, КлючСвязи, СерииКоличество, ДокументПоступления, Номенклатура, Характеристика, Партия");
				
				Если ТипДокумента = "ПриходныйОрдер" Тогда
					СтруктураОстатков = СтруктураОстатковПоДокументамОснования(ТаблицаНоменклатурыДокумента.ВыгрузитьКолонку("ДокументПоступления"));
				ИначеЕсли ТипДокумента = "РасходныйОрдер" Тогда
					СтруктураОстатков = СтруктураОстатковПоДокументамОснованияОтгрузка(ТаблицаНоменклатурыДокумента.ВыгрузитьКолонку("ДокументПоступления"));
				КонецЕсли;
				
				ТаблицаОстаткиСерииНоменклатуры = СтруктураОстатков.ТаблицаОстаткиСерииНоменклатуры;
				ТаблицаОстаткиЗапасы = СтруктураОстатков.ТаблицаОстаткиЗапасы;
				
				//Заполнение табличной части с учетом остатков
				
				КлючСвязи = 1;
				Для Каждого СтрокаНоменклатурыКДобавлению Из ТаблицаНоменклатурыДокумента Цикл
					
					Если Не ЗначениеЗаполнено(СтрокаНоменклатурыКДобавлению.Количество) Тогда
						Продолжить;
					КонецЕсли;
					
					ЗаполнитьЗначенияСвойств(ПараметрыПоискаОстаткиЗапасы, СтрокаНоменклатурыКДобавлению);
					НайденныеОстаткиЗапасы = ТаблицаОстаткиЗапасы.НайтиСтроки(ПараметрыПоискаОстаткиЗапасы);
					
					Если Не НайденныеОстаткиЗапасы.Количество() Или (НайденныеОстаткиЗапасы.Количество() И НайденныеОстаткиЗапасы[0].Количество = 0) Тогда
						Продолжить
					КонецЕсли;
					
					ЗаполнитьЗначенияСвойств(ПараметрыПоискаСерии, СтрокаНоменклатурыКДобавлению);
					НайденныеСерии = ТаблицаСерииНоменклатуры.НайтиСтроки(ПараметрыПоискаСерии);
					
					ИспользуютсяСерииВСтроке = Ложь;
					КоличествоСерий = 0;
					Для Каждого СтрокаСерии Из НайденныеСерии Цикл
						
						ЗаполнитьЗначенияСвойств(ПараметрыПоискаОстаткиСерииНоменклатуры, СтрокаСерии);
						НайденныеОстаткиСерий = ТаблицаОстаткиСерииНоменклатуры.НайтиСтроки(ПараметрыПоискаОстаткиСерииНоменклатуры);
						
						ИспользуютсяСерииВСтроке = ?(ИспользуютсяСерииВСтроке, ИспользуютсяСерииВСтроке, ЗначениеЗаполнено(СтрокаСерии.Серия));
						
						Если Не НайденныеОстаткиСерий.Количество() Или (НайденныеОстаткиСерий.Количество() И НайденныеОстаткиСерий[0].Количество = 0) Тогда
							Продолжить
						КонецЕсли;
						
						ОстатокСерий = НайденныеОстаткиСерий[0];
						
						Если Не ОстатокСерий.Количество > 0 Тогда
							Продолжить;
						КонецЕсли;
						
						НоваяСтрокаСерии = Объект.СерииНоменклатуры.Добавить();
						ЗаполнитьЗначенияСвойств(НоваяСтрокаСерии, СтрокаСерии);
						НоваяСтрокаСерии.КлючСвязи = КлючСвязи;
						НоваяСтрокаСерии.Количество = СтрокаСерии.СерииКоличество;
						
						Если НоваяСтрокаСерии.Количество >= ОстатокСерий.Количество Тогда
							НоваяСтрокаСерии.Количество = ОстатокСерий.Количество;
						КонецЕсли;
						
						КоличествоСерий = КоличествоСерий + НоваяСтрокаСерии.Количество;
						ОстатокСерий.Количество = ОстатокСерий.Количество - НоваяСтрокаСерии.Количество;
						
					КонецЦикла;
					
					Если ИспользуютсяСерииВСтроке И КоличествоСерий = 0 Тогда
						КлючСвязи = КлючСвязи + 1;
						Продолжить;
					КонецЕсли;
					
					ОстатокЗапасов = НайденныеОстаткиЗапасы[0];
					
					НоваяСтрокаЗапасы = Объект.Запасы.Добавить();
					ЗаполнитьЗначенияСвойств(НоваяСтрокаЗапасы, СтрокаНоменклатурыКДобавлению);
					НоваяСтрокаЗапасы.СтруктурнаяЕдиница = Объект.СтруктурнаяЕдиница;
					
					НоваяСтрокаЗапасы.КлючСвязи = КлючСвязи;
					КлючСвязи = КлючСвязи + 1;
					
					Если ТипЗнч(НоваяСтрокаЗапасы.ЕдиницаИзмерения) = ТИП("СправочникСсылка.КлассификаторЕдиницИзмерения") Тогда
						
						Если Не КоличествоСерий = 0 Тогда
							НоваяСтрокаЗапасы.Количество = КоличествоСерий;
						КонецЕсли;
						
						Если НоваяСтрокаЗапасы.Количество >= ОстатокЗапасов.Количество Тогда
							НоваяСтрокаЗапасы.Количество = ОстатокЗапасов.Количество;
							ОстатокЗапасов.Количество = 0;
						Иначе
							ОстатокЗапасов.Количество = ОстатокЗапасов.Количество - НоваяСтрокаЗапасы.Количество;
						КонецЕсли;
						
					Иначе
						
						КоличествоСтрокиВЕдиницахХранения = НоваяСтрокаЗапасы.Количество * НоваяСтрокаЗапасы.ЕдиницаИзмерения.Коэффициент;
						
						Если Не КоличествоСерий = 0 Тогда
							КоличествоСтрокиВЕдиницахХранения = КоличествоСерий;
						КонецЕсли;
						
						Если КоличествоСтрокиВЕдиницахХранения >= ОстатокЗапасов.Количество Тогда
							КоличествоСтрокиВЕдиницахХранения = ОстатокЗапасов.Количество;
							ОстатокЗапасов.Количество = 0;
						Иначе
							ОстатокЗапасов.Количество = ОстатокЗапасов.Количество - КоличествоСтрокиВЕдиницахХранения;
						КонецЕсли;
						
						НоваяСтрокаЗапасы.Количество = КоличествоСтрокиВЕдиницахХранения/ НоваяСтрокаЗапасы.ЕдиницаИзмерения.Коэффициент;
						
					КонецЕсли;
					
					Если СерииНоменклатурыУНФ.ИспользоватьСерииНоменклатурыОстатки() = Истина Тогда
						НоваяСтрокаЗапасы.СерииНоменклатуры = СерииНоменклатурыУНФ.ПредставлениеСерийНоменклатуры(
						Объект.СерииНоменклатуры, НоваяСтрокаЗапасы.КлючСвязи)
					КонецЕсли;
					
					Если Не ИгнорироватьНДС Тогда
						Если ОблагаетсяНДС Тогда
							Партия = НоваяСтрокаЗапасы.Партия;
							Если ЗначениеЗаполнено(Партия) И Партия.Статус = Перечисления.СтатусыПартий.ТоварыНаКомиссии 
								И Партия.НалогообложениеНДС = Перечисления.ТипыНалогообложенияНДС.НеОблагаетсяНДС Тогда
								
								НоваяСтрокаЗапасы.СтавкаНДС = Справочники.СтавкиНДС.СтавкаНДС(Перечисления.ВидыСтавокНДС.БезНДС);;
							Иначе
								
								Если ЗначениеЗаполнено(НоваяСтрокаЗапасы.Номенклатура.ВидСтавкиНДС) Тогда
									НоваяСтрокаЗапасы.СтавкаНДС = Справочники.СтавкиНДС.СтавкаНДС(НоваяСтрокаЗапасы.Номенклатура.ВидСтавкиНДС,ТекущаяДатаСеанса());
								Иначе
									НоваяСтрокаЗапасы.СтавкаНДС = Справочники.СтавкиНДС.СтавкаНДС(Компания.ВидСтавкиНДСПоУмолчанию, ТекущаяДатаСеанса());
								КонецЕсли;
								
							КонецЕсли;
						Иначе
							
							Если Объект.НалогообложениеНДС = Перечисления.ТипыНалогообложенияНДС.НеОблагаетсяНДС Тогда
								СтавкаНДСПоУмолчанию = УправлениеНебольшойФирмойПовтИсп.ПолучитьСтавкуНДСБезНДС();
							Иначе
								СтавкаНДСПоУмолчанию = УправлениеНебольшойФирмойПовтИсп.ПолучитьСтавкуНДСНоль();
							КонецЕсли;
							
							НоваяСтрокаЗапасы.СтавкаНДС = СтавкаНДСПоУмолчанию;
							
						КонецЕсли;
						
					КонецЕсли;
					
					Если Не ИгнорироватьГТД И УчетГТД Тогда
						НоваяСтрокаЗапасы.СтранаПроисхождения = НоваяСтрокаЗапасы.Номенклатура.СтранаПроисхождения;
					КонецЕсли;
					
					Если ТипДокумента = "РасходныйОрдер" Тогда
						
						ЗаполнитьЗначенияСвойств(СтруктураЦен, НоваяСтрокаЗапасы);
						НоваяСтрокаЗапасы.Цена = ЦенообразованиеСервер.ПолучитьЦенуНоменклатурыПоВидуЦен(СтруктураЦен);
						
						ЗаполнитьЗначенияСвойств(ДанныеСтроки, НоваяСтрокаЗапасы);
						ЗаполнениеОбъектовУНФ.РассчитатьСуммыВСтрокеТабличнойЧасти(ДанныеСтроки);
						ЗаполнитьЗначенияСвойств(НоваяСтрокаЗапасы, ДанныеСтроки);
						
						НоваяСтрокаЗапасы.ТипНоменклатурыЗапас = Истина;
						
					КонецЕсли;
					
				КонецЦикла;
				
			КонецЦикла
		КонецЦикла
	КонецЦикла;
	
КонецПроцедуры

// Возвращает признак создания группы документов при различных ключевых реквизитах
//
// Параметры:
//  МассивДокументов - Массив - Массив документов для по которым будет сформированы приходные ордера
//  ТипДокументаПроверки - Строка - Тип проверяемого ордера
//
// Возвращаемое значение:
//  МассивДокументов - Булево - Признак создания группы документов
//
Функция ПроверитьКлючевыеРеквизитыДокументов(МассивДокументов, ТипДокументаПроверки = "Приход") Экспорт
	
	СтруктураДанных = Новый Структура();
	
	Запрос = Новый Запрос;
	
	Если ТипДокументаПроверки = "Приход" Тогда
		Запрос.Текст = ТекстЗапросаПроверкаКлючевыхРеквизитовДокументыПоступления();
	ИначеЕсли ТипДокументаПроверки = "Расход" Тогда
		Запрос.Текст = ТекстЗапросаПроверкаКлючевыхРеквизитовДокументыОтгрузки();
	Иначе
		
		СтруктураДанных.Вставить("СформироватьНесколькоДокументов", Ложь);
		СтруктураДанных.Вставить("ПредставлениеДанных", "");
		
		Возврат СтруктураДанных;
		
	КонецЕсли;
	
	Запрос.УстановитьПараметр("Ссылка", МассивДокументов);
	
	Результат = Запрос.Выполнить();
	Если Результат.Пустой() Тогда
		СтруктураДанных.Вставить("СформироватьНесколькоДокументов", Ложь);
		СтруктураДанных.Вставить("ПредставлениеДанных", "");
	Иначе
		ПредставлениеДанных = "";
		Выборка = Результат.Выбрать();
		
		СформироватьНесколькоДокументов = Ложь;
		РазныеОрганизации = Ложь;
		РазныеСклады = Ложь;
		РазныеКонтрагенты = Ложь;
		Пока Выборка.Следующий() Цикл
			
			Если Выборка.КоличествоОрганизация > 1 Тогда
				ПредставлениеДанных = ПредставлениеДанных + ?(ПустаяСтрока(ПредставлениеДанных), "Организация", ", Организация");
				СформироватьНесколькоДокументов = Истина;
				РазныеОрганизации = Истина;
			КонецЕсли;
			
			Если Выборка.КоличествоСтруктурнаяЕдиница > 1 Тогда
				ПредставлениеДанных = ПредставлениеДанных + ?(ПустаяСтрока(ПредставлениеДанных), "Склад", ", Склад");
				СформироватьНесколькоДокументов = Истина;
				РазныеСклады = Истина;
			КонецЕсли;
			
			Если Выборка.КоличествоКонтрагент > 1 Тогда
				ПредставлениеДанных = ПредставлениеДанных + ?(ПустаяСтрока(ПредставлениеДанных), "Контрагент", ", Контрагент");
				СформироватьНесколькоДокументов = Истина;
				РазныеКонтрагенты = Истина;
			КонецЕсли;
			
		КонецЦикла;
		
		СтруктураДанных.Вставить("СформироватьНесколькоДокументов", СформироватьНесколькоДокументов);
		СтруктураДанных.Вставить("ПредставлениеДанных", ПредставлениеДанных);
		
	КонецЕсли;
	
	Возврат СтруктураДанных;
	
КонецФункции

// Возвращает структуру для создания группы документов при различных ключевых реквизитах
//
// Параметры:
//  МассивДокументов - Массив - Массив документов для по которым будет сформированы приходные ордера
//  ТипДокументаПроверки - Строка - Тип проверяемого ордера
//
// Возвращаемое значение:
//  СтруктураДанных - Структура - Структура данных признаков для формирования
//
Функция ПроверитьКлючевыеРеквизитыСкладскихОрдеров(МассивДокументов, ТипДокументаПроверки = "Приход") Экспорт
	
	СтруктураДанных = Новый Структура();
	
	Запрос = Новый Запрос;
	
	Если ТипДокументаПроверки = "Приход" Тогда
		Запрос.Текст = ТекстЗапросаПроверкаКлючевыхРеквизитовПриходныйОрдер();
	КонецЕсли;
	
	Если ТипДокументаПроверки = "Расход" Тогда
		Запрос.Текст = ТекстЗапросаПроверкаКлючевыхРеквизитовРасходныйОрдер();
	КонецЕсли;
	
	Запрос.УстановитьПараметр("Ссылка", МассивДокументов);
	
	Результат = Запрос.Выполнить();
	Если Результат.Пустой() Тогда
		СтруктураДанных.Вставить("СформироватьНесколькоДокументов", Ложь);
		СтруктураДанных.Вставить("ПредставлениеДанных", "");
	Иначе
		ПредставлениеДанных = "";
		Выборка = Результат.Выбрать();
		
		СформироватьНесколькоДокументов = Ложь;
		Пока Выборка.Следующий() Цикл
			
			Если Выборка.КоличествоОрганизация > 1 Тогда
				ПредставлениеДанных = ПредставлениеДанных + ?(ПустаяСтрока(ПредставлениеДанных), "Организация", ", Организация");
				СформироватьНесколькоДокументов = Истина;
			КонецЕсли;
			
			Если Выборка.КоличествоСтруктурнаяЕдиница > 1 Тогда
				ПредставлениеДанных = ПредставлениеДанных + ?(ПустаяСтрока(ПредставлениеДанных), "Склад", ", Склад");
				СформироватьНесколькоДокументов = Истина;
			КонецЕсли;
			
			Если Выборка.КоличествоКонтрагент > 1 Тогда
				ПредставлениеДанных = ПредставлениеДанных + ?(ПустаяСтрока(ПредставлениеДанных), "Контрагент", ", Контрагент");
				СформироватьНесколькоДокументов = Истина;
			КонецЕсли;
			
		КонецЦикла;
		
		СтруктураДанных.Вставить("СформироватьНесколькоДокументов", СформироватьНесколькоДокументов);
		СтруктураДанных.Вставить("ПредставлениеДанных", ПредставлениеДанных);
		
	КонецЕсли;
	
	Возврат СтруктураДанных;
	
КонецФункции

//Устанавливает условное оформление колонки Документы поступления табличной части
//
// Параметры:
//  УсловноеОформление - Условное оформлление формы
//
Процедура УстановитьУсловноеОформлениеДокументовПоступления(УсловноеОформление, Поступление = Истина, Перемещение = Ложь, ТипДокумента = Неопределено) Экспорт
	
	Если Перемещение = Истина Тогда
		Возврат;
	КонецЕсли;
	
	ПустаяСсылкаНаОрдер = ?(Поступление, Документы.ПриходныйОрдер.ПустаяСсылка(), Документы.РасходныйОрдер.ПустаяСсылка());
	
	ОформитьТолькоКолонку = Ложь;
	Если Не ТипДокумента = Неопределено И (ТипДокумента = Тип("ДокументСсылка.КорректировкаПоступления") 
		Или ТипДокумента = Тип("ДокументСсылка.КорректировкаРеализации") 
		Или ТипДокумента = Тип("ДокументСсылка.АктОРасхождениях") 
		Или ТипДокумента = Тип("ДокументСсылка.АктОРасхожденияхПолученный")
		Или ТипДокумента = Тип("ДокументСсылка.АвансовыйОтчет")) Тогда
		ОформитьТолькоКолонку = Истина
	КонецЕсли;
	
	Если ОформитьТолькоКолонку Тогда
		НовоеУсловноеОформление = УсловноеОформление.Элементы.Добавить();
		РаботаСФормой.ДобавитьЭлементОтбораКомпоновкиДанных(НовоеУсловноеОформление.Отбор, "Объект.Запасы.УказыватьДокументПоступления", Ложь, ВидСравненияКомпоновкиДанных.Равно);
		РаботаСФормой.ДобавитьОформляемыеПоля(НовоеУсловноеОформление, "ЗапасыДокументПоступления");
		РаботаСФормой.ДобавитьЭлементУсловногоОформления(НовоеУсловноеОформление, "ТолькоПросмотр", Истина);
		РаботаСФормой.ДобавитьЭлементУсловногоОформления(НовоеУсловноеОформление, "Текст", НСтр("ru = '<Не используется>'"));
		РаботаСФормой.ДобавитьЭлементУсловногоОформления(НовоеУсловноеОформление, "ЦветТекста", ЦветаСтиля.ЦветНедоступногоТекстаТабличнойЧасти);
		РаботаСФормой.ДобавитьЭлементУсловногоОформления(НовоеУсловноеОформление, "ОтметкаНезаполненного", Ложь);
		
		Возврат;
		
	КонецЕсли;
	
	НовоеУсловноеОформление = УсловноеОформление.Элементы.Добавить();
	РаботаСФормой.ДобавитьЭлементОтбораКомпоновкиДанных(НовоеУсловноеОформление.Отбор, "Объект.Запасы.УказыватьДокументПоступления", Ложь, ВидСравненияКомпоновкиДанных.Равно);
	РаботаСФормой.ДобавитьЭлементОтбораКомпоновкиДанных(НовоеУсловноеОформление.Отбор, "Объект.ПоложениеСклада", Перечисления.ПоложениеРеквизитаНаФорме.ВТабличнойЧасти, ВидСравненияКомпоновкиДанных.Равно);
	РаботаСФормой.ДобавитьОформляемыеПоля(НовоеУсловноеОформление, "ЗапасыДокументПоступления");
	РаботаСФормой.ДобавитьЭлементУсловногоОформления(НовоеУсловноеОформление, "ТолькоПросмотр", Истина);
	РаботаСФормой.ДобавитьЭлементУсловногоОформления(НовоеУсловноеОформление, "Текст", НСтр("ru = '<Не используется>'"));
	РаботаСФормой.ДобавитьЭлементУсловногоОформления(НовоеУсловноеОформление, "ЦветТекста", ЦветаСтиля.ЦветНедоступногоТекстаТабличнойЧасти);
	РаботаСФормой.ДобавитьЭлементУсловногоОформления(НовоеУсловноеОформление, "ОтметкаНезаполненного", Ложь);
	
	НовоеУсловноеОформление = УсловноеОформление.Элементы.Добавить();
	РаботаСФормой.ДобавитьЭлементОтбораКомпоновкиДанных(НовоеУсловноеОформление.Отбор, "Объект.Запасы.УказыватьДокументПоступления", Истина, ВидСравненияКомпоновкиДанных.Равно);
	РаботаСФормой.ДобавитьЭлементОтбораКомпоновкиДанных(НовоеУсловноеОформление.Отбор, "Объект.ПоложениеСклада", Перечисления.ПоложениеРеквизитаНаФорме.ВТабличнойЧасти, ВидСравненияКомпоновкиДанных.Равно);
	
	ГруппаИлиЗаполнениеДокументаПоступления = РаботаСФормой.ДобавитьГруппуЭлементовОтбораКомпоновкиДанных(НовоеУсловноеОформление.Отбор, ТипГруппыЭлементовОтбораКомпоновкиДанных.ГруппаИли);
	РаботаСФормой.ДобавитьЭлементОтбораКомпоновкиДанных(ГруппаИлиЗаполнениеДокументаПоступления, "Объект.Запасы.ДокументПоступления", Неопределено, ВидСравненияКомпоновкиДанных.Равно);
	РаботаСФормой.ДобавитьЭлементОтбораКомпоновкиДанных(ГруппаИлиЗаполнениеДокументаПоступления, "Объект.Запасы.ДокументПоступления", ПустаяСсылкаНаОрдер, ВидСравненияКомпоновкиДанных.Равно);
	
	РаботаСФормой.ДобавитьОформляемыеПоля(НовоеУсловноеОформление, "ЗапасыДокументПоступления");
	РаботаСФормой.ДобавитьЭлементУсловногоОформления(НовоеУсловноеОформление, "ОтметкаНезаполненного", Истина);
	
	НовоеУсловноеОформление = УсловноеОформление.Элементы.Добавить();
	РаботаСФормой.ДобавитьЭлементОтбораКомпоновкиДанных(НовоеУсловноеОформление.Отбор, "Объект.ПоложениеДокументаПоступления", Перечисления.ПоложениеРеквизитаНаФорме.ВТабличнойЧасти, ВидСравненияКомпоновкиДанных.Равно);
	РаботаСФормой.ДобавитьЭлементОтбораКомпоновкиДанных(НовоеУсловноеОформление.Отбор, "Объект.ПоложениеСклада", Перечисления.ПоложениеРеквизитаНаФорме.ВТабличнойЧасти, ВидСравненияКомпоновкиДанных.НеРавно);
	
	ГруппаИлиЗаполнениеДокументаПоступления = РаботаСФормой.ДобавитьГруппуЭлементовОтбораКомпоновкиДанных(НовоеУсловноеОформление.Отбор, ТипГруппыЭлементовОтбораКомпоновкиДанных.ГруппаИли);
	РаботаСФормой.ДобавитьЭлементОтбораКомпоновкиДанных(ГруппаИлиЗаполнениеДокументаПоступления, "Объект.Запасы.ДокументПоступления", Неопределено, ВидСравненияКомпоновкиДанных.Равно);
	РаботаСФормой.ДобавитьЭлементОтбораКомпоновкиДанных(ГруппаИлиЗаполнениеДокументаПоступления, "Объект.Запасы.ДокументПоступления", ПустаяСсылкаНаОрдер, ВидСравненияКомпоновкиДанных.Равно);
	
	РаботаСФормой.ДобавитьОформляемыеПоля(НовоеУсловноеОформление, "ЗапасыДокументПоступления");
	РаботаСФормой.ДобавитьЭлементУсловногоОформления(НовоеУсловноеОформление, "ОтметкаНезаполненного", Истина);
	
	Если Не ТипДокумента = Неопределено И ТипДокумента = Тип("ДокументСсылка.ЗаказПокупателя") Тогда
		НовоеУсловноеОформление = УсловноеОформление.Элементы.Добавить();
		РаботаСФормой.ДобавитьЭлементОтбораКомпоновкиДанных(НовоеУсловноеОформление.Отбор, "Объект.Материалы.УказыватьДокументПоступления", Ложь, ВидСравненияКомпоновкиДанных.Равно);
		РаботаСФормой.ДобавитьЭлементОтбораКомпоновкиДанных(НовоеУсловноеОформление.Отбор, "Объект.ПоложениеСклада", Перечисления.ПоложениеРеквизитаНаФорме.ВТабличнойЧасти, ВидСравненияКомпоновкиДанных.Равно);
		РаботаСФормой.ДобавитьОформляемыеПоля(НовоеУсловноеОформление, "ЗНМатериалыДокументПоступления");
		РаботаСФормой.ДобавитьЭлементУсловногоОформления(НовоеУсловноеОформление, "ТолькоПросмотр", Истина);
		РаботаСФормой.ДобавитьЭлементУсловногоОформления(НовоеУсловноеОформление, "Текст", НСтр("ru = '<Не используется>'"));
		РаботаСФормой.ДобавитьЭлементУсловногоОформления(НовоеУсловноеОформление, "ЦветТекста", ЦветаСтиля.ЦветНедоступногоТекстаТабличнойЧасти);
		РаботаСФормой.ДобавитьЭлементУсловногоОформления(НовоеУсловноеОформление, "ОтметкаНезаполненного", Ложь);
		
		НовоеУсловноеОформление = УсловноеОформление.Элементы.Добавить();
		РаботаСФормой.ДобавитьЭлементОтбораКомпоновкиДанных(НовоеУсловноеОформление.Отбор, "Объект.Материалы.УказыватьДокументПоступления", Истина, ВидСравненияКомпоновкиДанных.Равно);
		РаботаСФормой.ДобавитьЭлементОтбораКомпоновкиДанных(НовоеУсловноеОформление.Отбор, "Объект.ПоложениеСклада", Перечисления.ПоложениеРеквизитаНаФорме.ВТабличнойЧасти, ВидСравненияКомпоновкиДанных.Равно);
		
		ГруппаИлиЗаполнениеДокументаПоступления = РаботаСФормой.ДобавитьГруппуЭлементовОтбораКомпоновкиДанных(НовоеУсловноеОформление.Отбор, ТипГруппыЭлементовОтбораКомпоновкиДанных.ГруппаИли);
		РаботаСФормой.ДобавитьЭлементОтбораКомпоновкиДанных(ГруппаИлиЗаполнениеДокументаПоступления, "Объект.Материалы.ДокументПоступления", Неопределено, ВидСравненияКомпоновкиДанных.Равно);
		РаботаСФормой.ДобавитьЭлементОтбораКомпоновкиДанных(ГруппаИлиЗаполнениеДокументаПоступления, "Объект.Материалы.ДокументПоступления", ПустаяСсылкаНаОрдер, ВидСравненияКомпоновкиДанных.Равно);
		
		РаботаСФормой.ДобавитьОформляемыеПоля(НовоеУсловноеОформление, "ЗНМатериалыДокументПоступления");
		РаботаСФормой.ДобавитьЭлементУсловногоОформления(НовоеУсловноеОформление, "ОтметкаНезаполненного", Истина);
		
		НовоеУсловноеОформление = УсловноеОформление.Элементы.Добавить();
		РаботаСФормой.ДобавитьЭлементОтбораКомпоновкиДанных(НовоеУсловноеОформление.Отбор, "Объект.ПоложениеДокументаПоступления", Перечисления.ПоложениеРеквизитаНаФорме.ВТабличнойЧасти, ВидСравненияКомпоновкиДанных.Равно);
		РаботаСФормой.ДобавитьЭлементОтбораКомпоновкиДанных(НовоеУсловноеОформление.Отбор, "Объект.ПоложениеСклада", Перечисления.ПоложениеРеквизитаНаФорме.ВТабличнойЧасти, ВидСравненияКомпоновкиДанных.НеРавно);
		
		ГруппаИлиЗаполнениеДокументаПоступления = РаботаСФормой.ДобавитьГруппуЭлементовОтбораКомпоновкиДанных(НовоеУсловноеОформление.Отбор, ТипГруппыЭлементовОтбораКомпоновкиДанных.ГруппаИли);
		РаботаСФормой.ДобавитьЭлементОтбораКомпоновкиДанных(ГруппаИлиЗаполнениеДокументаПоступления, "Объект.Материалы.ДокументПоступления", Неопределено, ВидСравненияКомпоновкиДанных.Равно);
		РаботаСФормой.ДобавитьЭлементОтбораКомпоновкиДанных(ГруппаИлиЗаполнениеДокументаПоступления, "Объект.Материалы.ДокументПоступления", ПустаяСсылкаНаОрдер, ВидСравненияКомпоновкиДанных.Равно);
		
		РаботаСФормой.ДобавитьОформляемыеПоля(НовоеУсловноеОформление, "ЗНМатериалыДокументПоступления");
		РаботаСФормой.ДобавитьЭлементУсловногоОформления(НовоеУсловноеОформление, "ОтметкаНезаполненного", Истина);
	КонецЕсли;
	
КонецПроцедуры

// Возвращает признак доступности изменения вида учета склада
//
// Параметры:
//  СтруктурнаяЕдиница - Склад для провеки
//
// Возвращаемое значение:
//  Булево - Признак возможности изменения вида учета
//
Функция ИзмненениеВидУчетаДостпуно(СтруктурнаяЕдиница, ПроверятьДвиженияПоТоварамНаСкладах = Ложь) Экспорт
	
	Запрос = Новый Запрос;
	
	Запрос.УстановитьПараметр("СтруктурнаяЕдиница", СтруктурнаяЕдиница);
	Запрос.УстановитьПараметр("ПроверятьДвиженияПоТоварамНаСкладах", ПроверятьДвиженияПоТоварамНаСкладах);
	
	Запрос.Текст =
	"ВЫБРАТЬ ПЕРВЫЕ 1
	|	ЗапасыКПоступлениюНаСклады.СтруктурнаяЕдиница КАК СтруктурнаяЕдиница
	|ИЗ
	|	РегистрНакопления.ЗапасыКПоступлениюНаСклады КАК ЗапасыКПоступлениюНаСклады
	|ГДЕ
	|	ЗапасыКПоступлениюНаСклады.СтруктурнаяЕдиница = &СтруктурнаяЕдиница
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ ПЕРВЫЕ 1
	|	ЗапасыКРасходуСоСкладов.СтруктурнаяЕдиница
	|ИЗ
	|	РегистрНакопления.ЗапасыКРасходуСоСкладов КАК ЗапасыКРасходуСоСкладов
	|ГДЕ
	|	ЗапасыКРасходуСоСкладов.СтруктурнаяЕдиница = &СтруктурнаяЕдиница
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ ПЕРВЫЕ 1
	|	ЗапасыНаСкладах.СтруктурнаяЕдиница
	|ИЗ
	|	РегистрНакопления.ЗапасыНаСкладах КАК ЗапасыНаСкладах
	|ГДЕ
	|	ЗапасыНаСкладах.СтруктурнаяЕдиница = &СтруктурнаяЕдиница
	|	И &ПроверятьДвиженияПоТоварамНаСкладах";
	
	Возврат Запрос.Выполнить().Пустой();
	
КонецФункции

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

Функция ТекстЗапросаПроверкаКлючевыхРеквизитовПриходныйОрдер()
	
	ТекстЗапроса =
	"ВЫБРАТЬ РАЗРЕШЕННЫЕ РАЗЛИЧНЫЕ
	|	ПриходныйОрдер.СтруктурнаяЕдиница КАК СтруктурнаяЕдиница,
	|	ПриходныйОрдер.Организация КАК Организация,
	|	ПриходныйОрдер.Контрагент КАК Контрагент
	|ПОМЕСТИТЬ ВтИтог
	|ИЗ
	|	Документ.ПриходныйОрдер КАК ПриходныйОрдер
	|ГДЕ
	|	ПриходныйОрдер.Ссылка В(&Ссылка)
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	КОЛИЧЕСТВО(РАЗЛИЧНЫЕ ВтИтог.СтруктурнаяЕдиница) КАК КоличествоСтруктурнаяЕдиница,
	|	КОЛИЧЕСТВО(РАЗЛИЧНЫЕ ВтИтог.Организация) КАК КоличествоОрганизация,
	|	КОЛИЧЕСТВО(РАЗЛИЧНЫЕ ВтИтог.Контрагент) КАК КоличествоКонтрагент
	|ИЗ
	|	ВтИтог КАК ВтИтог
	|ГДЕ
	|	ВтИтог.СтруктурнаяЕдиница.ОрдерныйСклад
	|	И ВтИтог.СтруктурнаяЕдиница.ИспользоватьОрдернуюСхемуПриПоступлении
	|	И ВтИтог.СтруктурнаяЕдиница.ВидУчетаОрдерныхСкладов = ЗНАЧЕНИЕ(Перечисление.ВидыУчетаОрдерныхСкладов.УчетОстатковПоСкладскимОрдерам)";

	Возврат ТекстЗапроса;
	
КонецФункции

Функция ТекстЗапросаПроверкаКлючевыхРеквизитовРасходныйОрдер()
	
	ТекстЗапроса =
	"ВЫБРАТЬ РАЗРЕШЕННЫЕ РАЗЛИЧНЫЕ
	|	РасходныйОрдер.СтруктурнаяЕдиница КАК СтруктурнаяЕдиница,
	|	РасходныйОрдер.Организация КАК Организация,
	|	РасходныйОрдер.Контрагент КАК Контрагент
	|ПОМЕСТИТЬ ВтИтог
	|ИЗ
	|	Документ.РасходныйОрдер КАК РасходныйОрдер
	|ГДЕ
	|	РасходныйОрдер.Ссылка В(&Ссылка)
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	КОЛИЧЕСТВО(РАЗЛИЧНЫЕ ВтИтог.СтруктурнаяЕдиница) КАК КоличествоСтруктурнаяЕдиница,
	|	КОЛИЧЕСТВО(РАЗЛИЧНЫЕ ВтИтог.Организация) КАК КоличествоОрганизация,
	|	КОЛИЧЕСТВО(РАЗЛИЧНЫЕ ВтИтог.Контрагент) КАК КоличествоКонтрагент
	|ИЗ
	|	ВтИтог КАК ВтИтог
	|ГДЕ
	|	ВтИтог.СтруктурнаяЕдиница.ОрдерныйСклад
	|	И ВтИтог.СтруктурнаяЕдиница.ИспользоватьОрдернуюСхемуПриОтгрузке
	|	И ВтИтог.СтруктурнаяЕдиница.ВидУчетаОрдерныхСкладов = ЗНАЧЕНИЕ(Перечисление.ВидыУчетаОрдерныхСкладов.УчетОстатковПоСкладскимОрдерам)";

	Возврат ТекстЗапроса;
	
КонецФункции

Функция ТекстЗапросаПроверкаКлючевыхРеквизитовДокументыПоступления()
	
	ТекстЗапроса =
	"ВЫБРАТЬ РАЗРЕШЕННЫЕ РАЗЛИЧНЫЕ
	|	КомплектацияЗапасов.СтруктурнаяЕдиница КАК СтруктурнаяЕдиница,
	|	КомплектацияЗапасов.Организация КАК Организация,
	|	НЕОПРЕДЕЛЕНО КАК Контрагент
	|ПОМЕСТИТЬ ВтИтог
	|ИЗ
	|	Документ.КомплектацияЗапасов КАК КомплектацияЗапасов
	|ГДЕ
	|	КомплектацияЗапасов.Ссылка В(&Ссылка)
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ПеремещениеЗапасов.СтруктурнаяЕдиницаПолучатель,
	|	ПеремещениеЗапасов.Организация,
	|	НЕОПРЕДЕЛЕНО
	|ИЗ
	|	Документ.ПеремещениеЗапасов КАК ПеремещениеЗапасов
	|ГДЕ
	|	ПеремещениеЗапасов.Ссылка В(&Ссылка)
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ПриходнаяНакладнаяЗапасы.СтруктурнаяЕдиница,
	|	ПриходнаяНакладнаяЗапасы.Ссылка.Организация,
	|	ПриходнаяНакладнаяЗапасы.Ссылка.Контрагент
	|ИЗ
	|	Документ.ПриходнаяНакладная.Запасы КАК ПриходнаяНакладнаяЗапасы
	|ГДЕ
	|	ПриходнаяНакладнаяЗапасы.Ссылка В(&Ссылка)
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	АвансовыйОтчетЗапасы.СтруктурнаяЕдиница,
	|	АвансовыйОтчетЗапасы.Ссылка.Организация,
	|	НЕОПРЕДЕЛЕНО
	|ИЗ
	|	Документ.АвансовыйОтчет.Запасы КАК АвансовыйОтчетЗапасы
	|ГДЕ
	|	АвансовыйОтчетЗапасы.Ссылка В(&Ссылка)
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	КорректировкаПоступленияЗапасы.СтруктурнаяЕдиница,
	|	КорректировкаПоступленияЗапасы.Ссылка.Организация,
	|	КорректировкаПоступленияЗапасы.Ссылка.Контрагент
	|ИЗ
	|	Документ.КорректировкаПоступления.Запасы КАК КорректировкаПоступленияЗапасы
	|ГДЕ
	|	КорректировкаПоступленияЗапасы.Ссылка В(&Ссылка)
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	СборкаЗапасовПродукция.СтруктурнаяЕдиница,
	|	СборкаЗапасовПродукция.Ссылка.Организация,
	|	НЕОПРЕДЕЛЕНО
	|ИЗ
	|	Документ.СборкаЗапасов.Продукция КАК СборкаЗапасовПродукция
	|ГДЕ
	|	СборкаЗапасовПродукция.Ссылка В(&Ссылка)
	|	И СборкаЗапасовПродукция.Ссылка.ВидОперации = СборкаЗапасовПродукция.Ссылка.ВидОперации = ЗНАЧЕНИЕ(Перечисление.ВидыОперацийСборкаЗапасов.Сборка)
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	СборкаЗапасовЗапасы.СтруктурнаяЕдиница,
	|	СборкаЗапасовЗапасы.Ссылка.Организация,
	|	НЕОПРЕДЕЛЕНО
	|ИЗ
	|	Документ.СборкаЗапасов.Запасы КАК СборкаЗапасовЗапасы
	|ГДЕ
	|	СборкаЗапасовЗапасы.Ссылка В(&Ссылка)
	|	И СборкаЗапасовЗапасы.Ссылка.ВидОперации = СборкаЗапасовЗапасы.Ссылка.ВидОперации = ЗНАЧЕНИЕ(Перечисление.ВидыОперацийСборкаЗапасов.Разборка)
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ОтчетПереработчика.СтруктурнаяЕдиница,
	|	ОтчетПереработчика.Организация,
	|	ОтчетПереработчика.Контрагент
	|ИЗ
	|	Документ.ОтчетПереработчика КАК ОтчетПереработчика
	|ГДЕ
	|	ОтчетПереработчика.Ссылка В(&Ссылка)
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ПересортицаЗапасов.СтруктурнаяЕдиница,
	|	ПересортицаЗапасов.Организация,
	|	НЕОПРЕДЕЛЕНО
	|ИЗ
	|	Документ.ПересортицаЗапасов КАК ПересортицаЗапасов
	|ГДЕ
	|	ПересортицаЗапасов.Ссылка В(&Ссылка)
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ОприходованиеЗапасов.СтруктурнаяЕдиница,
	|	ОприходованиеЗапасов.Организация,
	|	НЕОПРЕДЕЛЕНО
	|ИЗ
	|	Документ.ОприходованиеЗапасов КАК ОприходованиеЗапасов
	|ГДЕ
	|	ОприходованиеЗапасов.Ссылка В(&Ссылка)
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ПередачаТоваровМеждуОрганизациямиЗапасы.СтруктурнаяЕдиница,
	|	ПередачаТоваровМеждуОрганизациямиЗапасы.Ссылка.ОрганизацияПолучатель,
	|	НЕОПРЕДЕЛЕНО
	|ИЗ
	|	Документ.ПередачаТоваровМеждуОрганизациями.Запасы КАК ПередачаТоваровМеждуОрганизациямиЗапасы
	|ГДЕ
	|	ПередачаТоваровМеждуОрганизациямиЗапасы.Ссылка В(&Ссылка)
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	КОЛИЧЕСТВО(РАЗЛИЧНЫЕ ВтИтог.СтруктурнаяЕдиница) КАК КоличествоСтруктурнаяЕдиница,
	|	КОЛИЧЕСТВО(РАЗЛИЧНЫЕ ВтИтог.Организация) КАК КоличествоОрганизация,
	|	КОЛИЧЕСТВО(РАЗЛИЧНЫЕ ВтИтог.Контрагент) КАК КоличествоКонтрагент
	|ИЗ
	|	ВтИтог КАК ВтИтог
	|ГДЕ
	|	ВтИтог.СтруктурнаяЕдиница.ОрдерныйСклад
	|	И ВтИтог.СтруктурнаяЕдиница.ИспользоватьОрдернуюСхемуПриПоступлении
	|	И ВтИтог.СтруктурнаяЕдиница.ВидУчетаОрдерныхСкладов = ЗНАЧЕНИЕ(Перечисление.ВидыУчетаОрдерныхСкладов.УчетОстатковПоПрочимДокументам)";

	Возврат ТекстЗапроса;
	
КонецФункции

Функция ТекстЗапросаПроверкаКлючевыхРеквизитовДокументыОтгрузки()
	
	ТекстЗапроса =
	"ВЫБРАТЬ РАЗРЕШЕННЫЕ РАЗЛИЧНЫЕ
	|	КомплектацияЗапасов.СтруктурнаяЕдиница КАК СтруктурнаяЕдиница,
	|	КомплектацияЗапасов.Организация КАК Организация,
	|	НЕОПРЕДЕЛЕНО КАК Контрагент
	|ПОМЕСТИТЬ ВтИтог
	|ИЗ
	|	Документ.КомплектацияЗапасов КАК КомплектацияЗапасов
	|ГДЕ
	|	КомплектацияЗапасов.Ссылка В(&Ссылка)
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ПеремещениеЗапасов.СтруктурнаяЕдиницаПолучатель,
	|	ПеремещениеЗапасов.Организация,
	|	НЕОПРЕДЕЛЕНО
	|ИЗ
	|	Документ.ПеремещениеЗапасов КАК ПеремещениеЗапасов
	|ГДЕ
	|	ПеремещениеЗапасов.Ссылка В(&Ссылка)
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	РасходнаяНакладнаяЗапасы.СтруктурнаяЕдиница,
	|	РасходнаяНакладнаяЗапасы.Ссылка.Организация,
	|	РасходнаяНакладнаяЗапасы.Ссылка.Контрагент
	|ИЗ
	|	Документ.РасходнаяНакладная.Запасы КАК РасходнаяНакладнаяЗапасы
	|ГДЕ
	|	РасходнаяНакладнаяЗапасы.Ссылка В(&Ссылка)
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ПринятиеКУчетуВА.СтруктурнаяЕдиница,
	|	ПринятиеКУчетуВА.Ссылка.Организация,
	|	НЕОПРЕДЕЛЕНО
	|ИЗ
	|	Документ.ПринятиеКУчетуВА КАК ПринятиеКУчетуВА
	|ГДЕ
	|	ПринятиеКУчетуВА.Ссылка В(&Ссылка)
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	КорректировкаРеализацииЗапасы.СтруктурнаяЕдиница,
	|	КорректировкаРеализацииЗапасы.Ссылка.Организация,
	|	КорректировкаРеализацииЗапасы.Ссылка.Контрагент
	|ИЗ
	|	Документ.КорректировкаРеализации.Запасы КАК КорректировкаРеализацииЗапасы
	|ГДЕ
	|	КорректировкаРеализацииЗапасы.Ссылка В(&Ссылка)
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	СборкаЗапасовПродукция.СтруктурнаяЕдиница,
	|	СборкаЗапасовПродукция.Ссылка.Организация,
	|	НЕОПРЕДЕЛЕНО
	|ИЗ
	|	Документ.СборкаЗапасов.Продукция КАК СборкаЗапасовПродукция
	|ГДЕ
	|	СборкаЗапасовПродукция.Ссылка В(&Ссылка)
	|	И СборкаЗапасовПродукция.Ссылка.ВидОперации = ЗНАЧЕНИЕ(Перечисление.ВидыОперацийСборкаЗапасов.Разборка)
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	СборкаЗапасовЗапасы.СтруктурнаяЕдиница,
	|	СборкаЗапасовЗапасы.Ссылка.Организация,
	|	НЕОПРЕДЕЛЕНО
	|ИЗ
	|	Документ.СборкаЗапасов.Запасы КАК СборкаЗапасовЗапасы
	|ГДЕ
	|	СборкаЗапасовЗапасы.Ссылка В(&Ссылка)
	|	И СборкаЗапасовЗапасы.Ссылка.ВидОперации = ЗНАЧЕНИЕ(Перечисление.ВидыОперацийСборкаЗапасов.Сборка)
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ОтчетОПереработке.СтруктурнаяЕдиница,
	|	ОтчетОПереработке.Организация,
	|	ОтчетОПереработке.Контрагент
	|ИЗ
	|	Документ.ОтчетОПереработке КАК ОтчетОПереработке
	|ГДЕ
	|	ОтчетОПереработке.Ссылка В(&Ссылка)
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ПересортицаЗапасов.СтруктурнаяЕдиница,
	|	ПересортицаЗапасов.Организация,
	|	НЕОПРЕДЕЛЕНО
	|ИЗ
	|	Документ.ПересортицаЗапасов КАК ПересортицаЗапасов
	|ГДЕ
	|	ПересортицаЗапасов.Ссылка В(&Ссылка)
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	СписаниеЗапасов.СтруктурнаяЕдиница,
	|	СписаниеЗапасов.Организация,
	|	НЕОПРЕДЕЛЕНО
	|ИЗ
	|	Документ.СписаниеЗапасов КАК СписаниеЗапасов
	|ГДЕ
	|	СписаниеЗапасов.Ссылка В(&Ссылка)
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ПередачаТоваровМеждуОрганизациямиЗапасы.СтруктурнаяЕдиница,
	|	ПередачаТоваровМеждуОрганизациямиЗапасы.Ссылка.ОрганизацияПолучатель,
	|	НЕОПРЕДЕЛЕНО
	|ИЗ
	|	Документ.ПередачаТоваровМеждуОрганизациями.Запасы КАК ПередачаТоваровМеждуОрганизациямиЗапасы
	|ГДЕ
	|	ПередачаТоваровМеждуОрганизациямиЗапасы.Ссылка В(&Ссылка)
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ЗаказПокупателяЗапасы.СтруктурнаяЕдиницаРезерв,
	|	ЗаказПокупателяЗапасы.Ссылка.Организация,
	|	ЗаказПокупателяЗапасы.Ссылка.Контрагент
	|ИЗ
	|	Документ.ЗаказПокупателя.Запасы КАК ЗаказПокупателяЗапасы
	|ГДЕ
	|	ЗаказПокупателяЗапасы.Ссылка В(&Ссылка)
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ЗаказПокупателяМатериалы.СтруктурнаяЕдиницаРезерв,
	|	ЗаказПокупателяМатериалы.Ссылка.Организация,
	|	ЗаказПокупателяМатериалы.Ссылка.Контрагент
	|ИЗ
	|	Документ.ЗаказПокупателя.Материалы КАК ЗаказПокупателяМатериалы
	|ГДЕ
	|	ЗаказПокупателяМатериалы.Ссылка В(&Ссылка)
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	КОЛИЧЕСТВО(РАЗЛИЧНЫЕ ВтИтог.СтруктурнаяЕдиница) КАК КоличествоСтруктурнаяЕдиница,
	|	КОЛИЧЕСТВО(РАЗЛИЧНЫЕ ВтИтог.Организация) КАК КоличествоОрганизация,
	|	КОЛИЧЕСТВО(РАЗЛИЧНЫЕ ВтИтог.Контрагент) КАК КоличествоКонтрагент
	|ИЗ
	|	ВтИтог КАК ВтИтог
	|ГДЕ
	|	ВтИтог.СтруктурнаяЕдиница.ОрдерныйСклад
	|	И ВтИтог.СтруктурнаяЕдиница.ИспользоватьОрдернуюСхемуПриПоступлении
	|	И ВтИтог.СтруктурнаяЕдиница.ВидУчетаОрдерныхСкладов = ЗНАЧЕНИЕ(Перечисление.ВидыУчетаОрдерныхСкладов.УчетОстатковПоПрочимДокументам)";

	Возврат ТекстЗапроса;
	
КонецФункции

Функция ТекстЗапросаТаблицаНоменклатурыПоКлючевымРеквизитамФинДокументыПоступелния()
	
	ТекстЗапроса =
	"ВЫБРАТЬ РАЗРЕШЕННЫЕ РАЗЛИЧНЫЕ
	|	КомплектацияЗапасовЗапасы.Ссылка.СтруктурнаяЕдиница КАК СтруктурнаяЕдиница,
	|	КомплектацияЗапасовЗапасы.Ссылка.Организация КАК Организация,
	|	НЕОПРЕДЕЛЕНО КАК Контрагент,
	|	КомплектацияЗапасовЗапасы.Номенклатура КАК Номенклатура,
	|	КомплектацияЗапасовЗапасы.Ссылка КАК ДокументПоступления,
	|	КомплектацияЗапасовЗапасы.Характеристика КАК Характеристика,
	|	КомплектацияЗапасовЗапасы.Партия КАК Партия,
	|	КомплектацияЗапасовЗапасы.Количество КАК Количество,
	|	КомплектацияЗапасовСерииНоменклатурыЗапасы.Серия КАК Серия,
	|	КомплектацияЗапасовСерииНоменклатурыЗапасы.Количество КАК СерииКоличество,
	|	НЕОПРЕДЕЛЕНО КАК Ячейка,
	|	КомплектацияЗапасовЗапасы.ЕдиницаИзмерения КАК ЕдиницаИзмерения,
	|	ЕСТЬNULL(КомплектацияЗапасовЗапасы.ЕдиницаИзмерения.Коэффициент, 1) КАК Коэффициент,
	|	КомплектацияЗапасовЗапасы.КлючСвязи КАК КлючСвязи
	|ПОМЕСТИТЬ ВтИтог
	|ИЗ
	|	Документ.КомплектацияЗапасов.Запасы КАК КомплектацияЗапасовЗапасы
	|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.КомплектацияЗапасов.СерииНоменклатурыЗапасы КАК КомплектацияЗапасовСерииНоменклатурыЗапасы
	|		ПО КомплектацияЗапасовЗапасы.Ссылка = КомплектацияЗапасовСерииНоменклатурыЗапасы.Ссылка
	|			И КомплектацияЗапасовЗапасы.КлючСвязи = КомплектацияЗапасовСерииНоменклатурыЗапасы.КлючСвязи
	|ГДЕ
	|	КомплектацияЗапасовЗапасы.Ссылка В(&Ссылка)
	|	И КомплектацияЗапасовЗапасы.Ссылка.ВидОперации = ЗНАЧЕНИЕ(Перечисление.ВидыОперацийКомплектацияЗапасов.Разборка)
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	КомплектацияЗапасов.СтруктурнаяЕдиница,
	|	КомплектацияЗапасов.Организация,
	|	НЕОПРЕДЕЛЕНО,
	|	КомплектацияЗапасов.Номенклатура,
	|	КомплектацияЗапасов.Ссылка,
	|	КомплектацияЗапасов.Характеристика,
	|	КомплектацияЗапасов.Партия,
	|	КомплектацияЗапасов.Количество,
	|	КомплектацияЗапасовСерииНоменклатуры.Серия,
	|	КомплектацияЗапасовСерииНоменклатуры.Количество,
	|	НЕОПРЕДЕЛЕНО,
	|	КомплектацияЗапасов.ЕдиницаИзмерения,
	|	ЕСТЬNULL(КомплектацияЗапасов.Ссылка.ЕдиницаИзмерения.Коэффициент, 1),
	|	0
	|ИЗ
	|	Документ.КомплектацияЗапасов.СерииНоменклатуры КАК КомплектацияЗапасовСерииНоменклатуры
	|		ПРАВОЕ СОЕДИНЕНИЕ Документ.КомплектацияЗапасов КАК КомплектацияЗапасов
	|		ПО (КомплектацияЗапасовСерииНоменклатуры.КлючСвязи = 0)
	|ГДЕ
	|	КомплектацияЗапасов.Ссылка В(&Ссылка)
	|	И КомплектацияЗапасов.ВидОперации = ЗНАЧЕНИЕ(Перечисление.ВидыОперацийКомплектацияЗапасов.Сборка)
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ПеремещениеЗапасовЗапасы.Ссылка.СтруктурнаяЕдиницаПолучатель,
	|	ПеремещениеЗапасовЗапасы.Ссылка.Организация,
	|	НЕОПРЕДЕЛЕНО,
	|	ПеремещениеЗапасовЗапасы.Номенклатура,
	|	ПеремещениеЗапасовЗапасы.Ссылка,
	|	ПеремещениеЗапасовЗапасы.Характеристика,
	|	ПеремещениеЗапасовЗапасы.Партия,
	|	ПеремещениеЗапасовЗапасы.Количество,
	|	ПеремещениеЗапасовСерииНоменклатуры.Серия,
	|	ПеремещениеЗапасовСерииНоменклатуры.Количество,
	|	ПеремещениеЗапасовЗапасы.ЯчейкаПолучатель,
	|	ПеремещениеЗапасовЗапасы.ЕдиницаИзмерения,
	|	ЕСТЬNULL(ПеремещениеЗапасовЗапасы.ЕдиницаИзмерения.Коэффициент, 1),
	|	ПеремещениеЗапасовЗапасы.КлючСвязи
	|ИЗ
	|	Документ.ПеремещениеЗапасов.Запасы КАК ПеремещениеЗапасовЗапасы
	|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.ПеремещениеЗапасов.СерииНоменклатуры КАК ПеремещениеЗапасовСерииНоменклатуры
	|		ПО ПеремещениеЗапасовЗапасы.Ссылка = ПеремещениеЗапасовСерииНоменклатуры.Ссылка
	|			И ПеремещениеЗапасовЗапасы.КлючСвязи = ПеремещениеЗапасовСерииНоменклатуры.КлючСвязи
	|ГДЕ
	|	ПеремещениеЗапасовЗапасы.Ссылка В(&Ссылка)
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ПриходнаяНакладнаяЗапасы.СтруктурнаяЕдиница,
	|	ПриходнаяНакладнаяЗапасы.Ссылка.Организация,
	|	ПриходнаяНакладнаяЗапасы.Ссылка.Контрагент,
	|	ПриходнаяНакладнаяЗапасы.Номенклатура,
	|	ПриходнаяНакладнаяЗапасы.Ссылка,
	|	ПриходнаяНакладнаяЗапасы.Характеристика,
	|	ПриходнаяНакладнаяЗапасы.Партия,
	|	ПриходнаяНакладнаяЗапасы.Количество,
	|	ПриходнаяНакладнаяСерииНоменклатуры.Серия,
	|	ПриходнаяНакладнаяСерииНоменклатуры.Количество,
	|	ПриходнаяНакладнаяЗапасы.Ячейка,
	|	ПриходнаяНакладнаяЗапасы.ЕдиницаИзмерения,
	|	ЕСТЬNULL(ПриходнаяНакладнаяЗапасы.ЕдиницаИзмерения.Коэффициент, 1),
	|	ПриходнаяНакладнаяЗапасы.КлючСвязи
	|ИЗ
	|	Документ.ПриходнаяНакладная.Запасы КАК ПриходнаяНакладнаяЗапасы
	|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.ПриходнаяНакладная.СерииНоменклатуры КАК ПриходнаяНакладнаяСерииНоменклатуры
	|		ПО ПриходнаяНакладнаяЗапасы.Ссылка = ПриходнаяНакладнаяСерииНоменклатуры.Ссылка
	|			И ПриходнаяНакладнаяЗапасы.КлючСвязи = ПриходнаяНакладнаяСерииНоменклатуры.КлючСвязи
	|ГДЕ
	|	ПриходнаяНакладнаяЗапасы.Ссылка В(&Ссылка)
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	АвансовыйОтчетЗапасы.СтруктурнаяЕдиница,
	|	АвансовыйОтчетЗапасы.Ссылка.Организация,
	|	НЕОПРЕДЕЛЕНО,
	|	АвансовыйОтчетЗапасы.Номенклатура,
	|	АвансовыйОтчетЗапасы.Ссылка,
	|	АвансовыйОтчетЗапасы.Характеристика,
	|	АвансовыйОтчетЗапасы.Партия,
	|	АвансовыйОтчетЗапасы.Количество,
	|	НЕОПРЕДЕЛЕНО,
	|	0,
	|	НЕОПРЕДЕЛЕНО,
	|	АвансовыйОтчетЗапасы.ЕдиницаИзмерения,
	|	ЕСТЬNULL(АвансовыйОтчетЗапасы.ЕдиницаИзмерения.Коэффициент, 1),
	|	0
	|ИЗ
	|	Документ.АвансовыйОтчет.Запасы КАК АвансовыйОтчетЗапасы
	|ГДЕ
	|	АвансовыйОтчетЗапасы.Ссылка В(&Ссылка)
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	КорректировкаПоступленияЗапасы.СтруктурнаяЕдиница,
	|	КорректировкаПоступленияЗапасы.Ссылка.Организация,
	|	КорректировкаПоступленияЗапасы.Ссылка.Контрагент,
	|	КорректировкаПоступленияЗапасы.Номенклатура,
	|	КорректировкаПоступленияЗапасы.Ссылка,
	|	КорректировкаПоступленияЗапасы.Характеристика,
	|	КорректировкаПоступленияЗапасы.Партия,
	|	КорректировкаПоступленияЗапасы.Количество,
	|	КорректировкаПоступленияСерииНоменклатуры.Серия,
	|	КорректировкаПоступленияСерииНоменклатуры.Количество,
	|	КорректировкаПоступленияЗапасы.Ячейка,
	|	КорректировкаПоступленияЗапасы.ЕдиницаИзмерения,
	|	ЕСТЬNULL(КорректировкаПоступленияЗапасы.ЕдиницаИзмерения.Коэффициент, 1),
	|	КорректировкаПоступленияЗапасы.КлючСвязи
	|ИЗ
	|	Документ.КорректировкаПоступления.Запасы КАК КорректировкаПоступленияЗапасы
	|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.КорректировкаПоступления.СерииНоменклатуры КАК КорректировкаПоступленияСерииНоменклатуры
	|		ПО КорректировкаПоступленияЗапасы.Ссылка = КорректировкаПоступленияСерииНоменклатуры.Ссылка
	|			И КорректировкаПоступленияЗапасы.КлючСвязи = КорректировкаПоступленияСерииНоменклатуры.КлючСвязи
	|ГДЕ
	|	КорректировкаПоступленияЗапасы.Ссылка В(&Ссылка)
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	СборкаЗапасовПродукция.СтруктурнаяЕдиница,
	|	СборкаЗапасовПродукция.Ссылка.Организация,
	|	НЕОПРЕДЕЛЕНО,
	|	СборкаЗапасовПродукция.Номенклатура,
	|	СборкаЗапасовПродукция.Ссылка,
	|	СборкаЗапасовПродукция.Характеристика,
	|	СборкаЗапасовПродукция.Партия,
	|	СборкаЗапасовПродукция.Количество,
	|	СборкаЗапасовСерииНоменклатурыПродукция.Серия,
	|	СборкаЗапасовСерииНоменклатурыПродукция.Количество,
	|	СборкаЗапасовПродукция.Ячейка,
	|	СборкаЗапасовПродукция.ЕдиницаИзмерения,
	|	ЕСТЬNULL(СборкаЗапасовПродукция.ЕдиницаИзмерения.Коэффициент, 1),
	|	СборкаЗапасовПродукция.КлючСвязи
	|ИЗ
	|	Документ.СборкаЗапасов.Продукция КАК СборкаЗапасовПродукция
	|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.СборкаЗапасов.СерииНоменклатурыПродукция КАК СборкаЗапасовСерииНоменклатурыПродукция
	|		ПО СборкаЗапасовПродукция.Ссылка = СборкаЗапасовСерииНоменклатурыПродукция.Ссылка
	|			И СборкаЗапасовПродукция.КлючСвязи = СборкаЗапасовСерииНоменклатурыПродукция.КлючСвязи
	|ГДЕ
	|	СборкаЗапасовПродукция.Ссылка В(&Ссылка)
	|	И СборкаЗапасовПродукция.Ссылка.ВидОперации = ЗНАЧЕНИЕ(Перечисление.ВидыОперацийСборкаЗапасов.Сборка)
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	СборкаЗапасовЗапасы.СтруктурнаяЕдиница,
	|	СборкаЗапасовЗапасы.Ссылка.Организация,
	|	НЕОПРЕДЕЛЕНО,
	|	СборкаЗапасовЗапасы.Номенклатура,
	|	СборкаЗапасовЗапасы.Ссылка,
	|	СборкаЗапасовЗапасы.Характеристика,
	|	СборкаЗапасовЗапасы.Партия,
	|	СборкаЗапасовЗапасы.Количество,
	|	СборкаЗапасовСерииНоменклатуры.Серия,
	|	СборкаЗапасовСерииНоменклатуры.Количество,
	|	СборкаЗапасовЗапасы.Ячейка,
	|	СборкаЗапасовЗапасы.ЕдиницаИзмерения,
	|	ЕСТЬNULL(СборкаЗапасовЗапасы.ЕдиницаИзмерения.Коэффициент, 1),
	|	СборкаЗапасовЗапасы.КлючСвязи
	|ИЗ
	|	Документ.СборкаЗапасов.Запасы КАК СборкаЗапасовЗапасы
	|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.СборкаЗапасов.СерииНоменклатуры КАК СборкаЗапасовСерииНоменклатуры
	|		ПО СборкаЗапасовЗапасы.Ссылка = СборкаЗапасовСерииНоменклатуры.Ссылка
	|			И СборкаЗапасовЗапасы.КлючСвязи = СборкаЗапасовСерииНоменклатуры.КлючСвязи
	|ГДЕ
	|	СборкаЗапасовЗапасы.Ссылка В(&Ссылка)
	|	И СборкаЗапасовЗапасы.Ссылка.ВидОперации = ЗНАЧЕНИЕ(Перечисление.ВидыОперацийСборкаЗапасов.Разборка)
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ОтчетПереработчикаПродукция.Ссылка.СтруктурнаяЕдиница,
	|	ОтчетПереработчикаПродукция.Ссылка.Организация,
	|	ОтчетПереработчикаПродукция.Ссылка.Контрагент,
	|	ОтчетПереработчикаПродукция.Номенклатура,
	|	ОтчетПереработчикаПродукция.Ссылка,
	|	ОтчетПереработчикаПродукция.Характеристика,
	|	ОтчетПереработчикаПродукция.Партия,
	|	ОтчетПереработчикаПродукция.Количество,
	|	ОтчетПереработчикаСерииНоменклатуры.Серия,
	|	ОтчетПереработчикаСерииНоменклатуры.Количество,
	|	ОтчетПереработчикаПродукция.Ссылка.Ячейка,
	|	ОтчетПереработчикаПродукция.ЕдиницаИзмерения,
	|	ЕСТЬNULL(ОтчетПереработчикаПродукция.ЕдиницаИзмерения.Коэффициент, 1),
	|	ОтчетПереработчикаПродукция.КлючСвязи
	|ИЗ
	|	Документ.ОтчетПереработчика.Продукция КАК ОтчетПереработчикаПродукция
	|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.ОтчетПереработчика.СерииНоменклатуры КАК ОтчетПереработчикаСерииНоменклатуры
	|		ПО ОтчетПереработчикаПродукция.Ссылка = ОтчетПереработчикаСерииНоменклатуры.Ссылка
	|			И ОтчетПереработчикаПродукция.КлючСвязи = ОтчетПереработчикаСерииНоменклатуры.КлючСвязи
	|ГДЕ
	|	ОтчетПереработчикаПродукция.Ссылка В(&Ссылка)
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ПересортицаЗапасовЗапасы.Ссылка.СтруктурнаяЕдиница,
	|	ПересортицаЗапасовЗапасы.Ссылка.Организация,
	|	НЕОПРЕДЕЛЕНО,
	|	ПересортицаЗапасовЗапасы.НоменклатураОприходование,
	|	ПересортицаЗапасовЗапасы.Ссылка,
	|	ПересортицаЗапасовЗапасы.ХарактеристикаОприходование,
	|	ПересортицаЗапасовЗапасы.ПартияОприходование,
	|	ПересортицаЗапасовЗапасы.Количество,
	|	ПересортицаЗапасовСерииНоменклатурыОприходование.Серия,
	|	ПересортицаЗапасовСерииНоменклатурыОприходование.Количество,
	|	ПересортицаЗапасовЗапасы.Ссылка.Ячейка,
	|	ПересортицаЗапасовЗапасы.ЕдиницаИзмеренияОприходование,
	|	ЕСТЬNULL(ПересортицаЗапасовЗапасы.ЕдиницаИзмерения.Коэффициент, 1),
	|	ПересортицаЗапасовЗапасы.КлючСвязи
	|ИЗ
	|	Документ.ПересортицаЗапасов.Запасы КАК ПересортицаЗапасовЗапасы
	|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.ПересортицаЗапасов.СерииНоменклатурыОприходование КАК ПересортицаЗапасовСерииНоменклатурыОприходование
	|		ПО ПересортицаЗапасовЗапасы.Ссылка = ПересортицаЗапасовСерииНоменклатурыОприходование.Ссылка
	|			И ПересортицаЗапасовЗапасы.КлючСвязи = ПересортицаЗапасовСерииНоменклатурыОприходование.КлючСвязи
	|ГДЕ
	|	ПересортицаЗапасовЗапасы.Ссылка В(&Ссылка)
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ОприходованиеЗапасовЗапасы.Ссылка.СтруктурнаяЕдиница,
	|	ОприходованиеЗапасовЗапасы.Ссылка.Организация,
	|	НЕОПРЕДЕЛЕНО,
	|	ОприходованиеЗапасовЗапасы.Номенклатура,
	|	ОприходованиеЗапасовЗапасы.Ссылка,
	|	ОприходованиеЗапасовЗапасы.Характеристика,
	|	ОприходованиеЗапасовЗапасы.Партия,
	|	ОприходованиеЗапасовЗапасы.Количество,
	|	ОприходованиеЗапасовСерииНоменклатуры.Серия,
	|	ОприходованиеЗапасовСерииНоменклатуры.Количество,
	|	ОприходованиеЗапасовЗапасы.Ссылка.Ячейка,
	|	ОприходованиеЗапасовЗапасы.ЕдиницаИзмерения,
	|	ЕСТЬNULL(ОприходованиеЗапасовЗапасы.ЕдиницаИзмерения.Коэффициент, 1),
	|	ОприходованиеЗапасовЗапасы.КлючСвязи
	|ИЗ
	|	Документ.ОприходованиеЗапасов.Запасы КАК ОприходованиеЗапасовЗапасы
	|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.ОприходованиеЗапасов.СерииНоменклатуры КАК ОприходованиеЗапасовСерииНоменклатуры
	|		ПО ОприходованиеЗапасовЗапасы.Ссылка = ОприходованиеЗапасовСерииНоменклатуры.Ссылка
	|			И ОприходованиеЗапасовЗапасы.КлючСвязи = ОприходованиеЗапасовСерииНоменклатуры.КлючСвязи
	|ГДЕ
	|	ОприходованиеЗапасовЗапасы.Ссылка В(&Ссылка)
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ПередачаТоваровМеждуОрганизациямиЗапасы.СтруктурнаяЕдиница,
	|	ПередачаТоваровМеждуОрганизациямиЗапасы.Ссылка.ОрганизацияПолучатель,
	|	НЕОПРЕДЕЛЕНО,
	|	ПередачаТоваровМеждуОрганизациямиЗапасы.Номенклатура,
	|	ПередачаТоваровМеждуОрганизациямиЗапасы.Ссылка,
	|	ПередачаТоваровМеждуОрганизациямиЗапасы.Характеристика,
	|	ПередачаТоваровМеждуОрганизациямиЗапасы.Партия,
	|	ПередачаТоваровМеждуОрганизациямиЗапасы.Количество,
	|	ПередачаТоваровМеждуОрганизациямиСерииНоменклатуры.Серия,
	|	ПередачаТоваровМеждуОрганизациямиСерииНоменклатуры.Количество,
	|	ПередачаТоваровМеждуОрганизациямиЗапасы.Ячейка,
	|	ПередачаТоваровМеждуОрганизациямиЗапасы.ЕдиницаИзмерения,
	|	ЕСТЬNULL(ПередачаТоваровМеждуОрганизациямиЗапасы.ЕдиницаИзмерения.Коэффициент, 1),
	|	ПередачаТоваровМеждуОрганизациямиЗапасы.КлючСвязи
	|ИЗ
	|	Документ.ПередачаТоваровМеждуОрганизациями.Запасы КАК ПередачаТоваровМеждуОрганизациямиЗапасы
	|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.ПередачаТоваровМеждуОрганизациями.СерииНоменклатуры КАК ПередачаТоваровМеждуОрганизациямиСерииНоменклатуры
	|		ПО ПередачаТоваровМеждуОрганизациямиЗапасы.Ссылка = ПередачаТоваровМеждуОрганизациямиСерииНоменклатуры.Ссылка
	|			И ПередачаТоваровМеждуОрганизациямиЗапасы.КлючСвязи = ПередачаТоваровМеждуОрганизациямиСерииНоменклатуры.КлючСвязи
	|ГДЕ
	|	ПередачаТоваровМеждуОрганизациямиЗапасы.Ссылка В(&Ссылка)
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВтИтог.Организация КАК Организация,
	|	ВтИтог.СтруктурнаяЕдиница КАК СтруктурнаяЕдиница,
	|	ВтИтог.Контрагент КАК Контрагент,
	|	ВтИтог.Номенклатура КАК Номенклатура,
	|	ВтИтог.Характеристика КАК Характеристика,
	|	ВтИтог.Партия КАК Партия,
	|	ВтИтог.ДокументПоступления КАК ДокументПоступления,
	|	ВтИтог.Серия КАК Серия,
	|	ВтИтог.Количество КАК Количество,
	|	ВтИтог.СерииКоличество КАК СерииКоличество,
	|	ВтИтог.ЕдиницаИзмерения КАК ЕдиницаИзмерения,
	|	ВтИтог.Коэффициент КАК Коэффициент,
	|	ВтИтог.КлючСвязи КАК КлючСвязи,
	|	ВтИтог.Ячейка КАК Ячейка
	|ИЗ
	|	ВтИтог КАК ВтИтог
	|ГДЕ
	|	ВтИтог.СтруктурнаяЕдиница.ОрдерныйСклад
	|	И ВтИтог.СтруктурнаяЕдиница.ИспользоватьОрдернуюСхемуПриПоступлении
	|	И ВтИтог.СтруктурнаяЕдиница.ВидУчетаОрдерныхСкладов = ЗНАЧЕНИЕ(Перечисление.ВидыУчетаОрдерныхСкладов.УчетОстатковПоПрочимДокументам)
	|ИТОГИ ПО
	|	Организация,
	|	СтруктурнаяЕдиница,
	|	Контрагент";

	Возврат ТекстЗапроса;
	
КонецФункции

Функция ТекстЗапросаТаблицаНоменклатурыПоКлючевымРеквизитамФинДокументыОтгрузки()
	
	ТекстЗапроса =
	"ВЫБРАТЬ РАЗРЕШЕННЫЕ РАЗЛИЧНЫЕ
	|	КомплектацияЗапасовЗапасы.Ссылка.СтруктурнаяЕдиница КАК СтруктурнаяЕдиница,
	|	КомплектацияЗапасовЗапасы.Ссылка.Организация КАК Организация,
	|	НЕОПРЕДЕЛЕНО КАК Контрагент,
	|	КомплектацияЗапасовЗапасы.Номенклатура КАК Номенклатура,
	|	КомплектацияЗапасовЗапасы.Ссылка КАК ДокументПоступления,
	|	КомплектацияЗапасовЗапасы.Характеристика КАК Характеристика,
	|	КомплектацияЗапасовЗапасы.Партия КАК Партия,
	|	КомплектацияЗапасовЗапасы.Количество КАК Количество,
	|	КомплектацияЗапасовСерииНоменклатурыЗапасы.Серия КАК Серия,
	|	КомплектацияЗапасовСерииНоменклатурыЗапасы.Количество КАК СерииКоличество,
	|	НЕОПРЕДЕЛЕНО КАК Ячейка,
	|	КомплектацияЗапасовЗапасы.ЕдиницаИзмерения КАК ЕдиницаИзмерения,
	|	ЕСТЬNULL(КомплектацияЗапасовЗапасы.ЕдиницаИзмерения.Коэффициент, 1) КАК Коэффициент,
	|	КомплектацияЗапасовЗапасы.КлючСвязи КАК КлючСвязи
	|ПОМЕСТИТЬ ВтИтог
	|ИЗ
	|	Документ.КомплектацияЗапасов.Запасы КАК КомплектацияЗапасовЗапасы
	|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.КомплектацияЗапасов.СерииНоменклатурыЗапасы КАК КомплектацияЗапасовСерииНоменклатурыЗапасы
	|		ПО КомплектацияЗапасовЗапасы.Ссылка = КомплектацияЗапасовСерииНоменклатурыЗапасы.Ссылка
	|			И КомплектацияЗапасовЗапасы.КлючСвязи = КомплектацияЗапасовСерииНоменклатурыЗапасы.КлючСвязи
	|ГДЕ
	|	КомплектацияЗапасовЗапасы.Ссылка В(&Ссылка)
	|	И КомплектацияЗапасовЗапасы.Ссылка.ВидОперации = ЗНАЧЕНИЕ(Перечисление.ВидыОперацийКомплектацияЗапасов.Сборка)
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	КомплектацияЗапасов.СтруктурнаяЕдиница,
	|	КомплектацияЗапасов.Организация,
	|	НЕОПРЕДЕЛЕНО,
	|	КомплектацияЗапасов.Номенклатура,
	|	КомплектацияЗапасов.Ссылка,
	|	КомплектацияЗапасов.Характеристика,
	|	КомплектацияЗапасов.Партия,
	|	КомплектацияЗапасов.Количество,
	|	КомплектацияЗапасовСерииНоменклатуры.Серия,
	|	КомплектацияЗапасовСерииНоменклатуры.Количество,
	|	НЕОПРЕДЕЛЕНО,
	|	КомплектацияЗапасов.ЕдиницаИзмерения,
	|	ЕСТЬNULL(КомплектацияЗапасов.Ссылка.ЕдиницаИзмерения.Коэффициент, 1),
	|	0
	|ИЗ
	|	Документ.КомплектацияЗапасов.СерииНоменклатуры КАК КомплектацияЗапасовСерииНоменклатуры
	|		ПРАВОЕ СОЕДИНЕНИЕ Документ.КомплектацияЗапасов КАК КомплектацияЗапасов
	|		ПО (КомплектацияЗапасовСерииНоменклатуры.КлючСвязи = 0)
	|ГДЕ
	|	КомплектацияЗапасов.Ссылка В(&Ссылка)
	|	И КомплектацияЗапасов.ВидОперации = ЗНАЧЕНИЕ(Перечисление.ВидыОперацийКомплектацияЗапасов.Разборка)
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ПеремещениеЗапасовЗапасы.Ссылка.СтруктурнаяЕдиница,
	|	ПеремещениеЗапасовЗапасы.Ссылка.Организация,
	|	НЕОПРЕДЕЛЕНО,
	|	ПеремещениеЗапасовЗапасы.Номенклатура,
	|	ПеремещениеЗапасовЗапасы.Ссылка,
	|	ПеремещениеЗапасовЗапасы.Характеристика,
	|	ПеремещениеЗапасовЗапасы.Партия,
	|	ПеремещениеЗапасовЗапасы.Количество,
	|	ПеремещениеЗапасовСерииНоменклатуры.Серия,
	|	ПеремещениеЗапасовСерииНоменклатуры.Количество,
	|	ПеремещениеЗапасовЗапасы.ЯчейкаПолучатель,
	|	ПеремещениеЗапасовЗапасы.ЕдиницаИзмерения,
	|	ЕСТЬNULL(ПеремещениеЗапасовЗапасы.ЕдиницаИзмерения.Коэффициент, 1),
	|	ПеремещениеЗапасовЗапасы.КлючСвязи
	|ИЗ
	|	Документ.ПеремещениеЗапасов.Запасы КАК ПеремещениеЗапасовЗапасы
	|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.ПеремещениеЗапасов.СерииНоменклатуры КАК ПеремещениеЗапасовСерииНоменклатуры
	|		ПО ПеремещениеЗапасовЗапасы.Ссылка = ПеремещениеЗапасовСерииНоменклатуры.Ссылка
	|			И ПеремещениеЗапасовЗапасы.КлючСвязи = ПеремещениеЗапасовСерииНоменклатуры.КлючСвязи
	|ГДЕ
	|	ПеремещениеЗапасовЗапасы.Ссылка В(&Ссылка)
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	РасходнаяНакладнаяЗапасы.СтруктурнаяЕдиница,
	|	РасходнаяНакладнаяЗапасы.Ссылка.Организация,
	|	РасходнаяНакладнаяЗапасы.Ссылка.Контрагент,
	|	РасходнаяНакладнаяЗапасы.Номенклатура,
	|	РасходнаяНакладнаяЗапасы.Ссылка,
	|	РасходнаяНакладнаяЗапасы.Характеристика,
	|	РасходнаяНакладнаяЗапасы.Партия,
	|	РасходнаяНакладнаяЗапасы.Количество,
	|	РасходнаяНакладнаяСерииНоменклатуры.Серия,
	|	РасходнаяНакладнаяСерииНоменклатуры.Количество,
	|	РасходнаяНакладнаяЗапасы.Ячейка,
	|	РасходнаяНакладнаяЗапасы.ЕдиницаИзмерения,
	|	ЕСТЬNULL(РасходнаяНакладнаяЗапасы.ЕдиницаИзмерения.Коэффициент, 1),
	|	РасходнаяНакладнаяЗапасы.КлючСвязи
	|ИЗ
	|	Документ.РасходнаяНакладная.Запасы КАК РасходнаяНакладнаяЗапасы
	|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.РасходнаяНакладная.СерииНоменклатуры КАК РасходнаяНакладнаяСерииНоменклатуры
	|		ПО РасходнаяНакладнаяЗапасы.Ссылка = РасходнаяНакладнаяСерииНоменклатуры.Ссылка
	|			И РасходнаяНакладнаяЗапасы.КлючСвязи = РасходнаяНакладнаяСерииНоменклатуры.КлючСвязи
	|ГДЕ
	|	РасходнаяНакладнаяЗапасы.Ссылка В(&Ссылка)
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ПринятиеКУчетуВА.СтруктурнаяЕдиница,
	|	ПринятиеКУчетуВА.Ссылка.Организация,
	|	НЕОПРЕДЕЛЕНО,
	|	ПринятиеКУчетуВА.Номенклатура,
	|	ПринятиеКУчетуВА.Ссылка,
	|	ПринятиеКУчетуВА.Характеристика,
	|	ПринятиеКУчетуВА.Партия,
	|	ПринятиеКУчетуВА.Количество,
	|	НЕОПРЕДЕЛЕНО,
	|	0,
	|	НЕОПРЕДЕЛЕНО,
	|	ПринятиеКУчетуВА.ЕдиницаИзмерения,
	|	ЕСТЬNULL(ПринятиеКУчетуВА.ЕдиницаИзмерения.Коэффициент, 1),
	|	0
	|ИЗ
	|	Документ.ПринятиеКУчетуВА КАК ПринятиеКУчетуВА
	|ГДЕ
	|	ПринятиеКУчетуВА.Ссылка В(&Ссылка)
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	КорректировкаРеализацииЗапасы.СтруктурнаяЕдиница,
	|	КорректировкаРеализацииЗапасы.Ссылка.Организация,
	|	КорректировкаРеализацииЗапасы.Ссылка.Контрагент,
	|	КорректировкаРеализацииЗапасы.Номенклатура,
	|	КорректировкаРеализацииЗапасы.Ссылка,
	|	КорректировкаРеализацииЗапасы.Характеристика,
	|	КорректировкаРеализацииЗапасы.Партия,
	|	КорректировкаРеализацииЗапасы.Количество,
	|	КорректировкаРеализацииСерииНоменклатуры.Серия,
	|	КорректировкаРеализацииСерииНоменклатуры.Количество,
	|	КорректировкаРеализацииЗапасы.Ячейка,
	|	КорректировкаРеализацииЗапасы.ЕдиницаИзмерения,
	|	ЕСТЬNULL(КорректировкаРеализацииЗапасы.ЕдиницаИзмерения.Коэффициент, 1),
	|	КорректировкаРеализацииЗапасы.КлючСвязи
	|ИЗ
	|	Документ.КорректировкаРеализации.Запасы КАК КорректировкаРеализацииЗапасы
	|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.КорректировкаРеализации.СерииНоменклатуры КАК КорректировкаРеализацииСерииНоменклатуры
	|		ПО КорректировкаРеализацииЗапасы.Ссылка = КорректировкаРеализацииСерииНоменклатуры.Ссылка
	|			И КорректировкаРеализацииЗапасы.КлючСвязи = КорректировкаРеализацииСерииНоменклатуры.КлючСвязи
	|ГДЕ
	|	КорректировкаРеализацииЗапасы.Ссылка В(&Ссылка)
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	СборкаЗапасовПродукция.СтруктурнаяЕдиница,
	|	СборкаЗапасовПродукция.Ссылка.Организация,
	|	НЕОПРЕДЕЛЕНО,
	|	СборкаЗапасовПродукция.Номенклатура,
	|	СборкаЗапасовПродукция.Ссылка,
	|	СборкаЗапасовПродукция.Характеристика,
	|	СборкаЗапасовПродукция.Партия,
	|	СборкаЗапасовПродукция.Количество,
	|	СборкаЗапасовСерииНоменклатурыПродукция.Серия,
	|	СборкаЗапасовСерииНоменклатурыПродукция.Количество,
	|	СборкаЗапасовПродукция.Ячейка,
	|	СборкаЗапасовПродукция.ЕдиницаИзмерения,
	|	ЕСТЬNULL(СборкаЗапасовПродукция.ЕдиницаИзмерения.Коэффициент, 1),
	|	СборкаЗапасовПродукция.КлючСвязи
	|ИЗ
	|	Документ.СборкаЗапасов.Продукция КАК СборкаЗапасовПродукция
	|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.СборкаЗапасов.СерииНоменклатурыПродукция КАК СборкаЗапасовСерииНоменклатурыПродукция
	|		ПО СборкаЗапасовПродукция.Ссылка = СборкаЗапасовСерииНоменклатурыПродукция.Ссылка
	|			И СборкаЗапасовПродукция.КлючСвязи = СборкаЗапасовСерииНоменклатурыПродукция.КлючСвязи
	|ГДЕ
	|	СборкаЗапасовПродукция.Ссылка В(&Ссылка)
	|	И СборкаЗапасовПродукция.Ссылка.ВидОперации = ЗНАЧЕНИЕ(Перечисление.ВидыОперацийСборкаЗапасов.Разборка)
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	СборкаЗапасовЗапасы.СтруктурнаяЕдиница,
	|	СборкаЗапасовЗапасы.Ссылка.Организация,
	|	НЕОПРЕДЕЛЕНО,
	|	СборкаЗапасовЗапасы.Номенклатура,
	|	СборкаЗапасовЗапасы.Ссылка,
	|	СборкаЗапасовЗапасы.Характеристика,
	|	СборкаЗапасовЗапасы.Партия,
	|	СборкаЗапасовЗапасы.Количество,
	|	СборкаЗапасовСерииНоменклатуры.Серия,
	|	СборкаЗапасовСерииНоменклатуры.Количество,
	|	СборкаЗапасовЗапасы.Ячейка,
	|	СборкаЗапасовЗапасы.ЕдиницаИзмерения,
	|	ЕСТЬNULL(СборкаЗапасовЗапасы.ЕдиницаИзмерения.Коэффициент, 1),
	|	СборкаЗапасовЗапасы.КлючСвязи
	|ИЗ
	|	Документ.СборкаЗапасов.Запасы КАК СборкаЗапасовЗапасы
	|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.СборкаЗапасов.СерииНоменклатуры КАК СборкаЗапасовСерииНоменклатуры
	|		ПО СборкаЗапасовЗапасы.Ссылка = СборкаЗапасовСерииНоменклатуры.Ссылка
	|			И СборкаЗапасовЗапасы.КлючСвязи = СборкаЗапасовСерииНоменклатуры.КлючСвязи
	|ГДЕ
	|	СборкаЗапасовЗапасы.Ссылка В(&Ссылка)
	|	И СборкаЗапасовЗапасы.Ссылка.ВидОперации = ЗНАЧЕНИЕ(Перечисление.ВидыОперацийСборкаЗапасов.Сборка)
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ОтчетОПереработкеПродукция.Ссылка.СтруктурнаяЕдиница,
	|	ОтчетОПереработкеПродукция.Ссылка.Организация,
	|	ОтчетОПереработкеПродукция.Ссылка.Контрагент,
	|	ОтчетОПереработкеПродукция.Номенклатура,
	|	ОтчетОПереработкеПродукция.Ссылка,
	|	ОтчетОПереработкеПродукция.Характеристика,
	|	ОтчетОПереработкеПродукция.Партия,
	|	ОтчетОПереработкеПродукция.Количество,
	|	ОтчетОПереработкеСерииНоменклатуры.Серия,
	|	ОтчетОПереработкеСерииНоменклатуры.Количество,
	|	ОтчетОПереработкеПродукция.Ссылка.Ячейка,
	|	ОтчетОПереработкеПродукция.ЕдиницаИзмерения,
	|	ЕСТЬNULL(ОтчетОПереработкеПродукция.ЕдиницаИзмерения.Коэффициент, 1),
	|	ОтчетОПереработкеПродукция.КлючСвязи
	|ИЗ
	|	Документ.ОтчетОПереработке.Продукция КАК ОтчетОПереработкеПродукция
	|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.ОтчетОПереработке.СерииНоменклатуры КАК ОтчетОПереработкеСерииНоменклатуры
	|		ПО ОтчетОПереработкеПродукция.Ссылка = ОтчетОПереработкеСерииНоменклатуры.Ссылка
	|			И ОтчетОПереработкеПродукция.КлючСвязи = ОтчетОПереработкеСерииНоменклатуры.КлючСвязи
	|ГДЕ
	|	ОтчетОПереработкеПродукция.Ссылка В(&Ссылка)
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ПересортицаЗапасовЗапасы.Ссылка.СтруктурнаяЕдиница,
	|	ПересортицаЗапасовЗапасы.Ссылка.Организация,
	|	НЕОПРЕДЕЛЕНО,
	|	ПересортицаЗапасовЗапасы.Номенклатура,
	|	ПересортицаЗапасовЗапасы.Ссылка,
	|	ПересортицаЗапасовЗапасы.Характеристика,
	|	ПересортицаЗапасовЗапасы.Партия,
	|	ПересортицаЗапасовЗапасы.Количество,
	|	ПересортицаЗапасовСерииНоменклатуры.Серия,
	|	ПересортицаЗапасовСерииНоменклатуры.Количество,
	|	ПересортицаЗапасовЗапасы.Ссылка.Ячейка,
	|	ПересортицаЗапасовЗапасы.ЕдиницаИзмерения,
	|	ЕСТЬNULL(ПересортицаЗапасовЗапасы.ЕдиницаИзмерения.Коэффициент, 1),
	|	ПересортицаЗапасовЗапасы.КлючСвязи
	|ИЗ
	|	Документ.ПересортицаЗапасов.Запасы КАК ПересортицаЗапасовЗапасы
	|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.ПересортицаЗапасов.СерииНоменклатуры КАК ПересортицаЗапасовСерииНоменклатуры
	|		ПО ПересортицаЗапасовЗапасы.Ссылка = ПересортицаЗапасовСерииНоменклатуры.Ссылка
	|			И ПересортицаЗапасовЗапасы.КлючСвязи = ПересортицаЗапасовСерииНоменклатуры.КлючСвязи
	|ГДЕ
	|	ПересортицаЗапасовЗапасы.Ссылка В(&Ссылка)
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	СписаниеЗапасовЗапасы.Ссылка.СтруктурнаяЕдиница,
	|	СписаниеЗапасовЗапасы.Ссылка.Организация,
	|	НЕОПРЕДЕЛЕНО,
	|	СписаниеЗапасовЗапасы.Номенклатура,
	|	СписаниеЗапасовЗапасы.Ссылка,
	|	СписаниеЗапасовЗапасы.Характеристика,
	|	СписаниеЗапасовЗапасы.Партия,
	|	СписаниеЗапасовЗапасы.Количество,
	|	СписаниеЗапасовСерииНоменклатуры.Серия,
	|	СписаниеЗапасовСерииНоменклатуры.Количество,
	|	СписаниеЗапасовЗапасы.Ссылка.Ячейка,
	|	СписаниеЗапасовЗапасы.ЕдиницаИзмерения,
	|	ЕСТЬNULL(СписаниеЗапасовЗапасы.ЕдиницаИзмерения.Коэффициент, 1),
	|	СписаниеЗапасовЗапасы.КлючСвязи
	|ИЗ
	|	Документ.СписаниеЗапасов.Запасы КАК СписаниеЗапасовЗапасы
	|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.СписаниеЗапасов.СерииНоменклатуры КАК СписаниеЗапасовСерииНоменклатуры
	|		ПО СписаниеЗапасовЗапасы.Ссылка = СписаниеЗапасовСерииНоменклатуры.Ссылка
	|			И СписаниеЗапасовЗапасы.КлючСвязи = СписаниеЗапасовСерииНоменклатуры.КлючСвязи
	|ГДЕ
	|	СписаниеЗапасовЗапасы.Ссылка В(&Ссылка)
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ПередачаТоваровМеждуОрганизациямиЗапасы.СтруктурнаяЕдиница,
	|	ПередачаТоваровМеждуОрганизациямиЗапасы.Ссылка.ОрганизацияПолучатель,
	|	НЕОПРЕДЕЛЕНО,
	|	ПередачаТоваровМеждуОрганизациямиЗапасы.Номенклатура,
	|	ПередачаТоваровМеждуОрганизациямиЗапасы.Ссылка,
	|	ПередачаТоваровМеждуОрганизациямиЗапасы.Характеристика,
	|	ПередачаТоваровМеждуОрганизациямиЗапасы.Партия,
	|	ПередачаТоваровМеждуОрганизациямиЗапасы.Количество,
	|	ПередачаТоваровМеждуОрганизациямиСерииНоменклатуры.Серия,
	|	ПередачаТоваровМеждуОрганизациямиСерииНоменклатуры.Количество,
	|	ПередачаТоваровМеждуОрганизациямиЗапасы.Ячейка,
	|	ПередачаТоваровМеждуОрганизациямиЗапасы.ЕдиницаИзмерения,
	|	ЕСТЬNULL(ПередачаТоваровМеждуОрганизациямиЗапасы.ЕдиницаИзмерения.Коэффициент, 1),
	|	ПередачаТоваровМеждуОрганизациямиЗапасы.КлючСвязи
	|ИЗ
	|	Документ.ПередачаТоваровМеждуОрганизациями.Запасы КАК ПередачаТоваровМеждуОрганизациямиЗапасы
	|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.ПередачаТоваровМеждуОрганизациями.СерииНоменклатуры КАК ПередачаТоваровМеждуОрганизациямиСерииНоменклатуры
	|		ПО ПередачаТоваровМеждуОрганизациямиЗапасы.Ссылка = ПередачаТоваровМеждуОрганизациямиСерииНоменклатуры.Ссылка
	|			И ПередачаТоваровМеждуОрганизациямиЗапасы.КлючСвязи = ПередачаТоваровМеждуОрганизациямиСерииНоменклатуры.КлючСвязи
	|ГДЕ
	|	ПередачаТоваровМеждуОрганизациямиЗапасы.Ссылка В(&Ссылка)
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ЗаказПокупателяЗапасы.СтруктурнаяЕдиницаРезерв,
	|	ЗаказПокупателяЗапасы.Ссылка.Организация,
	|	ЗаказПокупателяЗапасы.Ссылка.Контрагент,
	|	ЗаказПокупателяЗапасы.Номенклатура,
	|	ЗаказПокупателяЗапасы.Ссылка,
	|	ЗаказПокупателяЗапасы.Характеристика,
	|	ЗаказПокупателяЗапасы.Партия,
	|	ЗаказПокупателяЗапасы.Количество,
	|	ЗаказПокупателяСерииНоменклатуры.Серия,
	|	ЗаказПокупателяСерииНоменклатуры.Количество,
	|	ЗаказПокупателяЗапасы.Ячейка,
	|	ЗаказПокупателяЗапасы.ЕдиницаИзмерения,
	|	ЕСТЬNULL(ЗаказПокупателяЗапасы.ЕдиницаИзмерения.Коэффициент, 1),
	|	ЗаказПокупателяЗапасы.КлючСвязи
	|ИЗ
	|	Документ.ЗаказПокупателя.Запасы КАК ЗаказПокупателяЗапасы
	|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.ЗаказПокупателя.СерииНоменклатуры КАК ЗаказПокупателяСерииНоменклатуры
	|		ПО ЗаказПокупателяЗапасы.Ссылка = ЗаказПокупателяСерииНоменклатуры.Ссылка
	|			И ЗаказПокупателяЗапасы.КлючСвязи = ЗаказПокупателяСерииНоменклатуры.КлючСвязи
	|ГДЕ
	|	ЗаказПокупателяЗапасы.Ссылка В(&Ссылка)
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ЗаказПокупателяМатериалы.СтруктурнаяЕдиницаРезерв,
	|	ЗаказПокупателяМатериалы.Ссылка.Организация,
	|	ЗаказПокупателяМатериалы.Ссылка.Контрагент,
	|	ЗаказПокупателяМатериалы.Номенклатура,
	|	ЗаказПокупателяМатериалы.Ссылка,
	|	ЗаказПокупателяМатериалы.Характеристика,
	|	ЗаказПокупателяМатериалы.Партия,
	|	ЗаказПокупателяМатериалы.Количество,
	|	ЗаказПокупателяСерииНоменклатурыМатериалы.Серия,
	|	ЗаказПокупателяСерииНоменклатурыМатериалы.Количество,
	|	ЗаказПокупателяМатериалы.Ячейка,
	|	ЗаказПокупателяМатериалы.ЕдиницаИзмерения,
	|	ЕСТЬNULL(ЗаказПокупателяМатериалы.ЕдиницаИзмерения.Коэффициент, 1),
	|	ЗаказПокупателяМатериалы.КлючСвязи
	|ИЗ
	|	Документ.ЗаказПокупателя.Материалы КАК ЗаказПокупателяМатериалы
	|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.ЗаказПокупателя.СерииНоменклатурыМатериалы КАК ЗаказПокупателяСерииНоменклатурыМатериалы
	|		ПО ЗаказПокупателяМатериалы.Ссылка = ЗаказПокупателяСерииНоменклатурыМатериалы.Ссылка
	|			И ЗаказПокупателяМатериалы.КлючСвязи = ЗаказПокупателяСерииНоменклатурыМатериалы.КлючСвязи
	|ГДЕ
	|	ЗаказПокупателяМатериалы.Ссылка В(&Ссылка)
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВтИтог.Организация КАК Организация,
	|	ВтИтог.СтруктурнаяЕдиница КАК СтруктурнаяЕдиница,
	|	ВтИтог.Контрагент КАК Контрагент,
	|	ВтИтог.Номенклатура КАК Номенклатура,
	|	ВтИтог.Характеристика КАК Характеристика,
	|	ВтИтог.Партия КАК Партия,
	|	ВтИтог.ДокументПоступления КАК ДокументПоступления,
	|	ВтИтог.Серия КАК Серия,
	|	ВтИтог.Количество КАК Количество,
	|	ВтИтог.СерииКоличество КАК СерииКоличество,
	|	ВтИтог.ЕдиницаИзмерения КАК ЕдиницаИзмерения,
	|	ВтИтог.Коэффициент КАК Коэффициент,
	|	ВтИтог.КлючСвязи КАК КлючСвязи,
	|	ВтИтог.Ячейка КАК Ячейка
	|ИЗ
	|	ВтИтог КАК ВтИтог
	|ГДЕ
	|	ВтИтог.СтруктурнаяЕдиница.ОрдерныйСклад
	|	И ВтИтог.СтруктурнаяЕдиница.ИспользоватьОрдернуюСхемуПриПоступлении
	|	И ВтИтог.СтруктурнаяЕдиница.ВидУчетаОрдерныхСкладов = ЗНАЧЕНИЕ(Перечисление.ВидыУчетаОрдерныхСкладов.УчетОстатковПоПрочимДокументам)
	|ИТОГИ ПО
	|	Организация,
	|	СтруктурнаяЕдиница,
	|	Контрагент";

	Возврат ТекстЗапроса;
	
КонецФункции

Функция ТекстЗапросаТаблицаНоменклатурыПоКлючевымРеквизитамПриходныеОрдера()
	
	ТекстЗапроса =
	"ВЫБРАТЬ РАЗРЕШЕННЫЕ РАЗЛИЧНЫЕ
	|	ПриходныйОрдерЗапасы.Ссылка.СтруктурнаяЕдиница КАК СтруктурнаяЕдиница,
	|	ПриходныйОрдерЗапасы.Ссылка.Организация КАК Организация,
	|	ПриходныйОрдерЗапасы.Ссылка.Контрагент КАК Контрагент,
	|	ПриходныйОрдерЗапасы.Номенклатура КАК Номенклатура,
	|	ПриходныйОрдерЗапасы.Ссылка КАК ДокументПоступления,
	|	ПриходныйОрдерЗапасы.Характеристика КАК Характеристика,
	|	ПриходныйОрдерЗапасы.Партия КАК Партия,
	|	ПриходныйОрдерЗапасы.Количество КАК Количество,
	|	ПриходныйОрдерСерииНоменклатуры.Серия КАК Серия,
	|	ПриходныйОрдерСерииНоменклатуры.Количество КАК СерииКоличество,
	|	ПриходныйОрдерЗапасы.Ячейка КАК Ячейка,
	|	ПриходныйОрдерЗапасы.ЕдиницаИзмерения КАК ЕдиницаИзмерения,
	|	ЕСТЬNULL(ПриходныйОрдерЗапасы.ЕдиницаИзмерения.Коэффициент, 1) КАК Коэффициент,
	|	ПриходныйОрдерЗапасы.КлючСвязи КАК КлючСвязи
	|ПОМЕСТИТЬ ВтИтог
	|ИЗ
	|	Документ.ПриходныйОрдер.Запасы КАК ПриходныйОрдерЗапасы
	|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.ПриходныйОрдер.СерииНоменклатуры КАК ПриходныйОрдерСерииНоменклатуры
	|		ПО ПриходныйОрдерЗапасы.Ссылка = ПриходныйОрдерСерииНоменклатуры.Ссылка
	|			И ПриходныйОрдерЗапасы.КлючСвязи = ПриходныйОрдерСерииНоменклатуры.КлючСвязи
	|ГДЕ
	|	ПриходныйОрдерЗапасы.Ссылка В(&Ссылка)
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВтИтог.Организация КАК Организация,
	|	ВтИтог.Контрагент КАК Контрагент,
	|	ВтИтог.Номенклатура КАК Номенклатура,
	|	ВтИтог.Характеристика КАК Характеристика,
	|	ВтИтог.Партия КАК Партия,
	|	ВтИтог.ДокументПоступления КАК ДокументПоступления,
	|	ВтИтог.Серия КАК Серия,
	|	ВтИтог.Количество КАК Количество,
	|	ВтИтог.СерииКоличество КАК СерииКоличество,
	|	ВтИтог.ЕдиницаИзмерения КАК ЕдиницаИзмерения,
	|	ВтИтог.Коэффициент КАК Коэффициент,
	|	ВтИтог.КлючСвязи КАК КлючСвязи,
	|	ВтИтог.Ячейка КАК Ячейка,
	|	ВтИтог.СтруктурнаяЕдиница КАК СтруктурнаяЕдиница
	|ИЗ
	|	ВтИтог КАК ВтИтог
	|ИТОГИ ПО
	|	Организация,
	|	СтруктурнаяЕдиница,
	|	Контрагент";

	Возврат ТекстЗапроса;
	
КонецФункции

Функция ТекстЗапросаТаблицаНоменклатурыПоКлючевымРеквизитамРасходныеОрдера()
	
	ТекстЗапроса =
	"ВЫБРАТЬ РАЗРЕШЕННЫЕ РАЗЛИЧНЫЕ
	|	РасходныйОрдерЗапасы.Ссылка.СтруктурнаяЕдиница КАК СтруктурнаяЕдиница,
	|	РасходныйОрдерЗапасы.Ссылка.Организация КАК Организация,
	|	РасходныйОрдерЗапасы.Ссылка.Контрагент КАК Контрагент,
	|	РасходныйОрдерЗапасы.Номенклатура КАК Номенклатура,
	|	РасходныйОрдерЗапасы.Ссылка КАК ДокументПоступления,
	|	РасходныйОрдерЗапасы.Характеристика КАК Характеристика,
	|	РасходныйОрдерЗапасы.Партия КАК Партия,
	|	РасходныйОрдерЗапасы.Количество КАК Количество,
	|	РасходныйОрдерСерииНоменклатуры.Серия КАК Серия,
	|	РасходныйОрдерСерииНоменклатуры.Количество КАК СерииКоличество,
	|	РасходныйОрдерЗапасы.Ячейка КАК Ячейка,
	|	РасходныйОрдерЗапасы.ЕдиницаИзмерения КАК ЕдиницаИзмерения,
	|	ЕСТЬNULL(РасходныйОрдерЗапасы.ЕдиницаИзмерения.Коэффициент, 1) КАК Коэффициент,
	|	РасходныйОрдерЗапасы.КлючСвязи КАК КлючСвязи
	|ПОМЕСТИТЬ ВтИтог
	|ИЗ
	|	Документ.РасходныйОрдер.Запасы КАК РасходныйОрдерЗапасы
	|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.РасходныйОрдер.СерииНоменклатуры КАК РасходныйОрдерСерииНоменклатуры
	|		ПО РасходныйОрдерЗапасы.Ссылка = РасходныйОрдерСерииНоменклатуры.Ссылка
	|			И РасходныйОрдерЗапасы.КлючСвязи = РасходныйОрдерСерииНоменклатуры.КлючСвязи
	|ГДЕ
	|	РасходныйОрдерЗапасы.Ссылка В(&Ссылка)
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВтИтог.Организация КАК Организация,
	|	ВтИтог.Контрагент КАК Контрагент,
	|	ВтИтог.Номенклатура КАК Номенклатура,
	|	ВтИтог.Характеристика КАК Характеристика,
	|	ВтИтог.Партия КАК Партия,
	|	ВтИтог.ДокументПоступления КАК ДокументПоступления,
	|	ВтИтог.Серия КАК Серия,
	|	ВтИтог.Количество КАК Количество,
	|	ВтИтог.СерииКоличество КАК СерииКоличество,
	|	ВтИтог.ЕдиницаИзмерения КАК ЕдиницаИзмерения,
	|	ВтИтог.Коэффициент КАК Коэффициент,
	|	ВтИтог.КлючСвязи КАК КлючСвязи,
	|	ВтИтог.Ячейка КАК Ячейка,
	|	ВтИтог.СтруктурнаяЕдиница КАК СтруктурнаяЕдиница
	|ИЗ
	|	ВтИтог КАК ВтИтог
	|ИТОГИ ПО
	|	Организация,
	|	СтруктурнаяЕдиница,
	|	Контрагент";

	Возврат ТекстЗапроса;
	
КонецФункции

Функция СоздатьВременнуюТаблицуДляОбработкиДанных()
	
	ВременнаяТаблица = Новый ТаблицаЗначений;
	
	ВременнаяТаблица.Колонки.Добавить("ДокументПоступления");
	ВременнаяТаблица.Колонки.Добавить("ЕдиницаИзмерения");
	ВременнаяТаблица.Колонки.Добавить("Количество");
	ВременнаяТаблица.Колонки.Добавить("Контрагент");
	ВременнаяТаблица.Колонки.Добавить("Коэффициент");
	ВременнаяТаблица.Колонки.Добавить("Номенклатура");
	ВременнаяТаблица.Колонки.Добавить("Организация");
	ВременнаяТаблица.Колонки.Добавить("Партия");
	ВременнаяТаблица.Колонки.Добавить("СерииКоличество");
	ВременнаяТаблица.Колонки.Добавить("Серия");
	ВременнаяТаблица.Колонки.Добавить("СтруктурнаяЕдиница");
	ВременнаяТаблица.Колонки.Добавить("Характеристика");
	ВременнаяТаблица.Колонки.Добавить("КлючСвязи");
	ВременнаяТаблица.Колонки.Добавить("Ячейка");
	
	Возврат ВременнаяТаблица;
	
КонецФункции

Функция СтруктураОстатковПоДокументамОснования(МассивДокументов)
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("ДокументОснование", МассивДокументов);
	
	Запрос.Текст =
	"ВЫБРАТЬ
	|	ЗапасыКПоступлениюНаСкладыОстатки.Номенклатура КАК Номенклатура,
	|	ЗапасыКПоступлениюНаСкладыОстатки.Характеристика КАК Характеристика,
	|	ЗапасыКПоступлениюНаСкладыОстатки.Партия КАК Партия,
	|	ВЫБОР
	|		КОГДА ЗапасыКПоступлениюНаСкладыОстатки.КоличествоОстаток < 0
	|			ТОГДА -ЗапасыКПоступлениюНаСкладыОстатки.КоличествоОстаток
	|		ИНАЧЕ ЗапасыКПоступлениюНаСкладыОстатки.КоличествоОстаток
	|	КОНЕЦ КАК Количество,
	|	ЗапасыКПоступлениюНаСкладыОстатки.ДокументОснование КАК ДокументПоступления,
	|	ЗапасыКПоступлениюНаСкладыОстатки.Ячейка КАК Ячейка
	|ПОМЕСТИТЬ ЗапасыОстаткиИтог
	|ИЗ
	|	РегистрНакопления.ЗапасыКПоступлениюНаСклады.Остатки(, ДокументОснование В (&ДокументОснование)) КАК ЗапасыКПоступлениюНаСкладыОстатки
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ЗапасыОстаткиИтог.Номенклатура КАК Номенклатура,
	|	ЗапасыОстаткиИтог.Характеристика КАК Характеристика,
	|	ЗапасыОстаткиИтог.Партия КАК Партия,
	|	СУММА(ЗапасыОстаткиИтог.Количество) КАК Количество,
	|	ЗапасыОстаткиИтог.ДокументПоступления КАК ДокументПоступления,
	|	ЗапасыОстаткиИтог.Ячейка КАК Ячейка
	|ИЗ
	|	ЗапасыОстаткиИтог КАК ЗапасыОстаткиИтог
	|
	|СГРУППИРОВАТЬ ПО
	|	ЗапасыОстаткиИтог.Характеристика,
	|	ЗапасыОстаткиИтог.Партия,
	|	ЗапасыОстаткиИтог.Номенклатура,
	|	ЗапасыОстаткиИтог.Ячейка,
	|	ЗапасыОстаткиИтог.ДокументПоступления
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	СерииНоменклатурыКПоступлениюОстатки.Серия КАК Серия,
	|	ВЫБОР
	|		КОГДА СерииНоменклатурыКПоступлениюОстатки.КоличествоОстаток < 0
	|			ТОГДА -СерииНоменклатурыКПоступлениюОстатки.КоличествоОстаток
	|		ИНАЧЕ СерииНоменклатурыКПоступлениюОстатки.КоличествоОстаток
	|	КОНЕЦ КАК Количество,
	|	СерииНоменклатурыКПоступлениюОстатки.Номенклатура КАК Номенклатура,
	|	СерииНоменклатурыКПоступлениюОстатки.Характеристика КАК Характеристика,
	|	СерииНоменклатурыКПоступлениюОстатки.Партия КАК Партия,
	|	СерииНоменклатурыКПоступлениюОстатки.ДокументОснование КАК ДокументОснование
	|ПОМЕСТИТЬ ОстаткиСерииИтог
	|ИЗ
	|	РегистрНакопления.СерииНоменклатурыКПоступлению.Остатки(, ДокументОснование В (&ДокументОснование)) КАК СерииНоменклатурыКПоступлениюОстатки
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ОстаткиСерииИтог.Серия КАК Серия,
	|	СУММА(ОстаткиСерииИтог.Количество) КАК Количество,
	|	ОстаткиСерииИтог.Номенклатура КАК Номенклатура,
	|	ОстаткиСерииИтог.Характеристика КАК Характеристика,
	|	ОстаткиСерииИтог.Партия КАК Партия,
	|	ОстаткиСерииИтог.ДокументОснование КАК ДокументПоступления
	|ИЗ
	|	ОстаткиСерииИтог КАК ОстаткиСерииИтог
	|
	|СГРУППИРОВАТЬ ПО
	|	ОстаткиСерииИтог.Партия,
	|	ОстаткиСерииИтог.Характеристика,
	|	ОстаткиСерииИтог.Номенклатура,
	|	ОстаткиСерииИтог.Серия,
	|	ОстаткиСерииИтог.ДокументОснование";
	
	РезультатыЗапроса = Запрос.ВыполнитьПакет();
	
	ТаблицаОстаткиСерииНоменклатуры = РезультатыЗапроса[3].Выгрузить();
	ТаблицаОстаткиЗапасы = РезультатыЗапроса[1].Выгрузить();
	
	Возврат Новый Структура("ТаблицаОстаткиЗапасы, ТаблицаОстаткиСерииНоменклатуры", ТаблицаОстаткиЗапасы, ТаблицаОстаткиСерииНоменклатуры);
	
КонецФункции

Функция СтруктураОстатковПоДокументамОснованияОтгрузка(МассивДокументов)
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("ДокументОснование", МассивДокументов);
	
	Запрос.Текст =
	"ВЫБРАТЬ
	|	ЗапасыКРасходуСоСкладовОстатки.Номенклатура КАК Номенклатура,
	|	ЗапасыКРасходуСоСкладовОстатки.Характеристика КАК Характеристика,
	|	ЗапасыКРасходуСоСкладовОстатки.Партия КАК Партия,
	|	ВЫБОР
	|		КОГДА ЗапасыКРасходуСоСкладовОстатки.КоличествоОстаток < 0
	|			ТОГДА -ЗапасыКРасходуСоСкладовОстатки.КоличествоОстаток
	|		ИНАЧЕ ЗапасыКРасходуСоСкладовОстатки.КоличествоОстаток
	|	КОНЕЦ КАК Количество,
	|	ЗапасыКРасходуСоСкладовОстатки.ДокументОснование КАК ДокументПоступления,
	|	ЗапасыКРасходуСоСкладовОстатки.Ячейка КАК Ячейка
	|ПОМЕСТИТЬ ЗапасыОстаткиИтог
	|ИЗ
	|	РегистрНакопления.ЗапасыКРасходуСоСкладов.Остатки(, ДокументОснование В (&ДокументОснование)) КАК ЗапасыКРасходуСоСкладовОстатки
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ЗапасыОстаткиИтог.Номенклатура КАК Номенклатура,
	|	ЗапасыОстаткиИтог.Характеристика КАК Характеристика,
	|	ЗапасыОстаткиИтог.Партия КАК Партия,
	|	СУММА(ЗапасыОстаткиИтог.Количество) КАК Количество,
	|	ЗапасыОстаткиИтог.ДокументПоступления КАК ДокументПоступления,
	|	ЗапасыОстаткиИтог.Ячейка КАК Ячейка
	|ИЗ
	|	ЗапасыОстаткиИтог КАК ЗапасыОстаткиИтог
	|
	|СГРУППИРОВАТЬ ПО
	|	ЗапасыОстаткиИтог.Характеристика,
	|	ЗапасыОстаткиИтог.Партия,
	|	ЗапасыОстаткиИтог.Номенклатура,
	|	ЗапасыОстаткиИтог.Ячейка,
	|	ЗапасыОстаткиИтог.ДокументПоступления
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	СерииНоменклатурыКРасходуОстатки.Серия КАК Серия,
	|	ВЫБОР
	|		КОГДА СерииНоменклатурыКРасходуОстатки.КоличествоОстаток < 0
	|			ТОГДА -СерииНоменклатурыКРасходуОстатки.КоличествоОстаток
	|		ИНАЧЕ СерииНоменклатурыКРасходуОстатки.КоличествоОстаток
	|	КОНЕЦ КАК Количество,
	|	СерииНоменклатурыКРасходуОстатки.Номенклатура КАК Номенклатура,
	|	СерииНоменклатурыКРасходуОстатки.Характеристика КАК Характеристика,
	|	СерииНоменклатурыКРасходуОстатки.Партия КАК Партия,
	|	СерииНоменклатурыКРасходуОстатки.ДокументОснование КАК ДокументОснование
	|ПОМЕСТИТЬ ОстаткиСерииИтог
	|ИЗ
	|	РегистрНакопления.СерииНоменклатурыКРасходу.Остатки(, ДокументОснование В (&ДокументОснование)) КАК СерииНоменклатурыКРасходуОстатки
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ОстаткиСерииИтог.Серия КАК Серия,
	|	СУММА(ОстаткиСерииИтог.Количество) КАК Количество,
	|	ОстаткиСерииИтог.Номенклатура КАК Номенклатура,
	|	ОстаткиСерииИтог.Характеристика КАК Характеристика,
	|	ОстаткиСерииИтог.Партия КАК Партия,
	|	ОстаткиСерииИтог.ДокументОснование КАК ДокументПоступления
	|ИЗ
	|	ОстаткиСерииИтог КАК ОстаткиСерииИтог
	|
	|СГРУППИРОВАТЬ ПО
	|	ОстаткиСерииИтог.Партия,
	|	ОстаткиСерииИтог.Характеристика,
	|	ОстаткиСерииИтог.Номенклатура,
	|	ОстаткиСерииИтог.Серия,
	|	ОстаткиСерииИтог.ДокументОснование";
	
	РезультатыЗапроса = Запрос.ВыполнитьПакет();
	
	ТаблицаОстаткиСерииНоменклатуры = РезультатыЗапроса[3].Выгрузить();
	ТаблицаОстаткиЗапасы = РезультатыЗапроса[1].Выгрузить();
	
	Возврат Новый Структура("ТаблицаОстаткиЗапасы, ТаблицаОстаткиСерииНоменклатуры", ТаблицаОстаткиЗапасы, ТаблицаОстаткиСерииНоменклатуры);
	
КонецФункции

Функция ТекстЗапросаОрдерныеСкладыДокументыПоступления()
	
	ТекстЗапроса =
	"ВЫБРАТЬ РАЗРЕШЕННЫЕ РАЗЛИЧНЫЕ
	|	КомплектацияЗапасов.СтруктурнаяЕдиница КАК СтруктурнаяЕдиница,
	|	КомплектацияЗапасов.Ссылка КАК Ссылка
	|ПОМЕСТИТЬ ВтИтог
	|ИЗ
	|	Документ.КомплектацияЗапасов КАК КомплектацияЗапасов
	|ГДЕ
	|	КомплектацияЗапасов.Ссылка В(&Ссылка)
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ПеремещениеЗапасов.СтруктурнаяЕдиницаПолучатель,
	|	ПеремещениеЗапасов.Ссылка
	|ИЗ
	|	Документ.ПеремещениеЗапасов КАК ПеремещениеЗапасов
	|ГДЕ
	|	ПеремещениеЗапасов.Ссылка В(&Ссылка)
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ПриходнаяНакладнаяЗапасы.СтруктурнаяЕдиница,
	|	ПриходнаяНакладнаяЗапасы.Ссылка
	|ИЗ
	|	Документ.ПриходнаяНакладная.Запасы КАК ПриходнаяНакладнаяЗапасы
	|ГДЕ
	|	ПриходнаяНакладнаяЗапасы.Ссылка В(&Ссылка)
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	АвансовыйОтчетЗапасы.СтруктурнаяЕдиница,
	|	АвансовыйОтчетЗапасы.Ссылка
	|ИЗ
	|	Документ.АвансовыйОтчет.Запасы КАК АвансовыйОтчетЗапасы
	|ГДЕ
	|	АвансовыйОтчетЗапасы.Ссылка В(&Ссылка)
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	КорректировкаПоступленияЗапасы.СтруктурнаяЕдиница,
	|	КорректировкаПоступленияЗапасы.Ссылка
	|ИЗ
	|	Документ.КорректировкаПоступления.Запасы КАК КорректировкаПоступленияЗапасы
	|ГДЕ
	|	КорректировкаПоступленияЗапасы.Ссылка В(&Ссылка)
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	СборкаЗапасовПродукция.СтруктурнаяЕдиница,
	|	СборкаЗапасовПродукция.Ссылка
	|ИЗ
	|	Документ.СборкаЗапасов.Продукция КАК СборкаЗапасовПродукция
	|ГДЕ
	|	СборкаЗапасовПродукция.Ссылка В(&Ссылка)
	|	И СборкаЗапасовПродукция.Ссылка.ВидОперации = ЗНАЧЕНИЕ(Перечисление.ВидыОперацийСборкаЗапасов.Сборка)
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	СборкаЗапасовЗапасы.СтруктурнаяЕдиница,
	|	СборкаЗапасовЗапасы.Ссылка
	|ИЗ
	|	Документ.СборкаЗапасов.Запасы КАК СборкаЗапасовЗапасы
	|ГДЕ
	|	СборкаЗапасовЗапасы.Ссылка В(&Ссылка)
	|	И СборкаЗапасовЗапасы.Ссылка.ВидОперации = ЗНАЧЕНИЕ(Перечисление.ВидыОперацийСборкаЗапасов.Разборка)
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ОтчетПереработчика.СтруктурнаяЕдиница,
	|	ОтчетПереработчика.Ссылка
	|ИЗ
	|	Документ.ОтчетПереработчика КАК ОтчетПереработчика
	|ГДЕ
	|	ОтчетПереработчика.Ссылка В(&Ссылка)
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ПересортицаЗапасов.СтруктурнаяЕдиница,
	|	ПересортицаЗапасов.Ссылка
	|ИЗ
	|	Документ.ПересортицаЗапасов КАК ПересортицаЗапасов
	|ГДЕ
	|	ПересортицаЗапасов.Ссылка В(&Ссылка)
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ОприходованиеЗапасов.СтруктурнаяЕдиница,
	|	ОприходованиеЗапасов.Ссылка
	|ИЗ
	|	Документ.ОприходованиеЗапасов КАК ОприходованиеЗапасов
	|ГДЕ
	|	ОприходованиеЗапасов.Ссылка В(&Ссылка)
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ПередачаТоваровМеждуОрганизациямиЗапасы.СтруктурнаяЕдиница,
	|	ПередачаТоваровМеждуОрганизациямиЗапасы.Ссылка
	|ИЗ
	|	Документ.ПередачаТоваровМеждуОрганизациями.Запасы КАК ПередачаТоваровМеждуОрганизациямиЗапасы
	|ГДЕ
	|	ПередачаТоваровМеждуОрганизациямиЗапасы.Ссылка В(&Ссылка)
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ВтИтог.Ссылка КАК Документ,
	|	ВтИтог.СтруктурнаяЕдиница КАК Склад
	|ИЗ
	|	ВтИтог КАК ВтИтог
	|ГДЕ
	|	ВтИтог.СтруктурнаяЕдиница.ОрдерныйСклад
	|	И ВтИтог.СтруктурнаяЕдиница.ИспользоватьОрдернуюСхемуПриПоступлении
	|	И ВтИтог.СтруктурнаяЕдиница.ВидУчетаОрдерныхСкладов = ЗНАЧЕНИЕ(Перечисление.ВидыУчетаОрдерныхСкладов.УчетОстатковПоПрочимДокументам)";

	Возврат ТекстЗапроса;
	
КонецФункции

Функция ТекстЗапросаОрдерныеСкладыДокументыОтгрузки()
	
	ТекстЗапроса =
	"ВЫБРАТЬ РАЗРЕШЕННЫЕ РАЗЛИЧНЫЕ
	|	КомплектацияЗапасов.СтруктурнаяЕдиница КАК СтруктурнаяЕдиница,
	|	КомплектацияЗапасов.Ссылка КАК Ссылка
	|ПОМЕСТИТЬ ВтИтог
	|ИЗ
	|	Документ.КомплектацияЗапасов КАК КомплектацияЗапасов
	|ГДЕ
	|	КомплектацияЗапасов.Ссылка В(&Ссылка)
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ПеремещениеЗапасов.СтруктурнаяЕдиница,
	|	ПеремещениеЗапасов.Ссылка
	|ИЗ
	|	Документ.ПеремещениеЗапасов КАК ПеремещениеЗапасов
	|ГДЕ
	|	ПеремещениеЗапасов.Ссылка В(&Ссылка)
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	РасходнаяНакладнаяЗапасы.СтруктурнаяЕдиница,
	|	РасходнаяНакладнаяЗапасы.Ссылка
	|ИЗ
	|	Документ.РасходнаяНакладная.Запасы КАК РасходнаяНакладнаяЗапасы
	|ГДЕ
	|	РасходнаяНакладнаяЗапасы.Ссылка В(&Ссылка)
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ПринятиеКУчетуВА.СтруктурнаяЕдиница,
	|	ПринятиеКУчетуВА.Ссылка
	|ИЗ
	|	Документ.ПринятиеКУчетуВА КАК ПринятиеКУчетуВА
	|ГДЕ
	|	ПринятиеКУчетуВА.Ссылка В(&Ссылка)
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	КорректировкаРеализацииЗапасы.СтруктурнаяЕдиница,
	|	КорректировкаРеализацииЗапасы.Ссылка
	|ИЗ
	|	Документ.КорректировкаРеализации.Запасы КАК КорректировкаРеализацииЗапасы
	|ГДЕ
	|	КорректировкаРеализацииЗапасы.Ссылка В(&Ссылка)
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	СборкаЗапасовПродукция.СтруктурнаяЕдиница,
	|	СборкаЗапасовПродукция.Ссылка
	|ИЗ
	|	Документ.СборкаЗапасов.Продукция КАК СборкаЗапасовПродукция
	|ГДЕ
	|	СборкаЗапасовПродукция.Ссылка В(&Ссылка)
	|	И СборкаЗапасовПродукция.Ссылка.ВидОперации = ЗНАЧЕНИЕ(Перечисление.ВидыОперацийСборкаЗапасов.Разборка)
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	СборкаЗапасовЗапасы.СтруктурнаяЕдиница,
	|	СборкаЗапасовЗапасы.Ссылка
	|ИЗ
	|	Документ.СборкаЗапасов.Запасы КАК СборкаЗапасовЗапасы
	|ГДЕ
	|	СборкаЗапасовЗапасы.Ссылка В(&Ссылка)
	|	И СборкаЗапасовЗапасы.Ссылка.ВидОперации = ЗНАЧЕНИЕ(Перечисление.ВидыОперацийСборкаЗапасов.Сборка)
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ОтчетОПереработке.СтруктурнаяЕдиница,
	|	ОтчетОПереработке.Ссылка
	|ИЗ
	|	Документ.ОтчетОПереработке КАК ОтчетОПереработке
	|ГДЕ
	|	ОтчетОПереработке.Ссылка В(&Ссылка)
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ПересортицаЗапасов.СтруктурнаяЕдиница,
	|	ПересортицаЗапасов.Ссылка
	|ИЗ
	|	Документ.ПересортицаЗапасов КАК ПересортицаЗапасов
	|ГДЕ
	|	ПересортицаЗапасов.Ссылка В(&Ссылка)
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	СписаниеЗапасов.СтруктурнаяЕдиница,
	|	СписаниеЗапасов.Ссылка
	|ИЗ
	|	Документ.СписаниеЗапасов КАК СписаниеЗапасов
	|ГДЕ
	|	СписаниеЗапасов.Ссылка В(&Ссылка)
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ПередачаТоваровМеждуОрганизациямиЗапасы.СтруктурнаяЕдиница,
	|	ПередачаТоваровМеждуОрганизациямиЗапасы.Ссылка
	|ИЗ
	|	Документ.ПередачаТоваровМеждуОрганизациями.Запасы КАК ПередачаТоваровМеждуОрганизациямиЗапасы
	|ГДЕ
	|	ПередачаТоваровМеждуОрганизациямиЗапасы.Ссылка В(&Ссылка)
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ВтИтог.Ссылка КАК Документ,
	|	ВтИтог.СтруктурнаяЕдиница КАК Склад
	|ИЗ
	|	ВтИтог КАК ВтИтог
	|ГДЕ
	|	ВтИтог.СтруктурнаяЕдиница.ОрдерныйСклад
	|	И ВтИтог.СтруктурнаяЕдиница.ИспользоватьОрдернуюСхемуПриПоступлении
	|	И ВтИтог.СтруктурнаяЕдиница.ВидУчетаОрдерныхСкладов = ЗНАЧЕНИЕ(Перечисление.ВидыУчетаОрдерныхСкладов.УчетОстатковПоПрочимДокументам)";

	Возврат ТекстЗапроса;
	
КонецФункции

Функция МассивТиповОбрабатываемыхДокументов()
	
	МассивТипов = Новый Массив;
	МассивТипов.Добавить(Тип("ДокументСсылка.ПриходнаяНакладная"));
	МассивТипов.Добавить(Тип("ДокументСсылка.РасходнаяНакладная"));
	МассивТипов.Добавить(Тип("ДокументСсылка.АктОРасхождениях"));
	МассивТипов.Добавить(Тип("ДокументСсылка.АктОРасхожденияхПолученный"));
	МассивТипов.Добавить(Тип("ДокументСсылка.КорректировкаПоступления"));
	МассивТипов.Добавить(Тип("ДокументСсылка.КорректировкаРеализации"));
	МассивТипов.Добавить(Тип("ДокументСсылка.АвансовыйОтчет"));
	МассивТипов.Добавить(Тип("ДокументСсылка.ЗаказПокупателя"));
	
	
	Возврат МассивТипов;
	
КонецФункции

#КонецОбласти
