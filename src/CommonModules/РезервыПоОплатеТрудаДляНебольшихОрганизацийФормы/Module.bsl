
#Область СлужебныйПрограммныйИнтерфейс

Процедура НачисленияВДанныеМенеджераРасчета(ТаблицаИсточник, МенеджерРасчета, Организация, Отбор = Неопределено, ПозицииВставки = Неопределено, КоличествоПоказателей = 0) Экспорт

	ИдентификаторыСтрокСотрудников = Новый Соответствие;
	ФизическоеЛицо = Неопределено;
	
	Если Отбор = Неопределено Тогда
		Сотрудники = ОбщегоНазначения.ВыгрузитьКолонку(ТаблицаИсточник, "Сотрудник");
		ФизическиеЛицаСотрудников = ОбщегоНазначения.ЗначениеРеквизитаОбъектов(Сотрудники, "ФизическоеЛицо");
	Иначе
		ФизическиеЛицаСотрудников = Отбор.ФизическиеЛицаСотрудников;
	КонецЕсли;
	
	Для Каждого СтрокаФормы Из ТаблицаИсточник Цикл
		
		ФизическоеЛицо = ФизическиеЛицаСотрудников[СтрокаФормы.Сотрудник];
		Если Отбор <> Неопределено Тогда 
			Если ФизическоеЛицо = Неопределено Тогда
				Продолжить;
			КонецЕсли;
			ДобавитьИдентификаторСтрокиСотрудника(ИдентификаторыСтрокСотрудников, СтрокаФормы.Сотрудник, СтрокаФормы.ПолучитьИдентификатор());
		КонецЕсли;
		СтрокаПриемник = МенеджерРасчета.Зарплата.Начисления.Добавить();
		СтрокаПриемник.Показатели = РезервыПоОплатеТрудаДляНебольшихОрганизаций.ТаблицаПоказателей();
		ЗаполнитьЗначенияСвойств(СтрокаПриемник, СтрокаФормы);
		СтрокаПриемник.ФизическоеЛицо = ФизическоеЛицо;
		
		Для Сч = 1 По КоличествоПоказателей Цикл
			СтрокаПоказателя = СтрокаПриемник.Показатели.Добавить();
			СтрокаПоказателя.Показатель = СтрокаФормы["Показатель" + Сч];
			СтрокаПоказателя.Значение   = СтрокаФормы["Значение" + Сч];
		КонецЦикла;
		
	КонецЦикла;
	
	Если Отбор = Неопределено Тогда
		ТаблицаИсточник.Очистить();
	КонецЕсли;
	
	Если ПозицииВставки <> Неопределено Тогда
		ПозицииВставки.Вставить("Начисления", ИдентификаторыСтрокСотрудников);
	КонецЕсли;
		
КонецПроцедуры

Процедура ВзносыВДанныеМенеджераРасчета(ТаблицаИсточник, МенеджерРасчета, Отбор = Неопределено, ПозицииВставки = Неопределено) Экспорт

	СтрокиРасчета = Новый Массив;
	ИдентификаторыСтрокФизическихЛиц = Новый Соответствие;
		
	Для Каждого СтрокаФормы Из ТаблицаИсточник Цикл
		
		Если Отбор <> Неопределено Тогда
			ФизическоеЛицо = Отбор.ФизическиеЛицаОтбор[СтрокаФормы.ФизическоеЛицо];
			Если ФизическоеЛицо = Неопределено Тогда
				Продолжить;
			КонецЕсли;
			
			ДобавитьИдентификаторСтрокиСотрудника(ИдентификаторыСтрокФизическихЛиц, СтрокаФормы.ФизическоеЛицо, СтрокаФормы.ПолучитьИдентификатор());
			СтрокиРасчета.Добавить(СтрокаФормы);
		КонецЕсли;
		ЗаполнитьЗначенияСвойств(МенеджерРасчета.Зарплата.Взносы.Добавить(), СтрокаФормы);
	КонецЦикла;
	
	Если Отбор = Неопределено Тогда
		ТаблицаИсточник.Очистить();
	КонецЕсли;
	
	Если ПозицииВставки <> Неопределено Тогда
		ПозицииВставки.Вставить("Взносы", ИдентификаторыСтрокФизическихЛиц);
	КонецЕсли;
	
КонецПроцедуры

Процедура РасчетРезервовВДанныеМенеджераРасчета(ТаблицаИсточник, МенеджерРасчета, Организация, Отбор = Неопределено, ПозицииВставки = Неопределено) Экспорт
	
	СтрокиРасчета = Новый Массив;
	
	ИдентификаторыСтрокСотрудников = Новый Соответствие;
	ФизическоеЛицо = Неопределено;
	
	Если Отбор = Неопределено Тогда
		Сотрудники = ОбщегоНазначения.ВыгрузитьКолонку(ТаблицаИсточник, "Сотрудник");
		ФизическиеЛицаСотрудников = ОбщегоНазначения.ЗначениеРеквизитаОбъектов(Сотрудники, "ФизическоеЛицо");
	Иначе
		ФизическиеЛицаСотрудников = Отбор.ФизическиеЛицаСотрудников;
	КонецЕсли;
	
	Для Каждого СтрокаФормы Из ТаблицаИсточник Цикл
		
		ФизическоеЛицо = ФизическиеЛицаСотрудников[СтрокаФормы.Сотрудник];
		Если Отбор <> Неопределено Тогда 
			Если ФизическоеЛицо = Неопределено Тогда
				Продолжить;
			КонецЕсли;
			ДобавитьИдентификаторСтрокиСотрудника(ИдентификаторыСтрокСотрудников, СтрокаФормы.Сотрудник, СтрокаФормы.ПолучитьИдентификатор());
			СтрокиРасчета.Добавить(СтрокаФормы);
		КонецЕсли;
		ЗаполнитьЗначенияСвойств(МенеджерРасчета.Зарплата.РасчетРезервов.Добавить(), СтрокаФормы);
		
	КонецЦикла;
	
	Если Отбор = Неопределено Тогда
		ТаблицаИсточник.Очистить();
	КонецЕсли;
	
	Если ПозицииВставки <> Неопределено Тогда
		ПозицииВставки.Вставить("РасчетРезервов", ИдентификаторыСтрокСотрудников);
	КонецЕсли;
	
КонецПроцедуры

Процедура ОценочныеОбязательстваПоСотрудникамВДанныеМенеджераРасчета(ТаблицаИсточник, МенеджерРасчета, Организация, Отбор = Неопределено, ПозицииВставки = Неопределено) Экспорт
	
	СтрокиРасчета = Новый Массив;
	
	ИдентификаторыСтрокСотрудников = Новый Соответствие;
	ФизическоеЛицо = Неопределено;
	
	Если Отбор = Неопределено Тогда
		Сотрудники = ОбщегоНазначения.ВыгрузитьКолонку(ТаблицаИсточник, "Сотрудник");
		ФизическиеЛицаСотрудников = ОбщегоНазначения.ЗначениеРеквизитаОбъектов(Сотрудники, "ФизическоеЛицо");
	Иначе
		ФизическиеЛицаСотрудников = Отбор.ФизическиеЛицаСотрудников;
	КонецЕсли;
	
	Для Каждого СтрокаФормы Из ТаблицаИсточник Цикл
		
		ФизическоеЛицо = ФизическиеЛицаСотрудников[СтрокаФормы.Сотрудник];
		Если Отбор <> Неопределено Тогда 
			Если ФизическоеЛицо = Неопределено Тогда
				Продолжить;
			КонецЕсли;
			ДобавитьИдентификаторСтрокиСотрудника(ИдентификаторыСтрокСотрудников, СтрокаФормы.Сотрудник, СтрокаФормы.ПолучитьИдентификатор());
			СтрокиРасчета.Добавить(СтрокаФормы);
		КонецЕсли;
		ЗаполнитьЗначенияСвойств(МенеджерРасчета.Зарплата.ОценочныеОбязательстваПоСотрудникам.Добавить(), СтрокаФормы);
		
	КонецЦикла;
	
	Если Отбор = Неопределено Тогда
		ТаблицаИсточник.Очистить();
	КонецЕсли;
	
	Если ПозицииВставки <> Неопределено Тогда
		ПозицииВставки.Вставить("ОценочныеОбязательстваПоСотрудникам", ИдентификаторыСтрокСотрудников);
	КонецЕсли;
		
КонецПроцедуры

Процедура ДобавитьИдентификаторСтрокиСотрудника(ИдентификаторыСтрокСотрудников, Сотрудник, Идентификатор = Неопределено) Экспорт
	
	Если ИдентификаторыСтрокСотрудников = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	ПозицииСотрудника = ИдентификаторыСтрокСотрудников.Получить(Сотрудник);
	Если ПозицииСотрудника = Неопределено Тогда
		ПозицииСотрудника = Новый Массив;
		ИдентификаторыСтрокСотрудников.Вставить(Сотрудник, ПозицииСотрудника);
	КонецЕсли;

	Если Идентификатор <> Неопределено Тогда
		ПозицииСотрудника.Добавить(Идентификатор);
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти
