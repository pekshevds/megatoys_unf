#Область СлужебныйПрограммныйИнтерфейс

// Возвращает производственный календарь организации по умолчанию.
// Если производственный календарь организации не назначался - возвращается
// производственный календарь РФ.
//
// Параметры:
//	Организация	- СправочникСсылка.Организации
//
// ВозвращаемоеЗначение:
//	СправочникСсылка.ПроизводственныеКалендари
//
Функция ПроизводственныйКалендарьОрганизации(Организация) Экспорт
	
	УстановитьПривилегированныйРежим(Истина);
	
	ПроизводственныйКалендарь = Неопределено;
	
	Календарь = КалендарьОрганизации(Организация);
	Если ЗначениеЗаполнено(Календарь) Тогда
		
		Если ТипЗнч(Календарь) = Тип("СправочникСсылка.ПроизводственныеКалендари") Тогда
			ПроизводственныйКалендарь = Календарь;
		Иначе
			ПроизводственныйКалендарь = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(Календарь, "ПроизводственныйКалендарь");
		КонецЕсли;
		
	КонецЕсли;
	
	Если Не ЗначениеЗаполнено(ПроизводственныйКалендарь) Тогда
		ПроизводственныйКалендарь = КалендарныеГрафики.ОсновнойПроизводственныйКалендарь();
	КонецЕсли;
	
	УстановитьПривилегированныйРежим(Ложь);
	
	Возврат ПроизводственныйКалендарь;
	
КонецФункции

Функция КалендарьОрганизации(Организация) Экспорт
	
	УстановитьПривилегированныйРежим(Истина);
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("Организация", Организация);
	
	Запрос.Текст =
		"ВЫБРАТЬ
		|	Календари.Ссылка КАК Календарь
		|ИЗ
		|	Справочник.Календари КАК Календари
		|ГДЕ
		|	Календари.ВладелецГрафика = &Организация";
	
	Выборка = Запрос.Выполнить().Выбрать();
	Если Выборка.Следующий() И ЗначениеЗаполнено(Выборка.Календарь) Тогда
		Календарь = Выборка.Календарь;
	Иначе
		Календарь = КалендарныеГрафики.ОсновнойПроизводственныйКалендарь();
	КонецЕсли;
	
	УстановитьПривилегированныйРежим(Ложь);
	
	Возврат Календарь;
	
КонецФункции

Функция ДатыВыплатыОрганизации(Организация, МесяцНачисления) Экспорт
	
	ДатыВыплаты = Новый Структура("Аванс,Зарплата");
	
	Если ЗначениеЗаполнено(Организация) Тогда
		Запись = РегистрыСведений.НастройкиЗарплатаКадры.СоздатьМенеджерЗаписи();
		Запись.Организация = Организация;
		Запись.Прочитать();
		Если Не Запись.Выбран() Тогда
			Запись.Заполнить(Неопределено);
		Иначе
			Если Запись.ДатаВыплатыАвансаНеПозжеЧем = 0 Тогда
				Запись.ДатаВыплатыАвансаНеПозжеЧем = 20;
			КонецЕсли;
			Если Запись.ДатаВыплатыЗарплатыНеПозжеЧем = 0 Тогда
				Запись.ДатаВыплатыЗарплатыНеПозжеЧем = 5;
			КонецЕсли;
		КонецЕсли;
		
		ДатыВыплаты.Аванс = НачалоМесяца(МесяцНачисления)
			+ (Запись.ДатаВыплатыАвансаНеПозжеЧем - 1) * ЗарплатаКадрыКлиентСервер.ДлительностьСутокВСекундах();
		Если Запись.ВыплачиватьЗарплатуВПоследнийДеньМесяца Тогда
			ДатыВыплаты.Зарплата = НачалоДня(КонецМесяца(МесяцНачисления));
		Иначе
			ДатыВыплаты.Зарплата = КонецМесяца(МесяцНачисления) + 1
				+ (Запись.ДатаВыплатыЗарплатыНеПозжеЧем - 1) * ЗарплатаКадрыКлиентСервер.ДлительностьСутокВСекундах();
		КонецЕсли;
	Иначе
		ДатыВыплаты.Аванс = НачалоМесяца(МесяцНачисления) + 19 * ЗарплатаКадрыКлиентСервер.ДлительностьСутокВСекундах();
		ДатыВыплаты.Зарплата = НачалоДня(КонецМесяца(МесяцНачисления));
	КонецЕсли;
	
	Возврат ДатыВыплаты;
	
КонецФункции

#КонецОбласти
