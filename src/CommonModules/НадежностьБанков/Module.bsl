#Область СлужебныеПроцедурыИФункции

Функция СервисИспользуется() Экспорт
	
	Используется = ИнтернетПоддержкаПользователей.УслугаПодключена(ИдентификаторУслугиМониторингБанков())
		И ПравоДоступа("Чтение", Метаданные.РегистрыСведений.СобытияНадежностьБанков);
	
	Возврат Используется;
	
КонецФункции

Функция ИнформацияОКритичныхСобытиях(МассивБИК) Экспорт
	
	Результат = НоваяИнформацияОСобытиях();
	
	Результат.Используется = СервисИспользуется();
	Если НЕ Результат.Используется Тогда
		Возврат Результат;
	КонецЕсли;
	
	Если МассивБИК.Количество() = 0 Тогда
		Возврат Результат;
	КонецЕсли;
	
	Возврат Результат; // Данный функционал пока не используется
	
	ОбновитьСобытияВФоне(Результат);
	
	РезультатЗапроса = РезультатЗапросаПоследниеСобытия(МассивБИК, Ложь);
	
	Если НЕ РезультатЗапроса.Пустой() Тогда
		Выборка = РезультатЗапроса.Выбрать();
		Пока Выборка.Следующий() Цикл
			Событие = НовоеСобытие();
			ЗаполнитьЗначенияСвойств(Событие, Выборка);
			Результат.События.Вставить(Выборка.БИК, Событие);
		КонецЦикла;
	КонецЕсли;
	
	Возврат Результат;
	
КонецФункции

Функция НовоеСобытие() Экспорт

	Результат = Новый Структура;
	Результат.Вставить("Событие");
	Результат.Вставить("ТекстСобытия");
	Результат.Вставить("ДатаСобытия");
	Результат.Вставить("ДатаПоявленияСобытия");
	Результат.Вставить("Идентификатор");
	Результат.Вставить("Критичное");
	Результат.Вставить("ИсточникИнформации");
	Результат.Вставить("ТекстПояснения");
	Результат.Вставить("Показано");
	
	ДополнительнаяИнформация = Новый Структура;
	ДополнительнаяИнформация.Вставить("ЕстьОстатки", Истина);
	ДополнительнаяИнформация.Вставить("ЕстьСчетаЮридическихЛиц", Истина);
	ДополнительнаяИнформация.Вставить("ЕстьСчетаФизическихЛиц", Истина);
	Результат.Вставить("ДополнительнаяИнформация", ДополнительнаяИнформация);
	
	Возврат Результат;

КонецФункции

Процедура ОбновитьСобытияВФоне(Результат)
	
	ПолучитьПоследнийИдентификаторСобытий(Результат);
	
	Если ДанныеСобытийАктуальны(Результат) Тогда
		Возврат;
	КонецЕсли;
	
	Если ОбновлениеСобытийВыполняется(Результат) Тогда
		Возврат;
	КонецЕсли;
	
	ПолучитьНовыеСобытияВФоне(Результат);

КонецПроцедуры

Функция РезультатЗапросаПоследниеСобытия(БИКБанков, ВключатьНекритичные)
	
	Запрос = Новый Запрос;
	МассивБИК = Новый Массив;
	Если ТипЗнч(БИКБанков) = Тип("Массив") Тогда
		ОбщегоНазначенияКлиентСервер.ДополнитьМассив(МассивБИК, БИКБанков, Истина);
	Иначе
		МассивБИК.Добавить(БИКБанков);
	КонецЕсли;
	Запрос.УстановитьПараметр("БИКБанков", МассивБИК);
	Запрос.УстановитьПараметр("ДеятельностьВозобновлена", Перечисления.СобытияНадежностьБанков.ДеятельностьВозобновлена);
	
	КритичныеСобытия = Новый Массив;
	КритичныеСобытия.Добавить(Перечисления.СобытияНадежностьБанков.ДеятельностьПриостановлена);
	КритичныеСобытия.Добавить(Перечисления.СобытияНадежностьБанков.ЛицензияОтозвана);
	Запрос.УстановитьПараметр("КритичныеСобытия", КритичныеСобытия);
	
	НекритичныеСобытия = Новый Массив;
	НекритичныеСобытия.Добавить(Перечисления.СобытияНадежностьБанков.БанкПривлеченКОтветственности);
	НекритичныеСобытия.Добавить(Перечисления.СобытияНадежностьБанков.НормативыНеСоответствуютТребуемым);
	НекритичныеСобытия.Добавить(Перечисления.СобытияНадежностьБанков.КапиталНижеТребуемого);
	НекритичныеСобытия.Добавить(Перечисления.СобытияНадежностьБанков.Информация);
	Запрос.УстановитьПараметр("НекритичныеСобытия", НекритичныеСобытия);
	Запрос.УстановитьПараметр("ВключатьНекритичные", ВключатьНекритичные);
	
	Запрос.Текст =
	"ВЫБРАТЬ
	|	КодыНомераБанков.Код КАК Код,
	|	КодыНомераБанков.РегистрационныйНомер КАК РегистрационныйНомер
	|ПОМЕСТИТЬ КодыНомераБанков
	|ИЗ
	|	РегистрСведений.КодыНомераБанков КАК КодыНомераБанков
	|ГДЕ
	|	КодыНомераБанков.Код В(&БИКБанков)
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	РегистрационныйНомер
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	КодыНомераБанков.Код КАК Код,
	|	МАКСИМУМ(СобытияНадежностьБанков.Идентификатор) КАК ИдентификаторКритичноеСобытие,
	|	0 КАК ИдентификаторДеятельностьВозобновлена,
	|	0 КАК ИдентификаторНекритичноеСобытие
	|ПОМЕСТИТЬ ПоследниеСобытияДетально
	|ИЗ
	|	КодыНомераБанков КАК КодыНомераБанков
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.СобытияНадежностьБанков КАК СобытияНадежностьБанков
	|		ПО КодыНомераБанков.РегистрационныйНомер = СобытияНадежностьБанков.РегистрационныйНомер
	|ГДЕ
	|	СобытияНадежностьБанков.Событие В(&КритичныеСобытия)
	|	И НЕ СобытияНадежностьБанков.СобытиеУдалено
	|
	|СГРУППИРОВАТЬ ПО
	|	КодыНомераБанков.Код
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	КодыНомераБанков.Код,
	|	0,
	|	МАКСИМУМ(СобытияНадежностьБанков.Идентификатор),
	|	0
	|ИЗ
	|	КодыНомераБанков КАК КодыНомераБанков
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.СобытияНадежностьБанков КАК СобытияНадежностьБанков
	|		ПО КодыНомераБанков.РегистрационныйНомер = СобытияНадежностьБанков.РегистрационныйНомер
	|ГДЕ
	|	СобытияНадежностьБанков.Событие = &ДеятельностьВозобновлена
	|	И НЕ СобытияНадежностьБанков.СобытиеУдалено
	|
	|СГРУППИРОВАТЬ ПО
	|	КодыНомераБанков.Код
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	КодыНомераБанков.Код,
	|	0,
	|	0,
	|	МАКСИМУМ(СобытияНадежностьБанков.Идентификатор)
	|ИЗ
	|	КодыНомераБанков КАК КодыНомераБанков
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.СобытияНадежностьБанков КАК СобытияНадежностьБанков
	|		ПО (&ВключатьНекритичные)
	|			И КодыНомераБанков.РегистрационныйНомер = СобытияНадежностьБанков.РегистрационныйНомер
	|ГДЕ
	|	&ВключатьНекритичные
	|	И СобытияНадежностьБанков.Событие В(&НекритичныеСобытия)
	|	И НЕ СобытияНадежностьБанков.СобытиеУдалено
	|
	|СГРУППИРОВАТЬ ПО
	|	КодыНомераБанков.Код
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ПоследниеСобытияДетально.Код КАК Код,
	|	МАКСИМУМ(ПоследниеСобытияДетально.ИдентификаторКритичноеСобытие) КАК ИдентификаторКритичноеСобытие,
	|	МАКСИМУМ(ПоследниеСобытияДетально.ИдентификаторДеятельностьВозобновлена) КАК ИдентификаторДеятельностьВозобновлена,
	|	МАКСИМУМ(ПоследниеСобытияДетально.ИдентификаторНекритичноеСобытие) КАК ИдентификаторНекритичноеСобытие
	|ПОМЕСТИТЬ ПоследниеСобытия
	|ИЗ
	|	ПоследниеСобытияДетально КАК ПоследниеСобытияДетально
	|
	|СГРУППИРОВАТЬ ПО
	|	ПоследниеСобытияДетально.Код
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ПоследниеСобытия.Код КАК БИК,
	|	ВЫБОР
	|		КОГДА ПоследниеСобытия.ИдентификаторКритичноеСобытие > ПоследниеСобытия.ИдентификаторДеятельностьВозобновлена
	|			ТОГДА ПоследниеСобытия.ИдентификаторКритичноеСобытие
	|		ИНАЧЕ ПоследниеСобытия.ИдентификаторНекритичноеСобытие
	|	КОНЕЦ КАК Идентификатор,
	|	ПоследниеСобытия.ИдентификаторКритичноеСобытие > ПоследниеСобытия.ИдентификаторДеятельностьВозобновлена КАК Критичное
	|ПОМЕСТИТЬ НужныеСобытия
	|ИЗ
	|	ПоследниеСобытия КАК ПоследниеСобытия
	|ГДЕ
	|	ВЫБОР
	|			КОГДА ПоследниеСобытия.ИдентификаторКритичноеСобытие > ПоследниеСобытия.ИдентификаторДеятельностьВозобновлена
	|				ТОГДА ПоследниеСобытия.ИдентификаторКритичноеСобытие
	|			ИНАЧЕ ПоследниеСобытия.ИдентификаторНекритичноеСобытие
	|		КОНЕЦ > 0
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Идентификатор
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	НужныеСобытия.БИК КАК БИК,
	|	НужныеСобытия.Идентификатор КАК Идентификатор,
	|	СобытияНадежностьБанков.Событие КАК Событие,
	|	СобытияНадежностьБанков.ТекстСобытия КАК ТекстСобытия,
	|	СобытияНадежностьБанков.ДатаСобытия КАК ДатаСобытия,
	|	СобытияНадежностьБанков.ДатаПоявленияСобытия КАК ДатаПоявленияСобытия,
	|	СобытияНадежностьБанков.ИсточникИнформации КАК ИсточникИнформации,
	|	НужныеСобытия.Критичное КАК Критичное
	|ИЗ
	|	НужныеСобытия КАК НужныеСобытия
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.СобытияНадежностьБанков КАК СобытияНадежностьБанков
	|		ПО НужныеСобытия.Идентификатор = СобытияНадежностьБанков.Идентификатор";
	РезультатЗапроса = Запрос.Выполнить();
	
	Возврат РезультатЗапроса;

КонецФункции

Процедура ПолучитьНовыеСобытияВФоне(Результат)
	
	ИдентификаторФормы = Новый УникальныйИдентификатор;
	ПараметрыВыполнения = ДлительныеОперации.ПараметрыВыполненияВФоне(ИдентификаторФормы);
	ЗаполнитьЗначенияСвойств(ПараметрыВыполнения, КлючНаименованиеЗаданияНовыеСобытия());
	ПараметрыВыполнения.ЗапуститьВФоне = Истина;
	ПараметрыВыполнения.ОжидатьЗавершение = 0;
	ПараметрыПроцедуры = Новый Структура;
	ПараметрыПроцедуры.Вставить("ПоследнийИдентификатор", Результат.ПоследнийИдентификатор);
	
	ПараметрыЗадания = ДлительныеОперации.ВыполнитьВФоне("НадежностьБанков.ПолучитьНовыеСобытияИзСервиса", 
		ПараметрыПроцедуры, ПараметрыВыполнения);
	
КонецПроцедуры

Функция НоваяИнформацияОСобытиях()

	Результат = Новый Структура;
	Результат.Вставить("Используется", Ложь);
	Результат.Вставить("Актуальность", Истина);
	Результат.Вставить("ПараметрыОбработчикаОжидания");
	Результат.Вставить("ПоследнийИдентификатор", 0);
	Результат.Вставить("События", Новый Соответствие); // Ключ - БИК, значение - см. НовоеСобытие.
	
	Возврат Результат;

КонецФункции

Функция ДанныеСобытийАктуальны(Результат)
	
	Отбор = Новый Структура("ОбластьДанныхВспомогательныеДанные", 
		ИнтернетПоддержкаПользователей.ЗначениеРазделителяСеанса());
	ПараметрыОбновления = РегистрыСведений.ПараметрыОбновленияНадежностьБанков.Получить(, Отбор);
	ПоследнееОбновление = ?(ТипЗнч(ПараметрыОбновления.ДатаОбновления) = Тип("Дата") 
		И ПараметрыОбновления.ДатаОбновления < ТекущаяДатаСеанса(), 
		ПараметрыОбновления.ДатаОбновления, 
		'00010101');
	Если НЕ ЗначениеЗаполнено(ПоследнееОбновление) Тогда
		Результат.Актуальность = Ложь;
	Иначе
		Результат.Актуальность = (ТекущаяДатаСеанса() - ПоследнееОбновление) < 15 * 60;
	КонецЕсли;
	
	Возврат Результат.Актуальность;

КонецФункции

Процедура ПолучитьПоследнийИдентификаторСобытий(Результат)

	Запрос = Новый Запрос;
	Запрос.Текст =
	"ВЫБРАТЬ ПЕРВЫЕ 1
	|	СобытияНадежностьБанков.Идентификатор КАК Идентификатор
	|ИЗ
	|	РегистрСведений.СобытияНадежностьБанков КАК СобытияНадежностьБанков
	|
	|УПОРЯДОЧИТЬ ПО
	|	Идентификатор УБЫВ";
	РезультатЗапроса = Запрос.Выполнить();
	
	Если РезультатЗапроса.Пустой() Тогда
		Результат.ПоследнийИдентификатор = 0;
	Иначе
		Выборка = РезультатЗапроса.Выбрать();
		Выборка.Следующий();
		Результат.ПоследнийИдентификатор = Выборка.Идентификатор;
	КонецЕсли;
	
КонецПроцедуры

Функция ОбновлениеСобытийВыполняется(Результат)
	
	Отбор = Новый Структура;
	Отбор.Вставить("Ключ", КлючНаименованиеЗаданияНовыеСобытия().КлючФоновогоЗадания);
	Отбор.Вставить("Состояние", СостояниеФоновогоЗадания.Активно);
	НайденныеЗадания = ФоновыеЗадания.ПолучитьФоновыеЗадания(Отбор);
	
	Возврат НайденныеЗадания.Количество() > 0;

КонецФункции

Функция КлючНаименованиеЗаданияНовыеСобытия()
	
	Результат = Новый Структура;
	Результат.Вставить("КлючФоновогоЗадания", "НадежностьБанковНовыеСобытия");
	Результат.Вставить("НаименованиеФоновогоЗадания", 
		НСтр("ru='Сервис ""Мониторинг банков"": получение новых событий'"));
	Возврат Результат;

КонецФункции

Функция ИдентификаторУслугиМониторингБанков()
	
	Возврат "1c-bank-monitoring";
	
КонецФункции

#КонецОбласти
