
#Область ПрограммныйИнтерфейс

// Функция показывает является ли текущая конфигурация конфигурацией УправлениеНебольшойФирмой
// 
// Возвращаемое значение:
//  Булево - признак является ли текущая конфигурация конфигурацией УправлениеНебольшойФирмой
//
Функция ЭтоУНФ() Экспорт
	
	Возврат НЕ ЭтоРозница();
	
КонецФункции

// Функция показывает является ли текущая конфигурация конфигурацией Розница
// 
// Возвращаемое значение:
//  Булево - признак является ли текущая конфигурация конфигурацией Розница
//
Функция ЭтоРозница() Экспорт
	
	ЭтоРозницаВРежимеСервиса = ЭтоРозницаВРежимеСервиса();
	Если ЭтоРозницаВРежимеСервиса Тогда
		Возврат Истина;
	КонецЕсли;
	
	ИмяТекущегоПриложения = Метаданные.Имя;
	ЭтоРозница = ИмяТекущегоПриложения = ИмяКонфигурацииРозница()
		ИЛИ ИмяТекущегоПриложения = ИмяКонфигурацииРозницаБазовая();
		
	Если НЕ ЭтоРозница Тогда
		ВозможностиПриложенияПереопределяемый.ЭтоОтраслевоеРешениеРозница(ЭтоРозница);
	КонецЕсли;
	
	Возврат ЭтоРозница;
	
КонецФункции

// Возвращает список имен конфигураций семейства Розница / Управление нашей фирмой
//
// Возвращаемое значение:
//  Массив из Строка
Функция ВсеИменаСемействаКонфигураций() Экспорт
	
	Результат = Новый Массив; 
	ВозможностиПриложенияПереопределяемый.ПриОпределенииСпискаИменСемействаКонфигураций(Результат);
	
	Результат.Добавить(ИмяКонфигурацииРозница());
	Результат.Добавить(ИмяКонфигурацииРозницаБазовая());
	Результат.Добавить("УправлениеНебольшойФирмой");
	Результат.Добавить("УправлениеНебольшойФирмойБазовая");
	
	Возврат Результат;
	
КонецФункции

// Включение опций подсистем, которые необходимы для работы в приложении при обновлении на 30
//
Процедура УстановитьФункциональностьПриложения() Экспорт
	
	УстановитьТекущийРежимРаботыУНФ();
	РежимЗапускаУНФ = Константы.ТекущийРежимЗапускаУНФ.Получить();
	
	ЭтоУНФ = ОбщегоНазначенияУНФ.ЭтоУНФ();
	ЭтоНастольноеУНФ = ЭтоУНФ И РежимЗапускаУНФ = Перечисления.РежимыЗапускаУНФ.НастольноеПриложение;
	ЭтоМобильноеУНФ = ЭтоУНФ И РежимЗапускаУНФ = Перечисления.РежимыЗапускаУНФ.МобильноеПриложение;
	ЭтоМобильноеУНФ20 = ЭтоУНФ И РежимЗапускаУНФ = Перечисления.РежимыЗапускаУНФ.МобильноеПриложение20;
	ЭтоРозница = ОбщегоНазначенияУНФ.ЭтоРозница();
	
	// включение функциональности необходимой во всех режимах УНФ
	Константы.ИспользоватьПодсистемуCRM.Установить(ЭтоНастольноеУНФ);
	Константы.ИспользоватьСобытия.Установить(ЭтоНастольноеУНФ);
	Константы.ИспользоватьКалендариСотрудников.Установить(ЭтоНастольноеУНФ);
	Константы.ИспользоватьИсточникиПривлечения.Установить(ЭтоНастольноеУНФ);
	Константы.ИспользоватьЗадачиСотрудников.Установить(ЭтоНастольноеУНФ);
	Константы.ОтображатьСчетаУчета.Установить(ЭтоНастольноеУНФ);
	Константы.ИспользоватьВидеоматериалы.Установить(ЭтоНастольноеУНФ);
	Константы.ИспользоватьЗаданияНаРаботу.Установить(ЭтоНастольноеУНФ);
	Константы.ИспользоватьАнализБизнеса.Установить(ЭтоНастольноеУНФ);
	Константы.ИспользоватьФинансовыеОперации.Установить(ЭтоНастольноеУНФ);
	Константы.ИспользоватьАктыВыполненныхРабот.Установить(ЭтоНастольноеУНФ);
	Константы.ИспользоватьЗагрузкуЭлектроннойПочты.Установить(ЭтоНастольноеУНФ);
	Константы.ИспользоватьОбменСGoogleCalendar.Установить(ЭтоНастольноеУНФ);
	Константы.ИспользоватьАссистентаУправления.Установить(ЭтоНастольноеУНФ);
	Константы.ИспользоватьВозвратИзЭксплуатации.Установить(ЭтоНастольноеУНФ);
	Константы.ИспользоватьПередачуВЭксплуатацию.Установить(ЭтоНастольноеУНФ);
	Константы.ИспользоватьРаспределениеЗатрат.Установить(ЭтоНастольноеУНФ);
	Константы.ИспользоватьРасчетФинансовогоРезультата.Установить(ЭтоНастольноеУНФ);
	Константы.ИспользоватьШаблоныПечатиОфисныхДокументов.Установить(ЭтоНастольноеУНФ);
	
	// включение функциональности необходимой в настольном УНФ и Рознице
	Константы.ИспользоватьПодсистемуДеньги.Установить(ЭтоНастольноеУНФ ИЛИ ЭтоРозница);
	Константы.ИспользоватьПодсистемуЗакупки.Установить(ЭтоНастольноеУНФ ИЛИ ЭтоРозница);
	Константы.ИспользоватьПодсистемуКомпания.Установить(ЭтоНастольноеУНФ ИЛИ ЭтоРозница);
	Константы.ИспользоватьПодсистемуНастройки.Установить(ЭтоНастольноеУНФ ИЛИ ЭтоРозница);
	Константы.ИспользоватьПодсистемуПродажи.Установить(ЭтоНастольноеУНФ ИЛИ ЭтоРозница);
	Константы.ИспользоватьПодсистемуСклад.Установить(ЭтоНастольноеУНФ ИЛИ ЭтоРозница);
	Константы.ИспользоватьБанковскиеСчета.Установить(ЭтоНастольноеУНФ ИЛИ ЭтоРозница);
	Константы.ИспользоватьВидыЦен.Установить(ЭтоНастольноеУНФ ИЛИ ЭтоРозница);
	Константы.ИспользоватьДоговорыКонтрагентов.Установить(ЭтоНастольноеУНФ ИЛИ ЭтоРозница);
	Константы.ИспользоватьКалендарьПодготовкиОтчетности.Установить(ЭтоНастольноеУНФ ИЛИ ЭтоРозница);
	Константы.ИспользоватьПрисоединенныеФайлы.Установить(ЭтоНастольноеУНФ ИЛИ ЭтоРозница);
	Константы.ОтображатьМакетОписанияИзменений.Установить(ЭтоНастольноеУНФ ИЛИ ЭтоРозница);
	Константы.ОтображатьПереходКПанелиОтчетовОсновнойРаздел.Установить(ЭтоНастольноеУНФ ИЛИ ЭтоРозница);
	Константы.ОтображатьПереходКСпискуПокупателей.Установить(ЭтоНастольноеУНФ ИЛИ ЭтоРозница);
	Константы.ИспользоватьАналогиНоменклатуры.Установить(ЭтоНастольноеУНФ ИЛИ ЭтоРозница);
	Константы.ИспользоватьБанкИКассу.Установить(ЭтоНастольноеУНФ ИЛИ ЭтоРозница);
	Константы.ИспользоватьУправлениеЗапасами.Установить(ЭтоНастольноеУНФ ИЛИ ЭтоРозница);
	Константы.ИспользоватьФормуИнформационногоЦентра.Установить(ЭтоНастольноеУНФ ИЛИ ЭтоРозница);
	Константы.ОтображатьБыстрыеДействия.Установить(ЭтоНастольноеУНФ ИЛИ ЭтоРозница);
	Константы.ОтображатьДокументыПоБанку.Установить(ЭтоНастольноеУНФ ИЛИ ЭтоРозница);
	Константы.ОтображатьДокументыПоЗакупкам.Установить(ЭтоНастольноеУНФ ИЛИ ЭтоРозница);
	Константы.ОтображатьДокументыПоЗапасам.Установить(ЭтоНастольноеУНФ ИЛИ ЭтоРозница);
	Константы.ОтображатьДокументыПоПродажам.Установить(ЭтоНастольноеУНФ ИЛИ ЭтоРозница);
	Константы.ОтображатьДокументыПоСкладу.Установить(ЭтоНастольноеУНФ ИЛИ ЭтоРозница);
	Константы.ОтображатьПереходКСпискуНоменклатурыВГлавном.Установить(ЭтоНастольноеУНФ ИЛИ ЭтоРозница);
	Константы.ОтображатьПульсБизнеса.Установить(ЭтоНастольноеУНФ ИЛИ ЭтоРозница);
	Константы.ОтображатьТекущиеДела.Установить(ЭтоНастольноеУНФ ИЛИ ЭтоРозница);

	// включение функциональности необходимой в Мобильном УНФ 2.0 
	Константы.ИспользоватьФормуВиджетаНаНачальнойСтранице.Установить(ЭтоМобильноеУНФ20 ИЛИ ЭтоМобильноеУНФ);
	Константы.ОтображатьМусорнуюКорзину.Установить(ЭтоМобильноеУНФ20 ИЛИ ЭтоМобильноеУНФ);
	Константы.ИспользоватьПодсистемуКомпанияМП.Установить(ЭтоМобильноеУНФ20);
	Константы.ИспользоватьПодсистемуПродажиМП.Установить(ЭтоМобильноеУНФ20);
	Константы.ИспользоватьПодсистемуПроизводствоМП.Установить(ЭтоМобильноеУНФ20);
	Константы.ИспользоватьСинхронизациюМП.Установить(ЭтоМобильноеУНФ20);
	
	Константы.ОтображатьКомандуПереходаКМП.Установить(ЭтоНастольноеУНФ ИЛИ ЭтоМобильноеУНФ);
	
КонецПроцедуры

// Выполнение обработчиков первоначального заполнения объектов подсистем
//
Процедура ПриПервомЗапуске() Экспорт
	
	УстановитьТекущийРежимРаботыУНФ();
	
	ПодсистемаCRM.ПриПервомЗапуске();
	ПодсистемаЗакупки.ПриПервомЗапуске();
	ПодсистемаКомпания.ПриПервомЗапуске();
	ПодсистемаМетодическаяПоддержка.ПриПервомЗапуске();
	ПодсистемаМобильныеПриложения.ПриПервомЗапуске();
	ПодсистемаПродажи.ПриПервомЗапуске();
	ПодсистемаСклад.ПриПервомЗапуске();
	ПодсистемаДеньги.ПриПервомЗапуске();
	ПодсистемаНастройки.ПриПервомЗапуске();
	ПодсистемаПерсонал.ПриПервомЗапуске();
	УправлениеКонтактнойИнформациейУНФ.ПриПервомЗапуске();
	ПодсистемаНалоги.ПриПервомЗапуске();
	ИнтеграцияБЗКБУНФ.ПриПервомЗапуске();
	
КонецПроцедуры

// Включение необходимой функциональности и заполнение данных при обновлении с 1С:Розница до 1С:УНФ
//
Процедура ОбновлениеРозницыДоУНФ() Экспорт
	
	УстановитьТекущийРежимРаботыУНФ();
	
	ПодсистемаCRM.ОбновлениеРозницыДоУНФ();
	ПодсистемаЗакупки.ОбновлениеРозницыДоУНФ();
	ПодсистемаКомпания.ОбновлениеРозницыДоУНФ();
	ПодсистемаМетодическаяПоддержка.ОбновлениеРозницыДоУНФ();
	ПодсистемаМобильныеПриложения.ОбновлениеРозницыДоУНФ();
	ПодсистемаНалоги.ОбновлениеРозницыДоУНФ();
	ПодсистемаПродажи.ОбновлениеРозницыДоУНФ();
	ПодсистемаСклад.ОбновлениеРозницыДоУНФ();
	ПодсистемаДеньги.ОбновлениеРозницыДоУНФ();
	ПодсистемаНастройки.ОбновлениеРозницыДоУНФ();
	ПодсистемаПерсонал.ОбновлениеРозницыДоУНФ();
	УправлениеКонтактнойИнформациейУНФ.ОбновлениеРозницыДоУНФ();
	
	Комментарий = НСтр("ru='Вид приложения Розница обновлен до вида приложения УНФ.'");
	ЗаписьЖурналаРегистрации(ИмяСобытияЖР(), УровеньЖурналаРегистрации.Информация,,, Комментарий);
	
КонецПроцедуры

// Обработчик события при подключении услуги "Розница"
//
Процедура ПриПодключенииУслугиРозница() Экспорт
	
	Комментарий = НСтр("ru='Начало обработки ПриПодключенииУслугиРозница'");
	ЗаписьЖурналаРегистрации(ИмяСобытияЖР(), УровеньЖурналаРегистрации.Информация,,, Комментарий);
	
	НачатьТранзакцию();
	Попытка
		
		Константы.РозницаВАвтономномРабочемМесте.Установить(Истина);
		
		ОбновлениеУНФДоРозницы();
		
		ЗафиксироватьТранзакцию();
		
	Исключение
		
		ОтменитьТранзакцию();
		ВызватьИсключение;
		
	КонецПопытки;
	
	Комментарий = НСтр("ru='Конец обработки ПриПодключенииУслугиРозница'");
	ЗаписьЖурналаРегистрации(ИмяСобытияЖР(), УровеньЖурналаРегистрации.Информация,,, Комментарий);
	
КонецПроцедуры

// Обработчик события при отключении услуги "Розница"
//
Процедура ПриОтключенииУслугиРозница() Экспорт
	
	Комментарий = НСтр("ru='Начало обработки ПриОтключенииУслугиРозница'");
	ЗаписьЖурналаРегистрации(ИмяСобытияЖР(), УровеньЖурналаРегистрации.Информация,,, Комментарий);
	
	// В процедурах обновления одного вида до другого используются методы ЭтоРозница()/ЭтоУНФ().
	// Для определения вида приложения анализируется наличие услуги.
	// Метод ПриОтключенииУслугиРозница вызывается в тразакции, т.е. услуга еще присутствует в данных, конфигурация рещит что она Розница.
	// Необходимо выполнить обработчик отключения услуги отложенно, когда услуга будет удалена.
	ЗапланироватьОтложеннуюОбработкуПриОтключенииУслугиРозница();
	
	Комментарий = НСтр("ru='Конец обработки ПриОтключенииУслугиРозница'");
	ЗаписьЖурналаРегистрации(ИмяСобытияЖР(), УровеньЖурналаРегистрации.Информация,,, Комментарий);
	
КонецПроцедуры

// Отложенная обработка события при отключении услуги "Розница"
//
Процедура ПриОтключенииУслугиРозницаОтложенно() Экспорт
	
	Комментарий = НСтр("ru='Начало отложенной обработки ПриОтключенииУслугиРозницаОтложенно'");
	ЗаписьЖурналаРегистрации(ИмяСобытияЖР(), УровеньЖурналаРегистрации.Информация,,, Комментарий);
	
	НачатьТранзакцию();
	Попытка
		
		Константы.РозницаВАвтономномРабочемМесте.Установить(Ложь);
		
		ОбновлениеРозницыДоУНФ();
		ОтправитьСообщениеВидПриложенияОбновлен();
		
		ЗафиксироватьТранзакцию();
		
	Исключение
		
		ОтменитьТранзакцию();
		ВызватьИсключение;
		
	КонецПопытки;
	
	Комментарий = НСтр("ru='Конец отложенной обработки ПриОтключенииУслугиРозницаОтложенно'");
	ЗаписьЖурналаРегистрации(ИмяСобытияЖР(), УровеньЖурналаРегистрации.Информация,,, Комментарий);
	
КонецПроцедуры

// См. ОбщегоНазначенияПереопределяемый.ПриДобавленииПараметровРаботыКлиента
Процедура ПриДобавленииПараметровРаботыКлиента(Параметры) Экспорт
	
	ПараметрЭтоУНФ = ЭтоУНФ();
	Параметры.Вставить("ЭтоУНФ", ПараметрЭтоУНФ);
	
	ПараметрЭтоРозница = ЭтоРозница();
	Параметры.Вставить("ЭтоРозница", ПараметрЭтоРозница);
	
КонецПроцедуры

// См. ОбщегоНазначенияПереопределяемый.ПриДобавленииПараметровРаботыКлиентаПриЗапуске
Процедура ПриДобавленииПараметровРаботыКлиентаПриЗапуске(Параметры) Экспорт
	
	ТребуетсяЗаменитьПредставлениеКонфигурации = ОбщегоНазначения.РазделениеВключено() И ЭтоРозница();
	Параметры.Вставить("ТребуетсяЗаменитьЗаголовокПриложения", ТребуетсяЗаменитьПредставлениеКонфигурации);
	
КонецПроцедуры

// Процедура устанавливает текущий режим работы приложения (мобильное приложение, мобильное приложение 20, настольное приложение)
//
Процедура УстановитьТекущийРежимРаботыУНФ() Экспорт
	
	Если НЕ ОбщегоНазначенияУНФ.ЭтоУНФ() Тогда
		Возврат;
	КонецЕсли;
	
	ТекущийРежимЗапускаУНФ = Константы.ТекущийРежимЗапускаУНФ.Получить();
	
	Если ТекущийРежимЗапускаУНФ <> Перечисления.РежимыЗапускаУНФ.МобильноеПриложение 
		И ТекущийРежимЗапускаУНФ <> Перечисления.РежимыЗапускаУНФ.МобильноеПриложение20 Тогда
			Константы.ТекущийРежимЗапускаУНФ.Установить(Перечисления.РежимыЗапускаУНФ.НастольноеПриложение);
	КонецЕсли;
	
КонецПроцедуры

// Список констант, которые недоступны для включения в приложении
// 
// Возвращаемое значение:
//  Массив из Строка - массив констант, которые не должны включаться в приложении
//
Функция НедоступнаяВПриложенииФункциональность() Экспорт
	
	Если ЭтоРозница() Тогда
		Возврат КонстантыНедоступныеДляВключенияВРознице();
	КонецЕсли;
	
	Если ЭтоУНФ() Тогда
		Возврат КонстантыНедоступныеДляВключенияВУНФ();
	КонецЕсли;
	
	Возврат Новый Массив;
	
КонецФункции

// Список констант, которые недоступны для включения в приложении 1С:Розница
// 
// Возвращаемое значение:
//  Массив из Строка - массив констант, которые не должны включаться в приложении
//
Функция КонстантыНедоступныеДляВключенияВРознице() Экспорт
	
	МассивОпций = Новый Массив;
	
	// раздел CRM
	МассивОпций.Добавить("ИспользоватьАссистентаУправления");
	МассивОпций.Добавить("ИспользоватьСобытия");
	МассивОпций.Добавить("ИспользоватьКалендариСотрудников");
	МассивОпций.Добавить("ИспользоватьВидеоматериалы");
	МассивОпций.Добавить("ИспользоватьЗаданияНаРаботу");
	МассивОпций.Добавить("ИспользоватьЗадачиСотрудников");
	МассивОпций.Добавить("ИспользоватьПодсистемуCRM");
	МассивОпций.Добавить("ИспользоватьИсточникиПривлечения");
	МассивОпций.Добавить("ИспользоватьЗагрузкуЭлектроннойПочты");
	
	// раздел Продажи
	МассивОпций.Добавить("ИспользоватьБиллинг");
	МассивОпций.Добавить("ИспользоватьРемонты");
	МассивОпций.Добавить("ИспользоватьАктыВыполненныхРабот");
	
	// раздел Закупки
	МассивОпций.Добавить("ФункциональнаяОпцияПередачаЗапасовНаОтветХранение");
	МассивОпций.Добавить("ФункциональнаяОпцияПриемЗапасовНаОтветХранение");
	МассивОпций.Добавить("ФункциональнаяОпцияПередачаСырьяВПереработку");
	
	// раздел Склад
	МассивОпций.Добавить("ФункциональнаяОпцияУчетПоЯчейкам");
	
	// раздел Работы
	МассивОпций.Добавить("ФункциональнаяОпцияИспользоватьПодсистемуРаботы");
	
	// раздел Производство
	МассивОпций.Добавить("ФункциональнаяОпцияИспользоватьПодсистемуПроизводство");
	
	// раздел Деньги
	МассивОпций.Добавить("ФункциональнаяУчетВалютныхОпераций");
	МассивОпций.Добавить("ЗачитыватьАвансыДолгиАвтоматически");
	МассивОпций.Добавить("ФункциональнаяОпцияКредитыИЗаймы");
	МассивОпций.Добавить("ФункциональнаяОпцияИспользоватьРезервированиеДенежныхСредств");
	
	// раздел Персонал
	МассивОпций.Добавить("ФункциональнаяОпцияВестиУчетНалогаНаДоходыИВзносов");
	МассивОпций.Добавить("ФункциональнаяОпцияВыполнятьРасчетНДФЛПоПрогрессивнойШкале");
	
	// раздел Налоги
	МассивОпций.Добавить("ФункциональнаяОпцияИспользоватьОтчетность");
	
	// раздел Компания
	МассивОпций.Добавить("ОтображатьСчетаУчета");
	МассивОпций.Добавить("ИспользоватьФинансовыеОперации");
	МассивОпций.Добавить("ИспользоватьАнализБизнеса");
	МассивОпций.Добавить("ФункциональнаяОпцияУчетПоНесколькимНаправлениямДеятельности");
	МассивОпций.Добавить("ФункциональнаяОпцияУчетПоПроектам");
	МассивОпций.Добавить("ФункциональнаяОпцияИспользоватьБюджетирование");
	МассивОпций.Добавить("ФункциональнаяОпцияУчетВнеоборотныхАктивов");
	
	Возврат МассивОпций;
	
КонецФункции

// Список констант, которые отключены по-умолчанию в приложении 1С:Розница
// 
// Возвращаемое значение:
//  Массив из Строка - массив констант, которые отключены по-умолчанию в приложении 1С:Розница
//
Функция КонстантыОтключенныеПоУмолчаниюВРознице() Экспорт
	
	Результат = Новый Массив;
	
	Результат.Добавить("ИспользоватьОбменСGoogleCalendar");
	Результат.Добавить("ИспользоватьВозвратИзЭксплуатации");
	Результат.Добавить("ИспользоватьПередачуВЭксплуатацию");
	Результат.Добавить("ИспользоватьКалендарьПодготовкиОтчетности");
	Результат.Добавить("ИспользоватьРаспределениеЗатрат");
	Результат.Добавить("ИспользоватьРасчетФинансовогоРезультата");
	Результат.Добавить("ИспользоватьШаблоныПечатиОфисныхДокументов");
	
	Возврат Результат;
	
КонецФункции

// Список констант, которые недоступны для включения в приложении 1С:УНФ
// 
// Возвращаемое значение:
//  Массив из Строка - массив констант, которые не должны включаться в приложении
//
Функция КонстантыНедоступныеДляВключенияВУНФ() Экспорт
	
	РежимРаботыУНФ = Константы.ТекущийРежимЗапускаУНФ.Получить();
	МассивОпций = Новый Массив;
	
	Если РежимРаботыУНФ = Перечисления.РежимыЗапускаУНФ.НастольноеПриложение Тогда
		МассивОпций.Добавить("ИспользоватьПодсистемуПродажиМП");
		МассивОпций.Добавить("ИспользоватьПодсистемуКомпанияМП");
		МассивОпций.Добавить("ИспользоватьПодсистемуПроизводствоМП");
	КонецЕсли;
	
	Если РежимРаботыУНФ = Перечисления.РежимыЗапускаУНФ.МобильноеПриложение
		ИЛИ РежимРаботыУНФ = Перечисления.РежимыЗапускаУНФ.МобильноеПриложение20 Тогда
		
		ДополнитьНедоступнымиВМобильномПриложении(МассивОпций);
		
	КонецЕсли;
	
	Возврат МассивОпций;
	
КонецФункции

// Представление конфигурации
// 
// Возвращаемое значение:
//  Строка
//
Функция ПредставлениеКонфигурации() Экспорт
	
	Результат = Метаданные.Синоним;
	
	Если ОбщегоНазначенияУНФ.ЭтоРозница() Тогда
		ПодстрокаПоиска = НСтр("ru = 'Управление нашей фирмой'");
		ПодстрокаЗамены = НСтр("ru = 'Розница'");
		Результат = СтрЗаменить(Результат, ПодстрокаПоиска, ПодстрокаЗамены);
	КонецЕсли;
	
	Возврат Результат;
	
КонецФункции

// Имя конфигурации
// 
// Возвращаемое значение:
//  Строка
//
Функция ИмяКонфигурации() Экспорт
	
	ЭтоРозницаВРежимеСервиса = ЭтоРозницаВРежимеСервиса();
	Если ЭтоРозницаВРежимеСервиса Тогда
		Возврат ИмяКонфигурацииРозница();
	КонецЕсли;
	
	Возврат Метаданные.Имя;
	
КонецФункции

// Макет описание изменений системы
// 
// Возвращаемое значение:
//  ОбъектМетаданныхМакет
//
Функция МакетОписаниеИзмененийСистемы() Экспорт
	
	Результат = Метаданные.ОбщиеМакеты.Найти("ОписаниеИзмененийСистемы");
	
	Если ОбщегоНазначенияУНФ.ЭтоРозница() Тогда
		Результат = Метаданные.ОбщиеМакеты.Найти("ОписаниеИзмененийСистемыРТ");
	КонецЕсли;
	
	Возврат Результат;
	
КонецФункции

// См. ВыгрузкаЗагрузкаДанныхПереопределяемый.ПослеЗагрузкиДанных
//
Процедура ПослеЗагрузкиДанных(Контейнер) Экспорт
	
	Если Не ОбщегоНазначения.РазделениеВключено() Тогда
		Возврат;
	КонецЕсли;
	
	// В режиме сервиса, при загрузке приложения, необходимо привести любой загружаемый вид приложения к базовому (в данном случае это УНФ).
	// Далее, вид приложения будет определяться отдельно, начислением услуги, если это понадобится, либо так и останется - базовым.
	ОбновлениеРозницыДоУНФ();
	
КонецПроцедуры

// См. ОчередьЗаданийПереопределяемый.ПриОпределенииПсевдонимовОбработчиков
//
Процедура ПриОпределенииПсевдонимовОбработчиков(СоответствиеИменПсевдонимам) Экспорт
	
	СоответствиеИменПсевдонимам.Вставить("ВозможностиПриложения.ПриОтключенииУслугиРозницаОтложенно");
	
КонецПроцедуры

#Область ПроверкаВключенияФункциональности

// Обработчик события перед записью констант приложения
//
// Параметры:
//  Источник - КонстантаМенеджерЗначения - изменяемая константа
//  Отказ	 - Булево - если константу нельзя включить в приложении Отказ = Истина
//
Процедура ФункциональностьПриложенияПриИзмененииПередЗаписью(Источник, Отказ) Экспорт
	
	ИмяИсточника = Сред(Источник, СтрДлина("КонстантаМенеджерЗначения.") + 1);
	НедоступнаяФункциональность = НедоступнаяВПриложенииФункциональность();
	
	Если НедоступнаяФункциональность.Найти(ИмяИсточника) <> Неопределено
		И Источник.Значение = Истина Тогда
		ВызватьИсключение НСтр("ru = 'Функциональность недоступна для включения.'");
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

Функция ИмяСобытияЖР()
	
	Возврат НСтр("ru='Возможности приложения'", ОбщегоНазначения.КодОсновногоЯзыка());
	
КонецФункции

Функция ЭтоРозницаВРежимеСервиса()
	
	Если ТарификацияУНФ.РозницаВРежимеСервиса() Тогда
		Возврат Истина;
	КонецЕсли;
	
	Если РозницаВАвтономномРабочемМесте() Тогда
		Возврат Истина;
	КонецЕсли;
	
	Возврат Ложь;
	
КонецФункции

// Розница в автономном рабочем месте
// 
// Возвращаемое значение:
//  Булево
Функция РозницаВАвтономномРабочемМесте()
	
	// ОбщегоНазначения.ЭтоАвтономноеРабочееМесто() вызывает зацикливание,
	// т.к. инициализирует ОбменДаннымиПереопределяемый.ПолучитьПланыОбмена,
	// обращается к ОбменДаннымиУНФ.ПолучитьПланыОбмена, а из него к ОбщегоНазначенияУНФ.ЭтоУНФ.
	Если Не ОбщегоНазначения.ЭтоПодчиненныйУзелРИБ() Тогда
		Возврат Ложь;
	КонецЕсли;
	
	Результат = Константы.РозницаВАвтономномРабочемМесте.Получить();
	Возврат Результат;
	
КонецФункции

Процедура ДополнитьНедоступнымиВМобильномПриложении(МассивОпций)
	
	МассивОпций.Добавить("АвтоматическиНастраиватьРазрешенияВПрофиляхБезопасности");
	МассивОпций.Добавить("АвтоматическиПодключатьФормыРОЧерезМеханизмОнлайнСервисовРО");
	МассивОпций.Добавить("АдресДляВосстановленияПароляУчетнойЗаписи");
	МассивОпций.Добавить("АдресКриптосервиса");
	МассивОпций.Добавить("АдресПрограммногоИнтерфейсаСлужбыПоддержки");
	МассивОпций.Добавить("АдресСервераСдачиОтчетности");
	МассивОпций.Добавить("АдресСервисаНаправленийСдачиОтчетности");
	МассивОпций.Добавить("АдресСервисаПодключенияЭлектроннойПодписиВМоделиСервиса");
	МассивОпций.Добавить("АдресУправленияКонференцией");
	МассивОпций.Добавить("АдресЦКК");
	МассивОпций.Добавить("АрхивироватьЧекиККМПриЗакрытииКассовойСмены");
	МассивОпций.Добавить("БлокировкаОтправкиБыстрыхСообщений");
	МассивОпций.Добавить("ВалютаУчета");
	МассивОпций.Добавить("ВариантыСовместногоПримененияСкидокНаценок");
	МассивОпций.Добавить("ВерсияДатЗапретаИзменения");
	МассивОпций.Добавить("ВерсияКлассификатораБанков");
	МассивОпций.Добавить("ВестиСведенияДляДекларацийПоАлкогольнойПродукции");
	МассивОпций.Добавить("ВнешнийАдресУправляющегоПриложения");
	МассивОпций.Добавить("ВыгружатьПродажиНемаркируемойПродукцииВЕГАИС");
	МассивОпций.Добавить("ВыполнитьРезервноеКопированиеОбластиДанных");
	МассивОпций.Добавить("ВыполнятьЗамерыПроизводительности");
	МассивОпций.Добавить("ГлавныйУзел");
	МассивОпций.Добавить("ДанныеДляОтложенногоОбновления");
	МассивОпций.Добавить("ДатаНачалаРегистрацииРозничныхПродажВЕГАИС");
	МассивОпций.Добавить("ДатаОбновленияКешаТарификации");
	МассивОпций.Добавить("ДатаОбновленияНаРелиз_1_2_1");
	МассивОпций.Добавить("ДатаОбновленияПовторноИспользуемыхЗначенийМРО");
	МассивОпций.Добавить("ДатаПервогоВходаВСистему");
	МассивОпций.Добавить("ДатаПоследнегоСтартаКлиентскогоСеанса");
	МассивОпций.Добавить("ДатаПоследнейВыгрузкиЗамеровПроизводительностиUTC");
	МассивОпций.Добавить("ДетализироватьОбновлениеИБВЖурналеРегистрации");
	МассивОпций.Добавить("ДокументооборотСКонтролирующимиОрганами_ВерсияВнешнегоМодуля");
	МассивОпций.Добавить("ДокументооборотСКонтролирующимиОрганами_ВнешнийМодуль");
	МассивОпций.Добавить("ДокументооборотСКонтролирующимиОрганами_ИмяКриптопровайдера");
	МассивОпций.Добавить("ДокументооборотСКонтролирующимиОрганами_ИспользоватьВнешнийМодуль");
	МассивОпций.Добавить("ДокументооборотСКонтролирующимиОрганами_ОтпечатокСертификатаОнлайнПроверки");
	МассивОпций.Добавить("ДокументооборотСКонтролирующимиОрганами_РежимТестирования");
	МассивОпций.Добавить("ДокументооборотСКонтролирующимиОрганами_СертификатСервераОнлайнПроверки");
	МассивОпций.Добавить("ДокументооборотСКонтролирующимиОрганами_ТипКриптопровайдера");
	МассивОпций.Добавить("ЕстьАвтоматическиеСкидки");
	МассивОпций.Добавить("ЗаголовокСистемы");
	МассивОпций.Добавить("ЗагрузитьСообщениеОбменаДанными");
	МассивОпций.Добавить("ЗапрещатьЗагрузкуФайловПоРасширению");
	МассивОпций.Добавить("ЗарегистрированыИзмененияДанных");
	МассивОпций.Добавить("ЗачитыватьАвансыДолгиАвтоматически");
	МассивОпций.Добавить("ИдентификаторИнформационнойБазы");
	МассивОпций.Добавить("ИзвлекатьТекстыФайловНаСервере");
	МассивОпций.Добавить("ИспользованиеКаталогаДополнительныхОтчетовИОбработокВМоделиСервиса");
	МассивОпций.Добавить("ИспользоватьАвтономнуюРаботуВМоделиСервиса");
	МассивОпций.Добавить("ИспользоватьВерсионированиеОбъектов");
	МассивОпций.Добавить("ИспользоватьВнешнихПользователей");
	МассивОпций.Добавить("ИспользоватьГруппыДоступаКонтрагентов");
	МассивОпций.Добавить("ИспользоватьГруппыПользователей");
	МассивОпций.Добавить("ИспользоватьДатыЗапретаЗагрузки");
	МассивОпций.Добавить("ИспользоватьДатыЗапретаИзменения");
	МассивОпций.Добавить("ИспользоватьДополнительныеОтчетыИОбработки");
	МассивОпций.Добавить("ИспользоватьДополнительныеРеквизитыИСведения");
	МассивОпций.Добавить("ИспользоватьКорректировкиПоступлений");
	МассивОпций.Добавить("ИспользоватьКорректировкиРеализаций");
	МассивОпций.Добавить("ИспользоватьМеханизмОнлайнСервисовРО");
	МассивОпций.Добавить("ИспользоватьНапоминанияПользователя");
	МассивОпций.Добавить("ИспользоватьНесколькоОрганизаций");
	МассивОпций.Добавить("ИспользоватьНесколькоПроизводственныхКалендарей");
	МассивОпций.Добавить("ИспользоватьОбменБизнесСеть");
	МассивОпций.Добавить("ИспользоватьОбменСБанками");
	МассивОпций.Добавить("ИспользоватьОбменСПодключаемымОборудованиемOffline");
	МассивОпций.Добавить("ИспользоватьОбменЭД");
	МассивОпций.Добавить("ИспользоватьОбменЭДМеждуОрганизациями");
	МассивОпций.Добавить("ИспользоватьОтложеннуюОтправкуЭлектронныхДокументов");
	МассивОпций.Добавить("ИспользоватьПолнотекстовыйПоиск");
	МассивОпций.Добавить("ИспользоватьПроверкуКонтрагентов");
	МассивОпций.Добавить("ИспользоватьРазделениеПоОбластямДанных");
	МассивОпций.Добавить("ИспользоватьСервисСклоненияMorpher");
	МассивОпций.Добавить("ИспользоватьСинхронизациюДанных");
	МассивОпций.Добавить("ИспользоватьСинхронизациюДанныхВЛокальномРежиме");
	МассивОпций.Добавить("ИспользоватьСинхронизациюДанныхВМоделиСервиса");
	МассивОпций.Добавить("ИспользоватьСинхронизациюДанныхВМоделиСервисаСЛокальнойПрограммой");
	МассивОпций.Добавить("ИспользоватьСинхронизациюДанныхВМоделиСервисаСПриложениемВИнтернете");
	МассивОпций.Добавить("ИспользоватьШифрование");
	МассивОпций.Добавить("ИспользоватьЭлектроннуюПодписьВМоделиСервиса");
	МассивОпций.Добавить("ИспользоватьЭлектронныеПодписи");
	МассивОпций.Добавить("ИспользуютсяПрофилиБезопасности");
	МассивОпций.Добавить("ИсточникДанныхАдресногоКлассификатора");
	МассивОпций.Добавить("КаталогОбменаФайламиВМоделиСервиса");
	МассивОпций.Добавить("КаталогОбменаФайламиВМоделиСервисаLinux");
	МассивОпций.Добавить("КаталогСообщенийОбменаДаннымиДляLinux");
	МассивОпций.Добавить("КаталогСообщенийОбменаДаннымиДляWindows");
	МассивОпций.Добавить("КлючОбластиДанных");
	МассивОпций.Добавить("КоличествоЭлементовВТранзакцииЗагрузкиДанных");
	МассивОпций.Добавить("Компания");
	МассивОпций.Добавить("КонтролироватьОстаткиПриПробитииЧековККМ");
	МассивОпций.Добавить("КонтролироватьОстаткиПриПроведении");
	МассивОпций.Добавить("КопироватьОбластиДанныхИзЭталонной");
	МассивОпций.Добавить("МаксимальнаяДлительностьВыполненияИсполняющегоФоновогоЗадания");
	МассивОпций.Добавить("МаксимальноеКоличествоИсполняющихФоновыхЗаданий");
	МассивОпций.Добавить("МаксимальныйРазмерФайла");
	МассивОпций.Добавить("МаксимальныйРазмерФайлаОбластиДанных");
	МассивОпций.Добавить("МинимальныйИнтервалРегламентныхЗаданийДОИОВМоделиСервиса");
	МассивОпций.Добавить("НастройкаПодчиненногоУзлаРИБЗавершена");
	МассивОпций.Добавить("НастройкаПроксиСервера");
	МассивОпций.Добавить("УдалитьНастройкиВходаПользователей");
	МассивОпций.Добавить("НастройкиНовостей");
	МассивОпций.Добавить("НациональнаяВалюта");
	МассивОпций.Добавить("НачалоИспользованияСФ1137");
	МассивОпций.Добавить("НезависимоеИспользованиеДополнительныхОтчетовИОбработокВМоделиСервиса");
	МассивОпций.Добавить("НеИспользоватьНесколькоОрганизаций");
	МассивОпций.Добавить("НастройкиПодчиненногоУзлаРИБ");
	МассивОпций.Добавить("ОбщиеФайлыОбменСБанками");
	МассивОпций.Добавить("ОграничиватьДоступНаУровнеЗаписей");
	МассивОпций.Добавить("НеИспользоватьРазделениеПоОбластямДанных");
	МассивОпций.Добавить("ОтложенноеОбновлениеВГлавномУзлеЗавершеноУспешно");
	МассивОпций.Добавить("ОценкаПроизводительностиПериодЗаписи");
	МассивОпций.Добавить("ПараметрыАдминистрированияИБ");
	МассивОпций.Добавить("ПараметрыАдресногоКлассификатора");
	МассивОпций.Добавить("ПараметрыИтоговИАгрегатов");
	МассивОпций.Добавить("ПараметрыБлокировкиРаботыСВнешнимиРесурсами");
	МассивОпций.Добавить("ПараметрыРезервногоКопирования");
	МассивОпций.Добавить("ПараметрыЦентраМониторинга");
	МассивОпций.Добавить("ПервоначальнаяНастройкаЗаполненыНачальныеОстатки");
	МассивОпций.Добавить("ПервоначальнаяНастройкаЗаполненыСведенияОбОрганизации");
	МассивОпций.Добавить("ПереноситьДатуЗапретаРедактирования");
	МассивОпций.Добавить("ПоддержкаРезервногоКопирования");
	МассивОпций.Добавить("ПользовательСтандартногоИнтерфейсаOData");
	МассивОпций.Добавить("ПрайсЛистВыводитьКод");
	МассивОпций.Добавить("ПрайсЛистВыводитьПолноеНаименование");
	МассивОпций.Добавить("ПрайсЛистИспользоватьИерархиюНоменклатуры");
	МассивОпций.Добавить("ПрайсЛистФормироватьПоНаличиюНаСкладах");
	МассивОпций.Добавить("ПредельноеКоличествоЗаписейВРазделеДекларацииПоНДС");
	МассивОпций.Добавить("ПрефиксОбластиДанных");
	МассивОпций.Добавить("ПрефиксДляОбменаССайтом");
	МассивОпций.Добавить("ПрефиксПоследнегоАвтономногоРабочегоМеста");
	МассивОпций.Добавить("ПовторитьЗагрузкуСообщенияОбменаДаннымиПередЗапуском");
	МассивОпций.Добавить("ПровайдерSMS");
	МассивОпций.Добавить("ПрефиксУзлаРаспределеннойИнформационнойБазы");
	МассивОпций.Добавить("ПроверятьЭлектронныеПодписиНаСервере");
	МассивОпций.Добавить("РазмерБлокаПередачиФайла");
	МассивОпций.Добавить("ПрофильБезопасностиИнформационнойБазы");
	МассивОпций.Добавить("РазрешенаРаботаСНовостями");
	МассивОпций.Добавить("РазрешитьВыполнениеДООРегламентнымиЗаданиямиВМоделиСервиса");
	МассивОпций.Добавить("РежимИспользованияИнформационнойБазы");
	МассивОпций.Добавить("РеквизитыДоверенности");
	МассивОпций.Добавить("СайтСоздан");
	МассивОпций.Добавить("РазрешенаРаботаСНовостямиЧерезИнтернет");
	МассивОпций.Добавить("СведенияОБлокируемыхОбъектах");
	МассивОпций.Добавить("СинхронизироватьДанныеСПриложениемВИнтернетеПриЗавершенииРаботыПрограммы");
	МассивОпций.Добавить("СинхронизироватьДанныеСПриложениемВИнтернетеПриНачалеРаботыПрограммы");
	МассивОпций.Добавить("СинхронизироватьФайлы");
	МассивОпций.Добавить("СоздаватьЭлектронныеПодписиНаСервере");
	МассивОпций.Добавить("СообщениеБлокировкиПриОбновленииКонфигурации");
	МассивОпций.Добавить("СообщениеОбменаДаннымиИзГлавногоУзла");
	МассивОпций.Добавить("СписокЗапрещенныхРасширенийОбластиДанных");
	МассивОпций.Добавить("СписокРасширенийТекстовыхФайлов");
	МассивОпций.Добавить("СписокРасширенийФайловOpenDocument");
	МассивОпций.Добавить("СписокРасширенийФайловOpenDocumentОбластиДанных");
	МассивОпций.Добавить("СрокОплатыПокупателя");
	МассивОпций.Добавить("СрокОплатыПоставщику");
	МассивОпций.Добавить("СтатусОбновленияКонфигурации");
	МассивОпций.Добавить("УведомлятьОбОшибкахМеханизмаОнлайнСервисовРО");
	МассивОпций.Добавить("УдалитьАвтоматическиПолучатьУведомленияОтЯндексКассы");
	МассивОпций.Добавить("УдалитьАдресатыПолученияОтчетаПоЖурналуРегистрации");
	МассивОпций.Добавить("УдалитьАртикулНоменклатурыВСодержание");
	МассивОпций.Добавить("СообщениеБлокировкиПриОбновленииКонфигурации");
	МассивОпций.Добавить("УдалитьВидБизнесаОрганизации");
	МассивОпций.Добавить("УдалитьДатаОбновленияНаРелиз_1_4_1");
	МассивОпций.Добавить("УдалитьДоговорыКонтрагентовТехническиеКомандыПечати");
	МассивОпций.Добавить("УдалитьИдентификацияПриложенияGoogle");
	МассивОпций.Добавить("УдалитьИспользоватьВнутреннийСервисТарификации");
	МассивОпций.Добавить("УдалитьИспользоватьСостоянияЗаказовНаПроизводство");
	МассивОпций.Добавить("УдалитьИспользоватьСостоянияЗаказовПокупателей");
	МассивОпций.Добавить("УдалитьИспользоватьСостоянияЗаказовПоставщикам");
	МассивОпций.Добавить("УдалитьКлючиАвтообменаПоУчетнымЗаписямДО");
	МассивОпций.Добавить("УдалитьЛогинДоступаКСервисуMorpher");
	МассивОпций.Добавить("УдалитьНеПроводитьДокументыСНекорректнымиДоговорами");
	МассивОпций.Добавить("УдалитьПлановаяДатаОптимизацииИтогов");
	МассивОпций.Добавить("УдалитьСостояниеВРаботеЗаказовНаПроизводство");
	МассивОпций.Добавить("УдалитьСостояниеВРаботеЗаказовПокупателей");
	МассивОпций.Добавить("УдалитьСостояниеВРаботеЗаказовПоставщикам");
	МассивОпций.Добавить("УдалитьСостояниеВыполненЗаказовНаПроизводство");
	МассивОпций.Добавить("УдалитьСостояниеВыполненЗаказовПокупателей");
	МассивОпций.Добавить("УдалитьСостояниеВыполненЗаказовПоставщикам");
	МассивОпций.Добавить("УдалитьФункциональнаяОпцияИспользоватьМассовыеРассылки");
	МассивОпций.Добавить("УдалятьНепробитыеЧекиПриЗакрытииКассовойСмены");
	МассивОпций.Добавить("УчетПоКомпании");
	МассивОпций.Добавить("ФункциональнаяОпцияВестиУчетНалогаНаДоходыИВзносов");
	МассивОпций.Добавить("ФункциональнаяОпцияВестиУчетРасчетовСБанкомЭквайрером");
	МассивОпций.Добавить("ФункциональнаяОпцияВестиШтатноеРасписание");
	МассивОпций.Добавить("ФункциональнаяОпцияИспользоватьАвтоматическиеСкидкиНаценки");
	МассивОпций.Добавить("ФункциональнаяОпцияИспользоватьБюджетирование");
	МассивОпций.Добавить("ФункциональнаяОпцияИспользоватьДисконтныеКарты");
	МассивОпций.Добавить("ФункциональнаяОпцияИспользоватьЗаказыВРозничнойТорговле");
	МассивОпций.Добавить("ФункциональнаяОпцияИспользоватьЗаказыВРозничнойТорговлеДляНастроек");
	МассивОпций.Добавить("ФункциональнаяОпцияИспользоватьКорректировкиДолга");
	МассивОпций.Добавить("ФункциональнаяОпцияИспользоватьОбменССайтами");
	МассивОпций.Добавить("ФункциональнаяОпцияИспользоватьОплатуКартамиВОптовойТорговле");
	МассивОпций.Добавить("ФункциональнаяОпцияИспользоватьОрдерныйСклад");
	МассивОпций.Добавить("ФункциональнаяОпцияИспользоватьОтчетность");
	МассивОпций.Добавить("ФункциональнаяОпцияИспользоватьПартии");
	МассивОпций.Добавить("ФункциональнаяОпцияИспользоватьПечатьЭтикетокИЦенников");
	МассивОпций.Добавить("ФункциональнаяОпцияИспользоватьПланПродаж");
	МассивОпций.Добавить("ФункциональнаяОпцияИспользоватьПодключаемоеОборудование");
	МассивОпций.Добавить("ФункциональнаяОпцияИспользоватьПодсистемуЗарплата");
	МассивОпций.Добавить("ФункциональнаяОпцияИспользоватьПодсистемуПроизводство");
	МассивОпций.Добавить("ФункциональнаяОпцияИспользоватьПодсистемуРаботы");
	МассивОпций.Добавить("ФункциональнаяОпцияИспользоватьРучныеСкидкиНаценкиЗакупки");
	МассивОпций.Добавить("ФункциональнаяОпцияИспользоватьРучныеСкидкиНаценкиПродажи");
	МассивОпций.Добавить("ФункциональнаяОпцияИспользоватьСверкиВзаиморасчетов");
	МассивОпций.Добавить("ФункциональнаяОпцияИспользоватьСервисЗакупкаТоваров");
	МассивОпций.Добавить("ФункциональнаяОпцияИспользоватьСервисРасчетПотребностей");
	МассивОпций.Добавить("ФункциональнаяОпцияИспользоватьСовместительство");
	МассивОпций.Добавить("ФункциональнаяОпцияИспользоватьСчетаФактурыВходящие");
	МассивОпций.Добавить("ФункциональнаяОпцияИспользоватьСчетаФактурыИсходящие");
	МассивОпций.Добавить("ФункциональнаяОпцияИспользоватьТехоперации");
	МассивОпций.Добавить("ФункциональнаяОпцияИспользоватьХарактеристики");
	МассивОпций.Добавить("ФункциональнаяОпцияИспользуетсяОСНО");
	МассивОпций.Добавить("ФункциональнаяОпцияКассовыйМетодУчетаДоходовИРасходов");
	МассивОпций.Добавить("ФункциональнаяОпцияКредитыИЗаймы");
	МассивОпций.Добавить("ФункциональнаяОпцияОпросНалоги");
	МассивОпций.Добавить("ФункциональнаяОпцияПередачаЗапасовНаОтветХранение");
	МассивОпций.Добавить("ФункциональнаяОпцияПередачаСырьяВПереработку");
	МассивОпций.Добавить("ФункциональнаяОпцияПередачаТоваровНаКомиссию");
	МассивОпций.Добавить("ФункциональнаяОпцияПереработкаДавальческогоСырья");
	МассивОпций.Добавить("ФункциональнаяОпцияПланироватьЗагрузкуРесурсовПредприятия");
	МассивОпций.Добавить("ФункциональнаяОпцияПлатежныйКалендарь");
	МассивОпций.Добавить("ФункциональнаяОпцияПриемТоваровНаКомиссию");
	МассивОпций.Добавить("ФункциональнаяОпцияПриемЗапасовНаОтветХранение");
	МассивОпций.Добавить("ФункциональнаяОпцияРазноситьОплатуОтЭквайрераПоЭквайринговымОперациям");
	МассивОпций.Добавить("ФункциональнаяОпцияРезервированиеЗапасов");
	МассивОпций.Добавить("ФункциональнаяОпцияУчетВнеоборотныхАктивов");
	МассивОпций.Добавить("ФункциональнаяОпцияУчетВРазличныхЕдиницахИзмерения");
	МассивОпций.Добавить("ФункциональнаяОпцияУчетГТД");
	МассивОпций.Добавить("ФункциональнаяОпцияУчетПоНесколькимНаправлениямДеятельности");
	МассивОпций.Добавить("ФункциональнаяОпцияУчетПоНесколькимПодразделениям");
	МассивОпций.Добавить("ФункциональнаяОпцияУчетПоНесколькимСкладам");
	МассивОпций.Добавить("ФункциональнаяОпцияУчетПоПроектам");
	МассивОпций.Добавить("ФункциональнаяОпцияУчетПоЯчейкам");
	МассивОпций.Добавить("ФункциональнаяОпцияУчетРозничныхПродаж");
	МассивОпций.Добавить("ФункциональнаяОпцияУчетЦенКонтрагентов");
	МассивОпций.Добавить("ФункциональнаяУчетВалютныхОпераций");
	МассивОпций.Добавить("ХранитьФайлыВТомахНаДиске");
	МассивОпций.Добавить("ЧасовойПоясОбластиДанных");
	МассивОпций.Добавить("ЧастотаРасчетаКурсовыхРазниц");
	МассивОпций.Добавить("ЭтоАвтономноеРабочееМесто");

КонецПроцедуры

Функция ИмяКонфигурацииРозница()
	
	Возврат "Розница";
	
КонецФункции

Функция ИмяКонфигурацииРозницаБазовая()
	
	Возврат "РозницаБазовая";
	
КонецФункции

// Включение необходимой функциональности и заполнение данных при обновлении с 1С:УНФ до 1С:Розница
//
Процедура ОбновлениеУНФДоРозницы()
	
	Для Каждого НедоступнаяКонстанта Из КонстантыНедоступныеДляВключенияВРознице() Цикл
		Константы[НедоступнаяКонстанта].Установить(Ложь);
	КонецЦикла;
	
	Для Каждого ОтключеннаяКонстанта Из КонстантыОтключенныеПоУмолчаниюВРознице() Цикл
		Константы[ОтключеннаяКонстанта].Установить(Ложь);
	КонецЦикла;
	
	Константы.ЗачитыватьАвансыДолгиАвтоматически.Установить(Перечисления.ДаНет.Нет);
	Константы.ФункциональнаяОпцияУчетРозничныхПродаж.Установить(Истина);
	Константы.ФункциональнаяОпцияКассовыйМетодУчетаДоходовИРасходов.Установить(Истина);
	Константы.ФункциональнаяОпцияИспользоватьПодсистемуЗарплата.Установить(Истина);
	Константы.СчетУчетаЗапасовДляНоменклатурыПоУмолчанию.Установить(ПланыСчетов.Управленческий.ТоварыПродукция);
	Константы.ФункциональнаяОпцияКонтрольДоговоров.Установить(
		Перечисления.ВидыКонтроляДоговоровПриПроведении.НеКонтролировать);
	
	УправлениеКонтактнойИнформациейУНФ.ПриПодключенииУслугиРозница();
	
	Комментарий = НСтр("ru='Вид приложения УНФ обновлен до вида приложения Розница.'");
	ЗаписьЖурналаРегистрации(ИмяСобытияЖР(), УровеньЖурналаРегистрации.Информация,,, Комментарий);
	
КонецПроцедуры

Процедура ЗапланироватьОтложеннуюОбработкуПриОтключенииУслугиРозница()
	
	ПараметрыЗадания = Новый Структура;
	ПараметрыЗадания.Вставить("ОбластьДанных", РаботаВМоделиСервиса.ЗначениеРазделителяСеанса());
	ПараметрыЗадания.Вставить("ИмяМетода", "ВозможностиПриложения.ПриОтключенииУслугиРозницаОтложенно");
	ПараметрыЗадания.Вставить("Использование", Истина);
	ПараметрыЗадания.Вставить("ЭксклюзивноеВыполнение", Истина);
	ПараметрыЗадания.Вставить("КоличествоПовторовПриАварийномЗавершении", 3);
	
	УстановитьПривилегированныйРежим(Истина);
	ОчередьЗаданий.ДобавитьЗадание(ПараметрыЗадания);
	УстановитьПривилегированныйРежим(Ложь);
	
	Комментарий = НСтр("ru='Запланировано задание очереди ВозможностиПриложения.ПриОтключенииУслугиРозницаОтложенно.'");
	ЗаписьЖурналаРегистрации(ИмяСобытияЖР(), УровеньЖурналаРегистрации.Информация,,, Комментарий);
	
КонецПроцедуры

Процедура ОтправитьСообщениеВидПриложенияОбновлен()
	
	МодульРаботаВМоделиСервиса = ОбщегоНазначения.ОбщийМодуль("РаботаВМоделиСервиса");
	МодульСообщенияВМоделиСервиса = ОбщегоНазначения.ОбщийМодуль("СообщенияВМоделиСервиса");
	МодульРаботаВМоделиСервисаБТСПовтИсп = ОбщегоНазначения.ОбщийМодуль("РаботаВМоделиСервисаБТСПовтИсп");
	МодульДействияНадОбластямиДанныхСлужебный = ОбщегоНазначения.ОбщийМодуль("ДействияНадОбластямиДанныхСлужебный");
	
	// Отправляется сообщение в менеджер сервиса об успешном обновлении вида приложения Розница до вида приложения УНФ.
	ДанныеРезультата = МодульДействияНадОбластямиДанныхСлужебный.НовыйДанныеРезультатаДействия();
	ВидДействия = "AppTypeUpdated"; // Обрабатывается на стороне МС.
	Сообщение = МодульДействияНадОбластямиДанныхСлужебный.СообщениеРезультатПоОбласти(
		ВидДействия, ДанныеРезультата, МодульРаботаВМоделиСервиса.ЗначениеРазделителяСеанса());
	
	МодульСообщенияВМоделиСервиса.ОтправитьСообщение(
		Сообщение, МодульРаботаВМоделиСервисаБТСПовтИсп.КонечнаяТочкаМенеджераСервиса(), Истина);
	
КонецПроцедуры

#КонецОбласти
