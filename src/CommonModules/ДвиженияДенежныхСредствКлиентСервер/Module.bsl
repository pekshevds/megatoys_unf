////////////////////////////////////////////////////////////////////////////////
// "Денежные средства" 
// 
// Общие клиентские процедуры и функции документов:
//	Платежное поручение.
//	Расход со счета.
//	Расход из кассы.
//	Поступление на счет.
//	Поступление в кассу.
//
////////////////////////////////////////////////////////////////////////////////

#Область ПрограммныйИнтерфейс

// Возвращает начало действия Указания Банка России от 14.10.2019 N 5286-У
// по указанию кода вида дохода при перечислении дохода физическим лицам.
//
Функция НачалоДействияУказанияБанкаРоссии5286У() Экспорт
	
	Возврат '20200601';
	
КонецФункции

Функция ДействуетУказаниеБанкаРоссии5286У(Период) Экспорт
	
	Возврат Период = Неопределено
		Или Период >= НачалоДействияУказанияБанкаРоссии5286У();
	
КонецФункции

// Возвращает признак начала действия изменений в 353 ФЗ
//
// Параметры:
//  Период	 - Дата	 - Дата документа
// 
// Возвращаемое значение:
//  Булево - Признак действия соответствующего приказа
//
Функция ВступилиВСилуИзменения353ФЗ(Период) Экспорт
	
	Возврат Период = Неопределено Или Период >= '20220501';
	
КонецФункции

Функция ПеречислениеЗарплаты(ВидОперации) Экспорт
	
	Если ВидОперации = ПредопределенноеЗначение("Перечисление.ВидыОперацийПлатежноеПоручение.ЗарплатаСотруднику") Тогда
		Возврат Истина;
	Иначе
		Возврат Ложь;
	КонецЕсли;
	
КонецФункции

// Производит заполнение признака способа расчета в Расшифровке платежа при изменении суммы документа.
//
// Параметры:
//  Объект - ДокументОбъект.РасходИзКассы, ДанныеФормыСтруктуры - объект для заполнения признака;
//  СтрокаРасшифровки - СтрокаТабличнойЧасти, ДанныеФормыЭлементКоллекции - строка расшифровки платежа для заполнения.
//  СуммаДокумента - Число(15, 2) - Общая сумма документа продажи.
//  ЧекПробит - Булево - признак пробития чека на передачу товара ранее.
//
Процедура ЗаполнитьПризнакСпособаРасчета(Объект, СтрокаРасшифровки = Неопределено, СуммаДокумента = Неопределено, ЧекПробит = Ложь) Экспорт
		
	СтрокиРасшифровкиОбработать = Новый массив;
	Если НЕ ЗначениеЗаполнено(Объект.ДокументОснование) Тогда
		Возврат;
	КонецЕсли;
	ТипДокумента = ТипЗнч(Объект.Ссылка);	
	Если СтрокаРасшифровки = Неопределено Тогда
		Для Каждого СтрокаРасшифровкиОбработать Из Объект.РасшифровкаПлатежа Цикл
			СтрокиРасшифровкиОбработать.Добавить(СтрокаРасшифровкиОбработать);
		КонецЦикла;
	Иначе
		СтрокиРасшифровкиОбработать.Добавить(СтрокаРасшифровки);
	КонецЕсли;                       
	Для каждого СтрокаРасшифровкиОбработать Из СтрокиРасшифровкиОбработать Цикл
		Если ТипДокумента  = Тип("ДокументСсылка.РасходИзКассы") Тогда
			ЗаполнитьПризнакСпособаРасчетаСтрокиРасшифровкиРасходаИзКассы(Объект, СтрокаРасшифровкиОбработать, СуммаДокумента, ЧекПробит);
		ИначеЕсли ТипДокумента  = Тип("ДокументСсылка.ПоступлениеВКассу") Тогда
			ЗаполнитьПризнакСпособаРасчетаСтрокиРасшифровкиПоступлениеВКассу(Объект, СтрокаРасшифровкиОбработать, СуммаДокумента, ЧекПробит);
		ИначеЕсли ТипДокумента = Тип("ДокументСсылка.ПоступлениеНаСчет") Тогда
			ЗаполнитьПризнакСпособаРасчетаСтрокиРасшифровкиПоступлениеНаСчет(Объект, СтрокаРасшифровкиОбработать, СуммаДокумента, ЧекПробит);
		ИначеЕсли ТипДокумента = Тип("ДокументСсылка.РасходСоСчета") Тогда
			ЗаполнитьПризнакСпособаРасчетаСтрокиРасшифровкиРасходаСоСчета(Объект, СтрокаРасшифровкиОбработать, СуммаДокумента, ЧекПробит);
		ИначеЕсли ТипДокумента = Тип("ДокументСсылка.ОперацияПоПлатежнымКартам") Тогда
			ЗаполнитьПризнакСпособаРасчетаСтрокиРасшифровкиОперацииПоПлатежнымКартам(Объект, СтрокаРасшифровкиОбработать, СуммаДокумента, ЧекПробит);
		Иначе
			ВызватьИсключение НСтр("ru = 'Не поддерживаемый документ для определения признака способа расчета при печати чека ККМ'")
		КонецЕсли;
	КонецЦикла;
	
КонецПроцедуры

// Производит заполнение признака способа расчета в строке расшифровки платежа.
//
// Параметры:
//  Объект - ДокументОбъект.РасходИзКассы, ДанныеФормыСтруктуры - объект для заполнения признака;
//  СтрокаРасшифровки - СтрокаТабличнойЧасти, ДанныеФормыЭлементКоллекции - строка расшифровки платежа для заполнения.
//  СуммаПоДокументуОснования - Число(15, 2) - Общая сумма документа продажи.
//  ЧекПробит - Булево - признак пробития чека на передачу товара ранее.
//
Процедура ЗаполнитьПризнакСпособаРасчетаСтрокиРасшифровкиРасходаИзКассы(Объект, СтрокаРасшифровки, Знач СуммаПоДокументуОснования = Неопределено, ЧекПробит = Ложь) Экспорт
	
	ПризнакСпособаРасчета = ПредопределенноеЗначение("Перечисление.ПризнакиСпособаРасчета.ПустаяСсылка");
	
	Если Объект.ВидОперации = ПредопределенноеЗначение("Перечисление.ВидыОперацийРасходИзКассы.Покупателю") Тогда
		Если ЗначениеЗаполнено(СтрокаРасшифровки.Документ) Тогда
			Если ЧекПробит Тогда
				 СуммаПоДокументуОснования = 0;
			КонецЕсли;
			Если СуммаПоДокументуОснования = Неопределено Тогда
				СуммаПоДокументуОснования = ДвиженияДенежныхСредствВызовСервера.ПолучитьСуммуПоДокументу(Объект.ДокументОснование);
			КонецЕсли;
			Если ТипЗнч(СтрокаРасшифровки.Документ) = Тип("ДокументСсылка.ПоступлениеВКассу") Тогда
				ПризнакСпособаРасчета = ПредопределенноеЗначение("Перечисление.ПризнакиСпособаРасчета.Аванс");
			ИначеЕсли СуммаПоДокументуОснования = 0 Тогда
				ПризнакСпособаРасчета = ПредопределенноеЗначение("Перечисление.ПризнакиСпособаРасчета.ОплатаКредита");
			ИначеЕсли СтрокаРасшифровки.СуммаПлатежа >= СуммаПоДокументуОснования Тогда
				ПризнакСпособаРасчета = ПредопределенноеЗначение("Перечисление.ПризнакиСпособаРасчета.ПередачаСПолнойОплатой");
			Иначе
				ПризнакСпособаРасчета = ПредопределенноеЗначение("Перечисление.ПризнакиСпособаРасчета.ПередачаСЧастичнойОплатой");
			КонецЕсли;
		КонецЕсли;
	КонецЕсли;
	
	СтрокаРасшифровки.ПризнакСпособаРасчета = ПризнакСпособаРасчета;
	
КонецПроцедуры 

// Производит заполнение признака способа расчета в строке расшифровки платежа.
//
// Параметры:
//  Объект - ДокументОбъект.ПоступлениеВКассу, ДанныеФормыСтруктуры - объект для заполнения признака;
//  СтрокаРасшифровки - СтрокаТабличнойЧасти, ДанныеФормыЭлементКоллекции - строка расшифровки платежа для заполнения.
//  СуммаПоДокументуОснования - Число(15, 2) - Общая сумма документа продажи.
//  ЧекПробит - Булево - признак пробития чека на передачу товара ранее.
//
Процедура ЗаполнитьПризнакСпособаРасчетаСтрокиРасшифровкиПоступлениеВКассу(Объект, СтрокаРасшифровки, Знач СуммаПоДокументуОснования = Неопределено, ЧекПробит = Ложь) Экспорт
	
	ПризнакСпособаРасчета = ПредопределенноеЗначение("Перечисление.ПризнакиСпособаРасчета.ПустаяСсылка");
	
	Если Объект.ВидОперации = ПредопределенноеЗначение("Перечисление.ВидыОперацийПоступлениеВКассу.ОтПокупателя") Тогда
		Если ЗначениеЗаполнено(СтрокаРасшифровки.Документ) Тогда
			Если ЧекПробит Тогда
				 СуммаПоДокументуОснования = 0;
			КонецЕсли;
			Если СуммаПоДокументуОснования = Неопределено Тогда
				СуммаПоДокументуОснования = ДвиженияДенежныхСредствВызовСервера.ПолучитьСуммуПоДокументу(Объект.ДокументОснование);
			КонецЕсли;
			Если ТипЗнч(СтрокаРасшифровки.Документ) = Тип("ДокументСсылка.ПоступлениеВКассу") 
				Или Не ЗначениеЗаполнено(СтрокаРасшифровки.Документ) Тогда
				ПризнакСпособаРасчета = ПредопределенноеЗначение("Перечисление.ПризнакиСпособаРасчета.Аванс");
			ИначеЕсли СуммаПоДокументуОснования = 0 Тогда
				ПризнакСпособаРасчета = ПредопределенноеЗначение("Перечисление.ПризнакиСпособаРасчета.ОплатаКредита");
			ИначеЕсли СтрокаРасшифровки.СуммаПлатежа >= СуммаПоДокументуОснования Тогда
				ПризнакСпособаРасчета = ПредопределенноеЗначение("Перечисление.ПризнакиСпособаРасчета.ПередачаСПолнойОплатой");
			Иначе
				ПризнакСпособаРасчета = ПредопределенноеЗначение("Перечисление.ПризнакиСпособаРасчета.ПередачаСЧастичнойОплатой");
			КонецЕсли;
		Иначе	
			ПризнакСпособаРасчета = ПредопределенноеЗначение("Перечисление.ПризнакиСпособаРасчета.Аванс");
		КонецЕсли;
	КонецЕсли;
	
	СтрокаРасшифровки.ПризнакСпособаРасчета = ПризнакСпособаРасчета;
	
КонецПроцедуры



// Производит заполнение признака способа расчета в строке расшифровки платежа.
//
// Параметры:
//  Объект - ДокументОбъект.РасходСоСчета, ДанныеФормыСтруктуры - объект для заполнения признака;
//  СтрокаРасшифровки - СтрокаТабличнойЧасти, ДанныеФормыЭлементКоллекции - строка расшифровки платежа для заполнения.
//  СуммаПоДокументуОснования - Число(15, 2) - Общая сумма документа продажи.
//  ЧекПробит - Булево - признак пробития чека на передачу товара ранее.
//
Процедура ЗаполнитьПризнакСпособаРасчетаСтрокиРасшифровкиРасходаСоСчета(Объект, СтрокаРасшифровки, СуммаПоДокументуОснования = Неопределено, ЧекПробит = Ложь) Экспорт
	
	ПризнакСпособаРасчета = ПредопределенноеЗначение("Перечисление.ПризнакиСпособаРасчета.ПустаяСсылка");
		
	Если Объект.ВидОперации = ПредопределенноеЗначение("Перечисление.ВидыОперацийРасходСоСчета.ВозвратОплатыНаПлатежныеКарты") 
		ИЛИ Объект.ВидОперации = ПредопределенноеЗначение("Перечисление.ВидыОперацийРасходСоСчета.ВозвратПродажиВКредит")
		ИЛИ Объект.ВидОперации = ПредопределенноеЗначение("Перечисление.ВидыОперацийРасходСоСчета.Покупателю") Тогда
		Если ЗначениеЗаполнено(СтрокаРасшифровки.Документ) Тогда
			Если ЧекПробит Тогда
				 СуммаПоДокументуОснования = 0;
			КонецЕсли;
			Если СуммаПоДокументуОснования = Неопределено Тогда
				СуммаПоДокументуОснования = ДвиженияДенежныхСредствВызовСервера.ПолучитьСуммуПоДокументу(Объект.ДокументОснование);
			КонецЕсли;
			Если ТипЗнч(СтрокаРасшифровки.Документ) = Тип("ДокументСсылка.ОперацияПоПлатежнымКартам") Тогда
				ПризнакСпособаРасчета = ПредопределенноеЗначение("Перечисление.ПризнакиСпособаРасчета.Аванс");
			ИначеЕсли СуммаПоДокументуОснования = 0 Тогда
				ПризнакСпособаРасчета = ПредопределенноеЗначение("Перечисление.ПризнакиСпособаРасчета.ОплатаКредита");
			ИначеЕсли СтрокаРасшифровки.СуммаПлатежа >= СуммаПоДокументуОснования Тогда
				ПризнакСпособаРасчета = ПредопределенноеЗначение("Перечисление.ПризнакиСпособаРасчета.ПередачаСПолнойОплатой");
			Иначе
				ПризнакСпособаРасчета = ПредопределенноеЗначение("Перечисление.ПризнакиСпособаРасчета.ПередачаСЧастичнойОплатой");
			КонецЕсли;
		КонецЕсли;
	КонецЕсли;	
	
	СтрокаРасшифровки.ПризнакСпособаРасчета = ПризнакСпособаРасчета;
	
КонецПроцедуры            

	
// Производит заполнение признака способа расчета в строке расшифровки платежа.
//
// Параметры:
//  Объект - ДокументОбъект.ПоступлениеНаСчет, ДанныеФормыСтруктуры - объект для заполнения признака;
//  СтрокаРасшифровки - СтрокаТабличнойЧасти, ДанныеФормыЭлементКоллекции - строка расшифровки платежа для заполнения.
//  СуммаПоДокументуОснования - Число(15, 2) - Общая сумма документа продажи.
//  ЧекПробит - Булево - признак пробития чека на передачу товара ранее.
//
Процедура ЗаполнитьПризнакСпособаРасчетаСтрокиРасшифровкиПоступлениеНаСчет(Объект, СтрокаРасшифровки, СуммаПоДокументуОснования = Неопределено, ЧекПробит = Ложь) Экспорт
	
	ПризнакСпособаРасчета = ПредопределенноеЗначение("Перечисление.ПризнакиСпособаРасчета.ПустаяСсылка");
		
	Если Объект.ВидОперации = ПредопределенноеЗначение("Перечисление.ВидыОперацийПоступлениеНаСчет.ПоступлениеОплатыПоКартам") 
		ИЛИ Объект.ВидОперации = ПредопределенноеЗначение("Перечисление.ВидыОперацийПоступлениеНаСчет.ПоступлениеОплатыПоКредитам")
		ИЛИ Объект.ВидОперации = ПредопределенноеЗначение("Перечисление.ВидыОперацийПоступлениеНаСчет.ОтПокупателя") Тогда
		Если ЗначениеЗаполнено(СтрокаРасшифровки.Документ) Тогда
			Если ЧекПробит Тогда
				 СуммаПоДокументуОснования = 0;
			КонецЕсли;
			Если СуммаПоДокументуОснования = Неопределено Тогда
				СуммаПоДокументуОснования = ДвиженияДенежныхСредствВызовСервера.ПолучитьСуммуПоДокументу(Объект.ДокументОснование);
			КонецЕсли;
			Если ТипЗнч(СтрокаРасшифровки.Документ) = Тип("ДокументСсылка.ПоступлениеНаСчет") 
				ИЛИ СтрокаРасшифровки.Документ = Неопределено Тогда
				ПризнакСпособаРасчета = ПредопределенноеЗначение("Перечисление.ПризнакиСпособаРасчета.Аванс");
			ИначеЕсли СуммаПоДокументуОснования = 0 Тогда
				ПризнакСпособаРасчета = ПредопределенноеЗначение("Перечисление.ПризнакиСпособаРасчета.ОплатаКредита");
			ИначеЕсли СтрокаРасшифровки.СуммаПлатежа >= СуммаПоДокументуОснования Тогда
				ПризнакСпособаРасчета = ПредопределенноеЗначение("Перечисление.ПризнакиСпособаРасчета.ПередачаСПолнойОплатой");
			Иначе
				ПризнакСпособаРасчета = ПредопределенноеЗначение("Перечисление.ПризнакиСпособаРасчета.ПередачаСЧастичнойОплатой");
			КонецЕсли;
		Иначе
			ПризнакСпособаРасчета = ПредопределенноеЗначение("Перечисление.ПризнакиСпособаРасчета.Аванс");
		КонецЕсли;
	КонецЕсли;	
	
	СтрокаРасшифровки.ПризнакСпособаРасчета = ПризнакСпособаРасчета;
	
КонецПроцедуры  
// Производит заполнение признака способа расчета в строке расшифровки платежа.
//
// Параметры:
//  Объект - ДокументОбъект.ОперацияПоПлатежнымКартам, ДанныеФормыСтруктуры - объект для заполнения признака;
//  СтрокаРасшифровки - СтрокаТабличнойЧасти, ДанныеФормыЭлементКоллекции - строка расшифровки платежа для заполнения.
//  СуммаПоДокументуОснования - Число(15, 2) - Общая сумма документа продажи.
//  ЧекПробит - Булево - признак пробития чека на передачу товара ранее.
//
Процедура ЗаполнитьПризнакСпособаРасчетаСтрокиРасшифровкиОперацииПоПлатежнымКартам(Объект, СтрокаРасшифровки, СуммаПоДокументуОснования = Неопределено, ЧекПробит = Ложь) Экспорт
	
	ПризнакСпособаРасчета = ПредопределенноеЗначение("Перечисление.ПризнакиСпособаРасчета.ПустаяСсылка");
	
	Если Объект.ВидОперации = ПредопределенноеЗначение("Перечисление.ВидыОперацийЭквайринга.ПоступлениеОплатыОтПокупателя") Тогда
		Если ЧекПробит Тогда
			 СуммаПоДокументуОснования = 0;
		КонецЕсли;
		Если ЗначениеЗаполнено(СтрокаРасшифровки.Документ) 
			И СтрокаРасшифровки.ПризнакАванса Тогда

			Если СуммаПоДокументуОснования = Неопределено Тогда
				СуммаПоДокументуОснования = ДвиженияДенежныхСредствВызовСервера.ПолучитьСуммуПоДокументу(Объект.ДокументОснование);
			КонецЕсли;
			
			Если СуммаПоДокументуОснования = 0 Тогда
				ПризнакСпособаРасчета = ПредопределенноеЗначение("Перечисление.ПризнакиСпособаРасчета.ОплатаКредита");
			ИначеЕсли СтрокаРасшифровки.СуммаРасчетов >= СуммаПоДокументуОснования Тогда
				ПризнакСпособаРасчета = ПредопределенноеЗначение("Перечисление.ПризнакиСпособаРасчета.ПредоплатаПолная");
			Иначе
				ПризнакСпособаРасчета = ПредопределенноеЗначение("Перечисление.ПризнакиСпособаРасчета.ПредоплатаЧастичная");
			КонецЕсли;
			
		ИначеЕсли ЗначениеЗаполнено(СтрокаРасшифровки.Документ) Тогда
			
			Если СуммаПоДокументуОснования = Неопределено Тогда
				СуммаПоДокументуОснования = ДвиженияДенежныхСредствВызовСервера.ПолучитьСуммуПоДокументу(Объект.ДокументОснование);
			КонецЕсли;
			
			Если СуммаПоДокументуОснования = 0 Тогда
				ПризнакСпособаРасчета = ПредопределенноеЗначение("Перечисление.ПризнакиСпособаРасчета.ОплатаКредита");
			ИначеЕсли СтрокаРасшифровки.СуммаРасчетов >= СуммаПоДокументуОснования Тогда
				ПризнакСпособаРасчета = ПредопределенноеЗначение("Перечисление.ПризнакиСпособаРасчета.ПередачаСПолнойОплатой");
			Иначе
				ПризнакСпособаРасчета = ПредопределенноеЗначение("Перечисление.ПризнакиСпособаРасчета.ПередачаСЧастичнойОплатой");
			КонецЕсли;

		Иначе
			ПризнакСпособаРасчета = ПредопределенноеЗначение("Перечисление.ПризнакиСпособаРасчета.Аванс");
		КонецЕсли;
	ИначеЕсли Объект.ВидОперации = ПредопределенноеЗначение("Перечисление.ВидыОперацийЭквайринга.ВозвратОплатыПокупателю") Тогда
		Если ЗначениеЗаполнено(СтрокаРасшифровки.Документ) Тогда
			Если СуммаПоДокументуОснования = Неопределено Тогда
				СуммаПоДокументуОснования = ДвиженияДенежныхСредствВызовСервера.ПолучитьСуммуПоДокументу(Объект.ДокументОснование);
			КонецЕсли;
			
			Если ТипЗнч(СтрокаРасшифровки.Документ) = Тип("ДокументСсылка.ОперацияПоПлатежнымКартам") Тогда
				ПризнакСпособаРасчета = ПредопределенноеЗначение("Перечисление.ПризнакиСпособаРасчета.Аванс");
			ИначеЕсли СуммаПоДокументуОснования = 0 Тогда
				ПризнакСпособаРасчета = ПредопределенноеЗначение("Перечисление.ПризнакиСпособаРасчета.ОплатаКредита");
			ИначеЕсли СтрокаРасшифровки.СуммаПлатежа >= СуммаПоДокументуОснования Тогда
				ПризнакСпособаРасчета = ПредопределенноеЗначение("Перечисление.ПризнакиСпособаРасчета.ПередачаСПолнойОплатой");
			Иначе
				ПризнакСпособаРасчета = ПредопределенноеЗначение("Перечисление.ПризнакиСпособаРасчета.ПередачаСЧастичнойОплатой");
			КонецЕсли;
		КонецЕсли;
	КонецЕсли;
	
	СтрокаРасшифровки.ПризнакСпособаРасчета = ПризнакСпособаРасчета;
	
КонецПроцедуры

#КонецОбласти

