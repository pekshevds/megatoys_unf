
#Область ПрограммныйИнтерфейс

// Важно: заполнение реализации метода обязательно.
// Определяет свойства справочников контрагентов.
// Параметры:
//	СвойстваСправочников - ТаблицаЗначений - в таблице заполняется список
//		справочников контрагентов и их свойства. Колонки таблицы:
//		* Имя - Строка - имя справочника;
//		* Иерархический - Булево - справочник является иерархическим;
//		* РеквизитИНН - Строка- имя реквизита ИНН;
//		* РеквизитКПП - Строка- имя реквизита КПП;
//		* ОтключитьСозданиеИзДосьеКонтрагента - Булево - если Истина,
//			тогда не будет предлагаться создание элемента справочника из
//			отчета "Досье контрагента".
//
//@skip-warning
Процедура ПриОпределенииСвойствСправочниковКонтрагентов(СвойстваСправочников) Экспорт
	
	НоваяСтрока = СвойстваСправочников.Добавить();
	НоваяСтрока.Имя = "Контрагенты";
	НоваяСтрока.Иерархический = Истина;
	НоваяСтрока.РеквизитИНН = "ИНН";
	НоваяСтрока.РеквизитКПП = "КПП";
	
КонецПроцедуры

// Определяет, является ли контрагент физическим или юридическим лицом.
//
// Параметры:
//  СтандартнаяОбработка  - Булево - если стандартный механизм переопределяется, то должно быть установлено значение "Ложь".
//  ЭтоЮрЛицо             - Булево - Истина, если юридическое лицо, и Ложь, если физическое.
//  ДанныеКонтрагента     - Структура - структура, которая содержит данные обрабатываемого контрагента.
//
//@skip-warning
Процедура ПриОпределенииВидаКонтрагента(СтандартнаяОбработка, ЭтоЮрЛицо, ДанныеКонтрагента) Экспорт
	
	Если ДанныеКонтрагента.ДополнительныеПараметры.Свойство("ЭтоЮридическоеЛицо") Тогда
		ЭтоЮрЛицо = ДанныеКонтрагента.ДополнительныеПараметры.ЭтоЮридическоеЛицо;
		СтандартнаяОбработка = Ложь;
	КонецЕсли;
	
КонецПроцедуры

// Определяется, является ли контрагент иностранным.
//
// Параметры:
//  ДанныеКонтрагента   - СтрокаТаблицыЗначений - Содержит информацию о контрагенте. 
//      Подробнее о колонках таблицы можно узнать в описании к процедуре ПроверкаКонтрагентов.ШаблонТаблицыДанныеКонтрагента().
//  ЯвляетсяИностранным - Булево - Результат проверки.
//
//@skip-warning
Процедура ПриОпределенииКонтрагентЯвляетсяИностранным(ДанныеКонтрагента, ЯвляетсяИностранным) Экспорт
	
	ЯвляетсяИностранным = КонтрагентЯвляетсяИностранным(ДанныеКонтрагента.Контрагент);
	
КонецПроцедуры

// Возможность дополнить структуру РеквизитыПроверкиКонтрагентов для формы справочника. 
//
// Параметры:
//  Форма  - ФормаКлиентскогоПриложения - форма, для которой дополняется структура РеквизитыПроверкиКонтрагентов.
//  НовыеРеквизиты  - Структура - структура, которая транслируется в реквизит формы РеквизитыПроверкиКонтрагентов.
//
//@skip-warning
Процедура ДополнитьРеквизитыФормыКонтрагент(Форма, НовыеРеквизиты) Экспорт
	
	Если Форма.ИмяФормы = "Справочник.Контрагенты.Форма.ФормаЭлемента" Тогда
		
		ВидЮрЛицо 	= ПредопределенноеЗначение("Перечисление.ВидыКонтрагентов.ЮридическоеЛицо");
		ВидГосОрган = ПредопределенноеЗначение("Перечисление.ВидыКонтрагентов.ГосударственныйОрган");
		
		НовыеРеквизиты.ЭтоИностранныйКонтрагент = Форма.Объект.ВидКонтрагента = ВидЮрЛицо
														И Форма.Объект.СтранаРегистрации <> ПредопределенноеЗначение("Справочник.СтраныМира.Россия");
		НовыеРеквизиты.ЭтоЮридическоеЛицо 		= Форма.Объект.ВидКонтрагента = ВидЮрЛицо
														Или Форма.Объект.ВидКонтрагента = ВидГосОрган;
		
		НовыеРеквизиты.ОтключитьПроверкуФНС     = НовыеРеквизиты.ЭтоИностранныйКонтрагент;
		
		Если НовыеРеквизиты.ЭтоИностранныйКонтрагент Тогда 
			НовыеРеквизиты.ПричинаОтключенияПроверкиФНС =
				НСтр("ru = 'проверке подлежат только российские контрагенты'");
		КонецЕсли;
			
	КонецЕсли;
	
КонецПроцедуры

// Определяется, необходимо ли отключить проверку состояния контрагента в базе ФНС.
//
// Параметры:
//  ДанныеКонтрагента - СтрокаТаблицыЗначений - см. ПроверкаКонтрагентов.ШаблонТаблицыДанныеКонтрагента
//  ОтключитьПроверкуФНС - Булево, Неопределено - результат проверки состояния контрагента. Если установить Истина, то
//    проверка состояния контрагента в базе ФНС выполняться не будет.
//  ПричинаОтключения - Строка - краткое описание причины отключения проверки контрагента. Установленный текст будет
//    отображаться в окне подсказки поля контрагента, если параметр ОтключитьПроверкуФНС будет установлен в значение
//    Истина.
//
//@skip-warning
Процедура ПриОпределенииСтатусаПроверкиКонтрагентаВБазеФНС(
	ДанныеКонтрагента,
	ОтключитьПроверкуФНС,
	ПричинаОтключения) Экспорт

	ЯвляетсяИностранным = КонтрагентЯвляетсяИностранным(ДанныеКонтрагента.Контрагент);

	Если ЯвляетсяИностранным Тогда	
		ОтключитьПроверкуФНС = Истина;
		ПричинаОтключения 	 = ПричинаОтключенияПроверкиФНСИностраннаяОрганизация();
	КонецЕсли;
	
КонецПроцедуры

// Возвращает представление расчетов по контрагенту в формате "Должен нам/Мы должны"
//
// Параметры:
//  Контрагент - СправочникСсылка.Контрагент
//  СуммаДолга - Число
// 
// Возвращаемое значение:
//  Строка
//
Функция ЗаголовокНадписиВзаиморасчетов(Контрагент, СуммаДолга = 0) Экспорт
	
	КрупныйШрифт = Новый Шрифт(,11,,,);
	МелкийШрифт  = Новый Шрифт(,8, ,,);
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("Контрагент", Контрагент);
	Запрос.Текст = 
	"ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	ОстаткиВзаиморасчетов.Сумма КАК Сумма
	|ИЗ
	|	РегистрСведений.ОстаткиВзаиморасчетов КАК ОстаткиВзаиморасчетов
	|ГДЕ
	|	ОстаткиВзаиморасчетов.Контрагент = &Контрагент";
	
	Выборка = Запрос.Выполнить().Выбрать();
	Если Выборка.Следующий() Тогда
		Сумма = Выборка.Сумма;
	Иначе
		Сумма = 0;
	КонецЕсли;
	
	СуммаДолга = Сумма;
	ПредставлениеВалюты = СимвольноеПредставлениеВалютыУчета();
	
	КомпонентыФС = Новый Массив;
	Если Сумма < 0 Тогда
		КомпонентыФС.Добавить(Новый ФорматированнаяСтрока(НСтр("ru='Мы должны'") + " ", КрупныйШрифт));
		Сумма = -Сумма;
	Иначе
		КомпонентыФС.Добавить(Новый ФорматированнаяСтрока(НСтр("ru='Должен нам'") + " ", КрупныйШрифт));
	КонецЕсли;
	
	СуммаСтрокой = Формат(Сумма, "ЧДЦ=2; ЧРД=,; ЧРГ=' '; ЧН=0,00");
	ПозицияРазделителя = СтрНайти(СуммаСтрокой, ",");
	КомпонентыЧисла = Новый Массив;
	КомпонентыЧисла.Добавить(Новый ФорматированнаяСтрока(Лев(СуммаСтрокой, ПозицияРазделителя), КрупныйШрифт));
	КомпонентыЧисла.Добавить(Новый ФорматированнаяСтрока(Сред(СуммаСтрокой, ПозицияРазделителя+1), МелкийШрифт));
	КомпонентыФС.Добавить(Новый ФорматированнаяСтрока(КомпонентыЧисла, , , , "Взаиморасчеты"));
	
	КомпонентыФС.Добавить(" " + ПредставлениеВалюты);
	
	Возврат Новый ФорматированнаяСтрока(КомпонентыФС, , ЦветаСтиля.ТекстВторостепеннойНадписи);
	
КонецФункции

// Устарела. См. Справочники.ДоговорыКонтрагентов.ПоДокументуКонтрагентуОрганизацииИВидуОперации
//
Функция ПолучитьДоговорПоУмолчанию(Документ, Контрагент, Организация) Экспорт
	
	Результат = Справочники.ДоговорыКонтрагентов.ПоДокументуКонтрагентуОрганизацииИВидуОперации(Документ, Контрагент,
		Организация);
	Возврат Результат;
	
КонецФункции

#Область ПрочиеПроцедуры

// Заполнение значений колонок ЭтоЮридическоеЛицо, ЭтоИностранныйКонтрагент, ОтключитьПроверкуФНС и
// ПричинаОтключенияПроверкиФНС в таблице с данными контрагента.
//
// Параметры:
//   ДанныеКонтрагентов - ТаблицаЗначений - таблица с данными контрагентов
//     см. ПроверкаКонтрагентов.ШаблонТаблицыДанныеКонтрагента.
//   СтандартнаяОбработка - Булево - если Истина, то заполнение будет выполнено стандартным образом путем перебора
//     каждой строки таблицы.
//
Процедура ДополнитьДанныеКонтрагентов(ДанныеКонтрагентов, СтандартнаяОбработка) Экспорт

	#Область ТекстЗапроса
	ТекстЗапроса = 
	"ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	ДанныеКонтрагентов.Контрагент КАК Контрагент,
	|	ДанныеКонтрагентов.ИНН КАК ИНН,
	|	ДанныеКонтрагентов.КПП КАК КПП,
	|	ДанныеКонтрагентов.ЭтоЮридическоеЛицо КАК ЭтоЮридическоеЛицо,
	|	ДанныеКонтрагентов.ЭтоИностранныйКонтрагент КАК ЭтоИностранныйКонтрагент,
	|	ДанныеКонтрагентов.Дата КАК Дата,
	|	ДанныеКонтрагентов.ОбластьДанныхВспомогательныеДанные КАК ОбластьДанныхВспомогательныеДанные,
	|	ДанныеКонтрагентов.Состояние КАК Состояние,
	|	ДанныеКонтрагентов.ОтключитьПроверкуФНС КАК ОтключитьПроверкуФНС,
	|	ДанныеКонтрагентов.ПричинаОтключенияПроверкиФНС КАК ПричинаОтключенияПроверкиФНС
	|ПОМЕСТИТЬ ДанныеКонтрагентов
	|ИЗ
	|	&ДанныеКонтрагентов КАК ДанныеКонтрагентов
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗРЕШЕННЫЕ РАЗЛИЧНЫЕ
	|	ДанныеКонтрагентов.Контрагент КАК Контрагент,
	|	ДанныеКонтрагентов.ИНН КАК ИНН,
	|	ДанныеКонтрагентов.КПП КАК КПП,
	|	ВЫБОР
	|		КОГДА Контрагенты.ВидКонтрагента ЕСТЬ NULL
	|			ТОГДА ДанныеКонтрагентов.ЭтоЮридическоеЛицо
	|		КОГДА Контрагенты.ВидКонтрагента = ЗНАЧЕНИЕ(Перечисление.ВидыКонтрагентов.ЮридическоеЛицо)
	|				ИЛИ Контрагенты.ВидКонтрагента = ЗНАЧЕНИЕ(Перечисление.ВидыКонтрагентов.ГосударственныйОрган)
	|			ТОГДА ИСТИНА
	|		ИНАЧЕ ЛОЖЬ
	|	КОНЕЦ КАК ЭтоЮридическоеЛицо,
	|	ВЫБОР
	|		КОГДА ДанныеКонтрагентов.ЭтоИностранныйКонтрагент <> НЕОПРЕДЕЛЕНО
	|			ТОГДА ДанныеКонтрагентов.ЭтоИностранныйКонтрагент
	|		КОГДА Контрагенты.СтранаРегистрации ЕСТЬ NULL
	|			ТОГДА ЛОЖЬ
	|		КОГДА Контрагенты.СтранаРегистрации = ЗНАЧЕНИЕ(Справочник.СтраныМира.Россия)
	|			ТОГДА ЛОЖЬ
	|		ИНАЧЕ ИСТИНА
	|	КОНЕЦ КАК ЭтоИностранныйКонтрагент,
	|	ДанныеКонтрагентов.Дата КАК Дата,
	|	ДанныеКонтрагентов.ОбластьДанныхВспомогательныеДанные КАК ОбластьДанныхВспомогательныеДанные,
	|	ДанныеКонтрагентов.Состояние КАК Состояние,
	|	ВЫБОР
	|		КОГДА ДанныеКонтрагентов.ОтключитьПроверкуФНС = ИСТИНА
	|			ТОГДА ИСТИНА
	|		КОГДА ДанныеКонтрагентов.ЭтоИностранныйКонтрагент <> НЕОПРЕДЕЛЕНО
	|			ТОГДА ДанныеКонтрагентов.ЭтоИностранныйКонтрагент
	|		КОГДА Контрагенты.СтранаРегистрации ЕСТЬ NULL
	|			ТОГДА ЛОЖЬ
	|		КОГДА Контрагенты.СтранаРегистрации = ЗНАЧЕНИЕ(Справочник.СтраныМира.Россия)
	|			ТОГДА ЛОЖЬ
	|		ИНАЧЕ ИСТИНА
	|	КОНЕЦ КАК ОтключитьПроверкуФНС,
	|	ВЫБОР
	|		КОГДА ДанныеКонтрагентов.ЭтоИностранныйКонтрагент <> НЕОПРЕДЕЛЕНО
	|			ТОГДА ДанныеКонтрагентов.ПричинаОтключенияПроверкиФНС
	|		КОГДА Контрагенты.СтранаРегистрации ЕСТЬ NULL
	|			ТОГДА """"
	|		КОГДА Контрагенты.СтранаРегистрации = ЗНАЧЕНИЕ(Справочник.СтраныМира.Россия)
	|			ТОГДА """"
	|		ИНАЧЕ &ПричинаОтключенияПроверкиИО
	|	КОНЕЦ КАК ПричинаОтключенияПроверкиФНС
	|ИЗ
	|	ДанныеКонтрагентов КАК ДанныеКонтрагентов
	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.Контрагенты КАК Контрагенты
	|		ПО ДанныеКонтрагентов.Контрагент = Контрагенты.Ссылка";
	
	Если НЕ ОбщегоНазначения.ПодсистемаСуществует("СтандартныеПодсистемы.РаботаВМоделиСервиса") Тогда
			
		ТекстЗапроса = СтрЗаменить(
			ТекстЗапроса,
			"ДанныеКонтрагентов.ОбластьДанныхВспомогательныеДанные,",
			"");
				
	КонецЕсли;
	#КонецОбласти
	
	Если ОбщегоНазначения.РазделениеВключено()
		И ОбщегоНазначения.ДоступноИспользованиеРазделенныхДанных()
		ИЛИ НЕ ОбщегоНазначения.РазделениеВключено() Тогда
		
		СтандартнаяОбработка = Ложь;
		Запрос 				 = Новый Запрос(ТекстЗапроса);
		
		Запрос.УстановитьПараметр("ПричинаОтключенияПроверкиИО", ПричинаОтключенияПроверкиФНСИностраннаяОрганизация());
		Запрос.УстановитьПараметр("ДанныеКонтрагентов", 		 ДанныеКонтрагентов);
			
		ДанныеКонтрагентов 	 = Запрос.Выполнить().Выгрузить();
		
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

Функция КонтрагентЯвляетсяИностранным(Контрагент)
	
	Если ТипЗнч(Контрагент) = Тип("СправочникСсылка.Контрагенты")
		И Не Контрагент.Пустая() Тогда
		СтранаРегистрации = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(Контрагент, "СтранаРегистрации");
	ИначеЕсли ТипЗнч(Контрагент) = Тип("СправочникОбъект.Контрагенты") Тогда
		СтранаРегистрации = Контрагент.СтранаРегистрации;
	Иначе
		СтранаРегистрации = Неопределено;
	КонецЕсли;
	
	ЯвляетсяИностранным = ТипЗнч(СтранаРегистрации) = Тип("СправочникСсылка.СтраныМира")
		И СтранаРегистрации <> Справочники.СтраныМира.Россия;

	Возврат ЯвляетсяИностранным;	
		
КонецФункции

Функция ПричинаОтключенияПроверкиФНСИностраннаяОрганизация()
	
	Возврат НСтр("ru='проверке подлежат только российские контрагенты'")
	
КонецФункции

Функция СимвольноеПредставлениеВалютыУчета()
	
	Запрос = Новый Запрос;
	Запрос.Текст =
	"ВЫБРАТЬ
	|	ВалютаУчета.Значение.СимвольноеПредставление КАК СимвольноеПредставление
	|ИЗ
	|	Константа.ВалютаУчета КАК ВалютаУчета";
	Результат = Запрос.Выполнить();
	Если Результат.Пустой() Тогда
		Возврат "";
	КонецЕсли;
	
	ВалютаУчета = Результат.Выбрать();
	ВалютаУчета.Следующий();
	Возврат ВалютаУчета.СимвольноеПредставление;
	
КонецФункции

#КонецОбласти
