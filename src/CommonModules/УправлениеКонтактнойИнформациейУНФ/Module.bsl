
#Область ПрограммныйИнтерфейс

// См. УправлениеКонтактнойИнформацией.ПриОпределенииНастроек
//
Процедура ПриОпределенииНастроек(Настройки) Экспорт
	
	ИспользоватьСобытия = ПолучитьФункциональнуюОпцию("ИспользоватьСобытия");
	
	Телефон = Перечисления.ТипыКонтактнойИнформации.Телефон;
	
	Если ИспользоватьСобытия Тогда
		Настройки.ОписаниеКоманд[Телефон].ПозвонитьПоТелефону.Действие = "УправлениеКонтактнойИнформациейУНФКлиент.ОбработчикДействияПозвонитьПоТелефону";
	КонецЕсли;
	
	Настройки.ОписаниеКоманд[Телефон].Вставить("НаписатьВTelegram", Новый Структура);
	КомандаНаписатьВTelegram = Настройки.ОписаниеКоманд[Телефон].НаписатьВTelegram;
	КомандаНаписатьВTelegram.Вставить("Заголовок", НСтр("ru='Найти в Telegram'"));
	КомандаНаписатьВTelegram.Вставить("Подсказка", НСтр("ru='Открыть переписку в мессенджере Telegram'"));
	КомандаНаписатьВTelegram.Вставить("Картинка", БиблиотекаКартинок.ЛоготипTelegram);
	КомандаНаписатьВTelegram.Вставить("Действие", "УправлениеКонтактнойИнформациейУНФКлиент.ОбработчикДействияНаписатьTelegram");
	
	Настройки.ОписаниеКоманд[Телефон].Вставить("НаписатьВWhatsApp", Новый Структура);
	КомандаНаписатьВWhatsApp = Настройки.ОписаниеКоманд[Телефон].НаписатьВWhatsApp;
	КомандаНаписатьВWhatsApp.Вставить("Заголовок", НСтр("ru='Найти в WhatsApp'"));
	КомандаНаписатьВWhatsApp.Вставить("Подсказка", НСтр("ru='Открыть переписку в мессенджере WhatsApp'"));
	КомандаНаписатьВWhatsApp.Вставить("Картинка", БиблиотекаКартинок.ЛоготипWhatsApp);
	КомандаНаписатьВWhatsApp.Вставить("Действие", "УправлениеКонтактнойИнформациейУНФКлиент.ОбработчикДействияНаписатьWhatsApp");
	
	Если ИспользоватьСобытия Тогда
		Адрес = Перечисления.ТипыКонтактнойИнформации.Адрес;
		Настройки.ОписаниеКоманд[Адрес].Вставить("ЛичнаяВстреча", Новый Структура);
		КомандаЛичнаяВстреча = Настройки.ОписаниеКоманд[Адрес].ЛичнаяВстреча;
		КомандаЛичнаяВстреча.Вставить("Заголовок", НСтр("ru='Личная встреча'"));
		КомандаЛичнаяВстреча.Вставить("Картинка", БиблиотекаКартинок.СобытиеЛичнаяВстреча);
		КомандаЛичнаяВстреча.Вставить("Действие", "УправлениеКонтактнойИнформациейУНФКлиент.ОбработчикДействияЛичнаяВстреча");
		
		Другое = Перечисления.ТипыКонтактнойИнформации.Другое;
		Настройки.ОписаниеКоманд[Другое].Вставить("ПрочееСобытие", Новый Структура);
		КомандаПрочееСобытие = Настройки.ОписаниеКоманд[Другое].ПрочееСобытие;
		КомандаПрочееСобытие.Вставить("Заголовок", НСтр("ru='Прочее событие'"));
		КомандаПрочееСобытие.Вставить("Картинка", БиблиотекаКартинок.СобытиеПрочее);
		КомандаПрочееСобытие.Вставить("Действие", "УправлениеКонтактнойИнформациейУНФКлиент.ОбработчикДействияПрочееСобытие");
	КонецЕсли;
	
	Настройки.ШиринаПоляКомментарий = 11;
	Настройки.ПоложениеКнопкиДобавить = ГоризонтальноеПоложениеЭлемента.Право;
	
КонецПроцедуры

Функция НастройкиПереопределения() Экспорт
	
	Результат = Новый Структура;
	Результат.Вставить("ИспользоватьСтандартнуюШирину", Истина);
	Результат.Вставить("ШиринаКомментария", 11);
	Результат.Вставить("РастягиватьПоГоризонталиПоляВвода", Истина);
	Результат.Вставить("ГоризонтальноеПоложениеВГруппе", Неопределено);
	Возврат Результат;
	
КонецФункции

Процедура ПриСозданииНаСервере(Форма, Объект, ДополнительныеПараметры) Экспорт
	
	ПереопределитьКнопкуДобавитьПолеВвода(Форма, ДополнительныеПараметры.ИмяЭлементаДляРазмещения);
	
КонецПроцедуры

Процедура ПриСозданииНаСервереСвязанныхВладельцевКИ(Форма, ДанныеВладельцевКИ, ДополнительныеПараметры) Экспорт
	
	Если ТипЗнч(ДанныеВладельцевКИ) = Тип("ДанныеФормыЭлементКоллекции") Тогда
		МассивВладельцев = Новый Массив;
		МассивВладельцев.Добавить(ДанныеВладельцевКИ);
	Иначе
		МассивВладельцев = ДанныеВладельцевКИ;
	КонецЕсли;
	
	Для каждого Строка Из МассивВладельцев Цикл
		ПереопределитьКнопкуДобавитьПолеВвода(Форма, Строка.ИмяЭлементаДляРазмещения);
	КонецЦикла;
	
КонецПроцедуры

Процедура ПриЧтенииНаСервере(Форма, Объект, НастройкиПереопределения = Неопределено, ИмяЭлементаДляРазмещения = "ГруппаКонтактнаяИнформация") Экспорт
	
	ПриСозданииНаСервере(Форма, Объект, НастройкиПереопределения);
	
КонецПроцедуры

Функция ОбновитьКонтактнуюИнформацию(Форма, Объект, НастройкиПереопределения = Неопределено, Результат = Неопределено) Экспорт
	
	Если Результат = Неопределено Тогда
		Возврат Неопределено;
	КонецЕсли;
	
	Если НастройкиПереопределения = Неопределено Тогда
		НастройкиПереопределения = НастройкиПереопределения();
	КонецЕсли;
	
	// когда на форме добавляется новый реквизит по кнопке "+ телефон" то такому полю выключается цвет заголовка (фон формы) и зачем-то (зачем?) добавляется горизонтальное положение в группе = право
	// УправлениеКонтактнойИнформацией.СоздатьПолеВвода()
	// 	...
	// 	Если Не ЭтоНовыйВидКИ Тогда
	// 		Элемент.ГоризонтальноеПоложениеВГруппе = ГоризонтальноеПоложениеЭлемента.Право;
	// 		Элемент.ЦветТекстаЗаголовка = ЦветаСтиля.ЦветФонаФормы;
	// todo
	// 	разобраться зачем это надо БСП и попросить убрать?
	НастройкиПереопределения.ГоризонтальноеПоложениеВГруппе = ГоризонтальноеПоложениеЭлемента.Авто;
	
	Если Результат.Свойство("ИмяЭлементаДляРазмещения") Тогда
		//ПереопределитьСвойстваПолейВводаРекурсивно(Форма, Форма.Элементы[Результат.ИмяЭлементаДляРазмещения].ПодчиненныеЭлементы, НастройкиПереопределения);
		ПереопределитьКнопкуДобавитьПолеВвода(Форма, Результат.ИмяЭлементаДляРазмещения);
	КонецЕсли;
	
КонецФункции

Функция ПоляКонтактнойИнформацииПоВиду(Форма, ВидКИ) Экспорт
	
	Результат = Новый Массив;
	ОтборРеквизитов = Новый Структура("Вид", ВидКИ);
	ОписаниеРеквизитовКИ = Форма["КонтактнаяИнформацияОписаниеДополнительныхРеквизитов"].НайтиСтроки(ОтборРеквизитов);
	Для каждого ОписаниеРеквизита Из ОписаниеРеквизитовКИ Цикл
		Результат.Добавить(ОписаниеРеквизита.ИмяРеквизита);
	КонецЦикла;
	Возврат Результат;
	
КонецФункции

Функция ОписаниеРеквизитаКонтактнойИнформации(Форма, ИмяЭлемента) Экспорт
	
	Результат = Новый Массив;
	ОтборРеквизитов = Новый Структура("ИмяРеквизита", ИмяЭлемента);
	ОписаниеРеквизитовКИ = Форма["КонтактнаяИнформацияОписаниеДополнительныхРеквизитов"].НайтиСтроки(ОтборРеквизитов);
	Для каждого ОписаниеРеквизита Из ОписаниеРеквизитовКИ Цикл
		Возврат ОписаниеРеквизита;
	КонецЦикла;
	Возврат Неопределено;
	
КонецФункции

Функция СледующийЭлементВКоллекцииПочиненных(ПодчиненныеЭлементы, ОтносительныйЭлемент) Экспорт
	
	КоличествоПодчиненных = ПодчиненныеЭлементы.Количество();
	Для Индекс = 0 По КоличествоПодчиненных - 1 Цикл
		Если ПодчиненныеЭлементы[Индекс] = ОтносительныйЭлемент Тогда
			Если Индекс + 1 <= КоличествоПодчиненных - 1 Тогда
				Возврат ПодчиненныеЭлементы[Индекс + 1];
			КонецЕсли;
		КонецЕсли;
	КонецЦикла;
	Возврат Неопределено;
	
КонецФункции

Процедура ДобавитьКонтактнуюИнформацию(Форма, Объект, ДобавляемаяКИ) Экспорт
	
	НоваяКонтактнаяИнформация = УправлениеКонтактнойИнформацией.НоваяКонтактнаяИнформация();
	
	МассивДобавляемойКИ = Новый Массив;
	Если ТипЗнч(ДобавляемаяКИ) = Тип("Структура") Тогда
		МассивДобавляемойКИ.Добавить(ДобавляемаяКИ);
	Иначе
		МассивДобавляемойКИ = ДобавляемаяКИ;
	КонецЕсли;
	
	Для каждого СтруктураДобавляемойКИ Из МассивДобавляемойКИ Цикл
		СтрокаКИ = НоваяКонтактнаяИнформация.Добавить();
		ЗаполнитьЗначенияСвойств(СтрокаКИ, СтруктураДобавляемойКИ);
	КонецЦикла;
	
	УправлениеКонтактнойИнформацией.УстановитьКонтактнуюИнформациюОбъекта(Объект, НоваяКонтактнаяИнформация);
	УправлениеКонтактнойИнформацией.ПриЧтенииНаСервере(Форма, Объект);
	
КонецПроцедуры

Процедура ДобавитьКонтактнуюИнформациюНаФорму(Форма, Объект, ДанныеКИ) Экспорт
	
	ОписаниеРеквизитаДляДобавленияКИ = Неопределено;
	
	Для каждого ОписаниеРеквизита Из Форма.КонтактнаяИнформацияОписаниеДополнительныхРеквизитов Цикл
		Если ОписаниеРеквизита.ИмяЭлементаДляРазмещения <> ДанныеКИ.ИмяЭлементаДляРазмещения Тогда
			Продолжить;
		КонецЕсли;
		Если ОписаниеРеквизита.Вид <> ДанныеКИ.Вид Тогда
			Продолжить;
		КонецЕсли;
		Если Не ЗначениеЗаполнено(ОписаниеРеквизита.Представление) Тогда
			ОписаниеРеквизитаДляДобавленияКИ = ОписаниеРеквизита;
			Прервать;
		КонецЕсли;
	КонецЦикла;
	
	// Поле формы для данного вида КИ еще не подготовлено на форме или занято, необходимо добавить новое.
	Если ОписаниеРеквизитаДляДобавленияКИ = Неопределено Тогда
		Результат = Новый Структура;
		Результат.Вставить("ДобавляемыйВид", ДанныеКИ.Вид);
		Результат.Вставить("ИмяЭлементаДляРазмещения", ДанныеКИ.ИмяЭлементаДляРазмещения);
		УправлениеКонтактнойИнформацией.ОбновитьКонтактнуюИнформацию(Форма, Объект, Результат);
	КонецЕсли;
	
	Для каждого ОписаниеРеквизита Из Форма.КонтактнаяИнформацияОписаниеДополнительныхРеквизитов Цикл
		Если ОписаниеРеквизита.ИмяЭлементаДляРазмещения <> ДанныеКИ.ИмяЭлементаДляРазмещения Тогда
			Продолжить;
		КонецЕсли;
		Если ОписаниеРеквизита.Вид <> ДанныеКИ.Вид Тогда
			Продолжить;
		КонецЕсли;
		Если Не ЗначениеЗаполнено(ОписаниеРеквизита.Представление) Тогда
			ОписаниеРеквизитаДляДобавленияКИ = ОписаниеРеквизита;
			Прервать;
		КонецЕсли;
	КонецЦикла;
	
	Если ОписаниеРеквизитаДляДобавленияКИ = Неопределено Тогда
		ТекстОшибки = НСтр("ru='Не удалось добавить на форму необходимый вид контактной информации.'");
		ВызватьИсключение ТекстОшибки;
	КонецЕсли;
	
	ЗначениеКИ = Неопределено;
	Если ДанныеКИ.Свойство("Значение") Тогда
		ЗначениеКИ = ДанныеКИ.Значение;
	КонецЕсли;
	Если Не ЗначениеЗаполнено(ЗначениеКИ) Тогда
		ЗначениеКИ = УправлениеКонтактнойИнформацией.КонтактнаяИнформацияПоПредставлению(ДанныеКИ.Представление, ДанныеКИ.Вид);
	КонецЕсли;
	
	Форма[ОписаниеРеквизитаДляДобавленияКИ.ИмяРеквизита] = ДанныеКИ.Представление;
	ОписаниеРеквизитаДляДобавленияКИ.Представление = ДанныеКИ.Представление;
	ОписаниеРеквизитаДляДобавленияКИ.Значение = ЗначениеКИ;
	
КонецПроцедуры

#Область ДляВызоваИзДругихПодсистем

#Область ОбновлениеИнформационнойБазы

// Смотри также УправлениеКонтактнойИнформациейПереопределяемый.ПриНачальномЗаполненииЭлементов
//
// Параметры:
//  КодыЯзыков - см. УправлениеКонтактнойИнформациейПереопределяемый.ПриНачальномЗаполненииЭлементов.КодыЯзыков
//  Элементы   - см. УправлениеКонтактнойИнформациейПереопределяемый.ПриНачальномЗаполненииЭлементов.Элементы
//  ТабличныеЧасти - см. УправлениеКонтактнойИнформациейПереопределяемый.ПриНачальномЗаполненииЭлементов.ТабличныеЧасти
//
Процедура ПриНачальномЗаполненииЭлементов(КодыЯзыков, Элементы, ТабличныеЧасти) Экспорт
	
	ПриНачальномЗаполненииЭлементовКонтрагенты(КодыЯзыков, Элементы, ТабличныеЧасти);
	ПриНачальномЗаполненииЭлементовКонтактныеЛица(КодыЯзыков, Элементы, ТабличныеЧасти);
	ПриНачальномЗаполненииЭлементовОрганизации(КодыЯзыков, Элементы, ТабличныеЧасти);
	ПриНачальномЗаполненииЭлементовФизическиеЛица(КодыЯзыков, Элементы, ТабличныеЧасти);
	ПриНачальномЗаполненииЭлементовСтруктурныеЕдиницы(КодыЯзыков, Элементы, ТабличныеЧасти);
	ПриНачальномЗаполненииЭлементовПользователи(КодыЯзыков, Элементы, ТабличныеЧасти);
	ПриНачальномЗаполненииЭлементовВидыДеятельностиЕНВД(КодыЯзыков, Элементы, ТабличныеЧасти);
	ПриНачальномЗаполненииЭлементовТорговыеТочки(КодыЯзыков, Элементы, ТабличныеЧасти);
	ПриНачальномЗаполненииЭлементовЛиды(КодыЯзыков, Элементы, ТабличныеЧасти);
	ПриНачальномЗаполненииЭлементовКонтактыЛидов(КодыЯзыков, Элементы, ТабличныеЧасти);
	ПриНачальномЗаполненииЭлементовПунктыВыдачиЗаказа(КодыЯзыков, Элементы, ТабличныеЧасти);
	
КонецПроцедуры

// Смотри также ОбновлениеИнформационнойБазыПереопределяемый.ПриНастройкеНачальногоЗаполненияЭлемента
//
// Параметры:
//  Объект                  - СправочникОбъект.РолиИсполнителей - заполняемый объект.
//  Данные                  - СтрокаТаблицыЗначений - данные заполнения объекта.
//  ДополнительныеПараметры - Структура:
//   * ПредопределенныеДанные - ТаблицаЗначений - данные заполненные в процедуре ПриНачальномЗаполненииЭлементов.
//
Процедура ПриНачальномЗаполненииЭлемента(Объект, Данные, ДополнительныеПараметры) Экспорт
	
	Возврат;
	
КонецПроцедуры

// Выполнение обработчиков первоначального заполнения объектов подсистем
//
Процедура ПриПервомЗапуске() Экспорт
	
	СнятьПризнакИспользуетсяНеиспользуемыхВидовКИ();
	СнятьИзбыточныйПризнакОтображатьВсегдаБиблиотечныхВидовКИ();
	
КонецПроцедуры

// Включение необходимой функциональности и заполнение данных при обновлении с 1С:Розница до 1С:УНФ
//
Процедура ОбновлениеРозницыДоУНФ() Экспорт
	
	ОбновитьВидыКИРозницаУНФ(Истина);
	
КонецПроцедуры

// См. ВозможностиПриложения.ПриПодключенииУслугиРозница
Процедура ПриПодключенииУслугиРозница() Экспорт
	
	ОбновитьВидыКИРозницаУНФ(Ложь);
	
КонецПроцедуры

#КонецОбласти

#КонецОбласти

#Область ОбработчикиОбновления

Процедура ОбновитьВидыКонтактнойИнформации(Параметры) Экспорт
	
	Параметры.ОбработкаЗавершена = Ложь;
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	ВидыКонтактнойИнформации.Ссылка КАК Ссылка,
	|	ВидыКонтактнойИнформации.ОтображатьВсегда КАК ОтображатьВсегда,
	|	ЕСТЬNULL(НастройкиВидовКонтактнойИнформации.ВыводитьВФормеВсегда, ЛОЖЬ) КАК ОтображатьВсегдаСтараяНастройка,
	|	ВидыКонтактнойИнформации.Тип КАК Тип,
	|	ВидыКонтактнойИнформации.ВидРедактирования КАК ВидРедактирования
	|ИЗ
	|	Справочник.ВидыКонтактнойИнформации КАК ВидыКонтактнойИнформации
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.НастройкиВидовКонтактнойИнформации КАК НастройкиВидовКонтактнойИнформации
	|		ПО ВидыКонтактнойИнформации.Ссылка = НастройкиВидовКонтактнойИнформации.Вид
	|ГДЕ
	|	НЕ ВидыКонтактнойИнформации.ЭтоГруппа";
	
	ПроблемныхОбъектов = 0;
	ОбъектовОбработано = 0;
	ОбъектовКОбработке = 0;
	
	Результат = Запрос.Выполнить();
	ВидыКИ = Результат.Выбрать();
	Пока ВидыКИ.Следующий() Цикл
		
		НеобходимоОбновитьПризнакОтображатьВсегда = ВидыКИ.ОтображатьВсегда <> ВидыКИ.ОтображатьВсегдаСтараяНастройка;
		Если ВидыКИ.Тип = Перечисления.ТипыКонтактнойИнформации.Телефон
			Или ВидыКИ.Тип = Перечисления.ТипыКонтактнойИнформации.Факс
			Или ВидыКИ.Тип = Перечисления.ТипыКонтактнойИнформации.Адрес Тогда
			НеобходимоОбновитьВидРедактирования = ВидыКИ.ВидРедактирования = "ПолеВвода";
		Иначе
			НеобходимоОбновитьВидРедактирования = Ложь;
		КонецЕсли;
		
		НеобходимоОбновитьВидКИ = НеобходимоОбновитьПризнакОтображатьВсегда Или НеобходимоОбновитьВидРедактирования;
		Если Не НеобходимоОбновитьВидКИ Тогда
			Продолжить;
		КонецЕсли;
		
		ОбъектовКОбработке = ОбъектовКОбработке + 1;
		
		НачатьТранзакцию();
		Попытка
			ПредставлениеОбъекта = Строка(ВидыКИ.Ссылка);
			ВидОбъект = ВидыКИ.Ссылка.ПолучитьОбъект();
			ВидОбъект.Заблокировать();
			
			Если НеобходимоОбновитьПризнакОтображатьВсегда Тогда
				// Перенос признака ОтображатьВсегда из регистра сведений УНФ в штатный признак БСП.
				ВидОбъект.УдалитьОтображатьВсегда = ВидОбъект.ОтображатьВсегда;
				ВидОбъект.ОтображатьВсегда = ВидыКИ.ОтображатьВсегдаСтараяНастройка;
			КонецЕсли;
			
			Если НеобходимоОбновитьВидРедактирования Тогда
				// Установка ожидаемого значения реквизита ВидРедактирования.
				ВидОбъект.УдалитьВидРедактирования = ВидОбъект.ВидРедактирования;
				ВидОбъект.ВидРедактирования = "ПолеВводаИДиалог";
			КонецЕсли;
			
			ОбновлениеИнформационнойБазы.ЗаписатьДанные(ВидОбъект);
			ОбъектовОбработано = ОбъектовОбработано + 1;
			ЗафиксироватьТранзакцию();
		Исключение
			ОтменитьТранзакцию();
			// Если не удалось обработать какой-либо объект, повторяем попытку снова.
			ПроблемныхОбъектов = ПроблемныхОбъектов + 1;
			
			ТекстОшибки = ПодробноеПредставлениеОшибки(ИнформацияОбОшибке());
			ТекстСообщения = НСтр("ru='Не удалось обработать объект ""%1"" по причине:
			|%2'");
			ТекстСообщения = СтрШаблон(ТекстСообщения, ПредставлениеОбъекта, ТекстОшибки);
			ЗаписьЖурналаРегистрации(ОбновлениеИнформационнойБазы.СобытиеЖурналаРегистрации(), УровеньЖурналаРегистрации.Ошибка,
				Метаданные.Справочники.ВидыКонтактнойИнформации, ВидыКИ.Ссылка, ТекстСообщения);
		КонецПопытки;
	КонецЦикла;
	
	Если ОбъектовОбработано = 0 И ОбъектовКОбработке <> 0 Тогда
		ТекстСообщения = НСтр("ru='Процедуре ОбновитьВидыКонтактнойИнформации не удалось обработать некоторые объекты (пропущены): %1'");
		ТекстСообщения = СтрШаблон(ТекстСообщения, ПроблемныхОбъектов);
		ВызватьИсключение ТекстСообщения;
	КонецЕсли;
	
	Если ПроблемныхОбъектов <> 0 Тогда
		ТекстСообщения = НСтр("ru='Процедура ОбновитьВидыКонтактнойИнформации обработала очередную порцию объектов.'");
		ЗаписьЖурналаРегистрации(ОбновлениеИнформационнойБазы.СобытиеЖурналаРегистрации(), УровеньЖурналаРегистрации.Информация,
			Метаданные.Справочники.ВидыКонтактнойИнформации,, ТекстСообщения);
	Иначе
		ТекстСообщения = НСтр("ru='Процедура ОбновитьВидыКонтактнойИнформации завершила обработку.'");
		ЗаписьЖурналаРегистрации(ОбновлениеИнформационнойБазы.СобытиеЖурналаРегистрации(), УровеньЖурналаРегистрации.Информация,
			Метаданные.Справочники.ВидыКонтактнойИнформации,, ТекстСообщения);
		Параметры.ОбработкаЗавершена = Истина;
	КонецЕсли;
	
КонецПроцедуры

Процедура ОбновитьВидКонтактнойИнформацииТорговыеТочки(Параметры) Экспорт
	
	Параметры.ОбработкаЗавершена = Ложь;
	
	ВидКИАдресТорговойТочки = ОбщегоНазначения.ПредопределенныйЭлемент("Справочник.ВидыКонтактнойИнформации.АдресТорговойТочки");
	ВидКИАдресТорговойТочкиРодитель = ОбщегоНазначения.ПредопределенныйЭлемент("Справочник.ВидыКонтактнойИнформации.СправочникТорговыеТочки");
	
	Если ВидКИАдресТорговойТочки = Неопределено Тогда
		НеобходимоОбновитьАдрес = Ложь;
	Иначе
		ДанныеВида = ОбщегоНазначения.ЗначенияРеквизитовОбъекта(ВидКИАдресТорговойТочки, "Используется,ВидРедактирования");
		НеобходимоОбновитьАдрес = Не ДанныеВида.Используется Или ДанныеВида.ВидРедактирования <> "Диалог";
	КонецЕсли;
	
	Если ВидКИАдресТорговойТочкиРодитель = Неопределено Тогда
		НеобходимоОбновитьРодителя = Ложь;
	Иначе
		Используется = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(ВидКИАдресТорговойТочкиРодитель, "Используется");
		НеобходимоОбновитьРодителя = Не Используется;
	КонецЕсли;
	
	Если Не НеобходимоОбновитьАдрес И Не НеобходимоОбновитьРодителя Тогда
		Параметры.ОбработкаЗавершена = Истина;
		ТекстСообщения = НСтр("ru='Процедура ОбновитьВидКонтактнойИнформацииТорговыеТочки завершила обработку. Обновлять виды не требуется.'");
		ЗаписьЖурналаРегистрации(ОбновлениеИнформационнойБазы.СобытиеЖурналаРегистрации(), УровеньЖурналаРегистрации.Информация,
			Метаданные.Справочники.ВидыКонтактнойИнформации,, ТекстСообщения);
		Возврат;
	КонецЕсли;
	
	ЕстьОшибки = Ложь;
	
	НачатьТранзакцию();
	Попытка
		Если НеобходимоОбновитьАдрес Тогда
			ВидОбъект = ВидКИАдресТорговойТочки.ПолучитьОбъект();
			ВидОбъект.Заблокировать();
			ВидОбъект.Используется = Истина;
			ВидОбъект.ВидРедактирования = "Диалог";
			ОбновлениеИнформационнойБазы.ЗаписатьДанные(ВидОбъект);
		КонецЕсли;
		
		Если НеобходимоОбновитьРодителя Тогда
			ВидРодитель = ВидКИАдресТорговойТочкиРодитель.ПолучитьОбъект();
			ВидРодитель.Заблокировать();
			ВидРодитель.Используется = Истина;
			ОбновлениеИнформационнойБазы.ЗаписатьДанные(ВидРодитель);
		КонецЕсли;
		
		ЗафиксироватьТранзакцию();
	Исключение
		ОтменитьТранзакцию();
		
		// Если не удалось обработать какой-либо объект, повторяем попытку снова.
		ЕстьОшибки = Истина;
		
		ТекстОшибки = ПодробноеПредставлениеОшибки(ИнформацияОбОшибке());
		ТекстСообщения = НСтр("ru='Не удалось обновить виды КИ торговой точки по причине:
		|%1'");
		ТекстСообщения = СтрШаблон(ТекстСообщения, ТекстОшибки);
		ЗаписьЖурналаРегистрации(ОбновлениеИнформационнойБазы.СобытиеЖурналаРегистрации(), УровеньЖурналаРегистрации.Ошибка,
			Метаданные.Справочники.ВидыКонтактнойИнформации,, ТекстСообщения);
	КонецПопытки;
	
	Если ЕстьОшибки Тогда
		ТекстСообщения = НСтр("ru='Процедуре ОбновитьВидКонтактнойИнформацииТорговыеТочки не удалось обработать виды КИ торговой точки.'");
		ВызватьИсключение ТекстСообщения;
	КонецЕсли;
	
	ТекстСообщения = НСтр("ru='Процедура ОбновитьВидКонтактнойИнформацииТорговыеТочки завершила обработку.'");
	ЗаписьЖурналаРегистрации(ОбновлениеИнформационнойБазы.СобытиеЖурналаРегистрации(), УровеньЖурналаРегистрации.Информация,
		Метаданные.Справочники.ВидыКонтактнойИнформации,, ТекстСообщения);
	Параметры.ОбработкаЗавершена = Истина;
	
КонецПроцедуры

#КонецОбласти

#КонецОбласти

#Область СлужебныйПрограммныйИнтерфейс

Функция ИмяРеквизитаНаФорме(ИмяПредопределенного) Экспорт
	
	Вид = Справочники.ВидыКонтактнойИнформации[ИмяПредопределенного];
	Возврат "КонтактнаяИнформацияПоле" + СтрЗаменить(Вид.УникальныйИдентификатор(), "-", "x");
	
КонецФункции

#КонецОбласти

#Область СлужебныеПроцедурыИФукнции

#Область ОбновлениеИнформационнойБазы

Процедура ПриНачальномЗаполненииЭлементовКонтрагенты(КодыЯзыков, Элементы, ТабличныеЧасти)
	
	НеиспользуемаяКонтактнаяИнформация = НеиспользуемаяКонтактнаяИнформация();
	
	Элемент = Элементы.Добавить(); 
	Элемент.ИмяПредопределенногоВида = "СправочникКонтрагенты";
	Элемент.ИмяПредопределенныхДанных = "СправочникКонтрагенты";
	Элемент.ЭтоГруппа = Истина;
	Элемент.Используется = НеиспользуемаяКонтактнаяИнформация.Найти(Элемент.ИмяПредопределенныхДанных) = Неопределено;
	МультиязычностьСервер.ЗаполнитьМультиязычныйРеквизит(Элемент, "Наименование",
			"ru = 'Контактная информация справочника ""Контрагенты""'", КодыЯзыков); // @НСтр-1
	
	Элемент = Элементы.Добавить(); 
	Элемент.ИмяПредопределенногоВида = "ТелефонКонтрагента";
	Элемент.ИмяПредопределенныхДанных = "ТелефонКонтрагента";
	Элемент.Родитель = Справочники.ВидыКонтактнойИнформации.СправочникКонтрагенты;
	Элемент.Тип = Перечисления.ТипыКонтактнойИнформации.Телефон;
	Элемент.РеквизитДопУпорядочивания = 1;
	Элемент.МожноИзменятьСпособРедактирования = Истина;
	Элемент.ВидРедактирования = "ПолеВводаИДиалог";
	Элемент.ОбязательноеЗаполнение = Ложь;
	Элемент.РазрешитьВводНесколькихЗначений = Истина;
	Элемент.ЗапретитьРедактированиеПользователем = Ложь;
	Элемент.Используется = НеиспользуемаяКонтактнаяИнформация.Найти(Элемент.ИмяПредопределенныхДанных) = Неопределено;
	Элемент.ТелефонCДобавочнымНомером = Истина;
	Элемент.ОтображатьВсегда = Истина;
	МультиязычностьСервер.ЗаполнитьМультиязычныйРеквизит(Элемент, "Наименование",
			"ru = 'Телефон'", КодыЯзыков); // @НСтр-1
	
	Элемент = Элементы.Добавить(); 
	Элемент.ИмяПредопределенногоВида = "EmailКонтрагента";
	Элемент.ИмяПредопределенныхДанных = "EmailКонтрагента";
	Элемент.Родитель = Справочники.ВидыКонтактнойИнформации.СправочникКонтрагенты;
	Элемент.Тип = Перечисления.ТипыКонтактнойИнформации.АдресЭлектроннойПочты;
	Элемент.РеквизитДопУпорядочивания = 2;
	Элемент.МожноИзменятьСпособРедактирования = Истина;
	Элемент.ВидРедактирования = "ПолеВвода";
	Элемент.ОбязательноеЗаполнение = Ложь;
	Элемент.РазрешитьВводНесколькихЗначений = Истина;
	Элемент.ЗапретитьРедактированиеПользователем = Ложь;
	Элемент.Используется = НеиспользуемаяКонтактнаяИнформация.Найти(Элемент.ИмяПредопределенныхДанных) = Неопределено;
	Элемент.ПроверятьКорректность = Истина;
	Элемент.ОтображатьВсегда = Истина;
	МультиязычностьСервер.ЗаполнитьМультиязычныйРеквизит(Элемент, "Наименование",
			"ru = 'E-mail'", КодыЯзыков); // @НСтр-1
	
	Элемент = Элементы.Добавить(); 
	Элемент.ИмяПредопределенногоВида = "ЮрАдресКонтрагента";
	Элемент.ИмяПредопределенныхДанных = "ЮрАдресКонтрагента";
	Элемент.Родитель = Справочники.ВидыКонтактнойИнформации.СправочникКонтрагенты;
	Элемент.Тип = Перечисления.ТипыКонтактнойИнформации.Адрес;
	Элемент.РеквизитДопУпорядочивания = 3;
	Элемент.МожноИзменятьСпособРедактирования = Истина;
	Элемент.ВидРедактирования = "ПолеВводаИДиалог";
	Элемент.ОбязательноеЗаполнение = Ложь;
	Элемент.РазрешитьВводНесколькихЗначений = Ложь;
	Элемент.ЗапретитьРедактированиеПользователем = Ложь;
	Элемент.Используется = НеиспользуемаяКонтактнаяИнформация.Найти(Элемент.ИмяПредопределенныхДанных) = Неопределено;
	Элемент.ТолькоНациональныйАдрес = Ложь;
	Элемент.ПроверятьКорректность = Ложь;
	Элемент.СкрыватьНеактуальныеАдреса = Ложь;
	Элемент.ВключатьСтрануВПредставление = Ложь;
	Элемент.ОтображатьВсегда = Истина;
	МультиязычностьСервер.ЗаполнитьМультиязычныйРеквизит(Элемент, "Наименование",
			"ru = 'Юр. адрес'", КодыЯзыков); // @НСтр-1
	
	Элемент = Элементы.Добавить(); 
	Элемент.ИмяПредопределенногоВида = "ФактАдресКонтрагента";
	Элемент.ИмяПредопределенныхДанных = "ФактАдресКонтрагента";
	Элемент.Родитель = Справочники.ВидыКонтактнойИнформации.СправочникКонтрагенты;
	Элемент.Тип = Перечисления.ТипыКонтактнойИнформации.Адрес;
	Элемент.РеквизитДопУпорядочивания = 4;
	Элемент.МожноИзменятьСпособРедактирования = Истина;
	Элемент.ВидРедактирования = "ПолеВводаИДиалог";
	Элемент.ОбязательноеЗаполнение = Ложь;
	Элемент.РазрешитьВводНесколькихЗначений = Ложь;
	Элемент.ЗапретитьРедактированиеПользователем = Ложь;
	Элемент.Используется = НеиспользуемаяКонтактнаяИнформация.Найти(Элемент.ИмяПредопределенныхДанных) = Неопределено;
	Элемент.ТолькоНациональныйАдрес = Ложь;
	Элемент.ПроверятьКорректность = Ложь;
	Элемент.СкрыватьНеактуальныеАдреса = Ложь;
	Элемент.ВключатьСтрануВПредставление = Ложь;
	Элемент.ОтображатьВсегда = Истина;
	МультиязычностьСервер.ЗаполнитьМультиязычныйРеквизит(Элемент, "Наименование",
			"ru = 'Факт. адрес'", КодыЯзыков); // @НСтр-1
	
	Элемент = Элементы.Добавить(); 
	Элемент.ИмяПредопределенногоВида = "АдресДоставкиКонтрагента";
	Элемент.ИмяПредопределенныхДанных = "АдресДоставкиКонтрагента";
	Элемент.Родитель = Справочники.ВидыКонтактнойИнформации.СправочникКонтрагенты;
	Элемент.Тип = Перечисления.ТипыКонтактнойИнформации.Адрес;
	Элемент.РеквизитДопУпорядочивания = 5;
	Элемент.МожноИзменятьСпособРедактирования = Истина;
	Элемент.ВидРедактирования = "ПолеВводаИДиалог";
	Элемент.ОбязательноеЗаполнение = Ложь;
	Элемент.РазрешитьВводНесколькихЗначений = Истина;
	Элемент.ЗапретитьРедактированиеПользователем = Ложь;
	Элемент.Используется = НеиспользуемаяКонтактнаяИнформация.Найти(Элемент.ИмяПредопределенныхДанных) = Неопределено;
	Элемент.ТолькоНациональныйАдрес = Ложь;
	Элемент.ПроверятьКорректность = Ложь;
	Элемент.СкрыватьНеактуальныеАдреса = Ложь;
	Элемент.ВключатьСтрануВПредставление = Ложь;
	МультиязычностьСервер.ЗаполнитьМультиязычныйРеквизит(Элемент, "Наименование",
			"ru = 'Доставка'", КодыЯзыков); // @НСтр-1
	
	Элемент = Элементы.Добавить(); 
	Элемент.ИмяПредопределенногоВида = "SkypeКонтрагента";
	Элемент.ИмяПредопределенныхДанных = "SkypeКонтрагента";
	Элемент.Родитель = Справочники.ВидыКонтактнойИнформации.СправочникКонтрагенты;
	Элемент.Тип = Перечисления.ТипыКонтактнойИнформации.Skype;
	Элемент.РеквизитДопУпорядочивания = 6;
	Элемент.МожноИзменятьСпособРедактирования = Истина;
	Элемент.ВидРедактирования = "ПолеВвода";
	Элемент.ОбязательноеЗаполнение = Ложь;
	Элемент.РазрешитьВводНесколькихЗначений = Ложь;
	Элемент.ЗапретитьРедактированиеПользователем = Ложь;
	Элемент.Используется = НеиспользуемаяКонтактнаяИнформация.Найти(Элемент.ИмяПредопределенныхДанных) = Неопределено;
	МультиязычностьСервер.ЗаполнитьМультиязычныйРеквизит(Элемент, "Наименование",
			"ru = 'Skype'", КодыЯзыков); // @НСтр-1
	
	Элемент = Элементы.Добавить(); 
	Элемент.ИмяПредопределенногоВида = "ВебСайтКонтрагента";
	Элемент.ИмяПредопределенныхДанных = "ВебСайтКонтрагента";
	Элемент.Родитель = Справочники.ВидыКонтактнойИнформации.СправочникКонтрагенты;
	Элемент.Тип = Перечисления.ТипыКонтактнойИнформации.ВебСтраница;
	Элемент.РеквизитДопУпорядочивания = 7;
	Элемент.МожноИзменятьСпособРедактирования = Истина;
	Элемент.ВидРедактирования = "ПолеВвода";
	Элемент.ОбязательноеЗаполнение = Ложь;
	Элемент.РазрешитьВводНесколькихЗначений = Ложь;
	Элемент.ЗапретитьРедактированиеПользователем = Ложь;
	Элемент.Используется = НеиспользуемаяКонтактнаяИнформация.Найти(Элемент.ИмяПредопределенныхДанных) = Неопределено;
	МультиязычностьСервер.ЗаполнитьМультиязычныйРеквизит(Элемент, "Наименование",
			"ru = 'Сайт'", КодыЯзыков); // @НСтр-1
	
	Элемент = Элементы.Добавить(); 
	Элемент.ИмяПредопределенногоВида = "ФаксКонтрагента";
	Элемент.ИмяПредопределенныхДанных = "ФаксКонтрагента";
	Элемент.Родитель = Справочники.ВидыКонтактнойИнформации.СправочникКонтрагенты;
	Элемент.Тип = Перечисления.ТипыКонтактнойИнформации.Факс;
	Элемент.РеквизитДопУпорядочивания = 8;
	Элемент.МожноИзменятьСпособРедактирования = Истина;
	Элемент.ВидРедактирования = "ПолеВводаИДиалог";
	Элемент.ОбязательноеЗаполнение = Ложь;
	Элемент.РазрешитьВводНесколькихЗначений = Ложь;
	Элемент.ЗапретитьРедактированиеПользователем = Ложь;
	Элемент.Используется = НеиспользуемаяКонтактнаяИнформация.Найти(Элемент.ИмяПредопределенныхДанных) = Неопределено;
	МультиязычностьСервер.ЗаполнитьМультиязычныйРеквизит(Элемент, "Наименование",
			"ru = 'Факс'", КодыЯзыков); // @НСтр-1
	
	Элемент = Элементы.Добавить(); 
	Элемент.ИмяПредопределенногоВида = "ПочтовыйАдресКонтрагента";
	Элемент.ИмяПредопределенныхДанных = "ПочтовыйАдресКонтрагента";
	Элемент.Родитель = Справочники.ВидыКонтактнойИнформации.СправочникКонтрагенты;
	Элемент.Тип = Перечисления.ТипыКонтактнойИнформации.Адрес;
	Элемент.РеквизитДопУпорядочивания = 9;
	Элемент.МожноИзменятьСпособРедактирования = Истина;
	Элемент.ВидРедактирования = "ПолеВводаИДиалог";
	Элемент.ОбязательноеЗаполнение = Ложь;
	Элемент.РазрешитьВводНесколькихЗначений = Ложь;
	Элемент.ЗапретитьРедактированиеПользователем = Ложь;
	Элемент.Используется = НеиспользуемаяКонтактнаяИнформация.Найти(Элемент.ИмяПредопределенныхДанных) = Неопределено;
	Элемент.ТолькоНациональныйАдрес = Ложь;
	Элемент.ПроверятьКорректность = Ложь;
	Элемент.СкрыватьНеактуальныеАдреса = Ложь;
	Элемент.ВключатьСтрануВПредставление = Ложь;
	МультиязычностьСервер.ЗаполнитьМультиязычныйРеквизит(Элемент, "Наименование",
			"ru = 'Почтовый адрес'", КодыЯзыков); // @НСтр-1
	
	Элемент = Элементы.Добавить(); 
	Элемент.ИмяПредопределенногоВида = "ДругаяИнформацияКонтрагента";
	Элемент.ИмяПредопределенныхДанных = "ДругаяИнформацияКонтрагента";
	Элемент.Родитель = Справочники.ВидыКонтактнойИнформации.СправочникКонтрагенты;
	Элемент.Тип = Перечисления.ТипыКонтактнойИнформации.Другое;
	Элемент.ВидПоляДругое = "ОднострочноеШирокое";
	Элемент.РеквизитДопУпорядочивания = 10;
	Элемент.МожноИзменятьСпособРедактирования = Истина;
	Элемент.ВидРедактирования = "ПолеВвода";
	Элемент.ОбязательноеЗаполнение = Ложь;
	Элемент.РазрешитьВводНесколькихЗначений = Ложь;
	Элемент.ЗапретитьРедактированиеПользователем = Ложь;
	Элемент.Используется = НеиспользуемаяКонтактнаяИнформация.Найти(Элемент.ИмяПредопределенныхДанных) = Неопределено;
	МультиязычностьСервер.ЗаполнитьМультиязычныйРеквизит(Элемент, "Наименование",
			"ru = 'Другое'", КодыЯзыков); // @НСтр-1
	
КонецПроцедуры

Процедура ПриНачальномЗаполненииЭлементовКонтактныеЛица(КодыЯзыков, Элементы, ТабличныеЧасти)
	
	НеиспользуемаяКонтактнаяИнформация = НеиспользуемаяКонтактнаяИнформация();
	
	Элемент = Элементы.Добавить(); 
	Элемент.ИмяПредопределенногоВида = "СправочникКонтактныеЛица";
	Элемент.ИмяПредопределенныхДанных = "СправочникКонтактныеЛица";
	Элемент.ЭтоГруппа = Истина;
	Элемент.Используется = НеиспользуемаяКонтактнаяИнформация.Найти(Элемент.ИмяПредопределенныхДанных) = Неопределено;
	МультиязычностьСервер.ЗаполнитьМультиязычныйРеквизит(Элемент, "Наименование",
			"ru = 'Контактная информация справочника ""Контактные лица""'", КодыЯзыков); // @НСтр-1
	
	Элемент = Элементы.Добавить(); 
	Элемент.ИмяПредопределенногоВида = "ТелефонКонтактногоЛица";
	Элемент.ИмяПредопределенныхДанных = "ТелефонКонтактногоЛица";
	Элемент.Родитель = Справочники.ВидыКонтактнойИнформации.СправочникКонтактныеЛица;
	Элемент.Тип = Перечисления.ТипыКонтактнойИнформации.Телефон;
	Элемент.РеквизитДопУпорядочивания = 1;
	Элемент.МожноИзменятьСпособРедактирования = Истина;
	Элемент.ВидРедактирования = "ПолеВводаИДиалог";
	Элемент.ОбязательноеЗаполнение = Ложь;
	Элемент.РазрешитьВводНесколькихЗначений = Истина;
	Элемент.ЗапретитьРедактированиеПользователем = Ложь;
	Элемент.Используется = НеиспользуемаяКонтактнаяИнформация.Найти(Элемент.ИмяПредопределенныхДанных) = Неопределено;
	Элемент.ТелефонCДобавочнымНомером = Истина;
	Элемент.ОтображатьВсегда = Истина;
	МультиязычностьСервер.ЗаполнитьМультиязычныйРеквизит(Элемент, "Наименование",
			"ru = 'Телефон'", КодыЯзыков); // @НСтр-1
	
	Элемент = Элементы.Добавить(); 
	Элемент.ИмяПредопределенногоВида = "EmailКонтактногоЛица";
	Элемент.ИмяПредопределенныхДанных = "EmailКонтактногоЛица";
	Элемент.Родитель = Справочники.ВидыКонтактнойИнформации.СправочникКонтактныеЛица;
	Элемент.Тип = Перечисления.ТипыКонтактнойИнформации.АдресЭлектроннойПочты;
	Элемент.РеквизитДопУпорядочивания = 2;
	Элемент.МожноИзменятьСпособРедактирования = Истина;
	Элемент.ВидРедактирования = "ПолеВвода";
	Элемент.ОбязательноеЗаполнение = Ложь;
	Элемент.РазрешитьВводНесколькихЗначений = Истина;
	Элемент.ЗапретитьРедактированиеПользователем = Ложь;
	Элемент.Используется = НеиспользуемаяКонтактнаяИнформация.Найти(Элемент.ИмяПредопределенныхДанных) = Неопределено;
	Элемент.ПроверятьКорректность = Истина;
	Элемент.ОтображатьВсегда = Истина;
	МультиязычностьСервер.ЗаполнитьМультиязычныйРеквизит(Элемент, "Наименование",
			"ru = 'E-mail'", КодыЯзыков); // @НСтр-1
	
	Элемент = Элементы.Добавить(); 
	Элемент.ИмяПредопределенногоВида = "SkypeКонтактногоЛица";
	Элемент.ИмяПредопределенныхДанных = "SkypeКонтактногоЛица";
	Элемент.Родитель = Справочники.ВидыКонтактнойИнформации.СправочникКонтактныеЛица;
	Элемент.Тип = Перечисления.ТипыКонтактнойИнформации.Skype;
	Элемент.РеквизитДопУпорядочивания = 3;
	Элемент.МожноИзменятьСпособРедактирования = Истина;
	Элемент.ВидРедактирования = "ПолеВвода";
	Элемент.ОбязательноеЗаполнение = Ложь;
	Элемент.РазрешитьВводНесколькихЗначений = Ложь;
	Элемент.ЗапретитьРедактированиеПользователем = Ложь;
	Элемент.Используется = НеиспользуемаяКонтактнаяИнформация.Найти(Элемент.ИмяПредопределенныхДанных) = Неопределено;
	МультиязычностьСервер.ЗаполнитьМультиязычныйРеквизит(Элемент, "Наименование",
			"ru = 'Skype'", КодыЯзыков); // @НСтр-1
	
	Элемент = Элементы.Добавить(); 
	Элемент.ИмяПредопределенногоВида = "СоциальнаяСетьКонтактногоЛица";
	Элемент.ИмяПредопределенныхДанных = "СоциальнаяСетьКонтактногоЛица";
	Элемент.Родитель = Справочники.ВидыКонтактнойИнформации.СправочникКонтактныеЛица;
	Элемент.Тип = Перечисления.ТипыКонтактнойИнформации.ВебСтраница;
	Элемент.РеквизитДопУпорядочивания = 4;
	Элемент.МожноИзменятьСпособРедактирования = Истина;
	Элемент.ВидРедактирования = "ПолеВвода";
	Элемент.ОбязательноеЗаполнение = Ложь;
	Элемент.РазрешитьВводНесколькихЗначений = Истина;
	Элемент.ЗапретитьРедактированиеПользователем = Ложь;
	Элемент.Используется = НеиспользуемаяКонтактнаяИнформация.Найти(Элемент.ИмяПредопределенныхДанных) = Неопределено;
	МультиязычностьСервер.ЗаполнитьМультиязычныйРеквизит(Элемент, "Наименование",
			"ru = 'Социальная сеть'", КодыЯзыков); // @НСтр-1
	
	Элемент = Элементы.Добавить(); 
	Элемент.ИмяПредопределенногоВида = "МессенджерКонтактногоЛица";
	Элемент.ИмяПредопределенныхДанных = "МессенджерКонтактногоЛица";
	Элемент.Родитель = Справочники.ВидыКонтактнойИнформации.СправочникКонтактныеЛица;
	Элемент.Тип = Перечисления.ТипыКонтактнойИнформации.Другое;
	Элемент.ВидПоляДругое = "ОднострочноеШирокое";
	Элемент.РеквизитДопУпорядочивания = 5;
	Элемент.МожноИзменятьСпособРедактирования = Истина;
	Элемент.ВидРедактирования = "ПолеВвода";
	Элемент.ОбязательноеЗаполнение = Ложь;
	Элемент.РазрешитьВводНесколькихЗначений = Истина;
	Элемент.ЗапретитьРедактированиеПользователем = Ложь;
	Элемент.Используется = НеиспользуемаяКонтактнаяИнформация.Найти(Элемент.ИмяПредопределенныхДанных) = Неопределено;
	МультиязычностьСервер.ЗаполнитьМультиязычныйРеквизит(Элемент, "Наименование",
			"ru = 'Мессенджер'", КодыЯзыков); // @НСтр-1
	
КонецПроцедуры

Процедура ПриНачальномЗаполненииЭлементовОрганизации(КодыЯзыков, Элементы, ТабличныеЧасти)
	
	НеиспользуемаяКонтактнаяИнформация = НеиспользуемаяКонтактнаяИнформация();
	
	Элемент = Элементы.Добавить(); 
	Элемент.ИмяПредопределенногоВида = "СправочникОрганизации";
	Элемент.ИмяПредопределенныхДанных = "СправочникОрганизации";
	Элемент.ЭтоГруппа = Истина;
	Элемент.Используется = НеиспользуемаяКонтактнаяИнформация.Найти(Элемент.ИмяПредопределенныхДанных) = Неопределено;
	МультиязычностьСервер.ЗаполнитьМультиязычныйРеквизит(Элемент, "Наименование",
			"ru = 'Контактная информация справочника ""Организации""'", КодыЯзыков); // @НСтр-1
	
	Элемент = Элементы.Добавить(); 
	Элемент.ИмяПредопределенногоВида = "ЮрАдресОрганизации";
	Элемент.ИмяПредопределенныхДанных = "ЮрАдресОрганизации";
	Элемент.Родитель = Справочники.ВидыКонтактнойИнформации.СправочникОрганизации;
	Элемент.Тип = Перечисления.ТипыКонтактнойИнформации.Адрес;
	Элемент.РеквизитДопУпорядочивания = 1;
	Элемент.МожноИзменятьСпособРедактирования = Истина;
	Элемент.ВидРедактирования = "Диалог";
	Элемент.ОбязательноеЗаполнение = Ложь;
	Элемент.РазрешитьВводНесколькихЗначений = Ложь;
	Элемент.ЗапретитьРедактированиеПользователем = Ложь;
	Элемент.Используется = НеиспользуемаяКонтактнаяИнформация.Найти(Элемент.ИмяПредопределенныхДанных) = Неопределено;
	Элемент.ТолькоНациональныйАдрес = Ложь;
	Элемент.ПроверятьКорректность = Ложь;
	Элемент.СкрыватьНеактуальныеАдреса = Ложь;
	Элемент.ВключатьСтрануВПредставление = Ложь;
	Элемент.ОтображатьВсегда = Истина;
	МультиязычностьСервер.ЗаполнитьМультиязычныйРеквизит(Элемент, "Наименование",
			"ru = 'Юр. адрес'", КодыЯзыков); // @НСтр-1
	
	Элемент = Элементы.Добавить(); 
	Элемент.ИмяПредопределенногоВида = "ФактАдресОрганизации";
	Элемент.ИмяПредопределенныхДанных = "ФактАдресОрганизации";
	Элемент.Родитель = Справочники.ВидыКонтактнойИнформации.СправочникОрганизации;
	Элемент.Тип = Перечисления.ТипыКонтактнойИнформации.Адрес;
	Элемент.РеквизитДопУпорядочивания = 2;
	Элемент.МожноИзменятьСпособРедактирования = Истина;
	Элемент.ВидРедактирования = "Диалог";
	Элемент.ОбязательноеЗаполнение = Ложь;
	Элемент.РазрешитьВводНесколькихЗначений = Ложь;
	Элемент.ЗапретитьРедактированиеПользователем = Ложь;
	Элемент.Используется = НеиспользуемаяКонтактнаяИнформация.Найти(Элемент.ИмяПредопределенныхДанных) = Неопределено;
	Элемент.ТолькоНациональныйАдрес = Ложь;
	Элемент.ПроверятьКорректность = Ложь;
	Элемент.СкрыватьНеактуальныеАдреса = Ложь;
	Элемент.ВключатьСтрануВПредставление = Ложь;
	Элемент.ОтображатьВсегда = Истина;
	МультиязычностьСервер.ЗаполнитьМультиязычныйРеквизит(Элемент, "Наименование",
			"ru = 'Факт. адрес'", КодыЯзыков); // @НСтр-1
	
	Элемент = Элементы.Добавить(); 
	Элемент.ИмяПредопределенногоВида = "ПочтовыйАдресОрганизации";
	Элемент.ИмяПредопределенныхДанных = "ПочтовыйАдресОрганизации";
	Элемент.Родитель = Справочники.ВидыКонтактнойИнформации.СправочникОрганизации;
	Элемент.Тип = Перечисления.ТипыКонтактнойИнформации.Адрес;
	Элемент.РеквизитДопУпорядочивания = 3;
	Элемент.МожноИзменятьСпособРедактирования = Истина;
	Элемент.ВидРедактирования = "ПолеВводаИДиалог";
	Элемент.ОбязательноеЗаполнение = Ложь;
	Элемент.РазрешитьВводНесколькихЗначений = Ложь;
	Элемент.ЗапретитьРедактированиеПользователем = Ложь;
	Элемент.Используется = НеиспользуемаяКонтактнаяИнформация.Найти(Элемент.ИмяПредопределенныхДанных) = Неопределено;
	Элемент.ТолькоНациональныйАдрес = Ложь;
	Элемент.ПроверятьКорректность = Ложь;
	Элемент.СкрыватьНеактуальныеАдреса = Ложь;
	Элемент.ВключатьСтрануВПредставление = Ложь;
	Элемент.ОтображатьВсегда = Истина;
	МультиязычностьСервер.ЗаполнитьМультиязычныйРеквизит(Элемент, "Наименование",
			"ru = 'Почтовый адрес'", КодыЯзыков); // @НСтр-1
	
	Элемент = Элементы.Добавить(); 
	Элемент.ИмяПредопределенногоВида = "ТелефонОрганизации";
	Элемент.ИмяПредопределенныхДанных = "ТелефонОрганизации";
	Элемент.Родитель = Справочники.ВидыКонтактнойИнформации.СправочникОрганизации;
	Элемент.Тип = Перечисления.ТипыКонтактнойИнформации.Телефон;
	Элемент.РеквизитДопУпорядочивания = 4;
	Элемент.МожноИзменятьСпособРедактирования = Истина;
	Элемент.ВидРедактирования = "ПолеВводаИДиалог";
	Элемент.ОбязательноеЗаполнение = Ложь;
	Элемент.РазрешитьВводНесколькихЗначений = Истина;
	Элемент.ЗапретитьРедактированиеПользователем = Ложь;
	Элемент.Используется = НеиспользуемаяКонтактнаяИнформация.Найти(Элемент.ИмяПредопределенныхДанных) = Неопределено;
	Элемент.ТелефонCДобавочнымНомером = Истина;
	Элемент.ОтображатьВсегда = Истина;
	МультиязычностьСервер.ЗаполнитьМультиязычныйРеквизит(Элемент, "Наименование",
			"ru = 'Телефон'", КодыЯзыков); // @НСтр-1
	
	Элемент = Элементы.Добавить(); 
	Элемент.ИмяПредопределенногоВида = "EmailОрганизации";
	Элемент.ИмяПредопределенныхДанных = "EmailОрганизации";
	Элемент.Родитель = Справочники.ВидыКонтактнойИнформации.СправочникОрганизации;
	Элемент.Тип = Перечисления.ТипыКонтактнойИнформации.АдресЭлектроннойПочты;
	Элемент.РеквизитДопУпорядочивания = 5;
	Элемент.МожноИзменятьСпособРедактирования = Истина;
	Элемент.ВидРедактирования = "ПолеВвода";
	Элемент.ОбязательноеЗаполнение = Ложь;
	Элемент.РазрешитьВводНесколькихЗначений = Истина;
	Элемент.ЗапретитьРедактированиеПользователем = Ложь;
	Элемент.Используется = НеиспользуемаяКонтактнаяИнформация.Найти(Элемент.ИмяПредопределенныхДанных) = Неопределено;
	Элемент.ПроверятьКорректность = Истина;
	Элемент.ОтображатьВсегда = Истина;
	МультиязычностьСервер.ЗаполнитьМультиязычныйРеквизит(Элемент, "Наименование",
			"ru = 'E-mail'", КодыЯзыков); // @НСтр-1
	
	Элемент = Элементы.Добавить(); 
	Элемент.ИмяПредопределенногоВида = "СайтОрганизации";
	Элемент.ИмяПредопределенныхДанных = "СайтОрганизации";
	Элемент.Родитель = Справочники.ВидыКонтактнойИнформации.СправочникОрганизации;
	Элемент.Тип = Перечисления.ТипыКонтактнойИнформации.ВебСтраница;
	Элемент.РеквизитДопУпорядочивания = 6;
	Элемент.МожноИзменятьСпособРедактирования = Истина;
	Элемент.ВидРедактирования = "ПолеВвода";
	Элемент.ОбязательноеЗаполнение = Ложь;
	Элемент.РазрешитьВводНесколькихЗначений = Истина;
	Элемент.ЗапретитьРедактированиеПользователем = Ложь;
	Элемент.Используется = НеиспользуемаяКонтактнаяИнформация.Найти(Элемент.ИмяПредопределенныхДанных) = Неопределено;
	Элемент.ОтображатьВсегда = Истина;
	МультиязычностьСервер.ЗаполнитьМультиязычныйРеквизит(Элемент, "Наименование",
			"ru = 'Сайт'", КодыЯзыков); // @НСтр-1
	
	Элемент = Элементы.Добавить(); 
	Элемент.ИмяПредопределенногоВида = "ФаксОрганизации";
	Элемент.ИмяПредопределенныхДанных = "ФаксОрганизации";
	Элемент.Родитель = Справочники.ВидыКонтактнойИнформации.СправочникОрганизации;
	Элемент.Тип = Перечисления.ТипыКонтактнойИнформации.Факс;
	Элемент.РеквизитДопУпорядочивания = 7;
	Элемент.МожноИзменятьСпособРедактирования = Истина;
	Элемент.ВидРедактирования = "ПолеВводаИДиалог";
	Элемент.ОбязательноеЗаполнение = Ложь;
	Элемент.РазрешитьВводНесколькихЗначений = Ложь;
	Элемент.ЗапретитьРедактированиеПользователем = Ложь;
	Элемент.Используется = НеиспользуемаяКонтактнаяИнформация.Найти(Элемент.ИмяПредопределенныхДанных) = Неопределено;
	МультиязычностьСервер.ЗаполнитьМультиязычныйРеквизит(Элемент, "Наименование",
			"ru = 'Факс'", КодыЯзыков); // @НСтр-1
	
	Элемент = Элементы.Добавить(); 
	Элемент.ИмяПредопределенногоВида = "ДругаяИнформацияОрганизации";
	Элемент.ИмяПредопределенныхДанных = "ДругаяИнформацияОрганизации";
	Элемент.Родитель = Справочники.ВидыКонтактнойИнформации.СправочникОрганизации;
	Элемент.Тип = Перечисления.ТипыКонтактнойИнформации.Другое;
	Элемент.ВидПоляДругое = "ОднострочноеШирокое";
	Элемент.РеквизитДопУпорядочивания = 8;
	Элемент.МожноИзменятьСпособРедактирования = Истина;
	Элемент.ВидРедактирования = "ПолеВвода";
	Элемент.ОбязательноеЗаполнение = Ложь;
	Элемент.РазрешитьВводНесколькихЗначений = Ложь;
	Элемент.ЗапретитьРедактированиеПользователем = Ложь;
	Элемент.Используется = НеиспользуемаяКонтактнаяИнформация.Найти(Элемент.ИмяПредопределенныхДанных) = Неопределено;
	МультиязычностьСервер.ЗаполнитьМультиязычныйРеквизит(Элемент, "Наименование",
			"ru = 'Другое'", КодыЯзыков); // @НСтр-1
	
КонецПроцедуры

Процедура ПриНачальномЗаполненииЭлементовФизическиеЛица(КодыЯзыков, Элементы, ТабличныеЧасти)
	
	НеиспользуемаяКонтактнаяИнформация = НеиспользуемаяКонтактнаяИнформация();
	
	Элемент = Элементы.Добавить(); 
	Элемент.ИмяПредопределенногоВида = "СправочникФизическиеЛица";
	Элемент.ИмяПредопределенныхДанных = "СправочникФизическиеЛица";
	Элемент.ЭтоГруппа = Истина;
	Элемент.Используется = НеиспользуемаяКонтактнаяИнформация.Найти(Элемент.ИмяПредопределенныхДанных) = Неопределено;
	МультиязычностьСервер.ЗаполнитьМультиязычныйРеквизит(Элемент, "Наименование",
			"ru = 'Контактная информация справочника ""Физические лица""'", КодыЯзыков); // @НСтр-1
	
	Элемент = Элементы.Добавить(); 
	Элемент.ИмяПредопределенногоВида = "ТелефонФизЛица";
	Элемент.ИмяПредопределенныхДанных = "ТелефонФизЛица";
	Элемент.Родитель = Справочники.ВидыКонтактнойИнформации.СправочникФизическиеЛица;
	Элемент.Тип = Перечисления.ТипыКонтактнойИнформации.Телефон;
	Элемент.РеквизитДопУпорядочивания = 1;
	Элемент.МожноИзменятьСпособРедактирования = Истина;
	Элемент.ВидРедактирования = "ПолеВводаИДиалог";
	Элемент.ОбязательноеЗаполнение = Ложь;
	Элемент.РазрешитьВводНесколькихЗначений = Истина;
	Элемент.ЗапретитьРедактированиеПользователем = Ложь;
	Элемент.Используется = НеиспользуемаяКонтактнаяИнформация.Найти(Элемент.ИмяПредопределенныхДанных) = Неопределено;
	Элемент.ТелефонCДобавочнымНомером = Истина;
	Элемент.ОтображатьВсегда = Истина;
	МультиязычностьСервер.ЗаполнитьМультиязычныйРеквизит(Элемент, "Наименование",
			"ru = 'Телефон'", КодыЯзыков); // @НСтр-1
	
	Элемент = Элементы.Добавить();
	Элемент.ИмяПредопределенногоВида = "АдресПоПропискеФизическиеЛица";
	Элемент.ИмяПредопределенныхДанных = "АдресПоПропискеФизическиеЛица";
	Элемент.Родитель = Справочники.ВидыКонтактнойИнформации.СправочникФизическиеЛица;
	Элемент.Тип = Перечисления.ТипыКонтактнойИнформации.Адрес;
	Элемент.РеквизитДопУпорядочивания = 2;
	Элемент.МожноИзменятьСпособРедактирования = Ложь;
	Элемент.ВидРедактирования = "Диалог";
	Элемент.ОбязательноеЗаполнение = Ложь;
	Элемент.РазрешитьВводНесколькихЗначений = Ложь;
	Элемент.ЗапретитьРедактированиеПользователем = Истина;
	Элемент.Используется = НеиспользуемаяКонтактнаяИнформация.Найти(Элемент.ИмяПредопределенныхДанных) = Неопределено;
	Элемент.ТолькоНациональныйАдрес = Истина;
	Элемент.ПроверятьКорректность = Истина;
	Элемент.СкрыватьНеактуальныеАдреса = Ложь;
	Элемент.ВключатьСтрануВПредставление = Истина;
	Элемент.ОтображатьВсегда = Истина;
	МультиязычностьСервер.ЗаполнитьМультиязычныйРеквизит(Элемент, "Наименование",
			"ru = 'По прописке'", КодыЯзыков); // @НСтр-1
	
	Элемент = Элементы.Добавить(); 
	Элемент.ИмяПредопределенногоВида = "АдресМестаПроживанияФизическиеЛица";
	Элемент.ИмяПредопределенныхДанных = "АдресМестаПроживанияФизическиеЛица";
	Элемент.Родитель = Справочники.ВидыКонтактнойИнформации.СправочникФизическиеЛица;
	Элемент.Тип = Перечисления.ТипыКонтактнойИнформации.Адрес;
	Элемент.РеквизитДопУпорядочивания = 3;
	Элемент.МожноИзменятьСпособРедактирования = Ложь;
	Элемент.ВидРедактирования = "Диалог";
	Элемент.ОбязательноеЗаполнение = Ложь;
	Элемент.РазрешитьВводНесколькихЗначений = Ложь;
	Элемент.ЗапретитьРедактированиеПользователем = Истина;
	Элемент.Используется = НеиспользуемаяКонтактнаяИнформация.Найти(Элемент.ИмяПредопределенныхДанных) = Неопределено;
	Элемент.ТолькоНациональныйАдрес = Истина;
	Элемент.ПроверятьКорректность = Истина;
	Элемент.СкрыватьНеактуальныеАдреса = Ложь;
	Элемент.ВключатьСтрануВПредставление = Истина;
	МультиязычностьСервер.ЗаполнитьМультиязычныйРеквизит(Элемент, "Наименование",
			"ru = 'Проживание'", КодыЯзыков); // @НСтр-1
	
	Элемент = Элементы.Добавить(); 
	Элемент.ИмяПредопределенногоВида = "АдресДляИнформированияФизическиеЛица";
	Элемент.ИмяПредопределенныхДанных = "АдресДляИнформированияФизическиеЛица";
	Элемент.Родитель = Справочники.ВидыКонтактнойИнформации.СправочникФизическиеЛица;
	Элемент.Тип = Перечисления.ТипыКонтактнойИнформации.Адрес;
	Элемент.РеквизитДопУпорядочивания = 4;
	Элемент.МожноИзменятьСпособРедактирования = Ложь;
	Элемент.ВидРедактирования = "Диалог";
	Элемент.ОбязательноеЗаполнение = Ложь;
	Элемент.РазрешитьВводНесколькихЗначений = Ложь;
	Элемент.ЗапретитьРедактированиеПользователем = Истина;
	Элемент.Используется = НеиспользуемаяКонтактнаяИнформация.Найти(Элемент.ИмяПредопределенныхДанных) = Неопределено;
	Элемент.ТолькоНациональныйАдрес = Ложь;
	Элемент.ПроверятьКорректность = Ложь;
	Элемент.СкрыватьНеактуальныеАдреса = Ложь;
	Элемент.ВключатьСтрануВПредставление = Истина;
	МультиязычностьСервер.ЗаполнитьМультиязычныйРеквизит(Элемент, "Наименование",
			"ru = 'Для информирования'", КодыЯзыков); // @НСтр-1
	
	Элемент = Элементы.Добавить(); 
	Элемент.ИмяПредопределенногоВида = "АдресЗаПределамиРФФизическиеЛица";
	Элемент.ИмяПредопределенныхДанных = "АдресЗаПределамиРФФизическиеЛица";
	Элемент.Родитель = Справочники.ВидыКонтактнойИнформации.СправочникФизическиеЛица;
	Элемент.Тип = Перечисления.ТипыКонтактнойИнформации.Адрес;
	Элемент.РеквизитДопУпорядочивания = 5;
	Элемент.МожноИзменятьСпособРедактирования = Ложь;
	Элемент.ВидРедактирования = "Диалог";
	Элемент.ОбязательноеЗаполнение = Ложь;
	Элемент.РазрешитьВводНесколькихЗначений = Ложь;
	Элемент.ЗапретитьРедактированиеПользователем = Ложь;
	Элемент.Используется = НеиспользуемаяКонтактнаяИнформация.Найти(Элемент.ИмяПредопределенныхДанных) = Неопределено;
	Элемент.ТолькоНациональныйАдрес = Ложь;
	Элемент.ПроверятьКорректность = Ложь;
	Элемент.СкрыватьНеактуальныеАдреса = Ложь;
	Элемент.ВключатьСтрануВПредставление = Истина;
	МультиязычностьСервер.ЗаполнитьМультиязычныйРеквизит(Элемент, "Наименование",
			"ru = 'За пределами РФ'", КодыЯзыков); // @НСтр-1
	
	Элемент = Элементы.Добавить(); 
	Элемент.ИмяПредопределенногоВида = "EmailФизическиеЛица";
	Элемент.ИмяПредопределенныхДанных = "EmailФизическиеЛица";
	Элемент.Родитель = Справочники.ВидыКонтактнойИнформации.СправочникФизическиеЛица;
	Элемент.Тип = Перечисления.ТипыКонтактнойИнформации.АдресЭлектроннойПочты;
	Элемент.РеквизитДопУпорядочивания = 6;
	Элемент.МожноИзменятьСпособРедактирования = Истина;
	Элемент.ВидРедактирования = "ПолеВвода";
	Элемент.ОбязательноеЗаполнение = Ложь;
	Элемент.РазрешитьВводНесколькихЗначений = Истина;
	Элемент.ЗапретитьРедактированиеПользователем = Ложь;
	Элемент.Используется = НеиспользуемаяКонтактнаяИнформация.Найти(Элемент.ИмяПредопределенныхДанных) = Неопределено;
	Элемент.ПроверятьКорректность = Истина;
	Элемент.ОтображатьВсегда = Истина;
	МультиязычностьСервер.ЗаполнитьМультиязычныйРеквизит(Элемент, "Наименование",
			"ru = 'Email'", КодыЯзыков); // @НСтр-1
	
	Элемент = Элементы.Добавить(); 
	Элемент.ИмяПредопределенногоВида = "ДругаяИнформацияФизЛица";
	Элемент.ИмяПредопределенныхДанных = "ДругаяИнформацияФизЛица";
	Элемент.Родитель = Справочники.ВидыКонтактнойИнформации.СправочникФизическиеЛица;
	Элемент.Тип = Перечисления.ТипыКонтактнойИнформации.Другое;
	Элемент.ВидПоляДругое = "ОднострочноеШирокое";
	Элемент.РеквизитДопУпорядочивания = 7;
	Элемент.МожноИзменятьСпособРедактирования = Истина;
	Элемент.ВидРедактирования = "ПолеВвода";
	Элемент.ОбязательноеЗаполнение = Ложь;
	Элемент.РазрешитьВводНесколькихЗначений = Ложь;
	Элемент.ЗапретитьРедактированиеПользователем = Ложь;
	Элемент.Используется = НеиспользуемаяКонтактнаяИнформация.Найти(Элемент.ИмяПредопределенныхДанных) = Неопределено;
	МультиязычностьСервер.ЗаполнитьМультиязычныйРеквизит(Элемент, "Наименование",
			"ru = 'Другое'", КодыЯзыков); // @НСтр-1
	
	// БЗКБ
	Элемент = Элементы.Добавить(); 
	Элемент.ИмяПредопределенногоВида = "ТелефонДомашнийФизическиеЛица";
	Элемент.ИмяПредопределенныхДанных = "ТелефонДомашнийФизическиеЛица";
	Элемент.Родитель = Справочники.ВидыКонтактнойИнформации.СправочникФизическиеЛица;
	Элемент.Тип = Перечисления.ТипыКонтактнойИнформации.Телефон;
	Элемент.РеквизитДопУпорядочивания = 8;
	Элемент.МожноИзменятьСпособРедактирования = Истина;
	Элемент.ВидРедактирования = "ПолеВводаИДиалог";
	Элемент.ОбязательноеЗаполнение = Ложь;
	Элемент.РазрешитьВводНесколькихЗначений = Истина;
	Элемент.ЗапретитьРедактированиеПользователем = Ложь;
	Элемент.Используется = НеиспользуемаяКонтактнаяИнформация.Найти(Элемент.ИмяПредопределенныхДанных) = Неопределено;
	Элемент.ТелефонCДобавочнымНомером = Истина;
	МультиязычностьСервер.ЗаполнитьМультиязычныйРеквизит(Элемент, "Наименование",
			"ru = 'Домашний телефон'", КодыЯзыков); // @НСтр-1
	
	Элемент = Элементы.Добавить(); 
	Элемент.ИмяПредопределенногоВида = "ТелефонРабочийФизическиеЛица";
	Элемент.ИмяПредопределенныхДанных = "ТелефонРабочийФизическиеЛица";
	Элемент.Родитель = Справочники.ВидыКонтактнойИнформации.СправочникФизическиеЛица;
	Элемент.Тип = Перечисления.ТипыКонтактнойИнформации.Телефон;
	Элемент.РеквизитДопУпорядочивания = 9;
	Элемент.МожноИзменятьСпособРедактирования = Истина;
	Элемент.ВидРедактирования = "ПолеВводаИДиалог";
	Элемент.ОбязательноеЗаполнение = Ложь;
	Элемент.РазрешитьВводНесколькихЗначений = Истина;
	Элемент.ЗапретитьРедактированиеПользователем = Ложь;
	Элемент.Используется = НеиспользуемаяКонтактнаяИнформация.Найти(Элемент.ИмяПредопределенныхДанных) = Неопределено;
	Элемент.ТелефонCДобавочнымНомером = Истина;
	МультиязычностьСервер.ЗаполнитьМультиязычныйРеквизит(Элемент, "Наименование",
			"ru = 'Рабочий телефон'", КодыЯзыков); // @НСтр-1
	
	Элемент = Элементы.Добавить(); 
	Элемент.ИмяПредопределенногоВида = "ТелефонМобильныйФизическиеЛица";
	Элемент.ИмяПредопределенныхДанных = "ТелефонМобильныйФизическиеЛица";
	Элемент.Родитель = Справочники.ВидыКонтактнойИнформации.СправочникФизическиеЛица;
	Элемент.Тип = Перечисления.ТипыКонтактнойИнформации.Телефон;
	Элемент.РеквизитДопУпорядочивания = 10;
	Элемент.МожноИзменятьСпособРедактирования = Истина;
	Элемент.ВидРедактирования = "ПолеВводаИДиалог";
	Элемент.ОбязательноеЗаполнение = Ложь;
	Элемент.РазрешитьВводНесколькихЗначений = Истина;
	Элемент.ЗапретитьРедактированиеПользователем = Ложь;
	Элемент.Используется = НеиспользуемаяКонтактнаяИнформация.Найти(Элемент.ИмяПредопределенныхДанных) = Неопределено;
	Элемент.ТелефонCДобавочнымНомером = Истина;
	МультиязычностьСервер.ЗаполнитьМультиязычныйРеквизит(Элемент, "Наименование",
			"ru = 'Мобильный телефон'", КодыЯзыков); // @НСтр-1
	// Конец БЗКБ
	
	
КонецПроцедуры

Процедура ПриНачальномЗаполненииЭлементовСтруктурныеЕдиницы(КодыЯзыков, Элементы, ТабличныеЧасти)
	
	НеиспользуемаяКонтактнаяИнформация = НеиспользуемаяКонтактнаяИнформация();
	
	Элемент = Элементы.Добавить(); 
	Элемент.ИмяПредопределенногоВида = "СправочникСтруктурныеЕдиницы";
	Элемент.ИмяПредопределенныхДанных = "СправочникСтруктурныеЕдиницы";
	Элемент.ЭтоГруппа = Истина;
	Элемент.Используется = НеиспользуемаяКонтактнаяИнформация.Найти(Элемент.ИмяПредопределенныхДанных) = Неопределено;
	МультиязычностьСервер.ЗаполнитьМультиязычныйРеквизит(Элемент, "Наименование",
			"ru = 'Контактная информация справочника ""Структурные единицы""'", КодыЯзыков); // @НСтр-1
	
	Элемент = Элементы.Добавить(); 
	Элемент.ИмяПредопределенногоВида = "ТелефонСтруктурнойЕдиницы";
	Элемент.ИмяПредопределенныхДанных = "ТелефонСтруктурнойЕдиницы";
	Элемент.Родитель = Справочники.ВидыКонтактнойИнформации.СправочникСтруктурныеЕдиницы;
	Элемент.Тип = Перечисления.ТипыКонтактнойИнформации.Телефон;
	Элемент.РеквизитДопУпорядочивания = 1;
	Элемент.МожноИзменятьСпособРедактирования = Истина;
	Элемент.ВидРедактирования = "ПолеВводаИДиалог";
	Элемент.ОбязательноеЗаполнение = Ложь;
	Элемент.РазрешитьВводНесколькихЗначений = Истина;
	Элемент.ЗапретитьРедактированиеПользователем = Ложь;
	Элемент.Используется = НеиспользуемаяКонтактнаяИнформация.Найти(Элемент.ИмяПредопределенныхДанных) = Неопределено;
	Элемент.ТелефонCДобавочнымНомером = Истина;
	Элемент.ОтображатьВсегда = Истина;
	МультиязычностьСервер.ЗаполнитьМультиязычныйРеквизит(Элемент, "Наименование",
			"ru = 'Телефон'", КодыЯзыков); // @НСтр-1
	
	Элемент = Элементы.Добавить(); 
	Элемент.ИмяПредопределенногоВида = "ФактАдресСтруктурнойЕдиницы";
	Элемент.ИмяПредопределенныхДанных = "ФактАдресСтруктурнойЕдиницы";
	Элемент.Родитель = Справочники.ВидыКонтактнойИнформации.СправочникСтруктурныеЕдиницы;
	Элемент.Тип = Перечисления.ТипыКонтактнойИнформации.Адрес;
	Элемент.РеквизитДопУпорядочивания = 2;
	Элемент.МожноИзменятьСпособРедактирования = Истина;
	Элемент.ВидРедактирования = "Диалог";
	Элемент.ОбязательноеЗаполнение = Ложь;
	Элемент.РазрешитьВводНесколькихЗначений = Ложь;
	Элемент.ЗапретитьРедактированиеПользователем = Ложь;
	Элемент.Используется = НеиспользуемаяКонтактнаяИнформация.Найти(Элемент.ИмяПредопределенныхДанных) = Неопределено;
	Элемент.ТолькоНациональныйАдрес = Истина;
	Элемент.ПроверятьКорректность = Истина;
	Элемент.СкрыватьНеактуальныеАдреса = Ложь;
	Элемент.ВключатьСтрануВПредставление = Ложь;
	Элемент.ОтображатьВсегда = Истина;
	МультиязычностьСервер.ЗаполнитьМультиязычныйРеквизит(Элемент, "Наименование",
			"ru = 'Факт. адрес'", КодыЯзыков); // @НСтр-1
	
КонецПроцедуры

Процедура ПриНачальномЗаполненииЭлементовПользователи(КодыЯзыков, Элементы, ТабличныеЧасти)
	
	НеиспользуемаяКонтактнаяИнформация = НеиспользуемаяКонтактнаяИнформация();
	
	Элемент = Элементы.Добавить(); 
	Элемент.ИмяПредопределенногоВида = "СправочникПользователи";
	Элемент.ИмяПредопределенныхДанных = "СправочникПользователи";
	Элемент.ЭтоГруппа = Истина;
	Элемент.Используется = НеиспользуемаяКонтактнаяИнформация.Найти(Элемент.ИмяПредопределенныхДанных) = Неопределено;
	МультиязычностьСервер.ЗаполнитьМультиязычныйРеквизит(Элемент, "Наименование",
			"ru = 'Контактная информация справочника ""Пользователи""'", КодыЯзыков); // @НСтр-1
	
	Элемент = Элементы.Добавить(); 
	Элемент.ИмяПредопределенногоВида = "ТелефонПользователя";
	Элемент.ИмяПредопределенныхДанных = "ТелефонПользователя";
	Элемент.Родитель = Справочники.ВидыКонтактнойИнформации.СправочникПользователи;
	Элемент.Тип = Перечисления.ТипыКонтактнойИнформации.Телефон;
	Элемент.РеквизитДопУпорядочивания = 1;
	Элемент.МожноИзменятьСпособРедактирования = Истина;
	Элемент.ВидРедактирования = "ПолеВводаИДиалог";
	Элемент.ОбязательноеЗаполнение = Ложь;
	Элемент.РазрешитьВводНесколькихЗначений = Истина;
	Элемент.ЗапретитьРедактированиеПользователем = Ложь;
	Элемент.Используется = НеиспользуемаяКонтактнаяИнформация.Найти(Элемент.ИмяПредопределенныхДанных) = Неопределено;
	Элемент.ТелефонCДобавочнымНомером = Истина;
	Элемент.ОтображатьВсегда = Истина;
	МультиязычностьСервер.ЗаполнитьМультиязычныйРеквизит(Элемент, "Наименование",
			"ru = 'Телефон'", КодыЯзыков); // @НСтр-1
	
	Элемент = Элементы.Добавить(); 
	Элемент.ИмяПредопределенногоВида = "EmailПользователя";
	Элемент.ИмяПредопределенныхДанных = "EmailПользователя";
	Элемент.Родитель = Справочники.ВидыКонтактнойИнформации.СправочникПользователи;
	Элемент.Тип = Перечисления.ТипыКонтактнойИнформации.АдресЭлектроннойПочты;
	Элемент.РеквизитДопУпорядочивания = 2;
	Элемент.МожноИзменятьСпособРедактирования = Истина;
	Элемент.ВидРедактирования = "ПолеВвода";
	Элемент.ОбязательноеЗаполнение = Ложь;
	Элемент.РазрешитьВводНесколькихЗначений = Истина;
	Элемент.ЗапретитьРедактированиеПользователем = Ложь;
	Элемент.Используется = НеиспользуемаяКонтактнаяИнформация.Найти(Элемент.ИмяПредопределенныхДанных) = Неопределено;
	Элемент.ПроверятьКорректность = Истина;
	Элемент.ОтображатьВсегда = Истина;
	МультиязычностьСервер.ЗаполнитьМультиязычныйРеквизит(Элемент, "Наименование",
			"ru = 'E-mail'", КодыЯзыков); // @НСтр-1
	
	Элемент = Элементы.Добавить(); 
	Элемент.ИмяПредопределенногоВида = "СайтПользователя";
	Элемент.ИмяПредопределенныхДанных = "СайтПользователя";
	Элемент.Родитель = Справочники.ВидыКонтактнойИнформации.СправочникПользователи;
	Элемент.Тип = Перечисления.ТипыКонтактнойИнформации.ВебСтраница;
	Элемент.РеквизитДопУпорядочивания = 3;
	Элемент.МожноИзменятьСпособРедактирования = Истина;
	Элемент.ВидРедактирования = "ПолеВвода";
	Элемент.ОбязательноеЗаполнение = Ложь;
	Элемент.РазрешитьВводНесколькихЗначений = Истина;
	Элемент.ЗапретитьРедактированиеПользователем = Ложь;
	Элемент.Используется = НеиспользуемаяКонтактнаяИнформация.Найти(Элемент.ИмяПредопределенныхДанных) = Неопределено;
	Элемент.ОтображатьВсегда = Истина;
	МультиязычностьСервер.ЗаполнитьМультиязычныйРеквизит(Элемент, "Наименование",
			"ru = 'Сайт'", КодыЯзыков); // @НСтр-1
	
КонецПроцедуры

Процедура ПриНачальномЗаполненииЭлементовВидыДеятельностиЕНВД(КодыЯзыков, Элементы, ТабличныеЧасти)
	
	НеиспользуемаяКонтактнаяИнформация = НеиспользуемаяКонтактнаяИнформация();
	
	Элемент = Элементы.Добавить(); 
	Элемент.ИмяПредопределенногоВида = "СправочникВидыДеятельностиЕНВД";
	Элемент.ИмяПредопределенныхДанных = "СправочникВидыДеятельностиЕНВД";
	Элемент.ЭтоГруппа = Истина;
	Элемент.Используется = НеиспользуемаяКонтактнаяИнформация.Найти(Элемент.ИмяПредопределенныхДанных) = Неопределено;
	МультиязычностьСервер.ЗаполнитьМультиязычныйРеквизит(Элемент, "Наименование",
			"ru = 'Контактная информация справочника ""Виды деятельности ЕНВД""'", КодыЯзыков); // @НСтр-1
	
	Элемент = Элементы.Добавить(); 
	Элемент.ИмяПредопределенногоВида = "АдресДеятельностиЕНВД";
	Элемент.ИмяПредопределенныхДанных = "АдресДеятельностиЕНВД";
	Элемент.Родитель = Справочники.ВидыКонтактнойИнформации.СправочникВидыДеятельностиЕНВД;
	Элемент.Тип = Перечисления.ТипыКонтактнойИнформации.Адрес;
	Элемент.РеквизитДопУпорядочивания = 1;
	Элемент.МожноИзменятьСпособРедактирования = Истина;
	Элемент.ВидРедактирования = "Диалог";
	Элемент.ОбязательноеЗаполнение = Ложь;
	Элемент.РазрешитьВводНесколькихЗначений = Ложь;
	Элемент.ЗапретитьРедактированиеПользователем = Истина;
	Элемент.Используется = НеиспользуемаяКонтактнаяИнформация.Найти(Элемент.ИмяПредопределенныхДанных) = Неопределено;
	Элемент.ТолькоНациональныйАдрес = Истина;
	Элемент.ПроверятьКорректность = Истина;
	Элемент.СкрыватьНеактуальныеАдреса = Истина;
	Элемент.ВключатьСтрануВПредставление = Ложь;
	Элемент.ОтображатьВсегда = Истина;
	МультиязычностьСервер.ЗаполнитьМультиязычныйРеквизит(Элемент, "Наименование",
			"ru = 'Место осуществления деятельности'", КодыЯзыков); // @НСтр-1
	
КонецПроцедуры

Процедура ПриНачальномЗаполненииЭлементовТорговыеТочки(КодыЯзыков, Элементы, ТабличныеЧасти)
	
	НеиспользуемаяКонтактнаяИнформация = НеиспользуемаяКонтактнаяИнформация();
	
	Элемент = Элементы.Добавить(); 
	Элемент.ИмяПредопределенногоВида = "СправочникТорговыеТочки";
	Элемент.ИмяПредопределенныхДанных = "СправочникТорговыеТочки";
	Элемент.ЭтоГруппа = Истина;
	Элемент.Используется = НеиспользуемаяКонтактнаяИнформация.Найти(Элемент.ИмяПредопределенныхДанных) = Неопределено;
	МультиязычностьСервер.ЗаполнитьМультиязычныйРеквизит(Элемент, "Наименование",
			"ru = 'Контактная информация справочника ""Торговые точки""'", КодыЯзыков); // @НСтр-1
	
	Элемент = Элементы.Добавить(); 
	Элемент.ИмяПредопределенногоВида = "АдресТорговойТочки";
	Элемент.ИмяПредопределенныхДанных = "АдресТорговойТочки";
	Элемент.Родитель = Справочники.ВидыКонтактнойИнформации.СправочникТорговыеТочки;
	Элемент.Тип = Перечисления.ТипыКонтактнойИнформации.Адрес;
	Элемент.РеквизитДопУпорядочивания = 1;
	Элемент.МожноИзменятьСпособРедактирования = Истина;
	Элемент.ВидРедактирования = "Диалог";
	Элемент.ОбязательноеЗаполнение = Ложь;
	Элемент.РазрешитьВводНесколькихЗначений = Ложь;
	Элемент.ЗапретитьРедактированиеПользователем = Истина;
	Элемент.Используется = НеиспользуемаяКонтактнаяИнформация.Найти(Элемент.ИмяПредопределенныхДанных) = Неопределено;
	Элемент.ТолькоНациональныйАдрес = Истина;
	Элемент.ПроверятьКорректность = Истина;
	Элемент.СкрыватьНеактуальныеАдреса = Истина;
	Элемент.ВключатьСтрануВПредставление = Ложь;
	Элемент.УказыватьОКТМО = Истина;
	Элемент.ОтображатьВсегда = Истина;
	МультиязычностьСервер.ЗаполнитьМультиязычныйРеквизит(Элемент, "Наименование",
			"ru = 'Адрес торговой точки'", КодыЯзыков); // @НСтр-1
	
КонецПроцедуры

Процедура ПриНачальномЗаполненииЭлементовЛиды(КодыЯзыков, Элементы, ТабличныеЧасти)
	
	НеиспользуемаяКонтактнаяИнформация = НеиспользуемаяКонтактнаяИнформация();
	
	Элемент = Элементы.Добавить(); 
	Элемент.ИмяПредопределенногоВида = "СправочникЛиды";
	Элемент.ИмяПредопределенныхДанных = "СправочникЛиды";
	Элемент.ЭтоГруппа = Истина;
	Элемент.Используется = НеиспользуемаяКонтактнаяИнформация.Найти(Элемент.ИмяПредопределенныхДанных) = Неопределено;
	МультиязычностьСервер.ЗаполнитьМультиязычныйРеквизит(Элемент, "Наименование",
			"ru = 'Контактная информация справочника ""Лиды""'", КодыЯзыков); // @НСтр-1
	
	Элемент = Элементы.Добавить(); 
	Элемент.ИмяПредопределенногоВида = "ТелефонКомпанииЛида";
	Элемент.ИмяПредопределенныхДанных = "ТелефонКомпанииЛида";
	Элемент.Родитель = Справочники.ВидыКонтактнойИнформации.СправочникЛиды;
	Элемент.Тип = Перечисления.ТипыКонтактнойИнформации.Телефон;
	Элемент.РеквизитДопУпорядочивания = 1;
	Элемент.МожноИзменятьСпособРедактирования = Истина;
	Элемент.ВидРедактирования = "ПолеВводаИДиалог";
	Элемент.ОбязательноеЗаполнение = Ложь;
	Элемент.РазрешитьВводНесколькихЗначений = Истина;
	Элемент.ЗапретитьРедактированиеПользователем = Ложь;
	Элемент.Используется = НеиспользуемаяКонтактнаяИнформация.Найти(Элемент.ИмяПредопределенныхДанных) = Неопределено;
	Элемент.ТелефонCДобавочнымНомером = Истина;
	Элемент.ОтображатьВсегда = Истина;
	МультиязычностьСервер.ЗаполнитьМультиязычныйРеквизит(Элемент, "Наименование",
			"ru = 'Телефон'", КодыЯзыков); // @НСтр-1
	
	Элемент = Элементы.Добавить(); 
	Элемент.ИмяПредопределенногоВида = "EmailКомпанииЛида";
	Элемент.ИмяПредопределенныхДанных = "EmailКомпанииЛида";
	Элемент.Родитель = Справочники.ВидыКонтактнойИнформации.СправочникЛиды;
	Элемент.Тип = Перечисления.ТипыКонтактнойИнформации.АдресЭлектроннойПочты;
	Элемент.РеквизитДопУпорядочивания = 2;
	Элемент.МожноИзменятьСпособРедактирования = Истина;
	Элемент.ВидРедактирования = "ПолеВвода";
	Элемент.ОбязательноеЗаполнение = Ложь;
	Элемент.РазрешитьВводНесколькихЗначений = Истина;
	Элемент.ЗапретитьРедактированиеПользователем = Ложь;
	Элемент.Используется = НеиспользуемаяКонтактнаяИнформация.Найти(Элемент.ИмяПредопределенныхДанных) = Неопределено;
	Элемент.ПроверятьКорректность = Истина;
	Элемент.ОтображатьВсегда = Истина;
	МультиязычностьСервер.ЗаполнитьМультиязычныйРеквизит(Элемент, "Наименование",
			"ru = 'E-mail'", КодыЯзыков); // @НСтр-1
	
	Элемент = Элементы.Добавить(); 
	Элемент.ИмяПредопределенногоВида = "ЮрАдресКомпанииЛида";
	Элемент.ИмяПредопределенныхДанных = "ЮрАдресКомпанииЛида";
	Элемент.Родитель = Справочники.ВидыКонтактнойИнформации.СправочникЛиды;
	Элемент.Тип = Перечисления.ТипыКонтактнойИнформации.Адрес;
	Элемент.РеквизитДопУпорядочивания = 3;
	Элемент.МожноИзменятьСпособРедактирования = Истина;
	Элемент.ВидРедактирования = "ПолеВводаИДиалог";
	Элемент.ОбязательноеЗаполнение = Ложь;
	Элемент.РазрешитьВводНесколькихЗначений = Ложь;
	Элемент.ЗапретитьРедактированиеПользователем = Ложь;
	Элемент.Используется = НеиспользуемаяКонтактнаяИнформация.Найти(Элемент.ИмяПредопределенныхДанных) = Неопределено;
	Элемент.ТолькоНациональныйАдрес = Ложь;
	Элемент.ПроверятьКорректность = Ложь;
	Элемент.СкрыватьНеактуальныеАдреса = Ложь;
	Элемент.ВключатьСтрануВПредставление = Ложь;
	Элемент.ОтображатьВсегда = Истина;
	МультиязычностьСервер.ЗаполнитьМультиязычныйРеквизит(Элемент, "Наименование",
			"ru = 'Юр. адрес'", КодыЯзыков); // @НСтр-1
	
	Элемент = Элементы.Добавить(); 
	Элемент.ИмяПредопределенногоВида = "ФактАдресКомпанииЛида";
	Элемент.ИмяПредопределенныхДанных = "ФактАдресКомпанииЛида";
	Элемент.Родитель = Справочники.ВидыКонтактнойИнформации.СправочникЛиды;
	Элемент.Тип = Перечисления.ТипыКонтактнойИнформации.Адрес;
	Элемент.РеквизитДопУпорядочивания = 4;
	Элемент.МожноИзменятьСпособРедактирования = Истина;
	Элемент.ВидРедактирования = "ПолеВводаИДиалог";
	Элемент.ОбязательноеЗаполнение = Ложь;
	Элемент.РазрешитьВводНесколькихЗначений = Ложь;
	Элемент.ЗапретитьРедактированиеПользователем = Ложь;
	Элемент.Используется = НеиспользуемаяКонтактнаяИнформация.Найти(Элемент.ИмяПредопределенныхДанных) = Неопределено;
	Элемент.ТолькоНациональныйАдрес = Ложь;
	Элемент.ПроверятьКорректность = Ложь;
	Элемент.СкрыватьНеактуальныеАдреса = Ложь;
	Элемент.ВключатьСтрануВПредставление = Ложь;
	Элемент.ОтображатьВсегда = Истина;
	МультиязычностьСервер.ЗаполнитьМультиязычныйРеквизит(Элемент, "Наименование",
			"ru = 'Факт. адрес'", КодыЯзыков); // @НСтр-1
	
	Элемент = Элементы.Добавить(); 
	Элемент.ИмяПредопределенногоВида = "SkypeКомпанииЛида";
	Элемент.ИмяПредопределенныхДанных = "SkypeКомпанииЛида";
	Элемент.Родитель = Справочники.ВидыКонтактнойИнформации.СправочникЛиды;
	Элемент.Тип = Перечисления.ТипыКонтактнойИнформации.Skype;
	Элемент.РеквизитДопУпорядочивания = 5;
	Элемент.МожноИзменятьСпособРедактирования = Истина;
	Элемент.ВидРедактирования = "ПолеВвода";
	Элемент.ОбязательноеЗаполнение = Ложь;
	Элемент.РазрешитьВводНесколькихЗначений = Ложь;
	Элемент.ЗапретитьРедактированиеПользователем = Ложь;
	Элемент.Используется = НеиспользуемаяКонтактнаяИнформация.Найти(Элемент.ИмяПредопределенныхДанных) = Неопределено;
	МультиязычностьСервер.ЗаполнитьМультиязычныйРеквизит(Элемент, "Наименование",
			"ru = 'Skype'", КодыЯзыков); // @НСтр-1
	
	Элемент = Элементы.Добавить(); 
	Элемент.ИмяПредопределенногоВида = "ВебСайтКомпанииЛида";
	Элемент.ИмяПредопределенныхДанных = "ВебСайтКомпанииЛида";
	Элемент.Родитель = Справочники.ВидыКонтактнойИнформации.СправочникЛиды;
	Элемент.Тип = Перечисления.ТипыКонтактнойИнформации.ВебСтраница;
	Элемент.РеквизитДопУпорядочивания = 6;
	Элемент.МожноИзменятьСпособРедактирования = Истина;
	Элемент.ВидРедактирования = "ПолеВвода";
	Элемент.ОбязательноеЗаполнение = Ложь;
	Элемент.РазрешитьВводНесколькихЗначений = Ложь;
	Элемент.ЗапретитьРедактированиеПользователем = Ложь;
	Элемент.Используется = НеиспользуемаяКонтактнаяИнформация.Найти(Элемент.ИмяПредопределенныхДанных) = Неопределено;
	МультиязычностьСервер.ЗаполнитьМультиязычныйРеквизит(Элемент, "Наименование",
			"ru = 'Сайт'", КодыЯзыков); // @НСтр-1
	
	Элемент = Элементы.Добавить(); 
	Элемент.ИмяПредопределенногоВида = "ДругаяИнформацияКомпанииЛида";
	Элемент.ИмяПредопределенныхДанных = "ДругаяИнформацияКомпанииЛида";
	Элемент.Родитель = Справочники.ВидыКонтактнойИнформации.СправочникЛиды;
	Элемент.Тип = Перечисления.ТипыКонтактнойИнформации.Другое;
	Элемент.ВидПоляДругое = "ОднострочноеШирокое";
	Элемент.РеквизитДопУпорядочивания = 7;
	Элемент.МожноИзменятьСпособРедактирования = Истина;
	Элемент.ВидРедактирования = "ПолеВвода";
	Элемент.ОбязательноеЗаполнение = Ложь;
	Элемент.РазрешитьВводНесколькихЗначений = Ложь;
	Элемент.ЗапретитьРедактированиеПользователем = Ложь;
	Элемент.Используется = НеиспользуемаяКонтактнаяИнформация.Найти(Элемент.ИмяПредопределенныхДанных) = Неопределено;
	МультиязычностьСервер.ЗаполнитьМультиязычныйРеквизит(Элемент, "Наименование",
			"ru = 'Другое'", КодыЯзыков); // @НСтр-1
	
КонецПроцедуры

Процедура ПриНачальномЗаполненииЭлементовКонтактыЛидов(КодыЯзыков, Элементы, ТабличныеЧасти)
	
	НеиспользуемаяКонтактнаяИнформация = НеиспользуемаяКонтактнаяИнформация();
	
	Элемент = Элементы.Добавить(); 
	Элемент.ИмяПредопределенногоВида = "СправочникКонтактыЛидов";
	Элемент.ИмяПредопределенныхДанных = "СправочникКонтактыЛидов";
	Элемент.ЭтоГруппа = Истина;
	Элемент.Используется = НеиспользуемаяКонтактнаяИнформация.Найти(Элемент.ИмяПредопределенныхДанных) = Неопределено;
	МультиязычностьСервер.ЗаполнитьМультиязычныйРеквизит(Элемент, "Наименование",
			"ru = 'Контактная информация справочника ""Контакты лидов""'", КодыЯзыков); // @НСтр-1
	
	Элемент = Элементы.Добавить(); 
	Элемент.ИмяПредопределенногоВида = "ТелефонКонтактаЛида";
	Элемент.ИмяПредопределенныхДанных = "ТелефонКонтактаЛида";
	Элемент.Родитель = Справочники.ВидыКонтактнойИнформации.СправочникКонтактыЛидов;
	Элемент.Тип = Перечисления.ТипыКонтактнойИнформации.Телефон;
	Элемент.РеквизитДопУпорядочивания = 1;
	Элемент.МожноИзменятьСпособРедактирования = Истина;
	Элемент.ВидРедактирования = "ПолеВводаИДиалог";
	Элемент.ОбязательноеЗаполнение = Ложь;
	Элемент.РазрешитьВводНесколькихЗначений = Истина;
	Элемент.ЗапретитьРедактированиеПользователем = Ложь;
	Элемент.Используется = НеиспользуемаяКонтактнаяИнформация.Найти(Элемент.ИмяПредопределенныхДанных) = Неопределено;
	Элемент.ТелефонCДобавочнымНомером = Истина;
	Элемент.ОтображатьВсегда = Истина;
	МультиязычностьСервер.ЗаполнитьМультиязычныйРеквизит(Элемент, "Наименование",
			"ru = 'Телефон'", КодыЯзыков); // @НСтр-1
	
	Элемент = Элементы.Добавить(); 
	Элемент.ИмяПредопределенногоВида = "EmailКонтактаЛида";
	Элемент.ИмяПредопределенныхДанных = "EmailКонтактаЛида";
	Элемент.Родитель = Справочники.ВидыКонтактнойИнформации.СправочникКонтактыЛидов;
	Элемент.Тип = Перечисления.ТипыКонтактнойИнформации.АдресЭлектроннойПочты;
	Элемент.РеквизитДопУпорядочивания = 2;
	Элемент.МожноИзменятьСпособРедактирования = Истина;
	Элемент.ВидРедактирования = "ПолеВвода";
	Элемент.ОбязательноеЗаполнение = Ложь;
	Элемент.РазрешитьВводНесколькихЗначений = Истина;
	Элемент.ЗапретитьРедактированиеПользователем = Ложь;
	Элемент.Используется = НеиспользуемаяКонтактнаяИнформация.Найти(Элемент.ИмяПредопределенныхДанных) = Неопределено;
	Элемент.ПроверятьКорректность = Истина;
	Элемент.ОтображатьВсегда = Истина;
	МультиязычностьСервер.ЗаполнитьМультиязычныйРеквизит(Элемент, "Наименование",
			"ru = 'E-mail'", КодыЯзыков); // @НСтр-1
	
	Элемент = Элементы.Добавить(); 
	Элемент.ИмяПредопределенногоВида = "SkypeКонтактаЛида";
	Элемент.ИмяПредопределенныхДанных = "SkypeКонтактаЛида";
	Элемент.Родитель = Справочники.ВидыКонтактнойИнформации.СправочникКонтактыЛидов;
	Элемент.Тип = Перечисления.ТипыКонтактнойИнформации.Skype;
	Элемент.РеквизитДопУпорядочивания = 3;
	Элемент.МожноИзменятьСпособРедактирования = Истина;
	Элемент.ВидРедактирования = "ПолеВвода";
	Элемент.ОбязательноеЗаполнение = Ложь;
	Элемент.РазрешитьВводНесколькихЗначений = Ложь;
	Элемент.ЗапретитьРедактированиеПользователем = Ложь;
	Элемент.Используется = НеиспользуемаяКонтактнаяИнформация.Найти(Элемент.ИмяПредопределенныхДанных) = Неопределено;
	МультиязычностьСервер.ЗаполнитьМультиязычныйРеквизит(Элемент, "Наименование",
			"ru = 'Skype'", КодыЯзыков); // @НСтр-1
	
	Элемент = Элементы.Добавить(); 
	Элемент.ИмяПредопределенногоВида = "СоциальнаяСетьКонтактаЛида";
	Элемент.ИмяПредопределенныхДанных = "СоциальнаяСетьКонтактаЛида";
	Элемент.Родитель = Справочники.ВидыКонтактнойИнформации.СправочникКонтактыЛидов;
	Элемент.Тип = Перечисления.ТипыКонтактнойИнформации.ВебСтраница;
	Элемент.РеквизитДопУпорядочивания = 4;
	Элемент.МожноИзменятьСпособРедактирования = Истина;
	Элемент.ВидРедактирования = "ПолеВвода";
	Элемент.ОбязательноеЗаполнение = Ложь;
	Элемент.РазрешитьВводНесколькихЗначений = Истина;
	Элемент.ЗапретитьРедактированиеПользователем = Ложь;
	Элемент.Используется = НеиспользуемаяКонтактнаяИнформация.Найти(Элемент.ИмяПредопределенныхДанных) = Неопределено;
	МультиязычностьСервер.ЗаполнитьМультиязычныйРеквизит(Элемент, "Наименование",
			"ru = 'Социальная сеть'", КодыЯзыков); // @НСтр-1
	
	Элемент = Элементы.Добавить(); 
	Элемент.ИмяПредопределенногоВида = "МессенджерКонтактаЛида";
	Элемент.ИмяПредопределенныхДанных = "МессенджерКонтактаЛида";
	Элемент.Родитель = Справочники.ВидыКонтактнойИнформации.СправочникКонтактыЛидов;
	Элемент.Тип = Перечисления.ТипыКонтактнойИнформации.Другое;
	Элемент.ВидПоляДругое = "ОднострочноеШирокое";
	Элемент.РеквизитДопУпорядочивания = 5;
	Элемент.МожноИзменятьСпособРедактирования = Истина;
	Элемент.ВидРедактирования = "ПолеВвода";
	Элемент.ОбязательноеЗаполнение = Ложь;
	Элемент.РазрешитьВводНесколькихЗначений = Истина;
	Элемент.ЗапретитьРедактированиеПользователем = Ложь;
	Элемент.Используется = НеиспользуемаяКонтактнаяИнформация.Найти(Элемент.ИмяПредопределенныхДанных) = Неопределено;
	МультиязычностьСервер.ЗаполнитьМультиязычныйРеквизит(Элемент, "Наименование",
			"ru = 'Мессенджер'", КодыЯзыков); // @НСтр-1
	
КонецПроцедуры

Процедура ПриНачальномЗаполненииЭлементовПунктыВыдачиЗаказа(КодыЯзыков, Элементы, ТабличныеЧасти)
	
	НеиспользуемаяКонтактнаяИнформация = НеиспользуемаяКонтактнаяИнформация();
	
	Элемент = Элементы.Добавить(); 
	Элемент.ИмяПредопределенногоВида = "СправочникПунктыВыдачиЗаказа";
	Элемент.ИмяПредопределенныхДанных = "СправочникПунктыВыдачиЗаказа";
	Элемент.ЭтоГруппа = Истина;
	Элемент.Используется = НеиспользуемаяКонтактнаяИнформация.Найти(Элемент.ИмяПредопределенныхДанных) = Неопределено;
	МультиязычностьСервер.ЗаполнитьМультиязычныйРеквизит(Элемент, "Наименование",
			"ru = 'Контактная информация справочника ""Пункты выдачи заказа""'", КодыЯзыков); // @НСтр-1
	
	Элемент = Элементы.Добавить(); 
	Элемент.ИмяПредопределенногоВида = "АдресПунктаВыдачиЗаказа";
	Элемент.ИмяПредопределенныхДанных = "АдресПунктаВыдачиЗаказа";
	Элемент.Родитель = Справочники.ВидыКонтактнойИнформации.СправочникПунктыВыдачиЗаказа;
	Элемент.Тип = Перечисления.ТипыКонтактнойИнформации.Адрес;
	Элемент.РеквизитДопУпорядочивания = 1;
	Элемент.МожноИзменятьСпособРедактирования = Истина;
	Элемент.ВидРедактирования = "Диалог";
	Элемент.ОбязательноеЗаполнение = Ложь;
	Элемент.РазрешитьВводНесколькихЗначений = Ложь;
	Элемент.ЗапретитьРедактированиеПользователем = Истина;
	Элемент.Используется = НеиспользуемаяКонтактнаяИнформация.Найти(Элемент.ИмяПредопределенныхДанных) = Неопределено;
	Элемент.ТолькоНациональныйАдрес = Ложь;
	Элемент.ПроверятьКорректность = Ложь;
	Элемент.СкрыватьНеактуальныеАдреса = Ложь;
	Элемент.ВключатьСтрануВПредставление = Истина;
	Элемент.ОтображатьВсегда = Истина;
	МультиязычностьСервер.ЗаполнитьМультиязычныйРеквизит(Элемент, "Наименование",
			"ru = 'Адрес'", КодыЯзыков); // @НСтр-1
	
КонецПроцедуры

Функция НеиспользуемаяКонтактнаяИнформация()
	
	Если ОбщегоНазначенияУНФ.ЭтоРозница() Тогда
		Возврат НеиспользуемаяКонтактнаяИнформацияРозница();
	ИначеЕсли ОбщегоНазначенияУНФ.ЭтоУНФ() Тогда
		Возврат НеиспользуемаяКонтактнаяИнформацияУНФ();
	Иначе
		Возврат Новый Массив;
	КонецЕсли;
	
КонецФункции

Функция НеиспользуемаяКонтактнаяИнформацияРозница()
	
	КонтактнаяИнформация = Новый Массив;
	КонтактнаяИнформация.Добавить("СправочникЛиды");
	КонтактнаяИнформация.Добавить("СправочникКонтактыЛидов");
	КонтактнаяИнформация.Добавить("EmailКомпанииЛида");
	КонтактнаяИнформация.Добавить("SkypeКомпанииЛида");
	КонтактнаяИнформация.Добавить("ДругаяИнформацияКомпанииЛида");
	КонтактнаяИнформация.Добавить("ВебСайтКомпанииЛида");
	КонтактнаяИнформация.Добавить("ТелефонКомпанииЛида");
	КонтактнаяИнформация.Добавить("ФактАдресКомпанииЛида");
	КонтактнаяИнформация.Добавить("EmailКонтактаЛида");
	КонтактнаяИнформация.Добавить("SkypeКонтактаЛида");
	КонтактнаяИнформация.Добавить("МессенджерКонтактаЛида");
	КонтактнаяИнформация.Добавить("СоциальнаяСетьКонтактаЛида");
	КонтактнаяИнформация.Добавить("ТелефонКонтактаЛида");
	Возврат КонтактнаяИнформация;
	
КонецФункции

Функция НеиспользуемаяКонтактнаяИнформацияУНФ()
	
	КонтактнаяИнформация = Новый Массив;
	Возврат КонтактнаяИнформация;
	
КонецФункции

Функция ОтображаемыеКонтактнаяИнформацияФизическихЛиц()
	
	КонтактнаяИнформация = Новый Массив;
	КонтактнаяИнформация.Добавить("EmailФизическиеЛица");
	КонтактнаяИнформация.Добавить("АдресПоПропискеФизическиеЛица");
	КонтактнаяИнформация.Добавить("ТелефонФизЛица");
	Возврат КонтактнаяИнформация;
	
КонецФункции

Процедура СнятьИзбыточныйПризнакОтображатьВсегдаБиблиотечныхВидовКИ()
	
	Запрос = Новый Запрос;
	Запрос.Текст =
	"ВЫБРАТЬ
	|	ВидыКонтактнойИнформации.Ссылка КАК Ссылка,
	|	ВидыКонтактнойИнформации.ИмяПредопределенногоВида КАК ИмяПредопределенногоВида,
	|	ВидыКонтактнойИнформации.ОтображатьВсегда КАК ОтображатьВсегда
	|ИЗ
	|	Справочник.ВидыКонтактнойИнформации КАК ВидыКонтактнойИнформации
	|ГДЕ
	|	ВидыКонтактнойИнформации.Родитель = &Родитель";
	Запрос.УстановитьПараметр("Родитель", Справочники.ВидыКонтактнойИнформации.СправочникФизическиеЛица);
	
	ОтображаемыеВидыКИ = ОтображаемыеКонтактнаяИнформацияФизическихЛиц();
	ВидыКонтактнойИнформации = Запрос.Выполнить().Выбрать();
	Пока ВидыКонтактнойИнформации.Следующий() Цикл
		Если ВидыКонтактнойИнформации.ОтображатьВсегда
			И ОтображаемыеВидыКИ.Найти(ВидыКонтактнойИнформации.ИмяПредопределенногоВида) <> Неопределено Тогда
			Продолжить;
		КонецЕсли;
		ВидКонтактнойИнформации = УправлениеКонтактнойИнформацией.ВидКонтактнойИнформацииПоИмени(ВидыКонтактнойИнформации.ИмяПредопределенногоВида);
		Если ВидКонтактнойИнформации = Неопределено Тогда
			Продолжить;
		КонецЕсли;
		ВидКонтактнойИнформацииОбъект = ВидКонтактнойИнформации.ПолучитьОбъект();
		ВидКонтактнойИнформацииОбъект.ОтображатьВсегда = Ложь;
		ОбновлениеИнформационнойБазы.ЗаписатьДанные(ВидКонтактнойИнформацииОбъект);
	КонецЦикла;
	
КонецПроцедуры

Процедура СнятьПризнакИспользуетсяНеиспользуемыхВидовКИ()
	
	Запрос = Новый Запрос;
	Запрос.Текст =
	"ВЫБРАТЬ
	|	ВидыКонтактнойИнформации.Ссылка КАК Ссылка,
	|	ВидыКонтактнойИнформации.ИмяПредопределенногоВида КАК ИмяПредопределенногоВида
	|ИЗ
	|	Справочник.ВидыКонтактнойИнформации КАК ВидыКонтактнойИнформации";
	
	НеиспользуемаяКонтактнаяИнформация = НеиспользуемаяКонтактнаяИнформация();
	ВидыКонтактнойИнформации = Запрос.Выполнить().Выбрать();
	Пока ВидыКонтактнойИнформации.Следующий() Цикл
		Если НеиспользуемаяКонтактнаяИнформация.Найти(ВидыКонтактнойИнформации.ИмяПредопределенногоВида) = Неопределено Тогда
			Продолжить;
		КонецЕсли;
		ВидКонтактнойИнформации = УправлениеКонтактнойИнформацией.ВидКонтактнойИнформацииПоИмени(ВидыКонтактнойИнформации.ИмяПредопределенногоВида);
		Если ВидКонтактнойИнформации = Неопределено Тогда
			Продолжить;
		КонецЕсли;
		ВидКонтактнойИнформацииОбъект = ВидКонтактнойИнформации.ПолучитьОбъект();
		ВидКонтактнойИнформацииОбъект.Используется = Ложь;
		ОбновлениеИнформационнойБазы.ЗаписатьДанные(ВидКонтактнойИнформацииОбъект);
	КонецЦикла;
	
КонецПроцедуры

Процедура ОбновитьВидыКИРозницаУНФ(Используется)
	
	НеиспользуемаяКонтактнаяИнформацияРозница = НеиспользуемаяКонтактнаяИнформацияРозница();
	Для каждого ИмяКонтактнойИнформации Из НеиспользуемаяКонтактнаяИнформацияРозница Цикл
		ВидКонтактнойИнформации = УправлениеКонтактнойИнформацией.ВидКонтактнойИнформацииПоИмени(ИмяКонтактнойИнформации);
		Если ВидКонтактнойИнформации = Неопределено Тогда
			Продолжить;
		КонецЕсли;
		ВидКонтактнойИнформацииОбъект = ВидКонтактнойИнформации.ПолучитьОбъект();
		ВидКонтактнойИнформацииОбъект.Используется = Используется;
		ОбновлениеИнформационнойБазы.ЗаписатьДанные(ВидКонтактнойИнформацииОбъект);
	КонецЦикла;
	
КонецПроцедуры

#КонецОбласти

Процедура ПереопределитьКнопкуДобавитьПолеВвода(Форма, ИмяЭлементаДляРазмещения)
	
	ИмяКоманды = СтрШаблон("КонтактнаяИнформацияДобавитьПолеВвода%1", ИмяЭлементаДляРазмещения);
	ИмяГруппы = СтрШаблон("ГруппаКонтактнаяИнформацияДобавитьПолеВвода%1", ИмяЭлементаДляРазмещения);
	
	// Кнопку "+ Телефон, адрес" всегда отображать в виде гиперссылки, а не обычной кнопки.
	КнопкаДобавитьПолеВвода = Форма.Элементы.Найти(ИмяКоманды);
	Если КнопкаДобавитьПолеВвода <> Неопределено Тогда
		КнопкаДобавитьПолеВвода.ОтображениеФигуры = ОтображениеФигурыКнопки.Нет;
	КонецЕсли;
	
	КомандаДобавитьПолеВвода = Форма.Элементы.Найти(ИмяКоманды);
	Если КомандаДобавитьПолеВвода <> Неопределено Тогда
		КомандаДобавитьПолеВвода.Отображение = ОтображениеКнопки.Текст;
	КонецЕсли;
	
	ГруппаДобавитьПолеВвода = Форма.Элементы.Найти(ИмяГруппы);
	Если ГруппаДобавитьПолеВвода <> Неопределено
		И ТипЗнч(ГруппаДобавитьПолеВвода) = Тип("ГруппаФормы") Тогда
		// Кнопку "+ Телефон, адрес" всегда располагать справа.
		ГруппаДобавитьПолеВвода.Отображение = ОтображениеОбычнойГруппы.Нет;
		ГруппаДобавитьПолеВвода.ГоризонтальноеПоложениеВГруппе = ГоризонтальноеПоложениеЭлемента.Право;
		// Для вертикального выравнивания убрать заглушку-декорацию, которая появляется в случае если у последнего поля КИ нет ни одной команды.
		Для каждого ЭлементФормы Из ГруппаДобавитьПолеВвода.ПодчиненныеЭлементы Цикл
			Если ТипЗнч(ЭлементФормы) = Тип("ДекорацияФормы")
				И ЭлементФормы.Заголовок = НСтр("ru='Отступ'") Тогда
				ЭлементФормы.Видимость = Ложь;
			КонецЕсли;
		КонецЦикла;
	КонецЕсли;
	
КонецПроцедуры

Процедура ПереопределитьСвойстваПолейВводаРекурсивно(Форма, ПодчиненныеЭлементы, НастройкиПереопределения)
	
	Для каждого ЭлементФормы Из ПодчиненныеЭлементы Цикл
		Если ТипЗнч(ЭлементФормы) = Тип("ГруппаФормы") Тогда
			ПереопределитьСвойстваПолейВводаРекурсивно(Форма, ЭлементФормы.ПодчиненныеЭлементы, НастройкиПереопределения);
		Иначе
			ПереопределитьСвойстваПоляВвода(Форма, ЭлементФормы, НастройкиПереопределения);
		КонецЕсли;
	КонецЦикла;
	
КонецПроцедуры

Процедура ПереопределитьСвойстваПоляВвода(Форма, ЭлементФормы, НастройкиПереопределения)
	
	Если ТипЗнч(ЭлементФормы) <> Тип("ПолеФормы") Тогда
		Возврат;
	КонецЕсли;
	
	Если Не (ЭлементФормы.Вид = ВидПоляФормы.ПолеВвода
		Или ЭлементФормы.Вид = ВидПоляФормы.ПолеНадписи) Тогда
		Возврат;
	КонецЕсли;
	
	Если Не НастройкиПереопределения.ИспользоватьСтандартнуюШирину Тогда
		Если ЭлементФормы.Заголовок = НСтр("ru='Комментарий'") Тогда
			ЭлементФормы.Ширина = НастройкиПереопределения.ШиринаКомментария;
			ЭлементФормы.МаксимальнаяШирина = НастройкиПереопределения.ШиринаКомментария;
			ЭлементФормы.РастягиватьПоГоризонтали = Ложь;
		ИначеЕсли НастройкиПереопределения.РастягиватьПоГоризонталиПоляВвода Тогда
			ЭлементФормы.ВысотаЗаголовка = 0;
			ЭлементФормы.Ширина = 0;
			ЭлементФормы.МаксимальнаяШирина = 0;
			ЭлементФормы.АвтоМаксимальнаяШирина = Ложь;
			ЭлементФормы.РастягиватьПоГоризонтали = Истина;
			РасширеннаяПодсказкаЭлементаФормы = Форма.Элементы.Найти(ЭлементФормы.Имя + "РасширеннаяПодсказка");
			Если РасширеннаяПодсказкаЭлементаФормы <> Неопределено Тогда
				РасширеннаяПодсказкаЭлементаФормы.Ширина = 0;
			КонецЕсли;
			Если НастройкиПереопределения.ГоризонтальноеПоложениеВГруппе <> Неопределено
				И ЭлементФормы.ГоризонтальноеПоложениеВГруппе <> НастройкиПереопределения.ГоризонтальноеПоложениеВГруппе Тогда
				ЭлементФормы.ГоризонтальноеПоложениеВГруппе = НастройкиПереопределения.ГоризонтальноеПоложениеВГруппе;
			КонецЕсли;
		КонецЕсли;
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти
