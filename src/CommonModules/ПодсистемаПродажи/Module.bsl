
#Область ПрограммныйИнтерфейс

// См. ОбновлениеИнформационнойБазыУНФ.ОбновлениеРозницыДоУНФ
Процедура ОбновлениеРозницыДоУНФ() Экспорт
	
	УстановитьКонстантыОбновленияРозницыДоУНФ();
	ЗаполнитьДанныеПриПереходеСРозницы();
	
КонецПроцедуры

// Процедура выполняет первоначальное заполнение данных подсистемы и включение функциональности при первом запуске приложения
//
Процедура ПриПервомЗапуске() Экспорт
	
	УстановитьКонстантыНачальногоЗаполнения();
	ПервоначальноеЗаполнениеОбъектовПодсистемы();
		
КонецПроцедуры

// Процедура выполняет первоначальное заполнение данных подсистемы
//
Процедура ПервоначальноеЗаполнениеОбъектовПодсистемы() Экспорт
	
	// Создание шаблонов наименований для предопределенной категории.
	ШаблоныНаименований.СоздатьШаблоныПоУмолчанию(Справочники.КатегорииНоменклатуры.БезКатегории);
	
КонецПроцедуры

// Процедура выполняет первоначальное включение функциональности подсистемы
//
Процедура УстановитьКонстантыНачальногоЗаполнения() Экспорт
	
	РежимЗапускаУНФ = Константы.ТекущийРежимЗапускаУНФ.Получить();
	ЭтоРозница 		= ВозможностиПриложения.ЭтоРозница();
	ЭтоУНФ 			= ВозможностиПриложения.ЭтоУНФ();
	
	ЭтоНастольноеПриложениеУНФ 	= ЭтоУНФ И РежимЗапускаУНФ = Перечисления.РежимыЗапускаУНФ.НастольноеПриложение;	
	
	// Использование нового РМК.
	Константы.ИспользоватьНовоеРМК.Установить(Истина);
	Константы.ИспользоватьТолькоНовыйРМК.Установить(Истина);
	
	Если ЭтоУНФ Тогда
		// Установим признак контроля остатков при пробитии чеков ККМ.
		Константы.КонтролироватьОстаткиПриПробитииЧековККМ.Установить(Истина);
		
		// Заполнение констант ДатаНачалаРегистрацииРозничныхПродажВЕГАИС и ДатаНачалаРегистрацииРозничныхПродажВЕГАИСВСельскойМестности
		ИнтеграцияЕГАИСУНФ.УстановитьКонстантыЕГАИС();
		
		// Константы прайс-листа
		Константы.ПрайсЛистВыводитьКод.Установить(Перечисления.ДаНет.Да);
		Константы.ПрайсЛистВыводитьПолноеНаименование.Установить(Перечисления.ДаНет.Нет);
		Константы.ПрайсЛистИспользоватьИерархиюНоменклатуры.Установить(Истина);
		Константы.ПрайсЛистФормироватьПоНаличиюНаСкладах.Установить(Ложь);
		
		// Настройка вида КИ для ПФ Товарный чек
		КИТоварногоЧека = Перечисления.КонтактнаяИнформацияТоварногоЧека.ОрганизацияИСтруктурнаяЕдиница;
		Константы.КонтактнаяИнформацияТоварногоЧека.Установить(КИТоварногоЧека);
		
		Константы.ИспользоватьАктыВыполненныхРабот.Установить(Истина);
		Константы.ИспользоватьПроцессыСостояний.Установить(Истина);
		
		Если ЭтоНастольноеПриложениеУНФ Тогда
			Константы.ИспользоватьПодсистемуПродажи.Установить(Истина); 
			Константы.ИспользоватьВидыЦен.Установить(Истина);
			Константы.ИспользоватьАналогиНоменклатуры.Установить(Истина);
			Константы.ОтображатьДокументыПоПродажам.Установить(Истина);
			Константы.ОтображатьПереходКСпискуНоменклатурыВГлавном.Установить(Истина);
		КонецЕсли;
		
	КонецЕсли;
	
	Если ЭтоРозница Тогда
		// Установим признак контроля остатков при пробитии чеков ККМ.
		Константы.КонтролироватьОстаткиПриПробитииЧековККМ.Установить(Истина);
		
		// Константы прайс-листа
		Константы.ПрайсЛистВыводитьКод.Установить(Перечисления.ДаНет.Да);
		Константы.ПрайсЛистВыводитьПолноеНаименование.Установить(Перечисления.ДаНет.Нет);
		Константы.ПрайсЛистИспользоватьИерархиюНоменклатуры.Установить(Истина);
		Константы.ПрайсЛистФормироватьПоНаличиюНаСкладах.Установить(Ложь);
		
		Константы.ФункциональнаяОпцияУчетРозничныхПродаж.Установить(Истина);
		Константы.ИспользоватьПодсистемуПродажи.Установить(Истина); 
		Константы.ИспользоватьВидыЦен.Установить(Истина);
		Константы.ИспользоватьАналогиНоменклатуры.Установить(Истина);
		Константы.ОтображатьДокументыПоПродажам.Установить(Истина);
		Константы.ОтображатьПереходКСпискуНоменклатурыВГлавном.Установить(Истина);
		Константы.СчетУчетаЗапасовДляНоменклатурыПоУмолчанию.Установить(ПланыСчетов.Управленческий.ТоварыПродукция);
		
		// Настройка вида КИ для ПФ Товарный чек
		КИТоварногоЧека = Перечисления.КонтактнаяИнформацияТоварногоЧека.ОрганизацияИСтруктурнаяЕдиница;
		Константы.КонтактнаяИнформацияТоварногоЧека.Установить(КИТоварногоЧека);
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

Процедура УстановитьКонстантыОбновленияРозницыДоУНФ()
	Константы.ИспользоватьАктыВыполненныхРабот.Установить(Истина);
	Константы.ИспользоватьПроцессыСостояний.Установить(Истина);
КонецПроцедуры

Процедура ЗаполнитьДанныеПриПереходеСРозницы()
	Возврат;
КонецПроцедуры

#КонецОбласти