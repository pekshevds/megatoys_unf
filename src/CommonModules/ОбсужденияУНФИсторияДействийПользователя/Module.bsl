
#Область СлужебныйПрограммныйИнтерфейс

// Записывает данные об изменениях объекта по подписке на событие.
// См. ПодпискиНаСобытия.ОбсужденияПередЗаписьюДокумента, ПодпискиНаСобытия.ОбсужденияПередЗаписьюСправочника.
// 
// Параметры:
//  Источник			   - Ссылка объекта, для которого будут записаны данные обсуждений
//  Отказ				   - Отказ записи
//  РежимЗаписи			   - Режим записи объекта
//  РежимПроведения		   - Режим проведения объекта
//   Если объект новый и еще не сохранен, запись обсуждений передается в процедуру ОбсужденияПриЗаписи, где уже есть
//   ссылка объекта
// В ДополнительныеСвойства передаются параметры: 
//	Модифицированность		- модифицированность объекта в форме
Процедура ОбсужденияПередЗаписью(Источник, Отказ, РежимЗаписи, РежимПроведения) Экспорт
	
	Если Источник.ОбменДанными.Загрузка Тогда
		Возврат;
	КонецЕсли;
	
	Если Отказ Тогда
		Возврат;
	КонецЕсли;
	
	Если НЕ ОбсужденияУНФ.ЛогироватьИзмененияОбъектовВОбсуждении() Тогда
		Возврат;
	КонецЕсли;
	
	ЛогироватьДействия = Истина;
	ОбсужденияУНФПереопределяемый.ОбсужденияПередЗаписью(Источник, РежимЗаписи, РежимПроведения, ЛогироватьДействия);
	
	Если ЛогироватьДействия <> Истина Тогда
		Возврат;
	КонецЕсли;
	
	Источник.ДополнительныеСвойства.Вставить("ДляОбсуждений", Новый Структура);
	Источник.ДополнительныеСвойства.ДляОбсуждений.Вставить("ЭтоНовый", Источник.ЭтоНовый());
	Источник.ДополнительныеСвойства.ДляОбсуждений.Вставить("Сообщения", Новый Массив);
	
	ПодготовитьСообщениеПередЗаписью(Источник, РежимЗаписи, РежимПроведения);
	
КонецПроцедуры

// Записывает данные об изменениях объекта по подписке на событие.
// См. ПодпискиНаСобытия.ОбсужденияПриЗаписи.
// 
// Параметры:
//  Источник			   - Ссылка объекта, для которого будут записаны данные обсуждений
//  Отказ				   - Отказ записи
// Дополнительно формируются записи: 
//		при наличии поля "Контрагент" - формируется запись в обсуждениях контрагента об упоминании в этом объекте
//		при вводе на основании - формируется запись о введенном дочернем объекте в обсуждении для родительского объекта
Процедура ОбсужденияПриЗаписи(Источник, Отказ) Экспорт
	
	Если Источник.ОбменДанными.Загрузка Тогда
		Возврат;
	КонецЕсли;
	
	Если Отказ Тогда
		Возврат;
	КонецЕсли;
	
	Если НЕ ОбсужденияУНФ.ЛогироватьИзмененияОбъектовВОбсуждении() Тогда
		Возврат;
	КонецЕсли;
	
	Если Источник.ДополнительныеСвойства.Свойство("ГрупповаяЗагрузкаДанных") Тогда
		Возврат;
	КонецЕсли;
	
	Если Источник.ДополнительныеСвойства.Свойство("ЭтоЗаписьАссистентом") Тогда
		Возврат;
	КонецЕсли;
	
	ПодготовитьСообщениеПриЗаписи(Источник);
	
КонецПроцедуры

Процедура ДобавитьОписаниеИзменений(ОписаниеИзменений, ТекстИзменений, Синоним = "") Экспорт
	
	ДобавитьСтроку(ОписаниеИзменений, Синоним + ": " + ТекстИзменений);
	
КонецПроцедуры

Процедура ДобавитьСистемноеСообщение(ТекстСообщения, Ссылка) Экспорт
	
	Если ПустаяСтрока(ТекстСообщения) Тогда
		Возврат;
	КонецЕсли;
	
	Если Не ЗначениеЗаполнено(Ссылка) Тогда
		Возврат;
	КонецЕсли;
	
	Если Не ОбсужденияУНФ.ЛогироватьИзмененияОбъектовВОбсуждении() Тогда
		Возврат;
	КонецЕсли;
	
	Автор = Пользователи.АвторизованныйПользователь();
	
	ДанныеСообщения = ОбсужденияУНФ.НовыйДанныеСообщения();
	ДанныеСообщения.Объект = Ссылка;
	ДанныеСообщения.Текст = ТекстСообщения;
	ДанныеСообщения.Дата = ТекущаяДатаСеанса();
	ДанныеСообщения.Автор = Автор;
	ДанныеСообщения.Системный = Истина;
	
	ОбсужденияУНФ.СоздатьСообщениеОтложенно(ДанныеСообщения);
	
КонецПроцедуры

Функция ДобавитьСообщениеОбИзмененииРеквизита(СтароеЗначение = Неопределено, НовоеЗначение = Неопределено, Формат = "") Экспорт
	
	// Текст описания изменения формируется автоматически
	Если СтароеЗначение<>Неопределено ИЛИ НовоеЗначение<>Неопределено Тогда
		Если Документы.ТипВсеСсылки().СодержитТип(ТипЗнч(СтароеЗначение)) 
			ИЛИ Справочники.ТипВсеСсылки().СодержитТип(ТипЗнч(СтароеЗначение))
			Тогда
			ТекстСтарыйОбъект = ПредставлениеСсылки(СтароеЗначение);
		ИначеЕсли НЕ ПустаяСтрока(Формат) Тогда 
			ТекстСтарыйОбъект = Формат(СтароеЗначение, Формат);
		Иначе
			ТекстСтарыйОбъект = Строка(СтароеЗначение);
		КонецЕсли; 
		Если Документы.ТипВсеСсылки().СодержитТип(ТипЗнч(НовоеЗначение)) 
			ИЛИ Справочники.ТипВсеСсылки().СодержитТип(ТипЗнч(НовоеЗначение))
			Тогда
			ТекстНовыйОбъект = ПредставлениеСсылки(НовоеЗначение);
		ИначеЕсли НЕ ПустаяСтрока(Формат) Тогда 
			ТекстНовыйОбъект = Формат(НовоеЗначение, Формат);
		Иначе
			ТекстНовыйОбъект = Строка(НовоеЗначение)
		КонецЕсли; 
	КонецЕсли; 
	
	ТекстИзменений = "";
	Если СтароеЗначение<>Неопределено ИЛИ НовоеЗначение<>Неопределено Тогда
		Если СтрДлина(Строка(СтароеЗначение) + Строка(НовоеЗначение)) > ДлинаСообщения() Тогда
			ТекстИзменений = ТекстСтарыйОбъект + Символы.ПС + "→" + Символы.ПС + ТекстНовыйОбъект;
		Иначе
			ТекстИзменений = ТекстСтарыйОбъект + " → " + ТекстНовыйОбъект;
		КонецЕсли;
	Иначе
		ТекстИзменений = "";
	КонецЕсли;
	
	Возврат ТекстИзменений;
	
КонецФункции

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

Процедура ПодготовитьСообщениеПередЗаписью(Источник, РежимЗаписи, РежимПроведения)
	
	Если Источник.ДополнительныеСвойства.ДляОбсуждений.ЭтоНовый Тогда
		Возврат;
	КонецЕсли;
	
	Если ОбщегоНазначения.ЭтоДокумент(Источник.Метаданные()) Тогда
		Сообщение = ОбсужденияСравнитьОбъектыДокумент(Источник, РежимЗаписи, РежимПроведения);
	ИначеЕсли ОбщегоНазначения.ЭтоСправочник(Источник.Метаданные()) Тогда
		Сообщение = ОбсужденияСравнитьОбъектыСправочник(Источник);
	Иначе
		Сообщение = "";
	КонецЕсли;
	
	Если ПустаяСтрока(Сообщение) Тогда
		Возврат;
	КонецЕсли;
	
	ДобавитьСистемноеСообщение(Сообщение, Источник.Ссылка);
	
КонецПроцедуры

Процедура ПодготовитьСообщениеПриЗаписи(Источник)
	
	Если Не Источник.ДополнительныеСвойства.Свойство("ДляОбсуждений") Тогда
		Возврат;
	КонецЕсли;
	
	ЭтоНовый = Неопределено;
	Источник.ДополнительныеСвойства.ДляОбсуждений.Свойство("ЭтоНовый", ЭтоНовый);
	
	Если ЭтоНовый = Истина Тогда
		Если ОбщегоНазначения.ЭтоДокумент(Источник.Метаданные()) Тогда
			Сообщение = ?(Источник.Проведен, НСтр("ru = 'Создан и проведен'"), НСтр("ru = 'Создан'"));
		Иначе
			Сообщение = НСтр("ru = 'Создан'");
		КонецЕсли;
		
		Если Источник.ДополнительныеСвойства.Свойство("ЭтоЗаписьДубля") Тогда
			ДобавитьСтроку(Сообщение, Источник.ДополнительныеСвойства.СообщениеОДублированииИнформации);
		КонецЕсли;
		
		ДобавитьСистемноеСообщение(Сообщение, Источник.Ссылка);
		ДобавитьЗаписьУпоминаниеКонтрагента(,Источник);
		ДобавитьЗаписьВводНаОсновании(Источник);
	КонецЕсли;
	
КонецПроцедуры

// Задает длину текстового сообщения, начиная с которой оставшееся сообщение обрезается до трех точек, 
// и будет записано в виде ссылки на полное сообщение в справочник СообщенияОбсуждений
Функция ДлинаСообщения()
	
	Возврат 100;
	
КонецФункции

Процедура ПриДобавленииСообщенияОбИзменииСтандартныхСвойствДокумента(СтарыйОбъект, НовыйОбъект, РежимЗаписи, СтрокиСообщения)
	
	Если НЕ СтарыйОбъект.Проведен И РежимЗаписи=РежимЗаписиДокумента.Проведение Тогда
		СтрокиСообщения.Добавить(НСтр("ru = 'Проведен'"));
	КонецЕсли; 
	
	Если СтарыйОбъект.Проведен И РежимЗаписи=РежимЗаписиДокумента.ОтменаПроведения Тогда
		СтрокиСообщения.Добавить(НСтр("ru = 'Проведение отменено'"));
	КонецЕсли; 
	
	Если НЕ СтарыйОбъект.ПометкаУдаления И НовыйОбъект.ПометкаУдаления Тогда
		СтрокиСообщения.Добавить(НСтр("ru = 'Помечен на удаление'"));
	КонецЕсли; 
	
	Если СтарыйОбъект.ПометкаУдаления И НЕ НовыйОбъект.ПометкаУдаления Тогда
		СтрокиСообщения.Добавить(НСтр("ru = 'Снята пометка на удаление'"));
	КонецЕсли;
	
КонецПроцедуры

Процедура ПриПодготовкеОписанияИзмененийРеквизитов(СтруктураПроверяемыхРеквизитов, СтарыйОбъект, НовыйОбъект, СтрокиСообщения)
	
	МетаданныеОбъекта = НовыйОбъект.Метаданные();
	ОписаниеИзменений = "";
	
	Для каждого Реквизит Из СтруктураПроверяемыхРеквизитов Цикл
		
		Если СтарыйОбъект[Реквизит.Ключ]=НовыйОбъект[Реквизит.Ключ] Тогда
			Продолжить;
		КонецЕсли;
		
		// Текст описания изменения формируется автоматически
		Синоним = ПредставлениеРеквизита(МетаданныеОбъекта, Реквизит.Ключ);
		СтароеЗначение = СтарыйОбъект[Реквизит.Ключ];
		НовоеЗначение = НовыйОбъект[Реквизит.Ключ];
		
		ТекстИзменений = ДобавитьСообщениеОбИзмененииРеквизита(СтароеЗначение, НовоеЗначение);
		
		// Сокращение текста сообщения
		Если ТипЗнч(СтароеЗначение) = Тип("Строка") 
			И СтрДлина(Строка(СтароеЗначение) + Строка(НовоеЗначение)) > ДлинаСообщения() Тогда
			Сокращение = СократитьТекстСообщения(ТекстИзменений, НовыйОбъект, Синоним+": ");
		КонецЕсли;
		
		ДобавитьОписаниеИзменений(ОписаниеИзменений, ТекстИзменений, Синоним);
	
	КонецЦикла;
	
	Если Не ПустаяСтрока(ОписаниеИзменений) Тогда
		СтрокиСообщения.Добавить(ОписаниеИзменений);
	КонецЕсли;
	
КонецПроцедуры

Функция ПредставлениеРеквизита(МетаданныеОбъекта, Имя)
	
	Реквизит=МетаданныеОбъекта.Реквизиты.Найти(Имя);
	Если НЕ Реквизит=Неопределено Тогда
		Возврат ?(ПустаяСтрока(Реквизит.Синоним), Реквизит.Имя, Реквизит.Синоним);
	КонецЕсли;
	
	Для каждого Реквизит Из МетаданныеОбъекта.СтандартныеРеквизиты Цикл
		Если Реквизит.Имя=Имя Тогда
			Возврат ?(ПустаяСтрока(Реквизит.Синоним), Реквизит.Имя, Реквизит.Синоним);
		КонецЕсли; 
	КонецЦикла;
	
	Возврат Имя;
	
КонецФункции

Функция ПредставлениеСсылки(Ссылка)
	
	Если НЕ ЗначениеЗаполнено(Ссылка) Тогда
		Возврат "";
	КонецЕсли;
	
	Возврат ПолучитьНавигационнуюСсылку(Ссылка);
	
КонецФункции

Функция ОписаниеИзмененийРеквизитов(СтруктураРеквизитов, СтарыйОбъект, НовыйОбъект)
	
	МетаданныеОбъекта = НовыйОбъект.Метаданные();
	ОписаниеИзменений = "";
	
	ИзмененДоговор = Ложь;
	ИзмененКонтрагент = Ложь;
	
	Для каждого Реквизит Из СтруктураРеквизитов Цикл
		
		Если СтарыйОбъект[Реквизит.Ключ]=НовыйОбъект[Реквизит.Ключ] Тогда
			Продолжить;
		КонецЕсли;

		// Текст описания изменения формируется автоматически
		Синоним = ПредставлениеРеквизита(МетаданныеОбъекта, Реквизит.Ключ);
		СтароеЗначение = СтарыйОбъект[Реквизит.Ключ];
		НовоеЗначение = НовыйОбъект[Реквизит.Ключ];
		
		// Не выводим договор, если он был изменен вместе с контрагентом
		Если Реквизит.Ключ = "Договор" Тогда
			ИзмененДоговор = Истина;
			Продолжить;
		КонецЕсли; 
		Если Реквизит.Ключ = "Контрагент" Тогда
			ИзмененКонтрагент = Истина;
		КонецЕсли; 
		
		ТекстИзменений = ДобавитьСообщениеОбИзмененииРеквизита(СтароеЗначение, НовоеЗначение);
		
		// Сокращение текста сообщения
		Если ТипЗнч(СтароеЗначение) = Тип("Строка") 
			И СтрДлина(Строка(СтароеЗначение) + Строка(НовоеЗначение)) > ДлинаСообщения() Тогда
			
			Сокращение = СократитьТекстСообщения(ТекстИзменений, НовыйОбъект, Синоним+": ");
			
			Если НЕ НовыйОбъект.ДополнительныеСвойства.ДляОбсуждений.Свойство("Сокращение") Тогда
				НовыйОбъект.ДополнительныеСвойства.ДляОбсуждений.Вставить("Сокращения", Новый Соответствие);
			КонецЕсли;
			Если ЗначениеЗаполнено(Сокращение) Тогда
				НовыйОбъект.ДополнительныеСвойства.ДляОбсуждений.Сокращения.Вставить(Сокращение);
			КонецЕсли;
		КонецЕсли;
		
		ДобавитьОписаниеИзменений(ОписаниеИзменений, ТекстИзменений, Синоним);
	
	КонецЦикла;
	
	Если СтруктураРеквизитов.Свойство("Договор") И НЕ ИзмененКонтрагент И СтарыйОбъект.Договор <> НовыйОбъект.Договор Тогда
		ТекстИзменений = ДобавитьСообщениеОбИзмененииРеквизита(СтарыйОбъект.Договор, НовыйОбъект.Договор);
		ДобавитьОписаниеИзменений(ОписаниеИзменений, ТекстИзменений, Синоним);
	КонецЕсли;
	
	Возврат ОписаниеИзменений;
	
КонецФункции

Функция ОписаниеИзмененийКонтактнойИнформации(СтарыйОбъект, НовыйОбъект)
	
	Если НовыйОбъект.Метаданные().ТабличныеЧасти.Найти("КонтактнаяИнформация") = Неопределено Тогда
		Возврат "";
	КонецЕсли;
	
	СтараяТЧ = СтарыйОбъект.КонтактнаяИнформация.Выгрузить();
	НоваяТЧ = НовыйОбъект.КонтактнаяИнформация;
	
	МассивСтарыхЗначений = СтараяТЧ.ВыгрузитьКолонку("Представление");
	МассивНовыхЗначений = НоваяТЧ.ВыгрузитьКолонку("Представление");
	
	ТекстИзменений = ОписаниеСравненияМассивов(МассивСтарыхЗначений, МассивНовыхЗначений);
	
	Если НЕ ПустаяСтрока(ТекстИзменений) Тогда
		ТекстИзменений = НСтр("ru = 'Контактная информация: '") + ТекстИзменений;
	КонецЕсли;
	
	Возврат ТекстИзменений;
	
КонецФункции

Функция ОписаниеСравненияМассивов(МассивСтарыхЗначений, МассивНовыхЗначений)
	
	Результат = "";
	
	СписокДобавленных = Новый СписокЗначений;
	СписокУдаленных = Новый СписокЗначений;
	Для каждого Элемент Из МассивСтарыхЗначений Цикл
		Если МассивНовыхЗначений.Найти(Элемент)=Неопределено И СписокУдаленных.НайтиПоЗначению(Элемент)=Неопределено Тогда
			СписокУдаленных.Добавить(Элемент);
		КонецЕсли; 
	КонецЦикла; 
	Для каждого Элемент Из МассивНовыхЗначений Цикл
		Если МассивСтарыхЗначений.Найти(Элемент)=Неопределено И СписокДобавленных.НайтиПоЗначению(Элемент)=Неопределено Тогда
			СписокДобавленных.Добавить(Элемент);
		КонецЕсли; 
	КонецЦикла;
	
	Если СписокДобавленных.Количество() = 0 И СписокУдаленных.Количество() = 0 Тогда
		Возврат "";
	КонецЕсли;
	
	Если СписокДобавленных.Количество() > 0 И СписокУдаленных.Количество() > 0 Тогда
		Результат = НСтр("ru='Удалены: %1, Добавлены: %2'");
		Результат = СтрШаблон(Результат, Строка(СписокУдаленных), Строка(СписокДобавленных));
		Возврат Результат;
	КонецЕсли; 
	
	Если СписокУдаленных.Количество() > 0 Тогда
		Результат = НСтр("ru = 'Удалены: %1'");
		Результат = СтрШаблон(Результат, Строка(СписокУдаленных));
	КонецЕсли;
	
	Если СписокДобавленных.Количество() > 0 Тогда
		Результат = НСтр("ru = 'Добавлены: %1'");
		Результат = СтрШаблон(Результат, Строка(СписокДобавленных));
	КонецЕсли;
	
	Возврат Результат;
	
КонецФункции

Функция ОбсужденияСравнитьОбъектыСправочник(НовыйОбъект)
	
	СтруктураПроверяемыхРеквизитов = РеквизитыДляПроверкиИзмененийСправочник(НовыйОбъект);
	СтарыйОбъект = ДанныеСправочникаВыборка(НовыйОбъект, СтруктураПроверяемыхРеквизитов);
	
	Сообщение = "";
	Если НЕ СтарыйОбъект.ПометкаУдаления И НовыйОбъект.ПометкаУдаления Тогда
		Сообщение = НСтр("ru = 'Помечен на удаление'");
	КонецЕсли; 
	
	Если СтарыйОбъект.ПометкаУдаления И НЕ НовыйОбъект.ПометкаУдаления Тогда
		Сообщение = НСтр("ru = 'Снята пометка на удаление'");
	КонецЕсли;
	
	ЕстьРеквизитНедействителен = СтруктураПроверяемыхРеквизитов.Свойство("Недействителен") И ТипЗнч(СтарыйОбъект.Недействителен) = Тип("Булево");
	
	Если ЕстьРеквизитНедействителен И НЕ СтарыйОбъект.Недействителен И НовыйОбъект.Недействителен Тогда
		Сообщение = НСтр("ru = 'Помечен недействительным'");
		СтруктураПроверяемыхРеквизитов.Удалить("Недействителен");
	КонецЕсли;
	
	Если ЕстьРеквизитНедействителен И СтарыйОбъект.Недействителен И НЕ НовыйОбъект.Недействителен Тогда
		Сообщение = НСтр("ru = 'Снята пометка недействителен'");
		СтруктураПроверяемыхРеквизитов.Удалить("Недействителен");
	КонецЕсли;
	
	Если НовыйОбъект.ДополнительныеСвойства.Свойство("ЭтоЗаписьДубля") Тогда
		ДобавитьСтроку(Сообщение, НовыйОбъект.ДополнительныеСвойства.СообщениеОДублированииИнформации);
	КонецЕсли;
	
	ОписаниеИзменений = ОписаниеИзмененийРеквизитов(СтруктураПроверяемыхРеквизитов, СтарыйОбъект, НовыйОбъект);
	ОписаниеИзмененийКИ = ОписаниеИзмененийКонтактнойИнформации(СтарыйОбъект, НовыйОбъект);
	
	ДобавитьСтроку(Сообщение, ОписаниеИзменений);
	ДобавитьСтроку(Сообщение, ОписаниеИзмененийКИ);
	
	ДобавитьЗаписьУпоминаниеКонтрагента(СтарыйОбъект, НовыйОбъект);
	
	Возврат Сообщение;
	
КонецФункции

Функция ОбсужденияСравнитьОбъектыДокумент(НовыйОбъект, РежимЗаписи, РежимПроведения)
	
	СтрокиСообщения = Новый Массив;
	СтруктураПроверяемыхРеквизитов = РеквизитыДляПроверкиИзмененийДокумент(НовыйОбъект);
	СтарыйОбъект = ДанныеДокументаВыборка(НовыйОбъект, СтруктураПроверяемыхРеквизитов);
	
	ПриДобавленииСообщенияОбИзменииСтандартныхСвойствДокумента(СтарыйОбъект, НовыйОбъект, РежимЗаписи, СтрокиСообщения);
	
	ЭтоИзменениеОбъектаПользователемИзФормы = Ложь;
	Если НовыйОбъект.ДополнительныеСвойства.Свойство("Модифицированность") Тогда
		ЭтоИзменениеОбъектаПользователемИзФормы = НовыйОбъект.ДополнительныеСвойства.Модифицированность;
	КонецЕсли;
	
	Если ЭтоИзменениеОбъектаПользователемИзФормы Тогда
		ОбсужденияУНФПереопределяемый.ПриПодготовкеОписанияИзмененийРеквизитовДокумента(СтруктураПроверяемыхРеквизитов, СтарыйОбъект, НовыйОбъект, СтрокиСообщения);
		ПриПодготовкеОписанияИзмененийРеквизитов(СтруктураПроверяемыхРеквизитов, СтарыйОбъект, НовыйОбъект, СтрокиСообщения);
	КонецЕсли;
	
	Если СтрокиСообщения.Количество() <> 0 Тогда
		ТекстСообщения = СтрСоединить(СтрокиСообщения, Символы.ПС);
	ИначеЕсли ЭтоИзменениеОбъектаПользователемИзФормы Тогда
		ТекстСообщения = НСтр("ru = 'Изменен документ'");
	Иначе
		ТекстСообщения = "";
	КонецЕсли;
	
	ДобавитьЗаписьУпоминаниеКонтрагента(СтарыйОбъект, НовыйОбъект);
	
	Возврат ТекстСообщения;
	
КонецФункции

Процедура ДобавитьЗаписьУпоминаниеКонтрагента(СтарыйОбъект=Неопределено, НовыйОбъект)
	
	Если Не ОбщегоНазначенияКлиентСервер.ЕстьРеквизитИлиСвойствоОбъекта(НовыйОбъект, "Контрагент") Тогда
		Возврат;
	КонецЕсли;
	
	Если СтарыйОбъект = Неопределено Тогда
		// Вызов из несохраненного документа.
		Сообщение = НСтр("ru='Добавлен в: %1'");
		Сообщение = СтрШаблон(Сообщение, ПредставлениеСсылки(НовыйОбъект.Ссылка));
		ДобавитьСистемноеСообщение(Сообщение, НовыйОбъект.Контрагент);
		Возврат;
	КонецЕсли;
	
	Если Не ОбщегоНазначенияКлиентСервер.ЕстьРеквизитИлиСвойствоОбъекта(СтарыйОбъект, "Контрагент") Тогда
		Возврат;
	КонецЕсли;
	
	Если СтарыйОбъект.Контрагент = НовыйОбъект.Контрагент Тогда
		Возврат;
	КонецЕсли;
	
	Сообщение = НСтр("ru = 'Добавлен в: %1'");
	Сообщение = СтрШаблон(Сообщение, ПредставлениеСсылки(НовыйОбъект.Ссылка));
	ДобавитьСистемноеСообщение(Сообщение, НовыйОбъект.Контрагент);
	
	Сообщение = НСтр("ru = 'Удален из: %1'");
	Сообщение = СтрШаблон(Сообщение, ПредставлениеСсылки(СтарыйОбъект.Ссылка));
	ДобавитьСистемноеСообщение(Сообщение, СтарыйОбъект.Контрагент);
	
КонецПроцедуры

Функция ПолучитьРодительскийДокумент(ДокументСсылка)
	
	МетаданныеДокумента = ДокументСсылка.Метаданные();
	СписокРеквизитов = Новый СписокЗначений;
	мУжеВСписке = Новый Соответствие;
	
	Для Каждого Реквизит Из МетаданныеДокумента.Реквизиты Цикл
		ТипыРеквизита = Реквизит.Тип.Типы();
		Для Каждого ТекущийТип Из ТипыРеквизита Цикл
			МетаданныеРеквизита = Метаданные.НайтиПоТипу(ТекущийТип);
			
			Если МетаданныеРеквизита<>Неопределено И Метаданные.Документы.Содержит(МетаданныеРеквизита) 
				 И ПравоДоступа("Чтение", МетаданныеРеквизита) Тогда
				Попытка
					ЗначениеРеквизита = ДокументСсылка[Реквизит.Имя];
				Исключение
					Прервать;
				КонецПопытки;
				Если ЗначениеРеквизита<>Неопределено И НЕ ЗначениеРеквизита.Пустая() И ТипЗнч(ЗначениеРеквизита) = ТекущийТип 
					 И мУжеВСписке[ЗначениеРеквизита] = Неопределено И СписокРеквизитов.НайтиПоЗначению(ДокументСсылка[Реквизит.Имя]) = Неопределено Тогда
					Попытка
						СписокРеквизитов.Добавить(ЗначениеРеквизита,Формат(ЗначениеРеквизита.Дата,"ДФ=yyyyMMddЧЧММсс"));
					Исключение
						ИнформацияОбОшибке = ИнформацияОбОшибке();
						ОтладкаТекстОшибки = ПодробноеПредставлениеОшибки(ИнформацияОбОшибке);
					КонецПопытки;
				КонецЕсли;
			КонецЕсли;
			
		КонецЦикла;
	КонецЦикла;
	
	Для Каждого ТЧ Из МетаданныеДокумента.ТабличныеЧасти Цикл
		
		Если МетаданныеДокумента = Метаданные.Документы.СверкаВзаиморасчетов Тогда
			
			Прервать;
			
		КонецЕсли;
		
		СтрРеквизитов = "";
		
		Попытка
			СодержимоеТЧ = ДокументСсылка[ТЧ.Имя].Выгрузить();
		Исключение
			Прервать;
		КонецПопытки;
		
		Для Каждого Реквизит Из ТЧ.Реквизиты Цикл
			ТипыРеквизита = Реквизит.Тип.Типы();
			Для Каждого ТекущийТип Из ТипыРеквизита Цикл
				МетаданныеРеквизита = Метаданные.НайтиПоТипу(ТекущийТип);
				Если МетаданныеРеквизита<>Неопределено И Метаданные.Документы.Содержит(МетаданныеРеквизита) 
					И ПравоДоступа("Чтение", МетаданныеРеквизита) Тогда
					СтрРеквизитов = СтрРеквизитов + ?(СтрРеквизитов = "", "", ", ") + Реквизит.Имя;
					Прервать;
				КонецЕсли;
			КонецЦикла;
		КонецЦикла;
		
		СодержимоеТЧ.Свернуть(СтрРеквизитов);
		Для Каждого КолонкаТЧ Из СодержимоеТЧ.Колонки Цикл
			Для Каждого СтрокаТЧ Из СодержимоеТЧ Цикл
				Попытка
					ЗначениеРеквизита = СтрокаТЧ[КолонкаТЧ.Имя];
				Исключение
					Продолжить;
				КонецПопытки;
				МетаданныеЗначения = Метаданные.НайтиПоТипу(ТипЗнч(ЗначениеРеквизита));
				Если МетаданныеЗначения = Неопределено Тогда
					// Базовый тип.
					Продолжить;
				КонецЕсли;
				
				Если ЗначениеРеквизита<>Неопределено И НЕ ЗначениеРеквизита.Пустая()
					 И Метаданные.Документы.Содержит(МетаданныеЗначения)
					 И мУжеВСписке[ЗначениеРеквизита] = Неопределено Тогда
					Если СписокРеквизитов.НайтиПоЗначению(ЗначениеРеквизита) = Неопределено Тогда
						Попытка
							СписокРеквизитов.Добавить(ЗначениеРеквизита,Формат(ЗначениеРеквизита.Дата,"ДФ=yyyyMMddЧЧММсс"));
						Исключение
							ИнформацияОбОшибке = ИнформацияОбОшибке();
							ОтладкаТекстОшибки = ПодробноеПредставлениеОшибки(ИнформацияОбОшибке);
						КонецПопытки;
					КонецЕсли;
				КонецЕсли;
			КонецЦикла;
		КонецЦикла;
	КонецЦикла;
	
	Возврат СписокРеквизитов;
	
КонецФункции

Процедура ДобавитьЗаписьВводНаОсновании(Источник)
	
	СписокДокументовОснований = Новый СписокЗначений;
	
	Если ОбщегоНазначенияКлиентСервер.ЕстьРеквизитИлиСвойствоОбъекта(Источник, "ДокументОснование")
		И ЗначениеЗаполнено(Источник.ДокументОснование) Тогда
		СписокДокументовОснований.Добавить(Источник.ДокументОснование);
	Иначе
		СписокДокументовОснований = ПолучитьРодительскийДокумент(Источник.Ссылка);
	КонецЕсли;
	
	Если СписокДокументовОснований.Количество() = 0 Тогда
		Возврат;
	КонецЕсли;
	
	Сообщение = НСтр("ru = 'Использован в: %1'");
	Сообщение = СтрШаблон(Сообщение, ПредставлениеСсылки(Источник.Ссылка));
	Для каждого Документ Из СписокДокументовОснований Цикл
		ДокументОснование = Документ.Значение;
		ДобавитьСистемноеСообщение(Сообщение, ДокументОснование);
	КонецЦикла; 
	
КонецПроцедуры

Функция РеквизитыДляПроверкиИзмененийДокумент(ДокументОбъект)
	
	ВсеРеквизиты = УправлениеНебольшойФирмойПовтИсп.ПроверяемыеРеквизитыОбсуждения();
	РеквизитыДокумента = "";
	ИмяДокумента = ДокументОбъект.Метаданные().Имя;
	
	Если ВсеРеквизиты.Свойство(ИмяДокумента) Тогда
		РеквизитыДокумента = ВсеРеквизиты[ИмяДокумента];	
	КонецЕсли;
	
	Возврат Новый Структура(РеквизитыДокумента);
	
КонецФункции

Функция ДанныеСправочникаВыборка(СправочникОбъект, СтруктураПроверяемыхРеквизитов)
	
	ТекстПолей = "";
	Для каждого КлючИЗначение Из СтруктураПроверяемыхРеквизитов Цикл
		
		ИмяПоля = КлючИЗначение.Ключ;
		ТекстПолей  = ТекстПолей + "
		|	," + ИмяПоля + " КАК " + ИмяПоля;
		
	КонецЦикла;
	
	ТекстТабличнойЧасти = "";
	Если СправочникОбъект.Метаданные().ТабличныеЧасти.Найти("КонтактнаяИнформация")<>Неопределено Тогда
		Если СправочникОбъект.Метаданные().ТабличныеЧасти.КонтактнаяИнформация.Реквизиты.Найти("Представление") <> Неопределено Тогда
			ТекстТабличнойЧасти = " 
			| ,КонтактнаяИнформация.(
			|		Представление КАК Представление
			|)";
		КонецЕсли;
	КонецЕсли;
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("Ссылка", СправочникОбъект.Ссылка);
	Запрос.Текст =
	"ВЫБРАТЬ
	|Ссылка КАК Ссылка,
	|ПометкаУдаления КАК ПометкаУдаления
	|" + ТекстПолей + "
	|
	|" + ТекстТабличнойЧасти + "
	|ИЗ
	|	" + СправочникОбъект.Метаданные().ПолноеИмя() + " КАК ПсевдонимЗаданнойТаблицы
	|ГДЕ
	|	ПсевдонимЗаданнойТаблицы.Ссылка = &Ссылка
	|";
	Выборка = Запрос.Выполнить().Выбрать();
	Выборка.Следующий();
	
	Возврат Выборка;
	
КонецФункции

Функция ДанныеДокументаВыборка(ДокументОбъект, СтруктураПроверяемыхРеквизитов)
	
	ТекстПолей = "";
	Для каждого КлючИЗначение Из СтруктураПроверяемыхРеквизитов Цикл
		
		ИмяПоля = КлючИЗначение.Ключ;
		ТекстПолей  = ТекстПолей + ?(ПустаяСтрока(ТекстПолей), "", ",") + "
		|	" + ИмяПоля + " КАК " + ИмяПоля;
		
	КонецЦикла;
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("Ссылка", ДокументОбъект.Ссылка);
	Запрос.Текст =
	"ВЫБРАТЬ
	|Ссылка КАК Ссылка,
	|Проведен КАК Проведен,
	|ПометкаУдаления КАК ПометкаУдаления,
	|" + ТекстПолей + "
	|
	|ИЗ
	|	" + ДокументОбъект.Метаданные().ПолноеИмя() + " КАК ПсевдонимЗаданнойТаблицы
	|ГДЕ
	|	ПсевдонимЗаданнойТаблицы.Ссылка = &Ссылка
	|";
	Выборка = Запрос.Выполнить().Выбрать();
	Выборка.Следующий();
	
	Возврат Выборка;
	
КонецФункции

Функция РеквизитыДляПроверкиИзмененийСправочник(СправочникОбъект)
	
	СтруктураПроверяемыхРеквизитов = Новый Структура("
	|Наименование,
	|Комментарий,
	|ИНН,
	|КПП,
	|Контрагент,
	|Договор,
	|Ответственный,
	|НаименованиеПолное,
	|ВестиРасчетыПоДоговорам,
	|ВестиРасчетыПоДокументам,
	|ВестиРасчетыПоЗаказам,
	|ВестиУчетОплатыПоСчетам,
	|ВидКонтрагента,
	|СостояниеЛида,
	|Недействителен");
	
	РеквизитыСправочника = СправочникОбъект.Метаданные().Реквизиты;
	СтандартныеРеквизитыСправочника = СправочникОбъект.Метаданные().СтандартныеРеквизиты;
	РеквизитыКУдалению = Новый Массив;
	Для каждого КлючИЗначение Из СтруктураПроверяемыхРеквизитов Цикл
		Если НоменклатураВДокументахКлиентСервер.ЕстьРеквизитОбъекта(КлючИЗначение.Ключ, СтандартныеРеквизитыСправочника) = Истина Тогда
			Продолжить;
		КонецЕсли;
		Если РеквизитыСправочника.Найти(КлючИЗначение.Ключ) <> Неопределено Тогда
			Продолжить;
		КонецЕсли;
		РеквизитыКУдалению.Добавить(КлючИЗначение.Ключ);
	КонецЦикла;
	
	Для каждого УдаляемыйРеквизит Из РеквизитыКУдалению Цикл
		СтруктураПроверяемыхРеквизитов.Удалить(УдаляемыйРеквизит);
	КонецЦикла;
	
	Возврат СтруктураПроверяемыхРеквизитов;
	
КонецФункции

Функция СократитьТекстСообщения(ТекстСообщения, Объект, Заголовок="")
	
	ПервыйПробелПослеОграничения = СтрНайти(ТекстСообщения, " ", НаправлениеПоиска.СНачала, ДлинаСообщения());
	Если ПервыйПробелПослеОграничения = 0 Тогда
		Возврат Неопределено;
	КонецЕсли;
	
	ПолноеСообщение = Справочники.СообщенияОбсуждений.СоздатьЭлемент();
	ПолноеСообщение.Наименование = Заголовок;
	ПолноеСообщение.ПолныйТекст = ТекстСообщения;
	ПолноеСообщение.Объект = Объект.Ссылка;
	Попытка
		ПолноеСообщение.Записать();
	Исключение
		Возврат Неопределено;
	КонецПопытки;
	
	НСсылка = ПолучитьНавигационнуюСсылку(ПолноеСообщение.Ссылка);
	
	ТекстСообщения = Лев(ТекстСообщения, ПервыйПробелПослеОграничения) + " " + НСсылка;
	
	Возврат ПолноеСообщение.Ссылка;
	
КонецФункции

Процедура ДобавитьСтроку(Строка, ДобавляемаяСтрока)
	
	Если ПустаяСтрока(ДобавляемаяСтрока) Тогда
		Возврат;
	КонецЕсли;
	
	Если НЕ ПустаяСтрока(Строка) Тогда
		Строка = Строка + Символы.ПС;
	КонецЕсли;
	
	Строка = "" + Строка + ДобавляемаяСтрока;
	
КонецПроцедуры

#КонецОбласти