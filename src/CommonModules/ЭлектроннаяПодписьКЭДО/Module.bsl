#Область СлужебныйПрограммныйИнтерфейс

Функция УстановленныеПодписи(Объект, ПорядковыйНомер = Неопределено) Экспорт
	
	Подписи = ЭлектроннаяПодпись.УстановленныеПодписи(Объект, ПорядковыйНомер);
	РеквизитыПодписей = РеквизитыУстановленныхПодписей(Объект);
	
	НомерПодписи = 1;
	Для Каждого СвойстваПодписи Из Подписи Цикл
		
		ДанныеОтпечатка = РеквизитыПодписей.Получить(СвойстваПодписи.Отпечаток);
		Если ДанныеОтпечатка <> Неопределено Тогда
			СвойстваПодписи.Вставить("НаборСвойствПодписиКЭДО", ДанныеОтпечатка.Получить(СвойстваПодписи.ДатаПодписи));
		Иначе
			СвойстваПодписи.Вставить("НаборСвойствПодписиКЭДО", Неопределено);
		КонецЕсли;
		СвойстваПодписи.Вставить("ИмяФайла",
			КадровыйЭДОВызовСервера.ИмяФайлаПодписи(
				ИмяФайлаПодписиОбъекта(Объект),
				Подписи.Количество() > 1,
				НомерПодписи));
		НомерПодписи = НомерПодписи + 1;
	КонецЦикла;
	
	Возврат Подписи;
	
КонецФункции

Процедура ЗаполнитьПодписиВФорме(УправляемаяФорма, СсылкаНаОбъект) Экспорт
	
	УправляемаяФорма.ЭлектронныеПодписи.Очистить();
	ЦифровыеПодписиОбъекта = УстановленныеПодписи(СсылкаНаОбъект);
	Для Каждого ЦифроваяПодписьОбъекта Из ЦифровыеПодписиОбъекта Цикл
		
		ЦифроваяПодписьОбъекта.Вставить("Объект", СсылкаНаОбъект);
		АдресПодписи = ПоместитьВоВременноеХранилище(
			ЦифроваяПодписьОбъекта.Подпись, УправляемаяФорма.УникальныйИдентификатор);
		ЦифроваяПодписьОбъекта.Вставить("АдресПодписи", АдресПодписи);
		
		ДвоичныеДанныеСертификата = ЦифроваяПодписьОбъекта.Сертификат.Получить();
		Если ДвоичныеДанныеСертификата <> Неопределено Тогда 
			ЦифроваяПодписьОбъекта.Вставить("АдресСертификата",  ПоместитьВоВременноеХранилище(
				ДвоичныеДанныеСертификата, УправляемаяФорма.УникальныйИдентификатор));
		КонецЕсли;
		
		СтрокаПодписи = УправляемаяФорма.ЭлектронныеПодписи.Добавить();
		ЗаполнитьЗначенияСвойств(СтрокаПодписи, ЦифроваяПодписьОбъекта);
		ЭлектроннаяПодписьКЭДОКлиентСервер.ЗаполнитьСтатусПроверкиПодписиОбъекта(СтрокаПодписи);
		
	КонецЦикла;
	
КонецПроцедуры

Функция ДанныеМЧДПодписи(МЧД, ИдентификаторХранилища) Экспорт
	
	Если МЧД <> Неопределено Тогда
		
		ОписаниеДоверенности = ОписаниеМЧД();
		
		УстановитьПривилегированныйРежим(Истина);
		СвойстваДоверенности = ОбщегоНазначения.ЗначенияРеквизитовОбъекта(МЧД, "Наименование,Доверенность,ИмяФайлаДоверенности,Дата");
		УстановитьПривилегированныйРежим(Ложь);
		
		ДанныеДоверенности = СвойстваДоверенности.Доверенность.Получить();
		ОписаниеДоверенности.Ссылка = МЧД;
		ОписаниеДоверенности.Доверенность = ПоместитьВоВременноеХранилище(ДанныеДоверенности, ИдентификаторХранилища);
		ОписаниеДоверенности.ИмяФайлаСРасширением = Справочники.МашиночитаемыеДоверенностиКЭДО.ИмяВыгружаемогоФайла(
			СвойстваДоверенности.ИмяФайлаДоверенности, СвойстваДоверенности.Дата, МЧД);
		
		ОписаниеДоверенности.Размер = ДанныеДоверенности.Размер();
		
		ПодписиМЧД = УстановленныеПодписи(МЧД);
		Для Каждого ПодписьМЧД Из ПодписиМЧД Цикл
			ОписаниеПодписи = ОписаниеПодписиМЧД();
			ОписаниеПодписи.АдресВоВременномХранилище = ПоместитьВоВременноеХранилище(
				ПодписьМЧД.Подпись, ИдентификаторХранилища);
			ОписаниеПодписи.ИмяФайлаСРасширением = ПодписьМЧД.ИмяФайла;
			Если ПодписьМЧД.НаборСвойствПодписиКЭДО <> Неопределено Тогда
				ОписаниеПодписи.НаборСвойствПодписиКЭДО = Новый Массив;
				Для Каждого ОписаниеСвойств Из ОписаниеПодписи.НаборСвойствПодписиКЭДО Цикл
					ОписаниеСвойствПодписи = Новый Структура("МЧД,РольПодписанта");
					ОписаниеПодписи.НаборСвойствПодписиКЭДО.Добавить(ОписаниеСвойствПодписи);
					ОписаниеСвойствПодписи.РольПодписанта = ОписаниеСвойств.РольПодписанта;
					Если ЗначениеЗаполнено(ОписаниеСвойств.МЧД) Тогда
						ОписаниеСвойствПодписи.МЧД = ДанныеМЧДПодписи(ОписаниеСвойств.МЧД, ИдентификаторХранилища);
					КонецЕсли;
				КонецЦикла;
			КонецЕсли;
			ОписаниеДоверенности.Подписи.Добавить(ОписаниеПодписи);
		КонецЦикла;
		
		Возврат ОписаниеДоверенности;
		
	КонецЕсли;
	
	Возврат Неопределено;
	
КонецФункции

Функция ОрганизацияМЧД(МЧД) Экспорт
	
	УстановитьПривилегированныйРежим(Истина);
	Доверитель = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(МЧД, "Доверитель");
	УстановитьПривилегированныйРежим(Ложь);
	Если ЗначениеЗаполнено(Доверитель)
		И ТипЗнч(Доверитель) = Тип("СправочникСсылка.Организации") Тогда
		
		Возврат Доверитель;
	КонецЕсли;
	
	УстановитьПривилегированныйРежим(Истина);
	УстановленныеПодписи = УстановленныеПодписи(МЧД);
	УстановитьПривилегированныйРежим(Ложь);
	Для Каждого СвойстваПодписи Из УстановленныеПодписи Цикл
		ДополнительныеСвойства = Неопределено;
		Если СвойстваПодписи.Свойство("ДополнительныеСвойства", ДополнительныеСвойства) Тогда
			Если ДополнительныеСвойства <> Неопределено Тогда
				Для Каждого ДанныеПодписи Из ДополнительныеСвойства Цикл
					Если ЗначениеЗаполнено(ДанныеПодписи.МЧД) Тогда
						Организация = ОрганизацияМЧД(МЧД);
						Если ЗначениеЗаполнено(Организация) Тогда
							Возврат Организация;
						КонецЕсли;
					КонецЕсли;
				КонецЦикла;
			КонецЕсли;
		КонецЕсли;
	КонецЦикла;
	
	Возврат Неопределено;
	
КонецФункции

Процедура ЗарегистрироватьНаборСвойствПодписи(Объект, СвойстваПодписи, НаборСвойствПодписиКЭДО) Экспорт
	
	УстановитьПривилегированныйРежим(Истина);
	
	НаборЗаписей = РегистрыСведений.ЭлектронныеПодписиКЭДО.СоздатьНаборЗаписей();
	НаборЗаписей.Отбор.ПодписанныйОбъект.Установить(Объект);
	НаборЗаписей.Отбор.Отпечаток.Установить(СвойстваПодписи.Отпечаток);
	НаборЗаписей.Отбор.ДатаПодписи.Установить(СвойстваПодписи.ДатаПодписи);
	
	Если ТипЗнч(НаборСвойствПодписиКЭДО) = Тип("Массив") Тогда
		ВсеМЧД = ОбщегоНазначения.ВыгрузитьКолонку(НаборСвойствПодписиКЭДО, "МЧД", Истина);
		Если ЗначениеЗаполнено(ВсеМЧД) Тогда
			ОбщегоНазначенияКлиентСервер.УдалитьВсеВхожденияЗначенияИзМассива(ВсеМЧД, Справочники.МашиночитаемыеДоверенностиКЭДО.ПустаяСсылка());
			ОбщегоНазначенияКлиентСервер.УдалитьВсеВхожденияЗначенияИзМассива(ВсеМЧД, Неопределено);
		КонецЕсли;
		Если ЗначениеЗаполнено(ВсеМЧД) Тогда
			СсылкиНаМЧД = ОбщегоНазначения.ЗначениеРеквизитаОбъектов(ВсеМЧД, "Ссылка");
		Иначе
			СсылкиНаМЧД = Новый Соответствие;
		КонецЕсли;
		Для Каждого ДанныеПодписиКЭДО Из НаборСвойствПодписиКЭДО Цикл
			МЧДЗаписи = СсылкиНаМЧД.Получить(ДанныеПодписиКЭДО.МЧД);
			Если Не ЗначениеЗаполнено(МЧДЗаписи)
				И Не ЗначениеЗаполнено(ДанныеПодписиКЭДО.РольПодписанта) Тогда
				
				Продолжить;
			КонецЕсли;
			Запись = НаборЗаписей.Добавить();
			Запись.ПодписанныйОбъект = Объект;
			Запись.Отпечаток         = СвойстваПодписи.Отпечаток;
			Запись.ДатаПодписи       = СвойстваПодписи.ДатаПодписи;
			Запись.МЧД               = МЧДЗаписи;
			Запись.РольПодписанта    = ДанныеПодписиКЭДО.РольПодписанта;
		КонецЦикла;
	КонецЕсли;
	
	НаборЗаписей.Записать();
	
	УстановитьПривилегированныйРежим(Ложь);
	
КонецПроцедуры
 
Функция ИмяФайлаПодписиОбъекта(Объект)
	
	Если ТипЗнч(Объект) = Тип("СправочникСсылка.МашиночитаемыеДоверенностиКЭДО") Тогда
		Возврат Справочники.МашиночитаемыеДоверенностиКЭДО.ИмяВыгружаемогоФайлаПоСсылке(Объект);
	КонецЕсли;
	
	Возврат КадровыйЭДОВызовСервера.ИмяФайлаКЭДО(Строка(Объект));
	
КонецФункции

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

#Область ОбработчикиСобытий

Процедура ЗапомнитьУстановленныеПодписи(Источник, Отказ, Замещение) Экспорт
	
	Если ЗарплатаКадры.ОтключитьБизнесЛогикуПриЗаписи(Источник) Тогда
		Возврат;
	КонецЕсли;
	
	Если Источник.Отбор.ПодписанныйОбъект.Использование Тогда
		Если Не ЗарплатаКадры.ЭтоОбъектЗарплатноКадровойБиблиотеки(Источник.Отбор.ПодписанныйОбъект.Значение.Метаданные().ПолноеИмя()) Тогда
			Возврат;
		КонецЕсли;
	Иначе
		Возврат;
	КонецЕсли;
	
	Запрос = Новый Запрос;
	Запрос.Текст =
		"ВЫБРАТЬ
		|	ЭлектронныеПодписи.ПодписанныйОбъект КАК ПодписанныйОбъект,
		|	ЭлектронныеПодписи.Отпечаток КАК Отпечаток,
		|	ЭлектронныеПодписи.ДатаПодписи КАК ДатаПодписи
		|ИЗ
		|	РегистрСведений.ЭлектронныеПодписи КАК ЭлектронныеПодписи
		|ГДЕ
		|	&ТекстОтбора";
	
	ТекстОтбора = "(ИСТИНА)";
	ТекстыОтбора = Новый Массив;
	Для Каждого ЭлементОтбора Из Источник.Отбор Цикл
		Если ЭлементОтбора.Использование Тогда
			ЛевоеЗначение = ЭлементОтбора.ПутьКДанным;
			Запрос.УстановитьПараметр(ЛевоеЗначение, ЭлементОтбора.Значение);
			ТекстыОтбора.Добавить("(ЭлектронныеПодписи." + ЛевоеЗначение + " = &" + ЛевоеЗначение + ")");
		КонецЕсли;
	КонецЦикла;
	Если ЗначениеЗаполнено(ТекстыОтбора) Тогда
		ТекстОтбора = СтрСоединить(ТекстыОтбора, " И ");
	КонецЕсли;
	Запрос.Текст = СтрЗаменить(Запрос.Текст, "&ТекстОтбора", ТекстОтбора);
	
	УстановитьПривилегированныйРежим(Истина);
	ДанныеПодписей = Запрос.Выполнить().Выгрузить();
	УстановитьПривилегированныйРежим(Ложь);
	
	Источник.ДополнительныеСвойства.Вставить("ДанныеПодписей", ОбщегоНазначения.ТаблицаЗначенийВМассив(ДанныеПодписей));
	Источник.ДополнительныеСвойства.Вставить("РеквизитыУстановленныхПодписей",
		ЭлектроннаяПодписьКЭДОПовтИсп.РеквизитыУстановленныхПодписей(Источник.Отбор.ПодписанныйОбъект.Значение));
	
	Если КадровыйЭДО.ЭтоЭлектронныйДокумент(Источник.Отбор.ПодписанныйОбъект.Значение) Тогда
		Источник.ДополнительныеСвойства.Вставить("ОтпечаткиСертификатов",
			ОтпечаткиСертификатовПодписейОбъекта(Источник.Отбор.ПодписанныйОбъект.Значение));
	КонецЕсли;
	
КонецПроцедуры

Процедура ОбновитьДанныеЭлектронныхПодписей(Источник, Отказ, Замещение) Экспорт
	
	Если ЗарплатаКадры.ОтключитьБизнесЛогикуПриЗаписи(Источник) Тогда
		Возврат;
	КонецЕсли;
	
	Если Источник.ДополнительныеСвойства.Свойство("ДанныеПодписей") Тогда
		ЗаписиОбоихНаборов = Новый Массив;
		ТаблицаПодписей = Источник.Выгрузить();
		Для Каждого ДанныеПодписи Из Источник.ДополнительныеСвойства.ДанныеПодписей Цикл
			ЗаписиПодписи = ТаблицаПодписей.НайтиСтроки(ДанныеПодписи);
			Если ЗаписиПодписи.Количество() = 0 Тогда
				НаборЗаписей = РегистрыСведений.ЭлектронныеПодписиКЭДО.СоздатьНаборЗаписей();
				НаборЗаписей.Отбор.ПодписанныйОбъект.Установить(ДанныеПодписи.ПодписанныйОбъект);
				НаборЗаписей.Отбор.Отпечаток.Установить(ДанныеПодписи.Отпечаток);
				НаборЗаписей.Отбор.ДатаПодписи.Установить(ДанныеПодписи.ДатаПодписи);
				НаборЗаписей.Записать();
			Иначе
				ЗаписиОбоихНаборов.Добавить(ЗаписиПодписи[0]);
				ДанныеОтпечатка = Источник.ДополнительныеСвойства.РеквизитыУстановленныхПодписей.Получить(ДанныеПодписи.Отпечаток);
				Если ДанныеОтпечатка <> Неопределено Тогда
					НаборСвойствПодписиКЭДО = ДанныеОтпечатка.Получить(ДанныеПодписи.ДатаПодписи);
					Если НаборСвойствПодписиКЭДО <> Неопределено Тогда
						ЗарегистрироватьНаборСвойствПодписи(
							Источник.Отбор.ПодписанныйОбъект.Значение, ДанныеПодписи, НаборСвойствПодписиКЭДО);
					КонецЕсли;
				КонецЕсли;
			КонецЕсли;
		КонецЦикла;
		Для Каждого ДанныеПодписи Из ТаблицаПодписей Цикл
			Если ЗаписиОбоихНаборов.Найти(ДанныеПодписи) <> Неопределено Тогда
				Продолжить;
			КонецЕсли;
			ДанныеОтпечатка = Источник.ДополнительныеСвойства.РеквизитыУстановленныхПодписей.Получить(ДанныеПодписи.Отпечаток);
			Если ДанныеОтпечатка <> Неопределено Тогда
				НаборСвойствПодписиКЭДО = ДанныеОтпечатка.Получить(ДанныеПодписи.ДатаПодписи);
				Если НаборСвойствПодписиКЭДО <> Неопределено Тогда
					ЗарегистрироватьНаборСвойствПодписи(
						Источник.Отбор.ПодписанныйОбъект.Значение, ДанныеПодписи, НаборСвойствПодписиКЭДО);
				КонецЕсли;
			КонецЕсли;
		КонецЦикла;
	КонецЕсли;
	
	Если Источник.ДополнительныеСвойства.Свойство("ОтпечаткиСертификатов") Тогда
		Если Не ОбщегоНазначения.КоллекцииИдентичны(Источник.ДополнительныеСвойства.ОтпечаткиСертификатов,
			ОтпечаткиСертификатовПодписейОбъекта(Источник.Отбор.ПодписанныйОбъект.Значение)) Тогда
			
			КадровыйЭДО.ЗарегистрироватьФайлыДокументовКЭДОКПересчетуСостояний(Источник.Отбор.ПодписанныйОбъект.Значение);
		КонецЕсли;
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

Функция РеквизитыУстановленныхПодписей(Объект, Отпечаток = Неопределено, ДатаПодписи = Неопределено) Экспорт
	
	РеквизитыПодписей = Новый Соответствие;
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("ПодписанныйОбъект", Объект);
	
	Запрос.Текст =
		"ВЫБРАТЬ
		|	ЭлектронныеПодписи.Отпечаток КАК Отпечаток,
		|	ЭлектронныеПодписи.ДатаПодписи КАК ДатаПодписи,
		|	ЭлектронныеПодписи.РольПодписанта КАК РольПодписанта,
		|	ЭлектронныеПодписи.МЧД КАК МЧД
		|ИЗ
		|	РегистрСведений.ЭлектронныеПодписиКЭДО КАК ЭлектронныеПодписи
		|ГДЕ
		|	ЭлектронныеПодписи.ПодписанныйОбъект = &ПодписанныйОбъект
		//|	И ЭлектронныеПодписи.РольПодписанта <> ЗНАЧЕНИЕ(Перечисление.РолиПодписантовКЭДО.ПустаяСсылка)
		//|	И ЭлектронныеПодписи.МЧД <> ЗНАЧЕНИЕ(Справочник.МашиночитаемыеДоверенностиКЭДО.ПустаяСсылка)
		|	И &ОтборПоОтпечатку
		|	И &ОтборПоДатеПодписи
		|
		|УПОРЯДОЧИТЬ ПО
		|	Отпечаток,
		|	ДатаПодписи";
	
	Если ЗначениеЗаполнено(Отпечаток) Тогда
		Запрос.Текст = СтрЗаменить(Запрос.Текст, "&ОтборПоОтпечатку", "ЭлектронныеПодписи.Отпечаток = &Отпечаток");
		Запрос.УстановитьПараметр("Отпечаток", Отпечаток);
	Иначе
		Запрос.Текст = СтрЗаменить(Запрос.Текст, "&ОтборПоОтпечатку", "(ИСТИНА)");
	КонецЕсли;
	
	Если ЗначениеЗаполнено(ДатаПодписи) Тогда
		Запрос.Текст = СтрЗаменить(Запрос.Текст, "&ОтборПоДатеПодписи", "ЭлектронныеПодписи.ДатаПодписи = &ДатаПодписи");
		Запрос.УстановитьПараметр("ДатаПодписи", ДатаПодписи);
	Иначе
		Запрос.Текст = СтрЗаменить(Запрос.Текст, "&ОтборПоДатеПодписи", "(ИСТИНА)");
	КонецЕсли;
	
	УстановитьПривилегированныйРежим(Истина);
	Выборка = Запрос.Выполнить().Выбрать();
	УстановитьПривилегированныйРежим(Ложь);
	
	Пока Выборка.СледующийПоЗначениюПоля("Отпечаток") Цикл
		ДанныеОтпечатка = Новый Соответствие;
		РеквизитыПодписей.Вставить(Выборка.Отпечаток, ДанныеОтпечатка);
		Пока Выборка.СледующийПоЗначениюПоля("ДатаПодписи") Цикл
			ДанныеПоДатеПодписи = Новый Массив;
			ДанныеОтпечатка.Вставить(Выборка.ДатаПодписи, ДанныеПоДатеПодписи);
			Пока Выборка.Следующий() Цикл
				ДанныеПоДатеПодписи.Добавить(
					Новый Структура("МЧД,РольПодписанта",
						Выборка.МЧД,
						Выборка.РольПодписанта));
			КонецЦикла;
		КонецЦикла;
	КонецЦикла;
	
	Возврат РеквизитыПодписей;
	
КонецФункции

Функция ОписаниеМЧД()
	
	ОписаниеДоверенности = Новый Структура;
	ОписаниеДоверенности.Вставить("Ссылка");
	ОписаниеДоверенности.Вставить("Доверенность");
	ОписаниеДоверенности.Вставить("ИмяФайлаСРасширением", "");
	ОписаниеДоверенности.Вставить("Размер", 0);
	ОписаниеДоверенности.Вставить("Подписи", Новый Массив);
	
	Возврат ОписаниеДоверенности;
	
КонецФункции

Функция ОписаниеПодписиМЧД()
	
	ОписаниеПодписи = Новый Структура;
	ОписаниеПодписи.Вставить("АдресВоВременномХранилище");
	ОписаниеПодписи.Вставить("ИмяФайлаСРасширением", "");
	ОписаниеПодписи.Вставить("НаборСвойствПодписиКЭДО");
	
	Возврат ОписаниеПодписи;
	
КонецФункции

Функция ОтпечаткиСертификатовПодписейОбъекта(Объект)
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("ПодписанныйОбъект", Объект);
	Запрос.Текст =
		"ВЫБРАТЬ РАЗЛИЧНЫЕ
		|	ЭлектронныеПодписи.Отпечаток КАК Отпечаток
		|ИЗ
		|	РегистрСведений.ЭлектронныеПодписи КАК ЭлектронныеПодписи
		|ГДЕ
		|	ЭлектронныеПодписи.ПодписанныйОбъект = &ПодписанныйОбъект";
	
	Возврат Запрос.Выполнить().Выгрузить().ВыгрузитьКолонку("Отпечаток");
	
КонецФункции

#КонецОбласти
