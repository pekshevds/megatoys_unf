
#Область СобытияФормВЕТИСКлиентПереопределяемый

// Открывает форму подбора номенклатуры.
//
// Параметры:
//  Форма                   - УправляемаяФорма   - форма, в которой вызывается команда открытия обработки сопоставления;
//  ОповещениеПриЗавершении - ОписаниеОповещения - процедура, вызываемая после закрытия формы подбора,
//  ПараметрыПодбора        - Структура          - параметры открытия формы подбора товаров, состав полей определен в функции
//													ИнтеграцияВЕТИСКлиентСерверПереопределяемый.ПараметрыФормыПодбораТоваров.
//
Процедура ОткрытьФормуПодбораНоменклатуры(Форма, ОповещениеПриЗавершении = Неопределено, ПараметрыПодбора = Неопределено, ДополнительныеПараметры = Неопределено) Экспорт
	
	Объект = Форма.Объект;
	ТипОбъекта = ТипЗнч(Объект.Ссылка);
	ЭтоПриходныйДокумент = Истина;
	ИмяТабличнойЧасти = Форма.ТекущийЭлемент.Имя;
	
	Если ТипОбъекта = Тип("ДокументСсылка.ИнвентаризацияПродукцииВЕТИС") ИЛИ ТипОбъекта = Тип("ДокументСсылка.ПроизводственнаяОперацияВЕТИС") Тогда
		ИмяРеквизитаОрганизация = "ХозяйствующийСубъект";
		ИмяРеквизитаПодразделение = "ТорговыйОбъект";
		ЭтоПриходныйДокумент = Ложь;
	ИначеЕсли ТипОбъекта = Тип("ДокументСсылка.ИсходящаяТранспортнаяОперацияВЕТИС") Тогда
		ИмяРеквизитаОрганизация = "ГрузоотправительХозяйствующийСубъект";
		ИмяРеквизитаПодразделение = "ТорговыйОбъект";
		ЭтоПриходныйДокумент = Ложь;
	ИначеЕсли ТипОбъекта = Тип("ДокументСсылка.ВходящаяТранспортнаяОперацияВЕТИС") Тогда
		 ИмяРеквизитаОрганизация = "ГрузополучательХозяйствующийСубъект";
		 ИмяРеквизитаПодразделение = "ТорговыйОбъект"
	Иначе
		Возврат;
	КонецЕсли;
	
	Если ЗначениеЗаполнено(Объект[ИмяРеквизитаОрганизация]) Тогда
		ДанныеХозяйствующегоСубъекта = ИнтеграцияВЕТИСУНФВызовСервера.ПолучитьДанныеХозяйствующегоСубъектаВЕТИС(Объект[ИмяРеквизитаОрганизация]);
	Иначе
		ДанныеХозяйствующегоСубъекта = Неопределено;
	КонецЕсли; 
	
	СписокТипов = Новый СписокЗначений;
	СписокТипов.Добавить(ПредопределенноеЗначение("Перечисление.ТипыНоменклатуры.Запас"));
	
	Если ПараметрыПодбора = Неопределено Тогда
		ПараметрыПодбора = Новый Структура;
	КонецЕсли;
	
	ПараметрыПодбора.Вставить("Период", 							   Объект.Дата);
	ПараметрыПодбора.Вставить("ЭтоПриходныйДокумент",				   ЭтоПриходныйДокумент);
	ПараметрыПодбора.Вставить("ДоступноИзменениеЦены",				   Ложь);
	ПараметрыПодбора.Вставить("ТипНоменклатуры",				       СписокТипов);
	ПараметрыПодбора.Вставить("ПодконтрольнаяПродукцияВЕТИС",		   Истина);
	ПараметрыПодбора.Вставить("УникальныйИдентификаторФормыВладельца", Форма.УникальныйИдентификатор);
	
	Если ЗначениеЗаполнено(ДанныеХозяйствующегоСубъекта) И ДанныеХозяйствующегоСубъекта.СоответствуетОрганизации Тогда
		ПараметрыПодбора.Вставить("Организация", ДанныеХозяйствующегоСубъекта.Контрагент);
		ПараметрыПодбора.Вставить("ОрганизацияДокумента", ДанныеХозяйствующегоСубъекта.Контрагент);
	Иначе
		ПараметрыПодбора.Вставить("Организация", ПредопределенноеЗначение("Справочник.Организации.ОсновнаяОрганизация"));
		ПараметрыПодбора.Вставить("ОрганизацияДокумента", ПредопределенноеЗначение("Справочник.Организации.ОсновнаяОрганизация"));
	КонецЕсли; 
	
	Если ЗначениеЗаполнено(ИмяРеквизитаПодразделение) Тогда
		ПараметрыПодбора.Вставить("СтруктурнаяЕдиница", Объект[ИмяРеквизитаПодразделение]);
	КонецЕсли; 
	
	Если Не ЭтоПриходныйДокумент Тогда
		ПараметрыПодбора.Вставить("ВидЦен",  УправлениеНебольшойФирмойПовтИсп.ПолучитьЗначениеПоУмолчаниюПользователя(
			ПользователиКлиент.АвторизованныйПользователь(),
			"ОсновнойВидЦенПродажи"));
		Если Не ЗначениеЗаполнено(ПараметрыПодбора.ВидЦен) Тогда
			ПараметрыПодбора.Вставить("ВидЦен", ПредопределенноеЗначение("Справочник.ВидыЦен.Оптовая"));
		КонецЕсли;
		ПараметрыПодбора.Вставить("Валюта", УправлениеНебольшойФирмойПовтИсп.ПолучитьЗначениеКонстанты("НациональнаяВалюта"));
		ПараметрыПодбора.Вставить("СуммаВключаетНДС", ИнтеграцияВЕТИСУНФВызовСервера.ЦенаВключаетНДС(ПараметрыПодбора.ВидЦен));
	КонецЕсли;
	
	ПараметрыПодбора.Вставить("ЭтоМаркировка", Истина);
	ПодборНоменклатурыВДокументахКлиент.ОткрытьФормуПодбораНоменклатуры(Форма,, ПараметрыПодбора, ОповещениеПриЗавершении);
	
КонецПроцедуры

// Открывает форму выбора характеристики номенклатуры.
//
// Параметры:
//  Форма                 - УправляемаяФорма - форма, в которой вызывается команда выбора номенклатуры,
//  ПараметрыНоменклатуры - Структура        - параметры создания номенклатуры из формы выбора номенклатуры
//										(см. описание ИнтеграцияВЕТИСВызовСервера.ПараметрыНоменклатуры).
//
Процедура ОткрытьФормуВыбораНоменклатуры(Форма, ПараметрыНоменклатуры = Неопределено) Экспорт
	
	ПараметрыФормы = Новый Структура;
	
	Если ПараметрыНоменклатуры <> Неопределено Тогда
		Для Каждого КлючИЗначение Из ПараметрыНоменклатуры Цикл
			ПараметрыФормы.Вставить(КлючИЗначение.Ключ, КлючИЗначение.Значение);
		КонецЦикла;
	КонецЕсли;
	
	ТипНоменклатуры  = ПредопределенноеЗначение("Перечисление.ТипыНоменклатуры.Запас");
	
	ПараметрыОтбора = Новый Структура;
	ПараметрыОтбора.Вставить("ТипНоменклатуры",					ТипНоменклатуры);
	ПараметрыОтбора.Вставить("ПодконтрольнаяПродукцияВЕТИС",	Истина);
	
	ПараметрыФормы.Вставить("Отбор",				ПараметрыОтбора);
	ПараметрыФормы.Вставить("ВыборГруппИЭлементов",	ИспользованиеГруппИЭлементов.Элементы);
	ПараметрыФормы.Вставить("РежимВыбора",			Истина);
	
	ОткрытьФорму("Справочник.Номенклатура.ФормаВыбора", ПараметрыФормы, Форма);
	
КонецПроцедуры

// Открывает форму создания номенклатуры.
//
// Параметры:
//  Форма                 - УправляемаяФорма                       - форма, в которой вызывается команда создания номенклатуры,
//  ПараметрыНоменклатуры - Структура                              - параметры создания номенклатуры
//										(см. описание ИнтеграцияВЕТИСВызовСервера.ПараметрыНоменклатуры),
//  ЕдиницаИзмеренияВЕТИС - СправочникСсылка.ЕдиницыИзмеренияВЕТИС - единица измерения ВЕТИС, на основании которой 
//																		создается номенклатура.
//
Процедура ОткрытьФормуСозданияНоменклатуры(Форма, ПараметрыНоменклатуры, ЕдиницаИзмеренияВЕТИС) Экспорт
	
	Если ЗначениеЗаполнено(ЕдиницаИзмеренияВЕТИС)
		И Не ЗначениеЗаполнено(ПараметрыНоменклатуры.ЕдиницаИзмеренияВЕТИС) Тогда
		
		ТекстСообщения = НСтр("ru = 'Невозможно создать номенклатуру, т.к. не заполнено поле ""Единица измерения"" в карточке единицы измерения ВетИС ""%ЕдиницаИзмеренияВЕТИС%""'");
		ТекстСообщения = СтрЗаменить(ТекстСообщения, "%ЕдиницаИзмеренияВЕТИС%", Строка(ЕдиницаИзмеренияВЕТИС));
		
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстСообщения);
		
		Возврат;
		
	КонецЕсли;
	
	ПараметрыФормы = Новый Структура;
	
	Для Каждого КлючИЗначение Из ПараметрыНоменклатуры Цикл
		ПараметрыФормы.Вставить(КлючИЗначение.Ключ, КлючИЗначение.Значение);
	КонецЦикла;
	
	ТипНоменклатуры  = ПредопределенноеЗначение("Перечисление.ТипыНоменклатуры.Запас");
	
	ПараметрыФормы.Вставить("ТипНоменклатуры",  ТипНоменклатуры);
	ПараметрыФормы.Вставить("ПодконтрольнаяПродукцияВЕТИС", Истина);
	
	ОткрытьФорму("Справочник.Номенклатура.ФормаОбъекта", ПараметрыФормы, Форма);
	
КонецПроцедуры

// Открывает форму создания нового контрагента.
//
// Параметры:
//  ФормаВладелец - УправляемаяФорма - форма-владелец.
//  Реквизиты     - Структура        - данные заполнения нового контрагента:
//   * Наименование            - Строка - наименование контрагента,
//   * СокращенноеНаименование - Строка - сокращенное наименование контрагента,
//   * ИНН                     - Строка - ИНН контрагента,
//   * КПП                     - Строка - КПП контрагента.
//
Процедура ОткрытьФормуСозданияКонтрагента(ФормаВладелец, Реквизиты) Экспорт
	
	Основание = Новый Структура;
	Основание.Вставить("ИНН",					Реквизиты.ИНН);
	Основание.Вставить("КПП",					Реквизиты.КПП);
	Основание.Вставить("Наименование",			Реквизиты.СокращенноеНаименование);
	Основание.Вставить("НаименованиеПолное",	Реквизиты.Наименование);
	
	ПараметрыФормы = Новый Структура();
	ПараметрыФормы.Вставить("РежимВыбора", Истина);
	ПараметрыФормы.Вставить("Основание", Основание);
	
	ОткрытьФорму("Справочник.Контрагенты.ФормаОбъекта", ПараметрыФормы, ФормаВладелец);
	
КонецПроцедуры

// Открывает форму выбора контрагента.
//
// Параметры:
//  ФормаВладелец - УправляемаяФорма - форма, из которой осуществляется выбор.
//  Реквизиты     - Структура        - данные для заполнения отбора:
//   * Наименование            - Строка - наименование контрагента,
//   * СокращенноеНаименование - Строка - сокращенное наименование контрагента,
//   * ИНН                     - Строка - ИНН контрагента,
//   * КПП                     - Строка - КПП контрагента.
//
Процедура ОткрытьФормуВыбораКонтрагента(ФормаВладелец, Реквизиты) Экспорт
	
	Основание = Новый Структура;
	Основание.Вставить("ИНН",					Реквизиты.ИНН);
	Основание.Вставить("КПП",					Реквизиты.КПП);
	Основание.Вставить("Наименование",			Реквизиты.СокращенноеНаименование);
	Основание.Вставить("НаименованиеПолное",	Реквизиты.Наименование);
	
	ПараметрыФормы = Новый Структура;
	ПараметрыФормы.Вставить("Основание", Основание);
	ПараметрыФормы.Вставить("РежимВыбора", Истина);
	
	ОткрытьФорму("Справочник.Контрагенты.ФормаВыбора", ПараметрыФормы, ФормаВладелец);
	
КонецПроцедуры

Процедура ВыполнитьОперацииПриИзмененииРеквизитовФормы(Форма, ТекущаяСтрока, КэшированныеЗначения, ПараметрыЗаполнения) Экспорт
	
	// ОбязательныеДействия
	Если ОбщегоНазначенияКлиентСервер.ЕстьРеквизитИлиСвойствоОбъекта(ТекущаяСтрока, "Номенклатура") Тогда
		СтруктураРеквизитов = ИнтеграцияВЕТИСУНФВызовСервера.ПолучитьСтруктуруСлужебныхРеквизитовНоменклатуры(ТекущаяСтрока.Номенклатура);
		ЗаполнитьЗначенияСвойств(ТекущаяСтрока, СтруктураРеквизитов);
	КонецЕсли;
	// Конец ОбязательныеДействия
	
	Если ТипЗнч(ПараметрыЗаполнения) <> Тип("Структура") Тогда
		Возврат;
	КонецЕсли;
	
	Если ПараметрыЗаполнения.Свойство("ЗаполнитьПродукциюВЕТИС") И ПараметрыЗаполнения.ЗаполнитьПродукциюВЕТИС Тогда
		
		СтруктураСтроки = ИнтеграцияВЕТИСУНФКлиентСервер.СформироватьСтруктуруПоСтроке(ТекущаяСтрока, "ЗаполнитьПродукциюВЕТИС");
		ИнтеграцияВЕТИСУНФВызовСервера.ЗаполнитьПродукциюВЕТИС(СтруктураСтроки, ПараметрыЗаполнения);
		ЗаполнитьЗначенияСвойств(ТекущаяСтрока, СтруктураСтроки);
		
	КонецЕсли;
	
	ПараметрыПересчетаКоличества = ИнтеграцияВЕТИСУНФКлиентСервер.ПараметрыПересчетаКоличества();
	ЗаполнитьЗначенияСвойств(ПараметрыПересчетаКоличества, ПараметрыЗаполнения);
	
	ТекстОшибки = Неопределено;
	ИнтеграцияВЕТИСУНФКлиентСервер.ПересчитатьКоличество(ТекущаяСтрока, ПараметрыПересчетаКоличества, КэшированныеЗначения, ТекстОшибки);
	
	Если ТекстОшибки <> Неопределено Тогда
		ОбщегоНазначенияКлиент.СообщитьПользователю(ТекстОшибки);
	КонецЕсли;
	
	Если ПараметрыЗаполнения.Свойство("ПроверитьСериюРассчитатьСтатус")
		И ((ТипЗнч(ПараметрыЗаполнения.ПроверитьСериюРассчитатьСтатус) = Тип("Булево") И ПараметрыЗаполнения.ПроверитьСериюРассчитатьСтатус)
		ИЛИ ТипЗнч(ПараметрыЗаполнения.ПроверитьСериюРассчитатьСтатус) = Тип("Структура")) Тогда
		
		СтруктураСтроки = ИнтеграцияВЕТИСУНФКлиентСервер.СформироватьСтруктуруПоСтроке(ТекущаяСтрока, "ПроверитьСериюРассчитатьСтатус");
		ИнтеграцияВЕТИСУНФВызовСервера.ПроверитьСериюРассчитатьСтатус(ПараметрыЗаполнения, СтруктураСтроки);
		ЗаполнитьЗначенияСвойств(ТекущаяСтрока, СтруктураСтроки);
	
	КонецЕсли;
	
	Если ПараметрыЗаполнения.Свойство("ИзменениеНоменклатуры") И ПараметрыЗаполнения.ИзменениеНоменклатуры Тогда
		
		Если ТекущаяСтрока.Свойство("Характеристика") Тогда
			ТекущаяСтрока.Характеристика = Неопределено;
		КонецЕсли;
		
		ИнтеграцияВЕТИСУНФКлиентСервер.УстановитьВидимостьКомандыГенерацииСерии(Форма);
		
	КонецЕсли;
	
	Если ПараметрыЗаполнения.Свойство("ЗаполнитьПризнакСкоропортящаясяПродукция")
		И ПараметрыЗаполнения.ЗаполнитьПризнакСкоропортящаясяПродукция Тогда
		СлужебныеРеквизиты = Новый Структура;
		СлужебныеРеквизиты.Вставить("СкоропортящаясяПродукция");
		ИнтеграцияИСУНФКлиентСервер.ЗаполнитьСлужебныеРеквизитыСтроки(Форма, ТекущаяСтрока, СлужебныеРеквизиты);
	КонецЕсли;
	
	Если Форма <> Неопределено Тогда
		Форма.Модифицированность = Истина;
	КонецЕсли;
	
КонецПроцедуры

// Выполняет действия при начале выбора характеристики в таблице Товары.
//
// Параметры:
//  Форма                - УправляемаяФорма            - форма, в которой произошло событие,
//  ТекущаяСтрока        - ДанныеФормыЭлементКоллекции - строка таблицы товаров,
//  Элемент              - ПолеВвода                   - элемент формы Характеристика,
//  ДанныеВыбора         - СписокЗначений              - в обработчике можно сформировать и передать в этом параметре
//                                                       данные для выбора,
//  СтандартнаяОбработка - Булево                      - признак выполнения стандартной (системной) обработки события.
//
Процедура НачалоВыбораХарактеристики(Форма, ТекущаяСтрока, Элемент, ДанныеВыбора, СтандартнаяОбработка) Экспорт
	
	Если ТекущаяСтрока = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	Если Элемент <> Неопределено И Элемент.Имя = "ТоварыПредставлениеХарактеристика" Тогда
		ПараметрыФормыВыбора = Новый Структура;
		ПараметрыФормыВыбора.Вставить("Отбор", Новый Структура("Владелец", ТекущаяСтрока.Номенклатура));
		ОткрытьФорму("Справочник.ХарактеристикиНоменклатуры.ФормаВыбора", ПараметрыФормыВыбора, Элемент, Форма.УникальныйИдентификатор);
	КонецЕсли;
	
КонецПроцедуры

// ++( 00-00012169
Процедура ПриИзмененииНоменклатуры(Форма,
								ТекущаяСтрока,
								КэшированныеЗначения,
								ПараметрыЗаполнения,
								ПараметрыУказанияСерий = Неопределено) Экспорт
								
	ВыполнитьОперацииПриИзмененииРеквизитовФормы(Форма, ТекущаяСтрока, КэшированныеЗначения, ПараметрыЗаполнения);
	
	Если ОбщегоНазначенияКлиентСервер.ЕстьРеквизитИлиСвойствоОбъекта(ТекущаяСтрока, "Серия") Тогда
		ДанныеСтроки = ИнтеграцияИСУНФКлиентСервер.ДанныеСтроки(ТекущаяСтрока, "ПроверитьСериюРассчитатьСтатус");
		ИмяФормы = Форма.ИмяФормы;
		ИнтеграцияИСМПУНФВызовСервера.ПроверитьСериюРассчитатьСтатус(ДанныеСтроки, ИмяФормы);
		ЗаполнитьЗначенияСвойств(ТекущаяСтрока, ДанныеСтроки);
	КонецЕсли;
	
КонецПроцедуры
// )++ 00-00012169
#КонецОбласти

#Область УНФ

Функция СгенерироватьШаблонНаименованияПартии(Объект) Экспорт
	
	Если Не Объект.АвтоматическиГенерироватьПартии Тогда
		Возврат "";
	КонецЕсли;
	
	ЧастиНаименования = Новый Массив;
	
	Если Объект.ИспользоватьСрокГодностиПартии Тогда
		ЧастиНаименования.Добавить(НСтр("ru = 'до 31.12.2019'"));
	КонецЕсли;
	
	Если Объект.ИспользоватьДатуПроизводстваПартии Тогда
		ЧастиНаименования.Добавить(НСтр("ru = 'от 01.02.2018'"));
	КонецЕсли;
	
	Если Объект.ИспользоватьЗаписьСкладскогоЖурналаВЕТИСПартии Тогда
		ЧастиНаименования.Добавить(НСтр("ru = '10208756'"));
	КонецЕсли;
	
	Если Объект.ИспользоватьПроизводителяВЕТИСПартии Тогда
		ЧастиНаименования.Добавить(ИнтеграцияВЕТИСУНФВызовСервера.НаименованиеОрганизацииПоУмолчанию());
	КонецЕсли;
	
	Если Объект.ИспользоватьИдентификаторПартииВЕТИСПартии Тогда
		ЧастиНаименования.Добавить(НСтр("ru = '2505181'"));
	КонецЕсли;
	
	Если ЧастиНаименования.Количество() = 0 Тогда
		ЧастиНаименования.Добавить(НСтр("ru = '""Сгенерирована автоматически""'"));
	КонецЕсли;
	
	Возврат СтрШаблон("%1: %2", "Пример наименования", СтрСоединить(ЧастиНаименования, " "));
	
КонецФункции

#КонецОбласти

