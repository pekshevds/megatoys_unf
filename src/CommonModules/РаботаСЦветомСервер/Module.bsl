////////////////////////////////////////////////////////////////////////////////
// Работа с цветом
//
////////////////////////////////////////////////////////////////////////////////

#Область ПрограммныйИнтерфейс

// Возвращает Структуру RGB цвета по объекту Цвет с типом WebЦвет
// 
// Параметры:
//  ПредставлениеWebЦвета - Цвет, Строка - Пример: "Аквамарин (Aquamarine)"
// 
// Возвращаемое значение:
//  Структура - Красный, Зеленый, Синий
//
Функция RGBПоWebЦвету(ПредставлениеWebЦвета) Экспорт
	
	Макет = ПолучитьОбщийМакет("МакетОпределенияЦвета");
	
	// Получение английского варианта - "Aquamarine"
	НазваниеЦвета = Строка(ПредставлениеWebЦвета);
	НазваниеЦвета = Сред(НазваниеЦвета, СтрНайти(НазваниеЦвета, "(") + 1);
	НазваниеЦвета = Лев(НазваниеЦвета, СтрДлина(НазваниеЦвета) - 1);
	
	НазваниеОбласти = НазваниеОбластиWebЦветов(Истина);
	ОбластьЦветов = Макет.НайтиТекст(НазваниеЦвета, , Макет.Область(НазваниеОбласти), , Истина, , Истина);
	
	Если ОбластьЦветов = Неопределено Тогда
		Возврат Неопределено;
	КонецЕсли;
	
	ОбластьСоответствияКрасный = Макет.Область(ОбластьЦветов.Верх, Макет.Область("RedWebЦвета").Лево);
	Если ОбластьСоответствияКрасный = Неопределено Тогда
		Возврат Неопределено;
	КонецЕсли;
	
	ОбластьСоответствияЗеленый = Макет.Область(ОбластьЦветов.Верх, Макет.Область("GreenWebЦвета").Лево);
	ОбластьСоответствияСиний = Макет.Область(ОбластьЦветов.Верх, Макет.Область("BlueWebЦвета").Лево);
	
	Результат = Новый Структура;
	Результат.Вставить("Красный", Число(ОбластьСоответствияКрасный.Текст));
	Результат.Вставить("Зеленый", Число(ОбластьСоответствияЗеленый.Текст));
	Результат.Вставить("Синий", Число(ОбластьСоответствияСиний.Текст));
	
	Возврат Результат;
	
КонецФункции

// Возвращает массив, объектов Цвет, созданных на основе WebЦветов в макете МакетОпределенияЦвета
// 
// Возвращаемое значение:
//  Массив из Цвет
//
Функция ЦветаWebЦветов() Экспорт
	
	Массив = Новый Массив;
	
	Макет = ПолучитьОбщийМакет("МакетОпределенияЦвета");
	
	ОбластьЦветов = Макет.ПолучитьОбласть("ОпределениеЦветов|RGBWebЦвета");
	
	Результат = Новый Массив;
	Для Индекс = 1 По ОбластьЦветов.ВысотаТаблицы Цикл
		
		Красный = Число(ОбластьЦветов.Область(СтрШаблон("R%1C1", Индекс)).Текст);
		Зеленый = Число(ОбластьЦветов.Область(СтрШаблон("R%1C2", Индекс)).Текст);
		Синий = Число(ОбластьЦветов.Область(СтрШаблон("R%1C3", Индекс)).Текст);
		Результат.Добавить(Новый Цвет(Красный, Зеленый, Синий));
		
	КонецЦикла;
	
	Возврат Результат;
	
КонецФункции

// Возвращает массив с WebЦветами из общего макета МакетОпределенияЦвета
// 
// Возвращаемое значение:
//  Массив из Цвет
//
Функция ОсновныеЦвета() Экспорт
	
	Результат = Новый Массив;
	
	Результат.Добавить(Новый Цвет(255, 255, 255));
	Результат.Добавить(Новый Цвет(0, 0, 0));
	Результат.Добавить(Новый Цвет(255, 0, 0));
	Результат.Добавить(Новый Цвет(255, 127, 0));
	Результат.Добавить(Новый Цвет(255, 255, 0));
	Результат.Добавить(Новый Цвет(0, 255, 0));
	Результат.Добавить(Новый Цвет(0, 255, 255));
	Результат.Добавить(Новый Цвет(0, 0, 255));
	Результат.Добавить(Новый Цвет(127, 0, 255));
	Результат.Добавить(Новый Цвет(255, 0, 255));
	
	Возврат Результат;
	
КонецФункции

// Возвращает HEX Цвета с # по RGB
// 
// Параметры:
//  Красный - Число
//  Зеленый - Число
//  Синий - Число
// 
// Возвращаемое значение:
//  Строка - Цвет в HEX формате
//
Функция HEXПоRGB(Знач Красный, Знач Зеленый, Знач Синий) Экспорт
	
	СдвигЗеленого = ПобитовыйСдвигВлево(Зеленый, 8);
	СдвигКрасного = ПобитовыйСдвигВлево(Красный, 16);
	СдвигЕдиницы = ПобитовыйСдвигВлево(1, 24);
	
	ВременноеДесятичноеЧисло =
	ПобитовоеИли(ПобитовоеИли(ПобитовоеИли(Синий, СдвигЗеленого), СдвигКрасного), СдвигЕдиницы);
	
	ВременноеЧислоВШестнадцатеричнойСистемеСчисления =
		РаботаССистемамиСчисления.ДругуюИзДесятичной(ВременноеДесятичноеЧисло, 16);
	
	Возврат СтрШаблон("#%1", Сред(ВременноеЧислоВШестнадцатеричнойСистемеСчисления, 2));
	
КонецФункции

// Возвращает Структуру RGB по HEX с #
// 
// Параметры:
//  HEX - Строка - начинается с #
// 
// Возвращаемое значение:
//  Структура - Красный, Зеленый, Синий
//
Функция RGBПоHEX(HEX) Экспорт
	
	Красный = Сред(HEX, 2, 2);
	Зеленый = Сред(HEX, 4, 2);
	Синий = Сред(HEX, 6, 2);
	
	Красный = РаботаССистемамиСчисления.ДесятичнуюИзДругой(Красный, 16);
	Зеленый = РаботаССистемамиСчисления.ДесятичнуюИзДругой(Зеленый, 16);
	Синий = РаботаССистемамиСчисления.ДесятичнуюИзДругой(Синий, 16);
	
	Результат = Новый Структура;
	Результат.Вставить("Красный", Красный);
	Результат.Вставить("Зеленый", Зеленый);
	Результат.Вставить("Синий", Синий);
	
	Возврат Результат;
	
КонецФункции

// Возвращает Цвет по HEX с #
// 
// Параметры:
//  HEX - Строка - начинается с #
// 
// Возвращаемое значение:
//  Цвет
//
Функция ЦветПоHEX(HEX) Экспорт
	
	RGB = RGBПоHEX(HEX);
	Возврат Новый Цвет(RGB.Красный, RGB.Зеленый, RGB.Синий);
	
КонецФункции

// Возвращает HEX Цвета с # по цвету
// 
// Параметры:
//  Цвет - Цвет
// 
// Возвращаемое значение:
//  Строка - Цвет в HEX формате
//
Функция HEXПоЦвету(Цвет) Экспорт
	
	Возврат HEXПоRGB(Цвет.Красный, Цвет.Зеленый, Цвет.Синий);
	
КонецФункции

// Создает и возвращает случайный светлый цвет
// 
// Параметры:
//  ЧислоДляДобавления - Число - Добавляется в ГенераторСлучайныхЧисел
// 
// Возвращаемое значение:
//  Цвет - случайный светлый цвет
//
Функция СлучайныйСветлыйЦвет(ЧислоДляДобавления = 0) Экспорт
	
	ГСЧ = Новый ГенераторСлучайныхЧисел(ТекущаяДатаСеанса() - Дата(1, 1, 1) + ЧислоДляДобавления);
	
	НижняяГраница = 185;
	ВерхняяГраница = 230;
	
	Красный = ГСЧ.СлучайноеЧисло(НижняяГраница, ВерхняяГраница);
	Зеленый = ГСЧ.СлучайноеЧисло(НижняяГраница, ВерхняяГраница);
	Синий = ГСЧ.СлучайноеЧисло(НижняяГраница, ВерхняяГраница);
	
	Возврат Новый Цвет(Красный, Зеленый, Синий);
	
КонецФункции

// Возвращает абсолютный цвет по принятому цвету
//
// Параметры:
//  Цвет - Цвет - цвет любого вида
// 
// Возвращаемое значение:
//  - Цвет - цвет с видом Абсолютный
//
Функция АбсолютныйЦвет(Цвет) Экспорт
	
	Если Цвет.Вид=ВидЦвета.Абсолютный Тогда
		Возврат Цвет;
	КонецЕсли;
	
	Поток = Новый ПотокВПамяти;
	
	ТабличныйДокумент=Новый ТабличныйДокумент;
	ТабличныйДокумент.Область("R1C1").ЦветФона=Цвет;
	ТабличныйДокумент.Записать(Поток, ТипФайлаТабличногоДокумента.MXL7);
	ТабличныйДокумент.Прочитать(
		Поток.ЗакрытьИПолучитьДвоичныеДанные().ОткрытьПотокДляЧтения(),
		СпособЧтенияЗначенийТабличногоДокумента.Значение);
	
	Возврат ТабличныйДокумент.Область("R1C1").ЦветФона;
	
КонецФункции

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

Функция НазваниеОбластиWebЦветов(Английский = Ложь)
	
	Возврат СтрШаблон("ОпределениеЦветов|НазваниеWebЦвета%1", ?(Английский, "En", "Ru"));
	
КонецФункции

#КонецОбласти
