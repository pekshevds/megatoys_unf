
#Область ПрограммныйИнтерфейс

// Процедура - Обновляет признак прослеживаемости с табличной части документа
//
// Параметры:
//  ТабличнаяЧасть				 - 	ДанныеФормыКоллекция - Таблица формы, содержащая прослеживаемые запасы
//  СведенияПрослеживаемости	 - 	ДанныеФормыКоллекция - Таблица РНПТ
//  ИспользуетсяПрослеживаемость - 	Булево - Признак использования механизма прослеживаемости для документа
//
Процедура ОбновитьПризнакПрослеживаемости(ТабличнаяЧасть, СведенияПрослеживаемости, ИспользуетсяПрослеживаемость) Экспорт
	
	Если НЕ ИспользуетсяПрослеживаемость Тогда
		
		// Очистка данных прослеживаемости
		Для Каждого СтрокаТаблицы Из ТабличнаяЧасть Цикл
			СтрокаТаблицы.ПрослеживаемыйТовар = Ложь;
			СтрокаТаблицы.ПрослеживаемыйКомплект = Ложь;
		КонецЦикла;
		СведенияПрослеживаемости.Очистить();
		Возврат;
		
	КонецЕсли;
		
	// Получим реквизиты используемой номенклатуры в таблице.
	МассивНоменклатуры = ОбщегоНазначения.ВыгрузитьКолонку(ТабличнаяЧасть.Выгрузить(), "Номенклатура", Истина);
	
	ОбщегоНазначенияУНФКлиентСервер.УдалитьНеЗаполненныеЭлементыМассива(МассивНоменклатуры);
	
	РеквизитыНоменклатуры = ОбщегоНазначения.ЗначениеРеквизитаОбъектов(
	МассивНоменклатуры,
	"ПрослеживаемыйТовар");
	
	РеквизитыНоменклатурыПрослеживаемыйКомплект = ОбщегоНазначения.ЗначениеРеквизитаОбъектов(
	МассивНоменклатуры,
	"ПрослеживаемыйКомплект");
	
	Для Каждого СтрокаТаблицы Из ТабличнаяЧасть Цикл
		
		Если СтрокаТаблицы.Свойство("ЕстьВДокументеРеализации") 
			И СтрокаТаблицы.ЕстьВДокументеРеализации
			ИЛИ СтрокаТаблицы.Свойство("ЕстьВДокументеПоступления") 
			И СтрокаТаблицы.ЕстьВДокументеПоступления Тогда
			// Не обновляем признак прослеживаемости для строк исходного документа. 
			Продолжить;
		КонецЕсли;
		
		РеквизитыТекущейНоменклатуры = РеквизитыНоменклатуры[СтрокаТаблицы.Номенклатура];
		РеквизитыТекущейНоменклатурыПрослеживаемыйКомплект = РеквизитыНоменклатурыПрослеживаемыйКомплект[СтрокаТаблицы.Номенклатура];
		Если РеквизитыТекущейНоменклатуры <> Неопределено Тогда
			СтрокаТаблицы.ПрослеживаемыйТовар = РеквизитыТекущейНоменклатуры;
			СтрокаТаблицы.ПрослеживаемыйКомплект = РеквизитыТекущейНоменклатурыПрослеживаемыйКомплект;
		КонецЕсли;
		
	КонецЦикла;
	
	СтруктураОтбора = Новый Структура;
	Для каждого СтрокаТаблицы Из ТабличнаяЧасть Цикл
		Если СтрокаТаблицы.ПрослеживаемыйТовар Тогда
			СтрокаТаблицы.НомерГТД = Неопределено;
		Иначе
			СтруктураОтбора.Вставить("ИдентификаторСтроки", СтрокаТаблицы.ИдентификаторСтроки);
			ПодчиненныеСтроки = СведенияПрослеживаемости.НайтиСтроки(СтруктураОтбора);
			Для каждого УдаляемаяСтрока Из ПодчиненныеСтроки Цикл
				СведенияПрослеживаемости.Удалить(УдаляемаяСтрока);
			КонецЦикла; 
		КонецЕсли; 
	КонецЦикла; 
	
КонецПроцедуры

// Процедура - Действия при создании формы документа для поддержки механизма прослеживаемости
//
// Параметры:
//  Форма		 - 	УправляемаяФорма - Форма документа 
//  КэшЗначений	 - 	Структура - Кешированные значения формы 
//
Процедура ПриСозданииФормы(Форма, КэшЗначений, ПрослеживаемаяОперация = Истина) Экспорт
	
	Если ТипЗнч(КэшЗначений) <> Тип("Структура") Тогда
		КэшЗначений = Новый Структура;
	КонецЕсли;

	КэшЗначений.Вставить("ВестиУчетПрослеживаемыхТоваров",
		ПрослеживаемостьУНФ.ВедетсяУчетПрослеживаемыхТоваров(Форма.Объект.Дата) И ПрослеживаемаяОперация);
	
КонецПроцедуры

// Процедура - Обработка выбора РНПТН
//
// Параметры:
//  Форма				 - 	УправляемаяФорма - Форма документа 
//  ИдентификаторСтроки	 - 	Строка - Значение реквизита ИдентификаторСтроки изменяемой строки таблицы
//  ВыбранноеЗначение	 - 	Структура - Результат открытия формы подбора РНПТ
//
Процедура ОбработкаВыбораРНПТН(Форма, ИдентификаторСтроки, ВыбранноеЗначение) Экспорт
	
	Если Форма.ИмяФормы = "Обработка.ПомощникВводаНачальныхОстатков.Форма.ФормаВводаОстатков" Тогда
		Объект = Форма.ВводНачальныхОстатковТовары;
	Иначе
		Объект = Форма.Объект;
	КонецЕсли;
	
	СтрокиСРНПТ = Объект.СведенияПрослеживаемости.НайтиСтроки(Новый Структура("ИдентификаторСтроки", ИдентификаторСтроки));
	
	Для Каждого СтрокаСРНПТ Из СтрокиСРНПТ Цикл
		Объект.СведенияПрослеживаемости.Удалить(СтрокаСРНПТ);
	КонецЦикла;
	
	ПодобранныеРНПТ = ПолучитьИзВременногоХранилища(ВыбранноеЗначение.АдресТаблицыРНПТВХранилище);
	Для Каждого НовыйРНПТ Из ПодобранныеРНПТ Цикл
		НоваяСтрока = Объект.СведенияПрослеживаемости.Добавить();
		ЗаполнитьЗначенияСвойств(НоваяСтрока, НовыйРНПТ);
		НоваяСтрока.ИдентификаторСтроки = ИдентификаторСтроки;
	КонецЦикла;
	
КонецПроцедуры

// Обновляет условное оформление колонки "ЗапасыРНПТ" для формы документа
//
// Параметры:
//  Форма - Форма объекта для условного оформления
//
Процедура ОбновитьУсловноеОформлениеТабличнойЧастиДляПрослеживаемости(Форма) Экспорт
	
	Если Не ПолучитьФункциональнуюОпцию("ВестиУчетПрослеживаемыхТоваров") Тогда
		НовоеУсловноеОформление = Форма.УсловноеОформление.Элементы.Добавить();
		РаботаСФормой.ДобавитьЭлементОтбораКомпоновкиДанных(НовоеУсловноеОформление.Отбор, "Объект.Запасы.ПрослеживаемыйТовар", Ложь);
		РаботаСФормой.ДобавитьОформляемыеПоля(НовоеУсловноеОформление, "ЗапасыПрослеживаемыйТовар");
		РаботаСФормой.ДобавитьЭлементУсловногоОформления(НовоеУсловноеОформление, "Видимость", Ложь);
		Возврат
	КонецЕсли;
	
	Если Форма.ИмяФормы = "Обработка.ПомощникВводаНачальныхОстатков.Форма.ФормаВводаОстатков" Тогда
		
		НовоеУсловноеОформление = Форма.УсловноеОформление.Элементы.Добавить();
		РаботаСФормой.ДобавитьЭлементОтбораКомпоновкиДанных(НовоеУсловноеОформление.Отбор, "ВводНачальныхОстатковТовары.ЗапасыВРазрезеГТД.ПрослеживаемыйТовар", Ложь);
		РаботаСФормой.ДобавитьОформляемыеПоля(НовоеУсловноеОформление, "ВводНачальныхОстатковТоварыЗапасыВРазрезеГТДРНПТ");
		РаботаСФормой.ДобавитьЭлементУсловногоОформления(НовоеУсловноеОформление, "Видимость", Ложь);
		
		НовоеУсловноеОформление = Форма.УсловноеОформление.Элементы.Добавить();
		РаботаСФормой.ДобавитьЭлементОтбораКомпоновкиДанных(НовоеУсловноеОформление.Отбор, "ВводНачальныхОстатковТовары.ЗапасыВРазрезеГТД.ПрослеживаемыйТовар", Истина);
		РаботаСФормой.ДобавитьОформляемыеПоля(НовоеУсловноеОформление, "ВводНачальныхОстатковТоварыЗапасыВРазрезеГТДПриРНПТ");
		РаботаСФормой.ДобавитьЭлементУсловногоОформления(НовоеУсловноеОформление, "Видимость", Ложь);
		
		НовоеУсловноеОформление = Форма.УсловноеОформление.Элементы.Добавить();
		РаботаСФормой.ДобавитьЭлементОтбораКомпоновкиДанных(НовоеУсловноеОформление.Отбор, "ВводНачальныхОстатковТовары.ЗапасыПереданныеВРазрезеГТД.ПрослеживаемыйТовар", Ложь);
		РаботаСФормой.ДобавитьОформляемыеПоля(НовоеУсловноеОформление, "ВводНачальныхОстатковТоварыЗапасыПереданныеВРазрезеГТДРНПТ");
		РаботаСФормой.ДобавитьЭлементУсловногоОформления(НовоеУсловноеОформление, "Видимость", Ложь);
		
		НовоеУсловноеОформление = Форма.УсловноеОформление.Элементы.Добавить();
		РаботаСФормой.ДобавитьЭлементОтбораКомпоновкиДанных(НовоеУсловноеОформление.Отбор, "ВводНачальныхОстатковТовары.ЗапасыПереданныеВРазрезеГТД.ПрослеживаемыйТовар", Истина);
		РаботаСФормой.ДобавитьОформляемыеПоля(НовоеУсловноеОформление, "ВводНачальныхОстатковТоварыЗапасыПереданныеВРазрезеГТДПриРНПТ");
		РаботаСФормой.ДобавитьЭлементУсловногоОформления(НовоеУсловноеОформление, "Видимость", Ложь);
		
		НовоеУсловноеОформление = Форма.УсловноеОформление.Элементы.Добавить();
		РаботаСФормой.ДобавитьЭлементОтбораКомпоновкиДанных(НовоеУсловноеОформление.Отбор, "ВводНачальныхОстатковТовары.ЗапасыПринятыеВРазрезеГТД.ПрослеживаемыйТовар", Ложь);
		РаботаСФормой.ДобавитьОформляемыеПоля(НовоеУсловноеОформление, "ВводНачальныхОстатковТоварыЗапасыПринятыеВРазрезеГТДРНПТ");
		РаботаСФормой.ДобавитьЭлементУсловногоОформления(НовоеУсловноеОформление, "Видимость", Ложь);
		
		НовоеУсловноеОформление = Форма.УсловноеОформление.Элементы.Добавить();
		РаботаСФормой.ДобавитьЭлементОтбораКомпоновкиДанных(НовоеУсловноеОформление.Отбор, "ВводНачальныхОстатковТовары.ЗапасыПринятыеВРазрезеГТД.ПрослеживаемыйТовар", Истина);
		РаботаСФормой.ДобавитьОформляемыеПоля(НовоеУсловноеОформление, "ВводНачальныхОстатковТоварыЗапасыПринятыеВРазрезеГТДПриРНПТ");
		РаботаСФормой.ДобавитьЭлементУсловногоОформления(НовоеУсловноеОформление, "Видимость", Ложь);
		
		НовоеУсловноеОформление = Форма.УсловноеОформление.Элементы.Добавить();
		РаботаСФормой.ДобавитьЭлементОтбораКомпоновкиДанных(НовоеУсловноеОформление.Отбор, "ВводНачальныхОстатковТовары.ЗапасыПереданныеВРазрезеГТД.ПрослеживаемыйТовар", Истина);
		РаботаСФормой.ДобавитьОформляемыеПоля(НовоеУсловноеОформление, "ВводНачальныхОстатковТоварыЗапасыПереданныеВРазрезеГТДКомиссионер");
		РаботаСФормой.ДобавитьЭлементУсловногоОформления(НовоеУсловноеОформление, "ТолькоПросмотр", Ложь);
		
		НовоеУсловноеОформление = Форма.УсловноеОформление.Элементы.Добавить();
		РаботаСФормой.ДобавитьЭлементОтбораКомпоновкиДанных(НовоеУсловноеОформление.Отбор, "ВводНачальныхОстатковТовары.ЗапасыПереданныеВРазрезеГТД.ПрослеживаемыйТовар", Ложь);
		РаботаСФормой.ДобавитьОформляемыеПоля(НовоеУсловноеОформление, "ВводНачальныхОстатковТоварыЗапасыПереданныеВРазрезеГТДКомиссионер");
		РаботаСФормой.ДобавитьЭлементУсловногоОформления(НовоеУсловноеОформление, "Текст", НСтр("ru = '<Только для РНПТ>'"));
		РаботаСФормой.ДобавитьЭлементУсловногоОформления(НовоеУсловноеОформление, "Доступность", Ложь);
		
		НовоеУсловноеОформление = Форма.УсловноеОформление.Элементы.Добавить();
		РаботаСФормой.ДобавитьЭлементОтбораКомпоновкиДанных(НовоеУсловноеОформление.Отбор, "ВводНачальныхОстатковТовары.ЗапасыВРазрезеГТД.ПрослеживаемыйТовар", Ложь);
		РаботаСФормой.ДобавитьОформляемыеПоля(НовоеУсловноеОформление, "ВводНачальныхОстатковТоварыЗапасыВРазрезеГТДПрослеживаемыйТовар");
		РаботаСФормой.ДобавитьЭлементУсловногоОформления(НовоеУсловноеОформление, "Видимость", Ложь);
		
		НовоеУсловноеОформление = Форма.УсловноеОформление.Элементы.Добавить();
		РаботаСФормой.ДобавитьЭлементОтбораКомпоновкиДанных(НовоеУсловноеОформление.Отбор, "ВводНачальныхОстатковТовары.ЗапасыПереданныеВРазрезеГТД.ПрослеживаемыйТовар", Ложь);
		РаботаСФормой.ДобавитьОформляемыеПоля(НовоеУсловноеОформление, "ВводНачальныхОстатковТоварыЗапасыПереданныеВРазрезеГТДПрослеживаемыйТовар");
		РаботаСФормой.ДобавитьЭлементУсловногоОформления(НовоеУсловноеОформление, "Видимость", Ложь);
		
		НовоеУсловноеОформление = Форма.УсловноеОформление.Элементы.Добавить();
		РаботаСФормой.ДобавитьЭлементОтбораКомпоновкиДанных(НовоеУсловноеОформление.Отбор, "ВводНачальныхОстатковТовары.ЗапасыПринятыеВРазрезеГТД.ПрослеживаемыйТовар", Ложь);
		РаботаСФормой.ДобавитьОформляемыеПоля(НовоеУсловноеОформление, "ВводНачальныхОстатковТоварыЗапасыПринятыеВРазрезеГТДПрослеживаемыйТовар");
		РаботаСФормой.ДобавитьЭлементУсловногоОформления(НовоеУсловноеОформление, "Видимость", Ложь);
		
		Возврат;
		
	КонецЕсли;
	
	Если Форма.ИмяФормы = "Документ.ВводНачальныхОстатков.Форма.ФормаДокумента" Тогда
		
		НовоеУсловноеОформление = Форма.УсловноеОформление.Элементы.Добавить();
		РаботаСФормой.ДобавитьЭлементОтбораКомпоновкиДанных(НовоеУсловноеОформление.Отбор, "Объект.ЗапасыПереданныеВРазрезеГТД.ПрослеживаемыйТовар", Истина);
		РаботаСФормой.ДобавитьОформляемыеПоля(НовоеУсловноеОформление, "ЗапасыПереданныеВРазрезеГТДКомиссионер");
		РаботаСФормой.ДобавитьЭлементУсловногоОформления(НовоеУсловноеОформление, "ТолькоПросмотр", Ложь);
		
		НовоеУсловноеОформление = Форма.УсловноеОформление.Элементы.Добавить();
		РаботаСФормой.ДобавитьЭлементОтбораКомпоновкиДанных(НовоеУсловноеОформление.Отбор, "Объект.ЗапасыПереданныеВРазрезеГТД.ПрослеживаемыйТовар", Ложь);
		РаботаСФормой.ДобавитьОформляемыеПоля(НовоеУсловноеОформление, "ЗапасыПереданныеВРазрезеГТДКомиссионер");
		РаботаСФормой.ДобавитьЭлементУсловногоОформления(НовоеУсловноеОформление, "Текст", НСтр("ru = '<Только для РНПТ>'"));
		РаботаСФормой.ДобавитьЭлементУсловногоОформления(НовоеУсловноеОформление, "Доступность", Ложь);
		
	КонецЕсли;
	
	СсылкаНаОбъект = Форма.Объект.Ссылка;
	
	МассивДопустимыхТипов = ИсключаемыеТипыДляОформленияАвто();
	
	Если МассивДопустимыхТипов.Найти(ТипЗнч(СсылкаНаОбъект)) = Неопределено Тогда
		
		НовоеУсловноеОформление = Форма.УсловноеОформление.Элементы.Добавить();
		
		ГруппаОтборов1 = РаботаСФормой.ДобавитьГруппуЭлементовОтбораКомпоновкиДанных(НовоеУсловноеОформление.Отбор, ТипГруппыЭлементовОтбораКомпоновкиДанных.ГруппаИ);
		РаботаСФормой.ДобавитьЭлементОтбораКомпоновкиДанных(ГруппаОтборов1, "Объект.Запасы.ПодсказкаРНПТ","РНПТ:", ВидСравненияКомпоновкиДанных.Равно);
		РаботаСФормой.ДобавитьЭлементОтбораКомпоновкиДанных(ГруппаОтборов1, "Объект.Запасы.РНПТ", "", ВидСравненияКомпоновкиДанных.Равно);
		РаботаСФормой.ДобавитьЭлементОтбораКомпоновкиДанных(ГруппаОтборов1, "Объект.Запасы.ПрослеживаемыйТовар", Истина, ВидСравненияКомпоновкиДанных.Равно);
		РаботаСФормой.ДобавитьЭлементОтбораКомпоновкиДанных(ГруппаОтборов1, "Объект.Запасы.ПрослеживаемыйКомплект", Ложь, ВидСравненияКомпоновкиДанных.Равно);
		
		Если ТипЗнч(СсылкаНаОбъект) = Тип("ДокументСсылка.РасходнаяНакладная") Тогда
			
			ГруппаОтборов2 = РаботаСФормой.ДобавитьГруппуЭлементовОтбораКомпоновкиДанных(НовоеУсловноеОформление.Отбор, ТипГруппыЭлементовОтбораКомпоновкиДанных.ГруппаИли);
			РаботаСФормой.ДобавитьЭлементОтбораКомпоновкиДанных(ГруппаОтборов2, "Объект.ВидОперации", Перечисления.ВидыОперацийРасходнаяНакладная.ПродажаПокупателю, ВидСравненияКомпоновкиДанных.Равно);
			РаботаСФормой.ДобавитьЭлементОтбораКомпоновкиДанных(ГруппаОтборов2, "Объект.ВидОперации", Перечисления.ВидыОперацийРасходнаяНакладная.ПередачаНаКомиссию, ВидСравненияКомпоновкиДанных.Равно);
			РаботаСФормой.ДобавитьЭлементОтбораКомпоновкиДанных(ГруппаОтборов2, "Объект.ВидОперации", Перечисления.ВидыОперацийРасходнаяНакладная.ВозвратПоставщику, ВидСравненияКомпоновкиДанных.Равно);
			РаботаСФормой.ДобавитьЭлементОтбораКомпоновкиДанных(ГруппаОтборов2, "Объект.ВидОперации", Перечисления.ВидыОперацийРасходнаяНакладная.ВозвратКомитенту, ВидСравненияКомпоновкиДанных.Равно);
			
		КонецЕсли;
		
		Если ТипЗнч(СсылкаНаОбъект) = Тип("ДокументСсылка.ПеремещениеЗапасов") Тогда
			
			ГруппаОтборов2 = РаботаСФормой.ДобавитьГруппуЭлементовОтбораКомпоновкиДанных(НовоеУсловноеОформление.Отбор, ТипГруппыЭлементовОтбораКомпоновкиДанных.ГруппаИли);
			РаботаСФормой.ДобавитьЭлементОтбораКомпоновкиДанных(ГруппаОтборов2, "Объект.ВидОперации", Перечисления.ВидыОперацийПеремещениеЗапасов.СписаниеНаРасходы, ВидСравненияКомпоновкиДанных.Равно);
			РаботаСФормой.ДобавитьЭлементОтбораКомпоновкиДанных(ГруппаОтборов2, "Объект.ВидОперации", Перечисления.ВидыОперацийПеремещениеЗапасов.ВозвратИзЭксплуатации, ВидСравненияКомпоновкиДанных.Равно);
			РаботаСФормой.ДобавитьЭлементОтбораКомпоновкиДанных(ГруппаОтборов2, "Объект.ВидОперации", Перечисления.ВидыОперацийПеремещениеЗапасов.ПередачаВЭксплуатацию, ВидСравненияКомпоновкиДанных.Равно);
			
		КонецЕсли;
		
		Если ТипЗнч(СсылкаНаОбъект) = Тип("ДокументСсылка.КомплектацияЗапасов") Тогда
			РаботаСФормой.ДобавитьЭлементОтбораКомпоновкиДанных(НовоеУсловноеОформление.Отбор, "Объект.ВидОперации", Перечисления.ВидыОперацийКомплектацияЗапасов.Сборка);
		КонецЕсли;

		РаботаСФормой.ДобавитьОформляемыеПоля(НовоеУсловноеОформление, "ЗапасыРНПТ");
		РаботаСФормой.ДобавитьЭлементУсловногоОформления(НовоеУсловноеОформление, "Текст", НСтр("ru = '<Авто>'"));
		
	КонецЕсли;
	
	МассивДопустимыхТипов = ТипыДокументовСПрослеживаемостью();
	
	Если МассивДопустимыхТипов.Найти(ТипЗнч(СсылкаНаОбъект)) = Неопределено Тогда
		Возврат
	КонецЕсли;
	
	Если ТипЗнч(СсылкаНаОбъект) = Тип("ДокументСсылка.ВводНачальныхОстатков") Тогда
		
		НовоеУсловноеОформление = Форма.УсловноеОформление.Элементы.Добавить();
		РаботаСФормой.ДобавитьЭлементОтбораКомпоновкиДанных(НовоеУсловноеОформление.Отбор, "Объект.ЗапасыВРазрезеГТД.ПрослеживаемыйТовар", Ложь);
		РаботаСФормой.ДобавитьОформляемыеПоля(НовоеУсловноеОформление, "ЗапасыВРазрезеГТДРНПТ");
		РаботаСФормой.ДобавитьЭлементУсловногоОформления(НовоеУсловноеОформление, "Видимость", Ложь);
		
		НовоеУсловноеОформление = Форма.УсловноеОформление.Элементы.Добавить();
		РаботаСФормой.ДобавитьЭлементОтбораКомпоновкиДанных(НовоеУсловноеОформление.Отбор, "Объект.ЗапасыВРазрезеГТД.ПрослеживаемыйТовар", Истина);
		РаботаСФормой.ДобавитьОформляемыеПоля(НовоеУсловноеОформление, "ЗапасыВРазрезеГТДПриРНПТ");
		РаботаСФормой.ДобавитьЭлементУсловногоОформления(НовоеУсловноеОформление, "Видимость", Ложь);
		
		НовоеУсловноеОформление = Форма.УсловноеОформление.Элементы.Добавить();
		РаботаСФормой.ДобавитьЭлементОтбораКомпоновкиДанных(НовоеУсловноеОформление.Отбор, "Объект.ЗапасыПереданныеВРазрезеГТД.ПрослеживаемыйТовар", Ложь);
		РаботаСФормой.ДобавитьОформляемыеПоля(НовоеУсловноеОформление, "ЗапасыПереданныеВРазрезеГТДРНПТ");
		РаботаСФормой.ДобавитьЭлементУсловногоОформления(НовоеУсловноеОформление, "Видимость", Ложь);
		
		НовоеУсловноеОформление = Форма.УсловноеОформление.Элементы.Добавить();
		РаботаСФормой.ДобавитьЭлементОтбораКомпоновкиДанных(НовоеУсловноеОформление.Отбор, "Объект.ЗапасыПереданныеВРазрезеГТД.ПрослеживаемыйТовар", Истина);
		РаботаСФормой.ДобавитьОформляемыеПоля(НовоеУсловноеОформление, "ЗапасыПереданныеВРазрезеГТДПриРНПТ");
		РаботаСФормой.ДобавитьЭлементУсловногоОформления(НовоеУсловноеОформление, "Видимость", Ложь);
		
		НовоеУсловноеОформление = Форма.УсловноеОформление.Элементы.Добавить();
		РаботаСФормой.ДобавитьЭлементОтбораКомпоновкиДанных(НовоеУсловноеОформление.Отбор, "Объект.ЗапасыПринятыеВРазрезеГТД.ПрослеживаемыйТовар", Ложь);
		РаботаСФормой.ДобавитьОформляемыеПоля(НовоеУсловноеОформление, "ЗапасыПринятыеВРазрезеГТДРНПТ");
		РаботаСФормой.ДобавитьЭлементУсловногоОформления(НовоеУсловноеОформление, "Видимость", Ложь);
		
		НовоеУсловноеОформление = Форма.УсловноеОформление.Элементы.Добавить();
		РаботаСФормой.ДобавитьЭлементОтбораКомпоновкиДанных(НовоеУсловноеОформление.Отбор, "Объект.ЗапасыПринятыеВРазрезеГТД.ПрослеживаемыйТовар", Истина);
		РаботаСФормой.ДобавитьОформляемыеПоля(НовоеУсловноеОформление, "ЗапасыПринятыеВРазрезеГТДПриРНПТ");
		РаботаСФормой.ДобавитьЭлементУсловногоОформления(НовоеУсловноеОформление, "Видимость", Ложь);
		
		НовоеУсловноеОформление = Форма.УсловноеОформление.Элементы.Добавить();
		РаботаСФормой.ДобавитьЭлементОтбораКомпоновкиДанных(НовоеУсловноеОформление.Отбор, "Объект.ЗапасыВРазрезеГТД.ПрослеживаемыйТовар", Ложь);
		РаботаСФормой.ДобавитьОформляемыеПоля(НовоеУсловноеОформление, "ЗапасыВРазрезеГТДПрослеживаемыйТовар");
		РаботаСФормой.ДобавитьЭлементУсловногоОформления(НовоеУсловноеОформление, "Видимость", Ложь);

		НовоеУсловноеОформление = Форма.УсловноеОформление.Элементы.Добавить();
		РаботаСФормой.ДобавитьЭлементОтбораКомпоновкиДанных(НовоеУсловноеОформление.Отбор, "Объект.ЗапасыПереданныеВРазрезеГТД.ПрослеживаемыйТовар", Ложь);
		РаботаСФормой.ДобавитьОформляемыеПоля(НовоеУсловноеОформление, "ЗапасыПереданныеВРазрезеГТДПрослеживаемыйТовар");
		РаботаСФормой.ДобавитьЭлементУсловногоОформления(НовоеУсловноеОформление, "Видимость", Ложь);

		НовоеУсловноеОформление = Форма.УсловноеОформление.Элементы.Добавить();
		РаботаСФормой.ДобавитьЭлементОтбораКомпоновкиДанных(НовоеУсловноеОформление.Отбор, "Объект.ЗапасыПринятыеВРазрезеГТД.ПрослеживаемыйТовар", Ложь);
		РаботаСФормой.ДобавитьОформляемыеПоля(НовоеУсловноеОформление, "ЗапасыПринятыеВРазрезеГТДПрослеживаемыйТовар");
		РаботаСФормой.ДобавитьЭлементУсловногоОформления(НовоеУсловноеОформление, "Видимость", Ложь);

		
		Возврат;
		
	КонецЕсли;
	
	НовоеУсловноеОформление = Форма.УсловноеОформление.Элементы.Добавить();
	ГруппаОтборов3 = РаботаСФормой.ДобавитьГруппуЭлементовОтбораКомпоновкиДанных(НовоеУсловноеОформление.Отбор, ТипГруппыЭлементовОтбораКомпоновкиДанных.ГруппаИ);
	РаботаСФормой.ДобавитьЭлементОтбораКомпоновкиДанных(ГруппаОтборов3, "Объект.Запасы.ПодсказкаРНПТ","РНПТ:", ВидСравненияКомпоновкиДанных.Равно);
	РаботаСФормой.ДобавитьЭлементОтбораКомпоновкиДанных(ГруппаОтборов3, "Объект.Запасы.РНПТ", "", ВидСравненияКомпоновкиДанных.Равно);
	РаботаСФормой.ДобавитьЭлементОтбораКомпоновкиДанных(ГруппаОтборов3, "Объект.Запасы.ПрослеживаемыйТовар", Истина, ВидСравненияКомпоновкиДанных.Равно);
	РаботаСФормой.ДобавитьЭлементОтбораКомпоновкиДанных(ГруппаОтборов3, "Объект.Запасы.ПрослеживаемыйКомплект", Истина, ВидСравненияКомпоновкиДанных.Равно);
	
	РаботаСФормой.ДобавитьОформляемыеПоля(НовоеУсловноеОформление, "ЗапасыРНПТ");
	РаботаСФормой.ДобавитьЭлементУсловногоОформления(НовоеУсловноеОформление, "Текст", НСтр("ru = '<...>'"));
	РаботаСФормой.ДобавитьЭлементУсловногоОформления(НовоеУсловноеОформление, "ЦветТекста", ЦветаСтиля.НезаполненныйРеквизитЦветБЭД);
	
	Если ТипЗнч(СсылкаНаОбъект) = Тип("ДокументСсылка.ПриходнаяНакладная") Тогда
		
		НовоеУсловноеОформление = Форма.УсловноеОформление.Элементы.Добавить();
		РаботаСФормой.ДобавитьЭлементОтбораКомпоновкиДанных(НовоеУсловноеОформление.Отбор, "Объект.Запасы.ПрослеживаемыйТовар", Ложь);
		РаботаСФормой.ДобавитьОформляемыеПоля(НовоеУсловноеОформление, "ЗапасыРНПТ");
		РаботаСФормой.ДобавитьЭлементУсловногоОформления(НовоеУсловноеОформление, "Видимость", Ложь);
		
		НовоеУсловноеОформление = Форма.УсловноеОформление.Элементы.Добавить();
		РаботаСФормой.ДобавитьЭлементОтбораКомпоновкиДанных(НовоеУсловноеОформление.Отбор, "Объект.Запасы.ПрослеживаемыйТовар", Истина);
		РаботаСФормой.ДобавитьЭлементОтбораКомпоновкиДанных(НовоеУсловноеОформление.Отбор, "ПоставщикРезидентТаможенногоСоюза", Истина);
		РаботаСФормой.ДобавитьОформляемыеПоля(НовоеУсловноеОформление, "ЗапасыРНПТ");
		РаботаСФормой.ДобавитьЭлементУсловногоОформления(НовоеУсловноеОформление, "Видимость", Ложь);
		
		НовоеУсловноеОформление = Форма.УсловноеОформление.Элементы.Добавить();
		РаботаСФормой.ДобавитьЭлементОтбораКомпоновкиДанных(НовоеУсловноеОформление.Отбор, "Объект.Запасы.ПрослеживаемыйТовар", Ложь);
		РаботаСФормой.ДобавитьОформляемыеПоля(НовоеУсловноеОформление, "ЗапасыПрослеживаемыйТовар");
		РаботаСФормой.ДобавитьЭлементУсловногоОформления(НовоеУсловноеОформление, "Видимость", Ложь);
		
		НовоеУсловноеОформление = Форма.УсловноеОформление.Элементы.Добавить();
		РаботаСФормой.ДобавитьЭлементОтбораКомпоновкиДанных(НовоеУсловноеОформление.Отбор, "Объект.Запасы.ПрослеживаемыйТовар", Истина);
		РаботаСФормой.ДобавитьЭлементОтбораКомпоновкиДанных(НовоеУсловноеОформление.Отбор, "ПоставщикРезидентТаможенногоСоюза", Истина);
		РаботаСФормой.ДобавитьОформляемыеПоля(НовоеУсловноеОформление, "ЗапасыНомерГТДПриРНПТ");
		РаботаСФормой.ДобавитьЭлементУсловногоОформления(НовоеУсловноеОформление, "Видимость", Истина);
		
		НовоеУсловноеОформление = Форма.УсловноеОформление.Элементы.Добавить();
		РаботаСФормой.ДобавитьЭлементОтбораКомпоновкиДанных(НовоеУсловноеОформление.Отбор, "Объект.Запасы.ПрослеживаемыйТовар", Истина);
		РаботаСФормой.ДобавитьЭлементОтбораКомпоновкиДанных(НовоеУсловноеОформление.Отбор, "ПоставщикРезидентТаможенногоСоюза", Ложь);
		РаботаСФормой.ДобавитьОформляемыеПоля(НовоеУсловноеОформление, "ЗапасыРНПТ");
		РаботаСФормой.ДобавитьЭлементУсловногоОформления(НовоеУсловноеОформление, "Видимость", Истина);
		
		НовоеУсловноеОформление = Форма.УсловноеОформление.Элементы.Добавить();
		РаботаСФормой.ДобавитьЭлементОтбораКомпоновкиДанных(НовоеУсловноеОформление.Отбор, "Объект.Запасы.ПрослеживаемыйТовар", Истина);
		РаботаСФормой.ДобавитьЭлементОтбораКомпоновкиДанных(НовоеУсловноеОформление.Отбор, "ПоставщикРезидентТаможенногоСоюза", Ложь);
		РаботаСФормой.ДобавитьОформляемыеПоля(НовоеУсловноеОформление, "ЗапасыНомерГТДПриРНПТ");
		РаботаСФормой.ДобавитьЭлементУсловногоОформления(НовоеУсловноеОформление, "Видимость", Ложь);
		
	Иначе
		
		НовоеУсловноеОформление = Форма.УсловноеОформление.Элементы.Добавить();
		РаботаСФормой.ДобавитьЭлементОтбораКомпоновкиДанных(НовоеУсловноеОформление.Отбор, "Объект.Запасы.ПрослеживаемыйТовар", Ложь);
		РаботаСФормой.ДобавитьОформляемыеПоля(НовоеУсловноеОформление, "ЗапасыРНПТ");
		РаботаСФормой.ДобавитьЭлементУсловногоОформления(НовоеУсловноеОформление, "Видимость", Ложь);
		
		НовоеУсловноеОформление = Форма.УсловноеОформление.Элементы.Добавить();
		РаботаСФормой.ДобавитьЭлементОтбораКомпоновкиДанных(НовоеУсловноеОформление.Отбор, "Объект.Запасы.ПрослеживаемыйТовар", Ложь);
		РаботаСФормой.ДобавитьОформляемыеПоля(НовоеУсловноеОформление, "ЗапасыПрослеживаемыйТовар");
		РаботаСФормой.ДобавитьЭлементУсловногоОформления(НовоеУсловноеОформление, "Видимость", Ложь);
		
		НовоеУсловноеОформление = Форма.УсловноеОформление.Элементы.Добавить();
		РаботаСФормой.ДобавитьЭлементОтбораКомпоновкиДанных(НовоеУсловноеОформление.Отбор, "Объект.Запасы.ПрослеживаемыйТовар", Истина);
		РаботаСФормой.ДобавитьОформляемыеПоля(НовоеУсловноеОформление, "ЗапасыНомерГТДПриРНПТ");
		РаботаСФормой.ДобавитьЭлементУсловногоОформления(НовоеУсловноеОформление, "Видимость", Ложь);
		
	КонецЕсли;
	
	Если ТипЗнч(СсылкаНаОбъект) = Тип("ДокументСсылка.СборкаЗапасов") Тогда
		
		НовоеУсловноеОформление = Форма.УсловноеОформление.Элементы.Добавить();
		РаботаСФормой.ДобавитьЭлементОтбораКомпоновкиДанных(НовоеУсловноеОформление.Отбор, "Объект.Продукция.ПрослеживаемыйТовар", Ложь);
		РаботаСФормой.ДобавитьОформляемыеПоля(НовоеУсловноеОформление, "ПродукцияРНПТ");
		РаботаСФормой.ДобавитьЭлементУсловногоОформления(НовоеУсловноеОформление, "Видимость", Ложь);
		
		НовоеУсловноеОформление = Форма.УсловноеОформление.Элементы.Добавить();
		РаботаСФормой.ДобавитьЭлементОтбораКомпоновкиДанных(НовоеУсловноеОформление.Отбор, "Объект.Продукция.ПрослеживаемыйТовар", Истина);
		РаботаСФормой.ДобавитьОформляемыеПоля(НовоеУсловноеОформление, "ПродукцияНомерГТДПриРНПТ");
		РаботаСФормой.ДобавитьЭлементУсловногоОформления(НовоеУсловноеОформление, "Видимость", Ложь);
	
	КонецЕсли;
	
	Если ТипЗнч(СсылкаНаОбъект) = Тип("ДокументСсылка.ОтчетКомиссионера")
		И СсылкаНаОбъект.ИспользоватьНовыйВидДокумента Тогда 
		
		НовоеУсловноеОформление = Форма.УсловноеОформление.Элементы.Добавить();
		
		ГруппаОтборов1 = РаботаСФормой.ДобавитьГруппуЭлементовОтбораКомпоновкиДанных(НовоеУсловноеОформление.Отбор, ТипГруппыЭлементовОтбораКомпоновкиДанных.ГруппаИ);
		РаботаСФормой.ДобавитьЭлементОтбораКомпоновкиДанных(ГруппаОтборов1, "Объект.ЗапасыВозвраты.ПодсказкаРНПТ","РНПТ:", ВидСравненияКомпоновкиДанных.Равно);
		РаботаСФормой.ДобавитьЭлементОтбораКомпоновкиДанных(ГруппаОтборов1, "Объект.ЗапасыВозвраты.РНПТ", "", ВидСравненияКомпоновкиДанных.Равно);
		РаботаСФормой.ДобавитьЭлементОтбораКомпоновкиДанных(ГруппаОтборов1, "Объект.ЗапасыВозвраты.ПрослеживаемыйТовар", Истина, ВидСравненияКомпоновкиДанных.Равно);
		РаботаСФормой.ДобавитьЭлементОтбораКомпоновкиДанных(ГруппаОтборов1, "Объект.ЗапасыВозвраты.ПрослеживаемыйКомплект", Ложь, ВидСравненияКомпоновкиДанных.Равно);
		
		РаботаСФормой.ДобавитьОформляемыеПоля(НовоеУсловноеОформление, "ЗапасыВозвратыРНПТ");
		РаботаСФормой.ДобавитьЭлементУсловногоОформления(НовоеУсловноеОформление, "Текст", НСтр("ru = '<Авто>'"));
		
		НовоеУсловноеОформление = Форма.УсловноеОформление.Элементы.Добавить();
		ГруппаОтборов3 = РаботаСФормой.ДобавитьГруппуЭлементовОтбораКомпоновкиДанных(НовоеУсловноеОформление.Отбор, ТипГруппыЭлементовОтбораКомпоновкиДанных.ГруппаИ);
		РаботаСФормой.ДобавитьЭлементОтбораКомпоновкиДанных(ГруппаОтборов3, "Объект.ЗапасыВозвраты.ПодсказкаРНПТ","РНПТ:", ВидСравненияКомпоновкиДанных.Равно);
		РаботаСФормой.ДобавитьЭлементОтбораКомпоновкиДанных(ГруппаОтборов3, "Объект.ЗапасыВозвраты.РНПТ", "", ВидСравненияКомпоновкиДанных.Равно);
		РаботаСФормой.ДобавитьЭлементОтбораКомпоновкиДанных(ГруппаОтборов3, "Объект.ЗапасыВозвраты.ПрослеживаемыйТовар", Истина, ВидСравненияКомпоновкиДанных.Равно);
		РаботаСФормой.ДобавитьЭлементОтбораКомпоновкиДанных(ГруппаОтборов3, "Объект.ЗапасыВозвраты.ПрослеживаемыйКомплект", Истина, ВидСравненияКомпоновкиДанных.Равно);
		
		РаботаСФормой.ДобавитьОформляемыеПоля(НовоеУсловноеОформление, "ЗапасыВозвратыРНПТ");
		РаботаСФормой.ДобавитьЭлементУсловногоОформления(НовоеУсловноеОформление, "Текст", НСтр("ru = '<...>'"));
		РаботаСФормой.ДобавитьЭлементУсловногоОформления(НовоеУсловноеОформление, "ЦветТекста", ЦветаСтиля.НезаполненныйРеквизитЦветБЭД);
		
		НовоеУсловноеОформление = Форма.УсловноеОформление.Элементы.Добавить();
		РаботаСФормой.ДобавитьЭлементОтбораКомпоновкиДанных(НовоеУсловноеОформление.Отбор, "Объект.ЗапасыВозвраты.ПрослеживаемыйТовар", Ложь);
		РаботаСФормой.ДобавитьОформляемыеПоля(НовоеУсловноеОформление, "ЗапасыВозвратыРНПТ");
		РаботаСФормой.ДобавитьЭлементУсловногоОформления(НовоеУсловноеОформление, "Видимость", Ложь);
		
		НовоеУсловноеОформление = Форма.УсловноеОформление.Элементы.Добавить();
		РаботаСФормой.ДобавитьЭлементОтбораКомпоновкиДанных(НовоеУсловноеОформление.Отбор, "Объект.ЗапасыВозвраты.ПрослеживаемыйТовар", Ложь);
		РаботаСФормой.ДобавитьОформляемыеПоля(НовоеУсловноеОформление, "ЗапасыВозвратыПрослеживаемыйТовар");
		РаботаСФормой.ДобавитьЭлементУсловногоОформления(НовоеУсловноеОформление, "Видимость", Ложь);
		
		НовоеУсловноеОформление = Форма.УсловноеОформление.Элементы.Добавить();
		РаботаСФормой.ДобавитьЭлементОтбораКомпоновкиДанных(НовоеУсловноеОформление.Отбор, "Объект.ЗапасыВозвраты.ПрослеживаемыйТовар", Истина);
		РаботаСФормой.ДобавитьОформляемыеПоля(НовоеУсловноеОформление, "ЗапасыВозвратыНомерГТДПриРНПТ");
		РаботаСФормой.ДобавитьЭлементУсловногоОформления(НовоеУсловноеОформление, "Видимость", Ложь);
		
	КонецЕсли;
	
КонецПроцедуры

// Процедура - Заполнить данные РНПТ исходного документа в форме корректировки
//
// Параметры:
//  Форма	 - 	УправляемаяФорма - Форма документа 
//
Процедура ЗаполнитьРНПТИсходныеДанные(Форма) Экспорт
	
	Объект = Форма.Объект;
	
	ИсходныйДокумент = Объект.ДокументОснование;
	
	Если ТипЗнч(ИсходныйДокумент) <> Тип("ДокументСсылка.РасходнаяНакладная") 
		И ТипЗнч(ИсходныйДокумент) <> Тип("ДокументСсылка.КорректировкаРеализации") 
		И ТипЗнч(ИсходныйДокумент) <> Тип("ДокументСсылка.ПриходнаяНакладная") 
		И ТипЗнч(ИсходныйДокумент) <> Тип("ДокументСсылка.КорректировкаПоступления")
		И ТипЗнч(ИсходныйДокумент) <> Тип("ДокументСсылка.АктОРасхождениях")
		И ТипЗнч(ИсходныйДокумент) <> Тип("ДокументСсылка.АктОРасхожденияхПолученный")
		И ТипЗнч(ИсходныйДокумент) <> Тип("ДокументСсылка.ЗаказПокупателя") Тогда
		Возврат;
	КонецЕсли;
	
	Если ТипЗнч(ИсходныйДокумент) = Тип("ДокументСсылка.АктОРасхожденияхПолученный") Тогда
		ИсходныйДокумент = Объект.ИсправляемыйДокументРеализации;
	ИначеЕсли ТипЗнч(ИсходныйДокумент) = Тип("ДокументСсылка.АктОРасхождениях") Тогда
		ИсходныйДокумент = Объект.ИсправляемыйДокументПоступления;
	КонецЕсли;
	
	Если ИсходныйДокумент = Неопределено Тогда
		Возврат
	КонецЕсли;
	
	ИсходныеРНПТ = РНПТИсходногоДокумента(ИсходныйДокумент);
	ЗаполнитьПредставлениеРНПТВКолонке(Форма, ИсходныеРНПТ, "РНПТДоИсправления");
	
	Если ТипЗнч(Объект.ДокументОснование) = Тип("ДокументСсылка.КорректировкаПоступления")
		ИЛИ ТипЗнч(Объект.ДокументОснование) = Тип("ДокументСсылка.КорректировкаРеализации")
		ИЛИ ТипЗнч(Объект.ДокументОснование) = Тип("ДокументСсылка.АктОРасхожденияхПолученный")
		ИЛИ ТипЗнч(Объект.ДокументОснование) = Тип("ДокументСсылка.АктОРасхождениях")Тогда
		
		// Требуется заполнение РНПТ первоначального документа
		
		ИсходныйДокумент = ПрослеживаемостьФормыВызовСервераУНФ.ИсходныйДокументРекурсивно(ИсходныйДокумент);
		Если ТипЗнч(ИсходныйДокумент) <> Тип("ДокументСсылка.РасходнаяНакладная") 
			И ТипЗнч(ИсходныйДокумент) <> Тип("ДокументСсылка.ПриходнаяНакладная") Тогда
			Возврат;
		КонецЕсли;
		ИсходныеРНПТ = РНПТИсходногоДокумента(ИсходныйДокумент);
		ЗаполнитьПредставлениеРНПТВКолонке(Форма, ИсходныеРНПТ, "РНПТДоКорректировки");
		
	КонецЕсли; 
	
КонецПроцедуры

// Возвращает дату до которой необходимо отправить уведомление о ввозе/вывозе в налоговую инспекцию
//
// Параметры:
//  Дата - тип дата, в данном параметре передается дата поступления прослеживаемых товаров
//  ЭтоКорректировочноеУведомление - Булево - истина, если функция вызывается из корректировочного уведомления
//
// Возвращаемое значение:
//  СрокУведомления - тип дата, день до которого нужно отправить уведомление о ввозе
Функция СрокПодачиУведомления(Дата, ЭтоКорректировочноеУведомление = Ложь) Экспорт
	
	КоличествоРабочихДнейОтсрочки = ?(Не ЭтоКорректировочноеУведомление, 5, 1);
	День = 24 * 60 * 60; // количество секунд в одном дне

	ПроизводственныйКалендарь = КалендарныеГрафики.ОсновнойПроизводственныйКалендарь();
	
	Если НЕ ЗначениеЗаполнено(ПроизводственныйКалендарь) Тогда
		Возврат Дата + КоличествоРабочихДнейОтсрочки * День;
	КонецЕсли;
	
	Отбор = Новый Структура;
	Отбор.Вставить("Год",                       Год(Дата));
	Отбор.Вставить("Дата",                      Дата);
	Отбор.Вставить("ПроизводственныйКалендарь", ПроизводственныйКалендарь);
	
	ДанныеДня = РегистрыСведений.ДанныеПроизводственногоКалендаря.Получить(Отбор);
	
	ДатаДокументаЭтоВыходной = (ДанныеДня.ВидДня <> Перечисления.ВидыДнейПроизводственногоКалендаря.Рабочий 
								И ДанныеДня.ВидДня <> Перечисления.ВидыДнейПроизводственногоКалендаря.Предпраздничный);
	
	Если ДатаДокументаЭтоВыходной Тогда
		// Отсрочка меньше на один день
		СрокУведомления = КалендарныеГрафики.ДатаПоКалендарю(
			ПроизводственныйКалендарь, Дата, КоличествоРабочихДнейОтсрочки - 1, Ложь);
	Иначе
		СрокУведомления = КалендарныеГрафики.ДатаПоКалендарю(
			ПроизводственныйКалендарь, Дата, КоличествоРабочихДнейОтсрочки, Ложь);
	КонецЕсли;
	
	Если НЕ ЗначениеЗаполнено(СрокУведомления) Тогда
		Возврат Дата + КоличествоРабочихДнейОтсрочки * День;
	Иначе
		Возврат СрокУведомления;
	КонецЕсли;
	
КонецФункции

// Процедура - Устанавливает представление надписи баннера на форме приходной накладной
//
// Параметры:
//  Форма	 - 	УправляемаяФорма - Форма документа 
//
Процедура УстановитьПредставлениеНадписиУведомлениеОВвозе(Форма) Экспорт
	
	СписокУведомлений = СписокУведомлений(Форма);
	Форма.СписокУведомлений        = СписокУведомлений;

КонецПроцедуры

// Процедура - Устанавливает представление надписи баннера на форме расходной накладной
//
// Параметры:
//  Форма	 - 	УправляемаяФорма - Форма документа 
//
Процедура УстановитьПредставлениеНадписиУведомлениеОПеремещении(Форма) Экспорт
	
	НайденноеУведомление = НайтиУведомлениеОПеремещении(Форма);
	
	Форма.УведомлениеОПеремещении  = НайденноеУведомление;

КонецПроцедуры

#КонецОбласти 

#Область СлужебныйИнтерфейс

Процедура ЗаполнитьПредставлениеРНПТВКолонке(Форма, ИсходныеРНПТ, ИмяЗаполняемогоПоля)
		
	Объект = Форма.Объект;
	
	Для Каждого СтрокаТовары Из Объект.Запасы Цикл 
		Если СтрокаТовары.ПрослеживаемыйТовар Тогда
			Если ЗначениеЗаполнено(ИсходныеРНПТ) Тогда
				СтрокиСРНПТ = ИсходныеРНПТ.НайтиСтроки(Новый Структура("ИдентификаторСтроки", СтрокаТовары.ИдентификаторСтроки));
				КоличествоРНПТ = СтрокиСРНПТ.Количество();
				Если КоличествоРНПТ = 0 Тогда
					СтрокаТовары[ИмяЗаполняемогоПоля] = "";
				ИначеЕсли КоличествоРНПТ = 1 Тогда
					СтрокаТовары[ИмяЗаполняемогоПоля] = СокрЛП(Строка(СтрокиСРНПТ[0].РНПТ));
				Иначе
					СтрокаТовары[ИмяЗаполняемогоПоля] = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(НСтр("ru = '%1 и еще %2'"),
					СокрЛП(Строка(СтрокиСРНПТ[0].РНПТ)),
					КоличествоРНПТ-1);
				КонецЕсли;
			Иначе
				// Переходный период, в корректируемом документе не был заполнен РНПТ.
				СтрокаТовары[ИмяЗаполняемогоПоля] = "";
			КонецЕсли;
		Иначе
			СтрокаТовары[ИмяЗаполняемогоПоля] = Строка(СтрокаТовары.НомерГТД);
		КонецЕсли;
	КонецЦикла;
 
КонецПроцедуры

Функция РНПТИсходногоДокумента(ИсходныйДокумент)
	
	ИмяВидаДокумента = ИсходныйДокумент.Метаданные().Имя;
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("ИсходныйДокумент", ИсходныйДокумент);
	
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	СведенияПрослеживаемости.РНПТ КАК РНПТ,
	|	СведенияПрослеживаемости.ИдентификаторСтроки КАК ИдентификаторСтроки
	|ИЗ
	|	Документ.РасходнаяНакладная.СведенияПрослеживаемости КАК СведенияПрослеживаемости
	|ГДЕ
	|	СведенияПрослеживаемости.Ссылка = &ИсходныйДокумент";
	Запрос.Текст = СтрЗаменить(Запрос.Текст, "РасходнаяНакладная", ИмяВидаДокумента);
	
	Выборка = Запрос.Выполнить();
	
	Если Выборка.Пустой() Тогда
		Возврат Неопределено;
	КонецЕсли;
	
	РНПТДокумента = Выборка.Выгрузить();
	
	Возврат РНПТДокумента;
	
КонецФункции

Функция ТипыДокументовСПрослеживаемостью()
	
	МассивТипов = Новый Массив;
	
	МассивТипов.Добавить(Тип("ДокументСсылка.ЗаказПокупателя"));
	МассивТипов.Добавить(Тип("ДокументСсылка.КомплектацияЗапасов"));
	МассивТипов.Добавить(Тип("ДокументСсылка.ОтчетКомитенту"));

	МассивТипов.Добавить(Тип("ДокументСсылка.СписаниеЗапасов"));
	МассивТипов.Добавить(Тип("ДокументСсылка.СборкаЗапасов"));
	МассивТипов.Добавить(Тип("ДокументСсылка.РасходнаяНакладная"));
	МассивТипов.Добавить(Тип("ДокументСсылка.ПриходнаяНакладная"));
	МассивТипов.Добавить(Тип("ДокументСсылка.ПеремещениеЗапасов"));
	МассивТипов.Добавить(Тип("ДокументСсылка.ОтчетОРозничныхПродажах"));
	МассивТипов.Добавить(Тип("ДокументСсылка.ОтчетКомиссионераОСписании"));
	МассивТипов.Добавить(Тип("ДокументСсылка.ОприходованиеЗапасов"));
	МассивТипов.Добавить(Тип("ДокументСсылка.ОтчетКомиссионера"));
	МассивТипов.Добавить(Тип("ДокументСсылка.ВводНачальныхОстатков"));
	
	Возврат МассивТипов;
	
КонецФункции

Функция ИсключаемыеТипыДляОформленияАвто()
	
	МассивТипов = Новый Массив;
	
	МассивТипов.Добавить(Тип("ДокументСсылка.ПриходнаяНакладная"));
	МассивТипов.Добавить(Тип("ДокументСсылка.ОприходованиеЗапасов"));
	МассивТипов.Добавить(Тип("ДокументСсылка.ОтчетКомиссионераОСписании"));
	МассивТипов.Добавить(Тип("ДокументСсылка.ОтчетОРозничныхПродажах"));
	МассивТипов.Добавить(Тип("ДокументСсылка.ВводНачальныхОстатков"));
	
	Возврат МассивТипов;
	
КонецФункции

#Область УведомленияОПеремещении

// Проверяет наличие Уведомление о перемещении прослеживаемых товаров введенных на основании указанного документа
//
// Параметры:
//  Документ - ДокументСсылка, Документ основание, по которому проверяется  существование Уведомлений о перемещении
//
// Возвращаемые параметры:
// - Булево - Истина, если на основании документа введены уведомления о перемещении
//
Функция НайтиУведомлениеОПеремещении(Форма)
	
	Если Не ПравоДоступа("Чтение", Метаданные.Документы.УведомлениеОПеремещенииПрослеживаемыхТоваров) Тогда
		Возврат Неопределено;
	КонецЕсли;
	
	Запрос = Новый Запрос();
	Запрос.УстановитьПараметр("Документ", Форма.Объект.Ссылка);
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	УведомлениеОПеремещенииПрослеживаемыхТоваровТовары.Ссылка КАК Ссылка
	|ИЗ
	|	Документ.УведомлениеОПеремещенииПрослеживаемыхТоваров.Товары КАК УведомлениеОПеремещенииПрослеживаемыхТоваровТовары
	|ГДЕ
	|	УведомлениеОПеремещенииПрослеживаемыхТоваровТовары.СопроводительныйДокумент = &Документ
	|	И УведомлениеОПеремещенииПрослеживаемыхТоваровТовары.Ссылка.Проведен";
	
	Результат = Запрос.Выполнить().Выбрать();
	
	Если Результат.Следующий() Тогда
		Возврат Результат.Ссылка;
	КонецЕсли;
	
	Возврат Неопределено;
	
КонецФункции

#КонецОбласти

Функция СписокУведомлений(Форма)
	
	СписокУведомлений = Новый СписокЗначений;
	
	Если Не ПравоДоступа("Чтение", Метаданные.Документы.УведомлениеОВвозеПрослеживаемыхТоваров) Тогда
		Возврат СписокУведомлений;
	КонецЕсли;
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("Ссылка", Форма.Объект.Ссылка);
	Запрос.Текст = 
	"ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	УведомлениеОВвозеПрослеживаемыхТоваров.Ссылка КАК УведомлениеОВвозе,
	|	УведомлениеОВвозеПрослеживаемыхТоваров.Номер КАК Номер,
	|	УведомлениеОВвозеПрослеживаемыхТоваров.Дата КАК Дата,
	|	УведомлениеОВвозеПрослеживаемыхТоваров.НомерКорректировки КАК НомерКорректировки
	|ИЗ
	|	Документ.УведомлениеОВвозеПрослеживаемыхТоваров КАК УведомлениеОВвозеПрослеживаемыхТоваров
	|ГДЕ
	|	УведомлениеОВвозеПрослеживаемыхТоваров.Проведен
	|	И УведомлениеОВвозеПрослеживаемыхТоваров.ПервичныйДокумент = &Ссылка
	|	И УведомлениеОВвозеПрослеживаемыхТоваров.НомерКорректировки = 0
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	УведомлениеОВвозеПрослеживаемыхТоваров.Ссылка,
	|	УведомлениеОВвозеПрослеживаемыхТоваров.Номер,
	|	УведомлениеОВвозеПрослеживаемыхТоваров.Дата,
	|	УведомлениеОВвозеПрослеживаемыхТоваров.НомерКорректировки
	|ИЗ
	|	Документ.УведомлениеОВвозеПрослеживаемыхТоваров КАК УведомлениеОВвозеПрослеживаемыхТоваров
	|ГДЕ
	|	УведомлениеОВвозеПрослеживаемыхТоваров.Проведен
	|	И УведомлениеОВвозеПрослеживаемыхТоваров.ПервичныйДокумент = &Ссылка
	|	И УведомлениеОВвозеПрослеживаемыхТоваров.НомерКорректировки > 0
	|АВТОУПОРЯДОЧИВАНИЕ";
	
	Уведомления = Запрос.Выполнить().Выгрузить();
	ШаблонПредставления = НСтр("ru = '%1 №%2 от %3'");
	Для Каждого Уведомление Из Уведомления Цикл
		
		Представление = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
			ШаблонПредставления,
			Уведомление.УведомлениеОВвозе.Метаданные().Представление(),
			ПрефиксацияОбъектовКлиентСервер.НомерНаПечать(Уведомление.Номер, Истина, Ложь),
			Формат(Уведомление.Дата, "ДЛФ=Д"));
			
		Если Уведомление.НомерКорректировки > 0 Тогда
			Представление = НазваниеУведомленияПоПредставлению(Представление);
		КонецЕсли;
			
		СписокУведомлений.Добавить(Уведомление.УведомлениеОВвозе, Представление);
		
	КонецЦикла;
	
	Возврат СписокУведомлений;
	
КонецФункции

Функция НазваниеУведомленияПоПредставлению(Представление)
	
	Возврат СтрЗаменить(Представление, НСтр("ru='Уведомление'"), НСтр("ru='Корректировочное уведомление'"));

КонецФункции

#КонецОбласти

