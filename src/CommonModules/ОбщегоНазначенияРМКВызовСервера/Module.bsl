
///////////////////////////////////////////////////////////////////////////////////////////////////////
// Copyright (c) 2022, ООО 1С-Софт
// Все права защищены. Эта программа и сопроводительные материалы предоставляются 
// в соответствии с условиями лицензии Attribution 4.0 International (CC BY 4.0)
// Текст лицензии доступен по ссылке:
// https://creativecommons.org/licenses/by/4.0/legalcode
///////////////////////////////////////////////////////////////////////////////////////////////////////

#Область ПрограммныйИнтерфейс

// Возвращает значение реквизита, прочитанного из информационной базы по ссылке на объект.
// Если доступа к реквизиту нет, возникнет исключение прав доступа.
// Если необходимо зачитать реквизит независимо от прав текущего пользователя,
// то следует использовать предварительный переход в привилегированный режим.
// 
// Параметры:
//  Ссылка       - ЛюбаяСсылка - ссылка на объект метаданных для получения значения реквизита.
//  ИмяРеквизита - Строка - наименование реквизита строкой.
// 
// Возвращаемое значение:
//  Произвольный - зависит от типа значения прочитанного реквизита.
// 
Функция ЗначениеРеквизитаОбъекта(Ссылка, ИмяРеквизита) Экспорт
	Возврат ОбщегоНазначения.ЗначениеРеквизитаОбъекта(Ссылка, ИмяРеквизита);
КонецФункции

// Возвращает структуру значений реквизитов объекта.
//
// Параметры:
//  Ссылка - ЛюбаяСсылка - ссылка на объект метаданных для получения значения реквизита.
//  СтруктураПолей - Структура - структура реквизитов объекта метаданных.
//
// Возвращаемое значение:
//  Структура - структура значений реквизитов объекта.
//
Функция ЗначенияРеквизитовОбъекта(Ссылка, СтруктураПолей) Экспорт
	Возврат ОбщегоНазначения.ЗначенияРеквизитовОбъекта(Ссылка, СтруктураПолей);
КонецФункции

// Устанавливает выбранную настройку РМК для текущего рабочего места.
// Если находит настройки РМК, связанные с текущим рабочим местом, удаляет эти связи
//
// Параметры:
//  НастройкаРМК - СправочникСсылка.НастройкиРМК - настройки рмк
//
Процедура УстановитьНастройкуРМКДляТекущегоРабочегоМеста(НастройкаРМК) Экспорт
	ОбщегоНазначенияРМК.УстановитьНастройкуРМКДляТекущегоРабочегоМеста(НастройкаРМК);
КонецПроцедуры

// Заполняет ИмяКассира по данным физического лица для текущего пользователя 
//
// Параметры:
//  ИмяКассира - Строка.
//
Процедура ЗаполнитьФИОФизЛица(ИмяКассира) Экспорт
	ОбщегоНазначенияРМК.ЗаполнитьФИОФизЛица(ИмяКассира);
КонецПроцедуры

// Заполняет ИННКассира по данным текущего пользователя.
//
// Параметры:
//  ИННКассира - Строка.
//
Процедура ЗаполнитьИННФизЛица(ИННКассира) Экспорт
	ОбщегоНазначенияРМК.ЗаполнитьИННФизЛица(ИННКассира);
КонецПроцедуры

// Проверяет наличие разрешения редактирования запретов продаж по данным настроек РМК
//
// Возвращаемое значение:
//  Результат - Булево
//
Функция РазрешеноРедактироватьЗапретыПродаж() Экспорт
	Возврат ОбщегоНазначенияРМК.РазрешеноРедактироватьЗапретыПродаж();
КонецФункции

// Возвращает значения адреса и имени пользователя сервера лояльности
//
// Параметры:
//  НастройкиРабочегоМестаКассира - СправочникСсылка.НастройкиРМК - исходные данные для получения значений
//
// Возвращаемое значение:
//  Результат - Структура:
//		*АдресСервера - Строка
//		*Логин - Строка
//		*Пароль - Строка
//
Функция ЗначенияПараметровСервераЛояльности(НастройкиРабочегоМестаКассира = Неопределено) Экспорт
	Возврат ОбщегоНазначенияРМК.ЗначенияПараметровСервераЛояльности(НастройкиРабочегоМестаКассира);
КонецФункции

// Обрабатывает данные ответа из API
//
// Параметры:
//  ИсходныеДанные - Структура - данные ответа
//	НастройкиРабочегоМестаКассира - СправочникСсылка.НастройкиРМК - 
//		сущность для актуализации признака запрета интерактивного редактирования
//
// Возвращаемое значение:
//  Результат - Структура - результат обработки данных ответа
//
Функция ОбработатьДанныеЗапретовИзОтвета(ИсходныеДанные, НастройкиРабочегоМестаКассира = Неопределено) Экспорт
	Возврат ОбщегоНазначенияРМК.ОбработатьДанныеЗапретов(ИсходныеДанные, НастройкиРабочегоМестаКассира);
КонецФункции

// Возвращает реквизиты эквайринговой операции Чека продажи.
//
// Параметры:
//  ЧекПродажи - ДокументСсылка.ЧекККМ - чек продажи, основание чека на возврат.
//
// Возвращаемое значение:
//  Результат - Структура:
//		* НомерПлатежнойКарты - Строка
//		* НомерЧекаЭТ - Строка
//		* СсылочныйНомер - Строка
//		* ЭквайринговыйТерминал - ОпределяемыйТип.ЭквайринговыйТерминалРМК
//
Функция РеквизитыЭквайринговойОперацииПродажи(ЧекПродажи) Экспорт
	
	Реквизиты = Новый Структура;
	Реквизиты.Вставить("НомерПлатежнойКарты");
	Реквизиты.Вставить("НомерЧекаЭТ");
	Реквизиты.Вставить("СсылочныйНомер");
	Реквизиты.Вставить("ЭквайринговыйТерминал");
	
	ОбщегоНазначенияРМКПереопределяемый.ЗаполнитьРеквизитыЭквайринговойОперации(ЧекПродажи, Реквизиты);
	
	Возврат Реквизиты;
	
КонецФункции

// Заполняет имя кассира и его ИНН для печати на ККТ.
//
// Параметры:
//  ПараметрыОперации - см.ОборудованиеЧекопечатающиеУстройстваКлиентСервер.ПараметрыОткрытияЗакрытияСмены().
//  Пользователь - СправочникСсылка.Пользователи - пользователь РМК.
//  Кассир - ОпределяемыйТип.КассирРМК - кассир РМК
//
Процедура ЗаполнитьПараметрыКассираДляПечати(ПараметрыОперации, ДополнительныеПараметры) Экспорт
	ОбщегоНазначенияРМКПереопределяемый.ЗаполнитьПараметрыКассираДляПечати(ПараметрыОперации, ДополнительныеПараметры);
КонецПроцедуры

 // Возвращает признак использования общего QR - кода для чека ККТ и чека ЕГАИС
 //
 // Возвращаемое значение:
 //  Результат - Булево
 //
Функция ИспользоватьОбщийКодДляЧекаККТИЕГАИС() Экспорт
	Возврат ОбщегоНазначенияРМК.ИспользоватьОбщийКодДляЧекаККТИЕГАИС();
КонецФункции

// Формирует табличный документ расшифровки отчета за смену.
//
// Параметры:
//  ДанныеРасшифровки - Структура.
//  	*ИмяРаздела - Строка. Имя раздела ошибок чеков,
//      *МассивЧеков - Массив. Массив структур с ошибочными чеками и текстом ошибки.
//
// Возвращаемое значение:
//  Результат - Табличный документ.
//
Функция СформироватьРасшифровкуОтчетаЗаСмену(ДанныеРасшифровки) Экспорт
	Возврат ОбщегоНазначенияРМК.СформироватьРасшифровкуОтчетаЗаСмену(ДанныеРасшифровки);
КонецФункции

// определяет параметры при запуске клиента.
//
// Параметры:
//  ИсходныеПараметры - Структура.
//  	*ПараметрЗапуска - Строка. Параметр, с которым запущена программа,
//
// Возвращаемое значение:
//  ПараметрыКлиента - Структура.
//
Функция ЗаполнитьПараметрыПриЗапускеКлиента(ИсходныеПараметры) Экспорт
	
	ПараметрыКлиента = Новый Структура;
	ОбщегоНазначенияРМК.ЗаполнитьПараметрыРаботыКлиентаПриЗапуске(ИсходныеПараметры, ПараметрыКлиента);
	Возврат ПараметрыКлиента;
	
КонецФункции

// Переключает на главном окне текущую форму на форму рабочего места кассира.
//
Процедура ПереключитьРабочийСтолНаРМК() Экспорт
	
	ОбщегоНазначенияРМК.НастроитьРабочийСтолДляНовогоРМК();
	
КонецПроцедуры

// Заполняет таблицу данных контрагента по переданному контрагенту
//
// Параметры:
//  Контрагент - ОпределяемыйТип.КонтрагентРМК.
//  АдресТаблицыДанныеКлиента - Строка - Адрес таблицы данных клиентов
//  	*Карта - ссылка на карту лояльности
//  	*НомерКарты - номер карты лояльности (штрихкод или магнитный код)
//  	*НомерТелефона - номер телефона владельца карты лояльности
//
Процедура ПолучитьДанныеЛокальнойКартыКонтрагента(Контрагент, АдресТаблицыДанныеКлиента) Экспорт

	ОбщегоНазначенияРМКПереопределяемый.ПолучитьДанныеЛокальнойКартыКонтрагента(Контрагент, АдресТаблицыДанныеКлиента);
	
КонецПроцедуры

#КонецОбласти

