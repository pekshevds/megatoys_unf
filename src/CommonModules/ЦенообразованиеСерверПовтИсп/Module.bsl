
#Область ПрограммныйИнтерфейс

// Функция - Минимальные цены используются
// 
// Возвращаемое значение:
//  Булево - признак использования минимальных цен
//
Функция МинимальныеЦеныИспользуются() Экспорт
	
	Возврат ПолучитьФункциональнуюОпцию("ИспользоватьМинимальныеЦены");

КонецФункции

// Функция - Использовать минимальные цены на форме подбора
//
// Параметры:
//  ИмяФормыВладельца	 - Строка - Имя формы
//  ЭтоПодбор			 - Булево - признак использования подбора
// 
// Возвращаемое значение:
//  Булево - признак использования минимальных цен на форме подбора 
//
Функция ИспользоватьМинимальныеЦеныНаФормеПодбора(ИмяФормыВладельца, ЭтоПодбор) Экспорт
	
	МассивДоступныхДляМинимальныхЦенФорм = Новый Массив;
	МассивДоступныхДляМинимальныхЦенФорм.Добавить("Документ.ЗаказПокупателя.Форма.ФормаДокумента");
	МассивДоступныхДляМинимальныхЦенФорм.Добавить("Документ.АктВыполненныхРабот.Форма.ФормаДокумента");
	МассивДоступныхДляМинимальныхЦенФорм.Добавить("Документ.ЗаданиеНаРаботу.Форма.ФормаДокумента");
	МассивДоступныхДляМинимальныхЦенФорм.Добавить("Документ.КорректировкаРеализации.Форма.ФормаДокумента");
	МассивДоступныхДляМинимальныхЦенФорм.Добавить("Документ.ОтчетОПереработке.Форма.ФормаДокумента");
	МассивДоступныхДляМинимальныхЦенФорм.Добавить("Документ.ПереоценкаВРозницеСуммовойУчет.Форма.ФормаДокумента");
	МассивДоступныхДляМинимальныхЦенФорм.Добавить("Документ.ПереоценкаТоваровНаКомиссии.Форма.ФормаДокумента");
	МассивДоступныхДляМинимальныхЦенФорм.Добавить("Документ.ПланПродаж.Форма.ФормаДокумента");
	МассивДоступныхДляМинимальныхЦенФорм.Добавить("Документ.ОтчетКомиссионераОСписании.Форма.ФормаДокумента");
	МассивДоступныхДляМинимальныхЦенФорм.Добавить("Документ.СчетНаОплату.Форма.ФормаДокумента");
	МассивДоступныхДляМинимальныхЦенФорм.Добавить("Документ.ПередачаТоваровМеждуОрганизациями.Форма.ФормаДокумента");
	МассивДоступныхДляМинимальныхЦенФорм.Добавить("Документ.ЗаказПокупателя.Форма.ФормаЗаказНаряда");
	МассивДоступныхДляМинимальныхЦенФорм.Добавить("Документ.РасходнаяНакладная.Форма.ФормаДокумента");
	МассивДоступныхДляМинимальныхЦенФорм.Добавить("Документ.ЧекККМ.Форма.ФормаДокумента");
	МассивДоступныхДляМинимальныхЦенФорм.Добавить("Документ.ЧекККМ.Форма.ФормаДокумента_РМК");
	МассивДоступныхДляМинимальныхЦенФорм.Добавить("Документ.ЧекККМВозврат.Форма.ФормаДокумента");
	МассивДоступныхДляМинимальныхЦенФорм.Добавить("Документ.ОтчетОРозничныхПродажах.Форма.ФормаДокумента");
	
	Возврат ЭтоПодбор И (МассивДоступныхДляМинимальныхЦенФорм.Найти(ИмяФормыВладельца) <> Неопределено); 
	
КонецФункции

// Функция - Получить общий вид минимальных цен
// 
// Возвращаемое значение:
//  СправочникСсылка.ВидыЦен - вид цены используемый как общий
//
Функция ПолучитьОбщийВидМинимальныхЦен() Экспорт
	
	Запись = РегистрыСведений.ВидыМинимальныхЦенСтруктурныхЕдиниц.СоздатьМенеджерЗаписи();
	Запись.СтруктурнаяЕдиница = Справочники.СтруктурныеЕдиницы.ПустаяСсылка();
	Запись.Прочитать();
	Возврат Запись.ВидМинимальныхЦен;
	
КонецФункции

// Функция - Получить вид минимальных цен
//
// Параметры:
//  СтруктурнаяЕдиница	 - СправочникСсылка.СтруктурнаяЕдиница - структурная единица, по которой требуется получить вид минимальных цен
// 
// Возвращаемое значение:
//  СправочникСсылка.ВидыЦен - вид минимальных цен по структурной единице из настроек, либо общий, если вид для
//                             структурной единицы не задан
//
Функция ПолучитьВидМинимальныхЦен(СтруктурнаяЕдиница) Экспорт
	
	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ РАЗРЕШЕННЫЕ
	               |	ВидыМинимальныхЦенСтруктурныхЕдиниц.ВидМинимальныхЦен КАК ВидМинимальныхЦен,
	               |	1 КАК Приоритет
	               |ПОМЕСТИТЬ ВидыМинимальныхЦен
	               |ИЗ
	               |	РегистрСведений.ВидыМинимальныхЦенСтруктурныхЕдиниц КАК ВидыМинимальныхЦенСтруктурныхЕдиниц
	               |ГДЕ
	               |	ВидыМинимальныхЦенСтруктурныхЕдиниц.СтруктурнаяЕдиница = &СтруктурнаяЕдиница
	               |
	               |ОБЪЕДИНИТЬ ВСЕ
	               |
	               |ВЫБРАТЬ
	               |	ВидыМинимальныхЦенСтруктурныхЕдиниц.ВидМинимальныхЦен,
	               |	2
	               |ИЗ
	               |	РегистрСведений.ВидыМинимальныхЦенСтруктурныхЕдиниц КАК ВидыМинимальныхЦенСтруктурныхЕдиниц
	               |ГДЕ
	               |	ВидыМинимальныхЦенСтруктурныхЕдиниц.СтруктурнаяЕдиница = ЗНАЧЕНИЕ(Справочник.СтруктурныеЕдиницы.ПустаяСсылка)
	               |;
	               |
	               |////////////////////////////////////////////////////////////////////////////////
	               |ВЫБРАТЬ ПЕРВЫЕ 1
	               |	ВидыМинимальныхЦен.ВидМинимальныхЦен КАК ВидМинимальныхЦен
	               |ИЗ
	               |	ВидыМинимальныхЦен КАК ВидыМинимальныхЦен
	               |
	               |УПОРЯДОЧИТЬ ПО
	               |	ВидыМинимальныхЦен.Приоритет";
	Запрос.УстановитьПараметр("СтруктурнаяЕдиница", СтруктурнаяЕдиница);
	Результат = Запрос.Выполнить();
	Если Результат.Пустой() Тогда
		Возврат Неопределено;
	Иначе
		Выборка = Результат.Выбрать();
		Выборка.Следующий();
		Возврат Выборка.ВидМинимальныхЦен;
	КонецЕсли;	
	
КонецФункции

// Функция - Получить значения порогов срабатывания
//
// Параметры:
//  ВидЦен			 - СправочникСсылка.ВидыЦен - Вид цены
//  ЦеноваяГруппа	 - СправочникСсылка.ЦеновыеГруппы - Ценовая группа
// 
// Возвращаемое значение:
//  Структура - структура значений
//   * ПорогСрабатыванияПриУвеличении - Число - порог при увеличении
//   * ПорогСрабатыванияПриУменьшении - Число - порог при уменьшении
//
Функция ПолучитьЗначенияПороговСрабатывания(Знач ВидЦен, Знач ЦеноваяГруппа) Экспорт
	
	Результат = Новый Структура("ПорогСрабатыванияПриУвеличении, ПорогСрабатыванияПриУменьшении", 0, 0);
	
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = Новый МенеджерВременныхТаблиц;
	Запрос.УстановитьПараметр("ЦеноваяГруппа", ЦеноваяГруппа);
	Запрос.УстановитьПараметр("ВидЦен", ВидЦен);
	
	Запрос.Текст = "ВЫБРАТЬ
	               |	ВЫРАЗИТЬ(&ЦеноваяГруппа КАК Справочник.ЦеновыеГруппы) КАК ЦеноваяГруппа,
	               |	ВЫРАЗИТЬ(&ВидЦен КАК Справочник.ВидыЦен) КАК ВидЦен
	               |ПОМЕСТИТЬ ТаблицаНоменклатуры
	               |;
	               |
	               |////////////////////////////////////////////////////////////////////////////////
	               |ВЫБРАТЬ
	               |	ЗНАЧЕНИЕ(Справочник.ЦеновыеГруппы.ПустаяСсылка) КАК ЦеноваяГруппа,
	               |	ВидыЦен.ПорогСрабатыванияПриУвеличении КАК ПорогСрабатыванияПриУвеличении,
	               |	ВидыЦен.ПорогСрабатыванияПриУменьшении КАК ПорогСрабатыванияПриУменьшении,
	               |	ВидыЦен.Ссылка КАК Ссылка
	               |ПОМЕСТИТЬ ОбщиеЦеновыеГруппы
	               |ИЗ
	               |	Справочник.ВидыЦен КАК ВидыЦен
	               |ГДЕ
	               |	ВидыЦен.Ссылка = &ВидЦен
	               |;
	               |
	               |////////////////////////////////////////////////////////////////////////////////
	               |ВЫБРАТЬ
	               |	ВидыЦенПорогиСрабатывания.ЦеноваяГруппа КАК ЦеноваяГруппа,
	               |	ВидыЦенПорогиСрабатывания.ПорогСрабатыванияПриУвеличении КАК ПорогСрабатыванияПриУвеличении,
	               |	ВидыЦенПорогиСрабатывания.ПорогСрабатыванияПриУменьшении КАК ПорогСрабатыванияПриУменьшении,
	               |	ВидыЦенПорогиСрабатывания.Ссылка КАК Ссылка
	               |ПОМЕСТИТЬ ЦеновыеГруппы
	               |ИЗ
	               |	Справочник.ВидыЦен.ПорогиСрабатывания КАК ВидыЦенПорогиСрабатывания
	               |ГДЕ
	               |	ВидыЦенПорогиСрабатывания.Ссылка = &ВидЦен
	               |
	               |ОБЪЕДИНИТЬ ВСЕ
	               |
	               |ВЫБРАТЬ
	               |	ЗНАЧЕНИЕ(Справочник.ЦеновыеГруппы.ПустаяСсылка),
	               |	ОбщиеЦеновыеГруппы.ПорогСрабатыванияПриУвеличении,
	               |	ОбщиеЦеновыеГруппы.ПорогСрабатыванияПриУменьшении,
	               |	ОбщиеЦеновыеГруппы.Ссылка
	               |ИЗ
	               |	ОбщиеЦеновыеГруппы КАК ОбщиеЦеновыеГруппы
	               |;
	               |
	               |////////////////////////////////////////////////////////////////////////////////
	               |ВЫБРАТЬ
	               |	ТаблицаНоменклатуры.ЦеноваяГруппа КАК ЦеноваяГруппа,
	               |	ТаблицаНоменклатуры.ВидЦен КАК ВидЦен,
	               |	ЕСТЬNULL(ЦеновыеГруппы.ПорогСрабатыванияПриУвеличении, ОбщиеЦеновыеГруппы.ПорогСрабатыванияПриУвеличении) КАК ПорогСрабатыванияПриУвеличении,
	               |	ЕСТЬNULL(ЦеновыеГруппы.ПорогСрабатыванияПриУменьшении, ОбщиеЦеновыеГруппы.ПорогСрабатыванияПриУменьшении) КАК ПорогСрабатыванияПриУменьшении
	               |ИЗ
	               |	ТаблицаНоменклатуры КАК ТаблицаНоменклатуры
	               |		ЛЕВОЕ СОЕДИНЕНИЕ ЦеновыеГруппы КАК ЦеновыеГруппы
	               |		ПО ТаблицаНоменклатуры.ВидЦен = ЦеновыеГруппы.Ссылка
	               |			И ТаблицаНоменклатуры.ЦеноваяГруппа = ЦеновыеГруппы.ЦеноваяГруппа
	               |		ЛЕВОЕ СОЕДИНЕНИЕ ОбщиеЦеновыеГруппы КАК ОбщиеЦеновыеГруппы
	               |		ПО ТаблицаНоменклатуры.ВидЦен = ОбщиеЦеновыеГруппы.Ссылка";
	
	РезультатЗапроса = Запрос.Выполнить();
	Если РезультатЗапроса.Пустой() Тогда
		Возврат Результат;
	КонецЕсли;
	
	Выборка = РезультатЗапроса.Выбрать();
	Выборка.Следующий();
	ЗаполнитьЗначенияСвойств(Результат, Выборка);
	
	Возврат Результат;
	
КонецФункции

// Функция - Новые виды цен возвратов используются
// 
// Возвращаемое значение:
//  Булево - значение константы ИспользоватьНовыеВидыЦенВВозвратах
//
Функция ПолучитьСпособИспользованияВидовЦенДляВозвратов() Экспорт
	
	Возврат Константы.СпособИспользованияВидовЦенДляВозвратов.Получить();
	
КонецФункции

// Функция - Номенклатура запрещена к установке цены
//
// Параметры:
//  Номенклатура - СправочникСсылка.Номенклатура - номенклатура для проверки
// 
// Возвращаемое значение:
//  Булево - Истина - если для номенклатуры запрещена установка цены, Ложь если разрешена
//
Функция НоменклатураЗапрещенаКУстановкеЦены(Номенклатура) Экспорт
	
	Если Номенклатура.ТипНоменклатуры = Перечисления.ТипыНоменклатуры.ПодарочныйСертификат Тогда
		Возврат Истина;
	КонецЕсли;
	
	Возврат Ложь;
	
КонецФункции

// Функция - Получить структуру округления по виду цены
//
// Параметры:
//  ВидЦены		 - СправочникСсылка.ВидыЦен - вид цены по которому нужно получить структуру
//  ЗначениеЦены - Число - значение цены
// 
// Возвращаемое значение:
//  Структура:
//		* ПорядокОкругления - Число - порядок округления
//		* ОкруглятьВБольшуюСторону - Булево - признак округления в большую сторону
//		* ПсихологическоеОкругление - Число - размер психологического округления
//
Функция ПолучитьСтруктуруОкругленияПоВидуЦены(ВидЦены, ЗначениеЦены) Экспорт
	
	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ ПЕРВЫЕ 1
	               |	ВидыЦенПравилаОкругленияЦены.ТочностьОкругления КАК ТочностьОкругления,
	               |	ВидыЦенПравилаОкругленияЦены.Ссылка КАК ВидЦены,
	               |	ВидыЦенПравилаОкругленияЦены.ПсихологическоеОкругление КАК ПсихологическоеОкругление
	               |ПОМЕСТИТЬ ДиапазоныОкругления
	               |ИЗ
	               |	Справочник.ВидыЦен.ПравилаОкругленияЦены КАК ВидыЦенПравилаОкругленияЦены
	               |ГДЕ
	               |	ВидыЦенПравилаОкругленияЦены.Ссылка = &Ссылка
	               |	И ВидыЦенПравилаОкругленияЦены.НижняяГраницаДиапазонаЦен <= &ЗначениеЦены
	               |
	               |УПОРЯДОЧИТЬ ПО
	               |	ВидыЦенПравилаОкругленияЦены.НижняяГраницаДиапазонаЦен УБЫВ
	               |
	               |ИНДЕКСИРОВАТЬ ПО
	               |	ВидЦены
	               |;
	               |
	               |////////////////////////////////////////////////////////////////////////////////
	               |ВЫБРАТЬ
	               |	ЕСТЬNULL(ДиапазоныОкругления.ТочностьОкругления, ВидыЦен.ПорядокОкругления) КАК ПорядокОкругления,
	               |	ВидыЦен.ОкруглятьВБольшуюСторону КАК ОкруглятьВБольшуюСторону,
	               |	ЕСТЬNULL(ДиапазоныОкругления.ПсихологическоеОкругление, ВидыЦен.ПсихологическоеОкругление) КАК ПсихологическоеОкругление
	               |ИЗ
	               |	Справочник.ВидыЦен КАК ВидыЦен
	               |		ЛЕВОЕ СОЕДИНЕНИЕ ДиапазоныОкругления КАК ДиапазоныОкругления
	               |		ПО (ДиапазоныОкругления.ВидЦены = ВидыЦен.Ссылка)
	               |ГДЕ
	               |	ВидыЦен.Ссылка = &Ссылка";
	
	Запрос.УстановитьПараметр("Ссылка", ВидЦены);
	Запрос.УстановитьПараметр("ЗначениеЦены", ЗначениеЦены);
	Выборка = Запрос.Выполнить().Выбрать();
	Выборка.Следующий();
	
	Возврат Новый Структура("ПорядокОкругления, ОкруглятьВБольшуюСторону, ПсихологическоеОкругление", 
		Выборка.ПорядокОкругления, Выборка.ОкруглятьВБольшуюСторону, Выборка.ПсихологическоеОкругление);
	
КонецФункции
	
#КонецОбласти