
#Область ПрограммныйИнтерфейс

#Область ОбработкаПроверкиЗаполнения

// Проверка корректности заполнения алкогольной продукции
//
// Параметры:
//  Объект - ДокументОбъект - Проверяемый объект.
//  Отказ - Булево - Признак отказа.
//
Процедура ПроверитьЗаполнениеДокумента(Объект, Отказ) Экспорт
	
	ИмяТаблицыАкцизныеМарки = "АкцизныеМарки";
	ПолеТаблицыАкцизныеМарки = "АкцизнаяМарка";
	
	Если НЕ ИнтеграцияИС.ЕстьРеквизитТабЧастиОбъекта(ПолеТаблицыАкцизныеМарки, Объект.Ссылка.Метаданные(), ИмяТаблицыАкцизныеМарки) Тогда
		ИмяТаблицыАкцизныеМарки = "ШтрихкодыУпаковок";
		ПолеТаблицыАкцизныеМарки = "ШтрихкодУпаковки";
	КонецЕсли;
	
	Запрос = Новый Запрос;
	
	Запрос.УстановитьПараметр("Товары",        Объект.Запасы.Выгрузить(, "Номенклатура, НоменклатураЕГАИС, Характеристика, Количество, НомерСтроки"));
	Запрос.УстановитьПараметр("АкцизныеМарки", Объект.АкцизныеМарки.Выгрузить(, "АкцизнаяМарка, Справка2"));
	
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	Товары.Номенклатура КАК Номенклатура,
	|	Товары.НоменклатураЕГАИС КАК НоменклатураЕГАИС,
	|	Товары.Характеристика КАК Характеристика,
	|	Товары.Количество КАК Количество,
	|	Товары.НомерСтроки КАК НомерСтроки
	|ПОМЕСТИТЬ Товары
	|ИЗ
	|	&Товары КАК Товары
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	АкцизныеМарки.АкцизнаяМарка КАК АкцизнаяМарка,
	|	АкцизныеМарки.Справка2 КАК Справка2
	|ПОМЕСТИТЬ АкцизныеМарки
	|ИЗ
	|	&АкцизныеМарки КАК АкцизныеМарки
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	Товары.Номенклатура КАК Номенклатура,
	|	Товары.НоменклатураЕГАИС КАК НоменклатураЕГАИС,
	|	Товары.Характеристика КАК Характеристика,
	|	РеквизитыНоменклатуры.ОбъемДАЛ КАК Объем,
	|	ЕСТЬNULL(РеквизитыНоменклатуры.ВидАлкогольнойПродукции.Маркируемый, ЛОЖЬ)
	|		И НЕ РеквизитыНоменклатуры.ПродаетсяВРозлив КАК Маркируемый,
	|	СУММА(ВЫБОР
	|			КОГДА ЕСТЬNULL(РеквизитыНоменклатуры.ВидАлкогольнойПродукции.Маркируемый, ЛОЖЬ)
	|					И НЕ РеквизитыНоменклатуры.ПродаетсяВРозлив
	|				ТОГДА Товары.Количество
	|			ИНАЧЕ 0
	|		КОНЕЦ) КАК Количество,
	|	МИНИМУМ(Товары.НомерСтроки) КАК НомерСтроки
	|ПОМЕСТИТЬ АлкогольнаяПродукция
	|ИЗ
	|	Товары КАК Товары
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.Номенклатура КАК РеквизитыНоменклатуры
	|		ПО Товары.Номенклатура = РеквизитыНоменклатуры.Ссылка
	|ГДЕ
	|	РеквизитыНоменклатуры.ВидПродукцииИС = Значение(Перечисление.ВидыПродукцииИС.Алкогольная)
	|	И ЕСТЬNULL(РеквизитыНоменклатуры.ВидАлкогольнойПродукции.Маркируемый, ЛОЖЬ)
	|			И НЕ РеквизитыНоменклатуры.ПродаетсяВРозлив
	|
	|СГРУППИРОВАТЬ ПО
	|	Товары.Номенклатура,
	|	Товары.НоменклатураЕГАИС,
	|	Товары.Характеристика,
	|	РеквизитыНоменклатуры.ОбъемДАЛ,
	|	ЕСТЬNULL(РеквизитыНоменклатуры.ВидАлкогольнойПродукции.Маркируемый, ЛОЖЬ)
	|		И НЕ РеквизитыНоменклатуры.ПродаетсяВРозлив
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	Штрихкоды.Номенклатура КАК Номенклатура,
	|	Штрихкоды.Характеристика КАК Характеристика,
	|	МИНИМУМ(ЕСТЬNULL(Справки2.АлкогольнаяПродукция, ЗНАЧЕНИЕ(Справочник.КлассификаторАлкогольнойПродукцииЕГАИС.ПустаяСсылка))) КАК НоменклатураЕГАИС,
	|	СУММА(1) КАК Количество
	|ПОМЕСТИТЬ МаркиПоТоварам
	|ИЗ
	|	АкцизныеМарки КАК АкцизныеМарки
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.ШтрихкодыУпаковокТоваров КАК Штрихкоды
	|		ПО АкцизныеМарки.АкцизнаяМарка = Штрихкоды.Ссылка
	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.Справки2ЕГАИС КАК Справки2
	|		ПО АкцизныеМарки.Справка2 = Справки2.Ссылка
	|
	|СГРУППИРОВАТЬ ПО
	|	Штрихкоды.Номенклатура,
	|	Штрихкоды.Характеристика
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	АлкогольнаяПродукция.НомерСтроки КАК НомерСтроки,
	|	АлкогольнаяПродукция.Номенклатура КАК Номенклатура,
	|	ВЫБОР
	|		КОГДА МаркиПоТоварам.НоменклатураЕГАИС = ЗНАЧЕНИЕ(Справочник.КлассификаторАлкогольнойПродукцииЕГАИС.ПустаяСсылка)
	|			ТОГДА АлкогольнаяПродукция.НоменклатураЕГАИС
	|	КОНЕЦ КАК НоменклатураЕГАИС,
	|	АлкогольнаяПродукция.Количество КАК Количество,
	|	ЕСТЬNULL(МаркиПоТоварам.Количество, 0) КАК КоличествоМарок,
	|	АлкогольнаяПродукция.Объем КАК Объем
	|ИЗ
	|	АлкогольнаяПродукция КАК АлкогольнаяПродукция
	|		ЛЕВОЕ СОЕДИНЕНИЕ МаркиПоТоварам КАК МаркиПоТоварам
	|		ПО АлкогольнаяПродукция.Номенклатура = МаркиПоТоварам.Номенклатура
	|			И АлкогольнаяПродукция.Характеристика = МаркиПоТоварам.Характеристика";
	
	Выборка = Запрос.Выполнить().Выбрать();
	
	БезСопоставления = ИнтеграцияЕГАИСВызовСервера.РазрешатьПродажуАлкогольнойПродукцииБезСопоставленияЕГАИС();
	
	Пока Выборка.Следующий() Цикл
		
		Если Не БезСопоставления И Не ЗначениеЗаполнено(Выборка.НоменклатураЕГАИС) Тогда
			
			ОбщегоНазначения.СообщитьПользователю(
				СтрШаблон(
					НСтр("ru = 'Позиция номенклатуры %1 не сопоставлена с элементом классификатора алкогольной продукции ЕГАИС в строке %2 списка ""Запасы"".';
						|en = 'Products item %1 is not mapped with the item of the USAIS classifier of alcoholic products in line %2 of the Goods list.'"),
					Выборка.Номенклатура,
					Выборка.НомерСтроки),
				Объект,
				ОбщегоНазначенияКлиентСервер.ПутьКТабличнойЧасти("Запасы", Выборка.НомерСтроки, "Номенклатура"),
				,
				Отказ);
			
		КонецЕсли;
		
		Если Не ЗначениеЗаполнено(Выборка.Объем) Тогда
			
			ОбщегоНазначения.СообщитьПользователю(
				СтрШаблон(
					НСтр("ru = 'Не заполнен объем для алкогольной продукции %1 в строке %2 списка ""Запасы"".'"),
					Выборка.Номенклатура,
					Выборка.НомерСтроки),
				Объект,
				ОбщегоНазначенияКлиентСервер.ПутьКТабличнойЧасти("Запасы", Выборка.НомерСтроки, "Номенклатура"),
				,
				Отказ);
			
		КонецЕсли;
		
		Если Выборка.Количество <> Выборка.КоличествоМарок Тогда
			
			ТекстОшибки = НСтр("ru = 'В строке %1 для %2 должно быть указано акцизных марок - %3, а указано - %4.';
								|en = 'There must be %3 excise stamps in line %1 for %2. Value specified: %4.'");
			ТекстОшибки = СтрШаблон(ТекстОшибки,
				Выборка.НомерСтроки,
				Выборка.Номенклатура,
				Выборка.Количество,
				Выборка.КоличествоМарок);
			
			ОбщегоНазначения.СообщитьПользователю(
					ТекстОшибки,
					Объект,
					ОбщегоНазначенияКлиентСервер.ПутьКТабличнойЧасти("Запасы", Выборка.НомерСтроки, "Количество"),,
					Отказ);
			
		КонецЕсли;
		
	КонецЦикла;
	
КонецПроцедуры

#КонецОбласти

// Заполняет свойства номенклатуры по данным номенклатуры ЕГАИС..
//
// Параметры:
//  Номенклатура - СправочникОбъект.номенклатура - Объект номенклатуры.
//  ДанныеЕГАИС - См. ИнтеграцияЕГАИСВызовСервера.РеквизитыАлкогольнойПродукцииДляСозданияНоменклатуры.
//
Процедура ЗаполнитьНоменклатуруПоданнымАлкогольнойПродукции(Номенклатура, ДанныеЕГАИС) Экспорт
	
	Если ДанныеЕГАИС = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	Номенклатура.Наименование             = ДанныеЕГАИС.НаименованиеНоменклатурыЕГАИС;
	Номенклатура.НаименованиеПолное       = ДанныеЕГАИС.ПолноеНаименованиеНоменклатурыЕГАИС;
	Номенклатура.ВидАлкогольнойПродукции  = ДанныеЕГАИС.ВидАлкогольнойПродукцииЕГАИС;
	Номенклатура.ОбъемДАЛ                 = ДанныеЕГАИС.ОбъемЕГАИС / 10;
	Номенклатура.Крепость                 = ДанныеЕГАИС.КрепостьЕГАИС;
	
	Если ЗначениеЗаполнено(ДанныеЕГАИС.ИмпортерЕГАИС) Тогда
		ИмпортерЕГАИС = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(ДанныеЕГАИС.ИмпортерЕГАИС, "Контрагент");
		Если ТипЗнч(ИмпортерЕГАИС) = Тип("СправочникСсылка.Контрагенты") Тогда
			Номенклатура.ПроизводительИмпортерАлкогольнойПродукции = ИмпортерЕГАИС;
		КонецЕсли;
	КонецЕсли;
	
	Если ЗначениеЗаполнено(ДанныеЕГАИС.ПроизводительЕГАИС) Тогда
		ПроизводительЕГАИС = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(ДанныеЕГАИС.ПроизводительЕГАИС, "Контрагент");
		Если ТипЗнч(ПроизводительЕГАИС) = Тип("СправочникСсылка.Контрагенты") Тогда
			Если ЗначениеЗаполнено(Номенклатура.ПроизводительИмпортерАлкогольнойПродукции) Тогда
				Номенклатура.Производитель = ПроизводительЕГАИС;
			Иначе
				Номенклатура.ПроизводительИмпортерАлкогольнойПродукции = ПроизводительЕГАИС;
			КонецЕсли;
		КонецЕсли;
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныйПрограммныйИнтерфейс

#Область ПроверкаИПодборПродукции

Функция АдресДанныхПроверкиАлкогольнойПродукции(Знач ПараметрыСканирования, Знач Объект, УникальныйИдентификатор) Экспорт
	
	ДанныеХранилища = Новый Структура("ДеревоУпаковок, ТаблицаАлкогольнойПродукцииКОпределениюСправок2", Неопределено, Новый ТаблицаЗначений);
	
	ТаблицаТовары = Объект.Запасы.Выгрузить();
	ТаблицаТовары.Колонки.КлючСвязи.Имя = "ИдентификаторСтроки";
	
	Объект.Вставить("Товары", ТаблицаТовары);
	
	ДанныеХранилища.ДеревоУпаковок = АкцизныеМаркиЕГАИС.ШтрихкодыУпаковок(Объект, Объект.ОрганизацияЕГАИС, "НоменклатураЕГАИС", Истина, "КлючСвязи").ДеревоУпаковок;
	ДанныеХранилища.ТаблицаАлкогольнойПродукцииКОпределениюСправок2 = Документы.ЧекККМ.ТаблицаАлкогольнойПродукцииКОпределениюСправок2(Объект);
	
	Возврат ПоместитьВоВременноеХранилище(ДанныеХранилища, УникальныйИдентификатор);
	
КонецФункции

Процедура ПриЗакрытииФормыПроверкиИПодбораВФормеРМК(Форма, Результат) Экспорт
	
	РезультатПроверки = ПолучитьИзВременногоХранилища(Результат);
	ДеревоМаркируемойПродукции = РезультатПроверки.ДеревоМаркируемойПродукции;
	
	ДанныеПроверкиИПодбора = ПолучитьИзВременногоХранилища(Результат);
	
	ПараметрыСканирования = ШтрихкодированиеИС.ПараметрыСканирования(Форма);
	
	ПараметрыШтрихкодаДляОбработки = ИнтеграцияИСУНФ.ПараметрыШтрихкодаДляОбработки(Форма, ПараметрыСканирования);
	ПараметрыШтрихкодаДляОбработки.Вставить("ВидПродукцииИС", Перечисления.ВидыПродукцииИС.Алкогольная);
	
	ИнтеграцияИСУНФ.ЗафиксироватьРезультатПроверкиИПодбора(
		ДеревоМаркируемойПродукции,
		ПараметрыШтрихкодаДляОбработки,
		Форма);
	
	СуммаТоваров = Форма.Объект.Запасы.Итог("Всего");
	Если Не Форма.Объект.ОперацияСДенежнымиСредствами Тогда
		Форма.Объект.СуммаДокумента = СуммаТоваров;
	КонецЕсли;
	
	Если ОбщегоНазначенияКлиентСервер.ЕстьРеквизитИлиСвойствоОбъекта(Форма, "СуммаСдачи") Тогда
		Форма.СуммаСдачи = Форма.Объект.БезналичнаяОплата.Итог("Сумма")
						 + Форма.Объект.Предоплата.Итог("СуммаРасчетов")
						 + Форма.Объект.ПолученоНаличными
						 - Форма.Объект.СуммаДокумента;
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область СобытияФорм

Процедура ПриСозданииЧтенииНаСервере(Форма) Экспорт
	
	ИнтеграцияИСУНФ.ПриСозданииЧтенииНаСервере(Форма);
	
КонецПроцедуры

Процедура ЗаполнениеРеквизитовФормы(Форма) Экспорт
	
	ИмяРеквизитаФормыОбъект = Форма.ПараметрыИнтеграцииГосИС.Получить("ЕГАИС").ИмяРеквизитаФормыОбъект;
	
	ПараметрыИнтеграции = Форма.ПараметрыИнтеграцииГосИС.Получить("ЕГАИС.ДокументОснование");
	Если ПараметрыИнтеграции <> Неопределено И ЗначениеЗаполнено(ПараметрыИнтеграции.ИмяЭлементаФормы) Тогда
	
		ЭлементИнтерфейса  = Форма.Элементы[ПараметрыИнтеграции.ИмяЭлементаФормы];
		Объект = Форма[ИмяРеквизитаФормыОбъект];
	
		Если Форма.ИмяФормы = "Документ.ПриходнаяНакладная.Форма.ФормаДокумента" Тогда
			ТекстГиперссылки = ИнтеграцияЕГАИСУНФВызовСервера.ТекстДокументаЕГАИСВПриходнойНакладной(Объект, Форма.ТТНВходящаяЕГАИС);
		Иначе
			ТекстГиперссылки = ИнтеграцияЕГАИСВызовСервера.ТекстДокументаЕГАИС(Объект.Ссылка);
		КонецЕсли;
		
		ЭлементИнтерфейса.Видимость = ЗначениеЗаполнено(ТекстГиперссылки);
		Форма[ПараметрыИнтеграции.ИмяРеквизитаФормы] = ТекстГиперссылки;
		
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

Функция ПараметрыЗаполненияТоваровИАкцизныхМарок() Экспорт
	
	ПараметрыЗаполнения = Новый Структура;
	ПараметрыЗаполнения.Вставить("ИмяКолонкиАлкогольнаяПродукция", "НоменклатураЕГАИС");
	ПараметрыЗаполнения.Вставить("ДобавленныеСтроки", Новый Массив);
	ПараметрыЗаполнения.Вставить("ИзмененныеСтроки", Новый Массив);
	
	Возврат ПараметрыЗаполнения;
	
КонецФункции

#КонецОбласти

#Область РасчетСтатусовОформленияЕГАИСПереопределяемый

Процедура ПриОпределенииРеквизитовОснования(МетаданныеДокументаОснования, МетаданныеДокументаЕГАИС, Реквизиты) Экспорт

	// Зададим имена реквизитов по умолчанию.
	Реквизиты.Контрагент						= "Организация";
	Реквизиты.ТорговыйОбъект	= "СтруктурнаяЕдиница";
	
	// Определим имя реквизита "Ответственный".
	Если МетаданныеДокументаОснования.Реквизиты.Найти("Ответственный") <> Неопределено Тогда
		Реквизиты.Ответственный = "Ответственный";
	Иначе
		Реквизиты.Ответственный = "Автор";
	КонецЕсли;
	
	// Уточним имена реквизитов для конкретных документов.
	Если МетаданныеДокументаОснования = Метаданные.Документы.ПеремещениеЗапасов Тогда
		
		Если МетаданныеДокументаЕГАИС = Метаданные.Документы.ТТНИсходящаяЕГАИС Тогда
			
			Если ОбщегоНазначенияКлиентСервер.ЕстьРеквизитИлиСвойствоОбъекта(Реквизиты, "ТорговыйИлиПроизводственныйОбъект") Тогда
				Реквизиты.ТорговыйИлиПроизводственныйОбъект = "СтруктурнаяЕдиница";
			КонецЕсли;
			
		ИначеЕсли МетаданныеДокументаЕГАИС = Метаданные.Документы.ТТНВходящаяЕГАИС Тогда
			
			Если ОбщегоНазначенияКлиентСервер.ЕстьРеквизитИлиСвойствоОбъекта(Реквизиты, "ТорговыйИлиПроизводственныйОбъект") Тогда
				Реквизиты.ТорговыйИлиПроизводственныйОбъект = "СтруктурнаяЕдиницаПолучатель";
			КонецЕсли;
			
		КонецЕсли;
		
	КонецЕсли;

КонецПроцедуры

Процедура ПриОпределенииЗапросаТоварыДокументаОснования(МетаданныеДокументаОснования, МетаданныеДокументаЕГАИС, ТекстЗапроса, ДополнительныеПараметрыЗапроса) Экспорт
	
	ПараметрыФормированияЗапроса = ИнтеграцияИСУНФ.ПараметрыФормированияЗапросаЗаполнения(МетаданныеДокументаОснования, МетаданныеДокументаЕГАИС);
	ЗаполнитьПараметрыФормированияЗапроса(ПараметрыФормированияЗапроса);
	Если ПараметрыФормированияЗапроса.ТабличныеЧасти.Количество() Тогда
		ТекстЗапроса = ИнтеграцияИСУНФ.ТекстЗапросаТоварыДокументаОснования(ПараметрыФормированияЗапроса, ДополнительныеПараметрыЗапроса);
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

Процедура ЗаполнитьПараметрыФормированияЗапроса(ПараметрыФормированияЗапроса)
	
	МетаданныеДокументаОснования = ПараметрыФормированияЗапроса.МетаданныеДокументаОснования;
	МетаданныеДокументаЕГАИС     = ПараметрыФормированияЗапроса.МетаданныеДокументаИСМП;
	
	ТабличнаяЧастьЗапасы = ИнтеграцияИСУНФ.ШаблонОписанияТабличнойЧастиДокумента();
	Если МетаданныеДокументаОснования.ТабличныеЧасти.Найти("СерииНоменклатуры") <> Неопределено Тогда
		ТабличнаяЧастьЗапасы.ИмяТабличнойЧастиСерии = "СерииНоменклатуры";
	КонецЕсли;
	
	ВидыАлкогольнойПродукции = Новый Массив;
	ВидыАлкогольнойПродукции.Добавить(Перечисления.ВидыПродукцииИС.Алкогольная);
	ВидыАлкогольнойПродукции.Добавить(Перечисления.ВидыПродукцииИС.Пиво);
	ОтборНоменклатуры = ИнтеграцияИСУНФ.ОпределениеВидаПродукцииТекстаЗапроса("СправочникНоменклатура", ВидыАлкогольнойПродукции);
	ОтборНоменклатуры = ОтборНоменклатуры + "
	|	И НЕ СправочникНоменклатура.ПродаетсяВРозлив";
	
	ОтборНоменклатурыМаркируемая = ОтборНоменклатуры + "
	|	И СправочникНоменклатура.ВидАлкогольнойПродукции.Маркируемый";
	ОтборНоменклатурыНемаркируемая = ОтборНоменклатуры + "
	|	И НЕ СправочникНоменклатура.ВидАлкогольнойПродукции.Маркируемый";
	
	ОтборНоменклатурыДокумента = "";
	
	Если МетаданныеДокументаОснования = Метаданные.Документы.ОприходованиеЗапасов Тогда
		
		Если МетаданныеДокументаЕГАИС = Метаданные.Документы.АктПостановкиНаБалансЕГАИС Тогда
			
			ПараметрыФормированияЗапроса.ТабличныеЧасти.Добавить(ТабличнаяЧастьЗапасы);
			
			ОтборНоменклатурыДокумента = ОтборНоменклатуры;
			
		КонецЕсли
		
	ИначеЕсли МетаданныеДокументаОснования = Метаданные.Документы.ОтчетОРозничныхПродажах Тогда
		
		ТабличнаяЧастьЗапасы.ЭтоДвижениеПриход = Ложь;
		
		Если МетаданныеДокументаЕГАИС = Метаданные.Документы.АктСписанияЕГАИС Тогда
			
			ПараметрыФормированияЗапроса.ТабличныеЧасти.Добавить(ТабличнаяЧастьЗапасы);
			ПараметрыФормированияЗапроса.ДопОтборы_Общие = "Товары.Количество > 0";
			
			ОтборНоменклатурыДокумента = ОтборНоменклатурыНемаркируемая;
			
		КонецЕсли;
		
	ИначеЕсли МетаданныеДокументаОснования = Метаданные.Документы.ПередачаТоваровМеждуОрганизациями Тогда
		
		ТабличнаяЧастьЗапасы.ЭтоДвижениеПриход = Ложь;
		
		Если МетаданныеДокументаЕГАИС = Метаданные.Документы.ТТНИсходящаяЕГАИС Тогда
			
			ПараметрыФормированияЗапроса.ТабличныеЧасти.Добавить(ТабличнаяЧастьЗапасы);
			
			ОтборНоменклатурыДокумента = ОтборНоменклатуры;
			
		КонецЕсли;
		
	ИначеЕсли МетаданныеДокументаОснования = Метаданные.Документы.ПеремещениеЗапасов Тогда
		
		ТабличнаяЧастьЗапасы.ЭтоДвижениеПриход = Ложь;
		
		Если МетаданныеДокументаЕГАИС = Метаданные.Документы.ВозвратИзРегистра2ЕГАИС Тогда
			
			ПараметрыФормированияЗапроса.ТабличныеЧасти.Добавить(ТабличнаяЧастьЗапасы);
			ПараметрыФормированияЗапроса.ДопОтборы_Общие = "НЕ Товары.Ссылка.СтруктурнаяЕдиницаПолучатель.ТипСтруктурнойЕдиницы = Значение(Перечисление.ТипыСтруктурныхЕдиниц.Розница)
			| И Товары.Ссылка.СтруктурнаяЕдиница.ТипСтруктурнойЕдиницы = Значение(Перечисление.ТипыСтруктурныхЕдиниц.Розница)";
			
			ОтборНоменклатурыДокумента = ОтборНоменклатурыНемаркируемая;
			
		ИначеЕсли МетаданныеДокументаЕГАИС = Метаданные.Документы.ТТНИсходящаяЕГАИС Тогда
			
			ПараметрыФормированияЗапроса.ТабличныеЧасти.Добавить(ТабличнаяЧастьЗапасы);
			ПараметрыФормированияЗапроса.ДопОтборы_Общие = "Выбор Когда Товары.Ссылка.СтруктурнаяЕдиницаПолучатель.ТипСтруктурнойЕдиницы = Значение(Перечисление.ТипыСтруктурныхЕдиниц.Розница)
			| И НЕ Товары.Ссылка.СтруктурнаяЕдиница.ТипСтруктурнойЕдиницы = Значение(Перечисление.ТипыСтруктурныхЕдиниц.Розница)
			| ИЛИ НЕ Товары.Ссылка.СтруктурнаяЕдиницаПолучатель.ТипСтруктурнойЕдиницы = Значение(Перечисление.ТипыСтруктурныхЕдиниц.Розница)
			| И Товары.Ссылка.СтруктурнаяЕдиница.ТипСтруктурнойЕдиницы = Значение(Перечисление.ТипыСтруктурныхЕдиниц.Розница) Тогда СправочникНоменклатура.ВидАлкогольнойПродукции.Маркируемый
			| Иначе Истина Конец";
			
			ОтборНоменклатурыДокумента = ОтборНоменклатуры;
			
		КонецЕсли;
		
	ИначеЕсли МетаданныеДокументаОснования = Метаданные.Документы.РасходнаяНакладная Тогда
		
		ТабличнаяЧастьЗапасы.ЭтоДвижениеПриход = Ложь;
		
		Если МетаданныеДокументаЕГАИС = Метаданные.Документы.АктСписанияЕГАИС Тогда
			
			ПараметрыФормированияЗапроса.ТабличныеЧасти.Добавить(ТабличнаяЧастьЗапасы);
			ПараметрыФормированияЗапроса.ДопОтборы_Общие = "Товары.Ссылка.ВидОперации = Значение(Перечисление.ВидыОперацийРасходнаяНакладная.ПродажаПокупателю)
			| И (Товары.Ссылка.Контрагент.ВидКонтрагента = Значение(Перечисление.ВидыКонтрагентов.ФизическоеЛицо) ИЛИ НЕ Товары.Ссылка.НомерЧекаККМ = 0)";
			
			ОтборНоменклатурыДокумента = ОтборНоменклатурыНемаркируемая;
			
		ИначеЕсли МетаданныеДокументаЕГАИС = Метаданные.Документы.ТТНИсходящаяЕГАИС Тогда
			
			ПараметрыФормированияЗапроса.ТабличныеЧасти.Добавить(ТабличнаяЧастьЗапасы);
			ПараметрыФормированияЗапроса.ДопОтборы_Общие = "НЕ Товары.Ссылка.Контрагент.ВидКонтрагента = Значение(Перечисление.ВидыКонтрагентов.ФизическоеЛицо)
			| И (Товары.Ссылка.ВидОперации = Значение(Перечисление.ВидыОперацийРасходнаяНакладная.ПродажаПокупателю)
			|	ИЛИ Товары.Ссылка.ВидОперации = Значение(Перечисление.ВидыОперацийРасходнаяНакладная.ВозвратПоставщику))";
			
			ОтборНоменклатурыДокумента = ОтборНоменклатуры;
			
		ИначеЕсли МетаданныеДокументаЕГАИС = Метаданные.Документы.ЧекЕГАИС Тогда
			
			ПараметрыФормированияЗапроса.ТабличныеЧасти.Добавить(ТабличнаяЧастьЗапасы);
			ПараметрыФормированияЗапроса.ДопОтборы_Общие = "Товары.Ссылка.ВидОперации = Значение(Перечисление.ВидыОперацийРасходнаяНакладная.ПродажаПокупателю)
			| И (Товары.Ссылка.Контрагент.ВидКонтрагента = Значение(Перечисление.ВидыКонтрагентов.ФизическоеЛицо) ИЛИ НЕ Товары.Ссылка.НомерЧекаККМ = 0)";
			
			ОтборНоменклатурыДокумента = ОтборНоменклатурыМаркируемая;
			
		КонецЕсли;
		
	ИначеЕсли МетаданныеДокументаОснования = Метаданные.Документы.СписаниеЗапасов Тогда
		
		ТабличнаяЧастьЗапасы.ЭтоДвижениеПриход = Ложь;
		
		Если МетаданныеДокументаЕГАИС = Метаданные.Документы.АктСписанияЕГАИС Тогда
			
			ПараметрыФормированияЗапроса.ТабличныеЧасти.Добавить(ТабличнаяЧастьЗапасы);
			
			ОтборНоменклатурыДокумента = ОтборНоменклатуры;
			
		КонецЕсли;
		
	ИначеЕсли МетаданныеДокументаОснования = Метаданные.Документы.КомплектацияЗапасов Тогда
		
		ТабличнаяЧастьЗапасы.ЭтоДвижениеПриход = Ложь;
		
		Если МетаданныеДокументаЕГАИС = Метаданные.Документы.АктСписанияЕГАИС Тогда
			
			ТабличнаяЧастьПродукция = ИнтеграцияИСУНФ.ШаблонОписанияТабличнойЧастиДокумента(
				Ложь, "Ссылка");
			ТабличнаяЧастьПродукция.ДопОтборы_Товары =
			"Товары.Ссылка.ВидОперации = Значение(Перечисление.ВидыОперацийКомплектацияЗапасов.Разборка)";
			ПараметрыФормированияЗапроса.ТабличныеЧасти.Добавить(ТабличнаяЧастьПродукция);
			
			ТабличнаяЧастьЗапасы.ДопОтборы_Товары =
			"Товары.Ссылка.ВидОперации = Значение(Перечисление.ВидыОперацийКомплектацияЗапасов.Сборка)";
			ПараметрыФормированияЗапроса.ТабличныеЧасти.Добавить(ТабличнаяЧастьЗапасы);
			
			ОтборНоменклатурыДокумента = ОтборНоменклатуры;
			
		КонецЕсли;
		
	КонецЕсли;
	
	Если ПараметрыФормированияЗапроса.ОтборНоменклатуры = "ИСТИНА" Тогда
		ПараметрыФормированияЗапроса.ОтборНоменклатуры = ОтборНоменклатурыДокумента;
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти


Процедура ЗаполнениеДокументовЕГАИС(Источник, ДанныеЗаполнения, ТекстЗаполнения, СтандартнаяОбработка) Экспорт
	
	Если НЕ ЗначениеЗаполнено(ДанныеЗаполнения) Тогда
		Возврат;
	КонецЕсли;
		
	Если ТипЗнч(Источник) = Тип("ДокументОбъект.АктСписанияЕГАИС") Тогда
		
		Если Не ЗначениеЗаполнено(Источник.ВидДокумента) Тогда
			Источник.ВидДокумента = Перечисления.ВидыДокументовЕГАИС.АктСписанияИзРегистра1;
		КонецЕсли;
		
		Если ТипЗнч(ДанныеЗаполнения) = Тип("ДокументСсылка.СписаниеЗапасов") Тогда
			
			РеквизитыОснования          = ОбщегоНазначения.ЗначенияРеквизитовОбъекта(ДанныеЗаполнения, "Организация, СтруктурнаяЕдиница");
			Источник.ДокументОснование  = ДанныеЗаполнения;
			Источник.ПричинаСписания    = Перечисления.ПричиныСписанийЕГАИС.Недостача;
			
			Если НЕ ЗначениеЗаполнено(Источник.ОрганизацияЕГАИС) Тогда
				Источник.ОрганизацияЕГАИС = Справочники.КлассификаторОрганизацийЕГАИС.ОрганизацияЕГАИСПоОрганизацииИТорговомуОбъекту(
					РеквизитыОснования.Организация, РеквизитыОснования.СтруктурнаяЕдиница);
			КонецЕсли;
			
			ЗаполнитьТоварыЕГАИС(Источник, ДанныеЗаполнения);
			
		ИначеЕсли ТипЗнч(ДанныеЗаполнения) = Тип("ДокументСсылка.КомплектацияЗапасов") Тогда
			
			РеквизитыОснования          = ОбщегоНазначения.ЗначенияРеквизитовОбъекта(ДанныеЗаполнения, "Организация, СтруктурнаяЕдиница");
			Источник.ДокументОснование  = ДанныеЗаполнения;
			Источник.ПричинаСписания    = Перечисления.ПричиныСписанийЕГАИС.Реализация;
			
			Если НЕ ЗначениеЗаполнено(Источник.ОрганизацияЕГАИС) Тогда
				Источник.ОрганизацияЕГАИС = Справочники.КлассификаторОрганизацийЕГАИС.ОрганизацияЕГАИСПоОрганизацииИТорговомуОбъекту(
					РеквизитыОснования.Организация, РеквизитыОснования.СтруктурнаяЕдиница);
			КонецЕсли;
			
			ЗаполнитьТоварыАктаСписанияЕГАИСНаОснованииКомплектацииЗапасов(Источник, ДанныеЗаполнения);
			
		ИначеЕсли ТипЗнч(ДанныеЗаполнения) = Тип("ДокументСсылка.ПередачаВРегистр2ЕГАИС") Тогда
			
			РеквизитыОснования = ОбщегоНазначения.ЗначенияРеквизитовОбъекта(Источник, "ОрганизацияЕГАИС, ТорговыйОбъект, Организация");
			ЗаполнитьЗначенияСвойств(Источник, РеквизитыОснования);
			
			Источник.ДокументОснование  = ДанныеЗаполнения;
			Источник.ВидДокумента       = Перечисления.ВидыДокументовЕГАИС.АктСписанияИзРегистра2;
			Источник.ПричинаСписания    = Перечисления.ПричиныСписанийЕГАИС.Реализация;
			
			ЗаполнитьТоварыАктаСписанияЕГАИСНаОснованииПередачиВРегистр2(Источник);
			
		ИначеЕсли ТипЗнч(ДанныеЗаполнения) = Тип("ДокументСсылка.ОтчетОРозничныхПродажах") Тогда
			
			РеквизитыОснования          = ОбщегоНазначения.ЗначенияРеквизитовОбъекта(ДанныеЗаполнения, "Организация, СтруктурнаяЕдиница");
			Источник.ДокументОснование  = ДанныеЗаполнения;
			Источник.ПричинаСписания    = Перечисления.ПричиныСписанийЕГАИС.Реализация;
			
			Если НЕ ЗначениеЗаполнено(Источник.ОрганизацияЕГАИС) Тогда
				Источник.ОрганизацияЕГАИС = Справочники.КлассификаторОрганизацийЕГАИС.ОрганизацияЕГАИСПоОрганизацииИТорговомуОбъекту(
					РеквизитыОснования.Организация, РеквизитыОснования.СтруктурнаяЕдиница);
			КонецЕсли;
			
			ЗаполнитьТоварыЕГАИС(Источник, ДанныеЗаполнения, Истина);
			
		ИначеЕсли ТипЗнч(ДанныеЗаполнения) = Тип("ДокументСсылка.РасходнаяНакладная") Тогда
			
			РеквизитыОснования = ОбщегоНазначения.ЗначенияРеквизитовОбъекта(ДанныеЗаполнения, "Организация, СтруктурнаяЕдиница, ВидОперации");
			Если РеквизитыОснования.ВидОперации = Перечисления.ВидыОперацийРасходнаяНакладная.ПродажаПокупателю Тогда
				
				Источник.ДокументОснование = ДанныеЗаполнения;
				Источник.ОрганизацияЕГАИС  = Справочники.КлассификаторОрганизацийЕГАИС.ОрганизацияЕГАИСПоОрганизацииИТорговомуОбъекту(РеквизитыОснования.Организация, РеквизитыОснования.СтруктурнаяЕдиница);
				Источник.ПричинаСписания    = Перечисления.ПричиныСписанийЕГАИС.Реализация;
				
				ЗаполнитьТоварыЕГАИС(Источник, ДанныеЗаполнения, Истина);
				
			КонецЕсли;
			
		КонецЕсли;
		
		Если Источник.ВидДокумента = Перечисления.ВидыДокументовЕГАИС.АктСписанияИзРегистра1 Тогда
			Документы.АктСписанияЕГАИС.ПодобратьСправки2(Источник);
		КонецЕсли;
		
	ИначеЕсли ТипЗнч(Источник) = Тип("ДокументОбъект.АктПостановкиНаБалансЕГАИС") Тогда
		
		Если ТипЗнч(ДанныеЗаполнения) = Тип("ДокументСсылка.ОприходованиеЗапасов") Тогда
			
			РеквизитыОснования = ОбщегоНазначения.ЗначенияРеквизитовОбъекта(ДанныеЗаполнения, "Организация, СтруктурнаяЕдиница");
		
			Источник.ДокументОснование         = ДанныеЗаполнения;
			Источник.ПричинаПостановкиНаБаланс = Перечисления.ПричиныПостановкиНаБалансЕГАИС.Излишки;
			
			Если НЕ ЗначениеЗаполнено(Источник.ОрганизацияЕГАИС) Тогда
				Источник.ОрганизацияЕГАИС = Справочники.КлассификаторОрганизацийЕГАИС.ОрганизацияЕГАИСПоОрганизацииИТорговомуОбъекту(
					РеквизитыОснования.Организация, РеквизитыОснования.СтруктурнаяЕдиница);
			КонецЕсли;
			
			ЗаполнитьТоварыЕГАИС(Источник, ДанныеЗаполнения);
		
		ИначеЕсли ТипЗнч(ДанныеЗаполнения) = Тип("Структура") И ДанныеЗаполнения.Свойство("АкцизныеМаркиВРегистр3") Тогда	
			
			ЗаполнитьЗначенияСвойств(Источник, ДанныеЗаполнения);
			Если ДанныеЗаполнения.Свойство("Склад") Тогда
				Источник.ТорговыйОбъект = ДанныеЗаполнения.Склад;
			КонецЕсли;
			
			Если ДанныеЗаполнения.Свойство("ДокументОснование") Тогда
				ДанныеЗаполнения = ДанныеЗаполнения.ДокументОснование;
			КонецЕсли;
			
			ЗаполнитьАктПостановкиНаБалансЕГАИСНаОснованииСтруктуры(Источник, ДанныеЗаполнения, ТекстЗаполнения, СтандартнаяОбработка);
			
		КонецЕсли;
		
	ИначеЕсли ТипЗнч(Источник) = Тип("ДокументОбъект.ТТНИсходящаяЕГАИС") Тогда
		
		Если ТипЗнч(ДанныеЗаполнения) = Тип("ДокументСсылка.ПеремещениеЗапасов") Тогда
			
			РеквизитыОснования = ОбщегоНазначения.ЗначенияРеквизитовОбъекта(ДанныеЗаполнения, "Организация, СтруктурнаяЕдиница, СтруктурнаяЕдиницаПолучатель, Номер, Дата");
			
			Источник.ДокументОснование = ДанныеЗаполнения;
			Источник.ВидОперации       = Перечисления.ВидыОперацийТТНИсходящейЕГАИС.РасходнаяНакладная;
			Источник.Идентификатор     = Строка(ДанныеЗаполнения.УникальныйИдентификатор());
			Источник.НомерТТН          = СформироватьНомерИсходящейТТН(РеквизитыОснования.Номер, РеквизитыОснования.Дата);
			Источник.ДатаОтгрузки      = РеквизитыОснования.Дата;
			Источник.ДатаТТН           = РеквизитыОснования.Дата;
			Источник.Упакована         = Истина;
			Источник.Грузополучатель   = Справочники.КлассификаторОрганизацийЕГАИС.ОрганизацияЕГАИСПоОрганизацииИТорговомуОбъекту(РеквизитыОснования.Организация, РеквизитыОснования.СтруктурнаяЕдиницаПолучатель);
			Источник.Грузоотправитель  = Справочники.КлассификаторОрганизацийЕГАИС.ОрганизацияЕГАИСПоОрганизацииИТорговомуОбъекту(РеквизитыОснования.Организация, РеквизитыОснования.СтруктурнаяЕдиница);
			
			ТипОтправителя = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(РеквизитыОснования.СтруктурнаяЕдиница, "ТипСтруктурнойЕдиницы");
			ТипПолучателя = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(РеквизитыОснования.СтруктурнаяЕдиницаПолучатель, "ТипСтруктурнойЕдиницы");
			
			ИсключитьНемаркируемые = НЕ ТипОтправителя = Перечисления.ТипыСтруктурныхЕдиниц.Розница
				И ТипПолучателя = Перечисления.ТипыСтруктурныхЕдиниц.Розница
				ИЛИ ТипОтправителя = Перечисления.ТипыСтруктурныхЕдиниц.Розница
				И НЕ ТипПолучателя = Перечисления.ТипыСтруктурныхЕдиниц.Розница;
			
			ЗаполнитьТоварыЕГАИС(Источник, ДанныеЗаполнения, Ложь, ИсключитьНемаркируемые);
			Документы.ТТНИсходящаяЕГАИС.ПодобратьСправки2(Источник);
			
		ИначеЕсли ТипЗнч(ДанныеЗаполнения) = Тип("ДокументСсылка.РасходнаяНакладная") Тогда
			
			РеквизитыОснования = ОбщегоНазначения.ЗначенияРеквизитовОбъекта(ДанныеЗаполнения, "Организация, СтруктурнаяЕдиница, Контрагент, Номер, Дата, ВидОперации");
			Если РеквизитыОснования.ВидОперации <> Перечисления.ВидыОперацийРасходнаяНакладная.ВозвратПоставщику
				И РеквизитыОснования.ВидОперации <> Перечисления.ВидыОперацийРасходнаяНакладная.ПродажаПокупателю Тогда
				ВызватьИсключение СтрШаблон(НСтр("ru = 'Выгрузка в ЕГАИС для операции %1 не предусмотрена'"), РеквизитыОснования.ВидОперации);
			КонецЕсли;
			
			Источник.ДокументОснование = ДанныеЗаполнения;
			Если РеквизитыОснования.ВидОперации = Перечисления.ВидыОперацийРасходнаяНакладная.ВозвратПоставщику Тогда
				Источник.ВидОперации       = Перечисления.ВидыОперацийТТНИсходящейЕГАИС.ВозвратПоставщику;
			Иначе
				Источник.ВидОперации       = Перечисления.ВидыОперацийТТНИсходящейЕГАИС.РасходнаяНакладная;
			КонецЕсли;
			Источник.Идентификатор     = Строка(ДанныеЗаполнения.УникальныйИдентификатор());
			Источник.НомерТТН          = СформироватьНомерИсходящейТТН(РеквизитыОснования.Номер, РеквизитыОснования.Дата);
			Источник.ДатаОтгрузки      = РеквизитыОснования.Дата;
			Источник.ДатаТТН           = РеквизитыОснования.Дата;
			Источник.Упакована         = Истина;
			Источник.Грузополучатель   = Справочники.КлассификаторОрганизацийЕГАИС.ОрганизацияЕГАИСПоОрганизацииИТорговомуОбъекту(РеквизитыОснования.Контрагент, Справочники.СтруктурныеЕдиницы.ПустаяСсылка(), Ложь);
			Источник.Грузоотправитель  = Справочники.КлассификаторОрганизацийЕГАИС.ОрганизацияЕГАИСПоОрганизацииИТорговомуОбъекту(РеквизитыОснования.Организация, РеквизитыОснования.СтруктурнаяЕдиница);
			Источник.Поставщик = Источник.Грузоотправитель;
			
			ЗаполнитьТоварыЕГАИС(Источник, ДанныеЗаполнения);
			Документы.ТТНИсходящаяЕГАИС.ПодобратьСправки2(Источник);
			
		ИначеЕсли ТипЗнч(ДанныеЗаполнения) = Тип("ДокументСсылка.ПередачаТоваровМеждуОрганизациями") Тогда
			
			РеквизитыОснования = ОбщегоНазначения.ЗначенияРеквизитовОбъекта(ДанныеЗаполнения, "Организация, ОрганизацияПолучатель, СтруктурнаяЕдиница, Номер, Дата");
			
			Источник.ДокументОснование = ДанныеЗаполнения;
			Источник.ВидОперации       = Перечисления.ВидыОперацийТТНИсходящейЕГАИС.РасходнаяНакладная;
			Источник.Идентификатор     = Строка(ДанныеЗаполнения.УникальныйИдентификатор());
			Источник.НомерТТН          = СформироватьНомерИсходящейТТН(РеквизитыОснования.Номер, РеквизитыОснования.Дата);
			Источник.ДатаОтгрузки      = РеквизитыОснования.Дата;
			Источник.ДатаТТН           = РеквизитыОснования.Дата;
			Источник.Упакована         = Истина;
			Источник.Грузополучатель   = Справочники.КлассификаторОрганизацийЕГАИС.ОрганизацияЕГАИСПоОрганизацииИТорговомуОбъекту(
				РеквизитыОснования.ОрганизацияПолучатель, РеквизитыОснования.СтруктурнаяЕдиница);
			Если Не ЗначениеЗаполнено(Источник.Грузополучатель) Тогда
				Источник.Грузополучатель = Справочники.КлассификаторОрганизацийЕГАИС.ОрганизацияЕГАИСПоОрганизацииИТорговомуОбъекту(
					РеквизитыОснования.ОрганизацияПолучатель, Справочники.СтруктурныеЕдиницы.ПустаяСсылка());
			КонецЕсли;
			Источник.Грузоотправитель  = Справочники.КлассификаторОрганизацийЕГАИС.ОрганизацияЕГАИСПоОрганизацииИТорговомуОбъекту(
				РеквизитыОснования.Организация, РеквизитыОснования.СтруктурнаяЕдиница);
			Если Не ЗначениеЗаполнено(Источник.Грузоотправитель) Тогда
				Источник.Грузоотправитель = Справочники.КлассификаторОрганизацийЕГАИС.ОрганизацияЕГАИСПоОрганизацииИТорговомуОбъекту(
					РеквизитыОснования.Организация, Справочники.СтруктурныеЕдиницы.ПустаяСсылка());
			КонецЕсли;
			
			ЗаполнитьТоварыЕГАИС(Источник, ДанныеЗаполнения);
			Документы.ТТНИсходящаяЕГАИС.ПодобратьСправки2(Источник);
			
		КонецЕсли;
		
	ИначеЕсли ТипЗнч(Источник) = Тип("ДокументОбъект.ВозвратИзРегистра2ЕГАИС") Тогда
		
		Если ТипЗнч(ДанныеЗаполнения) = Тип("Структура") Тогда
			ЗаполнитьЗначенияСвойств(Источник,ДанныеЗаполнения);
			Если ДанныеЗаполнения.Свойство("ДокументОснование") Тогда
				ДанныеЗаполнения = ДанныеЗаполнения.ДокументОснование;
			КонецЕсли;
		КонецЕсли;
		
		Если ТипЗнч(ДанныеЗаполнения) = Тип("ДокументСсылка.ПеремещениеЗапасов") Тогда
			
			РеквизитыОснования = ОбщегоНазначения.ЗначенияРеквизитовОбъекта(ДанныеЗаполнения, "Организация, СтруктурнаяЕдиницаПолучатель");
			
			Источник.ДокументОснование = ДанныеЗаполнения;
			Источник.Организация = РеквизитыОснования.Организация;
			Источник.Магазин = РеквизитыОснования.СтруктурнаяЕдиницаПолучатель;
			Источник.ОрганизацияЕГАИС = Справочники.КлассификаторОрганизацийЕГАИС.ОрганизацияЕГАИСПоОрганизацииИТорговомуОбъекту(РеквизитыОснования.Организация, РеквизитыОснования.СтруктурнаяЕдиницаПолучатель);
			Источник.Ответственный = Пользователи.ТекущийПользователь();
			
			ЗаполнитьТоварыЕГАИС(Источник, ДанныеЗаполнения, Истина);
			Документы.ВозвратИзРегистра2ЕГАИС.ПодобратьСправки2(Источник);
			
		ИначеЕсли ТипЗнч(ДанныеЗаполнения) = Тип("ДокументСсылка.ТТНИсходящаяЕГАИС") Тогда
			
			ЗаполнитьВозвратИзРегистра2ЕГАИСНаОснованииТТНИсходящейЕГАИС(Источник, ДанныеЗаполнения, ТекстЗаполнения, СтандартнаяОбработка);
			
		КонецЕсли;
		
	ИначеЕсли ТипЗнч(Источник) = Тип("ДокументОбъект.ЧекЕГАИС") Тогда
		
		Если ТипЗнч(ДанныеЗаполнения) = Тип("ДокументСсылка.РасходнаяНакладная") Тогда
			
			РеквизитыОснования = ОбщегоНазначения.ЗначенияРеквизитовОбъекта(ДанныеЗаполнения, "Организация, СтруктурнаяЕдиница, Контрагент, Номер, Дата, ВидОперации, НомерСменыККМ, НомерЧекаККМ");
			Если РеквизитыОснования.ВидОперации = Перечисления.ВидыОперацийРасходнаяНакладная.ПродажаПокупателю Тогда
				
				Источник.ДокументОснование = ДанныеЗаполнения;
				Источник.ОрганизацияЕГАИС  = Справочники.КлассификаторОрганизацийЕГАИС.ОрганизацияЕГАИСПоОрганизацииИТорговомуОбъекту(РеквизитыОснования.Организация, РеквизитыОснования.СтруктурнаяЕдиница);
				Источник.ВидОперации       = Перечисления.ВидыОперацийЧекаЕГАИС.РеализацияРозничномуПокупателю;
				Источник.НомерСмены        = РеквизитыОснования.НомерСменыККМ;
				Источник.НомерЧекаККМ      = РеквизитыОснования.НомерЧекаККМ;
				Источник.СерийныйНомерККМ  = "1";
				
				ЗаполнитьТоварыЕГАИС(Источник, ДанныеЗаполнения, Ложь, Истина);
				
			КонецЕсли;
			
		КонецЕсли;
		
	ИначеЕсли ТипЗнч(Источник) = Тип("ДокументОбъект.ЧекЕГАИСВозврат") Тогда
		
		Если ТипЗнч(ДанныеЗаполнения) = Тип("ДокументСсылка.ПриходнаяНакладная") Тогда
			
			РеквизитыОснования = ОбщегоНазначения.ЗначенияРеквизитовОбъекта(ДанныеЗаполнения, "Организация, СтруктурнаяЕдиница, Контрагент, Номер, Дата, ВидОперации, ЧекККМ.НомерСменыККМ, ЧекККМ.НомерЧекаККМ, ЧекККМ.КассаККМ");
			Если РеквизитыОснования.ВидОперации = Перечисления.ВидыОперацийПриходнаяНакладная.ВозвратОтПокупателя Тогда
				
				Источник.ДокументОснование = ДанныеЗаполнения;
				Источник.ОрганизацияЕГАИС  = Справочники.КлассификаторОрганизацийЕГАИС.ОрганизацияЕГАИСПоОрганизацииИТорговомуОбъекту(РеквизитыОснования.Организация, РеквизитыОснования.СтруктурнаяЕдиница);
				Источник.ВидОперации       = Перечисления.ВидыОперацийЧекаЕГАИСВозврат.ВозвратОтРозничногоПокупателя;
				Источник.НомерСмены        = РеквизитыОснования.ЧекККМНомерСменыККМ;
				Источник.НомерЧекаККМ      = РеквизитыОснования.ЧекККМНомерЧекаККМ;
				
				СерийныйНомерККМ = РабочееМестоКассира.СерийныйНомерККМ(РеквизитыОснования.ЧекККМКассаККМ);
				Если Не ЗначениеЗаполнено(СерийныйНомерККМ) Тогда
					СерийныйНомерККМ = "1";
				КонецЕсли;
				Источник.СерийныйНомерККМ  = СерийныйНомерККМ;
				
				Для каждого СтрокаТаблицы Из ДанныеЗаполнения.Запасы Цикл
					
					НоваяСтрока = Источник.Товары.Добавить();
					ЗаполнитьЗначенияСвойств(НоваяСтрока, СтрокаТаблицы);
					
					НоваяСтрока.ИдентификаторСтроки = СтрокаТаблицы.КлючСвязи;
					НоваяСтрока.АлкогольнаяПродукция = СтрокаТаблицы.НоменклатураЕГАИС;
					НоваяСтрока.Упаковка = СтрокаТаблицы.ЕдиницаИзмерения;
					НоваяСтрока.КоличествоУпаковок = СтрокаТаблицы.Количество;
					НоваяСтрока.Сумма = СтрокаТаблицы.Всего;
					
				КонецЦикла;
				
				Для каждого СтрокаТаблицы Из ДанныеЗаполнения.АкцизныеМарки Цикл
					
					НоваяСтрока = Источник.АкцизныеМарки.Добавить();
					ЗаполнитьЗначенияСвойств(НоваяСтрока, СтрокаТаблицы);
					
					НоваяСтрока.ИдентификаторСтроки = СтрокаТаблицы.КлючСвязи;
					
				КонецЦикла;
				
			КонецЕсли;
			
		КонецЕсли;
		
	КонецЕсли;
	
	Если ОбщегоНазначения.ЕстьРеквизитОбъекта("СтатусПроверкиИПодбора", Источник.Метаданные()) Тогда
		Источник.СтатусПроверкиИПодбора = Перечисления.СтатусыПроверкиИПодбораИС.НеВыполнялось;
	КонецЕсли;
	
	Если ОбщегоНазначения.ЕстьРеквизитОбъекта("Ответственный", Источник.Метаданные()) Тогда
		Источник.Ответственный = Пользователи.ТекущийПользователь();
	КонецЕсли;
		
КонецПроцедуры

Функция СформироватьНомерИсходящейТТН(Номер, Дата)
	
	НомерБезПрефиксов = ПрефиксацияОбъектовКлиентСервер.УдалитьПрефиксыИзНомераОбъекта(Номер, Истина, Истина);
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("ДатаТТН", НачалоДня(Дата));
	
	Запрос.Текст =
	"ВЫБРАТЬ
	|	ТТНИсходящаяЕГАИС.НомерТТН КАК НомерТТН
	|ИЗ
	|	Документ.ТТНИсходящаяЕГАИС КАК ТТНИсходящаяЕГАИС
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.СтатусыДокументовЕГАИС КАК СтатусыДокументовЕГАИС
	|		ПО ТТНИсходящаяЕГАИС.Ссылка = СтатусыДокументовЕГАИС.Документ
	|ГДЕ
	|	ТТНИсходящаяЕГАИС.ДатаТТН = &ДатаТТН
	|	И НЕ ТТНИсходящаяЕГАИС.ПометкаУдаления";
	
	НомераТТН = Запрос.Выполнить().Выгрузить().ВыгрузитьКолонку("НомерТТН");
	
	Результат = НомерБезПрефиксов;
	
	Сч = 0;
	Пока НомераТТН.Найти(Результат) <> Неопределено Цикл
		Сч = Сч + 1;
		Результат = НомерБезПрефиксов + "-" + Формат(Сч, "ЧГ=0");
	КонецЦикла;
	
	Возврат Результат;
	
КонецФункции

Процедура ЗаполнитьТоварыЕГАИС(Источник, ДанныеЗаполнения, ИсключитьМаркируемые = Ложь, ИсключитьНемаркируемые = Ложь)
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("ДокументОснование", ДанныеЗаполнения);
	Запрос.УстановитьПараметр("КонечныеСтатусы"  , Документы.ТТНИсходящаяЕГАИС.КонечныеСтатусы());
	Запрос.УстановитьПараметр("ЭтаСсылка"        , Источник.Ссылка);
	ТекстЗапроса = 
	"ВЫБРАТЬ
	|	ТаблицаТовары.Номенклатура КАК Номенклатура,
	|	ТаблицаТовары.Характеристика КАК Характеристика,
	|	ТаблицаТовары.Количество КАК Количество,
	|	&ОписаниеПоляСумма КАК Сумма,
	|	ТаблицаТовары.ЕдиницаИзмерения КАК ЕдиницаИзмерения
	|ПОМЕСТИТЬ втТовары
	|ИЗ
	|	Документ.ПриходнаяНакладная.Запасы КАК ТаблицаТовары
	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.Номенклатура КАК СправочникНоменклатура
	|		ПО ТаблицаТовары.Номенклатура = СправочникНоменклатура.Ссылка
	|ГДЕ
	|	ТаблицаТовары.Ссылка = &ДокументОснование
	|	И СправочникНоменклатура.АлкогольнаяПродукция
	|	И НЕ СправочникНоменклатура.ПродаетсяВРозлив
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	втТовары.Номенклатура КАК Номенклатура,
	|	втТовары.Характеристика КАК Характеристика,
	|	МАКСИМУМ(ЕСТЬNULL(СоответствиеНоменклатурыЕГАИС.АлкогольнаяПродукция, ЗНАЧЕНИЕ(Справочник.КлассификаторАлкогольнойПродукцииЕГАИС.ПустаяСсылка))) КАК АлкогольнаяПродукция,
	|	втТовары.ЕдиницаИзмерения КАК ЕдиницаИзмерения
	|ПОМЕСТИТЬ СоответствиеТоваров
	|ИЗ
	|	втТовары КАК втТовары
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.СоответствиеНоменклатурыЕГАИС КАК СоответствиеНоменклатурыЕГАИС
	|		ПО втТовары.Номенклатура = СоответствиеНоменклатурыЕГАИС.Номенклатура
	|			И втТовары.Характеристика = СоответствиеНоменклатурыЕГАИС.Характеристика
	|
	|СГРУППИРОВАТЬ ПО
	|	втТовары.Номенклатура,
	|	втТовары.Характеристика,
	|	втТовары.ЕдиницаИзмерения
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ТаблицаДокументы.Ссылка КАК Ссылка
	|ПОМЕСТИТЬ ОформленныеДокументы
	|ИЗ
	|	Документ.ТТНИсходящаяЕГАИС КАК ТаблицаДокументы
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.СтатусыДокументовЕГАИС КАК СтатусыДокументовЕГАИС
	|		ПО (СтатусыДокументовЕГАИС.Документ = ТаблицаДокументы.Ссылка)
	|ГДЕ
	|	ТаблицаДокументы.ДокументОснование = &ДокументОснование
	|	И ТаблицаДокументы.Ссылка <> &ЭтаСсылка
	|	И ТаблицаДокументы.Проведен
	|	И НЕ СтатусыДокументовЕГАИС.Статус В (&КонечныеСтатусы)
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	втТовары.Номенклатура КАК Номенклатура,
	|	втТовары.Характеристика КАК Характеристика,
	|	СоответствиеТоваров.АлкогольнаяПродукция КАК АлкогольнаяПродукция,
	|	втТовары.Количество КАК Количество,
	|	втТовары.Сумма КАК Сумма,
	|	втТовары.ЕдиницаИзмерения КАК ЕдиницаИзмерения
	|ПОМЕСТИТЬ ТоварыКОформлению
	|ИЗ
	|	втТовары КАК втТовары
	|		ЛЕВОЕ СОЕДИНЕНИЕ СоответствиеТоваров КАК СоответствиеТоваров
	|		ПО втТовары.Номенклатура = СоответствиеТоваров.Номенклатура
	|			И втТовары.Характеристика = СоответствиеТоваров.Характеристика
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ОформленныеТовары.Номенклатура,
	|	ОформленныеТовары.Характеристика,
	|	ОформленныеТовары.АлкогольнаяПродукция,
	|	-ОформленныеТовары.Количество,
	|	-ОформленныеТовары.Сумма,
	|	ОформленныеТовары.Упаковка
	|ИЗ
	|	Документ.ТТНИсходящаяЕГАИС.Товары КАК ОформленныеТовары
	|ГДЕ
	|	ОформленныеТовары.Ссылка В
	|			(ВЫБРАТЬ
	|				Т.Ссылка
	|			ИЗ
	|				ОформленныеДокументы КАК Т)
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ТоварыКОформлению.Номенклатура КАК Номенклатура,
	|	ТоварыКОформлению.Характеристика КАК Характеристика,
	|	ТоварыКОформлению.ЕдиницаИзмерения КАК ЕдиницаИзмерения,
	|	ТоварыКОформлению.АлкогольнаяПродукция КАК АлкогольнаяПродукция,
	|	СУММА(ТоварыКОформлению.Количество) КАК Количество,
	|	СУММА(ТоварыКОформлению.Сумма) КАК Сумма,
	|	ЕСТЬNULL(ВидыАлкогольнойПродукции.Маркируемый, ИСТИНА) КАК Маркируемый
	|ИЗ
	|	ТоварыКОформлению КАК ТоварыКОформлению
	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.ВидыАлкогольнойПродукции КАК ВидыАлкогольнойПродукции
	|		ПО ТоварыКОформлению.АлкогольнаяПродукция.ВидПродукции = ВидыАлкогольнойПродукции.Ссылка
	|
	|СГРУППИРОВАТЬ ПО
	|	ТоварыКОформлению.Номенклатура,
	|	ТоварыКОформлению.АлкогольнаяПродукция,
	|	ЕСТЬNULL(ВидыАлкогольнойПродукции.Маркируемый, ИСТИНА),
	|	ТоварыКОформлению.Характеристика,
	|	ТоварыКОформлению.ЕдиницаИзмерения
	|
	|ИМЕЮЩИЕ
	|	СУММА(ТоварыКОформлению.Количество) > 0";
	
	// Реквизиты основания
	МетаданныеДокумента  = ДанныеЗаполнения.Метаданные();
	ИмяДокумента         = МетаданныеДокумента.Имя;
	ЕстьСуммаВключаетНДС = ОбщегоНазначения.ЕстьРеквизитОбъекта("СуммаВключаетНДС", МетаданныеДокумента);
	
	Если МетаданныеДокумента.ТабличныеЧасти.Найти("Запасы") <> Неопределено Тогда
		ЕстьСумма            = (МетаданныеДокумента.ТабличныеЧасти["Запасы"].Реквизиты.Найти("Сумма") <> Неопределено);
	Иначе
		ЕстьСумма            = (МетаданныеДокумента.ТабличныеЧасти["Товары"].Реквизиты.Найти("Сумма") <> Неопределено);
	КонецЕсли;
	
	// Реквизиты получателя
	Если Источник.Метаданные().ТабличныеЧасти.Найти("Запасы") <> Неопределено Тогда
		ЕстьКоличествоУпаковок = (Источник.Метаданные().ТабличныеЧасти["Запасы"].Реквизиты.Найти("КоличествоУпаковок") <> Неопределено);
	Иначе
		ЕстьКоличествоУпаковок = (Источник.Метаданные().ТабличныеЧасти["Товары"].Реквизиты.Найти("КоличествоУпаковок") <> Неопределено);
	КонецЕсли;
	
	Если Источник.Метаданные().ТабличныеЧасти.Найти("Запасы") <> Неопределено Тогда
		ЕстьЦена               = (Источник.Метаданные().ТабличныеЧасти["Запасы"].Реквизиты.Найти("Цена") <> Неопределено);
	Иначе
		ЕстьЦена               = (Источник.Метаданные().ТабличныеЧасти["Товары"].Реквизиты.Найти("Цена") <> Неопределено);
	КонецЕсли;
	
	Если ЕстьСумма И ЕстьСуммаВключаетНДС Тогда
		ОписаниеПоляСумма =
		"ВЫБОР
		|	КОГДА ТаблицаТовары.Ссылка.СуммаВключаетНДС
		|		ТОГДА ТаблицаТовары.Сумма
		|	ИНАЧЕ ТаблицаТовары.Сумма + ТаблицаТовары.СуммаНДС
		|КОНЕЦ";
	Иначе
		ОписаниеПоляСумма = "0";
	КонецЕсли;
	ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "&ОписаниеПоляСумма", ОписаниеПоляСумма);
	ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "ПриходнаяНакладная", ИмяДокумента);
	Запрос.Текст = ТекстЗапроса;
	
	ВыборкаНоменклатура = Запрос.Выполнить().Выбрать();
	
	Источник.Товары.Очистить();
	Пока ВыборкаНоменклатура.Следующий() Цикл
		
		Если ИсключитьМаркируемые И ВыборкаНоменклатура.Маркируемый
			Или ИсключитьНемаркируемые И НЕ ВыборкаНоменклатура.Маркируемый Тогда
			Продолжить;
		КонецЕсли;
		
		НоваяСтрока = Источник.Товары.Добавить();
		ЗаполнитьЗначенияСвойств(НоваяСтрока, ВыборкаНоменклатура);
		Если ЕстьКоличествоУпаковок Тогда
			НоваяСтрока.КоличествоУпаковок	= НоваяСтрока.Количество;
		КонецЕсли;
		Если ЕстьЦена Тогда
			НоваяСтрока.Цена = ?(НоваяСтрока.Количество = 0, НоваяСтрока.Сумма, НоваяСтрока.Сумма/НоваяСтрока.Количество);
		КонецЕсли;
		
		НоваяСтрока.Упаковка = ВыборкаНоменклатура.ЕдиницаИзмерения;
		
	КонецЦикла;
	
КонецПроцедуры

Процедура ЗаполнитьТабличнуюЧастьТовары(ДокументОбъект, РезультатЗапроса, ДанныеЗаполнения, БезСопоставления = Ложь)
	
	ВыборкаТовары = РезультатЗапроса.Выбрать();
	
	Если ВыборкаТовары.Количество() = 0 Тогда
		
		ВызватьИсключение СтрШаблон(
			НСтр("ru='В %1 отсутствует алкогольная продукция для заполнения.'"),
			ДанныеЗаполнения);
		
	КонецЕсли;
	
	Пока ВыборкаТовары.Следующий() Цикл
		
		Если ЗначениеЗаполнено(ВыборкаТовары.АлкогольнаяПродукция) ИЛИ БезСопоставления Тогда
			
			НоваяСтрока = ДокументОбъект.Товары.Добавить();
			ЗаполнитьЗначенияСвойств(НоваяСтрока, ВыборкаТовары);
			
		Иначе
			
			ДокументОбъект.Товары.Очистить();
			
			ТекстОшибки = НСтр("ru='Не выполнено сопоставление %Номенклатура% классификатору номенклатуры ЕГАИС.'");
			ТекстОшибки = СтрЗаменить(ТекстОшибки, "%Номенклатура%", ВыборкаТовары.Номенклатура);
			
			ВызватьИсключение ТекстОшибки;
			
		КонецЕсли;
		
	КонецЦикла;
	
КонецПроцедуры

Процедура ЗаполнитьАктПостановкиНаБалансЕГАИСНаОснованииСтруктуры(ДокументОбъект, ДанныеЗаполнения, ТекстЗаполнения, СтандартнаяОбработка)
	
	ДокументОбъект.ОрганизацияЕГАИС = ДанныеЗаполнения.ОрганизацияЕГАИС;
	ДокументОбъект.ВидДокумента     = Перечисления.ВидыДокументовЕГАИС.АктПостановкиНаБалансВРегистр3;
	
	ТаблицаТовары = Новый ТаблицаЗначений;
	ТаблицаТовары.Колонки.Добавить("АлкогольнаяПродукция", Новый ОписаниеТипов("СправочникСсылка.КлассификаторАлкогольнойПродукцииЕГАИС"));
	ТаблицаТовары.Колонки.Добавить("Справка2",             Новый ОписаниеТипов("СправочникСсылка.Справки2ЕГАИС"));
	
	Для Каждого ДанныеАкцизнойМарки Из ДанныеЗаполнения.АкцизныеМарки Цикл
		
		НоваяСтрока = ДокументОбъект.АкцизныеМарки.Добавить();
		ЗаполнитьЗначенияСвойств(НоваяСтрока, ДанныеАкцизнойМарки);
		НоваяСтрока.Количество = 1;
		
		НоваяСтрокаТовары = ТаблицаТовары.Добавить();
		НоваяСтрокаТовары.АлкогольнаяПродукция = ДанныеАкцизнойМарки.АлкогольнаяПродукция;
		НоваяСтрокаТовары.Справка2             = ДанныеАкцизнойМарки.Справка2;
		
	КонецЦикла;
	
	Запрос = Новый Запрос(
	"ВЫБРАТЬ
	|	Т.АлкогольнаяПродукция КАК АлкогольнаяПродукция,
	|	Т.Справка2 КАК Справка2,
	|	1 КАК Количество
	|ПОМЕСТИТЬ втТовары
	|ИЗ
	|	&Товары КАК Т
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	Т.АлкогольнаяПродукция,
	|	Т.Справка2 КАК Справка2,
	|	СУММА(Т.Количество) КАК Количество
	|ПОМЕСТИТЬ Товары
	|ИЗ
	|	втТовары КАК Т
	|СГРУППИРОВАТЬ ПО
	|	Т.АлкогольнаяПродукция,
	|	Т.Справка2
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ТабличнаяЧасть.АлкогольнаяПродукция КАК АлкогольнаяПродукция,
	|	ТабличнаяЧасть.Справка2 КАК Справка2,
	|	МАКСИМУМ(СоответствиеНоменклатурыЕГАИС.Номенклатура) КАК Номенклатура,
	|	МАКСИМУМ(СоответствиеНоменклатурыЕГАИС.Характеристика) КАК Характеристика
	|ПОМЕСТИТЬ СопоставленныеПозиции
	|ИЗ
	|	Товары КАК ТабличнаяЧасть
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.СоответствиеНоменклатурыЕГАИС КАК СоответствиеНоменклатурыЕГАИС
	|		ПО СоответствиеНоменклатурыЕГАИС.АлкогольнаяПродукция = ТабличнаяЧасть.АлкогольнаяПродукция
	|			И СоответствиеНоменклатурыЕГАИС.Справка2 = ТабличнаяЧасть.Справка2
	|ГДЕ
	|	НЕ СоответствиеНоменклатурыЕГАИС.АлкогольнаяПродукция ЕСТЬ NULL
	|СГРУППИРОВАТЬ ПО
	|	ТабличнаяЧасть.АлкогольнаяПродукция,
	|	ТабличнаяЧасть.Справка2
	|ИМЕЮЩИЕ
	|	КОЛИЧЕСТВО(РАЗЛИЧНЫЕ СоответствиеНоменклатурыЕГАИС.Номенклатура) = 1
	|		И КОЛИЧЕСТВО(РАЗЛИЧНЫЕ СоответствиеНоменклатурыЕГАИС.Характеристика) < 2
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	СопоставленныеПозиции.Номенклатура   КАК Номенклатура,
	|	СопоставленныеПозиции.Характеристика КАК Характеристика,
	|	ТабличнаяЧасть.АлкогольнаяПродукция КАК АлкогольнаяПродукция,
	|	ТабличнаяЧасть.Справка2             КАК Справка2,
	|	ТабличнаяЧасть.Количество           КАК Количество,
	|	ТабличнаяЧасть.Количество           КАК КоличествоУпаковок
	|ИЗ
	|	Товары КАК ТабличнаяЧасть
	|		ЛЕВОЕ СОЕДИНЕНИЕ СопоставленныеПозиции КАК СопоставленныеПозиции
	|		ПО ТабличнаяЧасть.АлкогольнаяПродукция = СопоставленныеПозиции.АлкогольнаяПродукция
	|			И ТабличнаяЧасть.Справка2 = СопоставленныеПозиции.Справка2
	|			И НЕ СопоставленныеПозиции.АлкогольнаяПродукция ЕСТЬ NULL
	|");
	Запрос.УстановитьПараметр("Товары", ТаблицаТовары);
	
	Выборка = Запрос.Выполнить().Выбрать();
	Пока Выборка.Следующий() Цикл
		ЗаполнитьЗначенияСвойств(ДокументОбъект.Товары.Добавить(), Выборка);
	КонецЦикла;
	
КонецПроцедуры

Процедура ЗаполнитьТоварыАктаСписанияЕГАИСНаОснованииПередачиВРегистр2(ДокументОбъект)
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("ДокументОснование", ДокументОбъект.ДокументОснование);
	Запрос.УстановитьПараметр("КонечныеСтатусы"  , Документы.АктСписанияЕГАИС.КонечныеСтатусы());
	
	Запрос.Текст =
	"ВЫБРАТЬ
	|	ТаблицаДокументы.Ссылка КАК Ссылка
	|ПОМЕСТИТЬ ОформленныеДокументы
	|ИЗ
	|	Документ.АктСписанияЕГАИС КАК ТаблицаДокументы
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.СтатусыДокументовЕГАИС КАК СтатусыДокументовЕГАИС
	|		ПО (СтатусыДокументовЕГАИС.Документ = ТаблицаДокументы.Ссылка)
	|ГДЕ
	|	ТаблицаДокументы.ДокументОснование = &ДокументОснование
	|	И ТаблицаДокументы.Проведен
	|	И НЕ СтатусыДокументовЕГАИС.Статус В (&КонечныеСтатусы)
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ТабличнаяЧасть.Номенклатура КАК Номенклатура,
	|	ТабличнаяЧасть.Характеристика КАК Характеристика,
	|	ТабличнаяЧасть.Упаковка КАК Упаковка,
	|	ТабличнаяЧасть.АлкогольнаяПродукция КАК АлкогольнаяПродукция,
	|	ТабличнаяЧасть.Справка2 КАК Справка2,
	|	ТабличнаяЧасть.Количество КАК Количество,
	|	ТабличнаяЧасть.КоличествоУпаковок КАК КоличествоУпаковок
	|ПОМЕСТИТЬ ТоварыКОформлению
	|ИЗ
	|	Документ.ПередачаВРегистр2ЕГАИС.Товары КАК ТабличнаяЧасть
	|ГДЕ
	|	ТабличнаяЧасть.Ссылка = &ДокументОснование
	|	И ЕСТЬNULL(НЕ ТабличнаяЧасть.АлкогольнаяПродукция.ВидПродукции.Маркируемый, ЛОЖЬ)
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ОформленныеТовары.Номенклатура,
	|	ОформленныеТовары.Характеристика,
	|	ОформленныеТовары.Упаковка,
	|	ОформленныеТовары.АлкогольнаяПродукция,
	|	ОформленныеТовары.Справка2,
	|	-ОформленныеТовары.Количество,
	|	-ОформленныеТовары.КоличествоУпаковок
	|ИЗ
	|	Документ.АктСписанияЕГАИС.Товары КАК ОформленныеТовары
	|ГДЕ
	|	ОформленныеТовары.Ссылка В
	|			(ВЫБРАТЬ
	|				Т.Ссылка
	|			ИЗ
	|				ОформленныеДокументы КАК Т)
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ТоварыКОформлению.Номенклатура КАК Номенклатура,
	|	ТоварыКОформлению.Характеристика КАК Характеристика,
	|	ТоварыКОформлению.Упаковка КАК Упаковка,
	|	ТоварыКОформлению.АлкогольнаяПродукция КАК АлкогольнаяПродукция,
	|	ТоварыКОформлению.Справка2 КАК Справка2,
	|	СУММА(ТоварыКОформлению.Количество) КАК Количество,
	|	СУММА(ТоварыКОформлению.КоличествоУпаковок) КАК КоличествоУпаковок
	|ИЗ
	|	ТоварыКОформлению КАК ТоварыКОформлению
	|
	|СГРУППИРОВАТЬ ПО
	|	ТоварыКОформлению.Номенклатура,
	|	ТоварыКОформлению.Характеристика,
	|	ТоварыКОформлению.Упаковка,
	|	ТоварыКОформлению.АлкогольнаяПродукция,
	|	ТоварыКОформлению.Справка2
	|
	|ИМЕЮЩИЕ
	|	СУММА(ТоварыКОформлению.Количество) > 0";
	
	ДокументОбъект.Товары.Загрузить(Запрос.Выполнить().Выгрузить());
	
	Для Каждого СтрокаТЧ Из ДокументОбъект.Товары Цикл
		СтрокаТЧ.ИдентификаторСтроки = Строка(Новый УникальныйИдентификатор);
	КонецЦикла;
	
	Если ДокументОбъект.Товары.Количество() = 0 Тогда
		ТекстОшибки = НСтр("ru = 'Нет данных для заполнения документа'");
		ВызватьИсключение ТекстОшибки;
	КонецЕсли;
	
КонецПроцедуры

Процедура ЗаполнитьТоварыАктаСписанияЕГАИСНаОснованииКомплектацииЗапасов(Источник, ДанныеЗаполнения, ИсключитьМаркируемые = Ложь, ИсключитьНемаркируемые = Ложь)
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("ДокументОснование", ДанныеЗаполнения);
	Запрос.УстановитьПараметр("КонечныеСтатусы"  , Документы.АктСписанияЕГАИС.КонечныеСтатусы());
	Запрос.УстановитьПараметр("ЭтаСсылка"        , Источник.Ссылка);
	ТекстЗапроса = 
	"ВЫБРАТЬ
	|	КомплектацияЗапасовЗапасы.Номенклатура КАК Номенклатура,
	|	КомплектацияЗапасовЗапасы.Характеристика КАК Характеристика,
	|	КомплектацияЗапасовЗапасы.ЕдиницаИзмерения КАК ЕдиницаИзмерения,
	|	КомплектацияЗапасовЗапасы.Количество КАК Количество
	|ПОМЕСТИТЬ втТовары
	|ИЗ
	|	Документ.КомплектацияЗапасов.Запасы КАК КомплектацияЗапасовЗапасы
	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.Номенклатура КАК СправочникНоменклатура
	|		ПО КомплектацияЗапасовЗапасы.Номенклатура = СправочникНоменклатура.Ссылка
	|ГДЕ
	|	КомплектацияЗапасовЗапасы.Ссылка = &ДокументОснование
	|	И КомплектацияЗапасовЗапасы.Ссылка.ВидОперации = ЗНАЧЕНИЕ(Перечисление.ВидыОперацийКомплектацияЗапасов.Сборка)
	|	И СправочникНоменклатура.АлкогольнаяПродукция
	|	И НЕ СправочникНоменклатура.ПродаетсяВРозлив
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	КомплектацияЗапасов.Номенклатура,
	|	КомплектацияЗапасов.Характеристика,
	|	КомплектацияЗапасов.ЕдиницаИзмерения,
	|	КомплектацияЗапасов.Количество
	|ИЗ
	|	Документ.КомплектацияЗапасов КАК КомплектацияЗапасов
	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.Номенклатура КАК СправочникНоменклатура
	|		ПО КомплектацияЗапасов.Номенклатура = СправочникНоменклатура.Ссылка
	|ГДЕ
	|	КомплектацияЗапасов.Ссылка = &ДокументОснование
	|	И КомплектацияЗапасов.ВидОперации = ЗНАЧЕНИЕ(Перечисление.ВидыОперацийКомплектацияЗапасов.Разборка)
	|	И СправочникНоменклатура.АлкогольнаяПродукция
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	втТовары.Номенклатура КАК Номенклатура,
	|	втТовары.Характеристика КАК Характеристика,
	|	МАКСИМУМ(ЕСТЬNULL(СоответствиеНоменклатурыЕГАИС.АлкогольнаяПродукция, ЗНАЧЕНИЕ(Справочник.КлассификаторАлкогольнойПродукцииЕГАИС.ПустаяСсылка))) КАК АлкогольнаяПродукция,
	|	втТовары.ЕдиницаИзмерения КАК ЕдиницаИзмерения
	|ПОМЕСТИТЬ СоответствиеТоваров
	|ИЗ
	|	втТовары КАК втТовары
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.СоответствиеНоменклатурыЕГАИС КАК СоответствиеНоменклатурыЕГАИС
	|		ПО втТовары.Номенклатура = СоответствиеНоменклатурыЕГАИС.Номенклатура
	|			И втТовары.Характеристика = СоответствиеНоменклатурыЕГАИС.Характеристика
	|
	|СГРУППИРОВАТЬ ПО
	|	втТовары.Номенклатура,
	|	втТовары.Характеристика,
	|	втТовары.ЕдиницаИзмерения
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	АктСписанияЕГАИС.Ссылка КАК Ссылка
	|ПОМЕСТИТЬ ОформленныеДокументы
	|ИЗ
	|	Документ.АктСписанияЕГАИС КАК АктСписанияЕГАИС
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.СтатусыДокументовЕГАИС КАК СтатусыДокументовЕГАИС
	|		ПО (СтатусыДокументовЕГАИС.Документ = АктСписанияЕГАИС.Ссылка)
	|ГДЕ
	|	АктСписанияЕГАИС.ДокументОснование = &ДокументОснование
	|	И АктСписанияЕГАИС.Ссылка <> &ЭтаСсылка
	|	И АктСписанияЕГАИС.Проведен
	|	И НЕ СтатусыДокументовЕГАИС.Статус В (&КонечныеСтатусы)
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	втТовары.Номенклатура КАК Номенклатура,
	|	втТовары.Характеристика КАК Характеристика,
	|	СоответствиеТоваров.АлкогольнаяПродукция КАК АлкогольнаяПродукция,
	|	втТовары.Количество КАК Количество,
	|	втТовары.ЕдиницаИзмерения КАК ЕдиницаИзмерения
	|ПОМЕСТИТЬ ТоварыКОформлению
	|ИЗ
	|	втТовары КАК втТовары
	|		ЛЕВОЕ СОЕДИНЕНИЕ СоответствиеТоваров КАК СоответствиеТоваров
	|		ПО втТовары.Номенклатура = СоответствиеТоваров.Номенклатура
	|			И втТовары.Характеристика = СоответствиеТоваров.Характеристика
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	АктСписанияЕГАИСТовары.Номенклатура,
	|	АктСписанияЕГАИСТовары.Характеристика,
	|	АктСписанияЕГАИСТовары.АлкогольнаяПродукция,
	|	-АктСписанияЕГАИСТовары.Количество,
	|	АктСписанияЕГАИСТовары.Упаковка
	|ИЗ
	|	Документ.АктСписанияЕГАИС.Товары КАК АктСписанияЕГАИСТовары
	|ГДЕ
	|	АктСписанияЕГАИСТовары.Ссылка В
	|			(ВЫБРАТЬ
	|				Т.Ссылка
	|			ИЗ
	|				ОформленныеДокументы КАК Т)
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ТоварыКОформлению.Номенклатура КАК Номенклатура,
	|	ТоварыКОформлению.Характеристика КАК Характеристика,
	|	ТоварыКОформлению.ЕдиницаИзмерения КАК ЕдиницаИзмерения,
	|	ТоварыКОформлению.АлкогольнаяПродукция КАК АлкогольнаяПродукция,
	|	СУММА(ТоварыКОформлению.Количество) КАК Количество,
	|	ЕСТЬNULL(ВидыАлкогольнойПродукции.Маркируемый, ИСТИНА) КАК Маркируемый
	|ИЗ
	|	ТоварыКОформлению КАК ТоварыКОформлению
	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.ВидыАлкогольнойПродукции КАК ВидыАлкогольнойПродукции
	|		ПО ТоварыКОформлению.АлкогольнаяПродукция.ВидПродукции = ВидыАлкогольнойПродукции.Ссылка
	|
	|СГРУППИРОВАТЬ ПО
	|	ТоварыКОформлению.Номенклатура,
	|	ТоварыКОформлению.АлкогольнаяПродукция,
	|	ЕСТЬNULL(ВидыАлкогольнойПродукции.Маркируемый, ИСТИНА),
	|	ТоварыКОформлению.Характеристика,
	|	ТоварыКОформлению.ЕдиницаИзмерения
	|
	|ИМЕЮЩИЕ
	|	СУММА(ТоварыКОформлению.Количество) > 0";
	
	Запрос.Текст = ТекстЗапроса;
	
	ВыборкаНоменклатура = Запрос.Выполнить().Выбрать();
	
	Источник.Товары.Очистить();
	Пока ВыборкаНоменклатура.Следующий() Цикл
		
		Если ИсключитьМаркируемые И ВыборкаНоменклатура.Маркируемый
			Или ИсключитьНемаркируемые И НЕ ВыборкаНоменклатура.Маркируемый Тогда
			Продолжить;
		КонецЕсли;
		
		НоваяСтрока = Источник.Товары.Добавить();
		ЗаполнитьЗначенияСвойств(НоваяСтрока, ВыборкаНоменклатура);
		НоваяСтрока.КоличествоУпаковок = НоваяСтрока.Количество;
		НоваяСтрока.Упаковка = ВыборкаНоменклатура.ЕдиницаИзмерения;
		
	КонецЦикла;
	
КонецПроцедуры

Процедура ЗаполнитьВозвратИзРегистра2ЕГАИСНаОснованииТТНИсходящейЕГАИС(ДокументОбъект, ДанныеЗаполнения, ТекстЗаполнения, СтандартнаяОбработка)
	
	Запрос = Новый Запрос(
	"ВЫБРАТЬ
	|	Таблица.Ссылка           КАК ДокументОснование,
	|	ЛОЖЬ                     КАК ЕстьОшибкиПроведен,
	|	Таблица.Грузоотправитель КАК ОрганизацияЕГАИС,
	|	Таблица.Ответственный    КАК Ответственный
	|ИЗ
	|	Документ.ТТНИсходящаяЕГАИС КАК Таблица
	|ГДЕ
	|	Таблица.Ссылка = &ДокументОснование
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ТаблицаДокументы.Ссылка КАК Ссылка
	|ПОМЕСТИТЬ ОформленныеДокументы
	|ИЗ
	|	Документ.ВозвратИзРегистра2ЕГАИС КАК ТаблицаДокументы
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.СтатусыДокументовЕГАИС КАК СтатусыДокументовЕГАИС
	|		ПО СтатусыДокументовЕГАИС.Документ = ТаблицаДокументы.Ссылка
	|ГДЕ
	|	ТаблицаДокументы.ДокументОснование = &ДокументОснование
	|	И ТаблицаДокументы.Ссылка <> &ЭтаСсылка
	|	И ТаблицаДокументы.Проведен
	|	И СтатусыДокументовЕГАИС.Статус НЕ В(&КонечныеСтатусы)
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ТабличнаяЧасть.Номенклатура КАК Номенклатура,
	|	ТабличнаяЧасть.Характеристика КАК Характеристика,
	|	ТабличнаяЧасть.Серия КАК Серия,
	|	"""" КАК Упаковка,
	|	ТабличнаяЧасть.Количество                                  КАК Количество,
	|	ТабличнаяЧасть.Количество                                  КАК КоличествоУпаковок,
	|	ТабличнаяЧасть.АлкогольнаяПродукция                        КАК АлкогольнаяПродукция,
	|	ТабличнаяЧасть.Справка2                                    КАК Справка2
	|ПОМЕСТИТЬ ТоварыКОформлению
	|ИЗ
	|	Документ.ТТНИсходящаяЕГАИС.Товары КАК ТабличнаяЧасть
	|ГДЕ
	|	ТабличнаяЧасть.Справка2 = ЗНАЧЕНИЕ(Справочник.Справки2ЕГАИС.ПустаяСсылка)
	|	И ТабличнаяЧасть.Ссылка = &ДокументОснование
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ОформленныеТовары.Номенклатура          КАК Номенклатура,
	|	ОформленныеТовары.Характеристика        КАК Характеристика,
	|	ОформленныеТовары.Серия                 КАК Серия,
	|	ОформленныеТовары.Упаковка              КАК Упаковка,
	|	-ОформленныеТовары.Количество           КАК Количество,
	|	-ОформленныеТовары.КоличествоУпаковок   КАК КоличествоУпаковок,
	|	ОформленныеТовары.АлкогольнаяПродукция  КАК АлкогольнаяПродукция,
	|	ОформленныеТовары.Справка2              КАК Справка2
	|ИЗ
	|	Документ.ВозвратИзРегистра2ЕГАИС.Товары КАК ОформленныеТовары
	|ГДЕ
	|	ОформленныеТовары.Ссылка В (ВЫБРАТЬ Т.Ссылка ИЗ ОформленныеДокументы КАК Т)
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ТоварыКОформлению.Номенклатура              КАК Номенклатура,
	|	ТоварыКОформлению.Характеристика            КАК Характеристика,
	|	ТоварыКОформлению.Серия                     КАК Серия,
	|	ТоварыКОформлению.Упаковка                  КАК Упаковка,
	|	ТоварыКОформлению.АлкогольнаяПродукция      КАК АлкогольнаяПродукция,
	|	ТоварыКОформлению.Справка2                  КАК Справка2,
	|	СУММА(ТоварыКОформлению.Количество)         КАК Количество,
	|	СУММА(ТоварыКОформлению.КоличествоУпаковок) КАК КоличествоУпаковок
	|ИЗ
	|	ТоварыКОформлению КАК ТоварыКОформлению
	|СГРУППИРОВАТЬ ПО
	|	ТоварыКОформлению.Номенклатура,
	|	ТоварыКОформлению.Характеристика,
	|	ТоварыКОформлению.Серия,
	|	ТоварыКОформлению.Упаковка,
	|	ТоварыКОформлению.АлкогольнаяПродукция,
	|	ТоварыКОформлению.Справка2
	|ИМЕЮЩИЕ
	|	СУММА(ТоварыКОформлению.Количество) > 0
	|");
	
	Запрос.УстановитьПараметр("ЭтаСсылка",         ДокументОбъект.Ссылка);
	Запрос.УстановитьПараметр("ДокументОснование", ДанныеЗаполнения);
	Запрос.УстановитьПараметр("КонечныеСтатусы",   Документы.ВозвратИзРегистра2ЕГАИС.КонечныеСтатусы());
	
	РезультатЗапроса = Запрос.ВыполнитьПакет();
	
	РеквизитыДокумента = РезультатЗапроса[0].Выбрать();
	РеквизитыДокумента.Следующий();
	
	ЭтоПерезаполнение = ЗначениеЗаполнено(ДокументОбъект.Ссылка);
	
	Если Не ЭтоПерезаполнение Тогда
		
		ЗаполнитьЗначенияСвойств(ДокументОбъект, РеквизитыДокумента);
		
	КонецЕсли;
	
	ДокументОбъект.Товары.Очистить();
	
	ЗаполнитьТабличнуюЧастьТовары(ДокументОбъект, РезультатЗапроса[РезультатЗапроса.Количество() - 1], ДанныеЗаполнения);
	
КонецПроцедуры

Процедура ТекстЗапросаОрганизацииЕГАИСИспользующиеРегистр2(
	ТекстЗапроса,
	ИмяВременнойТаблицы,
	ИмяПоляОрганизация) Экспорт
	
	// ++ НЕ ГОСИС
	ТекстЗапроса = СтрШаблон(
		"ВЫБРАТЬ РАЗРЕШЕННЫЕ РАЗЛИЧНЫЕ
		|	ОрганизацииЕГАИС.Ссылка КАК %1
		|ПОМЕСТИТЬ %2
		|ИЗ
		|	РегистрСведений.НастройкиОбменаЕГАИС КАК НастройкиОбменаЕГАИС
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.КлассификаторОрганизацийЕГАИС КАК ОрганизацииЕГАИС
		|		ПО ОрганизацииЕГАИС.Код = НастройкиОбменаЕГАИС.ИдентификаторФСРАР
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.СтруктурныеЕдиницы КАК Склады
		|		ПО ОрганизацииЕГАИС.ТорговыйОбъект = Склады.Ссылка
		|ГДЕ
		|	Склады.ТипСтруктурнойЕдиницы = ЗНАЧЕНИЕ(Перечисление.ТипыСтруктурныхЕдиниц.Розница)
		|",
		ИмяПоляОрганизация,
		ИмяВременнойТаблицы);
	// -- НЕ ГОСИС
	Возврат;
	
КонецПроцедуры

Функция ТребуетсяОформлениеДокументовЕГАИС(Основание, МетаданныеДокументаЕГАИС) Экспорт
	
	Если ТипЗнч(Основание) = Тип("ДокументСсылка.ОтчетОРозничныхПродажах") Тогда
		
		Если МетаданныеДокументаЕГАИС = Метаданные.Документы.АктСписанияЕГАИС Тогда
			Возврат  ЕстьНеМаркируемаяАлкогольнаяПродукция(Основание, "Запасы");
		Иначе
			Возврат Ложь;
		КонецЕсли;
		
	ИначеЕсли ТипЗнч(Основание) = Тип("ДокументСсылка.СписаниеЗапасов") Тогда
		
		Если МетаданныеДокументаЕГАИС = Метаданные.Документы.АктСписанияЕГАИС Тогда
			Возврат ЕстьАлкогольнаяПродукция(Основание, "Запасы");
		Иначе
			Возврат Ложь;
		КонецЕсли;
		
	ИначеЕсли ТипЗнч(Основание) = Тип("ДокументСсылка.ОприходованиеЗапасов") Тогда
		
		Если МетаданныеДокументаЕГАИС = Метаданные.Документы.АктПостановкиНаБалансЕГАИС Тогда
			Возврат ЕстьАлкогольнаяПродукция(Основание, "Запасы");
		Иначе
			Возврат Ложь;
		КонецЕсли;
		
	ИначеЕсли ТипЗнч(Основание) = Тип("ДокументСсылка.РасходнаяНакладная") Тогда
		
		ВидОперации = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(Основание, "ВидОперации");
		
		Если МетаданныеДокументаЕГАИС = Метаданные.Документы.ТТНИсходящаяЕГАИС
			И (ВидОперации = Перечисления.ВидыОперацийРасходнаяНакладная.ВозвратПоставщику
			Или ВидОперации = Перечисления.ВидыОперацийРасходнаяНакладная.ПродажаПокупателю) Тогда
			Возврат ЕстьАлкогольнаяПродукция(Основание, "Запасы");
		Иначе
			Возврат Ложь;
		КонецЕсли;
		
	ИначеЕсли ТипЗнч(Основание) = Тип("ДокументСсылка.ПеремещениеЗапасов") Тогда
		
		Если МетаданныеДокументаЕГАИС = Метаданные.Документы.ТТНИсходящаяЕГАИС Тогда
			Возврат ЕстьАлкогольнаяПродукция(Основание, "Запасы");
		ИначеЕсли МетаданныеДокументаЕГАИС = Метаданные.Документы.ТТНВходящаяЕГАИС Тогда
			Возврат Ложь;
		Иначе
			Возврат Ложь;
		КонецЕсли;
		
	ИначеЕсли ТипЗнч(Основание) = Тип("ДокументСсылка.ПриходнаяНакладная") Тогда
		
		Возврат ЕстьАлкогольнаяПродукция(Основание, "Запасы");
		
	КонецЕсли;
	
	ТекстОшибки = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(НСтр("ru = 'Не реализован ввод %1 на основании %2 в процедуре ИнтеграцияЕГАИСБП.ТребуетсяОформлениеДокументовЕГАИС()'"), ТипЗнч(Основание), МетаданныеДокументаЕГАИС.ПолноеИмя());
	
	ВызватьИсключение ТекстОшибки;
	
КонецФункции

Функция ЕстьАлкогольнаяПродукция(ДокументСсылка, ИмяТабличнойЧасти, ИмяКолонки = "Номенклатура")
	
	Запрос = Новый Запрос(
	"ВЫБРАТЬ ПЕРВЫЕ 1
	|	ИСТИНА КАК Поле1
	|ИЗ
	|	" + ДокументСсылка.Метаданные().ПолноеИмя() + "." + ИмяТабличнойЧасти + " КАК ТабличнаяЧасть
	|ГДЕ
	|	ТабличнаяЧасть.Ссылка = &ДокументСсылка
	|	И    ТабличнаяЧасть." + ИмяКолонки + ".АлкогольнаяПродукция
	|");
	
	Запрос.УстановитьПараметр("ДокументСсылка", ДокументСсылка);
	
	Результат = Запрос.Выполнить();
	
	Возврат Не Результат.Пустой();
	
КонецФункции

Функция ЕстьНеМаркируемаяАлкогольнаяПродукция(ДокументСсылка, ИмяТабличнойЧасти = "Товары", ИмяКолонки = "Номенклатура")
	
	Запрос = Новый Запрос(
	"ВЫБРАТЬ ПЕРВЫЕ 1
	|	ИСТИНА КАК Поле1
	|ИЗ
	|	" + ДокументСсылка.Метаданные().ПолноеИмя() + "." + ИмяТабличнойЧасти + " КАК ТабличнаяЧасть
	|ГДЕ
	|	ТабличнаяЧасть.Ссылка = &ДокументСсылка
	|	И    ТабличнаяЧасть." + ИмяКолонки + ".АлкогольнаяПродукция
	|	И НЕ ТабличнаяЧасть." + ИмяКолонки + ".ВидАлкогольнойПродукции.Маркируемый
	|");
	
	Запрос.УстановитьПараметр("ДокументСсылка", ДокументСсылка);
	
	Результат = Запрос.Выполнить();
	
	Возврат Не Результат.Пустой();
	
КонецФункции

Функция ДанныеАлкогольнойПродукции(Номенклатура) Экспорт
	
	СтруктураРезультат = Новый Структура;
	СтруктураРезультат.Вставить("Маркируемый"                 , Ложь);
	СтруктураРезультат.Вставить("ПродаетсяВРозлив"            , Ложь);
	СтруктураРезультат.Вставить("ЭтоАлкогольнаяПродукция"     , Ложь);
	СтруктураРезультат.Вставить("ВидАлкогольнойПродукцииЕГАИС", Неопределено);
	СтруктураРезультат.Вставить("ЕдиницаИзмерения"            , Неопределено);
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	СправочникНоменклатура.ВидАлкогольнойПродукции КАК ВидАлкогольнойПродукцииЕГАИС,
	|	ЕСТЬNULL(СправочникНоменклатура.ВидАлкогольнойПродукции.Маркируемый, ЛОЖЬ)
	|		И НЕ СправочникНоменклатура.ПродаетсяВРозлив КАК Маркируемый,
	|	ЛОЖЬ КАК ПродаетсяВРозлив,
	|	ЕСТЬNULL(СправочникНоменклатура.АлкогольнаяПродукция, ЛОЖЬ) КАК ЭтоАлкогольнаяПродукция,
	|	СправочникНоменклатура.ЕдиницаИзмерения КАК ЕдиницаИзмерения
	|ИЗ
	|	Справочник.Номенклатура КАК СправочникНоменклатура
	|ГДЕ
	|	СправочникНоменклатура.Ссылка = &Номенклатура";
	Запрос.УстановитьПараметр("Номенклатура", Номенклатура);
	
	Выборка = Запрос.Выполнить().Выбрать();
	Если Выборка.Следующий() Тогда
		ЗаполнитьЗначенияСвойств(СтруктураРезультат, Выборка);
	КонецЕсли;
	
	Возврат СтруктураРезультат;
	
КонецФункции

Процедура ЗаполнитьАлкогольнуюПродукцию(ТекущаяСтрока) Экспорт
	
	Запрос = Новый Запрос(
	"ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	СоответствиеНоменклатурыЕГАИС.АлкогольнаяПродукция КАК АлкогольнаяПродукция,
	|	СоответствиеНоменклатурыЕГАИС.Номенклатура КАК Номенклатура
	|ИЗ
	|	РегистрСведений.СоответствиеНоменклатурыЕГАИС КАК СоответствиеНоменклатурыЕГАИС
	|ГДЕ
	|	СоответствиеНоменклатурыЕГАИС.Номенклатура = &Номенклатура
	|	И СоответствиеНоменклатурыЕГАИС.Характеристика = &Характеристика
	|	И (СоответствиеНоменклатурыЕГАИС.Серия = &Серия 
	|		ИЛИ &СерияЗаполнена = ЛОЖЬ)
	|");
	
	Запрос.УстановитьПараметр("Номенклатура",   ТекущаяСтрока.Номенклатура);
	Запрос.УстановитьПараметр("Характеристика", ТекущаяСтрока.Характеристика);
	Запрос.УстановитьПараметр("Серия",          ТекущаяСтрока.Серия);
	Запрос.УстановитьПараметр("СерияЗаполнена", ЗначениеЗаполнено(ТекущаяСтрока.Серия));
	
	УстановитьПривилегированныйРежим(Истина);
	Результат = Запрос.Выполнить();
	Выборка = Результат.Выбрать();
	КоличествоСопоставлено = Выборка.Количество();
	ТекущаяСтрока.НоменклатураДляВыбора.Очистить();
	
	Пока Выборка.Следующий() Цикл
		Если КоличествоСопоставлено = 1 Тогда
			ТекущаяСтрока.АлкогольнаяПродукция = Выборка.АлкогольнаяПродукция;
		КонецЕсли;
		ТекущаяСтрока.НоменклатураДляВыбора.Добавить(Выборка.АлкогольнаяПродукция);
	КонецЦикла;
	
	Если КоличествоСопоставлено = 0 Тогда
		ТекущаяСтрока.АлкогольнаяПродукция = Неопределено;
	КонецЕсли;
	Если КоличествоСопоставлено > 1 Тогда
		ТекущаяСтрока.СопоставлениеАлкогольнаяПродукция = СтрШаблон(НСтр("ru = '<Несколько позиций (%1)>'"), КоличествоСопоставлено);
	ИначеЕсли КоличествоСопоставлено = 1 Тогда
		ТекущаяСтрока.СопоставлениеАлкогольнаяПродукция = "";
	Иначе
		ТекущаяСтрока.СопоставлениеАлкогольнаяПродукция = НСтр("ru = '<Не сопоставлено>'");
	КонецЕсли;
	
КонецПроцедуры

Функция НоменклатураПоКлассификаторуЕГАИС(Номенклатура, Характеристика = Неопределено, ИдентификаторУпаковки = Неопределено) Экспорт

	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ ПЕРВЫЕ 1
		|	СоответствиеНоменклатурыЕГАИС.АлкогольнаяПродукция
		|ИЗ
		|	РегистрСведений.СоответствиеНоменклатурыЕГАИС КАК СоответствиеНоменклатурыЕГАИС
		|ГДЕ
		|	СоответствиеНоменклатурыЕГАИС.Номенклатура = &Номенклатура
		|	И (&Характеристика = НЕОПРЕДЕЛЕНО
		|			ИЛИ СоответствиеНоменклатурыЕГАИС.Характеристика = &Характеристика)
		|	И (&Упаковка = НЕОПРЕДЕЛЕНО
		|			ИЛИ СоответствиеНоменклатурыЕГАИС.ИдентификаторУпаковки = &ИдентификаторУпаковки)";
	
	Запрос.УстановитьПараметр("Номенклатура", Номенклатура);
	Запрос.УстановитьПараметр("Характеристика", Характеристика);
	Запрос.УстановитьПараметр("ИдентификаторУпаковки", ИдентификаторУпаковки);
	
	Выборка = Запрос.Выполнить().Выбрать();
	Если Выборка.Следующий() Тогда
		Возврат Выборка.АлкогольнаяПродукция;
	Иначе
		Возврат Неопределено;
	КонецЕсли;
	
КонецФункции

Функция ОрганизацияЕГАИСИзНастроек(Организация, ТорговаяТочка = Неопределено) Экспорт

	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	КлассификаторОрганизацийЕГАИС.Ссылка КАК ОрганизацияЕГАИС
	|ИЗ
	|	Справочник.КлассификаторОрганизацийЕГАИС КАК КлассификаторОрганизацийЕГАИС
	|ГДЕ
	|	КлассификаторОрганизацийЕГАИС.Контрагент = &Организация
	|	И КлассификаторОрганизацийЕГАИС.ТорговыйОбъект = &ТорговаяТочка";
	
	Запрос.УстановитьПараметр("Организация", Организация);
	
	Если ТорговаяТочка = Неопределено Тогда
		Запрос.Текст = СтрЗаменить(Запрос.Текст, "КлассификаторОрганизацийЕГАИС.ТорговыйОбъект = &ТорговаяТочка", "ИСТИНА");
	Иначе
		Запрос.УстановитьПараметр("ТорговаяТочка", ТорговаяТочка);
	КонецЕсли;
	
	Выборка = Запрос.Выполнить().Выбрать();
	Если Выборка.Следующий() Тогда
		Возврат Выборка.ОрганизацияЕГАИС;
	Иначе
		Возврат Неопределено;
	КонецЕсли;

КонецФункции

#Область СлужебныеПроцедурыИФункции

// Функция проверяет наличие расхождений между ТТН и товарами накладной.
//
// Параметры:
//  ТоварноТранспортнаяНакладнаяЕГАИС - ДокументСсылка.ТТНВходящаяЕГАИС - проверяемая ТТН,
//  ДокументСсылка - ДокументСсылка.ПриходнаяНакладная - проверяемое поступление товаров.
//
// Возвращаемое значение:
//  Булево - Истина, если есть расхождения, иначе - Ложь.
//
Функция ЕстьРасхожденияМеждуДокументомПоступлениеТоваровИТТНЕГАИС(ТоварноТранспортнаяНакладнаяЕГАИС, ДокументСсылка) Экспорт
	
	УстановитьПривилегированныйРежим(Истина);
	
	Запрос = Новый Запрос(
	"ВЫБРАТЬ
	|	ТабличнаяЧасть.АлкогольнаяПродукция КАК АлкогольнаяПродукция,
	|	СУММА(ТабличнаяЧасть.Количество) КАК Количество
	|ПОМЕСТИТЬ ВтТоварыТТН
	|ИЗ
	|	Документ.ТТНВходящаяЕГАИС.Товары КАК ТабличнаяЧасть
	|ГДЕ
	|	ТабличнаяЧасть.Ссылка = &ТТНСсылка
	|
	|СГРУППИРОВАТЬ ПО
	|	ТабличнаяЧасть.АлкогольнаяПродукция
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ЕСТЬNULL(Сопоставлено.АлкогольнаяПродукция, ЗНАЧЕНИЕ(Справочник.КлассификаторАлкогольнойПродукцииЕГАИС.ПустаяСсылка)) КАК АлкогольнаяПродукция,
	|	СУММА(ТабличнаяЧасть.Количество * ВЫБОР
	|			КОГДА Сопоставлено.АлкогольнаяПродукция.ТипПродукции = ЗНАЧЕНИЕ(Перечисление.ТипыПродукцииЕГАИС.Неупакованная)
	|				ТОГДА ТабличнаяЧасть.Номенклатура.ОбъемДАЛ
	|			ИНАЧЕ ВЫРАЗИТЬ(1 КАК ЧИСЛО(17, 0))
	|		КОНЕЦ) КАК Количество
	|ПОМЕСТИТЬ ВтТоварыПоступления
	|ИЗ
	|	Документ.ПриходнаяНакладная.Запасы КАК ТабличнаяЧасть
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.СоответствиеНоменклатурыЕГАИС КАК Сопоставлено
	|		ПО ТабличнаяЧасть.Номенклатура = Сопоставлено.Номенклатура
	|			И ТабличнаяЧасть.Характеристика = Сопоставлено.Характеристика
	|ГДЕ
	|	ТабличнаяЧасть.Ссылка = &ПоступлениеТоваров
	|	И ТабличнаяЧасть.Номенклатура.АлкогольнаяПродукция
	|
	|СГРУППИРОВАТЬ ПО
	|	ЕСТЬNULL(Сопоставлено.АлкогольнаяПродукция, ЗНАЧЕНИЕ(Справочник.КлассификаторАлкогольнойПродукцииЕГАИС.ПустаяСсылка))
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВтТоварыТТН.АлкогольнаяПродукция КАК АлкогольнаяПродукция,
	|	ВтТоварыПоступления.Количество КАК Количество
	|ИЗ
	|	ВтТоварыПоступления КАК ВтТоварыПоступления
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВтТоварыТТН КАК ВтТоварыТТН
	|		ПО ВтТоварыПоступления.АлкогольнаяПродукция = ВтТоварыТТН.АлкогольнаяПродукция
	|ГДЕ
	|	(ВтТоварыПоступления.Количество > ЕСТЬNULL(ВтТоварыТТН.Количество, 0)
	|			ИЛИ ВтТоварыТТН.АлкогольнаяПродукция = ЗНАЧЕНИЕ(Справочник.КлассификаторАлкогольнойПродукцииЕГАИС.ПустаяСсылка))");
	
	Запрос.УстановитьПараметр("ТТНСсылка",          ТоварноТранспортнаяНакладнаяЕГАИС);
	Запрос.УстановитьПараметр("ПоступлениеТоваров", ДокументСсылка);
	
	РезультатЗапроса = Запрос.Выполнить();
	
	Возврат Не РезультатЗапроса.Пустой();
	
КонецФункции

// Функция проверяет наличие расхождений между ТТН и товарами перемещения.
//
// Параметры:
//  ТоварноТранспортнаяНакладнаяЕГАИС - ДокументСсылка.ТТНВходящаяЕГАИС - проверяемая ТТН,
//  ДокументСсылка - ДокументСсылка.ПеремещениеЗапасов - проверяемое поступление товаров.
//
// Возвращаемое значение:
//  Булево - Истина, если есть расхождения, иначе - Ложь.
//
Функция ЕстьРасхожденияМеждуДокументомПеремещениеТоваровИТТНЕГАИС(ТоварноТранспортнаяНакладнаяЕГАИС, ДокументСсылка) Экспорт
	
	УстановитьПривилегированныйРежим(Истина);
	
	Запрос = Новый Запрос(
	"ВЫБРАТЬ
	|	ТабличнаяЧасть.АлкогольнаяПродукция КАК АлкогольнаяПродукция,
	|	СУММА(ТабличнаяЧасть.Количество) КАК Количество
	|ПОМЕСТИТЬ ВтТоварыТТН
	|ИЗ
	|	Документ.ТТНВходящаяЕГАИС.Товары КАК ТабличнаяЧасть
	|ГДЕ
	|	ТабличнаяЧасть.Ссылка = &ТТНСсылка
	|
	|СГРУППИРОВАТЬ ПО
	|	ТабличнаяЧасть.АлкогольнаяПродукция
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ЕСТЬNULL(Сопоставлено.АлкогольнаяПродукция, ЗНАЧЕНИЕ(Справочник.КлассификаторАлкогольнойПродукцииЕГАИС.ПустаяСсылка)) КАК АлкогольнаяПродукция,
	|	СУММА(ТабличнаяЧасть.Количество * ВЫБОР
	|			КОГДА Сопоставлено.АлкогольнаяПродукция.ТипПродукции = ЗНАЧЕНИЕ(Перечисление.ТипыПродукцииЕГАИС.Неупакованная)
	|				ТОГДА ТабличнаяЧасть.Номенклатура.ОбъемДАЛ
	|			ИНАЧЕ 1
	|		КОНЕЦ) КАК Количество
	|ПОМЕСТИТЬ ВтТоварыПеремещения
	|ИЗ
	|	Документ.ПеремещениеЗапасов.Запасы КАК ТабличнаяЧасть
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.СоответствиеНоменклатурыЕГАИС КАК Сопоставлено
	|		ПО ТабличнаяЧасть.Номенклатура = Сопоставлено.Номенклатура
	|			И ТабличнаяЧасть.Характеристика = Сопоставлено.Характеристика
	|ГДЕ
	|	ТабличнаяЧасть.Ссылка = &ПеремещениеТоваров
	|	И ТабличнаяЧасть.Номенклатура.АлкогольнаяПродукция
	|
	|СГРУППИРОВАТЬ ПО
	|	ЕСТЬNULL(Сопоставлено.АлкогольнаяПродукция, ЗНАЧЕНИЕ(Справочник.КлассификаторАлкогольнойПродукцииЕГАИС.ПустаяСсылка))
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВтТоварыТТН.АлкогольнаяПродукция КАК АлкогольнаяПродукция,
	|	ВтТоварыПеремещения.Количество КАК Количество
	|ИЗ
	|	ВтТоварыПеремещения КАК ВтТоварыПеремещения
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВтТоварыТТН КАК ВтТоварыТТН
	|		ПО ВтТоварыПеремещения.АлкогольнаяПродукция = ВтТоварыТТН.АлкогольнаяПродукция
	|ГДЕ
	|	(ВтТоварыПеремещения.Количество > ЕСТЬNULL(ВтТоварыТТН.Количество, 0)
	|			ИЛИ ВтТоварыТТН.АлкогольнаяПродукция = ЗНАЧЕНИЕ(Справочник.КлассификаторАлкогольнойПродукцииЕГАИС.ПустаяСсылка))");
	
	Запрос.УстановитьПараметр("ТТНСсылка",          ТоварноТранспортнаяНакладнаяЕГАИС);
	Запрос.УстановитьПараметр("ПеремещениеТоваров", ДокументСсылка);
	
	РезультатЗапроса = Запрос.Выполнить();
	
	Возврат Не РезультатЗапроса.Пустой();
	
КонецФункции

// Проверяет есть ли в таблице товары алкогольная продукция ЕГАИС по реквизиту НеобходимостьВводаАкцизнойМарки
Функция ЕстьАлкогольнаяПродукцияЕГАИС(ТаблицаТовары) Экспорт
	
	Для Каждого Стр Из ТаблицаТовары Цикл
		Если Стр.НеобходимостьВводаАкцизнойМарки Тогда
			Возврат Истина;
		КонецЕсли;
	КонецЦикла;
	
	Возврат Ложь;
	
КонецФункции

#КонецОбласти

#Область ОбновлениеИнформационнойБазы

Процедура ЗаполнитьНовыеРеквизитыТТНИсходящаяЕГАИС(Параметры) Экспорт
	Запрос = Новый Запрос;
	
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	ТТНИсходящаяЕГАИСТовары.Ссылка КАК Ссылка,
	|	МАКСИМУМ(ТТНИсходящаяЕГАИСТовары.Количество <> ТТНИсходящаяЕГАИСТовары.КоличествоФакт) КАК ЕстьРасхождения
	|ПОМЕСТИТЬ ВТ_ДокументыКОбработке
	|ИЗ
	|	Документ.ТТНИсходящаяЕГАИС.Товары КАК ТТНИсходящаяЕГАИСТовары
	|
	|СГРУППИРОВАТЬ ПО
	|	ТТНИсходящаяЕГАИСТовары.Ссылка
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ ПЕРВЫЕ 1000
	|	ТТНИсходящаяЕГАИС.Ссылка КАК Ссылка,
	|	ВТ_ДокументыКОбработке.ЕстьРасхождения КАК ЕстьРасхождения
	|ИЗ
	|	ВТ_ДокументыКОбработке КАК ВТ_ДокументыКОбработке
	|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.ТТНИсходящаяЕГАИС КАК ТТНИсходящаяЕГАИС
	|		ПО ВТ_ДокументыКОбработке.Ссылка = ТТНИсходящаяЕГАИС.Ссылка
	|ГДЕ
	|	ВТ_ДокументыКОбработке.ЕстьРасхождения <> ТТНИсходящаяЕГАИС.ЕстьРасхождения";
	
	РезультатЗапроса = Запрос.Выполнить().Выгрузить();
	Если РезультатЗапроса.Количество() = 0 Тогда
		Параметры.ОбработкаЗавершена = Истина;
		Возврат;
	КонецЕсли;
	
	Параметры.ОбработкаЗавершена = Ложь;
	
	ПроблемныхОбъектов = 0;
	ОбъектовОбработано = 0;
	
	Для каждого СтрокаРезультата Из РезультатЗапроса Цикл
		
		НачатьТранзакцию();
		
		Попытка
			Блокировка = Новый БлокировкаДанных;
			ЭлементБлокировки = Блокировка.Добавить("Документ.ТТНИсходящаяЕГАИС");
			ЭлементБлокировки.УстановитьЗначение("Ссылка", СтрокаРезультата.Ссылка);
			Блокировка.Заблокировать();
			
			
			ДокументОбъект = СтрокаРезультата.Ссылка.ПолучитьОбъект();
			Если ДокументОбъект = Неопределено Тогда
				ЗафиксироватьТранзакцию();
				Продолжить;
			КонецЕсли;
			
			
			ДокументОбъект.ЕстьРасхождения = СтрокаРезультата.ЕстьРасхождения;
			ОбновлениеИнформационнойБазы.ЗаписатьОбъект(ДокументОбъект);
				
			ОбъектовОбработано = ОбъектовОбработано + 1;
			
			ЗафиксироватьТранзакцию();
		Исключение
			ОтменитьТранзакцию();
			ПодробноеПредставлениеОшибки = ОбработкаОшибок.ПодробноеПредставлениеОшибки(ИнформацияОбОшибке());
			ТекстСообщения = СтрШаблон(
				НСтр("ru = 'Не удалось обработать документ: %1 по причине:
					 |%2'"), СтрокаРезультата.Ссылка, ПодробноеПредставлениеОшибки);
			ЗаписьЖурналаРегистрации(ОбновлениеИнформационнойБазы.СобытиеЖурналаРегистрации(), 
				УровеньЖурналаРегистрации.Предупреждение,
				СтрокаРезультата.Ссылка.Метаданные(), СтрокаРезультата.Ссылка, ТекстСообщения);
			// Если не удалось обработать какой-либо объект, повторяем попытку снова.
			ПроблемныхОбъектов = ПроблемныхОбъектов + 1;
		КонецПопытки; 
	КонецЦикла; 
	
	Если ОбъектовОбработано = 0 Тогда
		ТекстСообщения = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
			НСтр("ru = 'Процедуре ЗаполнитьНовыеРеквизитыДокументовЕГАИС
				|не удалось обработать некоторые документы (пропущены): %1'"),
				ПроблемныхОбъектов);
		ВызватьИсключение ТекстСообщения;
	Иначе
		ЗаписьЖурналаРегистрации(ОбновлениеИнформационнойБазы.СобытиеЖурналаРегистрации(),
			УровеньЖурналаРегистрации.Информация,
			Метаданные.Документы.ТТНИсходящаяЕГАИС,,
			СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
				НСтр("ru = 'Процедура ЗаполнитьНовыеРеквизитыДокументовЕГАИС
					|обработала очередную порцию документов: %1'"), ОбъектовОбработано));
	КонецЕсли;
КонецПроцедуры

Процедура ЗаполнитьНоменклатуруЕГАИС(Параметры) Экспорт
	
	Параметры.ОбработкаЗавершена = Истина;
	
КонецПроцедуры

Процедура ПеренестиДанныеОрганизацияСкладЕГАИС() Экспорт
	Запрос = Новый Запрос;
	
	МассивОрганизаций = Новый Массив;
	МассивОрганизаций.Добавить(Справочники.Организации.ПустаяСсылка());
	МассивОрганизаций.Добавить(Справочники.Контрагенты.ПустаяСсылка());
	МассивОрганизаций.Добавить(Неопределено);
	
	Запрос.УстановитьПараметр("ПустоеЗначениеОрганизации", МассивОрганизаций);
	
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	КлассификаторОрганизацийЕГАИС.Ссылка КАК Ссылка,
	|	ИСТИНА КАК СоответствуетОрганизации,
	|	НастройкиОбменаЕГАИС.УдалитьОрганизация КАК Контрагент,
	|	НастройкиОбменаЕГАИС.УдалитьТорговаяТочка КАК ТорговыйОбъект
	|ИЗ
	|	РегистрСведений.НастройкиОбменаЕГАИС КАК НастройкиОбменаЕГАИС
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.КлассификаторОрганизацийЕГАИС КАК КлассификаторОрганизацийЕГАИС
	|		ПО НастройкиОбменаЕГАИС.ИдентификаторФСРАР = КлассификаторОрганизацийЕГАИС.Код
	|ГДЕ
	|	КлассификаторОрганизацийЕГАИС.Контрагент В(&ПустоеЗначениеОрганизации)
	|	И КлассификаторОрганизацийЕГАИС.ТорговыйОбъект = ЗНАЧЕНИЕ(Справочник.СтруктурныеЕдиницы.ПустаяСсылка)";
	
	ВыборкаИзРезультата = Запрос.Выполнить().Выбрать();
	
	МетаданныеОбъекта = Метаданные.Справочники.КлассификаторОрганизацийЕГАИС;
	
	Пока ВыборкаИзРезультата.Следующий() Цикл
		СправочникОбъект = ВыборкаИзРезультата.Ссылка.ПолучитьОбъект();
		
		Если СправочникОбъект = Неопределено Тогда
			Продолжить;
		КонецЕсли;
		
		ЗаполнитьЗначенияСвойств(СправочникОбъект, ВыборкаИзРезультата, , "Ссылка");
		
		Попытка
			ОбновлениеИнформационнойБазы.ЗаписатьДанные(СправочникОбъект);
		Исключение
			ПодробноеПредставлениеОшибки = ОбработкаОшибок.ПодробноеПредставлениеОшибки(ИнформацияОбОшибке());
			ТекстСообщения = СтрШаблон(
				НСтр("ru = 'Не удалось обработать элемент справочника: %1 по причине:
					 |%2'"), ВыборкаИзРезультата.Ссылка, ПодробноеПредставлениеОшибки);
			ЗаписьЖурналаРегистрации(ОбновлениеИнформационнойБазы.СобытиеЖурналаРегистрации(),
				УровеньЖурналаРегистрации.Предупреждение, МетаданныеОбъекта, ВыборкаИзРезультата.Ссылка, ТекстСообщения);
		КонецПопытки; 
	КонецЦикла; 
КонецПроцедуры

Процедура УстановитьКонстантыЕГАИС() Экспорт
	МенеджерЗначения = Константы.ДатаНачалаРегистрацииРозничныхПродажВЕГАИС.СоздатьМенеджерЗначения();
	МенеджерЗначения.Значение = Дата(2018,1,1);
	ОбновлениеИнформационнойБазы.ЗаписатьДанные(МенеджерЗначения);
	
	МенеджерЗначения = Константы.ДатаНачалаРегистрацииРозничныхПродажВЕГАИСВСельскойМестности.СоздатьМенеджерЗначения();
	МенеджерЗначения.Значение = Дата(2018,1,1);
	ОбновлениеИнформационнойБазы.ЗаписатьДанные(МенеджерЗначения);
КонецПроцедуры

Процедура ОбработатьРеквизитыТоваровТТНИсходящаяЕГАИС(Параметры) Экспорт
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ РАЗЛИЧНЫЕ ПЕРВЫЕ 1000
	|	ТТНИсходящаяЕГАИСТовары.Ссылка КАК Ссылка
	|ИЗ
	|	Документ.ТТНИсходящаяЕГАИС.Товары КАК ТТНИсходящаяЕГАИСТовары
	|ГДЕ
	|	ТТНИсходящаяЕГАИСТовары.КоличествоУпаковок = 0";
	
	РезультатЗапроса = Запрос.Выполнить().Выгрузить();
	Если РезультатЗапроса.Количество() = 0 Тогда
		Параметры.ОбработкаЗавершена = Истина;
		Возврат;
	КонецЕсли;
	
	Параметры.ОбработкаЗавершена = Ложь;
	
	ПроблемныхОбъектов = 0;
	ОбъектовОбработано = 0;
	
	Для каждого СтрокаРезультата Из РезультатЗапроса Цикл
		
		НачатьТранзакцию();
		
		Попытка
			Блокировка = Новый БлокировкаДанных;
			ЭлементБлокировки = Блокировка.Добавить("Документ.ТТНИсходящаяЕГАИС");
			ЭлементБлокировки.УстановитьЗначение("Ссылка", СтрокаРезультата.Ссылка);
			Блокировка.Заблокировать();
			
			
			ДокументОбъект = СтрокаРезультата.Ссылка.ПолучитьОбъект();
			Если ДокументОбъект = Неопределено Тогда
				ЗафиксироватьТранзакцию();
				Продолжить;
			КонецЕсли;
			
			Для каждого СтрокаТаблицы Из ДокументОбъект.Товары Цикл
				
				Если СтрокаТаблицы.КоличествоУпаковок = 0 Тогда
					СтрокаТаблицы.КоличествоУпаковок = СтрокаТаблицы.Количество;
				КонецЕсли;
				
			КонецЦикла;
			
			ОбновлениеИнформационнойБазы.ЗаписатьОбъект(ДокументОбъект);
				
			ОбъектовОбработано = ОбъектовОбработано + 1;
			
			ЗафиксироватьТранзакцию();
		Исключение
			ОтменитьТранзакцию();
			ПодробноеПредставлениеОшибки = ОбработкаОшибок.ПодробноеПредставлениеОшибки(ИнформацияОбОшибке());
			ТекстСообщения = СтрШаблон(
				НСтр("ru = 'Не удалось обработать документ: %1 по причине:
					 |%2'"), СтрокаРезультата.Ссылка, ПодробноеПредставлениеОшибки);
			ЗаписьЖурналаРегистрации(ОбновлениеИнформационнойБазы.СобытиеЖурналаРегистрации(),
				УровеньЖурналаРегистрации.Предупреждение, СтрокаРезультата.Ссылка.Метаданные(),
				СтрокаРезультата.Ссылка, ТекстСообщения);
			// Если не удалось обработать какой-либо объект, повторяем попытку снова.
			ПроблемныхОбъектов = ПроблемныхОбъектов + 1;
		КонецПопытки; 
	КонецЦикла; 
	
	Если ОбъектовОбработано = 0 Тогда
		ТекстСообщения = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
			НСтр("ru = 'Процедуре ОбработатьРеквизитыТоваровТТНИсходящаяЕГАИС
				|не удалось обработать некоторые документы (пропущены): %1'"),
				ПроблемныхОбъектов);
		ВызватьИсключение ТекстСообщения;
	Иначе
		ЗаписьЖурналаРегистрации(ОбновлениеИнформационнойБазы.СобытиеЖурналаРегистрации(),
			УровеньЖурналаРегистрации.Информация,
			Метаданные.Документы.ТТНИсходящаяЕГАИС,,
			СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
				НСтр("ru = 'Процедура ОбработатьРеквизитыТоваровТТНИсходящаяЕГАИС
					|обработала очередную порцию документов: %1'"), ОбъектовОбработано));
	КонецЕсли;
КонецПроцедуры

Процедура ДозаполнитьСоответствиеНоменклатурыЕГАИС(Параметры) Экспорт
	
КонецПроцедуры

#КонецОбласти

