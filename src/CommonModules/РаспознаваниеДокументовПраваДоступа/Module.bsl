#Область СлужебныйПрограммныйИнтерфейс

// Заполнить справочники без прав на создание.
// 
// Параметры:
//  СправочникиБезПравНаСоздание - СписокЗначений Из Строка - Справочники без прав на создание
//  ГрупповаяОбработка - Булево - Групповая обработка
Процедура ЗаполнитьСправочникиБезПравНаСоздание(СправочникиБезПравНаСоздание, ГрупповаяОбработка = Ложь) Экспорт
	
	ПроверяемыеЭлементы = Новый Структура;
	
	Если ГрупповаяОбработка Тогда
		ПроверяемыеЭлементы.Вставить("Контрагент", Метаданные.ОпределяемыеТипы.КонтрагентБРД);
		ПроверяемыеЭлементы.Вставить("Договор", Метаданные.ОпределяемыеТипы.ДоговорыБРД);
		ПроверяемыеЭлементы.Вставить("Номенклатура", Метаданные.ОпределяемыеТипы.НоменклатураБРД);
		ПроверяемыеЭлементы.Вставить("БанковскийСчет", Метаданные.ОпределяемыеТипы.БанковскиеСчетаБРД); 
	Иначе
		ПроверяемыеЭлементы.Вставить("Продавец", Метаданные.ОпределяемыеТипы.КонтрагентБРД);
		ПроверяемыеЭлементы.Вставить("Покупатель", Метаданные.ОпределяемыеТипы.КонтрагентБРД);
		ПроверяемыеЭлементы.Вставить("БанковскийСчетОрганизации", Метаданные.ОпределяемыеТипы.БанковскиеСчетаБРД);
		ПроверяемыеЭлементы.Вставить("БанковскийСчетКонтрагента", Метаданные.ОпределяемыеТипы.БанковскиеСчетаБРД);
		ПроверяемыеЭлементы.Вставить("Договор", Метаданные.ОпределяемыеТипы.ДоговорыБРД);
		ПроверяемыеЭлементы.Вставить("Номенклатура", Метаданные.ОпределяемыеТипы.НоменклатураБРД);
		ПроверяемыеЭлементы.Вставить("Характеристика", Метаданные.ОпределяемыеТипы.ХарактеристикаНоменклатурыБРД);
	КонецЕсли;
	
	Для Каждого ПроверяемыйЭлемент Из ПроверяемыеЭлементы Цикл
		
		Тип = ПроверяемыйЭлемент.Значение.Тип.Типы()[0];
		
		ПустаяСсылка = Новый(Тип);
		ИмяСправочника = ПустаяСсылка.Метаданные().Имя;
		
		Если Не ПравоДоступа("Добавление", Метаданные.Справочники[ИмяСправочника]) Тогда
			СправочникиБезПравНаСоздание.Добавить(ПроверяемыйЭлемент.Ключ);
		КонецЕсли;
		
	КонецЦикла;
	
	РаспознаваниеДокументовПереопределяемый.ЗаполнитьСправочникиБезПравНаСоздание(СправочникиБезПравНаСоздание);
	
КонецПроцедуры

Функция ЕстьПравоСозданияДокументаИзРаспознанного(Направление, ТипРаспознанногоДокумента) Экспорт
	
	Если ТипРаспознанногоДокумента = Перечисления.ТипыДокументовРаспознаваниеДокументов.ТОРГ12
		Или ТипРаспознанногоДокумента = Перечисления.ТипыДокументовРаспознаваниеДокументов.АктОбОказанииУслуг
		Или ТипРаспознанногоДокумента = Перечисления.ТипыДокументовРаспознаваниеДокументов.УПД
		Или ТипРаспознанногоДокумента = Перечисления.ТипыДокументовРаспознаваниеДокументов.СчетФактура Тогда
		
		Если Направление = Перечисления.НаправленияРаспознанногоДокумента.Входящий Тогда   
			ИмяТипа = "ПоступлениеТоваровУслугБРД"; 
		Иначе
			ИмяТипа = "РеализацияТоваровУслугБРД"; 
		КонецЕсли;
		
	ИначеЕсли ТипРаспознанногоДокумента = Перечисления.ТипыДокументовРаспознаваниеДокументов.СчетНаОплату Тогда
		
		Если Направление = Перечисления.НаправленияРаспознанногоДокумента.Входящий Тогда
			ИмяТипа = "СчетНаОплатуПоставщикаБРД"; 
		Иначе
			ИмяТипа = "СчетНаОплатуПокупателюБРД"; 
		КонецЕсли;
		
	КонецЕсли;
	
	ТипСоздаваемого = Метаданные.ОпределяемыеТипы[ИмяТипа].Тип.Типы()[0];
	
	ПустаяСсылка = Новый(ТипСоздаваемого);
	ИмяДокумента = ПустаяСсылка.Метаданные().Имя;
	
	Возврат ПравоДоступа("Добавление", Метаданные.Документы[ИмяДокумента]);
	
КонецФункции

#КонецОбласти