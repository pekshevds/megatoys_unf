#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	Перем ПредставлениеПоля, ПолеИзФайла;

	Если Параметры.Свойство("ПредставлениеПоля", ПредставлениеПоля) Тогда

		ЗаголовокФормы = НСтр("ru = 'Выберите поле для загрузки'");
		Заголовок = ЗаголовокФормы;

		Если ЗначениеЗаполнено(Параметры.ПолеИзФайла) Тогда

			ПолеИзФайла = Параметры.ПолеИзФайла;

		Иначе

			ПолеИзФайла = НСтр("ru = '<заголовок не указан>'");

		КонецЕсли;

		ИзКолонкиВФайле = ПолеИзФайла;

		ИмяОбъекта = Параметры.НастройкиЗагрузкиДанных.ПолноеИмяОбъектаЗаполнения;
		ПолучитьСклоненияСтроки(ИмяОбъекта, "");

		ИмяПоляЗагрузки = Параметры.ПредставлениеПоля;
		ПредставлениеПоляЗаполнено = (Параметры.ПредставлениеПоля <> НСтр("ru='Не загружать'"));
		Если Не ПредставлениеПоляЗаполнено Тогда

			ИмяПоляЗагрузки = НСтр("ru = '<выберите поле в дереве ниже>'");

		КонецЕсли;

		ВВыбранноеПоле = ИмяПоляЗагрузки;
		
		ИмяПоляИзФайла = ?(ЗначениеЗаполнено(СокрЛП(Параметры.ПолеИзФайла)), СокрЛП(Параметры.ПолеИзФайла), СокрЛП(
			ИмяПоляЗагрузки));

	Иначе

		ВызватьИсключение НСтр("ru ='Открытие обработки без контекста запрещено.'");

	КонецЕсли;

	КэшЗначений = Новый Структура;
	КэшЗначений.Вставить("ИмяПоляДополнительныхРеквизитов",
		ЗагрузкаДанныхИзВнешнегоИсточника.ИмяПоляДобавленияДополнительныхРеквизитов());
	КэшЗначений.Вставить("НомерКолонки", Параметры.НомерКолонки);
	КэшЗначений.Вставить("ИмяГруппыДополнительныхРеквизитов",
		ЗагрузкаДанныхИзВнешнегоИсточника.ИмяПоляДобавленияДополнительныхРеквизитов());
	КэшЗначений.Вставить("ЗаголовокКолонки", СокрЛП(ИмяПоляЗагрузки));
	КэшЗначений.Вставить("ИмяГруппыДополнительныхРеквизитовНоменклатуры",
		ЗагрузкаДанныхИзВнешнегоИсточника.ИмяПоляДобавленияДополнительныхРеквизитовНоменклатуры());
	КэшЗначений.Вставить("ИмяГруппыДополнительныхРеквизитовХарактеристик",
		ЗагрузкаДанныхИзВнешнегоИсточника.ИмяПоляДобавленияДополнительныхРеквизитовХарактеристик());
	КэшЗначений.Вставить("ИмяПоляИзФайла", ИмяПоляИзФайла);

	ДеревоПолей = ПолучитьИзВременногоХранилища(Параметры.НастройкиЗагрузкиДанных.АдресХраненияДереваПолей);
	ЗаполнитьДеревоПолейЗагрузки(ДеревоПолей);

	ЗаполнитьДеревоДополнительныхРеквизитов();

	КонстантаДопРеквизитНоменклатура = УправлениеСвойствами.НаборСвойствПоИмени("Справочник_Номенклатура");
	
	КонстантаДопРеквизитХарактеристики = УправлениеСвойствами.НаборСвойствПоИмени(
		"Справочник_ХарактеристикиНоменклатуры");

КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	УстановитьКнопкуПоУмолчанию();
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовФормы

&НаКлиенте
Процедура УстановитьКнопкуПоУмолчанию()
	
	Если Элементы.Страницы.ТекущаяСтраница = Элементы.СтраницаПоля Тогда
		Элементы.ДеревоПолейЗагрузкиВыбрать.КнопкаПоУмолчанию = Истина;
	КонецЕсли;
	
	Если Элементы.Страницы.ТекущаяСтраница = Элементы.СтраницаДополнительныеРеквизиты Тогда
		Элементы.ДополнительныеРеквизитыВыбрать.КнопкаПоУмолчанию = Истина;
	КонецЕсли;
	
	Если Элементы.Страницы.ТекущаяСтраница = Элементы.СтраницаДополнительныеРеквизитыНоменклатура Тогда
		Элементы.ДополнительныеРеквизитыНоменклатураВыбрать.КнопкаПоУмолчанию = Истина;
	КонецЕсли;
	
	Если Элементы.Страницы.ТекущаяСтраница = Элементы.СтраницаДополнительныеРеквизитыХарактеристики Тогда
		Элементы.ДополнительныеРеквизитыХарактеристикиВыбрать.КнопкаПоУмолчанию = Истина;
	КонецЕсли;
	
КонецПроцедуры


#КонецОбласти

#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура Выбрать(Команда)

	Если Элементы.Страницы.ТекущаяСтраница = Элементы.СтраницаПоля Тогда

		ОбработатьВыборПоляЗагрузки(Неопределено, Элементы.ДеревоПолейЗагрузки.ТекущаяСтрока, Неопределено, Ложь);

	КонецЕсли;

	Если Элементы.Страницы.ТекущаяСтраница = Элементы.СтраницаДополнительныеРеквизиты Тогда

		ОбработатьВыборДополнительногоПоляЗагрузки("ДополнительныеРеквизиты",
			Элементы.ДополнительныеРеквизиты.ТекущаяСтрока, Истина);

	КонецЕсли;

	Если Элементы.Страницы.ТекущаяСтраница = Элементы.СтраницаДополнительныеРеквизитыНоменклатура Тогда

		ОбработатьВыборДополнительногоПоляЗагрузки("ДополнительныеРеквизитыНоменклатура",
			Элементы.ДополнительныеРеквизитыНоменклатура.ТекущаяСтрока, Истина);

	КонецЕсли;

	Если Элементы.Страницы.ТекущаяСтраница = Элементы.СтраницаДополнительныеРеквизитыХарактеристики Тогда

		ОбработатьВыборДополнительногоПоляЗагрузки("ДополнительныеРеквизитыХарактеристики",
			Элементы.ДополнительныеРеквизитыХарактеристики.ТекущаяСтрока, Истина);

	КонецЕсли;

КонецПроцедуры

&НаКлиенте
Процедура НазадКСпискуРеквизитов(Команда)
	
	Элементы.Страницы.ТекущаяСтраница = Элементы.СтраницаПоля;
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаКлиенте
Процедура ОбработатьВыборПоляЗагрузки(Элемент, ВыбраннаяСтрока, Поле, СтандартнаяОбработка)
	
	Отказ					= Ложь;
	СтандартнаяОбработка	= Ложь;
	ДополнительныйРеквизит	= Неопределено;

	Поле = ДеревоПолейЗагрузки.НайтиПоИдентификатору(ВыбраннаяСтрока);

	ОбработкаГруппыПолей(Поле, Отказ);
	ОбработкаПоляДополнительныхРеквизитов(Поле, ДополнительныйРеквизит, Отказ);

	Если Не Отказ Тогда

		ЗапомнитьВыборИЗакрытьФорму(Поле, ДополнительныйРеквизит);

	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ОбработатьВыборДополнительногоПоляЗагрузки(ИмяТаблицы, ВыбраннаяСтрока, СтандартнаяОбработка);
	
	СтандартнаяОбработка = Ложь;
	СтрокаДопРеквизита = ЭтотОбъект[ИмяТаблицы].НайтиПоИдентификатору(ВыбраннаяСтрока);
	ОбработатьВыборДополнительногоРеквизита(СтрокаДопРеквизита);
	
КонецПроцедуры

&НаКлиенте
Процедура ОбработкаГруппыПолей(Поле, Отказ)

	Если Не ПустаяСтрока(Поле.ИмяГруппыПолей) Тогда

		Отказ = Истина;

	КонецЕсли;

КонецПроцедуры

&НаКлиенте
Процедура ОбработкаПоляДополнительныхРеквизитов(Поле, ДополнительныйРеквизит, Отказ)

	Если Параметры.НастройкиЗагрузкиДанных.Свойство("ОписаниеДополнительныхРеквизитов") Тогда

		Для Каждого ОписаниеДопРеквизита Из Параметры.НастройкиЗагрузкиДанных.ОписаниеДополнительныхРеквизитов Цикл

			Если ОписаниеДопРеквизита.Значение = Поле.ИмяПоля Тогда

				ДополнительныйРеквизит = ОписаниеДопРеквизита.Ключ; // Если отменяем выбор доп. реквизита - определяем его.
				Прервать;

			КонецЕсли;

		КонецЦикла;
		СтраницаДополнительныеРеквизиты = "СтраницаДополнительныеРеквизиты";

	КонецЕсли;

	Если Параметры.НастройкиЗагрузкиДанных.Свойство("ОписаниеДополнительныхРеквизитовНоменклатура")
		И Поле.ДопРеквизитВладелец = КонстантаДопРеквизитНоменклатура Тогда

		Для Каждого ОписаниеДопРеквизита Из Параметры.НастройкиЗагрузкиДанных.ОписаниеДополнительныхРеквизитовНоменклатура Цикл

			Если ОписаниеДопРеквизита.Значение = Поле.ИмяПоля Тогда

				ДополнительныйРеквизит = ОписаниеДопРеквизита.Ключ;
				Прервать;

			КонецЕсли;

		КонецЦикла;
		СтраницаДополнительныеРеквизиты = "СтраницаДополнительныеРеквизитыНоменклатура";

	КонецЕсли;

	Если Параметры.НастройкиЗагрузкиДанных.Свойство("ОписаниеДополнительныхРеквизитовХарактеристики")
		И Поле.ДопРеквизитВладелец = КонстантаДопРеквизитХарактеристики Тогда

		Для Каждого ОписаниеДопРеквизита Из Параметры.НастройкиЗагрузкиДанных.ОписаниеДополнительныхРеквизитовХарактеристики Цикл

			Если ОписаниеДопРеквизита.Значение = Поле.ИмяПоля Тогда

				ДополнительныйРеквизит = ОписаниеДопРеквизита.Ключ;
				Прервать;

			КонецЕсли;

		КонецЦикла;
		СтраницаДополнительныеРеквизиты = "СтраницаДополнительныеРеквизитыХарактеристики";

	КонецЕсли;

	Если Поле.ИмяПоля = КэшЗначений.ИмяПоляДополнительныхРеквизитов Тогда

		Отказ = Истина;

		МаксимумДополнительныхРеквизитов = ЗагрузкаДанныхИзВнешнегоИсточникаПереопределяемый.МаксимумДополнительныхРеквизитовТабличногоДокумента();
		Если Параметры.НастройкиЗагрузкиДанных.ВыбранныеДополнительныеРеквизиты.Количество()
			>= МаксимумДополнительныхРеквизитов Тогда

			ТекстПредупреждения = НСтр("ru ='Большое количество дополнительных реквизитов в загрузке существенно замедляет процесс. 
									   |Рекомендуется разделить загрузку на несколько итераций.'");

			ТекстЗаголовка = СтрШаблон(НСтр("ru ='Выбрано %1 реквизита'"), МаксимумДополнительныхРеквизитов);
			ПоказатьПредупреждение( , ТекстПредупреждения, 0, ТекстЗаголовка);
			Возврат;

		КонецЕсли;

		Элементы.Страницы.ТекущаяСтраница = Элементы[СтраницаДополнительныеРеквизиты];

	КонецЕсли;

КонецПроцедуры

&НаСервере
Процедура ЗапомнитьЗаголовокПоляИВыборПользователя(ИмяВыбранногоПоля, ДополнительныйРеквизит, ОтменитьВыборВКолонке)

	Если ПустаяСтрока(КэшЗначений.ЗаголовокКолонки) Тогда

		Возврат;

	КонецЕсли;

	ОписаниеОбъектаЗагрузки = ЗагрузкаДанныхИзВнешнегоИсточника.ОбъектЗагрузкиПоПолномуИмени(
		Параметры.НастройкиЗагрузкиДанных.ПолноеИмяОбъектаЗаполнения);
	Если Не ЗначениеЗаполнено(ОписаниеОбъектаЗагрузки.ОбъектЗагрузки) Тогда

		Возврат;

	КонецЕсли;

	МенеджерЗаписи = РегистрыСведений.СоответствиеНаименованияКолонокПолямЗагрузки.СоздатьМенеджерЗаписи();
	МенеджерЗаписи.ОбъектЗагрузки		= ОписаниеОбъектаЗагрузки.ОбъектЗагрузки;
	МенеджерЗаписи.ИмяТабличнойЧасти	= ОписаниеОбъектаЗагрузки.ИмяТабличнойЧасти;
	МенеджерЗаписи.ЗаголовокКолонки		= КэшЗначений.ИмяПоляИзФайла;

	Если ЗначениеЗаполнено(ДополнительныйРеквизит) Тогда

		ЭтоОтменаВыбора = (Параметры.НастройкиЗагрузкиДанных.ВыбранныеДополнительныеРеквизиты.Получить(
			ДополнительныйРеквизит) <> Неопределено) И ОтменитьВыборВКолонке = КэшЗначений.НомерКолонки;

		Если Не ЭтоОтменаВыбора Тогда

			МенеджерЗаписи.ДополнительныйРеквизит = ДополнительныйРеквизит;

		КонецЕсли;

		МенеджерЗаписи.Записать(Истина);

	ИначеЕсли ОтменитьВыборВКолонке <> 0 Тогда
		
		// Имя оставляем пустым, что бы более колонка не сопоставлялась по данному заголовку
		// Важно!!! Выполняется до проверки ПустаяСтрока(ИмяВыбранногоПоля)!
		МенеджерЗаписи.Записать(Истина);

	ИначеЕсли Не ПустаяСтрока(ИмяВыбранногоПоля) Тогда

		МенеджерЗаписи.Поле = ИмяВыбранногоПоля;
		МенеджерЗаписи.Записать(Истина);

	КонецЕсли;

КонецПроцедуры

&НаСервере
Процедура ВыполнитьОбязательныеДействияНаСервере(ИмяВыбранногоПоля, ДополнительныйРеквизит, ОтменитьВыборВКолонке = 0)
	
	// План:
	//
	// Необходимо убедиться, что номер колонки уникален для выбранного поля (во всех др полях обнулить такой номер колонки)
	// Записать дерево значений для дальнейшей работы

	ДеревоПолей = ДанныеФормыВЗначение(ДеревоПолейЗагрузки, Тип("ДеревоЗначений"));

	ПараметрыОтбора = Новый Структура("НомерКолонки", КэшЗначений.НомерКолонки);

	НайденныеСтрокиДереваПолей = ДеревоПолей.Строки.НайтиСтроки(ПараметрыОтбора, Истина);
	Если НайденныеСтрокиДереваПолей.Количество() > 1 Тогда

		Для Каждого СтрокаДереваПолей Из НайденныеСтрокиДереваПолей Цикл

			Если СтрокаДереваПолей.ИмяПоля <> ИмяВыбранногоПоля Тогда

				СтрокаДереваПолей.НомерКолонки = 0;
				СтрокаДереваПолей.НомерЦвета  = СтрокаДереваПолей.НомерЦветаОригинал;

			КонецЕсли;

		КонецЦикла;

	ИначеЕсли ОтменитьВыборВКолонке <> 0 И НайденныеСтрокиДереваПолей.Количество() = 1
		И НайденныеСтрокиДереваПолей[0].НомерКолонки = ОтменитьВыборВКолонке Тогда

		НайденныеСтрокиДереваПолей[0].НомерКолонки = 0;
		НайденныеСтрокиДереваПолей[0].НомерЦвета  = НайденныеСтрокиДереваПолей[0].НомерЦветаОригинал;

	КонецЕсли;

	ЗапомнитьЗаголовокПоляИВыборПользователя(ИмяВыбранногоПоля, ДополнительныйРеквизит, ОтменитьВыборВКолонке);

	ПоместитьВоВременноеХранилище(ДеревоПолей, Параметры.НастройкиЗагрузкиДанных.АдресХраненияДереваПолей);

КонецПроцедуры

&НаСервере
Процедура ЗаполнитьДеревоПолейЗагрузки(ДеревоПолей)

	ЗначениеВРеквизитФормы(ДеревоПолей, "ДеревоПолейЗагрузки");

КонецПроцедуры

&НаСервере
Процедура ЗаполнитьДеревоДополнительныхРеквизитов()

	Если Параметры.НастройкиЗагрузкиДанных.Свойство("ОписаниеДополнительныхРеквизитов") Тогда
		ИмяПараметра = "ОписаниеДополнительныхРеквизитов";
		ИмяРеквизитаНаФорме = "ДополнительныеРеквизиты";
		ЗаполнитьДеревоДополнительныхРеквизитовПоИмени(ИмяРеквизитаНаФорме, ИмяПараметра);
	КонецЕсли
	;
	Если Параметры.НастройкиЗагрузкиДанных.Свойство("ОписаниеДополнительныхРеквизитовНоменклатура") Тогда
		ИмяПараметра = "ОписаниеДополнительныхРеквизитовНоменклатура";
		ИмяРеквизитаНаФорме = "ДополнительныеРеквизитыНоменклатура";
		ЗаполнитьДеревоДополнительныхРеквизитовПоИмени(ИмяРеквизитаНаФорме, ИмяПараметра);
	КонецЕсли
	;
	Если Параметры.НастройкиЗагрузкиДанных.Свойство("ОписаниеДополнительныхРеквизитовХарактеристики") Тогда
		ИмяПараметра = "ОписаниеДополнительныхРеквизитовХарактеристики";
		ИмяРеквизитаНаФорме = "ДополнительныеРеквизитыХарактеристики";
		ЗаполнитьДеревоДополнительныхРеквизитовПоИмени(ИмяРеквизитаНаФорме, ИмяПараметра);
	КонецЕсли
	;

КонецПроцедуры

&НаСервере
Процедура ЗаполнитьДеревоДополнительныхРеквизитовПоИмени(ИмяРеквизитаНаФорме, ИмяПараметра)

	ДеревоДопРеквизитов = РеквизитФормыВЗначение(ИмяРеквизитаНаФорме);

	СтрокиГрупп = ДеревоДопРеквизитов.Строки;
	Для Каждого Описание Из Параметры.НастройкиЗагрузкиДанных[ИмяПараметра] Цикл

		ДополнительныйРеквизит = Описание.Ключ;
		
		ВладелецДопРеквизита = ДополнительныйРеквизит.НаборСвойств.Родитель;
		Если Не ЗначениеЗаполнено(ВладелецДопРеквизита) Тогда
			ВладелецДопРеквизита = ДополнительныйРеквизит.НаборСвойств;
		КонецЕсли;

		ГруппаДопРеквизита = СтрокиГрупп.Найти(ДополнительныйРеквизит.НаборСвойств,
			"ИдентификаторГруппы", Ложь);
		
		Если ГруппаДопРеквизита = Неопределено Тогда

			ГруппаДопРеквизита = СтрокиГрупп.Добавить();
			ГруппаДопРеквизита.ВладелецДопРеквизита = ВладелецДопРеквизита;
			ГруппаДопРеквизита.Представление = ДополнительныйРеквизит.НаборСвойств.Наименование;
			ГруппаДопРеквизита.ЭлементДоступен = Истина;
			ГруппаДопРеквизита.ИдентификаторГруппы = ДополнительныйРеквизит.НаборСвойств;

		КонецЕсли;

		НоваяСтрока = ГруппаДопРеквизита.Строки.Добавить();
		НоваяСтрока.ВладелецДопРеквизита = ВладелецДопРеквизита;
		НоваяСтрока.ДополнительныйРеквизит = Описание.Ключ;
		НоваяСтрока.Представление = Строка(Описание.Ключ.Наименование);
		НоваяСтрока.ЭлементДоступен = Истина;

	КонецЦикла;

	ЗначениеВРеквизитФормы(ДеревоДопРеквизитов, ИмяРеквизитаНаФорме);

КонецПроцедуры

&НаКлиенте
Функция ДостигнутМаксимумПоКоличествуВыбранныхДополнительныхРеквизитов(КоллекцияЭлементовДополнительныхРеквизитов)

	МаксимумДополнительныхРеквизитов = ЗагрузкаДанныхИзВнешнегоИсточникаПереопределяемый.МаксимумДополнительныхРеквизитовТабличногоДокумента();

	Возврат КоллекцияЭлементовДополнительныхРеквизитов.Количество() >= МаксимумДополнительныхРеквизитов;

КонецФункции

&НаКлиенте
Функция ДобавитьПолеДополнительногоРеквизитаВДеревоПолей(КоллекцияЭлементовДополнительныхРеквизитов,
	СтрокаДопРеквизита, ДопРеквизитВладелец)

	ПолеДополнительногоРеквизита = КоллекцияЭлементовДополнительныхРеквизитов.Добавить();
	
	ОписаниеДополнительныхРеквизитов = "ОписаниеДополнительныхРеквизитов";
	Если ДопРеквизитВладелец = КонстантаДопРеквизитНоменклатура Тогда
		ОписаниеДополнительныхРеквизитов = "ОписаниеДополнительныхРеквизитовНоменклатура";
	ИначеЕсли ДопРеквизитВладелец = КонстантаДопРеквизитХарактеристики Тогда   
		Если Параметры.НастройкиЗагрузкиДанных.Свойство("ОписаниеДополнительныхРеквизитовХарактеристики") Тогда
			ОписаниеДополнительныхРеквизитов = "ОписаниеДополнительныхРеквизитовХарактеристики";			
		КонецЕсли;
	КонецЕсли;

	ПолеДополнительногоРеквизита.ИмяГруппыПолей = "";
	ПолеДополнительногоРеквизита.ИмяПоля = Параметры.НастройкиЗагрузкиДанных[ОписаниеДополнительныхРеквизитов].Получить(
		СтрокаДопРеквизита.ДополнительныйРеквизит);
	ПолеДополнительногоРеквизита.ТипПолучаемогоЗначения = Неопределено;
	ПолеДополнительногоРеквизита.ПредставлениеПоля = СтрокаДопРеквизита.Представление;
	ПолеДополнительногоРеквизита.НомерЦвета = 3;
	ПолеДополнительногоРеквизита.НомерЦветаОригинал = 4;
	ПолеДополнительногоРеквизита.ДопРеквизитВладелец = ДопРеквизитВладелец;

	Возврат ПолеДополнительногоРеквизита;

КонецФункции

&НаКлиенте
Функция НайтиПолеДополнительногоРеквизитаВДеревоПолей(КоллекцияЭлементовДополнительныхРеквизитов, СтрокаДопРеквизита)

	Для Каждого ПолеДополнительногоРеквизита Из КоллекцияЭлементовДополнительныхРеквизитов Цикл

		Если ПолеДополнительногоРеквизита.ИмяПоля
			= Параметры.НастройкиЗагрузкиДанных.ОписаниеДополнительныхРеквизитов.Получить(
			СтрокаДопРеквизита.ДополнительныйРеквизит) Тогда

			Прервать;

		КонецЕсли;

	КонецЦикла;

	Возврат ПолеДополнительногоРеквизита;

КонецФункции

&НаКлиенте
Процедура ОбработатьВыборДополнительногоРеквизита(СтрокаДопРеквизита)

	Если СтрокаДопРеквизита.ПолучитьЭлементы().Количество() > 0 Тогда

		Возврат;

	КонецЕсли;

	ГруппаДопРеквизитов = Неопределено;

	ЭлементыПервогоУровня = ДеревоПолейЗагрузки.ПолучитьЭлементы();
	Для Каждого СтрокаДерева Из ЭлементыПервогоУровня Цикл

		Если СтрокаДерева.ДопРеквизитВладелец = СтрокаДопРеквизита.ВладелецДопРеквизита Тогда

			ГруппаДопРеквизитов = СтрокаДерева;
			Прервать;

		КонецЕсли;

	КонецЦикла;

	КоллекцияЭлементовДополнительныхРеквизитов = ГруппаДопРеквизитов.ПолучитьЭлементы();
	Если Параметры.НастройкиЗагрузкиДанных.ВыбранныеДополнительныеРеквизиты.Получить(
		СтрокаДопРеквизита.ДополнительныйРеквизит) = Неопределено Тогда

		ПолеДополнительногоРеквизита = ДобавитьПолеДополнительногоРеквизитаВДеревоПолей(
			КоллекцияЭлементовДополнительныхРеквизитов, СтрокаДопРеквизита, ГруппаДопРеквизитов.ДопРеквизитВладелец);

		Если ДостигнутМаксимумПоКоличествуВыбранныхДополнительныхРеквизитов(КоллекцияЭлементовДополнительныхРеквизитов) Тогда

			ГруппаДопРеквизитов.НомерЦвета = 3;

		КонецЕсли;

	Иначе

		ПолеДополнительногоРеквизита = НайтиПолеДополнительногоРеквизитаВДеревоПолей(
			КоллекцияЭлементовДополнительныхРеквизитов, СтрокаДопРеквизита);

	КонецЕсли;

	ЗапомнитьВыборИЗакрытьФорму(ПолеДополнительногоРеквизита, СтрокаДопРеквизита.ДополнительныйРеквизит);

КонецПроцедуры

&НаКлиенте
Процедура ЗапомнитьВыборИЗакрытьФорму(Поле, ДополнительныйРеквизит = Неопределено)

	Результат = Новый Структура;
	Результат.Вставить("Представление", Поле.ПредставлениеПоля);
	Результат.Вставить("Значение", Поле.ИмяПоля);
	Результат.Вставить("ДопРеквизит", ДополнительныйРеквизит);
	Результат.Вставить("ОтменитьВыборВКолонке", 0);
	Результат.Вставить("ДопРеквизитВладелец", Поле.ДопРеквизитВладелец);

	Если Поле.НомерКолонки <> 0 Тогда

		Результат.Вставить("ОтменитьВыборВКолонке", Поле.НомерКолонки);

	ИначеЕсли (ПустаяСтрока(Поле.ИмяПоля) И ПустаяСтрока(Поле.ИмяГруппыПолей)) И КэшЗначений.НомерКолонки <> 0 Тогда

		Результат.Вставить("ОтменитьВыборВКолонке", КэшЗначений.НомерКолонки);

	КонецЕсли;

	ВернутьЦветКолонки = Ложь;
	ВыбралиСамиСебя = (Поле.НомерКолонки = КэшЗначений.НомерКолонки);
	Если Не ПустаяСтрока(Поле.ИмяПоля) Тогда

		Поле.НомерКолонки = ?(ВыбралиСамиСебя, 0, КэшЗначений.НомерКолонки);
		Поле.НомерЦвета = ?(ВыбралиСамиСебя, Поле.НомерЦветаОригинал, 3);

	ИначеЕсли (ПустаяСтрока(Поле.ИмяПоля) И ПустаяСтрока(Поле.ИмяГруппыПолей)) И КэшЗначений.НомерКолонки <> 0 Тогда
		
		ВернутьЦветКолонки = Истина;

	КонецЕсли;

	ВыполнитьОбязательныеДействияНаСервере(Поле.ИмяПоля, ДополнительныйРеквизит, Результат.ОтменитьВыборВКолонке);

	Если Результат.ОтменитьВыборВКолонке = 0 Тогда

		Результат.Удалить("ОтменитьВыборВКолонке");

	ИначеЕсли ЗначениеЗаполнено(ДополнительныйРеквизит) Тогда

		Параметры.НастройкиЗагрузкиДанных.ВыбранныеДополнительныеРеквизиты.Удалить(ДополнительныйРеквизит);

	КонецЕсли;

	Закрыть(Результат);

КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовТаблицыФормыТаблицаПолей

&НаКлиенте
Процедура ТаблицаПолейЗагрузкиВыбор(Элемент, ВыбраннаяСтрока, Поле, СтандартнаяОбработка)
	
	ОбработатьВыборПоляЗагрузки(Элемент, ВыбраннаяСтрока, Поле, СтандартнаяОбработка);
	УстановитьКнопкуПоУмолчанию();

КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовТаблицыФормыДополнительныеРеквизиты

&НаКлиенте
Процедура ДополнительныеРеквизитыВыбор(Элемент, ВыбраннаяСтрока, Поле, СтандартнаяОбработка)
	
	ОбработатьВыборДополнительногоПоляЗагрузки("ДополнительныеРеквизиты", ВыбраннаяСтрока, СтандартнаяОбработка);
	УстановитьКнопкуПоУмолчанию();

КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовТаблицыФормыДополнительныеРеквизитыНоменклатура

&НаКлиенте
Процедура ДополнительныеРеквизитыНоменклатураВыбор(Элемент, ВыбраннаяСтрока, Поле, СтандартнаяОбработка)

	ОбработатьВыборДополнительногоПоляЗагрузки("ДополнительныеРеквизитыНоменклатура", ВыбраннаяСтрока,
		СтандартнаяОбработка);
	УстановитьКнопкуПоУмолчанию();

КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовТаблицыФормыДополнительныеРеквизитыХарактеристики

&НаКлиенте
Процедура ДополнительныеРеквизитыХарактеристикиВыбор(Элемент, ВыбраннаяСтрока, Поле, СтандартнаяОбработка)

		ОбработатьВыборДополнительногоПоляЗагрузки("ДополнительныеРеквизитыХарактеристики", ВыбраннаяСтрока,
		СтандартнаяОбработка);
	УстановитьКнопкуПоУмолчанию();

КонецПроцедуры

#КонецОбласти