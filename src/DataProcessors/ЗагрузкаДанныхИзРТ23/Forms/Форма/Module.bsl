
#Область ОбработчикиСобытийФормы

&НаКлиенте
Процедура КаталогЗагрузкиДанныхНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)

	СтандартнаяОбработка = Ложь;
	
	ОписаниеОповещения = Новый ОписаниеОповещения("КаталогЗагрузкиДанныхНачалоВыбораЗавершение", ЭтотОбъект);
	ФайловаяСистемаКлиент.ВыбратьКаталог(ОписаниеОповещения, НСтр("ru = 'Выберите каталог загрузки данных'"));

КонецПроцедуры

&НаКлиенте
Процедура КаталогЗагрузкиДанныхНачалоВыбораЗавершение(Результат, Параметры) Экспорт
	
	Если Результат = "" Тогда
		Возврат;
	КонецЕсли;
	
	КаталогЗагрузкиДанных = Результат;
	
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)

	УстановитьВидимость();
	
	УстановитьЕслиНеПодключено = Истина;
	ПодключитьУстановитьРасширениеРаботыСФайлами(УстановитьЕслиНеПодключено);

КонецПроцедуры

&НаКлиенте 
Процедура ПодключитьУстановитьРасширениеРаботыСФайлами(УстановитьЕслиНеПодключено) Экспорт
	
	НачатьПодключениеРасширенияРаботыСФайлами(
        Новый ОписаниеОповещения(
            "ПослеПодключенияРасширенияРаботыСФайлами",
            ЭтотОбъект,
            УстановитьЕслиНеПодключено));
			
КонецПроцедуры
		
&НаКлиенте
Процедура ПослеПодключенияРасширенияРаботыСФайлами(Подключено, УстановитьЕслиНеПодключено) Экспорт
	
	РасширениеРаботыСФайламиПодключено = Подключено;
	
	Если РасширениеРаботыСФайламиПодключено Тогда
		Элементы.КаталогЗагрузкиДанных.Видимость = Истина;
		Элементы.ПредупреждениеЗагрузка.Видимость = Ложь;
    ИначеЕсли УстановитьЕслиНеПодключено Тогда
        НачатьУстановкуРасширенияРаботыСФайлами(
            Новый ОписаниеОповещения(
                "ПодключитьУстановитьРасширениеРаботыСФайлами",
                ЭтотОбъект,
                Ложь));
	Иначе
		Элементы.КаталогЗагрузкиДанных.Видимость = Ложь;
		Элементы.ПредупреждениеЗагрузка.Видимость = Истина;
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы

&НаСервере
Функция ЗагрузитьНаСервере()
	
	ДвоичныеДанные = ПолучитьИзВременногоХранилища(АдресВременногоХранилища);
	// получаем имя временного файла в локальной ФС на сервере
	ИмяВременногоФайла = ПолучитьИмяВременногоФайла("xml");
	// получаем файл правил для зачитки
	ДвоичныеДанные.Записать(ИмяВременногоФайла);
	ДвоичныеДанные = Неопределено;
	
	СтруктураПараметров = Новый Структура;
	СтруктураПараметров.Вставить("АдресНаСервере", ИмяВременногоФайла);
	СтруктураПараметров.Вставить("ЭтоФоновоеЗадание", Истина);
	
	ПараметрыЗадания = Новый Структура;
	ПараметрыЗадания.Вставить("ИмяОбработки", "ВыгрузкаЗагрузкаEnterpriseData");
	ПараметрыЗадания.Вставить("ИмяМетода", "ЗагрузкаСообщения");
	ПараметрыЗадания.Вставить("ПараметрыВыполнения", СтруктураПараметров);
	ПараметрыЗадания.Вставить("ЭтоВнешняяОбработка", Ложь);
	
	ВыполняемыйМетод = "ДлительныеОперации.ВыполнитьПроцедуруМодуляОбъектаОбработки";
	
	МодульДлительныеОперации = ОбщегоНазначения.ОбщийМодуль("ДлительныеОперации");
	ПараметрыВыполнения = МодульДлительныеОперации.ПараметрыВыполненияВФоне(УникальныйИдентификатор);
	ПараметрыВыполнения.НаименованиеФоновогоЗадания = НСтр("ru = 'Загрузка данных из РТ2.3'");
	РезультатФоновогоЗадания = МодульДлительныеОперации.ВыполнитьВФоне(ВыполняемыйМетод, ПараметрыЗадания, ПараметрыВыполнения);
	
	Возврат РезультатФоновогоЗадания;
	
КонецФункции

&НаКлиенте
Процедура Загрузить(Команда)

	ИдентификаторЗадания = Неопределено;
	
	Если ЗначениеЗаполнено(КаталогЗагрузкиДанных) Тогда
		КаталогЗагрузкиДанных = ОбщегоНазначенияКлиентСервер.ДобавитьКонечныйРазделительПути(КаталогЗагрузкиДанных);
		
		Оповещение = Новый ОписаниеОповещения("ПослеОкончанияПоискаФайлов", ЭтотОбъект);
		НачатьПоискФайлов(Оповещение, КаталогЗагрузкиДанных, "*.xml");
		
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ПослеОкончанияПоискаФайлов(МассивФайлов, ДополнительныеПараметры) Экспорт

	ПомещаемыеФайлы = Новый Массив;

	Если МассивФайлов.Количество() = 0 Тогда
		ОбщегоНазначенияКлиент.СообщитьПользователю(НСтр("ru = 'В каталоге не найдены файлы с данными перехода.'"));
		Возврат;
	КонецЕсли;
	
	Для Каждого Файл Из МассивФайлов Цикл
		ОписаниеФайла = Новый ОписаниеПередаваемогоФайла(Файл.ПолноеИмя);
		ПомещаемыеФайлы.Добавить(ОписаниеФайла);
	КонецЦикла;
	
	Попытка
		
		Если ПомещаемыеФайлы.Количество() > 0 Тогда
			ОписаниеОповещения = Новый ОписаниеОповещения("ПомещениеФайловНаСерверЗавершение", ЭтотОбъект);
			НачатьПомещениеФайловНаСервер(ОписаниеОповещения,,, ПомещаемыеФайлы, УникальныйИдентификатор);
		КонецЕсли;
	Исключение
		Сообщение = Новый СообщениеПользователю;
		Сообщение.Текст = НСтр("ru = 'Ошибка при загрузке файлов.'");
		Сообщение.Сообщить();
	КонецПопытки;

КонецПроцедуры	

&НаКлиенте
Процедура ПомещениеФайловНаСерверЗавершение(ПомещенныеФайлы, Дополнительно) Экспорт

	Если ПомещенныеФайлы = Неопределено Тогда
		Возврат;
	КонецЕсли;

	МассивФайлов = Новый Массив;
	Для Каждого Файл Из ПомещенныеФайлы Цикл
		МассивФайлов.Добавить(Файл.Адрес);
	КонецЦикла;
	
	Если МассивФайлов.Количество() > 0 Тогда
		
		ОчиститьСообщения();
		Элементы.СтраницыШаги.ТекущаяСтраница = Элементы.Ожидание;
		
		АдресВременногоХранилища = МассивФайлов[0];
		
		Если ЭтоАдресВременногоХранилища(АдресВременногоХранилища) Тогда

			ВыполнитьОбработкуОповещения(
				Новый ОписаниеОповещения("ЗапуститьЗагрузкуДанныхНаКлиенте", ЭтотОбъект),
				МассивФайлов);
		КонецЕсли;

	Иначе
        СообщитьОбОкончанииОперации();
	КонецЕсли;

КонецПроцедуры

&НаКлиенте
Процедура ЗапуститьЗагрузкуДанныхНаКлиенте(МассивФайлов, ДополнительныеПараметры) Экспорт
	
	МассивСообщений = Неопределено;
	ДлительнаяОперация = ЗагрузкаДанныхДлительнаяОперация();
	
	Если ДлительнаяОперация <> Неопределено Тогда
		
		ИдентификаторЗадания = ДлительнаяОперация.ИдентификаторЗадания;

		МодульДлительныеОперацииКлиент = ОбщегоНазначенияКлиент.ОбщийМодуль("ДлительныеОперацииКлиент");
		ПараметрыОжидания = МодульДлительныеОперацииКлиент.ПараметрыОжидания(ЭтотОбъект);
		ПараметрыОжидания.ВыводитьОкноОжидания = Ложь;
		
		ДополнительныеПараметры = Новый Структура;
		ДополнительныеПараметры.Вставить("МассивФайлов", МассивФайлов);
		
		ОписаниеОповещения = Новый ОписаниеОповещения("ПриЗавершенииОперацииЗагрузки", ЭтотОбъект, ДополнительныеПараметры);
		МодульДлительныеОперацииКлиент.ОжидатьЗавершение(ДлительнаяОперация, ОписаниеОповещения, ПараметрыОжидания);
	КонецЕсли;

КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаКлиенте
Процедура ЗапуститьЗагрузкуДанных()

КонецПроцедуры

&НаКлиенте
Функция ЗагрузкаДанныхДлительнаяОперация()

	Возврат ЗагрузитьНаСервере();

КонецФункции


&НаКлиенте
Процедура ПриЗавершенииОперацииЗагрузки(Результат, ДополнительныеПараметры) Экспорт
	
	Если Результат = Неопределено Тогда
		ВызватьИсключение НСтр("ru = 'Загрузка данных завершена неудачно.'");
	ИначеЕсли Результат.Статус = "Ошибка" Тогда
		ВызватьИсключение Результат.КраткоеПредставлениеОшибки;
	КонецЕсли;
	
	Если Результат.Свойство("Сообщения") Тогда
		МассивСообщений = Результат.Сообщения;
	КонецЕсли;

	ВывестиСообщенияФоновогоЗадания();
	
	Если ДополнительныеПараметры.Свойство("МассивФайлов") Тогда
		МассивФайловОбработка = ДополнительныеПараметры.МассивФайлов;
		Если МассивФайловОбработка.Количество() > 0 Тогда

			ПозицияФайла = МассивФайловОбработка.Найти(АдресВременногоХранилища);
			Если ПозицияФайла <> Неопределено Тогда
				Если (ПозицияФайла + 1) <= МассивФайловОбработка.ВГраница() Тогда
					АдресВременногоХранилища = МассивФайловОбработка.Получить(ПозицияФайла + 1);
					
					Если ЭтоАдресВременногоХранилища(АдресВременногоХранилища) Тогда
						ВыполнитьОбработкуОповещения(
							Новый ОписаниеОповещения("ЗапуститьЗагрузкуДанныхНаКлиенте", ЭтотОбъект),
							МассивФайловОбработка);
					КонецЕсли;
				Иначе
		            СообщитьОбОкончанииОперации();
				КонецЕсли;
			КонецЕсли;
		КонецЕсли;
	КонецЕсли;

КонецПроцедуры

&НаКлиенте
Процедура СообщитьОбОкончанииОперации()

	УстановитьВидимость();

	Сообщение = Новый СообщениеПользователю();
	Сообщение.Текст = НСтр("ru = 'Загрузка данных завершена.'");
	Сообщение.Сообщить();
	
КонецПроцедуры

&НаКлиенте
Процедура ВывестиСообщенияФоновогоЗадания()
	Если НЕ ЗначениеЗаполнено(МассивСообщений) Тогда
		МассивСообщений = ПрочитатьСообщенияФоновогоЗадания(ИдентификаторЗадания);
	КонецЕсли;
	Если ЗначениеЗаполнено(МассивСообщений) Тогда
		Для Каждого ТекСообщение Из МассивСообщений Цикл
			Если СтрНачинаетсяС(ТекСообщение.Текст,"{") Тогда
				Продолжить;
			КонецЕсли;
			ТекСообщение.Сообщить();
		КонецЦикла;
	КонецЕсли;
КонецПроцедуры

&НаСервереБезКонтекста
Функция ПрочитатьСообщенияФоновогоЗадания(Идентификатор)
	Если НЕ ЗначениеЗаполнено(Идентификатор) Тогда
		Возврат Неопределено;
	КонецЕсли;
	Задание = ФоновыеЗадания.НайтиПоУникальномуИдентификатору(Идентификатор);
	Если Задание = Неопределено Тогда
		Возврат Неопределено;
	КонецЕсли;
	
	Возврат Задание.ПолучитьСообщенияПользователю();
КонецФункции

&НаКлиенте
Процедура УстановитьВидимость()

	Элементы.СтраницыШаги.ТекущаяСтраница = Элементы.ЗагрузкаФайла;

КонецПроцедуры

#КонецОбласти
