
#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	// Заполним реквизиты формы из параметров.
	ЗаполнитьЗначенияСвойств(ЭтаФорма, Параметры,
		"Дата, Организация, СчетУчета, СчетУчетаНДС, СпособУчетаНДС, ОтражениеВУСН");
	
	УстановитьФункциональныеОпцииФормы();
	
	Элементы.СпособУчетаНДС.Видимость = РаздельныйУчетНДСНаСчете19;
	Элементы.ОтражениеВУСН.Видимость = ПрименяетсяУСНДоходыМинусРасходы;
	
	СброситьРазмерыИПоложениеОкна();
	
КонецПроцедуры

&НаКлиенте
Процедура ПередЗакрытием(Отказ, ЗавершениеРаботы, ТекстПредупреждения, СтандартнаяОбработка)
	
	Если ЗавершениеРаботы И (Модифицированность ИЛИ ПеренестиВДокумент) Тогда
		Отказ = Истина;
		Возврат;
	КонецЕсли;
	
	Если Модифицированность И НЕ ПеренестиВДокумент Тогда
		Отказ = Истина;
		ТекстВопроса = НСтр("ru = 'Данные были изменены. Сохранить изменения?'");
		
		Оповещение = Новый ОписаниеОповещения("ВопросПередЗакрытиемФормыЗавершение", ЭтотОбъект);
		ПоказатьВопрос(Оповещение, ТекстВопроса, РежимДиалогаВопрос.ДаНетОтмена, , КодВозвратаДиалога.Да);
	КонецЕсли;

	Если ПеренестиВДокумент И НЕ Отказ Тогда
		Отказ = НЕ ПроверитьЗаполнениеНаКлиенте();
	КонецЕсли;

	Если Отказ Тогда
		ПеренестиВДокумент = Ложь;
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура КомандаОК(Команда)
	
	ПеренестиВДокумент = Истина;
	Закрыть();
	
КонецПроцедуры

&НаКлиенте
Процедура КомандаОтмена(Команда)
	
	Модифицированность = Ложь;
	ПеренестиВДокумент = Ложь;
	Закрыть();
	
КонецПроцедуры

&НаКлиенте
Процедура ПриЗакрытии(ЗавершениеРаботы)
	
	Если ПеренестиВДокумент Тогда
		
		СтруктураРезультат = Новый Структура;
		СтруктураРезультат.Вставить("СчетУчета");
		СтруктураРезультат.Вставить("СчетУчетаНДС");
		СтруктураРезультат.Вставить("СпособУчетаНДС");
		СтруктураРезультат.Вставить("ОтражениеВУСН");
		
		ЗаполнитьЗначенияСвойств(СтруктураРезультат, ЭтаФорма);
		
		ОповеститьОВыборе(СтруктураРезультат);
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти 

#Область СлужебныеПроцедурыИФункции
&НаКлиенте
Процедура ВопросПередЗакрытиемФормыЗавершение(Результат, ДополнительныеПараметры) Экспорт
	
	Если Результат = КодВозвратаДиалога.Да Тогда
		ПеренестиВДокумент = Истина;
		Закрыть();
	ИначеЕсли Результат = КодВозвратаДиалога.Нет Тогда
		Модифицированность = Ложь;
		ПеренестиВДокумент = Ложь;
		Закрыть();
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура УстановитьФункциональныеОпцииФормы()
	
	Если ОбщегоНазначения.ПодсистемаСуществует("БухгалтерияПредприятияПодсистемы") Тогда  
		
		МодульУчетнаяПолитика = ОбщегоНазначения.ОбщийМодуль("УчетнаяПолитика");	
		
		РаздельныйУчетНДСНаСчете19 = МодульУчетнаяПолитика.РаздельныйУчетНДСНаСчете19(Организация, Дата);
		ПрименяетсяУСНДоходыМинусРасходы = МодульУчетнаяПолитика.ПрименяетсяУСНДоходыМинусРасходы(Организация, Дата);
		
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Функция ПроверитьЗаполнениеНаКлиенте()
	
	Отказ = Ложь;
	
	Если НЕ ЗначениеЗаполнено(СчетУчета) Тогда
		ТекстСообщения = ОбщегоНазначенияКлиентСервер.ТекстОшибкиЗаполнения("Поле", "Заполнение", НСтр("ru = 'Счет учета'"));
		Поле = "СчетУчета";
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстСообщения, , Поле, "", Отказ);
	КонецЕсли;
	
	Возврат Не Отказ;

КонецФункции

&НаСервере
Процедура СброситьРазмерыИПоложениеОкна()

	ИмяПользователя = ПользователиИнформационнойБазы.ТекущийПользователь().Имя;
	Если ПравоДоступа("СохранениеДанныхПользователя", Метаданные) Тогда
		ПолноеИмяФормы = Метаданные.Обработки.ТОРГ12РаспознаваниеДокументов.Формы.ФормаРедактированиеСчетаУчета.ПолноеИмя();
		ХранилищеСистемныхНастроек.Удалить(ПолноеИмяФормы, "", ИмяПользователя);
	КонецЕсли;
	КлючСохраненияПоложенияОкна = Строка(Новый УникальныйИдентификатор);

КонецПроцедуры

#КонецОбласти
