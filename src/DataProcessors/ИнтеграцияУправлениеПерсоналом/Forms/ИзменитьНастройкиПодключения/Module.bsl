#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	ЦветСтиляПоясняющийОшибкуТекст 	= ЦветаСтиля.ПоясняющийОшибкуТекст;
	ЦветСтиляПоясняющийТекст 		= ЦветаСтиля.ПоясняющийТекст;
	ЦветСтиляИнформационнойНадписи  = ЦветаСтиля.ТекстИнформационнойНадписи;
	
	Приложение = Параметры.Приложение; 
	
	СообщениеПроверкаНеВыполнялась = НСтр("ru = 'Требуется проверить новые настройки подключения.'");
	Если Приложение = Перечисления.ПриложенияДляИнтеграции.УправлениеПерсоналом Тогда
		ЗаголовокИнформация = НСтр("ru = 'Изменение настроек подключения к приложению 1С:Персонал.'");
	Иначе
		СервисКабинетСотрудникаВЛокальнойСети = Константы.СервисКабинетСотрудникаВЛокальнойСети.Получить();
		Если СервисКабинетСотрудникаВЛокальнойСети Тогда
			ЗаголовокИнформация = НСтр("ru = 'Изменение настроек подключения к сервису 1С:Кабинет сотрудника.'");
		Иначе
			ЗаголовокИнформация = НСтр("ru = 'Изменение варианта использования сервиса 1С:Кабинет сотрудника на использование в локальной сети предприятия.'");
		КонецЕсли;
	КонецЕсли;
	
	Элементы.ДекорацияИнформацияОписание.Заголовок = ЗаголовокИнформация;
	ОбновитьСообщениеОПроверке(ЭтаФорма);
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовШапкиФормы

&НаКлиенте
Процедура АдресПриложенияПриИзменении(Элемент)
	СброситьНастройкиПроверки();
	ОбновитьСообщениеОПроверке(ЭтаФорма);
КонецПроцедуры

&НаКлиенте
Процедура КлючИдентификаторКлиентаПриИзменении(Элемент)
	СброситьНастройкиПроверки();
	ОбновитьСообщениеОПроверке(ЭтаФорма);
КонецПроцедуры

&НаКлиенте
Процедура КлючСекретКлиентаПриИзменении(Элемент)
	СброситьНастройкиПроверки();
	ОбновитьСообщениеОПроверке(ЭтаФорма);
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура ЗагрузитьНастройкиИзФайла(Команда)
	
	ДиалогВыбораФайла = Новый ДиалогВыбораФайла(РежимДиалогаВыбораФайла.Открытие);
	ДиалогВыбораФайла.Заголовок = НСтр("ru='Выберите файл с настройками подключения'");
	ДиалогВыбораФайла.Фильтр = НСтр("ru = 'Файл с настройками (*.json)|*.json'");
	ОбработчикЗавершения = Новый ОписаниеОповещения("ФайлНастроекПослеВыбора", ЭтотОбъект);
	ФайловаяСистемаКлиент.ПоказатьДиалогВыбора(ОбработчикЗавершения, ДиалогВыбораФайла);
	
КонецПроцедуры

&НаКлиенте
Процедура ПрименитьНастройки(Команда)
	
	Если Не ЗначениеЗаполнено(АдресПриложения) 
		Или Не ЗначениеЗаполнено(КлючИдентификаторКлиента)
		Или Не ЗначениеЗаполнено(КлючСекретКлиента) Тогда
		ТекстПредупреждения = НСтр("ru = 'Для изменения настроек заполните данные в форме'");
		ПоказатьПредупреждение( ,ТекстПредупреждения);
		Возврат;
	КонецЕсли;
	
	Если НастройкиПравильные Тогда
		ТекстВопроса = НСтр("ru = 'Применить новые настройки подключения?'");
		ОбработчикРезультата = Новый ОписаниеОповещения("ПриОтветеНаВопросПрименитьНастройки", ЭтотОбъект);
		ПоказатьВопрос(ОбработчикРезультата, ТекстВопроса, РежимДиалогаВопрос.ДаНет, ,КодВозвратаДиалога.Нет);
	Иначе
		Если Не ПроверкаВыполнялась Тогда
			ТекстПредупреждения = НСтр("ru = 'Необходимо выполнить проверку новых настроек.'");
		Иначе
			ТекстПредупреждения = НСтр("ru = 'Новые настройки не прошли проверку.'");
		КонецЕсли;
		ПоказатьПредупреждение(,ТекстПредупреждения);
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ПроверитьНастройки(Команда)
	
	Если Не ЗначениеЗаполнено(АдресПриложения) 
		Или Не ЗначениеЗаполнено(КлючИдентификаторКлиента)
		Или Не ЗначениеЗаполнено(КлючСекретКлиента) Тогда
		ТекстПредупреждения = НСтр("ru = 'Заполните данные в форме'");
		ПоказатьПредупреждение( ,ТекстПредупреждения);
		Возврат;
	КонецЕсли;
	
	НачатьПроверкуНастроек();
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

#Область ЗагрузкаНастроекИзФайла

&НаКлиенте
Процедура ФайлНастроекПослеВыбора(ВыбранныеФайлы, ДополнительныеПараметры) Экспорт

	Если ТипЗнч(ВыбранныеФайлы) = Тип("Массив") И ВыбранныеФайлы.Количество() > 0 Тогда
		
		
		СброситьНастройкиПроверки();
		ОбновитьСообщениеОПроверке(ЭтаФорма);
		
		АдресПриложения 			= "";
		КлючИдентификаторКлиента 	= "";
		КлючСекретКлиента 			= "";
		
		Обработчик = Новый ОписаниеОповещения("ФайлНастроекПослеВыбораЗавершение", ЭтотОбъект);
		НачатьСозданиеДвоичныхДанныхИзФайла(Обработчик, ВыбранныеФайлы[0]);
		
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ФайлНастроекПослеВыбораЗавершение(ДвоичныеДанные, ДополнительныеПараметры) Экспорт

	АдресФайла = ПоместитьВоВременноеХранилище(ДвоичныеДанные, УникальныйИдентификатор);
	Результат = НастройкиИзФайлаНаСервере(АдресФайла);
	Если Результат.СообщениеОбОшибке <> Неопределено Тогда
		ПоказатьПредупреждение(,Результат.СообщениеОбОшибке);
	Иначе
		АдресПриложения 			= Результат.Настройки["url"];
		КлючИдентификаторКлиента 	= Результат.Настройки["clientID"];
		КлючСекретКлиента 			= Результат.Настройки["clientSecret"];
	КонецЕсли;

КонецПроцедуры

&НаСервереБезКонтекста
Функция НастройкиИзФайлаНаСервере(АдресФайла)
	
	Результат = Новый Структура("Настройки,СообщениеОбОшибке");
	
	ИмяВременногоФайла = ПолучитьИмяВременногоФайла();
	ДвоичныеДанныеФайла = ПолучитьИзВременногоХранилища(АдресФайла);
	ДвоичныеДанныеФайла.Записать(ИмяВременногоФайла);
	УдалитьИзВременногоХранилища(АдресФайла);
	
	НетНастроек = Ложь;
	ЧтениеJSON = Новый ЧтениеJSON;
	Попытка
		ЧтениеJSON.ОткрытьФайл(ИмяВременногоФайла);
		Настройки = ПрочитатьJSON(ЧтениеJSON, Истина);
		Если Не ЗначениеЗаполнено(Настройки["url"]) Или Не ЗначениеЗаполнено(Настройки["clientID"]) Или Не ЗначениеЗаполнено(Настройки["clientSecret"]) Тогда
			НетНастроек = Истина;
		Иначе
			Результат.Настройки = Настройки;
		КонецЕсли;
	Исключение
		НетНастроек = Истина;
	КонецПопытки;
	
	Если НетНастроек Тогда
		СообщениеОбОшибке = НСтр("ru='Выбранный файл не содержит настроек подключения.'");
		Результат.СообщениеОбОшибке = СообщениеОбОшибке;
	КонецЕсли;
	
	ЧтениеJSON.Закрыть();
	УдалитьФайлы(ИмяВременногоФайла);
	
	Возврат Результат;

КонецФункции

#КонецОбласти

#Область ПроверкаНовыйНастроек

&НаКлиенте
Процедура НачатьПроверкуНастроек()

	ПроверкаВыполнялась = Истина;
	НастройкиПравильные = Ложь;
	СообщениеПроверки = "";
	
	ДлительнаяОперация = ПроверкаНастроекПодключенияНаСервере();
	ПараметрыОжидания = ДлительныеОперацииКлиент.ПараметрыОжидания(ЭтотОбъект);
	ПараметрыОжидания.ВыводитьОкноОжидания = Истина;
	ПараметрыОжидания.ОповещениеПользователя.Показать = Истина;
	ПараметрыОжидания.ОповещениеПользователя.Текст = НСтр("ru = 'Проверка настроек подключения.'");
	
	ОповещениеОЗавершении = Новый ОписаниеОповещения("ПроверкаНастроекЗавершение", ЭтотОбъект);
	ДлительныеОперацииКлиент.ОжидатьЗавершение(ДлительнаяОперация, ОповещениеОЗавершении, ПараметрыОжидания);

КонецПроцедуры

&НаСервере
Функция ПроверкаНастроекПодключенияНаСервере()
	
	Ключи = Новый Структура("ИдентификаторКлиента,СекретКлиента", КлючИдентификаторКлиента, КлючСекретКлиента);
	НастройкиПодключения = Новый Структура("АдресПриложения,Ключи",АдресПриложения, Ключи);
	
	ПараметрыПроверки = Новый Структура;
	ПараметрыПроверки.Вставить("Приложение", Приложение);
	ПараметрыПроверки.Вставить("Настройки", НастройкиПодключения);
	
	ПараметрыВыполненияВФоне = ДлительныеОперации.ПараметрыВыполненияВФоне(УникальныйИдентификатор);
	ПараметрыВыполненияВФоне.Вставить("НаименованиеФоновогоЗадания", НСтр("ru = 'Проверка настроек'"));
	ПараметрыВыполненияВФоне.ОжидатьЗавершение = 0;
	Возврат ДлительныеОперации.ВыполнитьВФоне(
		"ИнтеграцияУправлениеПерсоналомОбмен.ПроверкаНастроекПодключенияФоновоеЗадание",
		ПараметрыПроверки,
		ПараметрыВыполненияВФоне);
	
КонецФункции

&НаКлиенте
Процедура ПроверкаНастроекЗавершение(Результат, ДополнительныеПараметры) Экспорт
	
	Если Результат = Неопределено Тогда
		СообщениеПроверки = НСтр("ru = 'Не удалось выполнить проверку настроек  подключения.'");
		ОбщегоНазначенияКлиент.СообщитьПользователю(СообщениеПроверки);
		Возврат;
	ИначеЕсли Результат.Статус = "Ошибка" Тогда
		СообщениеПроверки = НСтр("ru = 'При выполнении фонового задания возникла ошибка'");
		ТекстСообщения = СтрШаблон("%1: %2%3",СообщениеПроверки, Символы.ПС, Результат.КраткоеПредставлениеОшибки) + Символы.ПС + Результат.КраткоеПредставлениеОшибки;
		ОбщегоНазначенияКлиент.СообщитьПользователю(ТекстСообщения);
		Возврат;
	КонецЕсли;
	
	ОбработатьРезультатПроверки(Результат.АдресРезультата);
	
КонецПроцедуры

#КонецОбласти

&НаСервере
Процедура ОбработатьРезультатПроверки(АдресРезультата)

	Результат = ПолучитьИзВременногоХранилища(АдресРезультата);
	Если ЗначениеЗаполнено(Результат.СообщениеОбОшибке) Тогда
		СообщениеПроверки = Результат.СообщениеОбОшибке;
	ИначеЕсли Результат.КодСостояния = Неопределено Тогда
		СообщениеПроверки = НСтр("ru = 'Не удалось получить ответ сервера. Подробнее см в Журнале регистрации.'");
	ИначеЕсли Результат.КодСостояния = 200 Тогда
		НастройкиПравильные = Истина;
		СообщениеПроверки = НСтр("ru = 'Новые настройки подключения проверены.'");
	ИначеЕсли Результат.КодСостояния = 404 Тогда
		Если Приложение = Перечисления.ПриложенияДляИнтеграции.УправлениеПерсоналом Тогда
			СообщениеПроверки = НСтр("ru = 'Приложение недоступно по указанному адресу. Подробнее см в Журнале регистрации.'");
		Иначе
			СообщениеПроверки = НСтр("ru = 'Сервис недоступен по указанному адресу. Подробнее см в Журнале регистрации.'");
		КонецЕсли;
	Иначе
		СообщениеПроверки = НСтр("ru = 'Не удалось получить ответ сервера. Подробнее см в Журнале регистрации.'");
	КонецЕсли;
	
	ОбновитьСообщениеОПроверке(ЭтаФорма);

КонецПроцедуры

&НаКлиенте
Процедура ПриОтветеНаВопросПрименитьНастройки(КодВозврата, ДополнительныеПараметры) Экспорт

	Если КодВозврата <> КодВозвратаДиалога.Да Тогда
		Возврат;
	КонецЕсли;
	
	Если СохранитьНастройкиНаСервере() Тогда
		Закрыть(Истина);
	Иначе
		ТекстПредупреждения = НСтр("ru = 'Ошибка применения новых настроек. Подробнее см в Журнале регистрации.'");
		ПоказатьПредупреждение(,ТекстПредупреждения);
	КонецЕсли;

КонецПроцедуры

&НаСервере
Функция СохранитьНастройкиНаСервере()

	НастройкиСохранены = Истина;
	
	НачатьТранзакцию();
	Попытка
		
		Если Приложение = Перечисления.ПриложенияДляИнтеграции.УправлениеПерсоналом Тогда
			Интеграция1СПерсонал.СохранитьНовыеНастройкиПодключения(АдресПриложения);
		Иначе
			ИнтеграцияКабинетСотрудника.СохранитьНовыеНастройкиПодключения(АдресПриложения);
		КонецЕсли;
		
		УстановитьПривилегированныйРежим(Истина);
		Ключи = Новый Структура("ИдентификаторКлиента,СекретКлиента", КлючИдентификаторКлиента, КлючСекретКлиента);
		ИнтеграцияУправлениеПерсоналом.СохранитьКлючиПриложения(Приложение, Ключи);
		ИнтеграцияУправлениеПерсоналом.УдалитьТокенПриложения(Приложение);
		УстановитьПривилегированныйРежим(Ложь); 
		
		ЗафиксироватьТранзакцию();
		
	Исключение
		ОтменитьТранзакцию();
		НастройкиСохранены = Ложь;
		ЗаписьЖурналаРегистрации(ИнтеграцияУправлениеПерсоналом.ИменаСобытийЖР(Приложение).ПрочиеСобытия,
			УровеньЖурналаРегистрации.Ошибка,,, ОбработкаОшибок.ПодробноеПредставлениеОшибки(ИнформацияОбОшибке()));
	КонецПопытки;
	
	Возврат НастройкиСохранены;
	
КонецФункции

&НаКлиентеНаСервереБезКонтекста
Процедура ОбновитьСообщениеОПроверке(Форма)
	
	Если Не Форма.ПроверкаВыполнялась Тогда
		Форма.СостояниеПроверкиКартинка = 1;
		Форма.СостояниеПроверкиОписание = Форма.СообщениеПроверкаНеВыполнялась;
		Форма.Элементы.СостояниеПроверкиОписание.ЦветТекста = Форма.ЦветСтиляПоясняющийТекст;
	ИначеЕсли Форма.НастройкиПравильные Тогда
		Форма.СостояниеПроверкиКартинка = 0;
		Форма.СостояниеПроверкиОписание = Форма.СообщениеПроверки;
		Форма.Элементы.СостояниеПроверкиОписание.ЦветТекста = Форма.ЦветСтиляИнформационнойНадписи;
	Иначе
		Форма.СостояниеПроверкиКартинка = 2;
		Форма.СостояниеПроверкиОписание = Форма.СообщениеПроверки;
		Форма.Элементы.СостояниеПроверкиОписание.ЦветТекста = Форма.ЦветСтиляПоясняющийОшибкуТекст;
	КонецЕсли;

КонецПроцедуры

&НаКлиенте
Процедура СброситьНастройкиПроверки()
	
	ПроверкаВыполнялась = Ложь;
	НастройкиПравильные = Ложь;
	
КонецПроцедуры

#КонецОбласти
