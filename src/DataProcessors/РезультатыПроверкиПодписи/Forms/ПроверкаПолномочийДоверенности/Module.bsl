// @strict-types

#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	Если ОбщегоНазначенияКлиентСервер.СвойствоСтруктуры(Параметры, "ЭтоОперацияЭДО", Ложь) Тогда
		Заголовок = НСтр("ru = 'Действие не выполнено'");
	Иначе
		Элементы.ДекорацияПредупреждение.Видимость = Ложь;
	КонецЕсли;
	
	Параметры.Свойство("ПодписанныйОбъект", ПодписанныйОбъект);
	Параметры.Свойство("ХешПодписи", ХешПодписи);
	РезультатПроверки = МашиночитаемыеДоверенности.РезультатПроверкиПодписи(ПодписанныйОбъект, ХешПодписи);
	
	Если РезультатПроверки.ПротоколПроверки = Неопределено Тогда
		Отказ = Истина;
		Возврат;
	КонецЕсли;
	
	ПроверкаМЧД = РезультатПроверки.ПротоколПроверки.ПроверкаМЧД;
	ПроверкаПолномочий = ПроверкаМЧД.ПроверкаПолномочий;
	ПроверкаРодительскихПолномочий = ПроверкаМЧД.РодительскиеПолномочияСоответствуютПолномочиямПередоверия;
	ЭтоПередоверие = ЗначениеЗаполнено(ПроверкаРодительскихПолномочий) 
		И ЗначениеЗаполнено(ПроверкаРодительскихПолномочий.НомерДоверенности);
	
	Доверенность = ?(ЗначениеЗаполнено(Параметры.НоваяДоверенность),
						Параметры.НоваяДоверенность,
						РезультатПроверки.Доверенность);
	
	Если ЭтоПередоверие Тогда
		
		НомерРодительскойДоверенности = ПроверкаРодительскихПолномочий.НомерДоверенности;
		ПолномочияПодтверждены = ПроверкаПолномочий.Успех
			И ПроверкаМЧД.РодительскиеПолномочияСоответствуютПолномочиямПередоверия.Успех;
		
		ЗаполнитьЦепочкуДоверенностей();
		ЗаполнитьТабличныйДокументМЧД();
		
		
	Иначе
		
		ПолномочияПодтверждены = ПроверкаПолномочий.Успех;
		
		Если ТипЗнч(Доверенность) = Тип("СправочникСсылка.МЧД003") Тогда
			ПолномочияСтрокой = Справочники.МЧД003.ТекстПолномочий(Доверенность);
		Иначе
			ПолномочияСтрокой = МашиночитаемыеДоверенности.ТекстПолномочий(, Доверенность);
		КонецЕсли;
		
	КонецЕсли;
	
	Если ПолномочияПодтверждены = Неопределено Тогда
		Отказ = Истина;
		Возврат;
	КонецЕсли;
	
	ПредыдущееЗначениеПроверки = ПолномочияПодтверждены;
	
	Сообщение = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(ПодписанныйОбъект, "ВладелецФайла");
	ЭлектронныйДокумент = ЭлектронныеДокументыЭДО.ЭлектронныйДокументСообщенияЭДО(Сообщение);
	Подписи = ЭлектронныеДокументыЭДО.УстановленныеПодписиСУчетомДоверенностей(Сообщение);
	
	Для Каждого Подпись Из Подписи Цикл
		
		Если Подпись.СвойстваПодписи.ХешПодписи = ХешПодписи Тогда
			
			Сертификат = Подпись.СвойстваПодписи.Сертификат.Получить();
			Подписант = Подпись.СвойстваПодписи.Владелец;
			Прервать;
			
		КонецЕсли;
		
	КонецЦикла;
	
	ТекстПричины = НСтр("ru = 'В документе не проверены полномочия доверенности'");
	
	Если ПустаяСтрока(Параметры.ТекстОшибки) Тогда
		
		Если НЕ ПолномочияПодтверждены Тогда
			
			ТекстОшибки = ПроверкаПолномочий.Ошибка;
			
			Если НЕ ПустаяСтрока(ТекстОшибки) Тогда
				ТекстПричины = ТекстОшибки;
			КонецЕсли;
			
		КонецЕсли;
		
	Иначе
		
		ТекстПричины = Параметры.ТекстОшибки;
		
	КонецЕсли;
	
	НастройкаВидимостиФормы(ЭтоПередоверие);
	
	Если Элементы.ДекорацияПредупреждение.Видимость Тогда
		
		ШаблонПредупреждения = НСтр("ru = 'Не удалось выполнить действие. %1.
			|Выполните ручную проверку и повторите действие.'");
		Элементы.ДекорацияПредупреждение.Заголовок = СтрШаблон(ШаблонПредупреждения, ТекстПричины);
		
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовШапкиФормы

&НаКлиенте
Процедура ЭлектронныйДокументНажатие(Элемент, СтандартнаяОбработка)
	ПоказатьЗначение(, ЭлектронныйДокумент);
КонецПроцедуры

&НаКлиенте
Процедура СертификатНажатие(Элемент, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	АдресДанныхСертификата = АдресДанныхСертификата();
	
	Если АдресДанныхСертификата <> Неопределено Тогда
		ИнтеграцияБСПБЭДКлиент.ПоказатьСертификат(АдресДанныхСертификата);
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовТаблицыФормыДоверенности

&НаКлиенте
Процедура ДоверенностиПриАктивизацииСтроки(Элемент)
	
	Если Элементы.Доверенности.ТекущиеДанные = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	Доверенность = Элементы.Доверенности.ТекущиеДанные.Доверенность;
	ПодключитьОбработчикОжидания("ЗаполнитьТабличныйДокументМЧДНаКлиенте", 0.1, Истина);
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура Принять(Команда)
	
	Если ПредыдущееЗначениеПроверки <> ПолномочияПодтверждены Тогда
		
		РезультатПроверки = Новый Структура();
		РезультатПроверки.Вставить("ПодписанныйОбъект", ПодписанныйОбъект);
		РезультатПроверки.Вставить("ХешПодписи", ХешПодписи);
		РезультатПроверки.Вставить("ПолномочияПодтверждены", ПолномочияПодтверждены);
		РезультатПроверки.Вставить("ТекстОшибки", "");
		РезультатПроверки.Вставить("НомерРодительскойДоверенности", НомерРодительскойДоверенности);
		
		Если ПредыдущееЗначениеПроверки = Истина И НЕ ПолномочияПодтверждены Тогда
			
			Оповещение = Новый ОписаниеОповещения(
				"ПослеУточненияПричиныНесоответствияПолномочий", ЭтотОбъект, РезультатПроверки);
			ОткрытьФорму("Обработка.РезультатыПроверкиПодписи.Форма.ВводПричиныНесоответствияПолномочий",,
				ЭтотОбъект,,,, Оповещение, РежимОткрытияОкнаФормы.БлокироватьОкноВладельца);
				
		Иначе
			
			Закрыть(ОбщегоНазначенияКлиентСервер.ЗначениеВМассиве(РезультатПроверки));
			
		КонецЕсли;
		
	Иначе
		
		Закрыть();
		
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаСервере
Процедура НастройкаВидимостиФормы(ЭтоПередоверие)
		
	Элементы.ДекорацияЗаголовокПередоверия.Видимость = ЭтоПередоверие;
	Элементы.ГруппаПередоверия.Видимость = ЭтоПередоверие;
	Элементы.ПолномочияПередоверияПодтверждены.Видимость = ЭтоПередоверие;
	
	Элементы.ГруппаДеталиПроверки.ОтображатьЗаголовок = Не ЭтоПередоверие;
	Элементы.ГруппаДоверенность.Видимость = Не ЭтоПередоверие;
	Элементы.ПолномочияПодтверждены.Видимость = Не ЭтоПередоверие;

КонецПроцедуры

&НаСервере
Процедура ЗаполнитьЦепочкуДоверенностей()
	
	МассивНомеров = СтрРазделить(НомерРодительскойДоверенности, ",");
	
	Запрос = Новый Запрос();
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	Доверенности.Ссылка КАК Доверенность,
	|	Доверенности.НомерДоверенности,
	|	Доверенности.НомерРодительскойДоверенности,
	|	ПравилаПроверкиПолномочийПоМЧД.ПравилоПроверки КАК ПравилоПроверки,
	|	Доверенности.XMLфайлМЧД,
	|	Доверенности.ДатаВыдачи
	|ИЗ
	|	Справочник.МашиночитаемыеДоверенностиКонтрагентов КАК Доверенности
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ПравилаПроверкиПолномочийПоМЧД КАК ПравилаПроверкиПолномочийПоМЧД
	|		ПО Доверенности.Ссылка = ПравилаПроверкиПолномочийПоМЧД.Доверенность
	|ГДЕ
	|	Доверенности.НомерДоверенности В (&МассивНомеров)
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	Доверенности.Ссылка КАК Доверенность,
	|	Доверенности.НомерДоверенности,
	|	Доверенности.НомерРодительскойДоверенности,
	|	ПравилаПроверкиПолномочийПоМЧД.ПравилоПроверки КАК ПравилоПроверки,
	|	Доверенности.XMLфайлМЧД,
	|	Доверенности.ДатаВыдачи
	|ИЗ
	|	Справочник.МашиночитаемыеДоверенностиКонтрагентов КАК Доверенности
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ПравилаПроверкиПолномочийПоМЧД КАК ПравилаПроверкиПолномочийПоМЧД
	|		ПО Доверенности.Ссылка = ПравилаПроверкиПолномочийПоМЧД.Доверенность
	|ГДЕ
	|	Доверенности.Ссылка = &Ссылка";
	Запрос.УстановитьПараметр("МассивНомеров", МассивНомеров);
	Запрос.УстановитьПараметр("Ссылка", Доверенность);
	РезультатЗапроса = Запрос.Выполнить();
	
	Выборка = РезультатЗапроса.Выбрать();
	
	НомерДоверенности = "";
	Пока Выборка.НайтиСледующий(НомерДоверенности, "НомерРодительскойДоверенности") Цикл
		НомерДоверенности = Выборка.НомерДоверенности;
		ДобавитьСтрокуВТаблицуДоверенностей(Выборка);
		Выборка.Сбросить();
	КонецЦикла;
	
КонецПроцедуры

&НаСервере
Процедура ДобавитьСтрокуВТаблицуДоверенностей(Выборка)
	
	НоваяСтрока = Доверенности.Добавить();
	ЗаполнитьЗначенияСвойств(НоваяСтрока, Выборка);
	
	ДвоичныеДанные = Выборка.XMLфайлМЧД.Получить();
	РезультатЧтения = МашиночитаемыеДоверенности.ДанныеИзФайлаОбмена(ДвоичныеДанные);
	
	Если НЕ РезультатЧтения.Успех Тогда
		Возврат;
	КонецЕсли;
	
	СтруктураДанных = РезультатЧтения.ДанныеДоверенности;
	
	Кому = Новый Структура("Фамилия, Имя, Отчество", "", "", "");
	ОтКого = Новый Структура("Фамилия, Имя, Отчество", "", "", "");
	
	Для Каждого Строка Из СтруктураДанных.ФИО Цикл
		Если Строка.Владелец = Перечисления.СубъектыДоверенности.ДоверительРук
			Или Строка.Владелец = Перечисления.СубъектыДоверенности.ДоверительФЛ Тогда
			ОтКого = Строка;
		КонецЕсли; 
	КонецЦикла;
	
	КомуСтрока = "";
	Для Каждого Представитель Из СтруктураДанных.Представители Цикл
		ЗаполнитьЗначенияСвойств(Кому, Представитель);
		ПредставительОрганизация = ?(Не СтрЧислоВхождений(КомуСтрока, Представитель.ПредставительЮЛ_НаимОрг), 
										Представитель.ПредставительЮЛ_НаимОрг,
										"");
		КомуСтрока = КомуСтрока
					+ ПредставительОрганизация
					+ Символы.ПС
					+ ФизическиеЛицаКлиентСервер.ФамилияИнициалы(Кому)
					+ Символы.ПС;
	КонецЦикла;
	
	ОтКогоСтрока = ФизическиеЛицаКлиентСервер.ФамилияИнициалы(ОтКого);
	
	Если ЗначениеЗаполнено(СтруктураДанных.ДоверительЮЛ_НаимОрг) Тогда
		ОтКогоСтрока = СтруктураДанных.ДоверительЮЛ_НаимОрг + Символы.ПС + ОтКогоСтрока;
	КонецЕсли;
	
	НоваяСтрока.Кому = КомуСтрока;
	НоваяСтрока.ОтКого = ОтКогоСтрока;
	НоваяСтрока.Номер = Доверенности.Количество();
	
КонецПроцедуры

&НаКлиенте
Процедура ЗаполнитьТабличныйДокументМЧДНаКлиенте()
	
	ЗаполнитьТабличныйДокументМЧД();
	
КонецПроцедуры

&НаСервере
Процедура ЗаполнитьТабличныйДокументМЧД()
	
	XMLфайлМЧД = МашиночитаемыеДоверенности.ПолныеДанныеДоверенностиНаСервереМЧД(Доверенность);
	РезультатФормирования = МашиночитаемыеДоверенности.ТабличныйДокументМЧД(XMLфайлМЧД, Истина);
	
	Если РезультатФормирования <> Неопределено Тогда
		ПолеПросмотра = РезультатФормирования.ПредставлениеДокумента;
	КонецЕсли;
			
КонецПроцедуры

&НаКлиенте
Процедура ПослеУточненияПричиныНесоответствияПолномочий(Результат, РезультатПроверки) Экспорт
	
	Если ТипЗнч(Результат) = Тип("Строка") Тогда
		
		РезультатПроверки.ТекстОшибки = Результат;
		Закрыть(ОбщегоНазначенияКлиентСервер.ЗначениеВМассиве(РезультатПроверки));
		
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Функция АдресДанныхСертификата()
	Возврат ПоместитьВоВременноеХранилище(Сертификат, УникальныйИдентификатор);
КонецФункции

#КонецОбласти
