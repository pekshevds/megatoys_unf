#Область ОписаниеПеременных

&НаКлиенте
Перем ШиринаКнопкиОтправить;

&НаКлиенте
Перем КонтекстЭДОКлиент Экспорт;

#КонецОбласти



///////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ ОБРАБОТЧИКИ СОБЫТИЙ ФОРМЫ


&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	Если НЕ ЗначениеЗаполнено(Объект.Организация) Тогда
		
		Если ЗначениеЗаполнено(Параметры.Организация) Тогда
			Объект.Организация = Параметры.Организация;
		Иначе
			Организация = УправлениеНебольшойФирмойПовтИсп.ПолучитьЗначениеПоУмолчаниюПользователя(Пользователи.ТекущийПользователь(), "ОсновнаяОрганизация");
			Если Не ЗначениеЗаполнено(Организация) Тогда
				Организация = Справочники.Организации.ПредопределеннаяОрганизация();
			КонецЕсли;
		КонецЕсли;
		
	КонецЕсли;
	
	Если НЕ ЗначениеЗаполнено(Объект.СобытиеКалендаря) Тогда
		Объект.СобытиеКалендаря = Параметры.СобытиеКалендаря;
	КонецЕсли;
	
	Если НЕ ЗначениеЗаполнено(Объект.СостояниеСобытия) Тогда
		Если ЗначениеЗаполнено(Параметры.СостояниеСобытия) Тогда
			Объект.СостояниеСобытия = Параметры.СостояниеСобытия;
		Иначе
			Объект.СостояниеСобытия = КалендарьОтчетности.ПолучитьСостояниеСобытияКалендаря(
				Объект.Организация,
				Объект.СобытиеКалендаря);
			
		КонецЕсли;
	КонецЕсли;
	
	
	Если НЕ ЗначениеЗаполнено(ДокументОтчетности) Тогда
		Если ЗначениеЗаполнено(Параметры.ДокументОтчетности) Тогда
			ДокументОтчетности = Параметры.ДокументОтчетности;
		Иначе
			ДокументОтчетности = РегламентированнаяОтчетностьУСН.ПолучитьДокументРегламентированнойОтчетностиПоСобытиюКалендаря(Объект.Организация, Объект.СобытиеКалендаря);
		КонецЕсли;
	КонецЕсли;
	
	Если РегламентированнаяОтчетностьПереопределяемый.ДоступнаОтправкаРегламентированногоОтчета() Тогда
		ТекущийСпособСдачи = 1;
	Иначе
		Элементы.ОтправитьОтчетностьЧерезИнтернетВыбор.Видимость = Ложь;
	    Элементы.ОтправитьОтчетностьЧерезИнтернетВыбор1.Видимость = Ложь;	
		ТекущийСпособСдачи = 2;
	КонецЕсли;
	
	ПереключитьСпособСдачи(ТекущийСпособСдачи);
	
	// Обработка ситуации, если статус отправки "отправлен", то проверяем, нет ли каких-нибудь изменений
	Если Объект.СостояниеСобытия = Перечисления.СостоянияСобытийКалендаря.ПолучитьПодтверждение Тогда
		
		РегламентированнаяОтчетностьУСН.ОбновитьСтатусыОтправленныхОтчетов();
		
		Объект.СостояниеСобытия = КалендарьОтчетности.ПолучитьСостояниеСобытияКалендаря(
				Объект.Организация,
				Объект.СобытиеКалендаря);
	КонецЕсли;
	
	Заголовок = Объект.СобытиеКалендаря.Наименование;
	
	УстановитьПривилегированныйРежим(Истина);
	РежимИспользованияИБ = Константы.РежимИспользованияИнформационнойБазы.Получить();
	УстановитьПривилегированныйРежим(Ложь);
	
	ИспользуетсяДКО = Истина;
	
	Если РежимИспользованияИБ = Перечисления.РежимыИспользованияИнформационнойБазы.Демонстрационный Тогда
		Элементы.ОтправитьВКонтролирующийОрган.Заголовок = НСтр("ru='Отправить (в демо не доступно)'"); 
		Элементы.ОтправитьВКонтролирующийОрган1.Заголовок = НСтр("ru='Отправить (в демо не доступно)'");
	Иначе
		
		ПроверитьВозможностьОтправки();
		
	КонецЕсли;
	
	
	ДатыСобытия = ОбщегоНазначения.ЗначенияРеквизитовОбъекта(Объект.СобытиеКалендаря, "ДатаНачалаДокументов,ДатаОкончанияДокументов");
	ПериодСобытия = ДатыСобытия.ДатаНачалаДокументов;
	СдаетсяЕФС1 = ПериодСобытия >= РегламентированнаяОтчетностьУСН.ДатаОбязательногоПримененияЕНП();
	
	ПериодЗадачиПредставление = ПредставлениеПериода(
		ДатыСобытия.ДатаНачалаДокументов,
		КонецДня(ДатыСобытия.ДатаОкончанияДокументов),
		"ФП=Истина");
		
		Элементы.ДекорацияОтступ18.Видимость = Элементы.ЗапроситьНаличиеОтвета.Видимость;
	
	Реквизиты = ОбщегоНазначения.ЗначенияРеквизитовОбъекта(
			ДокументОтчетности,
			"ДатаНачала,ДатаОкончания,ВыбраннаяФорма");
			
			Если ЗначениеЗаполнено(ДокументОтчетности) И 
				((Реквизиты.ДатаОкончания >= '20150101' И Реквизиты.ВыбраннаяФорма = "ФормаОтчета2014Кв1")
					ИЛИ (Реквизиты.ДатаОкончания >= '20160101' И Реквизиты.ВыбраннаяФорма = "ФормаОтчета2015Кв1")) Тогда
		Элементы.ГруппаДекорацииПредупреждение.Видимость = Истина;
	КонецЕсли;
	
	ЗаписьТарифа = РегистрыСведений.ПрименяемыеТарифыСтраховыхВзносовУНФ.ПолучитьПоследнее(ОбщегоНазначения.ЗначениеРеквизитаОбъекта(Объект.СобытиеКалендаря, "ДатаДокументаОбработкиСобытия"), Новый Структура("ГоловнаяОрганизация", Объект.Организация));
	Если ЗаписьТарифа.ВидТарифа = РегламентированнаяОтчетностьПереопределяемый.СсылкаНаОбъектПоИдентификатору("Справочник.ВидыТарифовСтраховыхВзносовУНФ", "УпрощенныйНалоговыйРежимПроизводство") Тогда
		Элементы.ГруппаДекорацииОписания19.Видимость = Истина;
		Если ЗначениеЗаполнено(ДокументОтчетности) И Реквизиты.ДатаОкончания >= '20150101' Тогда
			Элементы.ДекорацияОписаниеРаботы6.Заголовок = СтрЗаменить(Элементы.ДекорацияОписаниеРаботы6.Заголовок, "4.3", "4.1");
		КонецЕсли;
	Иначе
		Элементы.ГруппаДекорацииОписания19.Видимость = Ложь;
	КонецЕсли;
	
	РегламентированнаяОтчетностьКлиентСервер.ПриИнициализацииФормыРегламентированногоОтчета(ЭтаФорма, "ФСС");
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	
	УстановитьТекущуюЗакладку(ЭтаФорма, Объект, СдаетсяЕФС1);
	
	УстановитьЗаголовокФормыПоТекущейСтранице();
	
	ОписаниеОповещения = Новый ОписаниеОповещения("ПриОткрытииПослеПолученияКонтекста", ЭтаФорма);
	ДокументооборотСКОКлиент.ПолучитьКонтекстЭДО(ОписаниеОповещения);
	
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытииПослеПолученияКонтекста(Результат, ДополнительныеПараметры) Экспорт
	
	КонтекстЭДОКлиент = Результат.КонтекстЭДО;
	
КонецПроцедуры


&НаКлиенте
Процедура ОбработкаОповещения(ИмяСобытия, Параметр, Источник)
	
	Если ИмяСобытия = "ПрикрепленаДоверенность" И Параметр = Объект.Организация Тогда
		Элементы.ОтправитьВКонтролирующийОрган.Заголовок = НСтр("ru='Идет проверка доверенности'");    
		Элементы.ОтправитьВКонтролирующийОрган1.Заголовок = НСтр("ru='Идет проверка доверенности'");
	ИначеЕсли ИмяСобытия = "ИзмененаЗаявкаЭДО" Тогда
		Если Параметр.Организация = Объект.Организация Тогда
			Если Параметр.ЕстьАктуальнаяЗаявка Тогда
				Элементы.ОтправитьВКонтролирующийОрган.Заголовок = НСтр("ru='Отправить'");       
				Элементы.ОтправитьВКонтролирующийОрган1.Заголовок = НСтр("ru='Отправить'"); 
				Элементы.ОтправитьВКонтролирующийОрган.Доступность = Истина;      
				Элементы.ОтправитьВКонтролирующийОрган1.Доступность = Истина;
				Элементы.ОформитьЗаявку.Видимость = Ложь;  
				Элементы.ОформитьЗаявку1.Видимость = Ложь;
			Иначе
				Элементы.ОтправитьВКонтролирующийОрган.Доступность = Ложь;
				Элементы.ОтправитьВКонтролирующийОрган1.Доступность = Ложь;
				Элементы.ОтправитьВКонтролирующийОрган.Заголовок = НСтр("ru='Отправить (нет заявки)'");     
				Элементы.ОтправитьВКонтролирующийОрган1.Заголовок = НСтр("ru='Отправить (нет заявки)'"); 			
				Элементы.ОформитьЗаявку.Видимость = Истина;      
				Элементы.ОформитьЗаявку1.Видимость = Истина;
			КонецЕсли;
		КонецЕсли;
	ИначеЕсли ИмяСобытия = "ИзмененаТекущаяОрганизация" Тогда
		Если Окно.Основное Тогда
			ФайловаяСистемаКлиент.ОткрытьНавигационнуюСсылку("e1cib/navigationpoint/НалогиИОтчетность");
		Иначе
			Закрыть();
		КонецЕсли;
	ИначеЕсли ИмяСобытия = "ИзменениеСостоянияСобытияКалендаря" Тогда
		Если Параметр = Объект.СобытиеКалендаря
				И Источник <> ЭтаФорма
				И Окно<> Неопределено
				И Не Окно.Основное Тогда
			Закрыть();
		КонецЕсли;
	ИначеЕсли ИмяСобытия = "Завершение автообмена с сервером ФСС" Тогда
		Если ЗначениеЗаполнено(Источник) Тогда
			ОтправитьОтчетностьНаСервере();
			УстановитьСтраницуОжидатьПодтверждения(ЭтаФорма, СдаетсяЕФС1);
			УстановитьЗаголовокФормыПоТекущейСтранице();
		КонецЕсли;
	ИначеЕсли ИмяСобытия = "СозданоЗаявлениеНаПодключениеКЭДОСКО" Тогда
		ПроверитьВозможностьОтправки();
	КонецЕсли;
	
КонецПроцедуры



///////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ ОБРАБОТЧИКИ СОБЫТИЙ ЭЛЕМЕНТОВ ФОРМЫ

&НаКлиенте
Процедура ОтправитьОтчетностьЧерезИнтернетВыбор(Команда)
	
	Если ТекущийСпособСдачи = 2 Тогда
		ПереключитьСпособСдачи(1);
	Иначе
		ШиринаКнопкиОтправить = 5;
		ПодключитьОбработчикОжидания("АнимацияОтправить", 0.1, Истина);
	КонецЕсли;
	
	
КонецПроцедуры

&НаКлиенте
Процедура ПодатьОтчетностьСамостоятельно(Команда)
	
	Если ТекущийСпособСдачи = 1 Тогда
		ПереключитьСпособСдачи(2);
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура СохранитьФайлВыгрузки(Команда)
	
	РегламентированнаяОтчетностьУСНКлиент.СохранитьФайлВыгрузкиОтчетности(ДокументОтчетности);
	
КонецПроцедуры

&НаКлиенте
Процедура РаспечататьДекларацию(Команда)
	
	ПараметрыФормыДокумента = ПолучитьДанныеОткрытияФормыФСС(ДокументОтчетности);
	ПараметрыФормы = Новый Структура(
	"мДатаНачалаПериодаОтчета,мДатаКонцаПериодаОтчета,мПериодичность,Организация,мВыбраннаяФорма,мСохраненныйДок",
	ПараметрыФормыДокумента.ДатаНачала,
	ПараметрыФормыДокумента.ДатаОкончания,
	ПараметрыФормыДокумента.Периодичность,
	Объект.Организация,
	ПараметрыФормыДокумента.ВыбраннаяФорма,
	ДокументОтчетности);
	
	Если ПериодСобытия >= РегламентированнаяОтчетностьУСН.ДатаОбязательногоПримененияЕНП() Тогда
		Форма = ПолучитьФорму("Отчет.РегламентированныйОтчетЕФС1ОСС.Форма."+ПараметрыФормыДокумента.ВыбраннаяФорма, ПараметрыФормы);		
	Иначе
		Форма = ПолучитьФорму("Отчет.РегламентированныйОтчет4ФСС.Форма."+ПараметрыФормыДокумента.ВыбраннаяФорма, ПараметрыФормы);
	КонецЕсли;
	Форма.Печать("ПоказатьБланк");
	
КонецПроцедуры

&НаСервереБезКонтекста
Функция ПолучитьДанныеОткрытияФормыФСС(ДокументОтчетности)
	
	Возврат ОбщегоНазначения.ЗначенияРеквизитовОбъекта(
			ДокументОтчетности,
			"ДатаНачала,ДатаОкончания,Периодичность,ВыбраннаяФорма");
	
КонецФункции

&НаКлиенте
Процедура ОшибкиСдачи(Команда)
	ЭлектронныйДокументооборотСКонтролирующимиОрганамиКлиент.ПоказатьПротоколОтправки(ДокументОтчетности, "ФСС");
КонецПроцедуры


&НаКлиенте
Процедура ОбновитьСтатус(Команда)
	
	ОписаниеОповещения = Новый ОписаниеОповещения("ОжиданиеЗапросаЗавершение", ЭтаФорма);
	
	КонтекстЭДОКлиент.ОбновитьРезультатОтправленногоОтчетаФСС(ЭтаФорма, ОписаниеОповещения);
		
	
КонецПроцедуры

&НаКлиенте
Процедура ОжиданиеЗапросаЗавершение(Результат, ДополнительныеПараметры) Экспорт
	
	БылаПопыткаПолученияРезультатаОтСервераФСС = Результат.БылаПопыткаПолученияРезультатаОтСервераФСС;
	ПолученРезультатОтСервераФСС = Результат.ПолученРезультатОтСервераФСС;
	
	Если БылаПопыткаПолученияРезультатаОтСервераФСС И ПолученРезультатОтСервераФСС Тогда
		ПроверитьСтатусОтчета();
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура ПроверитьСтатусОтчета()
	
	РегламентированнаяОтчетностьУСН.ОбновитьСтатусыОтправленныхОтчетов();
	
	Объект.СостояниеСобытия = КалендарьОтчетности.ПолучитьСостояниеСобытияКалендаря(
		Объект.Организация,
		Объект.СобытиеКалендаря);
	
	УстановитьТекущуюЗакладку(ЭтаФорма, Объект, СдаетсяЕФС1);
	
КонецПроцедуры

&НаКлиенте
Процедура ИсторияОбмена(Команда)
	ПоказатьЗначение(,ПолучитьЦиклОбмена(ДокументОтчетности));
КонецПроцедуры

&НаСервереБезКонтекста
Функция ПолучитьЦиклОбмена(Док) 
	
	Запрос = Новый Запрос(
	"ВЫБРАТЬ ПЕРВЫЕ 1
	|	ЦиклыОбмена.Ссылка
	|ИЗ
	|	Справочник.ЦиклыОбмена КАК ЦиклыОбмена
	|ГДЕ
	|	ЦиклыОбмена.Предмет = &ДокРО
	|
	|УПОРЯДОЧИТЬ ПО
	|	ЦиклыОбмена.ДатаСоздания УБЫВ");
	Запрос.УстановитьПараметр("ДокРО", Док);
	
	Результат = Запрос.Выполнить().Выбрать();
	
	Если Результат.Следующий() Тогда
		Возврат Результат.Ссылка;
	Иначе
		Возврат Неопределено;
	КонецЕсли;
	
КонецФункции




// -----------------------------------------------------------------------------
// События переходов

&НаКлиенте
Процедура ПереходЗаполнение(Команда)
	
	Объект.СостояниеСобытия = ПредопределенноеЗначение("Перечисление.СостоянияСобытийКалендаря.Заполнить");
	
	КалендарьОтчетности.ЗаписатьСостояниеСобытияКалендаря(
		Объект.Организация,
		Объект.СобытиеКалендаря,
		Объект.СостояниеСобытия,
		"");
	
	Оповестить("ИзменениеСостоянияСобытияКалендаря", Объект.СобытиеКалендаря, ЭтаФорма);
	ПараметрыФормы = Новый Структура("Организация,СобытиеКалендаря", Объект.Организация,Объект.СобытиеКалендаря);
	
	КалендарьОтчетностиКлиент.ОткрытьФормуНачалаЗаполнения(ЭтаФорма,ПараметрыФормы);
	Закрыть();
	
КонецПроцедуры

&НаКлиенте
Процедура ПереходДекларацияПоУСН(Элемент)
	
	Объект.СостояниеСобытия = ПредопределенноеЗначение("Перечисление.СостоянияСобытийКалендаря.Отправить");
	
	ЗафиксироватьПереходкОтправке(Объект.Организация, Объект.СобытиеКалендаря, Объект.СостояниеСобытия);
		
	ДатаСменыСостояния = ТекущаяДата();
	
	УстановитьСтраницуПросмотраРезультата(ЭтаФорма, СдаетсяЕФС1);
	УстановитьЗаголовокФормыПоТекущейСтранице();
	
	Оповестить("ИзменениеСостоянияСобытияКалендаря", Объект.СобытиеКалендаря, ЭтаФорма);
	
КонецПроцедуры

&НаСервереБезКонтекста
Процедура ЗафиксироватьПереходкОтправке(Организация, Событие, Состояние)
	
	КалендарьОтчетности.ЗаписатьСостояниеСобытияКалендаря(
		Организация,
		Событие,
		Состояние,
		"");
	
	ЗаписьКалендаря = Справочники.ЗаписиКалендаряПодготовкиОтчетности.ПолучитьЗаписьКалендаря(Организация, Событие);
	Если ЗаписьКалендаря <> Неопределено Тогда
		ОбъектЗаписьКалендаря = ЗаписьКалендаря.ПолучитьОбъект();
		ОбъектЗаписьКалендаря.Завершено = Ложь;
		ОбъектЗаписьКалендаря.Записать();
	КонецЕсли;
	
КонецПроцедуры


&НаКлиенте
Процедура ПереходВыполнил(Команда)
	
	оп = Новый ОписаниеОповещения("ОповещениеПодтверждениеПриема", ЭтотОбъект);
	
	Если СдаетсяЕФС1 Тогда
		ПоказатьВопрос(оп, НСтр("ru='СФР принял декларацию?'"), РежимДиалогаВопрос.ДаНет);  
	Иначе
		ПоказатьВопрос(оп, НСтр("ru='ФСС принял декларацию?'"), РежимДиалогаВопрос.ДаНет);
	КонецЕсли;
	
	Возврат;
	
КонецПроцедуры

&НаКлиенте
Процедура ОповещениеПодтверждениеПриема(Ответ,Параметры) Экспорт
	
	Если Ответ = КодВозвратаДиалога.Нет Тогда
		Возврат;
	КонецЕсли;
	
	Объект.СостояниеСобытия = ПредопределенноеЗначение("Перечисление.СостоянияСобытийКалендаря.Завершено");

	КалендарьОтчетности.ЗавершитьСобытиеКалендаряОтчетности(
		Объект.Организация,
		Объект.СобытиеКалендаря,
		"");
	
	ДатаСменыСостояния = ТекущаяДата();	
	
	УстановитьСтраницуЗадачаВыполнена(ЭтаФорма, СдаетсяЕФС1);
	УстановитьЗаголовокФормыПоТекущейСтранице();
	
	ОповеститьОбИзменении(Тип("СправочникСсылка.ЗаписиКалендаряПодготовкиОтчетности"));
	Оповестить("Запись_ЗаписиКалендаряПодготовкиОтчетности");
	
КонецПроцедуры

&НаКлиенте
Процедура ОткрытьДекларацию(Команда)
	
	ПоказатьЗначение(,ДокументОтчетности);
	
КонецПроцедуры

&НаКлиенте
Процедура ОтправитьОтчетность(Команда)
	
	Если ИспользуетсяДКО Тогда
		КонтекстЭДОКлиент.ПриНажатииНаКнопкуОтправкиВКонтролирующийОрганДляФСС(ЭтаФорма,Истина, ДокументОтчетности, Объект.Организация);
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ДекорацияЗаявлениеОтправленоОбработкаНавигационнойСсылки(Элемент, НавигационнаяСсылкаФорматированнойСтроки, СтандартнаяОбработка)
	СтандартнаяОбработка = Ложь;
	Если НавигационнаяСсылкаФорматированнойСтроки = "ОбновитьСтатус" Тогда
		оп = Новый ОписаниеОповещения("ОбновлениеСтатусаЗавершение", ЭтаФорма);
		КонтекстЭДОКлиент.ОбновитьСтатусыЗаявленийАбонентов_ИзФормыСписка(, ЭтаФорма.УникальныйИдентификатор, оп,Объект.Организация);
	ИначеЕсли НавигационнаяСсылкаФорматированнойСтроки = "ПерейтиКСпискуЗаявлений" Тогда
		ЭлектронныйДокументооборотСКонтролирующимиОрганамиКлиент.ОткрытьФормуСпискаЗаявленийНаПодключение(Объект.Организация);
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура ОбновлениеСтатусаЗавершение(Результат, ДопПараметры) Экспорт
	ПроверитьВозможностьОтправки();
КонецПроцедуры

&НаКлиенте
Процедура Далее(Команда)
	Объект.СостояниеСобытия = ПредопределенноеЗначение("Перечисление.СостоянияСобытийКалендаря.Завершено");

	КалендарьОтчетности.ЗавершитьСобытиеКалендаряОтчетности(
		Объект.Организация,
		Объект.СобытиеКалендаря,
		"");
	
	ДатаСменыСостояния = ТекущаяДата();	
	
	УстановитьСтраницуЗадачаВыполнена(ЭтаФорма, СдаетсяЕФС1);
	УстановитьЗаголовокФормыПоТекущейСтранице();
	
	ОповеститьОбИзменении(Тип("СправочникСсылка.ЗаписиКалендаряПодготовкиОтчетности"));
	Оповестить("Запись_ЗаписиКалендаряПодготовкиОтчетности");
КонецПроцедуры

// Конец событий переходов
// -----------------------------------------------------------------------------

///////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ И ФУНКЦИИ ОБЩЕГО НАЗНАЧЕНИЯ


&НаСервере
Процедура ПроверитьВозможностьОтправки()
	
	Если НЕ ЗначениеЗаполнено(ОбщегоНазначения.ЗначениеРеквизитаОбъекта(Объект.Организация, "УчетнаяЗаписьОбмена")) Тогда
		// Возможно заявление отправлено, но еще не одобрено
		Запрос = Новый Запрос;
		Запрос.Текст = 
		"ВЫБРАТЬ
		|	ЗаявлениеАбонентаСпецоператораСвязи.Ссылка
		|ИЗ
		|	Документ.ЗаявлениеАбонентаСпецоператораСвязи КАК ЗаявлениеАбонентаСпецоператораСвязи
		|ГДЕ
		|	НЕ ЗаявлениеАбонентаСпецоператораСвязи.ПометкаУдаления
		|	И ЗаявлениеАбонентаСпецоператораСвязи.Организация = &Организация
		|	И ЗаявлениеАбонентаСпецоператораСвязи.Статус = ЗНАЧЕНИЕ(Перечисление.СтатусыЗаявленияАбонентаСпецоператораСвязи.Отправлено)";
		Запрос.УстановитьПараметр("Организация", Объект.Организация);
		Если Запрос.Выполнить().Пустой() Тогда
			Элементы.ОтправитьВКонтролирующийОрган.Доступность = Ложь; 
			Элементы.ОтправитьВКонтролирующийОрган1.Доступность = Ложь;
			Элементы.ОтправитьВКонтролирующийОрган.Заголовок = НСтр("ru='Отправить (нет заявки)'"); 
			Элементы.ОтправитьВКонтролирующийОрган1.Заголовок = НСтр("ru='Отправить (нет заявки)'");
			Элементы.ОформитьЗаявку.Видимость = Истина;      
			Элементы.ОформитьЗаявку1.Видимость = Истина;
			Элементы.ДекорацияЗаявлениеОтправлено.Видимость = Ложь;    
			Элементы.ДекорацияЗаявлениеОтправлено1.Видимость = Ложь; 
		Иначе
			
			Элементы.ОтправитьВКонтролирующийОрган.Доступность = Ложь;
			Элементы.ОтправитьВКонтролирующийОрган.Заголовок = НСтр("ru='Отправить (нет заявки)'");
			Элементы.ОформитьЗаявку.Видимость = Ложь;
			Элементы.ДекорацияЗаявлениеОтправлено.Видимость = Истина;     
			Элементы.ОтправитьВКонтролирующийОрган1.Доступность = Ложь;
			Элементы.ОтправитьВКонтролирующийОрган1.Заголовок = НСтр("ru='Отправить (нет заявки)'");
			Элементы.ОформитьЗаявку1.Видимость = Ложь;
			Элементы.ДекорацияЗаявлениеОтправлено1.Видимость = Истина;

		КонецЕсли;
	Иначе
		Элементы.ОтправитьВКонтролирующийОрган.Заголовок = НСтр("ru='Отправить'");
		Элементы.ОтправитьВКонтролирующийОрган.Доступность = Истина;
		Элементы.ОформитьЗаявку.Видимость = Ложь;
		Элементы.ДекорацияЗаявлениеОтправлено.Видимость = Ложь;   
		Элементы.ОтправитьВКонтролирующийОрган1.Заголовок = НСтр("ru='Отправить'");
		Элементы.ОтправитьВКонтролирующийОрган1.Доступность = Истина;
		Элементы.ОформитьЗаявку1.Видимость = Ложь;
		Элементы.ДекорацияЗаявлениеОтправлено1.Видимость = Ложь;
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура ОтправитьОтчетностьНаСервере()
	
	Объект.СостояниеСобытия = ПредопределенноеЗначение("Перечисление.СостоянияСобытийКалендаря.ПолучитьПодтверждение");
	
	КалендарьОтчетности.ЗаписатьСостояниеСобытияКалендаря(
		Объект.Организация,
		Объект.СобытиеКалендаря,
		Объект.СостояниеСобытия,
		ДокументОтчетности);
		
	ДатаСменыСостояния = ТекущаяДатаСеанса();
	
	
КонецПроцедуры

&НаКлиенте
Процедура УстановитьЗаголовокФормыПоТекущейСтранице()
	Заголовок = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(Элементы.СтраницаДекларация.ТекущаяСтраница.Заголовок, ПериодЗадачиПредставление);
	РегламентированнаяОтчетностьУСНКлиентСервер.УстановитьЗаголовокФормыЗадачи(ЭтаФорма, Объект.Организация);
КонецПроцедуры


&НаКлиенте
Процедура АнимацияОтправить()
	
	Если ШиринаКнопкиОтправить <= 25 Тогда
		Элементы.ОтправитьВКонтролирующийОрган.Ширина = ШиринаКнопкиОтправить;         
		Элементы.ОтправитьВКонтролирующийОрган1.Ширина = ШиринаКнопкиОтправить;
		ПодключитьОбработчикОжидания("АнимацияОтправить", 0.2, Истина);
		ШиринаКнопкиОтправить = ШиринаКнопкиОтправить + 5;
	КонецЕсли;
	
КонецПроцедуры

// 1 - через представителя; 2 - самостоятельно
&НаСервере
Процедура ПереключитьСпособСдачи(СпособСдачи)
	
	Если НЕ РегламентированнаяОтчетностьПереопределяемый.ДоступнаОтправкаРегламентированногоОтчета() Тогда
		СпособСдачи = 2;
	КонецЕсли;
	
	Если СпособСдачи = 1 Тогда
		Элементы.ГруппаПодачиЧерезИнтернетОписание.Видимость = Истина;
		Элементы.ГруппаПодачиСамостоятельноОписание.Видимость = Ложь;
		Элементы.ОтправитьОтчетностьЧерезИнтернетВыбор.Шрифт = Новый Шрифт(Элементы.ОтправитьОтчетностьЧерезИнтернетВыбор.Шрифт,,,Истина);
		Элементы.ПодатьОтчетностьСамостоятельно.Шрифт = Новый Шрифт(Элементы.ПодатьОтчетностьСамостоятельно.Шрифт,,,Ложь); 
		Элементы.ГруппаПодачиЧерезИнтернетОписание1.Видимость = Истина;
		Элементы.ГруппаПодачиСамостоятельноОписание1.Видимость = Ложь;
		Элементы.ОтправитьОтчетностьЧерезИнтернетВыбор1.Шрифт = Новый Шрифт(Элементы.ОтправитьОтчетностьЧерезИнтернетВыбор.Шрифт,,,Истина);
		Элементы.ПодатьОтчетностьСамостоятельно1.Шрифт = Новый Шрифт(Элементы.ПодатьОтчетностьСамостоятельно.Шрифт,,,Ложь); 
	Иначе
		Элементы.ГруппаПодачиЧерезИнтернетОписание.Видимость = Ложь;
		Элементы.ГруппаПодачиСамостоятельноОписание.Видимость = Истина;
		Элементы.ОтправитьОтчетностьЧерезИнтернетВыбор.Шрифт = Новый Шрифт(Элементы.ОтправитьОтчетностьЧерезИнтернетВыбор.Шрифт,,,Ложь);
		Элементы.ПодатьОтчетностьСамостоятельно.Шрифт = Новый Шрифт(Элементы.ПодатьОтчетностьСамостоятельно.Шрифт,,,Истина);
		Элементы.ГруппаПодачиЧерезИнтернетОписание1.Видимость = Ложь;
		Элементы.ГруппаПодачиСамостоятельноОписание1.Видимость = Истина;
		Элементы.ОтправитьОтчетностьЧерезИнтернетВыбор1.Шрифт = Новый Шрифт(Элементы.ОтправитьОтчетностьЧерезИнтернетВыбор.Шрифт,,,Ложь);
		Элементы.ПодатьОтчетностьСамостоятельно1.Шрифт = Новый Шрифт(Элементы.ПодатьОтчетностьСамостоятельно.Шрифт,,,Истина);		
	КонецЕсли;
	
	Если ТекущийСпособСдачи = СпособСдачи Тогда
		Возврат;
	КонецЕсли;
	
	ТекущийСпособСдачи = СпособСдачи;
	
	
КонецПроцедуры

///////////////////////////////////////////////////////////////////////////////
//// ФУНКЦИИ ДЛЯ РАБОТЫ С ЭДО

&НаКлиенте
Процедура ОформитьЗаявку(Команда)
	 
	 ОткрытьФорму("Обработка.ДокументооборотСКонтролирующимиОрганами.Форма.МастерФормированияЗаявкиНаПодключениеУпрощенное",
		Новый Структура("Организация", Объект.Организация));
	
КонецПроцедуры

&НаКлиентеНаСервереБезКонтекста
Процедура УстановитьТекущуюЗакладку(ЭтаФорма, Объект, СдаетсяЕФС1)
	
	Если Объект.СостояниеСобытия = ПредопределенноеЗначение("Перечисление.СостоянияСобытийКалендаря.ОтчетНеСдан") Тогда
		
		УстановитьСтраницуЗадачаОзнакомиться(ЭтаФорма, СдаетсяЕФС1);
		
	ИначеЕсли Объект.СостояниеСобытия = ПредопределенноеЗначение("Перечисление.СостоянияСобытийКалендаря.Распечатать")
		ИЛИ Объект.СостояниеСобытия = ПредопределенноеЗначение("Перечисление.СостоянияСобытийКалендаря.Отправить")
		ИЛИ Объект.СостояниеСобытия = ПредопределенноеЗначение("Перечисление.СостоянияСобытийКалендаря.Ознакомиться") Тогда 	
 
		УстановитьСтраницуПросмотраРезультата(ЭтаФорма, СдаетсяЕФС1); 
		                    
		
	ИначеЕсли Объект.СостояниеСобытия = ПредопределенноеЗначение("Перечисление.СостоянияСобытийКалендаря.Завершить") Тогда
		
		УстановитьСтраницуЗадачаПроверена(ЭтаФорма, СдаетсяЕФС1);
		
		
	ИначеЕсли Объект.СостояниеСобытия = ПредопределенноеЗначение("Перечисление.СостоянияСобытийКалендаря.Завершено") Тогда
		
		УстановитьСтраницуЗадачаВыполнена(ЭтаФорма, СдаетсяЕФС1);  	
		
	ИначеЕсли Объект.СостояниеСобытия = ПредопределенноеЗначение("Перечисление.СостоянияСобытийКалендаря.ПолучитьПодтверждение") Тогда
		
		УстановитьСтраницуОжидатьПодтверждения(ЭтаФорма, СдаетсяЕФС1);
		
	Иначе
		
		УстановитьСтраницуПросмотраРезультата(ЭтаФорма, СдаетсяЕФС1);
		
	КонецЕсли;
	
КонецПроцедуры

&НаКлиентеНаСервереБезКонтекста
Процедура УстановитьСтраницуПросмотраРезультата(ЭтаФорма, СдаетсяЕФС1)
	
	Если СдаетсяЕФС1 Тогда 
		ЭтаФорма.Элементы.СтраницаДекларация.ТекущаяСтраница = ЭтаФорма.Элементы.ОтчетЕФС_1; 
		ЭтаФорма.Элементы.ПереходВыполнил1.КнопкаПоУмолчанию = Истина; 
	Иначе            
		ЭтаФорма.Элементы.СтраницаДекларация.ТекущаяСтраница = ЭтаФорма.Элементы.Отчет4ФСС;
		ЭтаФорма.Элементы.ПереходВыполнил.КнопкаПоУмолчанию = Истина; 
	КонецЕсли;
	
КонецПроцедуры

&НаКлиентеНаСервереБезКонтекста
Процедура УстановитьСтраницуЗадачаВыполнена(ЭтаФорма, СдаетсяЕФС1)
	
	Если СдаетсяЕФС1 Тогда 
		ЭтаФорма.Элементы.СтраницаДекларация.ТекущаяСтраница = ЭтаФорма.Элементы.ЗадачаВыполненаЕФС_1; 		
	Иначе            
		ЭтаФорма.Элементы.СтраницаДекларация.ТекущаяСтраница = ЭтаФорма.Элементы.ЗадачаВыполнена; 
	КонецЕсли;
	
КонецПроцедуры

&НаКлиентеНаСервереБезКонтекста
Процедура УстановитьСтраницуОжидатьПодтверждения(ЭтаФорма, СдаетсяЕФС1)
	
	Если СдаетсяЕФС1 Тогда 
		ЭтаФорма.Элементы.СтраницаДекларация.ТекущаяСтраница = ЭтаФорма.Элементы.ЗадачаОжидатьПодтвержденияЕФС_1; 		
	Иначе            
		ЭтаФорма.Элементы.СтраницаДекларация.ТекущаяСтраница = ЭтаФорма.Элементы.ЗадачаОжидатьПодтверждения; 
	КонецЕсли;
	
КонецПроцедуры   

&НаКлиентеНаСервереБезКонтекста
Процедура УстановитьСтраницуЗадачаОзнакомиться(ЭтаФорма, СдаетсяЕФС1)
	
	Если СдаетсяЕФС1 Тогда 
		ЭтаФорма.Элементы.СтраницаДекларация.ТекущаяСтраница = ЭтаФорма.Элементы.ЗадачаОзнакомитьсяЕФС_1; 		
	Иначе            
		ЭтаФорма.Элементы.СтраницаДекларация.ТекущаяСтраница = ЭтаФорма.Элементы.ЗадачаОзнакомиться; 
	КонецЕсли;
	
КонецПроцедуры

&НаКлиентеНаСервереБезКонтекста
Процедура УстановитьСтраницуЗадачаПроверена(ЭтаФорма, СдаетсяЕФС1)
	
	Если СдаетсяЕФС1 Тогда 
		ЭтаФорма.Элементы.СтраницаДекларация.ТекущаяСтраница = ЭтаФорма.Элементы.ЗадачаПроверенаЕФС_1; 	
		ЭтаФорма.Элементы.Далее1.КнопкаПоУмолчанию = Истина;
	Иначе            
		ЭтаФорма.Элементы.СтраницаДекларация.ТекущаяСтраница = ЭтаФорма.Элементы.ЗадачаПроверена;   
		ЭтаФорма.Элементы.Далее.КнопкаПоУмолчанию = Истина;
	КонецЕсли;
	
КонецПроцедуры
	
#Область ПанельОтправкиВКонтролирующиеОрганы

&НаКлиенте
Процедура ОбновитьОтправку(Команда)
	ЭлектронныйДокументооборотСКонтролирующимиОрганамиКлиент.ОбновитьОтправкуИзПанелиОтправки(ЭтаФорма, "ФСС");
КонецПроцедуры

&НаКлиенте
Процедура ГиперссылкаПротоколНажатие(Элемент)
	ЭлектронныйДокументооборотСКонтролирующимиОрганамиКлиент.ОткрытьПротоколИзПанелиОтправки(ЭтаФорма, "ФСС");
КонецПроцедуры

&НаКлиенте
Процедура ОтправитьНеотправленноеИзвещение(Команда)
	ЭлектронныйДокументооборотСКонтролирующимиОрганамиКлиент.ОтправитьНеотправленноеИзвещениеИзПанелиОтправки(ЭтаФорма, "ФСС");
КонецПроцедуры

&НаКлиенте
Процедура ЭтапыОтправкиНажатие(Элемент)
	ЭлектронныйДокументооборотСКонтролирующимиОрганамиКлиент.ОткрытьСостояниеОтправкиИзПанелиОтправки(ЭтаФорма, "ФСС");
КонецПроцедуры

&НаКлиенте
Процедура КритическиеОшибкиОбработкаНавигационнойСсылки(Элемент, НавигационнаяСсылка, СтандартнаяОбработка)
	СтандартнаяОбработка = Ложь;
	ЭлектронныйДокументооборотСКонтролирующимиОрганамиКлиент.ОткрытьКритическиеОшибкиИзПанелиОтправки(ЭтаФорма, "ФСС");
КонецПроцедуры

#КонецОбласти


