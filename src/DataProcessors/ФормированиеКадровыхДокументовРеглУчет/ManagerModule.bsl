#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область ПрограммныйИнтерфейс

// Проверяет, что переданные адреса включены в задачу. Если проверка не проходит – генерируется исключение.
//
// Параметры:
//  СписокДокументов - Массив из ссылок на документы кадрового учета ПриемНаРаботуУНФ, КадровоеПеремещениеУНФ, УвольнениеУНФ 
//
// Возвращаемое значение: 
//   Структура:
//       * Отказ 					- Булево - если Истина, то при получении данных возникла ошибка, иначе Ложь.
//       * СообщениеПользователю 	- Строка - описание ошибки для вывода пользователю, если возникла ошибка,
//												иначе пустая строка
//       * Данные    				- Структура - реквизиты для заполнения кадровых документов рег. учета
//
Функция ДанныеДляЗаполненияПоУпрУчету(СписокДокументов) Экспорт
	ДанныеДляЗаполнения = Новый Структура;
	ДанныеДляЗаполнения.Вставить("Отказ", Ложь);
	ДанныеДляЗаполнения.Вставить("СообщениеПользователю", "");
	ДанныеДляЗаполнения.Вставить("Данные", Новый Массив);
	
	Если НЕ ПолучитьФункциональнуюОпцию("ИспользоватьКадровыйДокументооборотДляНебольшихОрганизаций") Тогда
		ДанныеДляЗаполнения.Отказ = Истина;
		ДанныеДляЗаполнения.СообщениеПользователю = НСтр("ru = 'Использование регламентированного кадрового учета отключено в настройках'");
		Возврат ДанныеДляЗаполнения;
	КонецЕсли;
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("СписокДокументов", СписокДокументов);
	Запрос.УстановитьПараметр("ИмяДокументаПрием", "ПриемНаРаботу");
	Запрос.УстановитьПараметр("ИмяДокументаПеревод", "КадровыйПеревод");
	Запрос.УстановитьПараметр("ИмяДокументаУвольнение", "Увольнение");
	
	Запрос.Текст = "ВЫБРАТЬ РАЗРЕШЕННЫЕ
	               |	МАКСИМУМ(ПриемНаРаботу.Ссылка) КАК ДокументРеглУчет,
	               |	ПриемНаРаботу.Проведен КАК Проведен,
	               |	ПриемНаРаботу.Сотрудник КАК Сотрудник,
	               |	ПриемНаРаботу.ДатаПриема КАК ДатаСобытия,
	               |	&ИмяДокументаПрием КАК ИмяДокументаРеглУчет,
	               |	ПриемНаРаботу.Подразделение КАК Подразделение,
	               |	ПриемНаРаботу.Должность КАК Должность,
	               |	ПриемНаРаботу.КоличествоСтавок КАК КоличествоСтавок
	               |ПОМЕСТИТЬ ВТДокументыРеглУчет
	               |ИЗ
	               |	Документ.ПриемНаРаботу КАК ПриемНаРаботу
	               |ГДЕ
	               |	НЕ ПриемНаРаботу.ПометкаУдаления
	               |
	               |СГРУППИРОВАТЬ ПО
	               |	ПриемНаРаботу.Проведен,
	               |	ПриемНаРаботу.Сотрудник,
	               |	ПриемНаРаботу.ДатаПриема,
	               |	ПриемНаРаботу.Подразделение,
	               |	ПриемНаРаботу.Должность,
	               |	ПриемНаРаботу.КоличествоСтавок
	               |
	               |ОБЪЕДИНИТЬ ВСЕ
	               |
	               |ВЫБРАТЬ
	               |	МАКСИМУМ(КадровыйПеревод.Ссылка),
	               |	КадровыйПеревод.Проведен,
	               |	КадровыйПеревод.Сотрудник,
	               |	КадровыйПеревод.ДатаНачала,
	               |	&ИмяДокументаПеревод,
	               |	КадровыйПеревод.Подразделение,
	               |	КадровыйПеревод.Должность,
	               |	КадровыйПеревод.КоличествоСтавок
	               |ИЗ
	               |	Документ.КадровыйПеревод КАК КадровыйПеревод
	               |ГДЕ
	               |	НЕ КадровыйПеревод.ПометкаУдаления
	               |
	               |СГРУППИРОВАТЬ ПО
	               |	КадровыйПеревод.Проведен,
	               |	КадровыйПеревод.Сотрудник,
	               |	КадровыйПеревод.ДатаНачала,
	               |	КадровыйПеревод.Подразделение,
	               |	КадровыйПеревод.Должность,
	               |	КадровыйПеревод.КоличествоСтавок
	               |
	               |ОБЪЕДИНИТЬ ВСЕ
	               |
	               |ВЫБРАТЬ
	               |	МАКСИМУМ(Увольнение.Ссылка),
	               |	Увольнение.Проведен,
	               |	Увольнение.Сотрудник,
	               |	Увольнение.ДатаУвольнения,
	               |	&ИмяДокументаУвольнение,
	               |	NULL,
	               |	NULL,
	               |	NULL
	               |ИЗ
	               |	Документ.Увольнение КАК Увольнение
	               |ГДЕ
	               |	НЕ Увольнение.ПометкаУдаления
	               |
	               |СГРУППИРОВАТЬ ПО
	               |	Увольнение.Проведен,
	               |	Увольнение.Сотрудник,
	               |	Увольнение.ДатаУвольнения
	               |;
	               |
	               |////////////////////////////////////////////////////////////////////////////////
	               |ВЫБРАТЬ
	               |	ВТДокументыРеглУчет.Сотрудник КАК Сотрудник,
	               |	ВТДокументыРеглУчет.ДатаСобытия КАК ДатаСобытия,
	               |	ВТДокументыРеглУчет.ИмяДокументаРеглУчет КАК ИмяДокументаРеглУчет,
	               |	МАКСИМУМ(ВТДокументыРеглУчет.Проведен) КАК Проведен
	               |ПОМЕСТИТЬ ВТМаксДокументРеглУчет
	               |ИЗ
	               |	ВТДокументыРеглУчет КАК ВТДокументыРеглУчет
	               |
	               |СГРУППИРОВАТЬ ПО
	               |	ВТДокументыРеглУчет.Сотрудник,
	               |	ВТДокументыРеглУчет.ДатаСобытия,
	               |	ВТДокументыРеглУчет.ИмяДокументаРеглУчет
	               |;
	               |
	               |////////////////////////////////////////////////////////////////////////////////
	               |ВЫБРАТЬ РАЗРЕШЕННЫЕ
	               |	УвольнениеУНФ.Организация КАК Организация,
	               |	УвольнениеУНФСотрудники.Сотрудник КАК Сотрудник,
	               |	УвольнениеУНФСотрудники.Период КАК ДатаСобытия,
	               |	УвольнениеУНФСотрудники.ОснованиеУвольнения КАК ОснованиеУвольнения,
	               |	УвольнениеУНФ.Ссылка КАК ДокументУпрУчет,
	               |	&ИмяДокументаУвольнение КАК ИмяДокументаРеглУчет,
	               |	УвольнениеУНФ.ПодписьРуководителя КАК ПодписьРуководителя,
	               |	УвольнениеУНФСотрудники.Должность КАК Должность,
	               |	NULL КАК ЗанимаемыхСтавок,
	               |	NULL КАК ГрафикРаботы,
	               |	NULL КАК ВидНачисленияУдержания,
	               |	NULL КАК Сумма,
	               |	УвольнениеУНФСотрудники.НомерСтроки КАК НачисленияНомерСтроки,
	               |	УвольнениеУНФСотрудники.НомерСтроки КАК СотрудникНомерСтроки,
	               |	NULL КАК НаименованиеНачисления,
	               |	NULL КАК ТрудоваяФункция,
	               |	УвольнениеУНФ.Дата КАК ДатаДокумента,
	               |	NULL КАК ПодразделениеУпр,
	               |	NULL КАК ПодразделениеНаименование,
	               |	ВЫБОР
	               |		КОГДА УвольнениеУНФ.Проведен
	               |			ТОГДА 1
	               |		КОГДА УвольнениеУНФ.ПометкаУдаления
	               |			ТОГДА 3
	               |		ИНАЧЕ 0
	               |	КОНЕЦ КАК СостояниеДокументаУпрУчет,
	               |	УвольнениеУНФ.Номер КАК ДокументУпрУчетНомер
	               |ПОМЕСТИТЬ ВТДанныеДокументов
	               |ИЗ
	               |	Документ.УвольнениеУНФ КАК УвольнениеУНФ
	               |		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.УвольнениеУНФ.Сотрудники КАК УвольнениеУНФСотрудники
	               |		ПО УвольнениеУНФ.Ссылка = УвольнениеУНФСотрудники.Ссылка
	               |			И (УвольнениеУНФ.Ссылка В (&СписокДокументов))
	               |
	               |ОБЪЕДИНИТЬ ВСЕ
	               |
	               |ВЫБРАТЬ
	               |	ПриемНаРаботуУНФ.Организация,
	               |	ПриемНаРаботуУНФСотрудники.Сотрудник,
	               |	ПриемНаРаботуУНФСотрудники.Период,
	               |	NULL,
	               |	ПриемНаРаботуУНФ.Ссылка,
	               |	&ИмяДокументаПрием,
	               |	ПриемНаРаботуУНФ.ПодписьРуководителя,
	               |	ПриемНаРаботуУНФСотрудники.Должность,
	               |	ПриемНаРаботуУНФСотрудники.ЗанимаемыхСтавок,
	               |	ПриемНаРаботуУНФСотрудники.ГрафикРаботы,
	               |	ПриемНаРаботуУНФНачисленияУдержания.ВидНачисленияУдержания,
	               |	ПриемНаРаботуУНФНачисленияУдержания.Сумма,
	               |	ПриемНаРаботуУНФНачисленияУдержания.НомерСтроки,
	               |	ПриемНаРаботуУНФСотрудники.НомерСтроки,
	               |	ВидыНачисленийИУдержаний.Наименование,
	               |	ЕСТЬNULL(Должности.ТрудоваяФункция, ЗНАЧЕНИЕ(Справочник.ТрудовыеФункции.ПустаяСсылка)),
	               |	ПриемНаРаботуУНФ.Дата,
	               |	ПриемНаРаботуУНФСотрудники.СтруктурнаяЕдиница,
	               |	ПриемНаРаботуУНФСотрудники.СтруктурнаяЕдиница.Наименование,
	               |	ВЫБОР
	               |		КОГДА ПриемНаРаботуУНФ.Проведен
	               |			ТОГДА 1
	               |		КОГДА ПриемНаРаботуУНФ.ПометкаУдаления
	               |			ТОГДА 3
	               |		ИНАЧЕ 0
	               |	КОНЕЦ,
	               |	ПриемНаРаботуУНФ.Номер
	               |ИЗ
	               |	Документ.ПриемНаРаботуУНФ.Сотрудники КАК ПриемНаРаботуУНФСотрудники
	               |		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.ПриемНаРаботуУНФ КАК ПриемНаРаботуУНФ
	               |		ПО ПриемНаРаботуУНФСотрудники.Ссылка = ПриемНаРаботуУНФ.Ссылка
	               |			И (ПриемНаРаботуУНФ.Ссылка В (&СписокДокументов))
	               |		ЛЕВОЕ СОЕДИНЕНИЕ Документ.ПриемНаРаботуУНФ.НачисленияУдержания КАК ПриемНаРаботуУНФНачисленияУдержания
	               |			ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.ВидыНачисленийИУдержаний КАК ВидыНачисленийИУдержаний
	               |			ПО ПриемНаРаботуУНФНачисленияУдержания.ВидНачисленияУдержания = ВидыНачисленийИУдержаний.Ссылка
	               |				И (ВидыНачисленийИУдержаний.Тип = ЗНАЧЕНИЕ(Перечисление.ТипыНачисленийИУдержаний.Начисление))
	               |		ПО ПриемНаРаботуУНФСотрудники.Ссылка = ПриемНаРаботуУНФНачисленияУдержания.Ссылка
	               |			И ПриемНаРаботуУНФСотрудники.КлючСвязи = ПриемНаРаботуУНФНачисленияУдержания.КлючСвязи
	               |		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.Должности КАК Должности
	               |		ПО ПриемНаРаботуУНФСотрудники.Должность = Должности.Ссылка
	               |
	               |ОБЪЕДИНИТЬ ВСЕ
	               |
	               |ВЫБРАТЬ
	               |	КадровоеПеремещениеУНФ.Организация,
	               |	КадровоеПеремещениеУНФСотрудники.Сотрудник,
	               |	КадровоеПеремещениеУНФСотрудники.Период,
	               |	NULL,
	               |	КадровоеПеремещениеУНФ.Ссылка,
	               |	&ИмяДокументаПеревод,
	               |	КадровоеПеремещениеУНФ.ПодписьРуководителя,
	               |	КадровоеПеремещениеУНФСотрудники.Должность,
	               |	КадровоеПеремещениеУНФСотрудники.ЗанимаемыхСтавок,
	               |	КадровоеПеремещениеУНФСотрудники.ГрафикРаботы,
	               |	КадровоеПеремещениеУНФНачисленияУдержания.ВидНачисленияУдержания,
	               |	КадровоеПеремещениеУНФНачисленияУдержания.Сумма,
	               |	КадровоеПеремещениеУНФНачисленияУдержания.НомерСтроки,
	               |	КадровоеПеремещениеУНФСотрудники.НомерСтроки,
	               |	ВидыНачисленийИУдержаний.Наименование,
	               |	ЕСТЬNULL(Должности.ТрудоваяФункция, ЗНАЧЕНИЕ(Справочник.ТрудовыеФункции.ПустаяСсылка)),
	               |	КадровоеПеремещениеУНФ.Дата,
	               |	КадровоеПеремещениеУНФСотрудники.СтруктурнаяЕдиница,
	               |	КадровоеПеремещениеУНФСотрудники.СтруктурнаяЕдиница.Наименование,
	               |	ВЫБОР
	               |		КОГДА КадровоеПеремещениеУНФ.Проведен
	               |			ТОГДА 1
	               |		КОГДА КадровоеПеремещениеУНФ.ПометкаУдаления
	               |			ТОГДА 3
	               |		ИНАЧЕ 0
	               |	КОНЕЦ,
	               |	КадровоеПеремещениеУНФ.Номер
	               |ИЗ
	               |	Документ.КадровоеПеремещениеУНФ.Сотрудники КАК КадровоеПеремещениеУНФСотрудники
	               |		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.КадровоеПеремещениеУНФ КАК КадровоеПеремещениеУНФ
	               |		ПО КадровоеПеремещениеУНФСотрудники.Ссылка = КадровоеПеремещениеУНФ.Ссылка
	               |			И (КадровоеПеремещениеУНФ.Ссылка В (&СписокДокументов))
	               |		ЛЕВОЕ СОЕДИНЕНИЕ Документ.КадровоеПеремещениеУНФ.НачисленияУдержания КАК КадровоеПеремещениеУНФНачисленияУдержания
	               |			ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.ВидыНачисленийИУдержаний КАК ВидыНачисленийИУдержаний
	               |			ПО КадровоеПеремещениеУНФНачисленияУдержания.ВидНачисленияУдержания = ВидыНачисленийИУдержаний.Ссылка
	               |				И (ВидыНачисленийИУдержаний.Тип = ЗНАЧЕНИЕ(Перечисление.ТипыНачисленийИУдержаний.Начисление))
	               |		ПО КадровоеПеремещениеУНФСотрудники.Ссылка = КадровоеПеремещениеУНФНачисленияУдержания.Ссылка
	               |			И КадровоеПеремещениеУНФСотрудники.КлючСвязи = КадровоеПеремещениеУНФНачисленияУдержания.КлючСвязи
	               |			И (КадровоеПеремещениеУНФНачисленияУдержания.Актуальность)
	               |		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.Должности КАК Должности
	               |		ПО КадровоеПеремещениеУНФСотрудники.Должность = Должности.Ссылка
	               |			И (НЕ Должности.ПометкаУдаления)
	               |;
	               |
	               |////////////////////////////////////////////////////////////////////////////////
	               |ВЫБРАТЬ РАЗРЕШЕННЫЕ
	               |	ВТДанныеДокументов.Сотрудник КАК Сотрудник,
	               |	ВТДанныеДокументов.ДокументУпрУчет КАК ДокументУпрУчет,
	               |	МАКСИМУМ(ПодразделенияОрганизаций.Ссылка) КАК Подразделение
	               |ПОМЕСТИТЬ ВТПодразделения
	               |ИЗ
	               |	ВТДанныеДокументов КАК ВТДанныеДокументов
	               |		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.ПодразделенияОрганизаций КАК ПодразделенияОрганизаций
	               |		ПО ВТДанныеДокументов.ПодразделениеНаименование = ПодразделенияОрганизаций.Наименование
	               |			И ВТДанныеДокументов.Организация = ПодразделенияОрганизаций.Владелец
	               |			И (НЕ ПодразделенияОрганизаций.ПометкаУдаления)
	               |
	               |СГРУППИРОВАТЬ ПО
	               |	ВТДанныеДокументов.Сотрудник,
	               |	ВТДанныеДокументов.ДокументУпрУчет
	               |;
	               |
	               |////////////////////////////////////////////////////////////////////////////////
	               |ВЫБРАТЬ РАЗРЕШЕННЫЕ
	               |	ВТДанныеДокументов.Организация КАК Организация,
	               |	ВТДанныеДокументов.Сотрудник КАК Сотрудник,
	               |	ВТДанныеДокументов.ДатаСобытия КАК ДатаСобытия,
	               |	ВТДанныеДокументов.ОснованиеУвольнения КАК ОснованиеУвольнения,
	               |	ВТДанныеДокументов.ДокументУпрУчет КАК ДокументУпрУчет,
	               |	ВТДанныеДокументов.ИмяДокументаРеглУчет КАК ИмяДокументаРеглУчет,
	               |	ЕСТЬNULL(ВТДокументыРеглУчет.Подразделение, ЕСТЬNULL(ВТПодразделения.Подразделение, ЗНАЧЕНИЕ(Справочник.ПодразделенияОрганизаций.ПустаяСсылка))) КАК Подразделение,
	               |	ЕСТЬNULL(ВТДокументыРеглУчет.Должность, ВТДанныеДокументов.Должность) КАК Должность,
	               |	ЕСТЬNULL(ВТДокументыРеглУчет.КоличествоСтавок, ВТДанныеДокументов.ЗанимаемыхСтавок) КАК КоличествоСтавок,
	               |	ВТДанныеДокументов.ГрафикРаботы КАК ГрафикРаботы,
	               |	ЕСТЬNULL(Подписи.ФизическоеЛицо, ЗНАЧЕНИЕ(Справочник.ФизическиеЛица.ПустаяСсылка)) КАК Руководитель,
	               |	ЕСТЬNULL(Подписи.Должность, ЗНАЧЕНИЕ(Справочник.Должности.ПустаяСсылка)) КАК ДолжностьРуководителя,
	               |	ЕСТЬNULL(Подписи.ДействуетНаОсновании, """") КАК ОснованиеПодписиРуководителя,
	               |	ВТДанныеДокументов.ВидНачисленияУдержания КАК ВидНачисленияУдержания,
	               |	ВТДанныеДокументов.Сумма КАК Сумма,
	               |	ВТДанныеДокументов.СотрудникНомерСтроки КАК СотрудникНомерСтроки,
	               |	ВТДанныеДокументов.НаименованиеНачисления КАК НаименованиеНачисления,
	               |	ВТДокументыРеглУчет.ДокументРеглУчет КАК ДокументРеглУчет,
	               |	ВТДанныеДокументов.ТрудоваяФункция КАК ТрудоваяФункция,
	               |	ВЫБОР
	               |		КОГДА ВТДокументыРеглУчет.Проведен
	               |			ТОГДА 1
	               |		ИНАЧЕ 0
	               |	КОНЕЦ КАК СостояниеДокументаРеглУчет,
	               |	ВТДанныеДокументов.Сотрудник.ФизическоеЛицо КАК ФизическоеЛицо,
	               |	ВТДанныеДокументов.ДатаДокумента КАК ДатаДокумента,
	               |	ВТДанныеДокументов.ПодразделениеУпр КАК ПодразделениеУпр,
	               |	ВТДанныеДокументов.Должность КАК ДолжностьУпр,
	               |	ВТДанныеДокументов.ЗанимаемыхСтавок КАК КоличествоСтавокУпр,
	               |	ВТДанныеДокументов.СостояниеДокументаУпрУчет КАК СостояниеДокументаУпрУчет,
	               |	ВТДанныеДокументов.ИмяДокументаРеглУчет + ""_"" + ВТДанныеДокументов.ДокументУпрУчетНомер + ""_"" + ВТДанныеДокументов.Сотрудник.Код КАК ИдСтроки
	               |ИЗ
	               |	ВТДанныеДокументов КАК ВТДанныеДокументов
	               |		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.Подписи КАК Подписи
	               |		ПО ВТДанныеДокументов.ПодписьРуководителя = Подписи.Ссылка
	               |		ЛЕВОЕ СОЕДИНЕНИЕ ВТДокументыРеглУчет КАК ВТДокументыРеглУчет
	               |			ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТМаксДокументРеглУчет КАК ВТМаксДокументРеглУчет
	               |			ПО ВТДокументыРеглУчет.Сотрудник = ВТМаксДокументРеглУчет.Сотрудник
	               |				И ВТДокументыРеглУчет.ДатаСобытия = ВТМаксДокументРеглУчет.ДатаСобытия
	               |				И ВТДокументыРеглУчет.Проведен = ВТМаксДокументРеглУчет.Проведен
	               |				И ВТДокументыРеглУчет.ИмяДокументаРеглУчет = ВТМаксДокументРеглУчет.ИмяДокументаРеглУчет
	               |		ПО ВТДанныеДокументов.Сотрудник = ВТДокументыРеглУчет.Сотрудник
	               |			И ВТДанныеДокументов.ДатаСобытия = ВТДокументыРеглУчет.ДатаСобытия
	               |			И ВТДанныеДокументов.ИмяДокументаРеглУчет = ВТДокументыРеглУчет.ИмяДокументаРеглУчет
	               |		ЛЕВОЕ СОЕДИНЕНИЕ ВТПодразделения КАК ВТПодразделения
	               |		ПО ВТДанныеДокументов.Сотрудник = ВТПодразделения.Сотрудник
	               |			И ВТДанныеДокументов.ДокументУпрУчет = ВТПодразделения.ДокументУпрУчет
	               |
	               |УПОРЯДОЧИТЬ ПО
	               |	ДатаСобытия,
	               |	ДокументУпрУчет,
	               |	ВТДанныеДокументов.СотрудникНомерСтроки,
	               |	ВТДанныеДокументов.НачисленияНомерСтроки";
	
	Результат = Запрос.Выполнить();
	Если Результат.Пустой() Тогда
		ДанныеДляЗаполнения.Отказ = Истина;
		ДанныеДляЗаполнения.СообщениеПользователю = НСтр("ru = 'Данные заполнения отсутствуют'");
		Возврат ДанныеДляЗаполнения;
	КонецЕсли;
	
	СтатьяТК = Справочники.ОснованияУвольнения.Статья77п3;
	
	ТекстПредставления = Новый Структура;
	ТекстПредставления.Вставить("МестоРаботы", НСтр("ru = 'Место работы: %1 / %2'"));
	ТекстПредставления.Вставить("КоличествоСтавок", НСтр("ru = 'Количество ставок: %1'"));
	ТекстПредставления.Вставить("Основание", НСтр("ru = 'Основание: %1'"));
	ТекстПредставления.Вставить("Пусто", НСтр("ru = '<...>'"));
	
	Выборка = Результат.Выбрать();
	Пока Выборка.СледующийПоЗначениюПоля("ДокументУпрУчет") Цикл
		Пока Выборка.СледующийПоЗначениюПоля("СотрудникНомерСтроки") Цикл
			ДанныеДокумента = Новый Структура;
			ДанныеДокумента.Вставить("ИдСтроки", Выборка.ИдСтроки);
			ДанныеДокумента.Вставить("ДокументУпрУчет", Выборка.ДокументУпрУчет);
			ДанныеДокумента.Вставить("СостояниеДокументаУпрУчет", Выборка.СостояниеДокументаУпрУчет);
			ДанныеДокумента.Вставить("ДокументРеглУчет", Выборка.ДокументРеглУчет);
			ДанныеДокумента.Вставить("ИмяДокументаРеглУчет", Выборка.ИмяДокументаРеглУчет);
			ДанныеДокумента.Вставить("СостояниеДокументаРеглУчет", Выборка.СостояниеДокументаРеглУчет);
			ДанныеДокумента.Вставить("Сотрудник", Выборка.Сотрудник);
			ДанныеДокумента.Вставить("ДатаСобытия", Выборка.ДатаСобытия);
			ДанныеДокумента.Вставить("Дата", Выборка.ДатаДокумента);
			ДанныеДокумента.Вставить("Организация", Выборка.Организация);
			ДанныеДокумента.Вставить("Сотрудник", Выборка.Сотрудник);
			ДанныеДокумента.Вставить("ФизическоеЛицо", Выборка.ФизическоеЛицо);
			ДанныеДокумента.Вставить("ОтразитьВТрудовойКнижке", Истина);
			ДанныеДокумента.Вставить("Руководитель", Выборка.Руководитель);
			ДанныеДокумента.Вставить("ДолжностьРуководителя", Выборка.ДолжностьРуководителя);
			ДанныеДокумента.Вставить("ОснованиеПодписиРуководителя", Выборка.ОснованиеПодписиРуководителя);
			
			ПредставлениеУпрУчет = Новый Массив;
			ПредставлениеРеглУчет = Новый Массив;
			Если Выборка.ИмяДокументаРеглУчет = "ПриемНаРаботу" Тогда
				ДанныеДокумента.Вставить("ДатаПриема", Выборка.ДатаСобытия);
				ДанныеДокумента.Вставить("Подразделение", Выборка.Подразделение);
				ДанныеДокумента.Вставить("ПодразделениеУпр", Выборка.ПодразделениеУпр);
				ДанныеДокумента.Вставить("Должность", Выборка.Должность);
				ДанныеДокумента.Вставить("ВидЗанятости",
					ВидЗанятостиНовогоСотрудника(Выборка.Организация, Выборка.Сотрудник, Выборка.ФизическоеЛицо, Выборка.ДатаСобытия, Выборка.ДокументРеглУчет));
				ДанныеДокумента.Вставить("ТрудоваяФункция", Выборка.ТрудоваяФункция);
				ДанныеДокумента.Вставить("КоличествоСтавок", Выборка.КоличествоСтавок);
				ДанныеДокумента.Вставить("СпособРасчетаАванса", Перечисления.СпособыРасчетаАванса.ПроцентомОтТарифа);
				ДанныеДокумента.Вставить("Аванс", 40);
				
				ПредставлениеУпрУчет.Добавить(СтрШаблон(ТекстПредставления.МестоРаботы,
												?(ЗначениеЗаполнено(Выборка.ДолжностьУпр), Выборка.ДолжностьУпр, ТекстПредставления.Пусто),
												?(ЗначениеЗаполнено(Выборка.ПодразделениеУпр), Выборка.ПодразделениеУпр, ТекстПредставления.Пусто)));

				ПредставлениеРеглУчет.Добавить(СтрШаблон(ТекстПредставления.МестоРаботы,
												?(ЗначениеЗаполнено(Выборка.Должность), Выборка.Должность, ТекстПредставления.Пусто),
												?(ЗначениеЗаполнено(Выборка.Подразделение), Выборка.Подразделение, ТекстПредставления.Пусто)));

				Если ЗначениеЗаполнено(Выборка.КоличествоСтавокУпр) И Выборка.КоличествоСтавокУпр < 1 Тогда
					ПредставлениеРеглУчет.Добавить(СтрШаблон(ТекстПредставления.КоличествоСтавокУпр, Формат(Выборка.КоличествоСтавокУпр, "ЧН=")));
				КонецЕсли;
												
				Если ЗначениеЗаполнено(Выборка.КоличествоСтавок) И Выборка.КоличествоСтавок < 1 Тогда
					ПредставлениеРеглУчет.Добавить(СтрШаблон(ТекстПредставления.КоличествоСтавок, Формат(Выборка.КоличествоСтавок, "ЧН=")));
				КонецЕсли;
			ИначеЕсли Выборка.ИмяДокументаРеглУчет = "КадровыйПеревод" Тогда
				ДанныеДокумента.Вставить("ДатаНачала", Выборка.ДатаСобытия);
				ДанныеДокумента.Вставить("ИзменитьПодразделениеИДолжность", Истина);
				ДанныеДокумента.Вставить("ОбособленноеПодразделение", Выборка.Организация);
				ДанныеДокумента.Вставить("Подразделение", Выборка.Подразделение);
				ДанныеДокумента.Вставить("ПодразделениеУпр", Выборка.ПодразделениеУпр);
				ДанныеДокумента.Вставить("Должность", Выборка.Должность);
				ДанныеДокумента.Вставить("ВидЗанятости",
					ВидЗанятостиРаботающегоСотрудника(Выборка.Сотрудник, Выборка.ДатаСобытия, Выборка.ДокументРеглУчет));
				ДанныеДокумента.Вставить("ТрудоваяФункция", Выборка.ТрудоваяФункция);
				ДанныеДокумента.Вставить("ГрафикРаботы", Выборка.ГрафикРаботы);
				ДанныеДокумента.Вставить("КоличествоСтавок", Выборка.КоличествоСтавок);
				Если ЗначениеЗаполнено(Выборка.НаименованиеНачисления) Тогда
					ДанныеДокумента.Вставить("ИзменитьНачисления", Истина);
				КонецЕсли;
				
				ПредставлениеУпрУчет.Добавить(СтрШаблон(ТекстПредставления.МестоРаботы,
												?(ЗначениеЗаполнено(Выборка.ДолжностьУпр), Выборка.ДолжностьУпр, ТекстПредставления.Пусто),
												?(ЗначениеЗаполнено(Выборка.ПодразделениеУпр), Выборка.ПодразделениеУпр, ТекстПредставления.Пусто)));

				ПредставлениеРеглУчет.Добавить(СтрШаблон(ТекстПредставления.МестоРаботы,
												?(ЗначениеЗаполнено(Выборка.Должность), Выборка.Должность, ТекстПредставления.Пусто),
												?(ЗначениеЗаполнено(Выборка.Подразделение), Выборка.Подразделение, ТекстПредставления.Пусто)));

				Если ЗначениеЗаполнено(Выборка.КоличествоСтавокУпр) И Выборка.КоличествоСтавокУпр < 1 Тогда
					ПредставлениеРеглУчет.Добавить(СтрШаблон(ТекстПредставления.КоличествоСтавокУпр, Формат(Выборка.КоличествоСтавокУпр, "ЧН=")));
				КонецЕсли;
												
				Если ЗначениеЗаполнено(Выборка.КоличествоСтавок) И Выборка.КоличествоСтавок < 1 Тогда
					ПредставлениеРеглУчет.Добавить(СтрШаблон(ТекстПредставления.КоличествоСтавок, Формат(Выборка.КоличествоСтавок, "ЧН=")));
				КонецЕсли;
			ИначеЕсли Выборка.ИмяДокументаРеглУчет = "Увольнение" Тогда
				ДанныеДокумента.Вставить("ДатаУвольнения", Выборка.ДатаСобытия);
				ДанныеДокумента.Вставить("СтатьяТКРФ", СтатьяТК);
				ДанныеДокумента.Вставить("ОснованиеУвольнения", Выборка.ОснованиеУвольнения);
				
				ПредставлениеРеглУчет.Добавить(СтрШаблон(ТекстПредставления.Основание, СтатьяТК));
				Если ЗначениеЗаполнено(Выборка.ОснованиеУвольнения) Тогда
					ПредставлениеУпрУчет.Добавить(Выборка.ОснованиеУвольнения);
					ПредставлениеРеглУчет.Добавить(Выборка.ОснованиеУвольнения);
				КонецЕсли;
			КонецЕсли; 
			ДанныеДокумента.Вставить("ПредставлениеУпрУчет", СтрСоединить(ПредставлениеУпрУчет, Символы.ПС));
			ДанныеДокумента.Вставить("ПредставлениеРеглУчет", СтрСоединить(ПредставлениеРеглУчет, Символы.ПС));
			
			Начисления = Новый Массив;
			Пока Выборка.Следующий() Цикл
				Если ЗначениеЗаполнено(Выборка.НаименованиеНачисления) Тогда
					НачислениеРегл = ПланыВидовРасчета.Начисления.НайтиПоНаименованию(Выборка.НаименованиеНачисления, Истина);
					ДанныеНачисления = Новый Структура;
					ДанныеНачисления.Вставить("Начисление", НачислениеРегл);
					ДанныеНачисления.Вставить("НачислениеУпр", Выборка.ВидНачисленияУдержания);
					ДанныеНачисления.Вставить("Размер", Выборка.Сумма);
					Начисления.Добавить(ДанныеНачисления);
				КонецЕсли;
			КонецЦикла;
			ДанныеДокумента.Вставить("Начисления", Начисления);
			ДанныеДляЗаполнения.Данные.Добавить(ДанныеДокумента);
		КонецЦикла;
	КонецЦикла;
	
	Возврат ДанныеДляЗаполнения;
КонецФункции


// Вид занятости для документа Прием на работу
//
// Параметры:
//  Организация - СправочникСсылка.Организации - организация приема
//  Сотрудник - СправочникСсылка.Сотрудники - сотрудник документа приема
//  ФизическоеЛицо - СправочникСсылка.ФизическиеЛица - физ. лицо сотрудника
//  ДатаПриема - Дата - дата, на которую будет получен вид занятости
//  ДокументПриема - ДокументСсылка.ПриемНаРаботу - уже созданный кадровый документ регл. учета для исключения
//
// Возвращаемое значение: 
//   ПеречислениеСсылка.ВидыЗанятости
//
Функция ВидЗанятостиНовогоСотрудника(Организация, Сотрудник, ФизическоеЛицо, ДатаПриема, ДокументПриема) Экспорт
	ПараметрыПолучения = КадровыйУчет.ПараметрыПолученияСотрудниковОрганизацийПоСпискуФизическихЛиц();
	ПараметрыПолучения.СписокФизическихЛиц = Новый Массив;
	ПараметрыПолучения.СписокФизическихЛиц.Добавить(ФизическоеЛицо);
	ПараметрыПолучения.ОкончаниеПериода = ДатаПриема;
	ПараметрыПолучения.ИсключаемыйРегистратор = ДокументПриема;
	ПараметрыПолучения.РаботникиПоДоговорамГПХ = Ложь;
	ПараметрыПолучения.КадровыеДанные = "ГоловнаяОрганизация,ВидЗанятости,ДатаПриема,ДатаУвольнения";
	
	ДанныеСотрудника = КадровыйУчет.СотрудникиОрганизации(Истина, ПараметрыПолучения);
	ВидЗанятости = Неопределено;
	ДанныеСотрудника.Колонки.Добавить("СотрудникАктуален", Новый ОписаниеТипов("Булево"));
	Для Каждого СтрСотрудник Из ДанныеСотрудника Цикл
		Если СтрСотрудник.ДатаПриема <= ДатаПриема
			И (СтрСотрудник.ДатаУвольнения > ДатаПриема ИЛИ НЕ ЗначениеЗаполнено(СтрСотрудник.ДатаУвольнения)) Тогда
			СтрСотрудник.СотрудникАктуален = Истина;
		КонецЕсли;
	КонецЦикла;
	
	АктуальныеСотрудники = ДанныеСотрудника.Скопировать(Новый Структура("СотрудникАктуален", Истина));
	ОтборОрганизация = Новый Структура("ГоловнаяОрганизация", РегламентированнаяОтчетность.ГоловнаяОрганизация(Организация));
	СотрудникиОрганизации = АктуальныеСотрудники.НайтиСтроки(ОтборОрганизация);
	Для Каждого Строка Из СотрудникиОрганизации Цикл
		Если Строка.ВидЗанятости = Перечисления.ВидыЗанятости.ОсновноеМестоРаботы
			ИЛИ Строка.ВидЗанятости = Перечисления.ВидыЗанятости.Совместительство Тогда
			ВидЗанятости = Перечисления.ВидыЗанятости.ВнутреннееСовместительство;
		КонецЕсли;
	КонецЦикла;
	
	Если ВидЗанятости = Неопределено Тогда
		ОтборОсновноеМестоРаботы = Новый Структура("ВидЗанятости", Перечисления.ВидыЗанятости.ОсновноеМестоРаботы);
		Если АктуальныеСотрудники.НайтиСтроки(ОтборОсновноеМестоРаботы).Количество() > 0 Тогда
			ВидЗанятости = Перечисления.ВидыЗанятости.Совместительство;
		КонецЕсли;
	КонецЕсли;
	
	Если НЕ ЗначениеЗаполнено(ВидЗанятости) Тогда
		ВидЗанятости = Перечисления.ВидыЗанятости.ОсновноеМестоРаботы;
	КонецЕсли;
	
	Возврат ВидЗанятости;
КонецФункции

// Вид занятости для документа Прием на работу
//
// Параметры:
//  Сотрудник - СправочникСсылка.Сотрудники - сотрудник документа приема
//  ДатаСобытия - Дата - дата, на которую будет получен вид занятости
//  ИсключитьКадровыйДокумент - ДокументСсылка.ПриемНаРаботу, ДокументСсылка.КадровыйПеревод - кадровый документ для исключения
//
// Возвращаемое значение: 
//   ПеречислениеСсылка.ВидыЗанятости
//
Функция ВидЗанятостиРаботающегоСотрудника(Сотрудник, ДатаСобытия, ИсключитьКадровыйДокумент) Экспорт
	Отбор = Новый Массив;
	ЗарплатаКадрыОбщиеНаборыДанных.ДобавитьВКоллекциюОтбор(Отбор, "Регистратор", "<>", ИсключитьКадровыйДокумент);
	
	ПоляОтбораПериодическихДанных = Новый Структура;
	ПоляОтбораПериодическихДанных.Вставить("КадроваяИсторияСотрудников", Отбор);
	Поля = "ВидЗанятости";
	
	ДанныеСотрудников = КадровыйУчет.КадровыеДанныеСотрудников(Истина, Сотрудник, Поля, ДатаСобытия, ПоляОтбораПериодическихДанных);
	Если ДанныеСотрудников.Количество() > 0 Тогда
		ВидЗанятости = ДанныеСотрудников[0].ВидЗанятости;
	КонецЕсли;
	
	Возврат ?(ЗначениеЗаполнено(ВидЗанятости), ВидЗанятости, Перечисления.ВидыЗанятости.ОсновноеМестоРаботы);
КонецФункции

#КонецОбласти	

#КонецЕсли
