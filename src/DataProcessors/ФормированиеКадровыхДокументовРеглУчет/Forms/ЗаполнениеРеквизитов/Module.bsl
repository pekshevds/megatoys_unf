
#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	Для Каждого Элемент Из Параметры.СписокПодразделений Цикл
		НоваяСтрока = СоответствиеПодразделений.Добавить();
		НоваяСтрока.ПодразделениеУпр = Элемент.Значение;
	КонецЦикла;
	
	Для Каждого Элемент Из Параметры.СписокДолжностей Цикл
		НоваяСтрока = ТрудовыеФункции.Добавить();
		НоваяСтрока.Должность = Элемент.Значение;
	КонецЦикла;

	Для Каждого Элемент Из Параметры.СписокНачислений Цикл
		НоваяСтрока = СоответствиеНачислений.Добавить();
		НоваяСтрока.НачислениеУпр = Элемент.Значение;
	КонецЦикла;
	
	УстановитьВидимостьЭлементов();
	Элементы.ИнформацияОРаботе.Заголовок = ТекстИнформацииДляПользователя(Параметры.ТипыДокументов);
КонецПроцедуры

#КонецОбласти


#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура КомандаПродолжить(Команда)
	ВыбранныеДанные = Новый Структура;
	
	Подразделения = Новый Соответствие;
	Для Каждого Строка Из СоответствиеПодразделений Цикл
		Если ЗначениеЗаполнено(Строка.ПодразделениеРегл) Тогда
			Подразделения.Вставить(Строка.ПодразделениеУпр, Строка.ПодразделениеРегл);
		КонецЕсли;
	КонецЦикла;
	ВыбранныеДанные.Вставить("Подразделения", Подразделения);
	
	Должности = Новый Соответствие;
	Для Каждого Строка Из ТрудовыеФункции Цикл
		Если ЗначениеЗаполнено(Строка.ТрудоваяФункция) Тогда
			Должности.Вставить(Строка.Должность, Строка.ТрудоваяФункция);
		КонецЕсли;
	КонецЦикла;
	ВыбранныеДанные.Вставить("ТрудовыеФункции", Должности);
	
	Начисления = Новый Соответствие;
	Для Каждого Строка Из СоответствиеНачислений Цикл
		Если ЗначениеЗаполнено(Строка.НачислениеРегл) Тогда
			Начисления.Вставить(Строка.НачислениеУпр, Строка.НачислениеРегл);
		КонецЕсли;
	КонецЦикла;
	ВыбранныеДанные.Вставить("Начисления", Начисления);
	
	Закрыть(ВыбранныеДанные);
КонецПроцедуры

&НаКлиенте
Процедура Отмена(Команда)
	Закрыть();
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаСервере
Функция ТекстИнформацииДляПользователя(ТипыДокументов)
	
	ТекстДокументы = Новый Массив;
	Если ТипыДокументов.НайтиПоЗначению("ПриемНаРаботу") <> Неопределено Тогда
		ТекстДокументы.Добавить(Метаданные.Документы.ПриемНаРаботу.Синоним);
	КонецЕсли;
	Если ТипыДокументов.НайтиПоЗначению("КадровыйПеревод") <> Неопределено Тогда
		ТекстДокументы.Добавить(Метаданные.Документы.КадровыйПеревод.Синоним);
	КонецЕсли;
	ПолныйТекстДокументы = СтрСоединить(ТекстДокументы, ", ");
	
	ТекстРеквизиты = Новый Массив;
	Если СоответствиеПодразделений.Количество() > 0 Тогда
		ТекстРеквизиты.Добавить(НСтр("ru = 'Подразделение'"));
	КонецЕсли;
	
	Если СоответствиеНачислений.Количество() > 0 Тогда
		ТекстРеквизиты.Добавить(НСтр("ru = 'Начисление'"));
	КонецЕсли;
	
	Если ТрудовыеФункции.Количество() > 0 Тогда
		ТекстРеквизиты.Добавить(НСтр("ru = 'Трудовую функцию'"));
	КонецЕсли;	
	
	ВсегоТаблиц = ТекстРеквизиты.Количество();
	Если ВсегоТаблиц > 1 Тогда
		ПоследнийТекст = ТекстРеквизиты[ТекстРеквизиты.Количество() - 1];
		ТекстРеквизиты.Удалить(ТекстРеквизиты.Количество() - 1);
		ПолныйТекстРеквизиты = СтрШаблон(НСтр("ru = '%1 и %2'"), СтрСоединить(ТекстРеквизиты, ", "), ПоследнийТекст);
	Иначе
		ПолныйТекстРеквизиты = ТекстРеквизиты[0];
	КонецЕсли;
	
	ТекстТаблицы = ?(ВсегоТаблиц = 1, НСтр("ru = 'таблице'"), НСтр("ru = 'таблицах'"));
	ТекстИнформации = СтроковыеФункции.ФорматированнаяСтрока(НСтр("ru = 'В документах <span style=""font:ШрифтПолужирныйУНФ"">%1</span> регламентированного учета нужно заполнять <span style=""font:ШрифтПолужирныйУНФ"">%2</span>. Нужные значения можно указать в %3 ниже.
		|Нажатие на <span style=""font:ШрифтПолужирныйУНФ"">%4</span> создаст документы с указанными данными. Если оставить таблицы пустыми, данные документов можно будет изменить вручную после их создания.'"),
		ПолныйТекстДокументы, ПолныйТекстРеквизиты, ТекстТаблицы, Элементы.Продолжить.Заголовок);
	
	Возврат ТекстИнформации;
КонецФункции


&НаСервере
Процедура УстановитьВидимостьЭлементов()
	Элементы.СоответствиеПодразделений.Видимость = СоответствиеПодразделений.Количество() > 0;
	Элементы.ТрудовыеФункции.Видимость = ТрудовыеФункции.Количество() > 0;
	Элементы.Начисления.Видимость = СоответствиеНачислений.Количество() > 0;
КонецПроцедуры

#КонецОбласти