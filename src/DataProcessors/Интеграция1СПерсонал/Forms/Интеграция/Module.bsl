
#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	ЦветСтиляПоясняющийОшибкуТекст 	= ЦветаСтиля.ПоясняющийОшибкуТекст;
	ЦветСтиляИнформационнойНадписи  = ЦветаСтиля.ТекстИнформационнойНадписи;
	
	ЕстьПраваНаПросмотрЖурналаРегистрации = ПравоДоступа("ЖурналРегистрации", Метаданные); 
	Приложение = Перечисления.ПриложенияДляИнтеграции.УправлениеПерсоналом;
	
	СтруктураПредприятияСоответствуетСтруктуреЮридическихЛиц = Истина;
	Если ОбщегоНазначения.ПодсистемаСуществует("ЗарплатаКадрыПриложения.ОрганизационнаяСтруктура") Тогда
		МодульОрганизационнаяСтруктура = ОбщегоНазначения.ОбщийМодуль("ОрганизационнаяСтруктура");
		СтруктураПредприятияСоответствуетСтруктуреЮридическихЛиц = МодульОрганизационнаяСтруктура.СтруктураПредприятияСоответствуетСтруктуреЮридическихЛиц();
	КонецЕсли;
	
	ВыполнитьНачальноеЗаполнение();
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовШапкиФормы

&НаКлиенте
Процедура ФлагОтключитьПриложениеПриИзменении(Элемент)
	
	ОбновитьДоступностьОтключенияПриложения(ЭтаФорма);
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура ПодключитьПриложение(Команда)
	
	Если ЗначениеЗаполнено(Объект.АдресПриложения) 
		И ЗначениеЗаполнено(КлючИдентификаторКлиента)
		И ЗначениеЗаполнено(КлючСекретКлиента) Тогда
		НачатьПодключение();
	Иначе
		ТекстПредупреждения = НСтр("ru = 'Для подключения заполните данные в форме'");
		ПоказатьПредупреждение( ,ТекстПредупреждения);
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ЗагрузитьНастройкиИзФайла(Команда)
	
	ДиалогВыбораФайла = Новый ДиалогВыбораФайла(РежимДиалогаВыбораФайла.Открытие);
	ДиалогВыбораФайла.Заголовок = НСтр("ru='Выберите файл с настройками подключения к приложению 1С:Персонал'");
	ДиалогВыбораФайла.Фильтр = НСтр("ru = 'Файл с настройками (*.json)|*.json'");
	ОбработчикЗавершения = Новый ОписаниеОповещения("ФайлНастроекПослеВыбора", ЭтотОбъект);
	ФайловаяСистемаКлиент.ПоказатьДиалогВыбора(ОбработчикЗавершения, ДиалогВыбораФайла);
	
КонецПроцедуры

&НаКлиенте
Процедура НастройкаПравилВыгрузки(Команда)
	
	ПараметрыОткрытия = Новый Структура("Приложение", Приложение);
	ОткрытьФорму("Обработка.ИнтеграцияУправлениеПерсоналом.Форма.НастройкаПравилВыгрузки",ПараметрыОткрытия,ЭтаФорма);
	
КонецПроцедуры

&НаКлиенте
Процедура ОшибкиЗаполненияОбъектов(Команда)
	
	ПараметрыОткрытия = Новый Структура("Приложение", Приложение);
	ОткрытьФорму("Обработка.ИнтеграцияУправлениеПерсоналом.Форма.ОшибкиЗаполненияОбъектов",ПараметрыОткрытия,ЭтаФорма);
	
КонецПроцедуры

&НаКлиенте
Процедура ПоказатьСобытияОбмена(Команда)

	ОтборЖурналаРегистрации = ОтборЖурналаРегистрации(ПредопределенноеЗначение("Перечисление.ВидыСобытийОбменаУправлениеПерсоналом.Обмен"), "");
	ЖурналРегистрацииКлиент.ОткрытьЖурналРегистрации(ОтборЖурналаРегистрации, ЭтаФорма);
	
КонецПроцедуры

&НаКлиенте
Процедура ОткрытьЖурналРегистрацииОшибки(Команда)
	
	ОтборЖурналаРегистрации = ОтборЖурналаРегистрации(Неопределено, "Ошибка");
	ЖурналРегистрацииКлиент.ОткрытьЖурналРегистрации(ОтборЖурналаРегистрации);
	
	
КонецПроцедуры

&НаКлиенте
Процедура ВыполнитьОбмен(Команда)
	
	Если ЕстьАктивныеФоновыеЗадания() Тогда
		ТекстСообщения = НСтр("ru = 'Обмен уже выполняется, повторите попытку позже.'");
		ОбщегоНазначенияКлиент.СообщитьПользователю(ТекстСообщения);
		Возврат;
	КонецЕсли;
	
	ОчиститьСообщения();
	
	ДлительнаяОперация = ДлительнаяОперацияВыполнитьОбмен();
	ПараметрыОжидания = ДлительныеОперацииКлиент.ПараметрыОжидания(ЭтотОбъект);
	ПараметрыОжидания.ВыводитьОкноОжидания = Истина;
	ПараметрыОжидания.ОповещениеПользователя.Показать = Истина;
	ПараметрыОжидания.ОповещениеПользователя.Текст = НСтр("ru = 'Обмен выполнен.'");
	
	ОповещениеОЗавершении = Новый ОписаниеОповещения("ВыполнитьОбменЗавершение", ЭтотОбъект);
	ДлительныеОперацииКлиент.ОжидатьЗавершение(ДлительнаяОперация, ОповещениеОЗавершении, ПараметрыОжидания);
	
КонецПроцедуры

&НаКлиенте
Процедура ВыполнитьОбменВыгрузитьЖурнал(Команда)
	
	ЗаголовокВопроса = НСтр("ru = 'Подтверждение'");
	ТекстВопроса = НСтр("ru = 'Подготовка данных для отправки в службу технической поддержки приложения.
		|Обмен будет выполнен с записью событий в журнал регистрации и выгрузкой журнал в файл для отправки в службу технической поддержки.'");
	
	ОповещениеОЗавершении = Новый ОписаниеОповещения("ВыполнитьОбменВыгрузитьЖурналПродолжение", ЭтаФорма);
	ПоказатьВопрос(ОповещениеОЗавершении, ТекстВопроса, ИнтеграцияУправлениеПерсоналомКлиента.ОписаниеКнопокВопроса(),,,ЗаголовокВопроса);
	
КонецПроцедуры

&НаКлиенте
Процедура ОбновитьСообщениеРезультатОбмена(Команда)
	ОбновитьРезультатОбменаНаСервере();
КонецПроцедуры

&НаКлиенте
Процедура ИзменитьВидыКонтактнойИнформации(Команда)
	
	ОповещениеОЗакрытии = Новый ОписаниеОповещения("ИзменитьВидыКонтактнойИнформацииЗавершение", ЭтотОбъект);
	ПараметрыОткрытия = Новый Структура("ВидКИМобильныйТелефон,ВидКИАдресЭлектроннойПочты", ВидКИМобильныйТелефон, ВидКИАдресЭлектроннойПочты);
	ОткрытьФорму("Обработка.ИнтеграцияУправлениеПерсоналом.Форма.ИзменитьВидыКонтактнойИнформации",ПараметрыОткрытия,ЭтаФорма,,,,
			ОповещениеОЗакрытии,РежимОткрытияОкнаФормы.БлокироватьОкноВладельца);
	
КонецПроцедуры

&НаКлиенте
Процедура ИзменитьПубликуемуюСтруктураКомпании(Команда)
	
	ОповещениеОЗакрытии = Новый ОписаниеОповещения("ИзменитьПубликуемуюСтруктураКомпанииЗавершение", ЭтотОбъект);
	ПараметрыОткрытия = Новый Структура("ПубликоватьСтруктуруЮридическихЛиц", ПубликоватьСтруктуруЮридическихЛиц);
	ОткрытьФорму("Обработка.ИнтеграцияУправлениеПерсоналом.Форма.ИзменитьСтруктуруКомпании",ПараметрыОткрытия,ЭтаФорма,,,,
			ОповещениеОЗакрытии,РежимОткрытияОкнаФормы.БлокироватьОкноВладельца);
	
КонецПроцедуры

&НаКлиенте
Процедура СоставОтправляемыхДанных(Команда)
	
	ПараметрыОткрытия = Новый Структура("Приложение", Приложение);
	ОткрытьФорму("Обработка.ИнтеграцияУправлениеПерсоналом.Форма.РегистрацияИзмененийДляОбмена",ПараметрыОткрытия,ЭтаФорма);
	
КонецПроцедуры

&НаКлиенте
Процедура ИзменитьНастройкиПодключения(Команда)
	
	ОповещениеОЗакрытии = Новый ОписаниеОповещения("ИзменитьНастройкиПодключенияЗавершение", ЭтотОбъект);
	ПараметрыОткрытия = Новый Структура("Приложение", Приложение);
	ОткрытьФорму("Обработка.ИнтеграцияУправлениеПерсоналом.Форма.ИзменитьНастройкиПодключения",
		ПараметрыОткрытия,ЭтаФорма,,,,ОповещениеОЗакрытии,РежимОткрытияОкнаФормы.БлокироватьОкноВладельца);
	
КонецПроцедуры

&НаКлиенте
Процедура ОтключитьПриложение(Команда)
	
	ЗаголовокВопроса = НСтр("ru = 'Подтверждение'");
	ТекстВопроса = НСтр("ru = 'Отключить приложение 1С:Персонал?'");
	ОповещениеОЗавершении = Новый ОписаниеОповещения("ПриОтветеНаВопросОтключить", ЭтаФорма);
	ПоказатьВопрос(ОповещениеОЗавершении, ТекстВопроса, ИнтеграцияУправлениеПерсоналомКлиента.ОписаниеКнопокВопроса(),,,ЗаголовокВопроса);

КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

#Область ЗагрузкаНастроекИзФайла

&НаКлиенте
Процедура ФайлНастроекПослеВыбора(ВыбранныеФайлы, ДополнительныеПараметры) Экспорт

	Если ТипЗнч(ВыбранныеФайлы) = Тип("Массив") И ВыбранныеФайлы.Количество() > 0 Тогда
		
		Объект.АдресПриложения 		= "";
		КлючИдентификаторКлиента 	= "";
		КлючСекретКлиента 			= "";
		
		Обработчик = Новый ОписаниеОповещения("ФайлНастроекПослеВыбораЗавершение", ЭтотОбъект);
		НачатьСозданиеДвоичныхДанныхИзФайла(Обработчик, ВыбранныеФайлы[0]);
		
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ФайлНастроекПослеВыбораЗавершение(ДвоичныеДанные, ДополнительныеПараметры) Экспорт

	АдресФайла = ПоместитьВоВременноеХранилище(ДвоичныеДанные, УникальныйИдентификатор);
	Результат = НастройкиИзФайлаНаСервере(АдресФайла);
	Если Результат.СообщениеОбОшибке <> Неопределено Тогда
		ПоказатьПредупреждение(,Результат.СообщениеОбОшибке);
	Иначе
		Объект.АдресПриложения 		= Результат.Настройки["url"];
		КлючИдентификаторКлиента 	= Результат.Настройки["clientID"];
		КлючСекретКлиента 			= Результат.Настройки["clientSecret"];
	КонецЕсли;

КонецПроцедуры

&НаСервереБезКонтекста
Функция НастройкиИзФайлаНаСервере(АдресФайла)
	
	Результат = Новый Структура("Настройки,СообщениеОбОшибке");
	
	ИмяВременногоФайла = ПолучитьИмяВременногоФайла();
	ДвоичныеДанныеФайла = ПолучитьИзВременногоХранилища(АдресФайла);
	ДвоичныеДанныеФайла.Записать(ИмяВременногоФайла);
	УдалитьИзВременногоХранилища(АдресФайла);
	
	НетНастроек = Ложь;
	ЧтениеJSON = Новый ЧтениеJSON;
	Попытка
		ЧтениеJSON.ОткрытьФайл(ИмяВременногоФайла);
		Настройки = ПрочитатьJSON(ЧтениеJSON, Истина);
		Если Не ЗначениеЗаполнено(Настройки["url"]) Или Не ЗначениеЗаполнено(Настройки["clientID"]) Или Не ЗначениеЗаполнено(Настройки["clientSecret"]) Тогда
			НетНастроек = Истина;
		Иначе
			Результат.Настройки = Настройки;
		КонецЕсли;
	Исключение
		НетНастроек = Истина;
	КонецПопытки;
	
	Если НетНастроек Тогда
		СообщениеОбОшибке = НСтр("ru='Выбранный файл не содержит настроек подключения к приложению 1С:Персонал.'");
		Результат.СообщениеОбОшибке = СообщениеОбОшибке;
	КонецЕсли;
	
	ЧтениеJSON.Закрыть();
	УдалитьФайлы(ИмяВременногоФайла);
	
	Возврат Результат;

КонецФункции

#КонецОбласти

#Область Подключение

&НаКлиенте
Процедура НачатьПодключение()

	ДлительнаяОперация = НачатьПодключениеНаСервере();
	ПараметрыОжидания = ДлительныеОперацииКлиент.ПараметрыОжидания(ЭтотОбъект);
	ПараметрыОжидания.ВыводитьОкноОжидания = Истина;
	ПараметрыОжидания.ОповещениеПользователя.Показать = Истина;
	ПараметрыОжидания.ОповещениеПользователя.Текст = НСтр("ru = 'Подключение подключения.'");
	
	ОповещениеОЗавершении = Новый ОписаниеОповещения("ПодключениеЗавершение", ЭтотОбъект);
	ДлительныеОперацииКлиент.ОжидатьЗавершение(ДлительнаяОперация, ОповещениеОЗавершении, ПараметрыОжидания);

КонецПроцедуры 

&НаСервере
Функция НачатьПодключениеНаСервере()
	
	Ключи = Новый Структура("ИдентификаторКлиента,СекретКлиента", КлючИдентификаторКлиента, КлючСекретКлиента);
	НастройкиПодключения = Новый Структура("АдресПриложения,Ключи", Объект.АдресПриложения, Ключи);
	
	ПараметрыПроверки = Новый Структура;
	ПараметрыПроверки.Вставить("Приложение", Приложение);
	ПараметрыПроверки.Вставить("Настройки", НастройкиПодключения);
	
	ПараметрыВыполненияВФоне = ДлительныеОперации.ПараметрыВыполненияВФоне(УникальныйИдентификатор);
	ПараметрыВыполненияВФоне.Вставить("НаименованиеФоновогоЗадания", НСтр("ru = 'Проверка настроек'"));
	ПараметрыВыполненияВФоне.ОжидатьЗавершение = 0;
	Возврат ДлительныеОперации.ВыполнитьВФоне(
		"ИнтеграцияУправлениеПерсоналомОбмен.ПроверкаНастроекПодключенияФоновоеЗадание",
		ПараметрыПроверки,
		ПараметрыВыполненияВФоне);
	
КонецФункции

&НаКлиенте
Процедура ПодключениеЗавершение(Результат, ДополнительныеПараметры) Экспорт

	Если Результат = Неопределено Тогда
		СообщениеПроверки = НСтр("ru = 'Не удалось выполнить проверку настроек  подключения.'");
		ОбщегоНазначенияКлиент.СообщитьПользователю(СообщениеПроверки);
		Возврат;
	ИначеЕсли Результат.Статус = "Ошибка" Тогда
		СообщениеПроверки = НСтр("ru = 'При выполнении фонового задания возникла ошибка'");
		ТекстСообщения = СтрШаблон("%1: %2%3",СообщениеПроверки, Символы.ПС, Результат.КраткоеПредставлениеОшибки) + Символы.ПС + Результат.КраткоеПредставлениеОшибки;
		ОбщегоНазначенияКлиент.СообщитьПользователю(ТекстСообщения);
		Возврат;
	КонецЕсли;
	
	ОбработатьРезультатПроверки(Результат.АдресРезультата);
	
КонецПроцедуры

&НаСервере
Процедура ОбработатьРезультатПроверки(АдресРезультата)
	
	НастройкиПравильные = Ложь;
	Результат = ПолучитьИзВременногоХранилища(АдресРезультата);
	Если ЗначениеЗаполнено(Результат.СообщениеОбОшибке) Тогда
		СообщениеПроверки = Результат.СообщениеОбОшибке;
	ИначеЕсли Результат.КодСостояния = Неопределено Тогда
		СообщениеПроверки = НСтр("ru = 'Не удалось получить ответ сервера. Подробнее см в Журнале регистрации.'");
	ИначеЕсли Результат.КодСостояния = 200 Тогда
		НастройкиПравильные = Истина;
	ИначеЕсли Результат.КодСостояния = 404 Тогда
		СообщениеПроверки = НСтр("ru = 'Приложение недоступно по указанному адресу. Подробнее см в Журнале регистрации.'");
	Иначе
		СообщениеПроверки = НСтр("ru = 'Не удалось получить ответ сервера. Подробнее см в Журнале регистрации.'");
	КонецЕсли; 
	
	Если ЗначениеЗаполнено(СообщениеПроверки) Тогда
		ОбщегоНазначения.СообщитьПользователю(СообщениеПроверки);
	ИначеЕсли НастройкиПравильные Тогда
		
		Настройки = РегистрыСведений.НастройкиПодключения1СПерсонал.СоздатьМенеджерЗаписи();
		Настройки.АдресПриложения = Объект.АдресПриложения;
		Настройки.Записать();
		
		УстановитьПривилегированныйРежим(Истина);
		Ключи = Новый Структура("ИдентификаторКлиента,СекретКлиента", КлючИдентификаторКлиента, КлючСекретКлиента);
		ИнтеграцияУправлениеПерсоналом.СохранитьКлючиПриложения(Приложение, Ключи);
		УстановитьПривилегированныйРежим(Ложь); 
		
		ВыполнитьНачальноеЗаполнение();
		
	КонецЕсли;

КонецПроцедуры

#КонецОбласти

#Область Обмен

&НаСервереБезКонтекста
Функция ЕстьАктивныеФоновыеЗадания()
	
	Возврат ИнтеграцияУправлениеПерсоналом.ЕстьАктивныеФоновыеЗаданияОбмен(Перечисления.ПриложенияДляИнтеграции.УправлениеПерсоналом);

КонецФункции

&НаСервере
Функция ДлительнаяОперацияВыполнитьОбмен()
	
	ПараметрыПроцедуры = Новый Структура("ПодготовитьДанныеДляТехПоддержки", Ложь);
	
	ПараметрыВыполненияВФоне = ДлительныеОперации.ПараметрыВыполненияВФоне(УникальныйИдентификатор);
	
	ПараметрыВыполненияВФоне.Вставить("НаименованиеФоновогоЗадания",
		СтрШаблон(НСтр("ru = 'Выполнение обмена с приложением 1С:Персонал'")));
	ПараметрыВыполненияВФоне.ОжидатьЗавершение = 0;
	ПараметрыВыполненияВФоне.КлючФоновогоЗадания = Интеграция1СПерсонал.КлючФоновогоЗаданияОбмен();
	ДлительнаяОперация = ДлительныеОперации.ВыполнитьВФоне(
		"Интеграция1СПерсонал.ВыполнитьОбменФоновоеЗадание",
		ПараметрыПроцедуры,
		ПараметрыВыполненияВФоне);
		
	Возврат ДлительнаяОперация;
	
КонецФункции 

&НаКлиенте
Процедура ВыполнитьОбменЗавершение(ДлительнаяОперация, ДополнительныеПараметры) Экспорт

	Если ДлительнаяОперация = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	Если ДлительнаяОперация.Статус = "Ошибка" Тогда
		ПоказатьПредупреждение(, ДлительнаяОперация.КраткоеПредставлениеОшибки);
	КонецЕсли;
	
	ОбновитьРезультатОбменаНаСервере();

КонецПроцедуры 

&НаКлиенте
Процедура ВыполнитьОбменВыгрузитьЖурналПродолжение(Результат, Параметры) Экспорт
	
	Если Результат = КодВозвратаДиалога.Да Тогда
		ОчиститьСообщения();
		ВыполнитьОбменСохранитьРезультатВЖурнал();
	КонецЕсли;
	
КонецПроцедуры 

&НаКлиенте
Процедура ВыполнитьОбменСохранитьРезультатВЖурнал()

	ОповещениеОЗакрытии = Новый ОписаниеОповещения("ВыполнитьОбменСохранитьРезультатВЖурналЗавершение", ЭтотОбъект);
	
	ПараметрыОткрытия = ПараметрыОбменаССохранениемРезультата(Приложение);
	ОткрытьФорму("Обработка.ИнтеграцияУправлениеПерсоналом.Форма.ВыполнитьОбменСохранитьРезультат", ПараметрыОткрытия, ЭтаФорма,,,,ОповещениеОЗакрытии);
	
КонецПроцедуры 

&НаСервереБезКонтекста
Функция ПараметрыОбменаССохранениемРезультата(Приложение)
	
	ИмяФайла = СтрШаблон("%1_%2", "EventLogExchange", Строка(Новый УникальныйИдентификатор));
	
	ПараметрыОткрытия = Новый Структура();
	ПараметрыОткрытия.Вставить("СобытиеОбмена", 		Перечисления.ВидыСобытийОбменаУправлениеПерсоналом.Обмен);
	ПараметрыОткрытия.Вставить("Приложение", 			Приложение);
	ПараметрыОткрытия.Вставить("ИмяФайла", 				ИмяФайла);
	ПараметрыОткрытия.Вставить("ИмяМетода", 			"Интеграция1СПерсонал.ВыполнитьОбменФоновоеЗадание");
	ПараметрыОткрытия.Вставить("КлючФоновогоЗадания", 	Интеграция1СПерсонал.КлючФоновогоЗаданияОбмен());
	
	Возврат ПараметрыОткрытия;

КонецФункции

&НаКлиенте
Процедура ВыполнитьОбменСохранитьРезультатВЖурналЗавершение(Результат, ДополнительныеПараметры) Экспорт

	Если Результат = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	Если Результат.РезультатВыполненияОбмена = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	Если Не ПустаяСтрока(Результат.ПолноеИмяФайла) Тогда
		ТекстСообщения = СтрШаблон("%1: %2", НСтр("ru = 'Данные сохранены в'"), Результат.ПолноеИмяФайла);
		ОбщегоНазначенияКлиент.СообщитьПользователю(ТекстСообщения);
	КонецЕсли;

КонецПроцедуры

#КонецОбласти

#Область ВидыКИ

&НаКлиенте
Процедура ИзменитьВидыКонтактнойИнформацииЗавершение(Результат, Параметры) Экспорт
	
	Если Результат = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	Если ВидКИМобильныйТелефон <> Результат.ВидКИМобильныйТелефон Или ВидКИАдресЭлектроннойПочты <> Результат.ВидКИАдресЭлектроннойПочты Тогда
		СообщениеОбОшибке = Неопределено;
		СохранитьНовыеВидыКонтактнойИнформации(Результат.ВидКИМобильныйТелефон, Результат.ВидКИАдресЭлектроннойПочты, СообщениеОбОшибке);
		Если СообщениеОбОшибке = Неопределено Тогда
			Оповестить("ОбновитьСписокОшибокЗаполненияИнтеграцияУпралениеПерсоналом");
		Иначе	
			ОбщегоНазначенияКлиент.СообщитьПользователю(СообщениеОбОшибке);
		КонецЕсли;
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура СохранитьНовыеВидыКонтактнойИнформации(НовыйВидКИМобильныйТелефон, НовыйВидКИАдресЭлектроннойПочты, СообщениеОбОшибке)
	
	УстановитьПривилегированныйРежим(Истина);
	ИнтеграцияУправлениеПерсоналом.СохранитьНовыеВидыКонтактнойИнформации(НовыйВидКИМобильныйТелефон, НовыйВидКИАдресЭлектроннойПочты, СообщениеОбОшибке);
	УстановитьПривилегированныйРежим(Ложь);
	
	Если СообщениеОбОшибке = Неопределено Тогда
		ВидКИМобильныйТелефон = НовыйВидКИМобильныйТелефон;
		ВидКИАдресЭлектроннойПочты = НовыйВидКИАдресЭлектроннойПочты; 
		ОбновитьОписаниеВидаКонтактнойИнформации();
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура ОбновитьОписаниеВидаКонтактнойИнформации()

	ВидыКИ = Новый Массив;
	ВидыКИ.Добавить(Справочники.ВидыКонтактнойИнформации.ТелефонМобильныйФизическиеЛица);
	ВидыКИ.Добавить(Справочники.ВидыКонтактнойИнформации.EMailФизическиеЛица);
	НаименованиеВидовКИ = ОбщегоНазначения.ЗначениеРеквизитаОбъектов(ВидыКИ, "Наименование");
	
	Строка1 = НСтр("ru = 'В приложение 1С:Персонал выгружаются мобильные телефоны и адреса электронной почты сотрудников.'");
	Строка2 = НСтр("ru = 'По умолчанию используются предопределенные значения видов контактной информации: мобильный телефон - ""%1"" и адрес электронной почты - ""%2"". Можно создать собственные виды контактной информации и использовать их для выгрузки контактной информации в приложение.'");
	Строка2 = СтрШаблон(Строка2,
		НаименованиеВидовКИ[Справочники.ВидыКонтактнойИнформации.ТелефонМобильныйФизическиеЛица],
		НаименованиеВидовКИ[Справочники.ВидыКонтактнойИнформации.EMailФизическиеЛица]);
	ТекстЗаголовка = СтрШаблон("%1%2%3",Строка1,Символы.ПС,Строка2);
	
	Элементы.ДекорацияВидыКонтактнойИнформации.Заголовок = ТекстЗаголовка;

КонецПроцедуры 

#КонецОбласти

#Область СтруктураКомпании

&НаСервере
Процедура ОбновитьОписаниеПубликуемойСтруктуры()

	Если ПубликоватьСтруктуруЮридическихЛиц Тогда
		ТекстЗаголовка = НСтр("ru = 'Структура Компании в приложении 1С:Персонал соответствует Подразделениям организации (структуре юридических лиц).'");
	Иначе
		ТекстЗаголовка = НСтр("ru = 'Структура Компании в приложении 1С:Персонал соответствует Структуре предприятия.'");
	КонецЕсли;
	Элементы.ДекорацияОписаниеПубликуемойСтруктуры.Заголовок = ТекстЗаголовка;
	
КонецПроцедуры 

&НаКлиенте
Процедура ИзменитьПубликуемуюСтруктураКомпанииЗавершение(Результат, Параметры) Экспорт
	
	Если Результат = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	Если ПубликоватьСтруктуруЮридическихЛиц <> Результат.ПубликоватьСтруктуруЮридическихЛиц Тогда
		СообщениеОбОшибке = Неопределено;
		СохранитьИзменениеПубликуемойСтруктуры(Результат.ПубликоватьСтруктуруЮридическихЛиц, СообщениеОбОшибке);
		Если СообщениеОбОшибке = Неопределено Тогда
			Оповестить("ИзмененаПубликуемаяСтруктураКомпании");
		Иначе
			ОбщегоНазначенияКлиент.СообщитьПользователю(СообщениеОбОшибке);
		КонецЕсли;
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура СохранитьИзменениеПубликуемойСтруктуры(ЗначениеПубликоватьСтруктуруЮридическихЛиц, СообщениеОбОшибке)
	
	УстановитьПривилегированныйРежим(Истина);
	ИнтеграцияУправлениеПерсоналом.СохранитьНастройкуПубликуемойСтруктурыКомпании(ЗначениеПубликоватьСтруктуруЮридическихЛиц, СообщениеОбОшибке);
	УстановитьПривилегированныйРежим(Ложь);
	
	Если СообщениеОбОшибке = Неопределено Тогда
		ПубликоватьСтруктуруЮридическихЛиц = ЗначениеПубликоватьСтруктуруЮридическихЛиц;
		ОбновитьОписаниеПубликуемойСтруктуры();
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область Отключение

&НаКлиенте
Процедура ПриОтветеНаВопросОтключить(КодВозврата, ДополнительныеПараметры) Экспорт

	Если КодВозврата <> КодВозвратаДиалога.Да Тогда
		Возврат;
	КонецЕсли;
	
	БылиОшибки = ОтключитьПриложениеНаСервере();
	Если БылиОшибки Тогда
		ТекстСообщения = НСтр("ru = 'Ошибка при отключении. Подробнее см в Журнале регистрации.'");
	Иначе
		Элементы.СтраницаПриложениеПодключено.Доступность = Ложь;
		ПодключитьОбработчикОжидания("ОтложенноеОбновлениеИнтерфейса", 0.5, Истина);
		ТекстСообщения = НСтр("ru = 'Приложение 1С:Персонал отключено.'");
	КонецЕсли;
	
	ПоказатьПредупреждение(,ТекстСообщения);
	
КонецПроцедуры 

&НаСервере
Функция ОтключитьПриложениеНаСервере()

	Возврат ИнтеграцияУправлениеПерсоналом.ОчиститьДанныеПриОтключенииПриложения(Приложение);

КонецФункции

#КонецОбласти

#Область Прочие

&НаСервере
Процедура ВыполнитьНачальноеЗаполнение()

	ПрочитатьНастройкиИнтеграции();
	ОбновитьОписаниеВидаКонтактнойИнформации();
	ОбновитьОписаниеПубликуемойСтруктуры();
	ОбновитьЭУ();
	
	Если Объект.ИспользуетсяПриложение1СПерсонал Тогда
		
		СтрокаЗаголовок = НСтр("ru = '1С:Персонал.'");
		// Включаем страницу, т.к. могла быть выключена.
		Элементы.СтраницаПриложениеПодключено.Видимость = Истина;
		// Выключаем страницы, чтобы не было полосы прокрутки.
		Элементы.СтраницаПодключение.Видимость = Ложь;
		
		Элементы.Страницы.ТекущаяСтраница = Элементы.СтраницаПриложениеПодключено;
		
		ОбновитьРезультатОбменаНаСервере();
		УстановитьЗаголовокАдресПриложения();
		
	Иначе
		
		СтрокаЗаголовок = НСтр("ru = '1С:Персонал. Подключение.'");
		// Включаем страницу, т.к. могла быть выключена.
		Элементы.СтраницаПодключение.Видимость = Истина;
		// Выключаем страницы, чтобы не было полосы прокрутки.
		Элементы.СтраницаПриложениеПодключено.Видимость = Ложь;
		
		Элементы.Страницы.ТекущаяСтраница = Элементы.СтраницаПодключение;
		
	КонецЕсли;

КонецПроцедуры

&НаСервере
Процедура ПрочитатьНастройкиИнтеграции()

	Настройки = РегистрыСведений.НастройкиПодключения1СПерсонал.Настройки();
	Объект.АдресПриложения = Настройки.АдресПриложения;
	Объект.ИспользуетсяПриложение1СПерсонал = ПолучитьФункциональнуюОпцию("ИспользуетсяПриложение1СПерсонал");
	
	Настройки = РегистрыСведений.НастройкиИнтеграцииУправлениеПерсоналом.Настройки();
	ВидКИМобильныйТелефон 		= Настройки.ВидКИМобильныйТелефон;
	ВидКИАдресЭлектроннойПочты 	= Настройки.ВидКИАдресЭлектроннойПочты;
	ПубликоватьСтруктуруЮридическихЛиц = Настройки.ПубликоватьСтруктуруЮридическихЛиц;

КонецПроцедуры

&НаСервере
Процедура УстановитьЗаголовокАдресПриложения()

	ШаблонЗаголовка = НСтр("ru = '<body>Адрес приложения: <a href=""%1"">%2</a></body>'");
	СтрокаЗаголовка = СтрШаблон(ШаблонЗаголовка, Объект.АдресПриложения, Объект.АдресПриложения);
	ФорматированныйДокумент = Новый ФорматированныйДокумент;
	ФорматированныйДокумент.УстановитьHTML("<html>" + СтрокаЗаголовка + "</html>", Новый Структура);
	Элементы.ДекорацияАдресПриложения.Заголовок = ФорматированныйДокумент.ПолучитьФорматированнуюСтроку();

КонецПроцедуры

&НаСервереБезКонтекста
Функция ОтборЖурналаРегистрации(ВидСобытия, Уровень)
	
	Приложение = Перечисления.ПриложенияДляИнтеграции.УправлениеПерсоналом;
	Отбор = Новый Структура;
	
	ИменаСобытийЖР = ИнтеграцияУправлениеПерсоналом.ИменаСобытийЖР(Приложение);
	ИменаСобытий = Новый Массив;
	Для каждого ЭлементКоллекции Из ИменаСобытийЖР Цикл
		ИменаСобытий.Добавить(ЭлементКоллекции.Значение);
	КонецЦикла;
	Отбор.Вставить("СобытиеЖурналаРегистрации", ИменаСобытий);
	
	Если ЗначениеЗаполнено(ВидСобытия) Тогда
		СобытиеОбмена = РегистрыСведений.СобытияОбменаУпралениеПерсоналом.СобытиеОбмена(Приложение, ВидСобытия);
		Отбор.Вставить("ДатаНачала", 	СобытиеОбмена.ДатаНачала);
		Отбор.Вставить("ДатаОкончания", СобытиеОбмена.ДатаОкончания);
	Иначе
		Отбор.Вставить("ДатаНачала", НачалоДня(ТекущаяДатаСеанса()) - 86400*7);
	КонецЕсли;
	Если ЗначениеЗаполнено(Уровень) Тогда
		Отбор.Вставить("Уровень", Уровень);
	КонецЕсли;
	
	Возврат Отбор;

КонецФункции

&НаСервере
Процедура ОбновитьРезультатОбменаНаСервере()
	
	Событие = Перечисления.ВидыСобытийОбменаУправлениеПерсоналом.Обмен;
	РезультатОбмена = РегистрыСведений.СобытияОбменаУпралениеПерсоналом.СобытиеОбмена(Приложение, Событие);
	Если Не ЗначениеЗаполнено(РезультатОбмена.ДатаНачала) Тогда
		Элементы.ДекорацияРезультатОбмена.Заголовок = НСтр("ru = 'Обмен с приложением еще не выполнялся'");
		Элементы.ПоказатьСобытияОбмена.Видимость = Ложь;
	Иначе
		Элементы.ПоказатьСобытияОбмена.Видимость = ЕстьПраваНаПросмотрЖурналаРегистрации;
		СтрокаШаблон = НСтр("ru = 'Обмен выполнен: %1'");
		СтрокаЗаголовок = СтрШаблон(СтрокаШаблон, РезультатОбмена.ДатаОкончания);
		ЦветТекстаСообщения = ЦветСтиляИнформационнойНадписи;
		Если РезультатОбмена.БылиОшибки Тогда
			ЦветТекстаСообщения = ЦветСтиляПоясняющийОшибкуТекст;
			СтрокаБылиОшибки = НСтр("ru = 'При выполнении были ошибки.'");
			СтрокаЗаголовок = СтрШаблон("%1 %2", СтрокаЗаголовок, СтрокаБылиОшибки);
		КонецЕсли;
		Элементы.ДекорацияРезультатОбмена.ЦветТекста = ЦветТекстаСообщения;
		Элементы.ДекорацияРезультатОбмена.Заголовок = СтрокаЗаголовок;
	КонецЕсли;
		
КонецПроцедуры

&НаСервере
Процедура ОбновитьЭУ()
	
	ЗаголовокОтключение = НСтр("ru = 'При отключении будут удалены настройки интеграции с приложением 1С:Персонал.
	|Обмен с приложением больше не будет выполняться.'");
	Элементы.ДекорацияОтключениеПриложения.Заголовок = ЗаголовокОтключение;
	
	ОбновитьДоступностьОтключенияПриложения(ЭтаФорма);
	
	ОбщегоНазначенияКлиентСервер.УстановитьСвойствоЭлементаФормы(Элементы,
			"ГруппаПубликуемаяСтруктура", "Видимость",
			ПубликоватьСтруктуруЮридическихЛиц Или Не СтруктураПредприятияСоответствуетСтруктуреЮридическихЛиц);
			
	ОбщегоНазначенияКлиентСервер.УстановитьСвойствоЭлементаФормы(Элементы,
			"ПодготовкаДанныхДляТехническойПоддержки", "Видимость",
			ЕстьПраваНаПросмотрЖурналаРегистрации);

КонецПроцедуры

&НаКлиенте
Процедура ИзменитьНастройкиПодключенияЗавершение(Результат, Параметры) Экспорт
	
	Если Результат = Истина Тогда
		ВыполнитьНачальноеЗаполнение();
	КонецЕсли;
	
КонецПроцедуры

&НаКлиентеНаСервереБезКонтекста
Процедура ОбновитьДоступностьОтключенияПриложения(Форма)
	
	ОбщегоНазначенияКлиентСервер.УстановитьСвойствоЭлементаФормы(Форма.Элементы,
			"ОтключитьПриложение", "Доступность",
			Форма.ФлагОтключитьПриложение);
	
		КонецПроцедуры

&НаКлиенте
Процедура ОтложенноеОбновлениеИнтерфейса()

	ОбновитьИнтерфейс();

КонецПроцедуры

#КонецОбласти

#КонецОбласти