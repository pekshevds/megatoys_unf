#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	Если Параметры.Свойство("ЭтоПечатьЭтикетокИЦенниковБПО") Тогда
		ЭтоПечатьЭтикетокИЦенниковБПО = Параметры.ЭтоПечатьЭтикетокИЦенниковБПО;
	КонецЕсли;
	
	ЗаполнитьТаблицуПакетовЗагрузки();
	
КонецПроцедуры

&НаКлиенте
Процедура ПакетыПриАктивизацииСтроки(Элемент)
	УстановитьОтборПоПакетуЗагрузки();
КонецПроцедуры

&НаКлиенте
Процедура ПакетыЗагрузкиВыбор(Элемент, ВыбраннаяСтрока, Поле, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	
	Если ЭтоПечатьЭтикетокИЦенниковБПО Тогда
		ЗаполнитьТаблицуТоваровПоПакетуБПО(Элемент.ТекущиеДанные.НомерПакета);
	Иначе
		ЗаполнитьТаблицуТоваровПоПакету(Элемент.ТекущиеДанные.НомерПакета);
	КонецЕсли;
	
	ВидЦен = ПолучитьВидЦен(Элемент.ТекущиеДанные.Устройство);
	
	ПараметрыЗакрытия = Новый Структура;
	Если ЗначениеЗаполнено(ВидЦен) Тогда
		ПараметрыЗакрытия.Вставить("ВидЦен", ВидЦен);
	КонецЕсли;
	
	Если ЭтоПечатьЭтикетокИЦенниковБПО Тогда
		ПараметрыЗакрытия.Вставить("СтруктураТоваровБПО", СтруктураТоваровБПО);
	Иначе
		ПараметрыЗакрытия.Вставить("СтруктураТоваров", СтруктураТоваров);
	КонецЕсли;
	
	Закрыть(ПараметрыЗакрытия);
	
КонецПроцедуры

#КонецОбласти

#Область ОбработкаКомандФормы

&НаКлиенте
Процедура ЗаполнитьТаблицуЗначенийТоваров(Команда)
	
	ЗаполнитьТаблицуЗначенийТоваровНаСервере();
	
	ВидЦен = ПолучитьВидЦен();
	
	ПараметрыЗакрытия = Новый Структура;
	Если ЗначениеЗаполнено(ВидЦен) Тогда
		ПараметрыЗакрытия.Вставить("ВидЦен", ВидЦен);
	КонецЕсли;
	
	Если ЭтоПечатьЭтикетокИЦенниковБПО Тогда
		ПараметрыЗакрытия.Вставить("СтруктураТоваровБПО", СтруктураТоваровБПО);
	Иначе
		ПараметрыЗакрытия.Вставить("СтруктураТоваров", СтруктураТоваров);
	КонецЕсли;
	
	Закрыть(ПараметрыЗакрытия);
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаКлиенте
Процедура УстановитьОтборПоПакетуЗагрузки();
	
	Если ЗначениеЗаполнено(ПакетыЗагрузки) Тогда
		ТекущиеДанные = Элементы.ПакетыЗагрузки.ТекущиеДанные;
		ОтборПоПакетуЗагрузки = Новый ФиксированнаяСтруктура("НомерПакета", ТекущиеДанные.НомерПакета);
		Элементы.Товары.ОтборСтрок = ОтборПоПакетуЗагрузки;
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура ЗаполнитьТаблицуПакетовЗагрузки()
	
	Запрос = Новый Запрос(
	"ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ЦенникиКПечати.ДатаПриема КАК ДатаПриема,
	|	Оборудование.Ссылка КАК Ссылка
	|ИЗ
	|	РегистрСведений.ЦенникиКПечати КАК ЦенникиКПечати
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.ПодключаемоеОборудование КАК Оборудование
	|		ПО ЦенникиКПечати.ПодключаемоеОборудование = Оборудование.Ссылка
	|
	|УПОРЯДОЧИТЬ ПО
	|	ДатаПриема УБЫВ");
	
	ТаблицаПакетовЗагрузки = Запрос.Выполнить().Выгрузить();
	
	ЗаполнитьТаблицуПакетовЗагрузкиФрагмент(ТаблицаПакетовЗагрузки);
	
	Запрос = Новый Запрос(
	"ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ЦенникиКПечати.ДатаПриема КАК ДатаПриема,
	|	Оборудование.Ссылка КАК Ссылка
	|ИЗ
	|	РегистрСведений.ЦенникиКПечати КАК ЦенникиКПечати
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.ОфлайнОборудование КАК Оборудование
	|		ПО ЦенникиКПечати.ПодключаемоеОборудование = Оборудование.Ссылка
	|
	|УПОРЯДОЧИТЬ ПО
	|	ДатаПриема УБЫВ");
	
	ТаблицаПакетовЗагрузки = Запрос.Выполнить().Выгрузить();
	
	ЗаполнитьТаблицуПакетовЗагрузкиФрагмент(ТаблицаПакетовЗагрузки);
	
КонецПроцедуры

&НаСервере
Процедура ЗаполнитьТаблицуПакетовЗагрузкиФрагмент(Знач ТаблицаПакетовЗагрузки)
	
	Для Каждого Строка Из ТаблицаПакетовЗагрузки Цикл
		
		НомерПакета = ТаблицаПакетовЗагрузки.Индекс(Строка) + 1;
		НовыйПакетЗагрузки = ПакетыЗагрузки.Добавить();
		НовыйПакетЗагрузки.Устройство  = Строка.Ссылка;
		НовыйПакетЗагрузки.ДатаПриема  = Строка.ДатаПриема;
		НовыйПакетЗагрузки.НомерПакета = НомерПакета;
		НовыйПакетЗагрузки.Выбран = Истина;
		ЗапросТоваров = Новый Запрос(
		"ВЫБРАТЬ
		|	КОЛИЧЕСТВО(ЦенникиКПечати.Номенклатура) КАК КоличествоНоменклатура,
		|	ЦенникиКПечати.Номенклатура КАК Номенклатура,
		|	ЦенникиКПечати.Характеристика КАК Характеристика,
		|	ЦенникиКПечати.ИДЦенника КАК ИДЦенника,
		|	ЦенникиКПечати.Партия КАК Партия,
		|	ЦенникиКПечати.ДатаПриема КАК ДатаПриема,
		|	ЦенникиКПечати.ЕдиницаИзмерения КАК ЕдиницаИзмерения
		|ИЗ
		|	РегистрСведений.ЦенникиКПечати КАК ЦенникиКПечати
		|ГДЕ
		|	ЦенникиКПечати.ДатаПриема = &ДатаПриема
		|	И ЦенникиКПечати.ПодключаемоеОборудование = &ПодключаемоеОборудование
		|
		|СГРУППИРОВАТЬ ПО
		|	ЦенникиКПечати.Характеристика,
		|	ЦенникиКПечати.Номенклатура,
		|	ЦенникиКПечати.ИДЦенника,
		|	ЦенникиКПечати.Партия,
		|	ЦенникиКПечати.ДатаПриема,
		|	ЦенникиКПечати.ЕдиницаИзмерения
		|
		|УПОРЯДОЧИТЬ ПО
		|	ДатаПриема УБЫВ");
		
		ЗапросТоваров.УстановитьПараметр("ДатаПриема", Строка.ДатаПриема);
		ЗапросТоваров.УстановитьПараметр("ПодключаемоеОборудование", Строка.Ссылка);
		Выборка = ЗапросТоваров.Выполнить().Выбрать();
		Таблица = ЗапросТоваров.Выполнить().Выгрузить();
		
		Пока Выборка.Следующий() Цикл
			
			НовыйТовар = Товары.Добавить();
			НовыйТовар.Номенклатура = Выборка.Номенклатура;
			Если ЗначениеЗаполнено(Выборка.Характеристика) Тогда
				НовыйТовар.Характеристика = Выборка.Характеристика;
			КонецЕсли;
			НовыйТовар.НомерПакета = НомерПакета;
			НовыйТовар.Количество  = Выборка.КоличествоНоменклатура;
			НовыйТовар.ИДЦенника   = Выборка.ИДЦенника;
			НовыйТовар.Партия      = Выборка.Партия;
			НовыйТовар.ЕдиницаИзмерения      = Выборка.ЕдиницаИзмерения;
			
		КонецЦикла
		
	КонецЦикла;

КонецПроцедуры

&НаСервере 
Процедура ЗаполнитьТаблицуЗначенийТоваровНаСервере()
	
	Для Каждого Строка Из ПакетыЗагрузки Цикл
		
		Если Строка.Выбран Тогда
			
			Если ЭтоПечатьЭтикетокИЦенниковБПО Тогда
				ЗаполнитьТаблицуТоваровПоПакетуБПО(Строка.НомерПакета);
			Иначе
				ЗаполнитьТаблицуТоваровПоПакету(Строка.НомерПакета);
			КонецЕсли;
			
		КонецЕсли;
		
	КонецЦикла
	
КонецПроцедуры

&НаСервере
Процедура ЗаполнитьТаблицуТоваровПоПакетуБПО(НомерПакета)
	
	ПараметрыОтбора = Новый Структура;
	ПараметрыОтбора.Вставить("НомерПакета",          НомерПакета);
	
	НайденныеСтроки = Товары.НайтиСтроки(ПараметрыОтбора);
	
	Индекс = 0;
	
	Для Каждого Строка Из НайденныеСтроки Цикл
		
		ОтборПоТоварам = Новый Структура;
		ОтборПоТоварам.Вставить("НоменклатураБПО",         НайденныеСтроки[Индекс].Номенклатура);
		ОтборПоТоварам.Вставить("ХарактеристикаБПО",       НайденныеСтроки[Индекс].Характеристика);
		ОтборПоТоварам.Вставить("Партия", НайденныеСтроки[Индекс].Партия);
		ОтборПоТоварам.Вставить("УпаковкаБПО", НайденныеСтроки[Индекс].ЕдиницаИзмерения);
		Строки = СтруктураТоваровБПО.НайтиСтроки(ОтборПоТоварам);
		Если ЗначениеЗаполнено(Строки) Тогда
			Строки[0].Количество = Строки[0].Количество + НайденныеСтроки[Индекс].Количество;
		Иначе
			НоменклатураТоваров = СтруктураТоваровБПО.Добавить();
			НоменклатураТоваров.НоменклатураБПО         = НайденныеСтроки[Индекс].Номенклатура;
			НоменклатураТоваров.ХарактеристикаБПО       = НайденныеСтроки[Индекс].Характеристика;
			НоменклатураТоваров.Партия               = НайденныеСтроки[Индекс].Партия;
			НоменклатураТоваров.УпаковкаБПО     = НайденныеСтроки[Индекс].ЕдиницаИзмерения;
			НоменклатураТоваров.Количество           = НайденныеСтроки[Индекс].Количество;
			НоменклатураТоваров.Штрихкод = РегистрыСведений.ШтрихкодыНоменклатуры.ПолучитьШтрихкодПоНоменклатуре(НоменклатураТоваров.НоменклатураБПО, НоменклатураТоваров.ХарактеристикаБПО, НоменклатураТоваров.Партия, НоменклатураТоваров.УпаковкаБПО);
		КонецЕсли;
		Индекс = Индекс + 1;
		
	КонецЦикла;
	
КонецПроцедуры 

&НаСервере
Процедура ЗаполнитьТаблицуТоваровПоПакету(НомерПакета)
	
	ПараметрыОтбора = Новый Структура;
	ПараметрыОтбора.Вставить("НомерПакета",          НомерПакета);
	
	НайденныеСтроки = Товары.НайтиСтроки(ПараметрыОтбора);
	
	Индекс = 0;
	
	Для Каждого Строка Из НайденныеСтроки Цикл
		
		ОтборПоТоварам = Новый Структура;
		ОтборПоТоварам.Вставить("Номенклатура",         НайденныеСтроки[Индекс].Номенклатура);
		ОтборПоТоварам.Вставить("Характеристика",       НайденныеСтроки[Индекс].Характеристика);
		ОтборПоТоварам.Вставить("Партия", НайденныеСтроки[Индекс].Партия);
		ОтборПоТоварам.Вставить("ЕдиницаИзмерения", НайденныеСтроки[Индекс].ЕдиницаИзмерения);
		Строки = СтруктураТоваров.НайтиСтроки(ОтборПоТоварам);
		Если ЗначениеЗаполнено(Строки) Тогда
			Строки[0].Количество = Строки[0].Количество + НайденныеСтроки[Индекс].Количество;
		Иначе
			НоменклатураТоваров = СтруктураТоваров.Добавить();
			НоменклатураТоваров.Номенклатура         = НайденныеСтроки[Индекс].Номенклатура;
			НоменклатураТоваров.Характеристика       = НайденныеСтроки[Индекс].Характеристика;
			НоменклатураТоваров.Партия               = НайденныеСтроки[Индекс].Партия;
			НоменклатураТоваров.ЕдиницаИзмерения     = НайденныеСтроки[Индекс].ЕдиницаИзмерения;
			НоменклатураТоваров.Количество           = НайденныеСтроки[Индекс].Количество;
		КонецЕсли;
		Индекс = Индекс + 1;
		
	КонецЦикла;
	
КонецПроцедуры

&НаСервере
Функция ПолучитьВидЦен(Устройство = Неопределено)
	
	Если ЗначениеЗаполнено(Устройство) Тогда
		УстройстваМассив = Новый Массив;
		УстройстваМассив.Добавить(Устройство);
	Иначе
		Отбор = Новый Структура;
		Отбор.Вставить("Выбран", Истина);
		УстройстваМассив = ПакетыЗагрузки.Выгрузить(Отбор, "Устройство").ВыгрузитьКолонку("Устройство");
	КонецЕсли;
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ОфлайнОборудование.ПравилоОбмена.ВидЦеныНоменклатуры КАК ПравилоОбменаВидЦеныНоменклатуры
	|ИЗ
	|	Справочник.ОфлайнОборудование КАК ОфлайнОборудование
	|ГДЕ
	|	ОфлайнОборудование.Ссылка В(&Устройства)";
	
	Запрос.УстановитьПараметр("Устройства", УстройстваМассив);
	
	РезультатЗапроса = Запрос.Выполнить();
	
	ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
	
	Если ВыборкаДетальныеЗаписи.Количество() = 1 Тогда
		ВыборкаДетальныеЗаписи.Следующий();
		Возврат ВыборкаДетальныеЗаписи.ПравилоОбменаВидЦеныНоменклатуры;
	КонецЕсли;
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ПодключаемоеОборудование.ПравилоОбмена.ВидЦеныНоменклатуры КАК ПравилоОбменаВидЦеныНоменклатуры
	|ИЗ
	|	Справочник.ПодключаемоеОборудование КАК ПодключаемоеОборудование
	|ГДЕ
	|	ПодключаемоеОборудование.Ссылка В (&Устройства)";
	
	Запрос.УстановитьПараметр("Устройства", УстройстваМассив);
	
	РезультатЗапроса = Запрос.Выполнить();
	
	ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
	
	Если ВыборкаДетальныеЗаписи.Количество() = 1 Тогда
		ВыборкаДетальныеЗаписи.Следующий();
		Возврат ВыборкаДетальныеЗаписи.ПравилоОбменаВидЦеныНоменклатуры; 
	Иначе
		Возврат Неопределено
	КонецЕсли;
	
КонецФункции // ()

#КонецОбласти
