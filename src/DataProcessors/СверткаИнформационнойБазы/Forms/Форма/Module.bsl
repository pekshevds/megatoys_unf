#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	ЗаполнитьОрганизации();
	Элементы.РезервноеКопированиеВРежимеСервиса.Видимость = ОбщегоНазначения.РазделениеВключено();
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	НастроитьЭлементыФормы();
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовШапкиФормы

&НаКлиенте
Процедура СворачиватьОстаткиПриИзменении(Элемент)
	НастроитьЭлементыФормы();
	Если Объект.СворачиватьОстатки Тогда
		Элементы.ГруппаОграничения.Видимость = Истина;
		Элементы.ГруппаОграничения.ТекущаяСтраница = Элементы.ГруппаПроверкаВозможности;
		ПодключитьОбработчикОжидания("ПроверитьВозможностьФормированияОстатков", 0.1, Истина);
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура ДекорацияОшибкиПриПроведенииОбработкаНавигационнойСсылки(Элемент, НавигационнаяСсылкаФорматированнойСтроки,
	СтандартнаяОбработка)
	СтандартнаяОбработка = Ложь;
	Если СтрНачинаетсяС(НавигационнаяСсылкаФорматированнойСтроки, "e1c") Тогда
		ФайловаяСистемаКлиент.ОткрытьНавигационнуюСсылку(НавигационнаяСсылкаФорматированнойСтроки);
	Иначе
		ОписаниеТиповЧисло = Новый ОписаниеТипов("Число");
		ИндексОшибки = ОписаниеТиповЧисло.ПривестиЗначение(НавигационнаяСсылкаФорматированнойСтроки);
		ПоказатьЗначение( , ТекстыОшибокПриПроведении[ИндексОшибки]);
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура ДекорацияПерейтиКСформированнымДокументамОбработкаНавигационнойСсылки(Элемент,
	НавигационнаяСсылкаФорматированнойСтроки, СтандартнаяОбработка)
	СтандартнаяОбработка = Ложь;
	ПараметрыФормы = Новый Структура("ДатаСвертки", Объект.ДатаСвертки);
	ОткрытьФорму("ЖурналДокументов.ДокументыСверткиИнформационнойБазы.ФормаСписка", ПараметрыФормы);
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовТаблицыФормыОрганизации

&НаКлиенте
Процедура ОрганизацииПриИзменении(Элемент)

	Элементы.СвернутьОстатки.Доступность = ВыбранаХотяБыОднаОрганизация();

КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура Сформировать(Команда)

	Элементы.ГруппаРезервнаяКопия.Видимость = Ложь;
	Элементы.СворачиватьОстатки.Доступность = Ложь;
	Элементы.СостояниеСтарыеДокументы.Видимость = Ложь;
	Элементы.СостояниеФормированияОстатков.ТекущаяСтраница = Элементы.ГруппаПрогрессФормированияОстатков;
	ПодключитьОбработчикОжидания("ЗапуститьФормированиеОстатков", 0.1, Истина);

КонецПроцедуры

&НаКлиенте
Процедура ПометитьНаУдаление(Команда)

	Элементы.СворачиватьОстатки.Доступность = Ложь;
	Элементы.СостояниеСтарыеДокументы.ТекущаяСтраница = Элементы.ГруппаПрогрессПометкиУдаления;
	Организации = Новый Массив;
	Для Каждого ВыбраннаяОрганизация Из Объект.Организации Цикл
		Если ВыбраннаяОрганизация.Пометка Тогда
			Организации.Добавить(ВыбраннаяОрганизация.Значение);
		КонецЕсли;
	КонецЦикла;

	ДлительнаяОперация = ПометитьНаУдалениеОбъектыИУдалитьЗаписиРегистровДоДатыСвертки(Объект.ДатаСвертки, Организации);
	ОповещениеОЗавершении = Новый ОписаниеОповещения("ОбработатьРезультатПометкиНаУдаление", ЭтотОбъект);
	ПараметрыОжидания = ДлительныеОперацииКлиент.ПараметрыОжидания(ЭтотОбъект);
	ПараметрыОжидания.ВыводитьОкноОжидания = Ложь;
	ПараметрыОжидания.ВыводитьПрогрессВыполнения = Истина;
	ПараметрыОжидания.ОповещениеОПрогрессеВыполнения = Новый ОписаниеОповещения("ОповещениеОПрогрессеПометкиУдаления",
		ЭтотОбъект);
	ДлительныеОперацииКлиент.ОжидатьЗавершение(ДлительнаяОперация, ОповещениеОЗавершении, ПараметрыОжидания);

КонецПроцедуры
#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаСервере
Процедура ЗаполнитьОрганизации()

	Запрос = Новый Запрос;
	Запрос.Текст =
	"ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ВЫБОР
	|		КОГДА УчетПоКомпании.Значение
	|			ТОГДА Компания.Значение
	|		ИНАЧЕ Организации.Ссылка
	|	КОНЕЦ КАК Значение,
	|	ПРЕДСТАВЛЕНИЕ(ВЫБОР
	|		КОГДА УчетПоКомпании.Значение
	|			ТОГДА Компания.Значение
	|		ИНАЧЕ Организации.Ссылка
	|	КОНЕЦ) КАК Представление,
	|	ИСТИНА КАК Пометка
	|ИЗ
	|	Справочник.Организации КАК Организации,
	|	Константа.УчетПоКомпании КАК УчетПоКомпании,
	|	Константа.Компания КАК Компания";
	Выборка = Запрос.Выполнить().Выбрать();
	Пока Выборка.Следующий() Цикл
		Объект.Организации.Добавить(Выборка.Значение, Выборка.Представление, Выборка.Пометка);
	КонецЦикла;

	Элементы.Организации.Видимость = Объект.Организации.Количество() > 1;

КонецПроцедуры

&НаКлиенте
Процедура НастроитьЭлементыФормы()

	Элементы.СостояниеФормированияОстатков.Видимость = Объект.СворачиватьОстатки;
	Если Объект.СворачиватьОстатки Тогда
		Объект.ДатаСвертки = ОбщегоНазначенияКлиент.ДатаСеанса();
		Элементы.СостояниеСтарыеДокументы.Видимость = Ложь;
		Элементы.ПометитьНаУдаление.Заголовок = НСтр("ru = 'Пометить на удаление все документы до даты свертки'");
	Иначе
		Объект.ДатаСвертки = '00010101';
		Элементы.СостояниеСтарыеДокументы.Видимость = Истина;
		Элементы.ПометитьНаУдаление.Заголовок = НСтр("ru = 'Пометить на удаление все документы'");
	КонецЕсли;

КонецПроцедуры

&НаКлиенте
Процедура ПроверитьВозможностьФормированияОстатков()

	ДлительнаяОперация = ПрепятствияДляФормированияОстатков();
	ОповещениеОЗавершении = Новый ОписаниеОповещения("ПоказатьПрепятствияДляФормированияОстатков", ЭтотОбъект);
	ПараметрыОжидания = ДлительныеОперацииКлиент.ПараметрыОжидания(ЭтотОбъект);
	ПараметрыОжидания.ВыводитьОкноОжидания = Ложь;
	ДлительныеОперацииКлиент.ОжидатьЗавершение(ДлительнаяОперация, ОповещениеОЗавершении, ПараметрыОжидания);

КонецПроцедуры

&НаСервере
Функция ПрепятствияДляФормированияОстатков()

	ПараметрыВыполнения = ДлительныеОперации.ПараметрыВыполненияФункции(УникальныйИдентификатор);
	Организации = Новый Массив;
	Для Каждого ВыбраннаяОрганизация Из Объект.Организации Цикл
		Организации.Добавить(ВыбраннаяОрганизация.Значение);
	КонецЦикла;
	Результат = ДлительныеОперации.ВыполнитьФункцию(ПараметрыВыполнения,
		"Обработки.СверткаИнформационнойБазы.ПрепятствияДляФормированияОстатков", Объект.ДатаСвертки, Организации);
	Возврат Результат;

КонецФункции

&НаКлиенте
Функция ВыбранаХотяБыОднаОрганизация()

	Для Каждого ЭлементСпискаОрганизации Из Объект.Организации Цикл
		Если ЭлементСпискаОрганизации.Пометка Тогда
			Возврат Истина;
		КонецЕсли;
	КонецЦикла;

	Возврат Ложь;

КонецФункции

&НаКлиенте
Процедура ЗапуститьФормированиеОстатков()
	
	ДлительнаяОперация = СформироватьОстаткиНаДатуСвертки();
	ОповещениеОЗавершении = Новый ОписаниеОповещения("ОбработатьРезультатФормированияОстатков", ЭтотОбъект);
	ПараметрыОжидания = ДлительныеОперацииКлиент.ПараметрыОжидания(ЭтотОбъект);
	ПараметрыОжидания.ВыводитьОкноОжидания = Ложь;
	ПараметрыОжидания.ВыводитьПрогрессВыполнения = Истина;
	ПараметрыОжидания.ОповещениеОПрогрессеВыполнения = Новый ОписаниеОповещения("ОповещениеОПрогрессеФормированияОстатков",
		ЭтотОбъект);
	ДлительныеОперацииКлиент.ОжидатьЗавершение(ДлительнаяОперация, ОповещениеОЗавершении, ПараметрыОжидания);
	
КонецПроцедуры

&НаСервере
Функция СформироватьОстаткиНаДатуСвертки()

	ПараметрыВыполнения = ДлительныеОперации.ПараметрыВыполненияФункции(УникальныйИдентификатор);
	Организации = Новый Массив;
	Для Каждого ВыбраннаяОрганизация Из Объект.Организации Цикл
		Если ВыбраннаяОрганизация.Пометка Тогда
			Организации.Добавить(ВыбраннаяОрганизация.Значение);
		КонецЕсли;
	КонецЦикла;
	Результат = ДлительныеОперации.ВыполнитьФункцию(ПараметрыВыполнения,
		"Обработки.СверткаИнформационнойБазы.ДокументыОстатковНаДатуСвертки", Объект.ДатаСвертки,
		Объект.Автоформирование, Организации);
	Возврат Результат;

КонецФункции

&НаКлиенте
Процедура ОповещениеОПрогрессеФормированияОстатков(Прогресс, Параметры) Экспорт

	Если ТипЗнч(Прогресс) <> Тип("Структура") Тогда
		Возврат;
	КонецЕсли;

	Если Не Прогресс.Свойство("Прогресс") Тогда
		Возврат;
	КонецЕсли;

	Если ТипЗнч(Прогресс.Прогресс) <> Тип("Структура") Тогда
		Возврат;
	КонецЕсли;

	Элементы.ПрогрессФормированияОстатков.Подсказка = Прогресс.Прогресс.Текст;
	ПрогрессФормированияОстатков = Прогресс.Прогресс.Процент;

КонецПроцедуры

&НаКлиенте
Процедура ПоказатьПрепятствияДляФормированияОстатков(Результат, Параметры) Экспорт

	Если Результат.Статус = "Выполнено" Тогда
		ПрепятствияДляФормированияОстатков = ПолучитьИзВременногоХранилища(Результат.АдресРезультата);
	КонецЕсли;

	Если ПрепятствияОтсутствуют(ПрепятствияДляФормированияОстатков) Тогда
		Элементы.ГруппаОграничения.Видимость = Ложь;
	Иначе
		Элементы.ГруппаОграничения.ТекущаяСтраница = Элементы.ГруппаПрепятствия;
	КонецЕсли;

КонецПроцедуры

&НаКлиенте
Функция ПрепятствияОтсутствуют(ПрепятствияДляФормированияОстатков)
	Если Не ЗначениеЗаполнено(ПрепятствияДляФормированияОстатков) Тогда
		Возврат Истина;
	КонецЕсли;
	Если ТипЗнч(ПрепятствияДляФормированияОстатков) <> Тип("Структура") Тогда
		Возврат Истина;
	КонецЕсли;
	Если Не ПрепятствияДляФормированияОстатков.Свойство("ОтчетыКомитенту") Тогда
		Возврат Истина;
	КонецЕсли;
	Возврат Не ПрепятствияДляФормированияОстатков.ОтчетыКомитенту;
КонецФункции

&НаКлиенте
Процедура ОбработатьРезультатФормированияОстатков(Результат, Параметры) Экспорт

	Если ТипЗнч(Результат) <> Тип("Структура") Тогда
		Возврат;
	КонецЕсли;

	Если Результат.Статус = "Ошибка" Тогда
		ПодробноеПредставлениеОшибки = Результат.ПодробноеПредставлениеОшибки;
		Элементы.СостояниеФормированияОстатков.ТекущаяСтраница = Элементы.ГруппаОшибкаФормированияОстатков;
	ИначеЕсли Результат.Статус = "Выполнено" Тогда
		РезультатВыполнения = ПолучитьИзВременногоХранилища(Результат.АдресРезультата);
		РасшифровкаРезультата = РасшифровкаРезультата(РезультатВыполнения);
		СформированыДокументы = НСтр(
			"ru = ';Сформирован %1 документ;;Сформировано %1 документа;Сформировано %1 документов;Сформирован %1 документ'");
		ПредставлениеОбщееКоличество = СтрокаСЧислом(СформированыДокументы, РасшифровкаРезультата.ОбщееКоличество,
			ВидЧисловогоЗначения.Количественное, "ЧН=0;");
		ЧислоДокументов = НСтр("ru = ';%1 документ;;%1 документа;%1 документов;%1 документ'");
		ПредставлениеВводНачальныхОстатков = СтрокаСЧислом(ЧислоДокументов,
			РасшифровкаРезультата.ВводНачальныхОстатков, ВидЧисловогоЗначения.Количественное, "ЧН=0;");
		ПредставлениеКорректировкаРегистров = СтрокаСЧислом(ЧислоДокументов,
			РасшифровкаРезультата.КорректировкаРегистров, ВидЧисловогоЗначения.Количественное, "ЧН=0;");
		ТекстыОшибокПриПроведении.ЗагрузитьЗначения(РасшифровкаРезультата.ТекстыОшибокПриПроведении);
		ДлинноеТире = Символ(8212);
		ШаблонСформированыОстатки = НСтр(
		"ru = '%2, в том числе:
		|Ввод начальных остатков %1 %3,
		|Корректировка регистров %1 %4.'");
		Элементы.ДекорацияСформированыОстатки.Заголовок = СтрШаблон(ШаблонСформированыОстатки, ДлинноеТире,
			ПредставлениеОбщееКоличество, ПредставлениеВводНачальныхОстатков, ПредставлениеКорректировкаРегистров);
		Элементы.ДекорацияОшибкиПриПроведении.Заголовок = Новый ФорматированнаяСтрока(РасшифровкаРезультата.ОшибкиПриПроведении);
		Элементы.СостояниеФормированияОстатков.ТекущаяСтраница = Элементы.ГруппаОстаткиСформированы;
		Элементы.СостояниеСтарыеДокументы.Видимость = Истина;
		ОповеститьОбИзменении(Тип("ДокументСсылка.ВводНачальныхОстатков"));
		ОповеститьОбИзменении(Тип("ДокументСсылка.КорректировкаРегистров"));
	КонецЕсли;

КонецПроцедуры

&НаСервереБезКонтекста
Функция РасшифровкаРезультата(СформированныеДокументы)

	Результат = Новый Структура;
	Результат.Вставить("ОбщееКоличество", 0);
	Результат.Вставить("ВводНачальныхОстатков", 0);
	Результат.Вставить("КорректировкаРегистров", 0);
	Результат.Вставить("ОшибкиПриПроведении", Новый Массив);
	Результат.Вставить("ТекстыОшибокПриПроведении", Новый Массив);

	Если ТипЗнч(СформированныеДокументы) <> Тип("Соответствие") Тогда
		Возврат Результат;
	КонецЕсли;

	Результат.ОбщееКоличество = СформированныеДокументы.Количество();

	Для Каждого СформированныйДокумент Из СформированныеДокументы Цикл
		Если ТипЗнч(СформированныйДокумент.Ключ) = Тип("ДокументСсылка.ВводНачальныхОстатков") Тогда
			Результат.ВводНачальныхОстатков = Результат.ВводНачальныхОстатков + 1;
		КонецЕсли;
		Если ТипЗнч(СформированныйДокумент.Ключ) = Тип("ДокументСсылка.КорректировкаРегистров") Тогда
			Результат.КорректировкаРегистров = Результат.КорректировкаРегистров + 1;
		КонецЕсли;
		Если ЗначениеЗаполнено(СформированныйДокумент.Значение.ОшибкаПриПроведении) Тогда
			ИндексОшибки = Формат(Результат.ОшибкиПриПроведении.Количество(), "ЧН=0; ЧГ=0;");
			НавигационнаяСсылка = ПолучитьНавигационнуюСсылку(СформированныйДокумент.Ключ);
			ШаблонОшибки = НСтр(
			"ru = '<a href=""%1"">Ошибка</a> при проведении <a href=""%2"">%3</a>'");
			ОшибкаПриПроведении = СтроковыеФункции.ФорматированнаяСтрока(ШаблонОшибки, ИндексОшибки,
				НавигационнаяСсылка, СформированныйДокумент.Ключ);
			Результат.ОшибкиПриПроведении.Добавить(ОшибкаПриПроведении);
			Результат.ТекстыОшибокПриПроведении.Добавить(СформированныйДокумент.Значение.ОшибкаПриПроведении);
		КонецЕсли;
	КонецЦикла;

	Возврат Результат;

КонецФункции

&НаСервере
Функция ПометитьНаУдалениеОбъектыИУдалитьЗаписиРегистровДоДатыСвертки(ДатаСвертки, Организации)

	ПараметрыВыполнения = ДлительныеОперации.ПараметрыВыполненияФункции(УникальныйИдентификатор);
	Результат = ДлительныеОперации.ВыполнитьФункцию(ПараметрыВыполнения,
		"Обработки.СверткаИнформационнойБазы.ПометитьНаУдалениеОбъектыИУдалитьЗаписиРегистровДоДатыСвертки",
		ДатаСвертки, Организации);
	Возврат Результат;

КонецФункции

&НаКлиенте
Процедура ОповещениеОПрогрессеПометкиУдаления(Прогресс, Параметры) Экспорт

	Если ТипЗнч(Прогресс) <> Тип("Структура") Тогда
		Возврат;
	КонецЕсли;

	Если Не Прогресс.Свойство("Прогресс") Тогда
		Возврат;
	КонецЕсли;

	Если ТипЗнч(Прогресс.Прогресс) <> Тип("Структура") Тогда
		Возврат;
	КонецЕсли;

	Элементы.ПрогрессПометкиУдаления.Подсказка = Прогресс.Прогресс.Текст;
	ПрогрессПометкиУдаления = Прогресс.Прогресс.Процент;

КонецПроцедуры

&НаКлиенте
Процедура ОбработатьРезультатПометкиНаУдаление(Результат, Параметры) Экспорт

	Если ТипЗнч(Результат) <> Тип("Структура") Тогда
		Возврат;
	КонецЕсли;

	Если Результат.Статус = "Ошибка" Тогда
		Элементы.ПояснениеОшибкиПометкиУдаления.Подсказка = Результат.ПодробноеПредставлениеОшибки;
		Элементы.СостояниеСтарыеДокументы.ТекущаяСтраница = Элементы.ГруппаОшибкаПометкиУдаления;
	ИначеЕсли Результат.Статус = "Выполнено" Тогда
		РезультатВыполнения = ПолучитьИзВременногоХранилища(Результат.АдресРезультата);
		Если ТипЗнч(РезультатВыполнения) = Тип("Массив") Тогда
			ИсходнаяСтрока = НСтр(
				"ru = ';Помечен на удаление %1 объект;;Помечены на удаление %1 объекта;Помечено на удаление %1 объектов;Помечен на удаление %1 объект'");
			Элементы.ДекорацияДокументыПомеченыНаУдаление.Заголовок = СтрокаСЧислом(ИсходнаяСтрока,
				РезультатВыполнения.Количество(), ВидЧисловогоЗначения.Количественное, "ЧН=0;");
		КонецЕсли;
		Элементы.СостояниеСтарыеДокументы.ТекущаяСтраница = Элементы.ГруппаДокументыПомеченыНаУдаление;
	КонецЕсли;

КонецПроцедуры

#КонецОбласти