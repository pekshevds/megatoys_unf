#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	ЭтоНастройкаПоДоговору = Параметры.Свойство("ДоговорКонтрагента");
		
	УстановитьЗаголовокФормы();
	ЗаполнитьРеквизитыФормы();
	НастроитьОтображениеФормы();
		
	Если ЭтоНастройкаПоДоговору Тогда
		РаботаСФормойДокумента.НастроитьВидимостьГруппыИнформации(ЭтотОбъект, "ГруппаИнформацияПоНастройкам",
							"ПоказыватьИнформациюПоНастройкамДатыОтгрузки");
	КонецЕсли;
	
КонецПроцедуры
	
#КонецОбласти

#Область ОбработчикиСобытийЭлементовШапкиФормы

&НаКлиенте
Процедура ВариантЗаполненияДатыОтгрузкиПриИзменении(Элемент)
	
	Если ВариантЗаполненияДатыОтгрузки =
			ПредопределенноеЗначение("Перечисление.ВариантыЗаполненияДатыОтгрузки.Прибавлять") Тогда
		Элементы.ГруппаСрок.Видимость = Истина;
		Если НЕ ЗначениеЗаполнено(ВидДнейРасчетаДатыОтгрузки) Тогда
			ВидДнейРасчетаДатыОтгрузки = ПредопределенноеЗначение("Перечисление.ВидыДнейРасчетаДатыОтгрузки.Календарные");
		КонецЕсли;
		Элементы.ГруппаПроизводственныйКалендарь.Видимость =
			(ВидДнейРасчетаДатыОтгрузки = ПредопределенноеЗначение("Перечисление.ВидыДнейРасчетаДатыОтгрузки.Рабочие"));
	Иначе
		Элементы.ГруппаСрок.Видимость = Ложь;
		Элементы.ГруппаПроизводственныйКалендарь.Видимость = Ложь;
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура КоличествоДнейПриИзменении(Элемент)
	
	УстановитьТекстДекорацииДней();
	
КонецПроцедуры

&НаКлиенте
Процедура ВидДнейПриИзменении(Элемент)
	
	Если ВидДнейРасчетаДатыОтгрузки = ПредопределенноеЗначение("Перечисление.ВидыДнейРасчетаДатыОтгрузки.Рабочие") Тогда 
		ВидимостьКалендаря = Истина
	Иначе
		ВидимостьКалендаря = Ложь
	КонецЕсли;
	Элементы.ГруппаПроизводственныйКалендарь.Видимость = ВидимостьКалендаря;

КонецПроцедуры	

&НаКлиенте
Процедура ДекорацияИнформацияПоНастройкамОбработкаНавигационнойСсылки(Элемент,
				НавигационнаяСсылкаФорматированнойСтроки, СтандартнаяОбработка)

	СтандартнаяОбработка = Ложь;
	ПараметрыФормы = Новый Структура("СтрокаПоиска", НСтр("ru='заполнение даты отгрузки'"));
	ОткрытьФорму("Обработка.НастройкаПрограммы.Форма.НастройкаПрограммы", ПараметрыФормы);
	
КонецПроцедуры

&НаКлиенте
Процедура ДекорацияИнформацияПоНастройкамЗакрытьНажатие(Элемент)

	Элементы.ГруппаИнформацияПоНастройкам.Видимость = Ложь;	
	СохранитьНастройкуПоказыватьИнформациюПоНовойСхеме();

КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура ОК(Команда)
	
	Если ВариантЗаполненияДатыОтгрузки = 
			ПредопределенноеЗначение("Перечисление.ВариантыЗаполненияДатыОтгрузки.Прибавлять")
			И ВидДнейРасчетаДатыОтгрузки = ПредопределенноеЗначение("Перечисление.ВидыДнейРасчетаДатыОтгрузки.Рабочие")
			И ПроизводственныйКалендарьРасчетаДатыОтгрузки.Пустая() Тогда
			
		ТекстПредупреждения = НСтр("ru='Не выбран производственный календарь'");
		ПоказатьПредупреждение(,ТекстПредупреждения);
		Возврат;
		
	КонецЕсли;
	
	Результат = ПараметрыЗакрытия();
	Закрыть(Результат);

КонецПроцедуры

&НаКлиенте
Процедура ВосстановитьНастройкиПоУмолчанию(Команда)
	
	ЗаполнитьРеквизитыФормы(Истина);
	НастроитьОтображениеФормы();
	ПоказатьОповещениеПользователя(, , НСтр("ru='Восстановлены настройки по умолчанию'"), ,
		СтатусОповещенияПользователя.Информация);	
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаСервере
Процедура УстановитьЗаголовокФормы()
	
	Если ЭтоНастройкаПоДоговору Тогда
		ТекстСтроки = НСтр("ru='Настройки для договора %1'");
		ТекстЗаголовка = СтрШаблон(ТекстСтроки, Параметры.ДоговорКонтрагента.Наименование);
	Иначе
		ТекстЗаголовка = НСтр("ru='Настройки по умолчанию для новых договоров контрагентов'");
	КонецЕсли;
	
	Элементы.ДекорацияРежимНастроек.Заголовок = ТекстЗаголовка;
	
КонецПроцедуры  

&НаСервере
Процедура ЗаполнитьРеквизитыФормы(ПоУмолчанию = Ложь)
	
	СписокСвойств = Обработки.НастройкаЗаполненияДатыОтгрузки.СписокНастроекДатыОтгрузки();
	
	Если ЭтоНастройкаПоДоговору И НЕ ПоУмолчанию Тогда
		
		ЗаполнитьЗначенияСвойств(ЭтаФорма, Параметры.ДоговорКонтрагента, СписокСвойств);
		
	Иначе
		
		НаборКонстант = Константы.СоздатьНабор(СписокСвойств);
		НаборКонстант.Прочитать(); 
		ЗаполнитьЗначенияСвойств(ЭтотОбъект, НаборКонстант);
		
	КонецЕсли;
	
	Если ВариантЗаполненияДатыОтгрузки.Пустая() Тогда
		ВариантЗаполненияДатыОтгрузки = Перечисления.ВариантыЗаполненияДатыОтгрузки.НеЗаполнять;
		ВидДнейРасчетаДатыОтгрузки = Перечисления.ВидыДнейРасчетаДатыОтгрузки.Календарные;
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура НастроитьОтображениеФормы()
		
	Если ВариантЗаполненияДатыОтгрузки = 
			ПредопределенноеЗначение("Перечисление.ВариантыЗаполненияДатыОтгрузки.Прибавлять") Тогда
		Элементы.ГруппаСрок.Видимость = Истина;
		Если НЕ ЗначениеЗаполнено(ВидДнейРасчетаДатыОтгрузки) Тогда
			ВидДнейРасчетаДатыОтгрузки = ПредопределенноеЗначение("Перечисление.ВидыДнейРасчетаДатыОтгрузки.Календарные");
		КонецЕсли;
		Элементы.ГруппаПроизводственныйКалендарь.Видимость =
			(ВидДнейРасчетаДатыОтгрузки = ПредопределенноеЗначение("Перечисление.ВидыДнейРасчетаДатыОтгрузки.Рабочие"));
	Иначе
		Элементы.ГруппаСрок.Видимость = Ложь;
		Элементы.ГруппаПроизводственныйКалендарь.Видимость = Ложь;
	КонецЕсли;

	Если НЕ ЭтоНастройкаПоДоговору Тогда
		Элементы.ФормаГруппаВосстановить.Видимость = Ложь;
	КонецЕсли;

	УстановитьТекстДекорацииДней();

КонецПроцедуры

&НаСервере
Процедура УстановитьТекстДекорацииДней()
	
	КалендарныйДень = НСтр("ru='календарный день'");
	ПолнаяСтрокаКалендарные = ПолучитьСклоненияСтрокиПоЧислу(КалендарныйДень, КоличествоДнейРасчетаДатыОтгрузки,,
		"ЧС=Количественное", "ПД=Именительный");
	МассивСтрок = СтрРазделить(ПолнаяСтрокаКалендарные[0], " ");                                                                                      
	Календарные = НРег(МассивСтрок[МассивСтрок.Количество() - 2]);

	РабочийДень = НСтр("ru='рабочий день'"); 
	ПолнаяСтрокаРабочие = ПолучитьСклоненияСтрокиПоЧислу(РабочийДень, КоличествоДнейРасчетаДатыОтгрузки,,
		"ЧС=Количественное", "ПД=Именительный");
	МассивСтрок = СтрРазделить(ПолнаяСтрокаРабочие[0], " ");
	Рабочие = НРег(МассивСтрок[МассивСтрок.Количество() - 2]);
	                                                                 
	СтрокаДней = НРег(МассивСтрок[МассивСтрок.Количество() - 1]);

	Элементы.ВидДней.СписокВыбора.Очистить();
	Элементы.ВидДней.СписокВыбора.Добавить(Перечисления.ВидыДнейРасчетаДатыОтгрузки.Календарные, Календарные);
	Элементы.ВидДней.СписокВыбора.Добавить(Перечисления.ВидыДнейРасчетаДатыОтгрузки.Рабочие, Рабочие);
	                                                 
	СтрокаЗаголовка = НСтр("ru='%1 к дате заказа'");
	Элементы.ДекорацияДней.Заголовок = СтрШаблон(СтрокаЗаголовка, СтрокаДней); 	

КонецПроцедуры

&НаСервере
Функция ПараметрыЗакрытия()
	
	Результат = Обработки.НастройкаЗаполненияДатыОтгрузки.СтруктураНастроекДатыОтгрузки();
	ЗаполнитьЗначенияСвойств(Результат, ЭтотОбъект);	
	
	Возврат Результат;
	
КонецФункции

&НаСервере
Процедура СохранитьНастройкуПоказыватьИнформациюПоНовойСхеме()

	РаботаСФормойДокумента.СохранитьВидимостьГруппыИнформации(ИмяФормы,
			"ПоказыватьИнформациюПоНастройкамДатыОтгрузки", Ложь);
	
КонецПроцедуры

#КонецОбласти