#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда
#Область ПрограммныйИнтерфейс

// Формирует и возвращает текст с настройкой даты отгрузки
//
// Параметры:
//	Договор - ДанныеФормыСтруктура
//
// Возвращаемое значение:
//	Строка - представление настройки даты отгрузки
//
Функция ПолучитьЗаголовок(Договор = Неопределено) Экспорт
	
	Если (Договор <> Неопределено) Тогда		
		ВариантЗаполненияДатыОтгрузки = Договор.ВариантЗаполненияДатыОтгрузки;
		Если ВариантЗаполненияДатыОтгрузки = Перечисления.ВариантыЗаполненияДатыОтгрузки.НеЗаполнять Тогда
			Результат = НСтр("ru='Не заполнять'");
			Возврат Результат;
		КонецЕсли;
	КонецЕсли;

	Результат = ЗаголовокНастроек(Договор);
	
	Возврат Результат;
	
КонецФункции

// Формирует и возвращает строку настроек расчета даты отгрузки
//
// Возвращаемое значение:
//	Строка - список настроек через запятую 
//
Функция СписокНастроекДатыОтгрузки() Экспорт
	
	СписокНастроек = "ВариантЗаполненияДатыОтгрузки, ВидДнейРасчетаДатыОтгрузки,
		|КоличествоДнейРасчетаДатыОтгрузки, ПроизводственныйКалендарьРасчетаДатыОтгрузки";
	Возврат СписокНастроек;
	
КонецФункции

// Формирует и возвращает структуру настроек расчета даты отгрузки
//
// Возвращаемое значение:
//	Структура - структура настроек 
//
Функция СтруктураНастроекДатыОтгрузки() Экспорт
	
	СписокНастроек = СписокНастроекДатыОтгрузки();
	СтруктураНастроек = Новый Структура(СписокНастроек);
	Возврат СтруктураНастроек;
	
КонецФункции

#КонецОбласти

#Область СлужебныеПроцедурыИФункции
	
Функция ЗаголовокНастроек(Договор)
	
	СтруктураНастроек = СтруктураНастроекДатыОтгрузки();
	ЗаполнитьСтруктуруНастроек(СтруктураНастроек, Договор);

	УсловияОтгрузки = СтрокаУсловияОтгрузки(СтруктураНастроек);
	
	Возврат УсловияОтгрузки;
	
КонецФункции

Процедура ЗаполнитьСтруктуруНастроек(СтруктураНастроек, Договор)
	
	Если Договор <> Неопределено Тогда
		ЗаполнитьЗначенияСвойств(СтруктураНастроек, Договор);
	Иначе
		СписокНастроек = СписокНастроекДатыОтгрузки();
		НаборКонстант = Константы.СоздатьНабор(СписокНастроек);		
		НаборКонстант.Прочитать();
		ЗаполнитьЗначенияСвойств(СтруктураНастроек, НаборКонстант);
	КонецЕсли;
	
КонецПроцедуры

Функция СтрокаУсловияОтгрузки(СтруктураНастроек)
	
	Если НЕ ЗначениеЗаполнено(СтруктураНастроек.ВариантЗаполненияДатыОтгрузки) Тогда
		Возврат НСтр("ru='<Настройка не выполнена>'");
	КонецЕсли;
	
	Если СтруктураНастроек.ВариантЗаполненияДатыОтгрузки = Перечисления.ВариантыЗаполненияДатыОтгрузки.НеЗаполнять Тогда
		Возврат НСтр("ru='Не заполнять'");	
	КонецЕсли;	
		
	Результат = Новый Массив;

	Результат.Добавить(НРег(Строка(СтруктураНастроек.ВариантЗаполненияДатыОтгрузки)));
	Если СтруктураНастроек.ВидДнейРасчетаДатыОтгрузки = Перечисления.ВидыДнейРасчетаДатыОтгрузки.Календарные Тогда
		ТекстДней = НСтр("ru='календарный день'");
	Иначе
		ТекстДней = НСтр("ru='рабочий день'");
	КонецЕсли;
	
	СтрокаДней = ПолучитьСклоненияСтрокиПоЧислу(ТекстДней, СтруктураНастроек.КоличествоДнейРасчетаДатыОтгрузки,,
				"ЧС=Количественное", "ПД=Именительный")[0];
	Результат.Добавить(СтрокаДней);	
	
	ТекстДней = НСтр("ru='к дате документа'");
	Результат.Добавить(ТекстДней);
	
	РезультатСтрока = СтрСоединить(Результат, " ");
	Возврат РезультатСтрока;
	
КонецФункции

#КонецОбласти

#КонецЕсли                                            