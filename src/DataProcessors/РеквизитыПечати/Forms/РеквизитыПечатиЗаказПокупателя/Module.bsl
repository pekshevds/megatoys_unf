#Область ОписаниеПеременных

&НаКлиенте
Перем МассивИзмененныхРеквизитов;

&НаКлиенте
Перем ПодтвержденоЗакрытиеФормы; // Для подтверждения закрытия формы пользователем

#КонецОбласти

#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	МассивОбъектовМетаданных = Новый Массив(1);
	МассивОбъектовМетаданных[0] = Параметры.КонтекстПечати.Ссылка.Метаданные();

	ИспользоватьНесколькоОрганизаций = ПолучитьФункциональнуюОпцию("ИспользоватьНесколькоОрганизаций");
	
	// СтандартныеПодсистемы.ПодключаемыеКоманды
	ПараметрыРазмещения = ПодключаемыеКоманды.ПараметрыРазмещения();
	ПараметрыРазмещения.Источники = МассивОбъектовМетаданных;
	ПодключаемыеКоманды.ПриСозданииНаСервере(ЭтотОбъект, ПараметрыРазмещения);
	// Конец СтандартныеПодсистемы.ПодключаемыеКоманды
	ПечатьДокументовУНФ.УстановитьОтображениеПодменюПечати(Элементы.ПодменюПечать);
	
	ИменаРеквизитов = "Организация, ВалютаДокумента, Контрагент,
	|ПодписьРуководителя, ПодписьГлавногоБухгалтера,
	|Грузоотправитель, Грузополучатель, АдресДоставки,
	|БанковскийСчет, 
	|УсловияСчетаЗаказа, ТекстУсловийСчетаЗаказа, УсловияЗаказаПокупателя, ТекстУсловийЗаказаПокупателя,
	|УсловияКоммерческогоПредложения, ТекстУсловийКоммерческогоПредложения,
	|ОснованиеПечатиСсылка, ОснованиеПечати, 
	|ДокументОснование, 
	|Договор";
	
	ЗаполнитьЗначенияСвойств(КонтекстПечати, Параметры.КонтекстПечати, ИменаРеквизитов);
	
	УстановитьВидФормы();
	ЗаголовокФормы();
	ЗаполнитьАдресДоставки();
	ЗаполнитьОснованияПечати(Параметры);
	ЗаполнитьПараметрыВыбораБанковскогоСчета();
	ЗаполнитьПодсказкиПодписей();
	УстановитьКартинкиКнопок();

	ГрузоотправительОнЖе = НЕ ЗначениеЗаполнено(КонтекстПечати.Грузоотправитель);
	ГрузополучательОнЖе = НЕ ЗначениеЗаполнено(КонтекстПечати.Грузополучатель);
	УстановитьОтображениеГрузоперевозки();	
	
	ДоступностьКомандФормы();
	
	РаботаСФормойДокумента.НастроитьВидимостьГруппыИнформации(ЭтотОбъект, "ГруппаИнформацияПоНовымРеквизитам",
							"ПоказыватьИнформациюПоНовойСхемеРеквизитовПечати", "ФормыОбработкиРеквизитыПечати");
	
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	
	ИзменитьЗаголовокСвернутойГруппы();
	
	МассивИзмененныхРеквизитов = Новый Массив;
	
	ПодтвержденоЗакрытиеФормы = Ложь;
	
КонецПроцедуры

&НаКлиенте
Процедура ПередЗакрытием(Отказ, ЗавершениеРаботы, ТекстПредупреждения, СтандартнаяОбработка)
	
	Если Модифицированность И НЕ ЗавершениеРаботы И НЕ ПодтвержденоЗакрытиеФормы Тогда
		
		Отказ = Истина;
        ОписаниеОповещенияОЗавершении    = Новый ОписаниеОповещения("ПередЗакрытиемЗавершение", ЭтотОбъект);                
        ТекстВопроса        = НСтр("ru = 'Выполненные изменения будут отменены. Продолжить?'");                
        ПоказатьВопрос(ОписаниеОповещенияОЗавершении, ТекстВопроса, РежимДиалогаВопрос.ДаНет); 		
		
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ПередЗакрытиемЗавершение(Ответ, ДополнительныеПараметры) Экспорт
    
    Если Ответ <> КодВозвратаДиалога.Да Тогда
        Возврат;
    КонецЕсли;
    
    ПодтвержденоЗакрытиеФормы = Истина;
               
    Закрыть();
    
КонецПроцедуры // ПередЗакрытиемЗавершение()

#КонецОбласти

#Область ОбработчикиСобытийЭлементовШапкиФормы

&НаКлиенте
Процедура ОснованиеПечатиПриИзменении(Элемент)
		
	ИзменитьЗаголовокСвернутойГруппы();
	
	ТекстПоУмолчанию = ТекстОснованияПоУмолчанию(КонтекстПечати.ОснованиеПечатиСсылка);
	Если КонтекстПечати.ОснованиеПечати = ТекстПоУмолчанию Тогда
		Элементы.ОснованиеПечати.Заголовок = НСтр("ru='Текст основания'");
	Иначе
		Элементы.ОснованиеПечати.Заголовок = НСтр("ru='Измененный текст'");
	КонецЕсли;
	
	ЗафиксироватьИзменениеЗначенияРеквизита("ОснованиеПечати");
	
КонецПроцедуры

&НаКлиенте
Процедура ОснованиеПечатиСсылкаПриИзменении(Элемент)
	
	КонтекстПечати.ОснованиеПечати = Элементы.ОснованиеПечатиСсылка.ТекстРедактирования;
	ИзменитьЗаголовокСвернутойГруппы();
	
	ЗафиксироватьИзменениеЗначенияРеквизита("ОснованиеПечати");
	ЗафиксироватьИзменениеЗначенияРеквизита("ОснованиеПечатиСсылка");
	
	Элементы.ОснованиеПечати.Заголовок = НСтр("ru='Текст основания'");
	
КонецПроцедуры

&НаКлиенте
Процедура ПодписьРуководителяПриИзменении(Элемент)
	
	ЗафиксироватьИзменениеЗначенияРеквизита(Элемент.Имя);
	ЗаполнитьПодсказкиПодписей();	
	
КонецПроцедуры

&НаКлиенте
Процедура ПодписьГлавногоБухгалтераПриИзменении(Элемент)
	
	ЗафиксироватьИзменениеЗначенияРеквизита(Элемент.Имя);
	ЗаполнитьПодсказкиПодписей();
	
КонецПроцедуры

&НаКлиенте
Процедура ГрузоотправительОнЖеПриИзменении(Элемент)

	Элементы.Грузоотправитель.Видимость = НЕ ГрузоотправительОнЖе;
	Элементы.ГрузоотправительОрганизация.Видимость = ГрузоотправительОнЖе;
	
	Если ГрузоотправительОнЖе Тогда
		КонтекстПечати.Грузоотправитель = ПредопределенноеЗначение("Справочник.Контрагенты.ПустаяСсылка");
	КонецЕсли;

	ЗафиксироватьИзменениеЗначенияРеквизита("Грузоотправитель");

КонецПроцедуры

&НаКлиенте
Процедура ГрузополучательОнЖеПриИзменении(Элемент)

	Элементы.Грузополучатель.Видимость = НЕ ГрузополучательОнЖе;
	Элементы.ГрузополучательКонтрагент.Видимость = ГрузополучательОнЖе;

	Если ГрузополучательОнЖе Тогда
		КонтекстПечати.Грузополучатель = ПредопределенноеЗначение("Справочник.Контрагенты.ПустаяСсылка");
	КонецЕсли;

	ЗафиксироватьИзменениеЗначенияРеквизита("Грузополучатель");	

КонецПроцедуры

&НаКлиенте
Процедура ГрузоотправительПриИзменении(Элемент)
	
	ЗафиксироватьИзменениеЗначенияРеквизита(Элемент.Имя);
	
КонецПроцедуры

&НаКлиенте
Процедура ГрузополучательПриИзменении(Элемент)
	
	ЗафиксироватьИзменениеЗначенияРеквизита(Элемент.Имя);
	ЗафиксироватьИзменениеЗначенияРеквизита("АдресДоставки");
	
	ЗаполнитьАдресДоставки(Истина);
	
КонецПроцедуры

&НаКлиенте
Процедура АдресДоставкиПриИзменении(Элемент)
	
	ЗафиксироватьИзменениеЗначенияРеквизита(Элемент.Имя);

	ПриИзмененииПредставленияАдреса(
	Элемент.ТекстРедактирования,
	КонтекстПечати["АдресДоставкиЗначение"]);

КонецПроцедуры

&НаКлиенте
Процедура АдресДоставкиНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	
	ОткрытьФормуВыбораАдресаИОбработатьРезультат(
		Элемент,
		КонтекстПечати,
		"АдресДоставки",
		СтандартнаяОбработка);
		
КонецПроцедуры

&НаКлиенте
Процедура АдресДоставкиПолучателяОбработкаВыбора(Элемент, ВыбранноеЗначение, СтандартнаяОбработка)
	
	Если ТипЗнч(ВыбранноеЗначение) <> Тип("Структура") Тогда
		Возврат;
	КонецЕсли;
	
	СтандартнаяОбработка = Ложь;
	
	КонтекстПечати.АдресДоставки = ВыбранноеЗначение.АдресДоставки;
	КонтекстПечати.АдресДоставкиЗначение = ВыбранноеЗначение.АдресДоставкиЗначение;
	КонтекстПечати.АдресДоставкиЗначенияПолей = ВыбранноеЗначение.АдресДоставкиЗначенияПолей;

	ЗафиксироватьИзменениеЗначенияРеквизита("АдресДоставки");
	ЗафиксироватьИзменениеЗначенияРеквизита("АдресДоставкиЗначение");
	
	Модифицированность = Истина;
	
КонецПроцедуры

&НаКлиенте
Процедура БанковскийСчетПриИзменении(Элемент)
	
	ЗафиксироватьИзменениеЗначенияРеквизита(Элемент.Имя);
	
КонецПроцедуры

&НаКлиенте
Процедура УсловияСчетаЗаказаПриИзменении(Элемент)
	
	ЗафиксироватьИзменениеЗначенияРеквизита(Элемент.Имя);
	КонтекстПечати.ТекстУсловийСчетаЗаказа = 
		ПолучитьТекстУсловийШаблона(КонтекстПечати.УсловияСчетаЗаказа);
	Элементы.ГруппаТекстУсловийСчета.Видимость = НЕ КонтекстПечати.УсловияСчетаЗаказа.Пустая();
	Элементы.ТекстУсловийСчетаЗаказа.Заголовок = НСтр("ru='Текст условий счета'");
	Элементы.ТекстУсловийСчетаЗаказа.Вид = ВидПоляФормы.ПолеНадписи;
	
КонецПроцедуры

&НаКлиенте
Процедура УсловияКоммерческогоПредложенияПриИзменении(Элемент)
	
	ЗафиксироватьИзменениеЗначенияРеквизита(Элемент.Имя);
	КонтекстПечати.ТекстУсловийКоммерческогоПредложения = 
		ПолучитьТекстУсловийШаблона(КонтекстПечати.УсловияКоммерческогоПредложения);
	Элементы.ГруппаТекстУсловийКП.Видимость = НЕ КонтекстПечати.УсловияКоммерческогоПредложения.Пустая();
	Элементы.ТекстУсловийКоммерческогоПредложения.Заголовок = НСтр("ru='Текст условий КП'");
	Элементы.ТекстУсловийКоммерческогоПредложения.Вид = ВидПоляФормы.ПолеНадписи;
	
КонецПроцедуры

&НаКлиенте
Процедура УсловияЗаказаПокупателяПриИзменении(Элемент)
	
	ЗафиксироватьИзменениеЗначенияРеквизита(Элемент.Имя);
	КонтекстПечати.ТекстУсловийЗаказаПокупателя = ПолучитьТекстУсловийШаблона(КонтекстПечати.УсловияЗаказаПокупателя);
	Элементы.ГруппаТекстУсловийЗаказа.Видимость = НЕ КонтекстПечати.УсловияЗаказаПокупателя.Пустая();
	Элементы.ТекстУсловийЗаказаПокупателя.Заголовок = НСтр("ru='Текст условий заказа'");
	Элементы.ТекстУсловийЗаказаПокупателя.Вид = ВидПоляФормы.ПолеНадписи;
			
КонецПроцедуры

&НаКлиенте
Процедура ТекстУсловийСчетаЗаказаПриИзменении(Элемент)

	ЗафиксироватьИзменениеЗначенияРеквизита(Элемент.Имя);
	
КонецПроцедуры

&НаКлиенте
Процедура ТекстУсловийКоммерческогоПредложенияПриИзменении(Элемент)
	
	ЗафиксироватьИзменениеЗначенияРеквизита(Элемент.Имя);
	
КонецПроцедуры

&НаКлиенте
Процедура ТекстУсловийЗаказаПокупателяПриИзменении(Элемент)
	
	ЗафиксироватьИзменениеЗначенияРеквизита(Элемент.Имя);
	
КонецПроцедуры

&НаКлиенте
Процедура ДекорацияИнформацияПоНовойСхемеЗакрытьНажатие(Элемент)

	Элементы.ГруппаИнформацияПоНовымРеквизитам.Видимость = Ложь;	
	СохранитьНастройкуПоказыватьИнформациюПоНовойСхеме();

КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура РедактироватьУсловияСчета(Команда)

	ДопПараметры = Новый Структура();
	ДопПараметры.Вставить("ТекстУсловий", КонтекстПечати.ТекстУсловийСчетаЗаказа);
	ДопПараметры.Вставить("Условия", КонтекстПечати.УсловияСчетаЗаказа);	
	ДопПараметры.Вставить("Заголовок", НСтр("ru='Условия счета на оплату'"));
	ДопПараметры.Вставить("ИмяРеквизитаУсловий", "ТекстУсловийСчетаЗаказа");
	Оповещение = Новый ОписаниеОповещения("ПослеВводаТекстаУсловий", ЭтотОбъект, ДопПараметры);	
	ОткрытьФорму("Обработка.РеквизитыПечати.Форма.РедакторУсловий", ДопПараметры, ЭтотОбъект, , , , Оповещение);
	
КонецПроцедуры

&НаКлиенте
Процедура РедактироватьУсловияЗаказаПокупателя(Команда)

	ДопПараметры = Новый Структура();
	ДопПараметры.Вставить("ТекстУсловий", КонтекстПечати.ТекстУсловийЗаказаПокупателя);
	ДопПараметры.Вставить("Условия", КонтекстПечати.УсловияЗаказаПокупателя);	
	ДопПараметры.Вставить("Заголовок", НСтр("ru='Условия заказа покупателя'"));
	ДопПараметры.Вставить("ИмяРеквизитаУсловий", "ТекстУсловийЗаказаПокупателя");
	Оповещение = Новый ОписаниеОповещения("ПослеВводаТекстаУсловий", ЭтотОбъект, ДопПараметры);	
	ОткрытьФорму("Обработка.РеквизитыПечати.Форма.РедакторУсловий", ДопПараметры, ЭтотОбъект, , , , Оповещение);
			
КонецПроцедуры

&НаКлиенте
Процедура РедактироватьУсловияКП(Команда)
	
	ДопПараметры = Новый Структура();
	ДопПараметры.Вставить("ТекстУсловий", КонтекстПечати.ТекстУсловийКоммерческогоПредложения);
	ДопПараметры.Вставить("Условия", КонтекстПечати.УсловияКоммерческогоПредложения);	
	ДопПараметры.Вставить("Заголовок", НСтр("ru='Условия коммерческого предложения'"));
	ДопПараметры.Вставить("ИмяРеквизитаУсловий", "ТекстУсловийКоммерческогоПредложения");
	Оповещение = Новый ОписаниеОповещения("ПослеВводаТекстаУсловий", ЭтотОбъект, ДопПараметры);	
	ОткрытьФорму("Обработка.РеквизитыПечати.Форма.РедакторУсловий", ДопПараметры, ЭтотОбъект, , , , Оповещение);
	
КонецПроцедуры

&НаКлиенте
Процедура ОК(Команда)
	
	ЗаписатьИзмененияИЗакрытьФорму();
	
КонецПроцедуры

&НаКлиенте
Процедура ВосстановитьПодписиПоУмолчанию(Команда)
	
	ПредыдущиеЗначения = Новый Структура("ПодписьРуководителя, ПодписьГлавногоБухгалтера");
	ЗаполнитьЗначенияСвойств(ПредыдущиеЗначения, КонтекстПечати);
	
	ПолучитьПодписиПоУмолчаниюНаСервере();
	
	Для каждого ЭлементСтруктуры Из ПредыдущиеЗначения Цикл
		
		Если ЭлементСтруктуры.Значение <> КонтекстПечати[ЭлементСтруктуры.Ключ] Тогда
			
			ЗафиксироватьИзменениеЗначенияРеквизита(ЭлементСтруктуры.Ключ);
			
		КонецЕсли;
		
	КонецЦикла;
	
КонецПроцедуры

&НаКлиенте
Процедура ОснованиеПечатиНастройкаЗаполненияПоУмолчанию(Команда)
	
	ОткрытьФорму("ОбщаяФорма.ОснованиеПечатиНастройки");
	
КонецПроцедуры

&НаКлиенте
Процедура СохранитьПодписьРуководителяНажатие(Команда)
	
    ЗаписатьНастройкуПользователя("ПодписьРуководителя", КонтекстПечати.ПодписьРуководителя);
	
КонецПроцедуры

&НаКлиенте
Процедура СохранитьПодписьГлавногоБухгалтераНажатие(Команда)

	ЗаписатьНастройкуПользователя("ПодписьГлавногоБухгалтера", КонтекстПечати.ПодписьГлавногоБухгалтера);
	
КонецПроцедуры

&НаКлиенте
Процедура СохранитьУсловияСчета(Команда)
	
	ЗаписатьНастройкуПользователя("УсловияСчетаЗаказа", КонтекстПечати.УсловияСчетаЗаказа);
	
КонецПроцедуры

&НаКлиенте
Процедура СохранитьУсловияЗаказаПокупателя(Команда)
	
	ЗаписатьНастройкуПользователя("УсловияЗаказаПокупателя", КонтекстПечати.УсловияЗаказаПокупателя);
	
КонецПроцедуры

&НаКлиенте
Процедура СохранитьУсловияКП(Команда)
	
	ЗаписатьНастройкуПользователя("УсловияКоммерческогоПредложения", КонтекстПечати.УсловияКоммерческогоПредложения);
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаСервере
Процедура ЗаголовокФормы()
	
	Заголовок = Обработки.РеквизитыПечати.ЗаголовокФормы();
	
КонецПроцедуры

&НаСервере
Процедура ДоступностьКомандФормы()
	
	Если НЕ ПравоДоступа("Изменение", КонтекстПечати.Ссылка.Метаданные()) Тогда
		
		ОбщегоНазначенияКлиентСервер.УстановитьСвойствоЭлементаФормы(Элементы, 
			"ФормаВосстановитьПодписиПоУмолчанию", "Доступность", Ложь);
		ОбщегоНазначенияКлиентСервер.УстановитьСвойствоЭлементаФормы(Элементы, 
			"ОснованиеПечати", "Доступность", Ложь);
		ОбщегоНазначенияКлиентСервер.УстановитьСвойствоЭлементаФормы(Элементы, 
			"РедактироватьПредставлениеОснованияПечати", "Доступность", Ложь);
		
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ИзменитьЗаголовокСвернутойГруппы()
	
	ШаблонЗаголовка = НСтр("ru ='Основание печати: %1'");
	ТекстЗаголовка = СтрШаблон(ШаблонЗаголовка, КонтекстПечати.ОснованиеПечати);
	
	ОбщегоНазначенияКлиентСервер.УстановитьСвойствоЭлементаФормы(Элементы, "ГруппаОснованиеПечати", 
		"ЗаголовокСвернутогоОтображения", ТекстЗаголовка);
	
КонецПроцедуры

&НаКлиенте
Процедура ЗафиксироватьИзменениеЗначенияРеквизита(ИмяРеквизита)
	
	Если МассивИзмененныхРеквизитов.Найти(ИмяРеквизита) = Неопределено Тогда
		
		МассивИзмененныхРеквизитов.Добавить(ИмяРеквизита);
		
	КонецЕсли;
	
	Модифицированность = Истина;
	
КонецПроцедуры

&НаКлиенте
Процедура ЗаписатьИзмененияИЗакрытьФорму(Команда = Неопределено)
	
	ПараметрыЗакрытия = Новый Структура;
	Если Команда <> Неопределено Тогда
		
		ПараметрыЗакрытия.Вставить("Команда", Команда);
		
	КонецЕсли;
	
	ИзмененныеРеквизиты = Новый Структура;
	Для каждого ЭлементМассива Из МассивИзмененныхРеквизитов Цикл
		
		ИзмененныеРеквизиты.Вставить(ЭлементМассива, КонтекстПечати[ЭлементМассива]);
		
	КонецЦикла;
	
	ДополнитьРеквизитыТекстамиУсловий(ИзмененныеРеквизиты);
	
	ПараметрыЗакрытия.Вставить("ИзмененныеРеквизиты", ИзмененныеРеквизиты);

	ПараметрыЗакрытия.Вставить("ГрузоотправительОнЖе", ГрузоотправительОнЖе);
	ПараметрыЗакрытия.Вставить("ГрузополучательОнЖе", ГрузополучательОнЖе);
	
	ПодтвержденоЗакрытиеФормы = Истина;
	
	Закрыть(ПараметрыЗакрытия);
	
КонецПроцедуры

&НаСервере
Процедура ЗаполнитьСписокВыбораАдресаДоставки(ЭлементАдреса, Владелец, ВидыКИ)
	
	МассивВладельцев = Новый Массив;
	МассивВладельцев.Добавить(Владелец);
	
	Адреса = УправлениеКонтактнойИнформацией.КонтактнаяИнформацияОбъектов(МассивВладельцев,
		,
		ВидыКИ,
		ТекущаяДатаСеанса());
	
	Для Каждого Адрес Из Адреса Цикл
		
		ЭлементАдреса.СписокВыбора.Добавить(Адрес.Представление);
		
	КонецЦикла;
	
КонецПроцедуры

&НаСервере
Процедура ЗаполнитьАдресДоставки(ОчиститьПоле = Ложь)
	
	Если ОчиститьПоле Тогда
		
		КонтекстПечати.АдресДоставки = "";
		
	КонецЕсли;
	
	Элементы.АдресДоставки.СписокВыбора.Очистить();
	
	ВидыКИ = Новый Массив;
	ВидыКИ.Добавить(Справочники.ВидыКонтактнойИнформации.ФактАдресКонтрагента);
	ВидыКИ.Добавить(Справочники.ВидыКонтактнойИнформации.АдресДоставкиКонтрагента);
	
	ИсточникАдресовДоставки = ?(ЗначениеЗаполнено(КонтекстПечати.Грузополучатель), КонтекстПечати.Грузополучатель, КонтекстПечати.Контрагент);
	ЗаполнитьСписокВыбораАдресаДоставки(Элементы.АдресДоставки, ИсточникАдресовДоставки, ВидыКИ);
	
КонецПроцедуры

&НаКлиенте
Процедура ОткрытьФормуВыбораАдресаИОбработатьРезультат(Элемент, Объект, ИмяРеквизитаАдресаДоставки, СтандартнаяОбработка = Ложь)
	
	СтандартнаяОбработка = Ложь;
	
	АдресПредставление = Объект[ИмяРеквизитаАдресаДоставки];
	АдресЗначение = Объект[ИмяРеквизитаАдресаДоставки + "Значение"];
	
	// Откроем диалог редактирования КИ
	ПараметрыОткрытия = Новый Структура;
	ПараметрыОткрытия.Вставить("ВидКонтактнойИнформации", 
		ПредопределенноеЗначение("Справочник.ВидыКонтактнойИнформации.АдресДоставкиКонтрагента"));
	ПараметрыОткрытия.Вставить("Значение", АдресЗначение);
	ПараметрыОткрытия.Вставить("Представление", АдресПредставление);
	ПараметрыОткрытия.Вставить("Комментарий", Объект.ДополнительнаяИнформацияПоДоставке);
	
	ДополнительныеПараметры = Новый Структура;
	ДополнительныеПараметры.Вставить("Объект", Объект);
	ДополнительныеПараметры.Вставить("ИмяРеквизитаАдресаДоставки", ИмяРеквизитаАдресаДоставки);
	ДополнительныеПараметры.Вставить("Элемент", Элемент);
	
	Оповещение = Новый ОписаниеОповещения("ОткрытьФормуВыбораАдресаИОбработатьРезультатЗавершение", 
		ЭтотОбъект, ДополнительныеПараметры);
	
	УправлениеКонтактнойИнформациейКлиент.ОткрытьФормуКонтактнойИнформации(ПараметрыОткрытия, , Оповещение);
	
КонецПроцедуры

&НаКлиенте
Процедура ОткрытьФормуВыбораАдресаИОбработатьРезультатЗавершение(Результат, ДополнительныеПараметры) Экспорт 
	
	ИмяРеквизитаАдресаДоставки = ДополнительныеПараметры.ИмяРеквизитаАдресаДоставки;
		
	Если ТипЗнч(Результат) = Тип("Структура") Тогда // КИ введена
		
		// Перенесем данные в форму
		КонтекстПечати[ИмяРеквизитаАдресаДоставки + "Значение"] = Результат.Значение;
		КонтекстПечати[ИмяРеквизитаАдресаДоставки] = Результат.Представление;
		КонтекстПечати.ДополнительнаяИнформацияПоДоставке = Результат.Комментарий;

		ЗафиксироватьИзменениеЗначенияРеквизита("АдресДоставки");
		ЗафиксироватьИзменениеЗначенияРеквизита("АдресДоставкиЗначение");
		
		Модифицированность = Истина;
		ОбновитьОтображениеДанных();
		
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура ПолучитьПодписиПоУмолчаниюНаСервере()
	
	ДокументОбъект = ДанныеФормыВЗначение(КонтекстПечати, Тип("ДокументОбъект.ЗаказПокупателя"));
	Обработки.РеквизитыПечати.ПодписиПоУмолчанию(ДокументОбъект);
	ЗначениеВДанныеФормы(ДокументОбъект, КонтекстПечати);
	
КонецПроцедуры

&НаСервере
Процедура ЗаполнитьОснованияПечати(Параметры)
	
	СписокВыбораЭлемента = Элементы.ОснованиеПечатиСсылка.СписокВыбора;
	
	Если ЗначениеЗаполнено(КонтекстПечати.Договор) Тогда
		
		СписокВыбораЭлемента.Добавить(КонтекстПечати.Договор, ПечатьДокументовУНФ.ПредставлениеОснованияПечати(КонтекстПечати.Договор));
		
	КонецЕсли;
	
	Если Параметры.Свойство("НаборОснований")
		И Параметры.НаборОснований.Количество() > 0 Тогда
		
		Для каждого СтрокаМассива Из Параметры.НаборОснований Цикл
			
			СписокВыбораЭлемента.Добавить(СтрокаМассива, ПечатьДокументовУНФ.ПредставлениеОснованияПечати(СтрокаМассива));
			
		КонецЦикла;
		
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура ЗаполнитьПараметрыВыбораБанковскогоСчета()
	
	Обработки.РеквизитыПечати.ЗаполнитьПараметрыВыбораБанковскогоСчетаОрганизации(Элементы.БанковскийСчет, КонтекстПечати);
	
КонецПроцедуры

&НаКлиенте
Процедура ЗаписатьНастройкуПользователя(НазваниеНастройки, ЗначениеНастройки)
	
	ЗаписатьНастройкуПользователяСервер(НазваниеНастройки, ЗначениеНастройки);	
	
	СтрокаЗаголовка = НСтр("ru='Сохранение настроек пользователя'");
	ШаблонСообщения = НСтр("ru='Значение сохранено для использования в новых документах %1 %2'");
	
	ПараметрОрганизация = "";
	
	Если ИспользоватьНесколькоОрганизаций Тогда
		
		НаименованиеОрганизации = УправлениеНебольшойФирмойВызовСервера.ЗначениеРеквизитаОбъекта(
			КонтекстПечати.Организация, "Наименование");
		ПараметрОрганизация = СтрШаблон(НСтр("ru='по организации %1'"), НаименованиеОрганизации);
		
	КонецЕсли;
	
	ПараметрПользователь = СтрШаблон(НСтр("ru='пользователем %1'"), ПользователиКлиент.АвторизованныйПользователь());

	СтрокаТекста = СтрШаблон(ШаблонСообщения, ПараметрОрганизация, ПараметрПользователь);
	КартинкаСохранения = ОбщегоНазначенияУНФКлиентСервер.КартинкаСохраненияНастроек();
	
	ПоказатьОповещениеПользователя(СтрокаЗаголовка, , СтрокаТекста, КартинкаСохранения,
		СтатусОповещенияПользователя.Важное);
	
КонецПроцедуры

&НаСервере
Процедура ЗаписатьНастройкуПользователяСервер(НазваниеНастройки, ЗначениеНастройки)

	РегистрыСведений.НастройкиПользователей.Установить(ЗначениеНастройки, НазваниеНастройки, ,
		КонтекстПечати.Организация);
	
КонецПроцедуры

&НаСервереБезКонтекста
Процедура ПриИзмененииПредставленияАдреса(Представление, АдресЗначение)
	
	Если ЗначениеЗаполнено(Представление) Тогда
		АдресЗначение = УправлениеКонтактнойИнформацией.КонтактнаяИнформацияПоПредставлению(Представление,
			Перечисления.ТипыКонтактнойИнформации.Адрес);
	Иначе
		АдресЗначение = "";
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура ЗаполнитьПодсказкиПодписей() 
	
	Если КонтекстПечати.ПодписьГлавногоБухгалтера = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(КонтекстПечати.Организация,
			"ПодписьГлавногоБухгалтера") Тогда
		Элементы.ПодписьГлавногоБухгалтера.Подсказка = НСтр("ru='Подпись из реквизитов организации'");
	Иначе
		Элементы.ПодписьГлавногоБухгалтера.Подсказка = НСтр("ru='Подпись из настроек пользователя'");
	КонецЕсли;
	
	Если КонтекстПечати.ПодписьРуководителя = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(КонтекстПечати.Организация,
			"ПодписьРуководителя") Тогда
		Элементы.ПодписьРуководителя.Подсказка = НСтр("ru='Подпись из реквизитов организации'");
	Иначе
		Элементы.ПодписьРуководителя.Подсказка = НСтр("ru='Подпись из настроек пользователя'");
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура УстановитьКартинкиКнопок()
	
	КартинкаСохранения = ОбщегоНазначенияУНФКлиентСервер.КартинкаСохраненияНастроек();
	Элементы.СохранитьПодписьРуководителя.Картинка = КартинкаСохранения;
	Элементы.СохранитьПодписьГлавногоБухгалтера.Картинка = КартинкаСохранения;
	Элементы.СохранитьУсловияСчета.Картинка = КартинкаСохранения;
	Элементы.СохранитьУсловияКП.Картинка = КартинкаСохранения;
	
КонецПроцедуры

&НаСервере
Процедура УстановитьВидФормы()
	
	Если Параметры.Свойство("РазвернутьГруппы") И Параметры.РазвернутьГруппы <> "" Тогда
		СписокГрупп = СтроковыеФункцииКлиентСервер.РазложитьСтрокуВМассивПодстрок(Параметры.РазвернутьГруппы);
		Для каждого ЭлементФормы Из Элементы Цикл
			Если ЭлементФормы.Вид = ВидГруппыФормы.ОбычнаяГруппа Тогда
				Если СписокГрупп.Найти(ЭлементФормы.Имя) <> Неопределено Тогда
					ЭлементФормы.Показать();
				Иначе
					ЭлементФормы.Скрыть();
				КонецЕсли;
			КонецЕсли;
		КонецЦикла;
		
	КонецЕсли;
	
	Если Параметры.Свойство("ТекущийЭлемент") Тогда
		
		ТекущийЭлемент = Элементы[Параметры.ТекущийЭлемент];

	КонецЕсли;
	
	Элементы.ГруппаТекстУсловийЗаказа.Видимость = НЕ КонтекстПечати.УсловияЗаказаПокупателя.Пустая();
	Элементы.ГруппаТекстУсловийКП.Видимость = НЕ КонтекстПечати.УсловияКоммерческогоПредложения.Пустая();
	Элементы.ГруппаТекстУсловийСчета.Видимость = НЕ КонтекстПечати.УсловияСчетаЗаказа.Пустая();
	
	ТекстПоУмолчанию = ТекстОснованияПоУмолчанию(КонтекстПечати.ОснованиеПечатиСсылка);
	
	Если КонтекстПечати.ОснованиеПечати <> ТекстПоУмолчанию Тогда
		Элементы.ОснованиеПечати.Заголовок = НСтр("ru='Измененный текст'");
	КонецЕсли;
	
	Если НЕ ПустаяСтрока(КонтекстПечати.ТекстУсловийЗаказаПокупателя) Тогда
		УстановитьВидПолеВвода("ТекстУсловийЗаказаПокупателя");
	Иначе
		КонтекстПечати.ТекстУсловийЗаказаПокупателя = 
			ПолучитьТекстУсловийШаблона(КонтекстПечати.УсловияЗаказаПокупателя);
	КонецЕсли;

	Если НЕ ПустаяСтрока(КонтекстПечати.ТекстУсловийКоммерческогоПредложения) Тогда
		УстановитьВидПолеВвода("ТекстУсловийКоммерческогоПредложения");
	Иначе
		КонтекстПечати.ТекстУсловийКоммерческогоПредложения = 
			ПолучитьТекстУсловийШаблона(КонтекстПечати.УсловияКоммерческогоПредложения);
	КонецЕсли;	
	
	Если НЕ ПустаяСтрока(КонтекстПечати.ТекстУсловийСчетаЗаказа) Тогда
		УстановитьВидПолеВвода("ТекстУсловийСчетаЗаказа");
	Иначе
		КонтекстПечати.ТекстУсловийСчетаЗаказа = 
			ПолучитьТекстУсловийШаблона(КонтекстПечати.УсловияСчетаЗаказа);
	КонецЕсли;	
	
КонецПроцедуры

&НаСервере
Процедура УстановитьОтображениеГрузоперевозки()

	РаботаСФормойДокумента.НастроитьГруппуГрузоперевозки(ЭтотОбъект, КонтекстПечати.Организация,
		КонтекстПечати.Контрагент);

КонецПроцедуры

&НаСервере
Процедура СохранитьНастройкуПоказыватьИнформациюПоНовойСхеме()

	РаботаСФормойДокумента.СохранитьВидимостьГруппыИнформации(ИмяФормы,
			"ПоказыватьИнформациюПоНовойСхемеРеквизитовПечати", Ложь, "ФормыОбработкиРеквизитыПечати");
	
КонецПроцедуры

&НаКлиенте
Процедура ПослеВводаТекстаУсловий(Результат, ДополнительныеПараметры) Экспорт
	
	Если ТипЗнч(Результат) = Тип("Строка") Тогда
		ЗафиксироватьИзменениеЗначенияРеквизита(ДополнительныеПараметры.ИмяРеквизитаУсловий);		
		НастроитьПоляУсловий(ДополнительныеПараметры.ИмяРеквизитаУсловий, ДополнительныеПараметры.Условия,
			Результат);
	КонецЕсли;
	
КонецПроцедуры 

&НаСервере
Процедура НастроитьПоляУсловий(ИмяРеквизита, Условия, ТекстУсловий)

	ТекстУсловийШаблона = ПолучитьТекстУсловийШаблона(Условия);
	ИмяРеквизитаУсловий = ИмяРеквизита;
	КонтекстПечати[ИмяРеквизитаУсловий] = ТекстУсловий;		
	Если ТекстУсловийШаблона <> ТекстУсловий Тогда
		УстановитьВидПолеВвода(ИмяРеквизитаУсловий);
	Иначе
		УстановитьВидПолеНадписи(ИмяРеквизитаУсловий);
	КонецЕсли;	
	
КонецПроцедуры

&НаСервере
Процедура УстановитьВидПолеВвода(ИмяРеквизитаУсловий)
	
	Элемент = Элементы[ИмяРеквизитаУсловий];
	Элемент.Вид = ВидПоляФормы.ПолеВвода;
	Элемент.МногострочныйРежим = Истина;
	Элемент.Высота = 1;
	Элемент.Заголовок = НСтр("ru='Измененный текст условий'");
	
КонецПроцедуры

&НаСервере
Процедура УстановитьВидПолеНадписи(ИмяРеквизитаУсловий)
	
	Элемент = Элементы[ИмяРеквизитаУсловий];
	Элемент.Вид = ВидПоляФормы.ПолеНадписи;
	Если ИмяРеквизитаУсловий = "ТекстУсловийСчетаЗаказа" Тогда
		ТекстЗаголовка = НСтр("ru='Текст условий счета'");		
	ИначеЕсли ИмяРеквизитаУсловий = "ТекстУсловийКоммерческогоПредложения" Тогда
		ТекстЗаголовка = НСтр("ru='Текст условий КП'");	
	Иначе
		ТекстЗаголовка = НСтр("ru='Текст условий заказа'");
	КонецЕсли;
	Элемент.Заголовок = ТекстЗаголовка;
	
КонецПроцедуры

&НаСервереБезКонтекста
Функция ПолучитьТекстУсловийШаблона(Условия)
	
	ТекстУсловий = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(Условия, "ТекстУсловий");
	Возврат ТекстУсловий;
	
КонецФункции

&НаСервере
Процедура ДополнитьРеквизитыТекстамиУсловий(ИзмененныеРеквизиты)
	
	Если КонтекстПечати.ТекстУсловийЗаказаПокупателя <> ОбщегоНазначения.ЗначениеРеквизитаОбъекта(
		КонтекстПечати.УсловияЗаказаПокупателя, "ТекстУсловий") Тогда
			ИзмененныеРеквизиты.Вставить("ТекстУсловийЗаказаПокупателя", КонтекстПечати.ТекстУсловийЗаказаПокупателя);
	Иначе
		ИзмененныеРеквизиты.Вставить("ТекстУсловийЗаказаПокупателя", "");
	КонецЕсли;

	Если КонтекстПечати.ТекстУсловийКоммерческогоПредложения <> ОбщегоНазначения.ЗначениеРеквизитаОбъекта(
		КонтекстПечати.УсловияКоммерческогоПредложения, "ТекстУсловий") Тогда
			ИзмененныеРеквизиты.Вставить("ТекстУсловийКоммерческогоПредложения", 
			КонтекстПечати.ТекстУсловийКоммерческогоПредложения);
	Иначе
		ИзмененныеРеквизиты.Вставить("ТекстУсловийКоммерческогоПредложения", "");			
	КонецЕсли;	

	Если КонтекстПечати.ТекстУсловийСчетаЗаказа <> ОбщегоНазначения.ЗначениеРеквизитаОбъекта(
		КонтекстПечати.УсловияСчетаЗаказа, "ТекстУсловий") Тогда
			ИзмененныеРеквизиты.Вставить("ТекстУсловийСчетаЗаказа", 
			КонтекстПечати.ТекстУсловийСчетаЗаказа);
	Иначе
		ИзмененныеРеквизиты.Вставить("ТекстУсловийСчетаЗаказа", "");			
	КонецЕсли;	
	
КонецПроцедуры

&НаКлиентеНаСервереБезКонтекста
Функция ТекстОснованияПоУмолчанию(ОснованиеПечатиСсылка)
	
	ТекстПоУмолчанию = "";
	Если ЗначениеЗаполнено(ОснованиеПечатиСсылка) Тогда 
		Если ТипЗнч(ОснованиеПечатиСсылка) = Тип("СправочникСсылка.ДоговорыКонтрагентов") Тогда
			ТекстПоУмолчанию = НСтр("ru='Договор:'") + " ";	
		КонецЕсли;
		ТекстПоУмолчанию = ТекстПоУмолчанию + Строка(ОснованиеПечатиСсылка);
	КонецЕсли;

	Возврат ТекстПоУмолчанию;
			
КонецФункции
	
#КонецОбласти

#Область Библиотеки

// СтандартныеПодсистемы.ПодключаемыеКоманды
&НаКлиенте
Процедура Подключаемый_ВыполнитьКоманду(Команда)
	
	ЗаписатьИзмененияИЗакрытьФорму(Команда);
	
	Возврат; // работа типового метода не предусмотрена
	ПодключаемыеКомандыКлиент.ВыполнитьКоманду(ЭтотОбъект, Команда, КонтекстПечати);
	
КонецПроцедуры

&НаСервере
Процедура Подключаемый_ВыполнитьКомандуНаСервере(Контекст, Результат) Экспорт
	
	Возврат; // работа типового метода не предусмотрена
	ПодключаемыеКоманды.ВыполнитьКоманду(ЭтотОбъект, Контекст, КонтекстПечати, Результат);
	
КонецПроцедуры

&НаКлиенте
Процедура Подключаемый_ОбновитьКоманды()
	
	Возврат; // работа типового метода не предусмотрена
	ПодключаемыеКомандыКлиентСервер.ОбновитьКоманды(ЭтотОбъект, КонтекстПечати);
	
КонецПроцедуры

// Конец СтандартныеПодсистемы.ПодключаемыеКоманды

#КонецОбласти
