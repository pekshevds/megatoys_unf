
#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	РежимСопоставленияПоНакладной = Параметры.РежимСопоставленияПоНакладной;
	
	УстановитьДополнительныеКолонкиНоменклатуры();
	
	ИспользоватьПодключаемоеОборудование = УправлениеНебольшойФирмойПовтИсп.ИспользоватьПодключаемоеОборудование();
	
	Если Параметры.Свойство("ТТН") Тогда
		ТТН = Параметры.ТТН;
	КонецЕсли;
	
	ПроизводилисьДействия = Ложь;
	
	ОбщегоНазначенияКлиентСервер.УстановитьПараметрДинамическогоСписка(СписокАлкогольнойПродукцииЕГАИС, "ТТН", ТТН);
	
	ИзменитьЭлементОтбораСписка(
		СписокНоменклатуры,
		"АлкогольнаяПродукция",
		Истина,
		Истина,
		ВидСравненияКомпоновкиДанных.Равно);
	
	Если Параметры.Свойство("АдресВХранилище") И ЗначениеЗаполнено(Параметры.АдресВХранилище) Тогда
		
		СтруктураДанных = ПолучитьИзВременногоХранилища(Параметры.АдресВХранилище);
		
		Если СтруктураДанных.Свойство("НеСопоставленныеТовары") Тогда
			ТаблицаТоваров = ПолучитьИзВременногоХранилища(СтруктураДанных.НеСопоставленныеТовары);
			ИзменитьЭлементОтбораСписка(СписокАлкогольнойПродукцииЕГАИС, "Ссылка", ТаблицаТоваров.ВыгрузитьКолонку("АлкогольнаяПродукция"), Истина, ВидСравненияКомпоновкиДанных.ВСписке);
		КонецЕсли;
		
		Если СтруктураДанных.Свойство("АлкогольнаяПродукция") Тогда
			Если ЗначениеЗаполнено(СтруктураДанных.АлкогольнаяПродукция) Тогда
				ИзменитьЭлементОтбораСписка(СписокАлкогольнойПродукцииЕГАИС, "Ссылка", СтруктураДанных.АлкогольнаяПродукция, Истина, ВидСравненияКомпоновкиДанных.ВСписке);
			КонецЕсли;
		КонецЕсли;
		
		Если СтруктураДанных.Свойство("Номенклатура") Тогда
			Если ЗначениеЗаполнено(СтруктураДанных.Номенклатура) Тогда
				ИзменитьЭлементОтбораСписка(СписокНоменклатуры, "Ссылка", СтруктураДанных.Номенклатура, Истина, ВидСравненияКомпоновкиДанных.ВСписке);
			КонецЕсли;
		КонецЕсли;
		
		Если Параметры.Свойство("РежимВыбора") Тогда
			РежимВыбора = Параметры.РежимВыбора;
			Элементы.ФормаВыбратьНоменклатуру.Видимость         = РежимВыбора;
			Элементы.ФормаВыбратьНоменклатуру.КнопкаПоУмолчанию = РежимВыбора;
			Элементы.ФормаУстановитьСоответствие.Видимость      = НЕ РежимВыбора;
			Элементы.ГруппаСтраницыАлкогольнойПродукции.ТекущаяСтраница = Элементы.ГруппаАлкогольнаяПродукция;
			
		ИначеЕсли Параметры.Свойство("РежимСопоставленияИВыбора") И СтруктураДанных.Свойство("АлкогольнаяПродукция") И ЗначениеЗаполнено(СтруктураДанных.АлкогольнаяПродукция) Тогда
			РежимСопоставленияИВыбора = Параметры.РежимСопоставленияИВыбора;
			
			АлкогольнаяПродукция = СтруктураДанных.АлкогольнаяПродукция;
			РеквизитыАлкогольнойПродукции = ОбщегоНазначения.ЗначенияРеквизитовОбъекта(СтруктураДанных.АлкогольнаяПродукция, "Объем, Крепость, ВидПродукции, Производитель, Импортер");
			
			АлкогольнаяПродукцияОбъем         = РеквизитыАлкогольнойПродукции.Объем;
			АлкогольнаяПродукцияКрепость      = РеквизитыАлкогольнойПродукции.Крепость;
			АлкогольнаяПродукцияВидПродукции  = РеквизитыАлкогольнойПродукции.ВидПродукции;
			АлкогольнаяПродукцияПроизводитель = РеквизитыАлкогольнойПродукции.Производитель;
			АлкогольнаяПродукцияИмпортер      = РеквизитыАлкогольнойПродукции.Импортер;
			
			Элементы.ФормаСопоставитьИВыбрать.Видимость         = РежимСопоставленияИВыбора;
			Элементы.ФормаСопоставитьИВыбрать.КнопкаПоУмолчанию = РежимСопоставленияИВыбора;
			Элементы.ФормаУстановитьСоответствие.Видимость      = НЕ РежимСопоставленияИВыбора;
			Элементы.ФормаОтменитьСоответствие.Видимость        = НЕ РежимСопоставленияИВыбора;
			
			Элементы.ГруппаСтраницыАлкогольнойПродукции.ТекущаяСтраница = Элементы.ГруппаАлкогольнаяПродукцияИнформация;
			
			ОбновитьИнформациюОСопоставленииКонтрагентовНаСервере();
			
		Иначе
			Элементы.ГруппаСтраницыАлкогольнойПродукции.ТекущаяСтраница = Элементы.ГруппаАлкогольнаяПродукция;
			
		КонецЕсли;
		
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	
	// ПодключаемоеОборудование
	МенеджерОборудованияКлиент.НачатьПодключениеОборудованиеПриОткрытииФормы(, ЭтаФорма, "СканерШтрихкода");
	// Конец ПодключаемоеОборудование
	
	Если ИспользоватьОтборПоСвойствам Тогда
		ПодключитьОбработчикОжидания("Подключаемый_ОбновитьОтборНоменклатуры", 0.1, Истина);
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ПриЗакрытии(ЗавершениеРаботы)
	
	// ПодключаемоеОборудование
	МенеджерОборудованияКлиент.НачатьОтключениеОборудованиеПриЗакрытииФормы(, ЭтаФорма);
	// Конец ПодключаемоеОборудование
	
КонецПроцедуры

&НаКлиенте
Процедура ПередЗакрытием(Отказ, ЗавершениеРаботы, ТекстПредупреждения, СтандартнаяОбработка)
	
	Если ЗавершениеРаботы Тогда
		Отказ = Истина;
		Возврат;
	КонецЕсли;
	
	Если ЗначениеЗаполнено(ТТН) И ПроизводилисьДействия Тогда
		
		СписокКнопок = Новый СписокЗначений;
		СписокКнопок.Добавить(КодВозвратаДиалога.Да, НСтр("ru = 'Да'"));
		СписокКнопок.Добавить(КодВозвратаДиалога.Нет, НСтр("ru = 'Нет'"));
		
		ПоказатьВопрос(
			Новый ОписаниеОповещения("ПередЗакрытиемВопросЗавершение", ЭтотОбъект),
			НСтр("ru = 'Закрыть форму сопоставления?'"), СписокКнопок);
			
			Отказ = Истина;
		
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура ПередЗагрузкойДанныхИзНастроекНаСервере(Настройки)
	
	ВосстановитьНастройкиНаСервере(Настройки);
	
КонецПроцедуры

&НаКлиенте
Процедура ОбработкаОповещения(ИмяСобытия, Параметр, Источник)
	Если Источник = "ПодключаемоеОборудование"
		И ВводДоступен() Тогда
		Если ИмяСобытия = "ScanData" Тогда
			// Преобразуем предварительно к ожидаемому формату
			Если Параметр[1] = Неопределено Тогда
				Данные = Новый Структура("Штрихкод, Количество", Параметр[0],1); // Достаем штрихкод из основных данных
			Иначе
				Данные = Новый Структура("Штрихкод, Количество", Параметр[1][1],1); // Достаем штрихкод из дополнительных данных
			КонецЕсли;
			
			ПолученШтрихкод(Данные);
		КонецЕсли;
	КонецЕсли;
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовШапкиФормы

&НаКлиенте
Процедура ТТНПриИзменении(Элемент)
	
	ОбщегоНазначенияКлиентСервер.УстановитьПараметрДинамическогоСписка(СписокАлкогольнойПродукцииЕГАИС, "ТТН", ТТН);
	
	Элементы.СписокАлкогольнойПродукцииЕГАИС.Обновить();
	
КонецПроцедуры

&НаКлиенте
Процедура ВариантОтбораСоответствийАлкогольнаяПродукцияПриИзменении(Элемент)
	
	УстановитьОтборПоСоответствиюАлкогольнаяПродукция(ЭтотОбъект);
	
КонецПроцедуры

&НаКлиенте
Процедура ВариантОтбораСоответствийНоменклатураПриИзменении(Элемент)
	
	УстановитьОтборПоСоответствиюНоменклатура(ЭтотОбъект);
	
КонецПроцедуры

&НаКлиенте
Процедура ИспользоватьОтборПоСвойствамПриИзменении(Элемент)
	
	УстановитьОтборНоменклатурыПоСвойствамАлкогольнойПродукции();
	
КонецПроцедуры

&НаКлиенте
Процедура СвойстваОтбораНоменклатурыНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	
	СписокСвойствСПометками = Новый СписокЗначений;
	СписокСвойствСПометками.Добавить("Объем"        , НСтр("ru='Объем'")        , СвойстваОтбораНоменклатуры.НайтиПоЗначению("Объем")         <> Неопределено);
	СписокСвойствСПометками.Добавить("Крепость"     , НСтр("ru='Крепость'")     , СвойстваОтбораНоменклатуры.НайтиПоЗначению("Крепость")      <> Неопределено);
	СписокСвойствСПометками.Добавить("ВидПродукции" , НСтр("ru='Вид продукции'"), СвойстваОтбораНоменклатуры.НайтиПоЗначению("ВидПродукции")  <> Неопределено);
	СписокСвойствСПометками.Добавить("Производитель", НСтр("ru='Производитель'"), СвойстваОтбораНоменклатуры.НайтиПоЗначению("Производитель") <> Неопределено);
	СписокСвойствСПометками.Добавить("Импортер"     , НСтр("ru='Импортер'")     , СвойстваОтбораНоменклатуры.НайтиПоЗначению("Импортер")      <> Неопределено);
	
	СписокСвойствСПометками.ПоказатьОтметкуЭлементов(
		Новый ОписаниеОповещения("ОтметкаСвойствОтбора_Завершение", ЭтотОбъект),
		НСтр("ru='Список свойств для отбора'"));
	
КонецПроцедуры

&НаКлиенте
Процедура СвойстваОтбораНоменклатурыОчистка(Элемент, СтандартнаяОбработка)
	
	ПодключитьОбработчикОжидания("Подключаемый_ОбновитьОтборНоменклатуры", 0.1, Истина);
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийТаблицФормы

&НаКлиенте
Процедура СписокАлкогольнойПродукцииЕГАИСВыбор(Элемент, ВыбраннаяСтрока, Поле, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	
	Если НЕ Элемент.ТекущиеДанные = Неопределено И НЕ Элемент.ТекущиеДанные.НоменклатураСопоставлена = 0 Тогда
		СвязаннаяНоменклатура = ПолучитьСписокСвязаннойНоменклатуры(Элемент.ТекущиеДанные.Ссылка);
		Если СвязаннаяНоменклатура.Количество() > 0 Тогда 
			Элементы.СписокНоменклатуры.ВыделенныеСтроки.Очистить();
			Элементы.СписокНоменклатуры.ТекущаяСтрока = СвязаннаяНоменклатура[0];
			Для Каждого ДанныеСопоставления Из СвязаннаяНоменклатура Цикл
				Элементы.СписокНоменклатуры.ВыделенныеСтроки.Добавить(ДанныеСопоставления);
			КонецЦикла;
		КонецЕсли;
	КонецЕсли;
	
	Если Элементы.СписокАлкогольнойПродукцииЕГАИС.ТекущийЭлемент = Элементы.СписокАлкогольнойПродукцииЕГАИСПроизводительИмпортерНеСопоставлены
		И Элементы.СписокАлкогольнойПродукцииЕГАИС.ТекущиеДанные.ПроизводительИмпортерНеСопоставлены Тогда
		
		МассивОрганизацийЕГАИСДляСопоставления = Новый Массив();
		МассивОрганизацийЕГАИСДляСопоставления.Добавить(Элементы.СписокАлкогольнойПродукцииЕГАИС.ТекущиеДанные.Производитель);
		МассивОрганизацийЕГАИСДляСопоставления.Добавить(Элементы.СписокАлкогольнойПродукцииЕГАИС.ТекущиеДанные.Импортер);
		
		ОткрытьФормуСопоставленияОрганизацииЕГАИС(МассивОрганизацийЕГАИСДляСопоставления);
		
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура СписокНоменклатурыВыбор(Элемент, ВыбраннаяСтрока, Поле, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	
	Если РежимСопоставленияИВыбора Тогда
		Возврат;
	ИначеЕсли РежимВыбора Тогда
		ВыбратьНоменклатуруКлиент();
	ИначеЕсли Элемент.ТекущиеДанные <> Неопределено И Элемент.ТекущиеДанные.ЕстьСоответствие Тогда
		СвязаннаяАлкогольнаяПродукция = ПолучитьСписокСвязаннойАлкогольнойПродукции(Элемент.ТекущиеДанные.Ссылка);
		
		Если СвязаннаяАлкогольнаяПродукция.Количество() > 0 Тогда
			Элементы.СписокАлкогольнойПродукцииЕГАИС.ВыделенныеСтроки.Очистить();
			
			Элементы.СписокАлкогольнойПродукцииЕГАИС.ТекущаяСтрока = СвязаннаяАлкогольнаяПродукция[0];
			
			Для Каждого ДанныеСопоставления Из СвязаннаяАлкогольнаяПродукция Цикл
				Элементы.СписокАлкогольнойПродукцииЕГАИС.ВыделенныеСтроки.Добавить(ДанныеСопоставления);
			КонецЦикла;
		КонецЕсли;
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура СписокАлкогольнойПродукцииЕГАИСПриАктивизацииСтроки(Элемент)
	
	Если ИспользоватьОтборПоСвойствам Тогда
		ПодключитьОбработчикОжидания("Подключаемый_ОбновитьОтборНоменклатуры", 0.1, Истина);
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура УстановитьСоответствие(Команда)
	
	ПроизводилисьДействия = Истина;
	
	Если РежимСопоставленияИВыбора Тогда
		
		Если Элементы.СписокНоменклатуры.ВыделенныеСтроки.Количество() = 0 Тогда 
			Возврат;
		КонецЕсли;
		Если Элементы.ГруппаСопоставитьПроизводителя.Видимость Или Элементы.ГруппаСопоставитьИмпортера.Видимость Тогда
			Если Элементы.ГруппаСопоставитьПроизводителя.Видимость И Не Элементы.ГруппаСопоставитьИмпортера.Видимость Тогда
				ОрганизацииЕГАИСДляСопоставления = АлкогольнаяПродукцияПроизводитель;
			ИначеЕсли Не Элементы.ГруппаСопоставитьПроизводителя.Видимость И Элементы.ГруппаСопоставитьИмпортера.Видимость Тогда
				ОрганизацииЕГАИСДляСопоставления = АлкогольнаяПродукцияИмпортер;
			Иначе
				ОрганизацииЕГАИСДляСопоставления = Новый Структура();
				ОрганизацииЕГАИСДляСопоставления.Вставить("Производитель", АлкогольнаяПродукцияПроизводитель);
				ОрганизацииЕГАИСДляСопоставления.Вставить("Импортер", АлкогольнаяПродукцияИмпортер);
			КонецЕсли;
			ПоказатьВопросСопоставленияОрганизацииЕГАИС(НСтр("ru = 'До сопоставления номенклатуры необходимо выполнить сопоставление организаций. Открыть форму сопоставления организаций?'")
				, ОрганизацииЕГАИСДляСопоставления);
			Возврат;
		КонецЕсли;
	Иначе
		
		Если Элементы.СписокАлкогольнойПродукцииЕГАИС.ВыделенныеСтроки.Количество() = 0 
			ИЛИ Элементы.СписокНоменклатуры.ВыделенныеСтроки.Количество() = 0 Тогда
			Возврат;
		КонецЕсли;
		
		ЗаполнитьНеСопоставленныеОрганизацииНаСервере();
		
		Если ТаблицаНеСопоставленныеПроизводительИмпортер.Количество() > 0 Тогда 
			ПоказатьВопросСопоставленияОрганизацииЕГАИС(НСтр("ru = 'До сопоставления номенклатуры необходимо выполнить сопоставление организаций. 
															|Открыть форму сопоставления организаций?'"));
			Возврат;
		КонецЕсли;
		
	КонецЕсли;
	
	Если РежимСопоставленияИВыбора Тогда
		ТекущаяАлкогольнаяПродукция = АлкогольнаяПродукция;
	Иначе
		ТекущаяАлкогольнаяПродукция = Элементы.СписокАлкогольнойПродукцииЕГАИС.ТекущиеДанные.Ссылка;
	КонецЕсли;
	
	ТекстОшибки = "";
	Если НЕ ПроверитьВозможностьУстановкиСоответствия(ТекстОшибки) Тогда
		ПоказатьПредупреждение(, ТекстОшибки);
		Возврат;
	КонецЕсли;
	
	АдресВХранилище = ЗаполнитьСпискиНеСопоставленныхНаСервере();
	
	ПараметрыФормы = Новый Структура;
	ПараметрыФормы.Вставить("АдресВХранилище", АдресВХранилище);
	
	ОповещениеПриЗавершении = Новый ОписаниеОповещения("УстановитьСоответствие_Завершение", ЭтотОбъект);
	ОткрытьФорму("Обработка.СопоставлениеНоменклатурыЕГАИСУНФ.Форма.ФормаСопоставленияНоменклатуры", ПараметрыФормы, ЭтотОбъект,,,, ОповещениеПриЗавершении);
	
КонецПроцедуры

&НаКлиенте
Процедура УстановитьСоответствие_Завершение(РезультатЗакрытия, ДополнительныеПараметры) Экспорт
	
	Если ТипЗнч(РезультатЗакрытия) = Тип("Структура")
		И РезультатЗакрытия.Свойство("СопоставлениеВыполнено")
		И РезультатЗакрытия.СопоставлениеВыполнено Тогда
		Если РежимСопоставленияИВыбора Тогда
			ВыбратьНоменклатуруКлиент(РезультатЗакрытия);
		Иначе
			Элементы.СписокАлкогольнойПродукцииЕГАИС.Обновить();
			Элементы.СписокНоменклатуры.Обновить();
		КонецЕсли;
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ОтменитьСоответствие(Команда)
	
	МассивЭлементов = Новый Массив;
	
	Для каждого АлкогольнаяПродукцияСписка Из Элементы.СписокАлкогольнойПродукцииЕГАИС.ВыделенныеСтроки Цикл
	
		ДанныеСтроки = Элементы.СписокАлкогольнойПродукцииЕГАИС.ДанныеСтроки(АлкогольнаяПродукцияСписка);
		Если НЕ ДанныеСтроки.НоменклатураСопоставлена = 0 Тогда
			МассивЭлементов.Добавить(ДанныеСтроки.Ссылка);
		КонецЕсли;
	
	КонецЦикла;
	
	Если МассивЭлементов.Количество() = 0 Тогда
		Возврат;
	КонецЕсли;
	
	АдресМассиваАлкогольнойПродукции = ПоместитьВоВременноеХранилище(МассивЭлементов, УникальныйИдентификатор);
	
	ОповещениеПриЗавершении = Новый ОписаниеОповещения("ОтменитьСоответствие_Завершение", ЭтотОбъект);
	ПоказатьВопрос(ОповещениеПриЗавершении, НСтр("ru = 'Отменить связь выбранной алкогольной продукции?'"), РежимДиалогаВопрос.ОКОтмена,, КодВозвратаДиалога.ОК);
	
КонецПроцедуры

&НаКлиенте
Процедура ОтменитьСоответствие_Завершение(РезультатВопроса, ДополнительныеПараметры) Экспорт
	
	Если РезультатВопроса <> КодВозвратаДиалога.ОК Тогда
		Возврат;
	КонецЕсли;
	
	ПодключитьОбработчикОжидания("Подключаемый_ОтменитьСоответствие", 0.1, Истина);
	
КонецПроцедуры

&НаКлиенте
Процедура ПоискПоШтрихкоду(Команда)
	
	ТекШтрихкод = "";
	
	ОбработкаЗавершения = Новый ОписаниеОповещения(
		"ПоискПоШтрихкодуЗавершение",
		ЭтотОбъект, 
		Новый Структура("ТекШтрихкод", ТекШтрихкод));

	#Если МобильныйКлиент Тогда
	ОткрытьФорму("ОбщаяФорма.ФормаПоискаПоШтрихкоду", , , , , , ОбработкаЗавершения);
	#Иначе
	ПоказатьВводЗначения(ОбработкаЗавершения, ТекШтрихкод, НСтр("ru = 'Введите штрихкод'"));
	#КонецЕсли
	
КонецПроцедуры

&НаКлиенте
Процедура СоздатьНоменклатуру(Команда)
	
	ПроизводилисьДействия = Истина;
	
	МассивЭлементов = Новый Массив();
	
	Если РежимСопоставленияИВыбора Тогда
		МассивЭлементов.Добавить(АлкогольнаяПродукция);
	Иначе
		ВыделенныеСтроки = Элементы.СписокАлкогольнойПродукцииЕГАИС.ВыделенныеСтроки;
		
		Для Каждого ИдентификаторСтроки Из ВыделенныеСтроки Цикл
			ДанныеСтроки = Элементы.СписокАлкогольнойПродукцииЕГАИС.ДанныеСтроки(ИдентификаторСтроки);
			Если ДанныеСтроки <> Неопределено Тогда
				МассивЭлементов.Добавить(ДанныеСтроки.Ссылка);
			КонецЕсли;
		КонецЦикла;
	КонецЕсли;
	
	Если МассивЭлементов.Количество() = 0 Тогда
		Возврат;
	КонецЕсли;
	
	ОповещениеПриЗавершении = Новый ОписаниеОповещения("СоздатьНоменклатуру_Подтверждение", ЭтотОбъект, МассивЭлементов);
	ПоказатьВопрос(ОповещениеПриЗавершении, НСтр("ru = 'Создать номенклатуру по выделенным строкам алкогольной продукции?'"), РежимДиалогаВопрос.ОКОтмена);
	
КонецПроцедуры

&НаКлиенте
Процедура СоздатьНоменклатуру_Подтверждение(РезультатВопроса, ВыделенныеСтроки) Экспорт
	
	Если РезультатВопроса <> КодВозвратаДиалога.ОК Тогда
		Возврат;
	КонецЕсли;
	
	АдресСпискаАлкогольнойПродукции = ПоместитьВоВременноеХранилище(ВыделенныеСтроки, УникальныйИдентификатор);
	
	ПараметрыФормы = Новый Структура;
	ПараметрыФормы.Вставить("АдресСпискаАлкогольнойПродукции", АдресСпискаАлкогольнойПродукции);
	
	ОповещениеПриЗавершении = Новый ОписаниеОповещения("СоздатьНоменклатуру_Завершение", ЭтотОбъект);
	ОткрытьФорму("Обработка.СопоставлениеНоменклатурыЕГАИСУНФ.Форма.ФормаСозданияНоменклатуры", ПараметрыФормы, ЭтотОбъект,,,, ОповещениеПриЗавершении);
	
КонецПроцедуры

&НаКлиенте
Процедура СоздатьНоменклатуру_Завершение(ПараметрыСозданияНоменклатуры, ДополнительныеПараметры) Экспорт
	
	Если ТипЗнч(ПараметрыСозданияНоменклатуры) <> Тип("Структура") Тогда
		Возврат;
	КонецЕсли;
	
	АдресПараметровСозданияНоменклатуры = ПоместитьВоВременноеХранилище(ПараметрыСозданияНоменклатуры, УникальныйИдентификатор);
	
	ПодключитьОбработчикОжидания("Подключаемый_СоздатьНоменклатуру", 0.1, Истина);
	
КонецПроцедуры

&НаКлиенте
Процедура ВыбратьНоменклатуру(Команда)
	
	ВыбратьНоменклатуруКлиент();
	
КонецПроцедуры

&НаКлиенте
Процедура СопоставитьИВыбрать(Команда)
	
	Если Элементы.ГруппаСопоставитьПроизводителя.Видимость Или Элементы.ГруппаСопоставитьИмпортера.Видимость Тогда
		Если Элементы.ГруппаСопоставитьПроизводителя.Видимость И Не Элементы.ГруппаСопоставитьИмпортера.Видимость Тогда
			ОрганизацииЕГАИСДляСопоставления = АлкогольнаяПродукцияПроизводитель;
		ИначеЕсли Не Элементы.ГруппаСопоставитьПроизводителя.Видимость И Элементы.ГруппаСопоставитьИмпортера.Видимость Тогда
			ОрганизацииЕГАИСДляСопоставления = АлкогольнаяПродукцияИмпортер;
		Иначе
			ОрганизацииЕГАИСДляСопоставления = Новый Структура();
			ОрганизацииЕГАИСДляСопоставления.Вставить("Производитель", АлкогольнаяПродукцияПроизводитель);
			ОрганизацииЕГАИСДляСопоставления.Вставить("Импортер", АлкогольнаяПродукцияИмпортер);
		КонецЕсли;
		ПоказатьВопросСопоставленияОрганизацииЕГАИС(НСтр("ru = 'До сопоставления номенклатуры необходимо выполнить сопоставление организаций. Открыть форму сопоставления организаций?'")
			, ОрганизацииЕГАИСДляСопоставления);
		Возврат;
	КонецЕсли;
	
	УстановитьСоответствие(Неопределено);
	
КонецПроцедуры

&НаКлиенте
Процедура ОткрытьАлкогольнуюПродукцию(Команда)
	
	ТекущиеДанные = Элементы.СписокАлкогольнойПродукцииЕГАИС.ТекущиеДанные;
	Если ТекущиеДанные <> Неопределено Тогда
		ПараметрыФормы = Новый Структура;
		ПараметрыФормы.Вставить("Ключ", ТекущиеДанные.Ссылка);
		
		ОткрытьФорму("Справочник.КлассификаторАлкогольнойПродукцииЕГАИС.ФормаОбъекта", ПараметрыФормы, ЭтотОбъект);
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаКлиенте
Процедура Подключаемый_СоздатьНоменклатуру()
	
	СозданнаяНоменклатура = СоздатьНоменклатуруНаСервере(АдресПараметровСозданияНоменклатуры);
	
	Элементы.СписокАлкогольнойПродукцииЕГАИС.Обновить();
	Элементы.СписокНоменклатуры.Обновить();
	
	Элементы.СписокНоменклатуры.ВыделенныеСтроки.Очистить();
	
	Номенклатура = Неопределено;
	
	Для каждого Номенклатура Из СозданнаяНоменклатура Цикл
		Элементы.СписокНоменклатуры.ВыделенныеСтроки.Добавить(Номенклатура);
	КонецЦикла;
	
	Если РежимВыбора Или РежимСопоставленияИВыбора И ЗначениеЗаполнено(Номенклатура) Тогда
		Закрыть(Номенклатура);
		Возврат;
	КонецЕсли;
	
	Если СозданнаяНоменклатура.Количество() = 1 Тогда
		ТекстСообщения = НСтр("ru = 'Создан элемент номенклатуры %Наименование%.'");
		ТекстСообщения = СтрЗаменить(ТекстСообщения, "%Наименование%", СокрЛП(СозданнаяНоменклатура[0]));
		ОбщегоНазначенияКлиент.СообщитьПользователю(ТекстСообщения, СозданнаяНоменклатура[0]);
	Иначе
		ТекстСообщения = НСтр("ru = 'Создано %Количество% элементов номенклатуры.'");
		ТекстСообщения = СтрЗаменить(ТекстСообщения, "%Количество%", СозданнаяНоменклатура.Количество());
		ОбщегоНазначенияКлиент.СообщитьПользователю(ТекстСообщения);
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура Подключаемый_ОтменитьСоответствие()
	
	ОтменитьСоответствиеНаСервере(ПолучитьИзВременногоХранилища(АдресМассиваАлкогольнойПродукции));
	
	Элементы.СписокАлкогольнойПродукцииЕГАИС.Обновить();
	Элементы.СписокНоменклатуры.Обновить();
	
КонецПроцедуры

&НаСервереБезКонтекста
Функция СоздатьНоменклатуруНаСервере(АдресПараметровСозданияНоменклатуры)
	
	СозданнаяНоменклатура = Новый Массив;
	
	ПараметрыСозданияНоменклатуры = ПолучитьИзВременногоХранилища(АдресПараметровСозданияНоменклатуры);
	
	УстановитьПривилегированныйРежим(Истина);
	
	ФОИспользоватьПодсистемуПроизводство = ПолучитьФункциональнуюОпцию("ИспользоватьПодсистемуПроизводство");
	Для каждого АлкогольнаяПродукцияСписка Из ПараметрыСозданияНоменклатуры.МассивЭлементов Цикл
		
		НоменклатураОбъект = Справочники.Номенклатура.СоздатьЭлемент();
		НоменклатураОбъект.Заполнить(ПараметрыСозданияНоменклатуры);
		
		// Заполнение по категории.
		КатегорииНоменклатурыСервер.ЗаполнитьСвойстваНоменклатурыПоКатегории(НоменклатураОбъект, Истина, Истина);
		
		// Заполнение по алкогольной продукции.
		РеквизитыАлкогольнойПродукции = ИнтеграцияЕГАИСВызовСервера.РеквизитыАлкогольнойПродукцииДляСозданияНоменклатуры(
			АлкогольнаяПродукцияСписка);
		ИнтеграцияЕГАИСУНф.ЗаполнитьНоменклатуруПоданнымАлкогольнойПродукции(НоменклатураОбъект, РеквизитыАлкогольнойПродукции);
		
		НоменклатураОбъект.ТипНоменклатуры      = Перечисления.ТипыНоменклатуры.Запас;
		НоменклатураОбъект.АлкогольнаяПродукция = Истина;
		
		Если ЗначениеЗаполнено(НоменклатураОбъект.НаборЕдиницИзмерения) Тогда
			НоменклатураОбъект.ИспользоватьНаборыЕдиницИзмерения = Истина;
		КонецЕсли;
		Если НЕ ЗначениеЗаполнено(НоменклатураОбъект.СчетУчетаЗапасов) Тогда
			НоменклатураОбъект.СчетУчетаЗапасов = Справочники.Номенклатура.СчетУчетаЗапасов();
		КонецЕсли;
		Если НЕ ЗначениеЗаполнено(НоменклатураОбъект.СчетУчетаЗатрат) Тогда
			Если ФОИспользоватьПодсистемуПроизводство Тогда
				НоменклатураОбъект.СчетУчетаЗатрат = ПредопределенноеЗначение("ПланСчетов.Управленческий.НезавершенноеПроизводство");
			Иначе
				НоменклатураОбъект.СчетУчетаЗатрат = ПредопределенноеЗначение("ПланСчетов.Управленческий.КоммерческиеРасходы");
			КонецЕсли;
		КонецЕсли;
		
		НоменклатураОбъект.Записать();
		
		Запись = РегистрыСведений.СоответствиеНоменклатурыЕГАИС.СоздатьМенеджерЗаписи();
		Запись.Номенклатура = НоменклатураОбъект.Ссылка;
		Запись.АлкогольнаяПродукция = АлкогольнаяПродукцияСписка;
		Запись.Порядок = 1;
		Запись.Записать();
		
		СозданнаяНоменклатура.Добавить(НоменклатураОбъект.Ссылка);
		
	КонецЦикла;
	
	Возврат СозданнаяНоменклатура;
	
КонецФункции

&НаСервереБезКонтекста
Процедура ОтменитьСоответствиеНаСервере(МассивАлкогольнойПродукции)
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("АлкогольнаяПродукция", МассивАлкогольнойПродукции);
	
	Запрос.Текст =
	"ВЫБРАТЬ
	|	СоответствиеНоменклатурыЕГАИС.Номенклатура КАК Номенклатура,
	|	СоответствиеНоменклатурыЕГАИС.Характеристика КАК Характеристика,
	|	СоответствиеНоменклатурыЕГАИС.АлкогольнаяПродукция КАК АлкогольнаяПродукция,
	|	СоответствиеНоменклатурыЕГАИС.Справка2 КАК Справка2
	|ИЗ
	|	РегистрСведений.СоответствиеНоменклатурыЕГАИС КАК СоответствиеНоменклатурыЕГАИС
	|ГДЕ
	|	СоответствиеНоменклатурыЕГАИС.АлкогольнаяПродукция В(&АлкогольнаяПродукция)";
	
	Выборка = Запрос.Выполнить().Выбрать();
	Пока Выборка.Следующий() Цикл
		Запись = РегистрыСведений.СоответствиеНоменклатурыЕГАИС.СоздатьМенеджерЗаписи();
		ЗаполнитьЗначенияСвойств(Запись, Выборка);
		Запись.Прочитать();
		
		Если Запись.Выбран() Тогда
			Запись.Удалить();
		КонецЕсли;
		
		Запись.Записать(Истина);
		
	КонецЦикла;
	
КонецПроцедуры

&НаСервере
Функция ПроверитьВозможностьУстановкиСоответствия(ТекстОшибки)
	
	Для Каждого СтрокаТаблицы Из Элементы.СписокНоменклатуры.ВыделенныеСтроки Цикл
		Если СтрокаТаблицы.ЭтоГруппа Тогда
			ТекстОшибки = НСтр("ru = 'Связка алкогольной продукции с группой номенклатуры невозможна.'");
			Возврат Ложь;
		КонецЕсли;
	КонецЦикла;
	
	Возврат Истина;
	
КонецФункции

&НаСервереБезКонтекста
Функция ПолучитьСписокСвязаннойАлкогольнойПродукции(Номенклатура)
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("Номенклатура", Номенклатура);
	
	Запрос.Текст =
	"ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	СоответствиеНоменклатурыЕГАИС.АлкогольнаяПродукция
	|ИЗ
	|	РегистрСведений.СоответствиеНоменклатурыЕГАИС КАК СоответствиеНоменклатурыЕГАИС
	|ГДЕ
	|	СоответствиеНоменклатурыЕГАИС.Номенклатура = &Номенклатура";
	
	Результат = Новый Массив;
	
	Выборка = Запрос.Выполнить().Выбрать();
	Пока Выборка.Следующий() Цикл
		Результат.Добавить(Выборка.АлкогольнаяПродукция);
	КонецЦикла;
	
	Возврат Результат;
	
КонецФункции

&НаСервереБезКонтекста
Функция ПолучитьСписокСвязаннойНоменклатуры(АлкогольнаяПродукция)
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("АлкогольнаяПродукция", АлкогольнаяПродукция);
	
	Запрос.Текст =
	"ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	СоответствиеНоменклатурыЕГАИС.Номенклатура КАК Номенклатура
	|ИЗ
	|	РегистрСведений.СоответствиеНоменклатурыЕГАИС КАК СоответствиеНоменклатурыЕГАИС
	|ГДЕ
	|	СоответствиеНоменклатурыЕГАИС.АлкогольнаяПродукция = &АлкогольнаяПродукция";
	
	Результат = Новый Массив;
	
	Выборка = Запрос.Выполнить().Выбрать();
	Пока Выборка.Следующий() Цикл
		Результат.Добавить(Выборка.Номенклатура);
	КонецЦикла;
	
	Возврат Результат;
	
КонецФункции

&НаСервере
Процедура УстановитьДополнительныеКолонкиНоменклатуры()

	Элементы.СписокНоменклатурыКод.Видимость = Истина;
	Элементы.СписокНоменклатурыАртикул.Видимость = Истина;

КонецПроцедуры

&НаКлиенте
Процедура Подключаемый_ОбновитьОтборНоменклатуры()
	
	УстановитьОтборНоменклатурыПоСвойствамАлкогольнойПродукции();
	
	Если Не РежимСопоставленияИВыбора Тогда
		ЭтотОбъект.ТекущийЭлемент = Элементы.СписокАлкогольнойПродукцииЕГАИС;
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура УстановитьОтборНоменклатурыПоСвойствамАлкогольнойПродукции()
	
	Если РежимСопоставленияИВыбора Тогда
		ТекущиеДанные = Новый Структура();
		ТекущиеДанные.Вставить("Объем", АлкогольнаяПродукцияОбъем);
		ТекущиеДанные.Вставить("Крепость", АлкогольнаяПродукцияКрепость);
		ТекущиеДанные.Вставить("ВидПродукции", АлкогольнаяПродукцияВидПродукции);
		ТекущиеДанные.Вставить("Производитель", АлкогольнаяПродукцияПроизводитель);
		ТекущиеДанные.Вставить("Импортер", АлкогольнаяПродукцияИмпортер);
	Иначе
		ТекущиеДанные = Элементы.СписокАлкогольнойПродукцииЕГАИС.ТекущиеДанные;
	КонецЕсли;
	
	ИспользованиеОтборов = ИспользоватьОтборПоСвойствам И ТекущиеДанные <> Неопределено;
	
	ГруппаОтбора = СоздатьГруппуЭлементовОтбора(
		СписокНоменклатуры.Отбор.Элементы,
		"ОтборПоСвойствамАлкогольнойПродукции",
		ТипГруппыЭлементовОтбораКомпоновкиДанных.ГруппаИ);
		
	ИзменитьЭлементОтбораГруппыСписка(
		ГруппаОтбора,
		"ОбъемДАЛ",
		?(ТекущиеДанные = Неопределено, Неопределено, ТекущиеДанные.Объем / 10),
		ИспользованиеОтборов И СвойстваОтбораНоменклатуры.НайтиПоЗначению("Объем") <> Неопределено И ТекущиеДанные.Объем <> 0,
		ВидСравненияКомпоновкиДанных.Равно);
		
	ИзменитьЭлементОтбораГруппыСписка(
		ГруппаОтбора,
		"Крепость",
		?(ТекущиеДанные = Неопределено, Неопределено, ТекущиеДанные.Крепость),
		ИспользованиеОтборов И СвойстваОтбораНоменклатуры.НайтиПоЗначению("Крепость") <> Неопределено И ТекущиеДанные.Крепость <> 0,
		ВидСравненияКомпоновкиДанных.Равно);
		
	ИзменитьЭлементОтбораГруппыСписка(
		ГруппаОтбора,
		"ВидАлкогольнойПродукции",
		?(ТекущиеДанные = Неопределено, Неопределено, ТекущиеДанные.ВидПродукции),
		ИспользованиеОтборов И СвойстваОтбораНоменклатуры.НайтиПоЗначению("ВидПродукции") <> Неопределено И ЗначениеЗаполнено(ТекущиеДанные.ВидПродукции),
		ВидСравненияКомпоновкиДанных.Равно);
		
	Производитель = ?(ТекущиеДанные = Неопределено, Неопределено, ПолучитьКонтрагентаПоСоответствию(ТекущиеДанные.Производитель));
	
	ИзменитьЭлементОтбораГруппыСписка(
		ГруппаОтбора,
		"Производитель",
		?(ТекущиеДанные = Неопределено, Неопределено, Производитель),
		ИспользованиеОтборов И СвойстваОтбораНоменклатуры.НайтиПоЗначению("Производитель") <> Неопределено И ЗначениеЗаполнено(Производитель) И ЗначениеЗаполнено(ТекущиеДанные.Импортер),
		ВидСравненияКомпоновкиДанных.Равно);
		
	ИзменитьЭлементОтбораГруппыСписка(
		ГруппаОтбора,
		"ПроизводительИмпортерАлкогольнойПродукции",
		?(ТекущиеДанные = Неопределено, Неопределено, Производитель),
		ИспользованиеОтборов И СвойстваОтбораНоменклатуры.НайтиПоЗначению("Производитель") <> Неопределено И ЗначениеЗаполнено(Производитель) И НЕ ЗначениеЗаполнено(ТекущиеДанные.Импортер),
		ВидСравненияКомпоновкиДанных.Равно);
		
	Импортер = ?(ТекущиеДанные = Неопределено, Неопределено, ПолучитьКонтрагентаПоСоответствию(ТекущиеДанные.Импортер));
	
	ИзменитьЭлементОтбораГруппыСписка(
		ГруппаОтбора,
		"ПроизводительИмпортерАлкогольнойПродукции",
		?(ТекущиеДанные = Неопределено, Неопределено, Импортер),
		ИспользованиеОтборов И СвойстваОтбораНоменклатуры.НайтиПоЗначению("Импортер") <> Неопределено И ЗначениеЗаполнено(Импортер),
		ВидСравненияКомпоновкиДанных.Равно);
	
КонецПроцедуры

&НаКлиентеНаСервереБезКонтекста
Процедура УстановитьОтборПоСоответствиюАлкогольнаяПродукция(Форма)
	
	ИзменитьЭлементОтбораСписка(
			Форма.СписокАлкогольнойПродукцииЕГАИС,
			"НоменклатураСопоставлена",
			0,
			НЕ Форма.ВариантОтбораСоответствийАлкогольнаяПродукция = "Все", 
			?(Форма.ВариантОтбораСоответствийАлкогольнаяПродукция = "Связанные", ВидСравненияКомпоновкиДанных.НеРавно, ВидСравненияКомпоновкиДанных.Равно));
	
КонецПроцедуры

&НаКлиентеНаСервереБезКонтекста
Процедура УстановитьОтборПоСоответствиюНоменклатура(Форма)
	
	ИзменитьЭлементОтбораСписка(
			Форма.СписокНоменклатуры,
			"ЕстьСоответствие",
			Истина,
			НЕ Форма.ВариантОтбораСоответствийНоменклатура = "Все", 
			?(Форма.ВариантОтбораСоответствийНоменклатура = "Связанные", ВидСравненияКомпоновкиДанных.Равно, ВидСравненияКомпоновкиДанных.НеРавно));
	
КонецПроцедуры

&НаСервереБезКонтекста
Функция ПолучитьКонтрагентаПоСоответствию(ОрганизацияЕГАИС)
	
	Если ОрганизацияЕГАИС.Пустая() Тогда
		Возврат Справочники.Контрагенты.ПустаяСсылка();
	КонецЕсли;
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("ОрганизацияЕГАИС", ОрганизацияЕГАИС);
	
	Запрос.Текст =
	"ВЫБРАТЬ
	|	КлассификаторОрганизацийЕГАИС.Контрагент
	|ИЗ
	|	Справочник.КлассификаторОрганизацийЕГАИС КАК КлассификаторОрганизацийЕГАИС
	|ГДЕ
	|	КлассификаторОрганизацийЕГАИС.Ссылка = &ОрганизацияЕГАИС
	|	И КлассификаторОрганизацийЕГАИС.Сопоставлено";
	
	РезультатЗапроса = Запрос.Выполнить();
	Если РезультатЗапроса.Пустой() Тогда
		Возврат Неопределено;
	Иначе
		Возврат РезультатЗапроса.Выгрузить()[0].Контрагент;
	КонецЕсли;
	
КонецФункции

&НаКлиенте
Процедура ВыбратьНоменклатуруКлиент(РезультатВыбора = Неопределено)
	
	Если РезультатВыбора = Неопределено Тогда
		
		ТекущиеДанныеНоменклатура = Элементы.СписокНоменклатуры.ТекущиеДанные;
		
		Если ТекущиеДанныеНоменклатура = Неопределено Тогда
			Закрыть();
		Иначе
			Закрыть(ТекущиеДанныеНоменклатура.Ссылка);
		КонецЕсли;
		
	Иначе
		Закрыть(РезультатВыбора);
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура ВосстановитьНастройкиНаСервере(Знач Настройки)
	
	НастройкиПоУмолчанию = Новый Структура;
	
	Если НЕ ЗначениеЗаполнено(Настройки.Получить("ВариантОтбораСоответствийАлкогольнаяПродукция")) Тогда
		Настройки.Вставить("ВариантОтбораСоответствийАлкогольнаяПродукция", "Все");
	КонецЕсли;
	
	Если НЕ ЗначениеЗаполнено(Настройки.Получить("ВариантОтбораСоответствийНоменклатура")) Тогда
		Настройки.Вставить("ВариантОтбораСоответствийНоменклатура", "Все");
	КонецЕсли;
	
	Если Настройки.Получить("ОтборПоОбъему") = Истина Тогда
		ЭлементСписка = СвойстваОтбораНоменклатуры.НайтиПоЗначению("Объем");
		Если ЭлементСписка = Неопределено Тогда
			СвойстваОтбораНоменклатуры.Добавить("Объем", НСтр("ru='Объем'"));
		КонецЕсли;
	КонецЕсли;
	
	Если Настройки.Получить("ОтборПоКрепости") = Истина Тогда
		ЭлементСписка = СвойстваОтбораНоменклатуры.НайтиПоЗначению("Крепость");
		Если ЭлементСписка = Неопределено Тогда
			СвойстваОтбораНоменклатуры.Добавить("Крепость", НСтр("ru='Крепость'"));
		КонецЕсли;
	КонецЕсли;
	
	Если Настройки.Получить("ОтборПоВидуПродукции") = Истина Тогда
		ЭлементСписка = СвойстваОтбораНоменклатуры.НайтиПоЗначению("ВидПродукции");
		Если ЭлементСписка = Неопределено Тогда
			СвойстваОтбораНоменклатуры.Добавить("ВидПродукции", НСтр("ru='Вид продукции'"));
		КонецЕсли;
	КонецЕсли;
	
	Если Настройки.Получить("ОтборПоПроизводителю") = Истина Тогда
		ЭлементСписка = СвойстваОтбораНоменклатуры.НайтиПоЗначению("Производитель");
		Если ЭлементСписка = Неопределено Тогда
			СвойстваОтбораНоменклатуры.Добавить("Производитель", НСтр("ru='Производитель'"));
		КонецЕсли;
	КонецЕсли;
	
	Если Настройки.Получить("ОтборПоИмпортеру") = Истина Тогда
		ЭлементСписка = СвойстваОтбораНоменклатуры.НайтиПоЗначению("Импортер");
		Если ЭлементСписка = Неопределено Тогда
			СвойстваОтбораНоменклатуры.Добавить("Импортер", НСтр("ru='Импортер'"));
		КонецЕсли;
	КонецЕсли;
	
	Для Каждого Настройка Из Настройки Цикл
		НастройкиПоУмолчанию.Вставить(Настройка.Ключ, Настройка.Значение);
	КонецЦикла;
	
	ЗаполнитьЗначенияСвойств(ЭтотОбъект, НастройкиПоУмолчанию);
	
	УстановитьОтборПоСоответствиюАлкогольнаяПродукция(ЭтотОбъект);
	УстановитьОтборПоСоответствиюНоменклатура(ЭтотОбъект);
	
КонецПроцедуры

&НаКлиенте
Процедура ОбновитьИнформациюОСопоставленииКонтрагентов()
	
	ОбновитьИнформациюОСопоставленииКонтрагентовНаСервере()
	
КонецПроцедуры

&НаСервере
Процедура ОбновитьИнформациюОСопоставленииКонтрагентовНаСервере()
	
	Если ЗначениеЗаполнено(АлкогольнаяПродукцияПроизводитель) Тогда
		ВидимостьГруппыСопоставитьПроизводителя = НЕ ОбщегоНазначения.ЗначениеРеквизитаОбъекта(АлкогольнаяПродукцияПроизводитель, "Сопоставлено");
	Иначе
		ВидимостьГруппыСопоставитьПроизводителя = Ложь;
	КонецЕсли;
	
	Если ЗначениеЗаполнено(АлкогольнаяПродукцияИмпортер) Тогда
		ВидимостьГруппыСопоставитьИмпортера = НЕ ОбщегоНазначения.ЗначениеРеквизитаОбъекта(АлкогольнаяПродукцияИмпортер, "Сопоставлено");
	Иначе
		ВидимостьГруппыСопоставитьИмпортера = Ложь;
	КонецЕсли;
	
	Элементы.ГруппаСопоставитьПроизводителя.Видимость = ВидимостьГруппыСопоставитьПроизводителя;
	Элементы.ГруппаСопоставитьИмпортера.Видимость = ВидимостьГруппыСопоставитьИмпортера;
	
КонецПроцедуры

&НаКлиенте
Процедура СопоставитьИмпортера(Команда)
	
	ОткрытьФормуСопоставленияОрганизацииЕГАИС(АлкогольнаяПродукцияИмпортер);
	
КонецПроцедуры

&НаКлиенте
Процедура СопоставитьПроизводителя(Команда)
	
	ОткрытьФормуСопоставленияОрганизацииЕГАИС(АлкогольнаяПродукцияПроизводитель);
	
КонецПроцедуры

&НаКлиенте
Процедура ПоказатьВопросСопоставленияОрганизацииЕГАИС(ТекстВопроса, ДанныеСопоставления = Неопределено)
	
	Если ТипЗнч(ДанныеСопоставления) = Тип("СправочникСсылка.КлассификаторОрганизацийЕГАИС") Тогда
		ОрганизацииЕГАИС = ДанныеСопоставления;
	Иначе
		ОрганизацииЕГАИС = Новый Массив();
		Для Каждого СтрокаТаблицы Из ТаблицаНеСопоставленныеПроизводительИмпортер Цикл 
			ОрганизацииЕГАИС.Добавить(СтрокаТаблицы.Производитель);
			ОрганизацииЕГАИС.Добавить(СтрокаТаблицы.Импортер);
		КонецЦикла;
	КонецЕсли;
	
	ПараметрыВопроса = Новый Структура();
	ПараметрыВопроса.Вставить("ОрганизацииЕГАИС", ОрганизацииЕГАИС);
	
	ОповещениеОЗакрытии = Новый ОписаниеОповещения("ПоказатьВопросСопоставленияОрганизацииЕГАИСЗавершение", ЭтотОбъект, ПараметрыВопроса);
	
	ПоказатьВопрос(ОповещениеОЗакрытии, ТекстВопроса, РежимДиалогаВопрос.ДаНет);
	
КонецПроцедуры

&НаКлиенте
Процедура ПоказатьВопросСопоставленияОрганизацииЕГАИСЗавершение(Результат, ДополнительныеПараметры) Экспорт
	
	Если Результат = КодВозвратаДиалога.Да Тогда
		ОткрытьФормуСопоставленияОрганизацииЕГАИС(ДополнительныеПараметры.ОрганизацииЕГАИС);
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ОткрытьФормуСопоставленияОрганизацииЕГАИС(ОрганизацииЕГАИС)
	
	ОповещениеОЗакрытии = Новый ОписаниеОповещения("ОткрытьФормуСопоставленияОповещениеОЗакрытии", ЭтотОбъект);
	
	Если ТипЗнч(ОрганизацииЕГАИС) = Тип("СправочникСсылка.КлассификаторОрганизацийЕГАИС") Тогда
		ПоказатьЗначение(ОповещениеОЗакрытии, ОрганизацииЕГАИС);
	Иначе
		ОткрытьФорму("Справочник.КлассификаторОрганизацийЕГАИС.ФормаСписка", ,ЭтотОбъект,,,, ОповещениеОЗакрытии, РежимОткрытияОкнаФормы.БлокироватьОкноВладельца);
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ОткрытьФормуСопоставленияОповещениеОЗакрытии(ПараметрЗакрытия, ДополнительныеПараметры) Экспорт
	
	Если РежимСопоставленияИВыбора Тогда
		ОбновитьИнформациюОСопоставленииКонтрагентов();
	Иначе
		Элементы.СписокАлкогольнойПродукцииЕГАИС.Обновить();
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ОтметкаСвойствОтбора_Завершение(СписокСвойствСПометками, ДополнительныеПараметры) Экспорт
	
	Если СписокСвойствСПометками = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	СвойстваОтбораНоменклатуры.Очистить();
	
	Для Каждого ЭлементСписка Из СписокСвойствСПометками Цикл
		Если ЭлементСписка.Пометка Тогда
			СвойстваОтбораНоменклатуры.Добавить(ЭлементСписка.Значение, ЭлементСписка.Представление);
		КонецЕсли;
	КонецЦикла;
	
	ПодключитьОбработчикОжидания("Подключаемый_ОбновитьОтборНоменклатуры", 0.1, Истина);
	
КонецПроцедуры

&НаСервере
Процедура ЗаполнитьНеСопоставленныеОрганизацииНаСервере()
	
	ТаблицаНеСопоставленныеПроизводительИмпортер.Очистить();
	
	Для Каждого ВыделеннаяСтрока Из Элементы.СписокАлкогольнойПродукцииЕГАИС.ВыделенныеСтроки Цикл 
		
		Если ВыделеннаяСтрока.Производитель <> Справочники.КлассификаторОрганизацийЕГАИС.ПустаяСсылка()
					И НЕ ВыделеннаяСтрока.Производитель.Сопоставлено
				ИЛИ ВыделеннаяСтрока.Импортер <> Справочники.КлассификаторОрганизацийЕГАИС.ПустаяСсылка()
					И НЕ ВыделеннаяСтрока.Импортер.Сопоставлено Тогда 
					
			НоваяСтрока = ТаблицаНеСопоставленныеПроизводительИмпортер.Добавить();
			ЗаполнитьЗначенияСвойств(НоваяСтрока, ВыделеннаяСтрока, "Производитель, Импортер");
					
		КонецЕсли;
	КонецЦикла;
	
КонецПроцедуры

&НаСервере
Функция ЗаполнитьСпискиНеСопоставленныхНаСервере()
	
	ТаблицаНеСопоставленнойАлкогольнойПродукции.Очистить();
	ТаблицаНеСопоставленнойНоменклатуры.Очистить();
	
	СтруктураРезультат = Новый Структура;
	
	Для Каждого Номенклатура Из Элементы.СписокНоменклатуры.ВыделенныеСтроки Цикл 
		НоваяЗапись = ТаблицаНеСопоставленнойНоменклатуры.Добавить();
		НоваяЗапись.Номенклатура = Номенклатура;
	КонецЦикла;
	
	Для Каждого АлкогольнаяПродукция Из Элементы.СписокАлкогольнойПродукцииЕГАИС.ВыделенныеСтроки Цикл
		НоваяЗапись = ТаблицаНеСопоставленнойАлкогольнойПродукции.Добавить();
		НоваяЗапись.АлкогольнаяПродукция = АлкогольнаяПродукция;
	КонецЦикла;
	
	ТаблицаАлкогольнаяПродукция = ТаблицаНеСопоставленнойАлкогольнойПродукции.Выгрузить();
	ТаблицаНоменклатура = ТаблицаНеСопоставленнойНоменклатуры.Выгрузить();
	
	ТаблицаАлкогольнаяПродукция.Свернуть("АлкогольнаяПродукция");
	ТаблицаНоменклатура.Свернуть("Номенклатура");
	
	СтруктураРезультат.Вставить("АлкогольнаяПродукция", ТаблицаАлкогольнаяПродукция);
	СтруктураРезультат.Вставить("Номенклатура", ТаблицаНоменклатура);
		
	Адрес = ПоместитьВоВременноеХранилище(СтруктураРезультат, УникальныйИдентификатор);
	
	Возврат Адрес;
	
КонецФункции

&НаСервере
Функция ЗаполнитьСопоставленныеТовары(УникальныйИдентификатор)
	
	НачатьТранзакцию();
	
	Попытка
		
		ДокументОбъект = ТТН.ПолучитьОбъект();
		ДокументОбъект.Заблокировать();
		ДокументЗаблокирован = Истина;
		
		СтруктураОтбора = Новый Структура;
		СтруктураОтбора.Вставить("Номенклатура", Справочники.Номенклатура.ПустаяСсылка());
		
		МассивСтрокДляВыгрузки = ДокументОбъект.Товары.НайтиСтроки(СтруктураОтбора);
		
		ТаблицаСопоставления = ДокументОбъект.Товары.Выгрузить(МассивСтрокДляВыгрузки,"АлкогольнаяПродукция, ИдентификаторУпаковки, НомерСтроки, Серия");
		ИнтеграцияЕГАИС.ЗаполнитьСопоставленнуюПродукцию(ТаблицаСопоставления);
		
		Для Каждого ТекСтрока Из ТаблицаСопоставления Цикл
			
			ПараметрыОтбораСтрокНакладной = Новый Структура;
			ПараметрыОтбораСтрокНакладной.Вставить("АлкогольнаяПродукция",  ТекСтрока.АлкогольнаяПродукция);
			ПараметрыОтбораСтрокНакладной.Вставить("ИдентификаторУпаковки", ТекСтрока.ИдентификаторУпаковки);
			
			Для Каждого СтрокаДокумента Из ДокументОбъект.Товары.НайтиСтроки(ПараметрыОтбораСтрокНакладной) Цикл
				СтрокаДокумента.Номенклатура  = ТекСтрока.Номенклатура;
				СтрокаДокумента.Характеристика = ТекСтрока.Характеристика;
			КонецЦикла;
			
		КонецЦикла;
		
		Если ДокументОбъект <> Неопределено И Не РежимСопоставленияПоНакладной Тогда
			ДокументОбъект.Записать(РежимЗаписиДокумента.Проведение);
		КонецЕсли; 
		
		ЗафиксироватьТранзакцию();
		
	Исключение
		
		ОтменитьТранзакцию();
		
		ОбщегоНазначения.СообщитьПользователю(
		КраткоеПредставлениеОшибки(ИнформацияОбОшибке()));
		
		ИнтеграцияЕГАИСВызовСервера.ЗаписатьОшибкуВЖурналРегистрации(ПодробноеПредставлениеОшибки(ИнформацияОбОшибке()));
		
	КонецПопытки;
	
	Если ТаблицаСопоставления = Неопределено Тогда 
		АдресВоВременномХранилище = Неопределено;
	Иначе 
		АдресВоВременномХранилище = ПоместитьВоВременноеХранилище(ТаблицаСопоставления, УникальныйИдентификатор);
	КонецЕсли;
	
	Возврат АдресВоВременномХранилище;
	
КонецФункции

&НаКлиенте
Процедура ПередЗакрытиемВопросЗавершение(ОтветНаВопрос, ДополнительныеПараметры) Экспорт
	
	Если ОтветНаВопрос = КодВозвратаДиалога.Да Тогда
		
		Если ВладелецФормы <> Неопределено И ТипЗнч(ВладелецФормы) = Тип("ФормаКлиентскогоПриложения") Тогда
			АдресВоВременномХранилище = ВладелецФормы.УникальныйИдентификатор;
		Иначе
			АдресВоВременномХранилище = Новый УникальныйИдентификатор();
		КонецЕсли;
		
		Результат = ЗаполнитьСопоставленныеТовары(АдресВоВременномХранилище);
		
		ПараметрыОповещения = Новый Структура;
		ПараметрыОповещения.Вставить("Ссылка", Неопределено);
		Оповестить("ИзменениеСопоставленияАлкогольнойПродукцииЕГАИС", ПараметрыОповещения, ЭтаФорма);
		
		ПроизводилисьДействия = Ложь;
		Закрыть(Результат);
		
	КонецЕсли;

КонецПроцедуры

#Область ОтборыСписка

&НаКлиентеНаСервереБезКонтекста
// Изменяет элемент отбора динамического списка.
//
// Параметры:
//  Список - ДинамическийСписок - обрабатываемый динамический список.
//  ИмяПоля - Строка - наименование поля компоновки данных.
//  ПравоеЗначение - ПравоеЗначение - значение, которое нужно установить.
//  Установить - Булево - признак необходимости установить отбор.
//  ВидСравнения - ВидСравнения - вид сравнения отбора, по умолчанию - Равно.
//
Процедура ИзменитьЭлементОтбораСписка(Список, ИмяПоля, ПравоеЗначение = Неопределено, Установить = Ложь, ВидСравнения = Неопределено) Экспорт
	
	УдалитьЭлементОтбораСписка(Список, ИмяПоля);
	
	Если Установить Тогда
		УстановитьЭлементОтбораСписка(Список, ИмяПоля, ПравоеЗначение, ВидСравнения);
	КонецЕсли;
	
КонецПроцедуры // ИзменитьЭлементОтбораСписка()

&НаКлиентеНаСервереБезКонтекста
// Изменяет элемент отбора в группе элементов отбора.
//
// Параметры:
//  Группа - ГруппаЭлементовОтбораКомпоновкиДанных - контейнер с элементами и группами отбора.
//  ИмяПоля - Строка - наименование поля компоновки данных.
//  ПравоеЗначение - ПравоеЗначение - значение, которое нужно установить.
//  Установить - Булево - признак необходимости установить отбор.
//  ВидСравнения - ВидСравнения - вид сравнения отбора, по умолчанию - Равно.
//
Процедура ИзменитьЭлементОтбораГруппыСписка(Группа, ИмяПоля, ПравоеЗначение = Неопределено, Установить = Ложь, ВидСравнения = Неопределено) Экспорт
	
	УдалитьЭлементОтбораКоллекции(Группа.Элементы, ИмяПоля);
	
	Если Установить Тогда
		УстановитьЭлементОтбораКоллекции(Группа.Элементы, ИмяПоля, ПравоеЗначение, ВидСравнения);
	КонецЕсли;
	
КонецПроцедуры

&НаКлиентеНаСервереБезКонтекста
// Удаляет элемент отбора динамического списка.
//
// Параметры:
//   Список - ДинамическийСписок - обрабатываемый динамический список,
//   ИмяПоля - Строка - имя поля компоновки, отбор по которому нужно удалить.
//
Процедура УдалитьЭлементОтбораСписка(Список, ИмяПоля) Экспорт
	
	УдалитьЭлементОтбораКоллекции(Список.КомпоновщикНастроек.Настройки.Отбор.Элементы, ИмяПоля);
	
КонецПроцедуры // УдалитьЭлементОтбораСписка()

&НаКлиентеНаСервереБезКонтекста
Процедура УдалитьЭлементОтбораКоллекции(КоллекцияЭлементов, ИмяПоля)
	
	ПолеКомпоновки = Новый ПолеКомпоновкиДанных(ИмяПоля);
	Для Каждого ЭлементОтбора Из КоллекцияЭлементов Цикл
		Если ТипЗнч(ЭлементОтбора) = Тип("ЭлементОтбораКомпоновкиДанных")
			И ЭлементОтбора.ЛевоеЗначение = ПолеКомпоновки Тогда
			КоллекцияЭлементов.Удалить(ЭлементОтбора);
		КонецЕсли;
	КонецЦикла;
	
КонецПроцедуры // УдалитьЭлементОтбораСписка()

&НаКлиентеНаСервереБезКонтекста
Функция НайтиЭлементОтбораПоПредставлению(КоллекцияЭлементов, Представление)
	
	ВозвращаемоеЗначение = Неопределено;
	
	Для каждого ЭлементОтбора Из КоллекцияЭлементов Цикл
		Если ЭлементОтбора.Представление = Представление Тогда
			ВозвращаемоеЗначение = ЭлементОтбора;
			Прервать;
		КонецЕсли;
	КонецЦикла;
	
	Возврат ВозвращаемоеЗначение
	
КонецФункции

&НаКлиентеНаСервереБезКонтекста
// Устанавливает элемент отбора коллекции.
//
// Параметры:
//  КоллекцияЭлементов - ГруппаЭлементовОтбораКомпоновкиДанных - контейнер с элементами и группами отбора.
//  ИмяПоля - Строка - наименование поля компоновки данных.
//  ПравоеЗначение - ПравоеЗначение - значение, которое нужно установить.
//  ВидСравнения - ВидСравнения - вид сравнения отбора, по умолчанию - Равно.
//
Процедура УстановитьЭлементОтбораКоллекции(КоллекцияЭлементов, ИмяПоля, ПравоеЗначение, ВидСравнения = Неопределено)
	
	ЭлементОтбора = КоллекцияЭлементов.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));
	ЭлементОтбора.ЛевоеЗначение    = Новый ПолеКомпоновкиДанных(ИмяПоля);
	ЭлементОтбора.ВидСравнения     = ?(ВидСравнения = Неопределено, ВидСравненияКомпоновкиДанных.Равно, ВидСравнения);
	ЭлементОтбора.Использование    = Истина;
	ЭлементОтбора.ПравоеЗначение   = ПравоеЗначение;
	ЭлементОтбора.РежимОтображения = РежимОтображенияЭлементаНастройкиКомпоновкиДанных.Недоступный;
	
КонецПроцедуры // УстановитьЭлементОтбораСписка()

&НаКлиентеНаСервереБезКонтекста
// Устанавливает элемент отбор динамического списка.
//
// Параметры:
//  Список - ДинамическийСписок - обрабатываемый динамический список.
//  ИмяПоля - Строка - наименование поля компоновки данных.
//  ВидСравнения - ВидСравнения - вид сравнения отбора, по умолчанию - Равно.
//  ПравоеЗначение - ПравоеЗначение - значение, которое нужно установить.
//
Процедура УстановитьЭлементОтбораСписка(Список, ИмяПоля, ПравоеЗначение, ВидСравнения = Неопределено) Экспорт
	
	УстановитьЭлементОтбораКоллекции(Список.КомпоновщикНастроек.Настройки.Отбор.Элементы, ИмяПоля, ПравоеЗначение, ВидСравнения);
	
КонецПроцедуры

&НаКлиентеНаСервереБезКонтекста
// Добавление группы отбора.
//
// Параметры:
//  КоллекцияЭлементов - ГруппаЭлементовОтбораКомпоновкиДанных - контейнер с элементами и группами отбора.
//  ТипГруппы - ТипГруппыЭлементовОтбораКомпоновкиДанных - тип группы.
//  Представление - Строка - представление группы.
//
// Возвращаемое значение:
//  ГруппаЭлементовОтбораКомпоновкиДанных - группа элементов отбора данных.
//
Функция СоздатьГруппуЭлементовОтбора(КоллекцияЭлементов, Представление, ТипГруппы) Экспорт
	
	ГруппаЭлементовОтбора = НайтиЭлементОтбораПоПредставлению(КоллекцияЭлементов, Представление);
	Если ГруппаЭлементовОтбора = Неопределено Тогда
		ГруппаЭлементовОтбора = КоллекцияЭлементов.Добавить(Тип("ГруппаЭлементовОтбораКомпоновкиДанных"));
	Иначе
		ГруппаЭлементовОтбора.Элементы.Очистить();
	КонецЕсли;
	
	ГруппаЭлементовОтбора.Представление    = Представление;
	ГруппаЭлементовОтбора.Применение       = ТипПримененияОтбораКомпоновкиДанных.Элементы;
	ГруппаЭлементовОтбора.РежимОтображения = РежимОтображенияЭлементаНастройкиКомпоновкиДанных.Недоступный;
	ГруппаЭлементовОтбора.ТипГруппы        = ТипГруппы;
	ГруппаЭлементовОтбора.Использование    = Истина;
	
	Возврат ГруппаЭлементовОтбора;
	
КонецФункции

#КонецОбласти

#Область Обработкаштрихкода

&НаКлиенте
Процедура ПоискПоШтрихкодуЗавершение(Результат, ДополнительныеПараметры) Экспорт
	
	ТекШтрихкод = ?(Результат = Неопределено, СокрЛП(ДополнительныеПараметры.ТекШтрихкод), СокрЛП(Результат));
	
	Если НЕ ПустаяСтрока(ТекШтрихкод) Тогда
		ПолученШтрихкод(Новый Структура("Штрихкод, Количество", ТекШтрихкод, 1));
	КонецЕсли;
	
КонецПроцедуры // ПоискПоШтрихкодуЗавершение()

// Процедура обрабатывает полученные штрихкоды.
//
&НаКлиенте
Процедура ПолученШтрихкод(ДанныеШтрихкода) Экспорт
	
	Штрихкод = ДанныеШтрихкода.Штрихкод;
	
	ДанныеПоШтрихКодам = ПолучитьДанныеПоШтрихкодам(ОбщегоНазначенияКлиентСервер.ЗначениеВМассиве(ДанныеШтрихкода));
	
	ДанныеПоШтрихКоду = ДанныеПоШтрихКодам.Получить(Штрихкод);
	Если ТипЗнч(ДанныеПоШтрихКоду) = Тип("Структура")
		И ДанныеПоШтрихКоду.Свойство("Номенклатура") Тогда
		Элементы["СписокНоменклатуры"].ТекущаяСтрока = ДанныеПоШтрихКоду.Номенклатура;
	Иначе
		ШаблонСообщения = НСтр("ru = 'Данные по штрихкоду ""%1"" не найдены'");
		ТекстСообщения = СтрШаблон(ШаблонСообщения, Штрихкод);
		ОбщегоНазначенияКлиент.СообщитьПользователю(ТекстСообщения);
	КонецЕсли;
	
КонецПроцедуры // ПолученыШтрихкоды()

&НаСервере
Функция ПолучитьДанныеПоШтрихкодам(Штрихкоды)
	Возврат РегистрыСведений.ШтрихкодыНоменклатуры.ПолучитьДанныеПоШтрихкодам(Штрихкоды);
КонецФункции

#КонецОбласти

#КонецОбласти
