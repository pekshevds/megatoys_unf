
#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	Объект.Организация = Параметры.Организация;
	ПрочитатьСостояниеИнтеграции();
	
	
	Элементы.ГруппаФоновыйРежим.ТолькоПросмотр             = Не ИнтеграцияПодключена;
	Элементы.ГруппаДатаПоследнегоОбновления.ТолькоПросмотр = Не ИнтеграцияПодключена;
	Элементы.ГруппаПодсказка.Видимость                     = Не ИнтеграцияПодключена;
	Если Не ИнтеграцияПодключена Тогда
		Элементы.ГруппаПодсказка.ЦветФона = ЦветаСтиля.ЕдиныйНалоговыйСчетЖелтыйЦветФона;
	КонецЕсли;
	
	Если ИнтеграцияПодключена Тогда
		ПрочитатьДатуПоследнегоОбновления();
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовШапкиФормы

&НаКлиенте
Процедура ФоновыйРежимПодключенПриИзменении(Элемент)
	
	УстановитьСостояниеИнтеграции();
	
КонецПроцедуры

&НаКлиенте
Процедура ФоновыйРежимПодключенРасширеннаяПодсказкаОбработкаНавигационнойСсылки(Элемент, НавигационнаяСсылкаФорматированнойСтроки, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	Если НавигационнаяСсылкаФорматированнойСтроки = "СогласиеНаРаскрытиеНалоговойТайны" Тогда
		СоздатьСогласиеНаРаскрытиеНалоговойТайны();
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ИспользоватьЖурналированиеПриИзменении(Элемент)
	
	УстановитьСостояниеИнтеграции();
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура НаборыДанныхЕНС(Команда)
	
	ОткрытьФорму("Обработка.ЕдиныйНалоговыйСчетЛичныйКабинет.Форма.НаборыДанныхЕНС");
	
КонецПроцедуры

&НаКлиенте
Процедура ДатаПоследнегоОбновленияНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	
КонецПроцедуры

&НаКлиенте
Процедура ДатаПоследнегоОбновленияОчистка(Элемент, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	
	Если ЗначениеЗаполнено(ДатаПоследнегоОбновления) Тогда
		ОписаниеОповещения = Новый ОписаниеОповещения("ПослеПолученияОтвета", ЭтотОбъект);
		ПоказатьВопрос(ОписаниеОповещения, НСтр("ru = 'Очистка даты приведет к удалению ранее загруженных данных по ЕНС.
		|Действие необратимо. Продолжить?'"), РежимДиалогаВопрос.ДаНет);
	КонецЕсли;

КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаСервере
Процедура ПрочитатьСостояниеИнтеграции()
	
	СтруктураПараметров = РегистрыСведений.СостоянияПодключенияЕНС.ПолучитьСостяниеПодключения(Объект.Организация);
	ЗаполнитьЗначенияСвойств(ЭтотОбъект, СтруктураПараметров);

КонецПроцедуры

&НаСервере
Процедура УстановитьСостояниеИнтеграции()
	
	СтруктураПараметров = РегистрыСведений.СостоянияПодключенияЕНС.СтруктураПараметровСостоянияПодключения();
	ЗаполнитьЗначенияСвойств(СтруктураПараметров, ЭтотОбъект);
	РегистрыСведений.СостоянияПодключенияЕНС.УстановитьСостояниеПодключения(Объект.Организация, СтруктураПараметров);
	
КонецПроцедуры

&НаСервере
Процедура ПрочитатьДатуПоследнегоОбновления()
	
	ДатаПоследнегоОбновления = РегистрыСведений.ПериодыОбновленияДанныхЕНС.ПолучитьДатуПоследнегоОбновления(Объект.Организация);
	
КонецПроцедуры

&НаСервере
Процедура УстановитьДатуПоследнегоОбновления()
	
	НаборЗаписей = РегистрыСведений.ПериодыОбновленияДанныхЕНС.СоздатьНаборЗаписей();
	НаборЗаписей.Отбор.Организация.Установить(Объект.Организация);
	НаборЗаписей.Очистить();
	НаборЗаписей.Записать();
	
	ОчиститьДанныеПослеДатыЗагрузки();
	
КонецПроцедуры

&НаСервере
Процедура ОчиститьДанныеПослеДатыЗагрузки()
	
	УстановитьПривилегированныйРежим(Истина);
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("Организация", Объект.Организация);
	Запрос.Текст =
	"ВЫБРАТЬ
	|	ДанныеЛичногоКабинетаЕНС.Ссылка КАК Ссылка
	|ИЗ
	|	Документ.ДанныеЛичногоКабинетаЕНС КАК ДанныеЛичногоКабинетаЕНС
	|ГДЕ
	|	ДанныеЛичногоКабинетаЕНС.Организация = &Организация";
	
	Выборка = Запрос.Выполнить().Выбрать();
	Пока Выборка.Следующий() Цикл
		ДокументОбъект = Выборка.Ссылка.ПолучитьОбъект();
		ДокументОбъект.Удалить();
	КонецЦикла;
	
	УстановитьПривилегированныйРежим(Ложь);
	
КонецПроцедуры

&НаКлиенте
Процедура ПослеПолученияОтвета(Результат, ВходящийКонтекст) Экспорт
		
	Если Результат <> КодВозвратаДиалога.Да Тогда
		Возврат;
	КонецЕсли;
	
	ПустаяДата = Дата(1,1,1);
	Если ДатаПоследнегоОбновления > ПустаяДата Тогда
		ДатаПоследнегоОбновления = ПустаяДата;
		УстановитьДатуПоследнегоОбновления();
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура СоздатьСогласиеНаРаскрытиеНалоговойТайны()
	
	ЕдиныйНалоговыйСчетИнтеграцияКлиент.СоздатьСогласиеНаРаскрытиеНалоговойТайны(ЭтотОбъект);

КонецПроцедуры

#КонецОбласти
