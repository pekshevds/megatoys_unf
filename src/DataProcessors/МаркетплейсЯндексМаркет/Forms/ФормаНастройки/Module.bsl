
#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)

	УчетнаяЗаписьИзКонстанты = НастройкиИзКонстантыПеренестиВСправочник();
	Если ЗначениеЗаполнено( УчетнаяЗаписьИзКонстанты ) Тогда
		ЗначениеВРеквизитФормы( УчетнаяЗаписьИзКонстанты.ПолучитьОбъект(), "Объект" );
		СообщениеТекст = НСтр( "ru = 'Необходимо дозаполнить данные складов / магазинов на вкладке ""Склады"".'" );
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю( СообщениеТекст );
	КонецЕсли;

	Если Параметры.Свойство("УчетнаяЗапись") И ЗначениеЗаполнено( Параметры.УчетнаяЗапись ) Тогда
		ЗначениеВРеквизитФормы( Параметры.УчетнаяЗапись.ПолучитьОбъект(), "Объект" );
	КонецЕсли;
	
	Если Объект.Ссылка.Пустая() Тогда
		Объект.ВидМаркетплейса = Перечисления.ВидыМаркетплейсов.МаркетплейсЯндексМаркет;
		Объект.ДатаСоздания = ТекущаяДатаСеанса();
		УчетнаяЗаписьНаименованиеПоУмолчаниюУстановить();
	КонецЕсли;
	
	Если Объект.СостояниеНастроек.Количество() = 0 Тогда
		ДобавитьНастройкиСоздания();
	КонецЕсли;
	
	ФормаЭлементыОтборыУстановить( Объект.Ссылка );
	
	Склады = ИнтеграцияСЯндексМаркетСервер.СкладыСоответствияПолучить( Объект.Ссылка );
	ЭтаФорма.ТаблицаСкладов.Загрузить( Склады );
	Для Каждого ТаблицаСкладовСтрока Из ТаблицаСкладов Цикл
		ТаблицаСкладовСтрока.URL = СкладURLПолучить( ТаблицаСкладовСтрока.МодельСклада, ТаблицаСкладовСтрока.ИдентификаторКампанииМаркетплейса, ТаблицаСкладовСтрока.СкладМаркетплейсИдентификатор );
	КонецЦикла;
	
	ЭтаФорма.ЯндексМаркетДанныеАвторизацииПомещеныВХранилище = ЯндексМаркетПроверитьДанныеАвторизацииПомещеныВХранилище( Объект.Ссылка );
	
	ОбновитьОтображениеНаСервере();
	
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	
	ОбновитьОтображениеНаКлиенте(Ложь);
	
	Если Объект.НастройкаЗавершена Тогда
		ПоказатьСтраницуТовары();
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ОбработкаОповещения(ИмяСобытия, Параметр, Источник)
	
	Если ИмяСобытия = "ПодборПроизведен" 
		И ЗначениеЗаполнено(Параметр) 
		// Проверка на владельца формы
		И Источник <> Новый УникальныйИдентификатор("00000000-0000-0000-0000-000000000000")
		И Источник = УникальныйИдентификатор
		Тогда
		
		ОбработкаПодбораТоваровЗаполнитьИзХранилища(Параметр);
		
		Элементы.СтатусыПубликацииТоваровЯндексМаркет.Обновить();
	ИначеЕсли ИмяСобытия = "ПриЗакрытии" Тогда
	
		Если Параметр = "РегистрСведений.СтатусыПубликацииТоваровЯндексМаркет.Форма.ФормаЗаписи" Тогда
			Элементы.СтатусыПубликацииТоваровЯндексМаркет.Обновить();
		КонецЕсли;
	ИначеЕсли ИмяСобытия = "ОбновитьАвторизациюПриложения" Тогда
	
	ИначеЕсли ИмяСобытия = "ЯндексАвторизация" Тогда
		Если ТипЗнч( Параметр ) = Тип( "Структура" ) И Параметр.Свойство( "access_token" ) Тогда
			
			// запишем данные авторизации
			ЭтаФорма.ДанныеПриложенияЯндексМаркет = Параметр;
			
			ЗаписатьДанныеАвторизацииЯндексМаркет = Истина;
			ЗаписатьТаблицуСкладов = Ложь;
			ЗаписатьИзмененияНаСервере( ЗаписатьДанныеАвторизацииЯндексМаркет, ЗаписатьТаблицуСкладов );
			Если Не Объект.НастройкаЗавершена Тогда
				КнопкаДалее2( Неопределено );
			КонецЕсли;
			
		КонецЕсли;
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы

&НаКлиенте
Функция ТоварыВыделенныеСтрокиДанныеПолучить()
	Возврат Элементы.СтатусыПубликацииТоваровЯндексМаркет.ВыделенныеСтроки;
КонецФункции

&НаКлиенте
Процедура УтвердитьВыбранные(Команда)
	
	ВыбранныеЗаписи = ТоварыВыделенныеСтрокиДанныеПолучить();
	Если ВыбранныеЗаписи.Количество() = 0 Тогда
		Возврат;
	КонецЕсли;
	
	ТипДействия = "НаМодерацию";
	КоличествоОбработанных = УтвердитьОтклонитьВыбранныеНаСервере( Объект.Ссылка, Истина, ВыбранныеЗаписи);
	Элементы.СтатусыПубликацииТоваровЯндексМаркет.Обновить();
	
	ОповеститьНаКлиенте(ТипДействия, КоличествоОбработанных);
	
КонецПроцедуры

&НаКлиенте
Процедура ОтклонитьВыбранные(Команда)
	
	ВыбранныеЗаписи = ТоварыВыделенныеСтрокиДанныеПолучить();
	Если ВыбранныеЗаписи.Количество() = 0 Тогда
		Возврат;
	КонецЕсли;
	
	ТипДействия = "НевернаяРекомендация";
	КоличествоОбработанных = УтвердитьОтклонитьВыбранныеНаСервере( Объект.Ссылка, Ложь, ВыбранныеЗаписи);
	Элементы.СтатусыПубликацииТоваровЯндексМаркет.Обновить();
	
	ОповеститьНаКлиенте(ТипДействия, КоличествоОбработанных);
	
КонецПроцедуры

&НаКлиенте
Процедура ОтправитьНаПовторноеПолучениеРекомендации(Команда)
	
	ВыбранныеЗаписи = ТоварыВыделенныеСтрокиДанныеПолучить();
	Если ВыбранныеЗаписи.Количество() = 0 Тогда
		Возврат;
	КонецЕсли;
	
	ТипДействия = "НаПолучениеРекомендации";
	КоличествоОбработанных = ПовторноОтправитьЗапросВыбранныеНаСервере( Объект.Ссылка, ТипДействия, ВыбранныеЗаписи );
	Элементы.СтатусыПубликацииТоваровЯндексМаркет.Обновить();
	
	ОповеститьНаКлиенте(ТипДействия, КоличествоОбработанных);
	
КонецПроцедуры

&НаКлиенте
Процедура ОтправитьПовторноНаМодерацию(Команда)

	ВыбранныеЗаписи = ТоварыВыделенныеСтрокиДанныеПолучить();
	Если ВыбранныеЗаписи.Количество() = 0 Тогда
		Возврат;
	КонецЕсли;

	ТипДействия = "НаМодерацию";
	КоличествоОбработанных = ПовторноОтправитьЗапросВыбранныеНаСервере( Объект.Ссылка, ТипДействия, ВыбранныеЗаписи );
	Элементы.СтатусыПубликацииТоваровЯндексМаркет.Обновить();
	
	ОповеститьНаКлиенте(ТипДействия, КоличествоОбработанных);
	
КонецПроцедуры

&НаКлиенте
Процедура АссортиментВыбор(Элемент, ВыбраннаяСтрока, Поле, СтандартнаяОбработка)
	
	Если Элемент.ТекущийЭлемент.Имя = "АссортиментЕстьИдентификаторПлощадки" Тогда
		СтандартнаяОбработка = Ложь;
		Если Элемент.ТекущиеДанные.ЕстьИдентификаторПлощадки Тогда
			ПерейтиПоНавигационнойСсылке("https://pokupki.market.yandex.ru/product/"+СокрЛП(СтрЗаменить(Элемент.ТекущиеДанные.ИдентификаторТовараПлощадки,Символ(160),"")));
		КонецЕсли;	
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ОтобратьПоМаркеруНовые(Команда)
	ОтобратьПоМаркеруНовыеНаСервере();   
	СтатусыПубликацииТоваровЯндексПослеУстановкиОтбораПоМаркету( Команда.Имя );
КонецПроцедуры

&НаКлиенте
Процедура ОтобратьПоМаркеруВПроцессе(Команда)
	ОтобратьПоМаркеруВПроцессеНаСервере();
	СтатусыПубликацииТоваровЯндексПослеУстановкиОтбораПоМаркету( Команда.Имя );
КонецПроцедуры

&НаКлиенте
Процедура ОтобратьПоМаркеруОшибка(Команда)
	ОтобратьПоМаркеруОшибкаНаСервере(); 
	СтатусыПубликацииТоваровЯндексПослеУстановкиОтбораПоМаркету( Команда.Имя );	
КонецПроцедуры

&НаКлиенте
Процедура СтатусыПубликацииТоваровЯндексПослеУстановкиОтбораПоМаркету( КомандаИмя )
	Элементы.ОтборПоМаркерам.Заголовок = Элементы[ КомандаИмя ].Заголовок;
	Элементы.ОтборПоМаркерам.Картинка = Элементы[ КомандаИмя ].Картинка;
	Элементы.СтатусыПубликацииТоваровЯндексМаркет.Обновить();
КонецПроцедуры

&НаКлиенте
Процедура ОтобратьПоМаркеруГотовы(Команда)
	ОтобратьПоМаркеруГотовыНаСервере();
	СтатусыПубликацииТоваровЯндексПослеУстановкиОтбораПоМаркету( Команда.Имя );
КонецПроцедуры

&НаКлиенте
Процедура ПоказатьВсе(Команда)
	ПоказатьВсеНаСервере();
	СтатусыПубликацииТоваровЯндексПослеУстановкиОтбораПоМаркету( Команда.Имя );	
КонецПроцедуры

&НаКлиенте
Процедура ОткрытьПодбор(Команда)
	
	ИмяТабличнойЧасти = "СтатусыПубликацииТоваровЯндексМаркет";
	ПараметрыПодбора = Новый Структура;
	ПараметрыПодбора.Вставить( "КнопкаПеренестиВДокументЗаголовок", НСтр( "ru = 'Добавить в настройку'" ) );
	
	ПодборНоменклатурыВДокументахКлиент.ОткрытьФормуПодбораНоменклатуры(ЭтотОбъект, ИмяТабличнойЧасти, ПараметрыПодбора);
	
КонецПроцедуры

&НаКлиенте
Процедура НачатьНастройку(Команда)
	ДобавитьНастройкуНаКлиенте("Приветствие",2);
	ДобавитьНастройкуНаКлиенте("Дополнительно",1);
	Элементы.КнопкаНачатьНастройку.КнопкаПоУмолчанию = Ложь;
	ОбновитьОтображениеНаКлиенте( Ложь );
КонецПроцедуры

&НаКлиенте
Процедура КнопкаДалее2(Команда)
	
	Если ЭтаФорма.ЯндексМаркетДанныеАвторизацииПомещеныВХранилище <> Истина Тогда
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю( "Необходимо авторизоваться в приложении Яндекс Маркет." );
		Возврат;
	КонецЕсли;
	
	Результат = ЭтаФорма.ЯндексМаркетДанныеАвторизацииПомещеныВХранилище;
	
	Если Результат = Истина Тогда

		ОбщегоНазначенияКлиентСервер.СообщитьПользователю( НСтр( "ru = 'Авторизация пройдена успешно.'") );
	
		ДобавитьНастройкуНаКлиенте( "Приветствие", 2 );
		ДобавитьНастройкуНаКлиенте( "Дополнительно", 2 );
		ДобавитьНастройкуНаКлиенте( "Товары", 2 );
		ДобавитьНастройкуНаКлиенте( "Склады", 2 );
		ОбновитьОтображениеНаКлиенте( Истина, Ложь );
		
	КонецЕсли;
	
	Если Объект.НастройкаЗавершена Тогда
		
		ПроверитьТаблицуСкладов = Ложь;
		ЗаписатьИзмененияНаКлиенте( ПроверитьТаблицуСкладов );
		Модифицированность = Ложь;
		
		ОбновитьПризнакПоПунктуНаКлиенте( "Склады" );
		ЭтаФорма.ТекущийЭлемент = Элементы.ТаблицаСкладов;
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура КнопкаНазад2(Команда)
	ДобавитьНастройкуНаКлиенте("Приветствие", 1);
	ДобавитьНастройкуНаКлиенте("Дополнительно", 0);
	ОбновитьОтображениеНаКлиенте( Ложь );
КонецПроцедуры

&НаКлиенте
Процедура ЗаписатьИзменения(Команда)
	ЗаписатьИзмененияНаКлиенте();
КонецПроцедуры

&НаКлиенте
Процедура ГиперссылкаПерейтиНаСайтЯндексНажатие(Элемент)
	Адрес = АдресАвторизацииЯндекс();
	ФайловаяСистемаКлиент.ОткрытьНавигационнуюСсылку( Адрес );	
КонецПроцедуры

&НаКлиенте
Процедура ПриветствиеКартинкаНажатие(Элемент)
	ПоказатьСтраницуПриветствие();
КонецПроцедуры

&НаКлиенте
Процедура ПриветствиеНадписьНажатие(Элемент)
	ПоказатьСтраницуПриветствие();
КонецПроцедуры

&НаКлиенте
Процедура ДополнительноНадписьНажатие(Элемент)
	ПоказатьСтраницуДополнительно();
КонецПроцедуры

&НаКлиенте
Процедура ДополнительноКартинкаНажатие(Элемент)
	ПоказатьСтраницуДополнительно();
КонецПроцедуры

&НаКлиенте
Процедура ТоварыКартинкаНажатие(Элемент)
	ПоказатьСтраницуТовары();
КонецПроцедуры

&НаКлиенте
Процедура ТоварыНадписьНажатие(Элемент)
	ПоказатьСтраницуТовары();
КонецПроцедуры

&НаКлиенте
Процедура СкладыКартинкаНажатие(Элемент)
	ПоказатьСтраницуСклады();
КонецПроцедуры

&НаКлиенте
Процедура СкладыНадписьНажатие(Элемент)
	ПоказатьСтраницуСклады();
КонецПроцедуры

&НаКлиенте
Процедура ПомощьКартинкаНажатие(Элемент)
	ОткрытьИнструкцию();
КонецПроцедуры

&НаКлиенте
Процедура ПомощьНадписьНажатие(Элемент)
	ОткрытьИнструкцию();
КонецПроцедуры

&НаКлиенте
Процедура ПредложитьВозможностьНажатие(Элемент)
	
	ТекстДляПисьма = НСтр("ru = 'Опишите, каких возможностей вам не хватает для приложения ""Яндекс Маркет"":'");
	Тег = НСтр("ru = 'Яндекс Маркет'");
	
	УправлениеНебольшойФирмойКлиент.ПредложитьВозможностьНажатие(Тег, ТекстДляПисьма);
	
КонецПроцедуры

&НаКлиенте
Процедура УдалитьИнтеграцию(Команда)
	
	ОписаниеОповещения = Новый ОписаниеОповещения("УдалениеНастройкиИнтеграцииЗавершение", ЭтотОбъект );
	
	ПараметрыФормы = Новый Структура( "УчетнаяЗапись", Объект.Ссылка );
	ОткрытьФорму("Обработка.МаркетплейсЯндексМаркет.Форма.УдалениеНастройкиИнтеграции", ПараметрыФормы, ЭтаФорма,,,,ОписаниеОповещения);
	
КонецПроцедуры

&НаКлиенте
Процедура ЗаписатьИзмененияИЗакрыть(Команда)
	Если ЗаписатьИзмененияНаКлиенте() = Истина Тогда
		Закрыть();
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Функция НастрокиЯндексМаркетПередВыполнениемОбменаПроверить()

	УчетнаяЗапись = Объект.Ссылка;
	Если УчетнаяЗапись.Пустая() Тогда
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю( "Учетная запись не записана." );
		Возврат Ложь;
	КонецЕсли;

	Если ЭтаФорма.Модифицированность Тогда
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю( "Перед обменом данными необходимо записать изменения настроек Яндекс маркет." );
		Возврат Ложь;
	КонецЕсли;
	
	Если ТаблицаСкладов.Количество() = 0 Тогда
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю( "Склады не заполнены." );
		Возврат Ложь;
	КонецЕсли;

	Возврат Истина;
КонецФункции

&НаКлиенте
Процедура ПоКнопкеОбновитьДанныеЯндексМаркет(Команда)

	Если НастрокиЯндексМаркетПередВыполнениемОбменаПроверить() <> Истина Тогда
		Возврат;
	КонецЕсли;

	УчетнаяЗапись = Объект.Ссылка;

	ОчиститьСообщения();
	
	ПоказатьОповещениеПользователя(
	НСтр("ru = 'Начало обновления данных Яндекс маркет'"),,
	НСтр("ru = 'Запущено фоновое обновление данных Яндекс маркет.'"),
	БиблиотекаКартинок.ЯндексМаркетЛоготип);

	ПараметрыОжидания = ДлительныеОперацииКлиент.ПараметрыОжидания(ЭтотОбъект);
	ПараметрыОжидания.ВыводитьОкноОжидания = Ложь;
	ПараметрыОжидания.ОповещениеПользователя.Показать = Истина;
	ПараметрыОжидания.ОповещениеПользователя.Текст = НСтр("ru = 'Окончание обновления данных Яндекс маркет'");
	ПараметрыОжидания.ОповещениеПользователя.Пояснение = НСтр("ru = 'Завершено фоновое обновление данных Яндекс маркет.'");
	ПараметрыОжидания.ОповещениеПользователя.Картинка = БиблиотекаКартинок.ЯндексМаркетЛоготип;

	ОповещениеОЗавершении = Новый ОписаниеОповещения("ОбновитьДанныеФормыПослеВыполненияФоновогоЗадания", ЭтаФорма);
	ДлительнаяОперация = ОбновитьДанныеЯндексМаркет(УчетнаяЗапись, УникальныйИдентификатор);
	ДлительныеОперацииКлиент.ОжидатьЗавершение(ДлительнаяОперация, ОповещениеОЗавершении, ПараметрыОжидания);
	
КонецПроцедуры

&НаСервереБезКонтекста
Функция ОбновитьДанныеЯндексМаркет(УчетнаяЗапись, УникальныйИдентификатор)

	ПараметрыВыполнения = ДлительныеОперации.ПараметрыВыполненияФункции(УникальныйИдентификатор);
	ПараметрыВыполнения.НаименованиеФоновогоЗадания = НСтр("ru = 'Яндекс маркет. Выполнить обновление данных Яндекс маркет.'");
	ПараметрыВыполнения.ОжидатьЗавершение = 0;
	ПараметрыВыполнения.ЗапуститьВФоне = Истина;

	ИмяМетода = "ИнтеграцияСЯндексМаркетСервер.ОбменДаннымиЯндексМаркетОбновитьВсеДанные";
	Возврат ДлительныеОперации.ВыполнитьФункцию(ПараметрыВыполнения, ИмяМетода, УчетнаяЗапись);

КонецФункции

&НаКлиенте
Процедура ПоКнопкеВыгрузитьЦеныВЯндексМаркет(Команда)

	Если НастрокиЯндексМаркетПередВыполнениемОбменаПроверить() <> Истина Тогда
		Возврат;
	КонецЕсли;

	УчетнаяЗапись = Объект.Ссылка;

	ОчиститьСообщения();
	
	ПоказатьОповещениеПользователя(
	НСтр("ru = 'Начало выгрузки цен в Яндекс маркет'"),,
	НСтр("ru = 'Запущена фоновая выгрузки цен в Яндекс маркет.'"),
	БиблиотекаКартинок.ЯндексМаркетЛоготип);

	ПараметрыОжидания = ДлительныеОперацииКлиент.ПараметрыОжидания(ЭтотОбъект);
	ПараметрыОжидания.ВыводитьОкноОжидания = Ложь;
	ПараметрыОжидания.ОповещениеПользователя.Показать = Истина;
	ПараметрыОжидания.ОповещениеПользователя.Текст = НСтр("ru = 'Окончание выгрузки цен в Яндекс маркет'");
	ПараметрыОжидания.ОповещениеПользователя.Пояснение = НСтр("ru = 'Завершена фоновая выгрузки цен в Яндекс маркет.'");
	ПараметрыОжидания.ОповещениеПользователя.Картинка = БиблиотекаКартинок.ЯндексМаркетЛоготип;

	ОповещениеОЗавершении = Новый ОписаниеОповещения("ОбновитьДанныеФормыПослеВыполненияФоновогоЗадания", ЭтаФорма);
	ДлительнаяОперация = ВыгрузитьЦеныВЯндексМаркет(УчетнаяЗапись, УникальныйИдентификатор);
	ДлительныеОперацииКлиент.ОжидатьЗавершение(ДлительнаяОперация, ОповещениеОЗавершении, ПараметрыОжидания);
	
КонецПроцедуры

&НаСервереБезКонтекста
Функция ВыгрузитьЦеныВЯндексМаркет(УчетнаяЗапись, УникальныйИдентификатор)

	ПараметрыВыполнения = ДлительныеОперации.ПараметрыВыполненияФункции(УникальныйИдентификатор);
	ПараметрыВыполнения.НаименованиеФоновогоЗадания = НСтр("ru = 'Яндекс маркет. Выполнить обновление данных Яндекс маркет.'");
	ПараметрыВыполнения.ОжидатьЗавершение = 0;
	ПараметрыВыполнения.ЗапуститьВФоне = Истина;

	ИмяМетода = "ИнтеграцияСЯндексМаркетСервер.ОбменДаннымиВыгрузитьЦеныИз1СВЯндексМаркет";
	Возврат ДлительныеОперации.ВыполнитьФункцию(ПараметрыВыполнения, ИмяМетода, УчетнаяЗапись);

КонецФункции

&НаКлиенте
Процедура ПоКнопкеВыгрузитьОстатки(Команда)

	Если НастрокиЯндексМаркетПередВыполнениемОбменаПроверить() <> Истина Тогда
		Возврат;
	КонецЕсли;

	УчетнаяЗапись = Объект.Ссылка;

	ОчиститьСообщения();
	
	ПоказатьОповещениеПользователя(
	НСтр("ru = 'Начало выгрузки остатков товаров'"),,
	НСтр("ru = 'Запущена фоновая выгрузка остатков товаров в Яндекс маркет.'"),
	БиблиотекаКартинок.ЯндексМаркетЛоготип);

	ПараметрыОжидания = ДлительныеОперацииКлиент.ПараметрыОжидания(ЭтотОбъект);
	ПараметрыОжидания.ВыводитьОкноОжидания = Ложь;
	ПараметрыОжидания.ОповещениеПользователя.Показать = Истина;
	ПараметрыОжидания.ОповещениеПользователя.Текст = НСтр("ru = 'Окончание выгрузки остатков товаров'");
	ПараметрыОжидания.ОповещениеПользователя.Пояснение = НСтр("ru = 'Завершена фоновая выгрузка остатков товаров в Яндекс маркет.'");
	ПараметрыОжидания.ОповещениеПользователя.Картинка = БиблиотекаКартинок.ЯндексМаркетЛоготип;

	ОповещениеОЗавершении = Новый ОписаниеОповещения("ОбновитьДанныеФормыПослеВыполненияФоновогоЗадания", ЭтаФорма);
	ДлительнаяОперация = ВыгрузитьОстаткиТоваровВЯндексМаркет(УчетнаяЗапись, УникальныйИдентификатор);
	ДлительныеОперацииКлиент.ОжидатьЗавершение(ДлительнаяОперация, ОповещениеОЗавершении, ПараметрыОжидания);
	
КонецПроцедуры

&НаСервереБезКонтекста
Функция ВыгрузитьОстаткиТоваровВЯндексМаркет(УчетнаяЗапись, УникальныйИдентификатор)

	ПараметрыВыполнения = ДлительныеОперации.ПараметрыВыполненияФункции(УникальныйИдентификатор);
	ПараметрыВыполнения.НаименованиеФоновогоЗадания = НСтр("ru = 'Яндекс маркет. Выполнить выгрузку остатков.'");
	ПараметрыВыполнения.ОжидатьЗавершение = 0;
	ПараметрыВыполнения.ЗапуститьВФоне = Истина;

	ИмяМетода = "ИнтеграцияСЯндексМаркетСервер.ОбменДаннымиВыгрузитьОстаткиТоваровВЯндексМаркет";
	Возврат ДлительныеОперации.ВыполнитьФункцию(ПараметрыВыполнения, ИмяМетода, УчетнаяЗапись);

КонецФункции

&НаКлиенте
Процедура ПоКнопкеТоварныйКаталогОбновить(Команда)

	Если НастрокиЯндексМаркетПередВыполнениемОбменаПроверить() <> Истина Тогда
		Возврат;
	КонецЕсли;

	УчетнаяЗапись = Объект.Ссылка;

	ОчиститьСообщения();
	
	ПоказатьОповещениеПользователя(
	НСтр("ru = 'Начало обновления товарного каталога'"),,
	НСтр("ru = 'Запущено фоновое обновление товарного каталога в Яндекс маркет.'"),
	БиблиотекаКартинок.ЯндексМаркетЛоготип);

	ПараметрыОжидания = ДлительныеОперацииКлиент.ПараметрыОжидания(ЭтотОбъект);
	ПараметрыОжидания.ВыводитьОкноОжидания = Ложь;
	ПараметрыОжидания.ОповещениеПользователя.Показать = Истина;
	ПараметрыОжидания.ОповещениеПользователя.Текст = НСтр("ru = 'Окончание обновления товарного каталога'");
	ПараметрыОжидания.ОповещениеПользователя.Пояснение = НСтр("ru = 'Завершено фоновое обновление товарного каталога в Яндекс маркет.'");
	ПараметрыОжидания.ОповещениеПользователя.Картинка = БиблиотекаКартинок.ЯндексМаркетЛоготип;

	ОповещениеОЗавершении = Новый ОписаниеОповещения("ОбновитьДанныеФормыПослеВыполненияФоновогоЗадания", ЭтаФорма);
	ДлительнаяОперация = ОбновитьТоварныйКаталогВЯндексМаркет(УчетнаяЗапись, УникальныйИдентификатор);
	ДлительныеОперацииКлиент.ОжидатьЗавершение(ДлительнаяОперация, ОповещениеОЗавершении, ПараметрыОжидания);
	
КонецПроцедуры

&НаСервереБезКонтекста
Функция ОбновитьТоварныйКаталогВЯндексМаркет(УчетнаяЗапись, УникальныйИдентификатор)

	ПараметрыВыполнения = ДлительныеОперации.ПараметрыВыполненияФункции(УникальныйИдентификатор);
	ПараметрыВыполнения.НаименованиеФоновогоЗадания = НСтр("ru = 'Яндекс маркет. Обновить товарный каталог.'");
	ПараметрыВыполнения.ОжидатьЗавершение = 0;
	ПараметрыВыполнения.ЗапуститьВФоне = Истина;

	ИмяМетода = "ИнтеграцияСЯндексМаркетСервер.ОбменДаннымиОбновитьТоварныйКаталог";
	Возврат ДлительныеОперации.ВыполнитьФункцию(ПараметрыВыполнения, ИмяМетода, УчетнаяЗапись);

КонецФункции

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаСервере
Процедура ДобавитьНастройкиСоздания()
	
	Объект.СостояниеНастроек.Очистить();
	
	ДобавитьНастройку("Приветствие", 1);
	ДобавитьНастройку("Дополнительно", 0);
	ДобавитьНастройку("Склады", 0);
	ДобавитьНастройку("Товары", 0);
	
КонецПроцедуры

&НаСервере
Процедура ДобавитьНастройку(ИмяСтраницы, Статус)
	
	МассивСтрок = Объект.СостояниеНастроек.НайтиСтроки(Новый Структура("ИмяСтраницы", ИмяСтраницы));
	
	Если МассивСтрок.количество() Тогда
		ТекНастройка = МассивСтрок[0];
	Иначе
		ТекНастройка = Объект.СостояниеНастроек.Добавить();
	КонецЕсли;
	
	ТекНастройка.ИмяСтраницы = ИмяСтраницы;
	ТекНастройка.Статус = Статус;
	
КонецПроцедуры

&НаСервере
Процедура ОбновитьОтображениеНаСервере()
	
	ЭтаФорма.Заголовок = "Интеграция с Яндекс Маркет: " + ?( ПустаяСтрока( Объект.Наименование ), "Новая", Объект.Наименование );
	
	Если Объект.НастройкаЗавершена Тогда
		Для Каждого Стр Из Объект.СостояниеНастроек Цикл
			Если СтрНайти( ",СтатусыТовара,Ошибки,", "," + Стр.ИмяСтраницы + "," ) > 0 Тогда
				Продолжить;
			КонецЕсли;
			Элементы["СтраницыЭтапыНастройки" + Стр.ИмяСтраницы].ТекущаяСтраница = Элементы["Страница" + Стр.ИмяСтраницы + "0"];// без флажка
			Элементы["ГруппаНижнееМеню" + Стр.ИмяСтраницы].Видимость = Ложь;
		КонецЦикла;
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ОбновитьОтображениеНаКлиенте(ЗаписатьИзмненения = Истина, ПроверитьТаблицуСкладов = Истина )
	
	Если НЕ Объект.НастройкаЗавершена Тогда
		
		ЕстьПереходПоСтранице = Ложь;
		Для Каждого Стр Из Объект.СостояниеНастроек Цикл

			Если СтрНайти( ",СтатусыТовара,Ошибки,", "," + Стр.ИмяСтраницы + "," ) > 0 Тогда
				Продолжить;
			КонецЕсли;
			
			Элементы["СтраницыЭтапыНастройки" + Стр.ИмяСтраницы].ТекущаяСтраница = Элементы["Страница" + Стр.ИмяСтраницы + Стр.Статус];
			
			Если Стр.Статус = 1 Тогда
				ЕстьПереходПоСтранице = Истина;
				Элементы.СтраницыПунктыМеню.ТекущаяСтраница = Элементы["Страница" + Стр.ИмяСтраницы];
				Элементы["" + Стр.ИмяСтраницы + "Надпись"].Шрифт = Новый Шрифт("Arial",8,Истина);
			Иначе
				Элементы["" + Стр.ИмяСтраницы + "Надпись"].Шрифт = Новый Шрифт;
			КонецЕсли;
			
			Элементы["" + Стр.ИмяСтраницы + "Пункт"].Доступность = (Стр.Статус <> 0);
			
		КонецЦикла;
		
		Если Не ЕстьПереходПоСтранице Тогда
			Объект.НастройкаЗавершена = Истина;
			ОбновитьОтображениеНаСервере();
		КонецЕсли;
	КонецЕсли;
	
	Если ЗаписатьИзмненения Тогда
		ЗаписатьИзмененияНаКлиенте( ПроверитьТаблицуСкладов );
	КонецЕсли;
	
	Элементы.ФормаГруппаКоманднаяПанель.Видимость = Объект.НастройкаЗавершена;
	Если Объект.НастройкаЗавершена Тогда
		Элементы.ФормаЗаписатьИзмененияИЗакрыть.КнопкаПоУмолчанию = Истина;
	КонецЕсли;
	СтатусыПубликацииТоваровЯндексПослеУстановкиОтбораПоМаркету( "ПоказатьВсе" );
	
КонецПроцедуры

&НаКлиенте
Процедура ДобавитьНастройкуНаКлиенте(ИмяСтраницы, Статус = 0)
	
	МассивСтрок = Объект.СостояниеНастроек.НайтиСтроки(Новый Структура("ИмяСтраницы", ИмяСтраницы));
	
	Если МассивСтрок.количество() Тогда
		ТекНастройка = МассивСтрок[0];
	Иначе
		ТекНастройка = Объект.СостояниеНастроек.Добавить();
	КонецЕсли;
	
	ТекНастройка.ИмяСтраницы = ИмяСтраницы;
	ТекНастройка.Статус = Статус;
	
КонецПроцедуры

&НаСервереБезКонтекста
Функция ТоварыВыбранныеЗаписиВТаблицуЗначений( ВыбранныеЗаписи )

	Товары = Новый ТаблицаЗначений;
	Товары.Колонки.Добавить( "Номенклатура", Новый ОписаниеТипов( "СправочникСсылка.Номенклатура" ) );
	Товары.Колонки.Добавить( "Характеристика", Новый ОписаниеТипов( "СправочникСсылка.ХарактеристикиНоменклатуры" ) );
	
	Для Каждого ВыбраннаяЗапись Из ВыбранныеЗаписи Цикл
		ТоварыСтрока = Товары.Добавить();
		ТоварыСтрока.Номенклатура = ВыбраннаяЗапись.Номенклатура;
		ТоварыСтрока.Характеристика = ВыбраннаяЗапись.Характеристика;
	КонецЦикла;
	
	Возврат Товары;
КонецФункции

&НаСервереБезКонтекста
Функция УтвердитьОтклонитьВыбранныеНаСервере( УчетнаяЗапись, ПоложительноеРешение, ВыбранныеЗаписи )
	
	ОтборТовары = ТоварыВыбранныеЗаписиВТаблицуЗначений( ВыбранныеЗаписи );
	
	КоличествоОбработанных = 0;
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	ОтборТовары.Номенклатура КАК Номенклатура,
	|	ОтборТовары.Характеристика КАК Характеристика
	|ПОМЕСТИТЬ ОтборТовары
	|ИЗ
	|	&ОтборТовары КАК ОтборТовары
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	СтатусыПубликацииТоваровЯндексМаркет.Номенклатура КАК Номенклатура,
	|	СтатусыПубликацииТоваровЯндексМаркет.Характеристика КАК Характеристика,
	|	СтатусыПубликацииТоваровЯндексМаркет.УчетнаяЗаписьМаркетплейса КАК УчетнаяЗаписьМаркетплейса
	|ИЗ
	|	РегистрСведений.СтатусыПубликацииТоваровЯндексМаркет КАК СтатусыПубликацииТоваровЯндексМаркет
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ОтборТовары КАК ОтборТовары
	|		ПО (ОтборТовары.Номенклатура = СтатусыПубликацииТоваровЯндексМаркет.Номенклатура)
	|			И (ОтборТовары.Характеристика = СтатусыПубликацииТоваровЯндексМаркет.Характеристика)
	|ГДЕ
	|	СтатусыПубликацииТоваровЯндексМаркет.Статус = ЗНАЧЕНИЕ(Перечисление.СтатусыВыгрузкиТоваровЯндексМаркет.ПолученаРекомендация)
	|	И СтатусыПубликацииТоваровЯндексМаркет.УчетнаяЗаписьМаркетплейса = &УчетнаяЗапись";
	
	Запрос.УстановитьПараметр( "УчетнаяЗапись", УчетнаяЗапись );
	Запрос.УстановитьПараметр( "ОтборТовары", ОтборТовары );
	
	Результат = Запрос.Выполнить().Выбрать();
	
	Если Результат.Количество() = 0 Тогда
		Возврат КоличествоОбработанных;
	КонецЕсли;
	
	Пока Результат.Следующий() Цикл 
		Набор = РегистрыСведений.СтатусыПубликацииТоваровЯндексМаркет.СоздатьНаборЗаписей();
		
		Набор.Отбор.УчетнаяЗаписьМаркетплейса.Установить( УчетнаяЗапись );
		Набор.Отбор.Номенклатура.Установить( Результат.Номенклатура );
		Набор.Отбор.Характеристика.Установить( Результат.Характеристика );
		
		Набор.Прочитать();
		Если Набор.Количество() > 0 Тогда
			Запись = Набор[0];
			
			Если ПоложительноеРешение Тогда
				Запись.Статус = Перечисления.СтатусыВыгрузкиТоваровЯндексМаркет.УтвержденаРекомендация;
			Иначе
				Запись.Статус = Перечисления.СтатусыВыгрузкиТоваровЯндексМаркет.НевернаяРекомендация;
				Запись.ОписаниеОшибки = "Если товар определен неправильно: 
				|Проверьте, что товар относится к одной из категорий, представленных на Маркете.
				|Убедитесь, что вы предоставили наиболее полные и точные данные о товаре. 
				|Если вы не указали какую-либо информацию, уточните входные данные запроса (например, добавьте цвет или размер в характеристики товара или добавьте описание модели, скорректировав данные в поле ""Представление"" на закладке ""Данные о товаре"", укажите базовую цену товара, если она не заполнена).
				|После заполненения данных отправьте повторно публикацию на получение рекомендации (кнопка ""Получить рекомендацию""). 
				|Попробуйте найти товар в поиске по разделу «Покупки» на Маркете. Если товар найдется, SKU на Яндексе можно взять из URL его страницы. Например, если URL страницы товара — https://pokupki.market.yandex.ru/product/7715752, то его SKU на Яндексе — 7715752.Если советы не помогли - отправьте информацию о товаре без SKU на Яндексе (кнопка ""Отправить на модерацию"") - сотрудники Маркета могут подобрать или создать карточки для ваших товаров в личном кабинете, если товар еще не продается на Маркете.";				
			КонецЕсли;
			
			Набор.Записать();
			
			КоличествоОбработанных = КоличествоОбработанных + 1;
			
		КонецЕсли;
	КонецЦикла;
	
	Возврат КоличествоОбработанных;
	
КонецФункции

&НаКлиенте
Процедура ОповеститьНаКлиенте(ТипДействия, КоличествоОбработанных)
	
	СтрокаСообщения = "Созданы карточки товара: %1";
	Если ТипДействия = "НаПолучениеРекомендации" Тогда
		СтрокаСообщения = "Подготовлены карточки для получения рекомендаций: %1";
	ИначеЕсли ТипДействия = "НаМодерацию" Тогда
		СтрокаСообщения = "Подготовлены карточки для отправки на модерацию: %1";
	ИначеЕсли ТипДействия = "НевернаяРекомендация" Тогда
		СтрокаСообщения = "Рекомендации отклонены: %1";
	КонецЕсли;
	
	ОбщегоНазначенияКлиентСервер.СообщитьПользователю(СтрШаблон(СтрокаСообщения, КоличествоОбработанных));
	
КонецПроцедуры

&НаСервереБезКонтекста
Функция ПовторноОтправитьЗапросВыбранныеНаСервере( УчетнаяЗапись, Действие, ВыбранныеЗаписи )
	
	ОтборТовары = ТоварыВыбранныеЗаписиВТаблицуЗначений( ВыбранныеЗаписи );
	
	КоличествоОбработанных = 0;
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	ОтборТовары.Номенклатура КАК Номенклатура,
	|	ОтборТовары.Характеристика КАК Характеристика
	|ПОМЕСТИТЬ ОтборТовары
	|ИЗ
	|	&ОтборТовары КАК ОтборТовары
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	СтатусыПубликацииТоваровЯндексМаркет.ИдентификаторПубликации КАК ИдентификаторПубликации,
	|	СтатусыПубликацииТоваровЯндексМаркет.УчетнаяЗаписьМаркетплейса КАК УчетнаяЗаписьМаркетплейса,
	|	СтатусыПубликацииТоваровЯндексМаркет.Номенклатура КАК Номенклатура,
	|	СтатусыПубликацииТоваровЯндексМаркет.Характеристика КАК Характеристика
	|ИЗ
	|	РегистрСведений.СтатусыПубликацииТоваровЯндексМаркет КАК СтатусыПубликацииТоваровЯндексМаркет
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ОтборТовары КАК ОтборТовары
	|		ПО (ОтборТовары.Номенклатура = СтатусыПубликацииТоваровЯндексМаркет.Номенклатура)
	|			И (ОтборТовары.Характеристика = СтатусыПубликацииТоваровЯндексМаркет.Характеристика)
	|ГДЕ
	|	СтатусыПубликацииТоваровЯндексМаркет.Статус В(&МассивОшибочныхСтатусов)
	|	И СтатусыПубликацииТоваровЯндексМаркет.УчетнаяЗаписьМаркетплейса = &УчетнаяЗапись";
	
	МассивОшибочныхСтатусов = Новый Массив;
	МассивОшибочныхСтатусов.Добавить(Перечисления.СтатусыВыгрузкиТоваровЯндексМаркет.ОшибкаПриОтправкеНаМодерацию);
	МассивОшибочныхСтатусов.Добавить(Перечисления.СтатусыВыгрузкиТоваровЯндексМаркет.ОшибкаПриПолученииРекомендации);
	// модерация не пройдена - обработать отдельно
	МассивОшибочныхСтатусов.Добавить(Перечисления.СтатусыВыгрузкиТоваровЯндексМаркет.МодерацияНеПройдена);
	МассивОшибочныхСтатусов.Добавить(Перечисления.СтатусыВыгрузкиТоваровЯндексМаркет.НевернаяРекомендация);
	МассивОшибочныхСтатусов.Добавить(Перечисления.СтатусыВыгрузкиТоваровЯндексМаркет.РекомендацияНеНайдена);
	
	МассивОшибочныхСтатусов.Добавить( Перечисления.СтатусыВыгрузкиТоваровЯндексМаркет.СозданиеНового );
	
	Если Действие = "НаМодерацию" Тогда
		МассивОшибочныхСтатусов.Добавить( Перечисления.СтатусыВыгрузкиТоваровЯндексМаркет.НаМодерации );
		МассивОшибочныхСтатусов.Добавить( Перечисления.СтатусыВыгрузкиТоваровЯндексМаркет.МодерацияПройдена );
	КонецЕсли;
	
	Запрос.УстановитьПараметр( "МассивОшибочныхСтатусов", МассивОшибочныхСтатусов );
	Запрос.УстановитьПараметр( "УчетнаяЗапись", УчетнаяЗапись );
	Запрос.УстановитьПараметр( "ОтборТовары", ОтборТовары );
	
	Результат = Запрос.Выполнить().Выбрать();
	Если Результат.Количество() = 0 Тогда
		Возврат КоличествоОбработанных;
	КонецЕсли; 
	
	Пока Результат.Следующий() Цикл 
		Набор = РегистрыСведений.СтатусыПубликацииТоваровЯндексМаркет.СоздатьНаборЗаписей();
		
		Набор.Отбор.УчетнаяЗаписьМаркетплейса.Установить( УчетнаяЗапись );
		Набор.Отбор.Номенклатура.Установить( Результат.Номенклатура );
		Набор.Отбор.Характеристика.Установить( Результат.Характеристика );
		
		Набор.Прочитать();
		
		Если Набор.Количество() Тогда
			Запись = Набор[0];
			Если Действие = "НаПолучениеРекомендации" Тогда
				Запись.Статус = Перечисления.СтатусыВыгрузкиТоваровЯндексМаркет.Новый;
			ИначеЕсли Действие = "НаМодерацию" Тогда
				Если ЗначениеЗаполнено(Запись.ИдентификаторТовараПлощадки) Тогда
					Запись.Статус = Перечисления.СтатусыВыгрузкиТоваровЯндексМаркет.УтвержденаРекомендация;
				Иначе
					Запись.Статус = Перечисления.СтатусыВыгрузкиТоваровЯндексМаркет.СозданиеНового;
				КонецЕсли;
			КонецЕсли;
			
			Если ПустаяСтрока( Запись.НаименованиеТовараПлощадки ) Тогда
				Запись.НаименованиеТовараПлощадки = Запись.ПредставлениеТовара;
			КонецЕсли;
			
			Набор.Записать();
			
			КоличествоОбработанных = КоличествоОбработанных + 1;
			
		КонецЕсли;
	КонецЦикла;
	
	Возврат КоличествоОбработанных;
	
КонецФункции

&НаСервере
Процедура ОтобратьПоМаркеруНовыеНаСервере()
	
	ОбщегоНазначенияКлиентСервер.УстановитьЭлементОтбораДинамическогоСписка(
	СтатусыПубликацииТоваровЯндексМаркет,
	"МаркерСтатуса",
	2,
	ВидСравненияКомпоновкиДанных.Равно);
	
	
КонецПроцедуры

&НаСервере
Процедура ОтобратьПоМаркеруВПроцессеНаСервере()
	
	ОбщегоНазначенияКлиентСервер.УстановитьЭлементОтбораДинамическогоСписка(
	СтатусыПубликацииТоваровЯндексМаркет,
	"МаркерСтатуса",
	1,
	ВидСравненияКомпоновкиДанных.Равно);
	
	
КонецПроцедуры

&НаСервере
Процедура ОтобратьПоМаркеруОшибкаНаСервере()
	
	ОбщегоНазначенияКлиентСервер.УстановитьЭлементОтбораДинамическогоСписка(
	СтатусыПубликацииТоваровЯндексМаркет,
	"МаркерСтатуса",
	0,
	ВидСравненияКомпоновкиДанных.Равно);
	
КонецПроцедуры

&НаСервере
Процедура ОтобратьПоМаркеруГотовыНаСервере()
	
	ОбщегоНазначенияКлиентСервер.УстановитьЭлементОтбораДинамическогоСписка(
	СтатусыПубликацииТоваровЯндексМаркет,
	"МаркерСтатуса",
	3,
	ВидСравненияКомпоновкиДанных.Равно);
	
	
КонецПроцедуры

&НаСервере
Процедура ПоказатьВсеНаСервере()
	
	ОбщегоНазначенияКлиентСервер.УдалитьЭлементыГруппыОтбораДинамическогоСписка(
	СтатусыПубликацииТоваровЯндексМаркет,
	"МаркерСтатуса");
	
КонецПроцедуры

&НаСервере
Процедура ОбработкаПодбораТоваровЗаполнитьИзХранилища(АдресЗапасовВХранилище)
	
	ТаблицаДляЗагрузки = ПолучитьИзВременногоХранилища(АдресЗапасовВХранилище);
	
	Если НЕ (ТипЗнч(ТаблицаДляЗагрузки) = Тип("ТаблицаЗначений")
		ИЛИ ТипЗнч(ТаблицаДляЗагрузки) = Тип("Массив")) Тогда
		Возврат;
	КонецЕсли;
	
	Если ТаблицаДляЗагрузки.Количество() = 0 Тогда
		Возврат;
	КонецЕсли;
	
	УчетнаяЗапись = Объект.Ссылка;
	
	Запрос = Новый Запрос();
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	ТаблицаДляЗагрузки.Номенклатура КАК Номенклатура,
	|	ТаблицаДляЗагрузки.Характеристика КАК Характеристика
	|ПОМЕСТИТЬ ВТ
	|ИЗ
	|	&ТаблицаДляЗагрузки КАК ТаблицаДляЗагрузки
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВТ.Номенклатура КАК Номенклатура,
	|	ВТ.Характеристика КАК Характеристика,
	|	ЕСТЬNULL(ЦеныНоменклатуры.Цена, 0) КАК Цена
	|ИЗ
	|	ВТ КАК ВТ
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ЦеныНоменклатуры.СрезПоследних(
	|				&ТекущаяДата,
	|				(Номенклатура, Характеристика) В
	|						(ВЫБРАТЬ
	|							ВТ.Номенклатура КАК Номенклатура,
	|							ВТ.Характеристика КАК Характеристика
	|						ИЗ
	|							ВТ КАК ВТ)
	|					И ВидЦен = &БазовыйПрайсЛист) КАК ЦеныНоменклатуры
	|		ПО ВТ.Номенклатура = ЦеныНоменклатуры.Номенклатура
	|			И ВТ.Характеристика = ЦеныНоменклатуры.Характеристика
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.СтатусыПубликацииТоваровЯндексМаркет КАК СтатусыПубликацииТоваровЯндексМаркет
	|		ПО ВТ.Номенклатура = СтатусыПубликацииТоваровЯндексМаркет.Номенклатура
	|			И ВТ.Характеристика = СтатусыПубликацииТоваровЯндексМаркет.Характеристика
	|			И (СтатусыПубликацииТоваровЯндексМаркет.УчетнаяЗаписьМаркетплейса = &УчетнаяЗапись)
	|ГДЕ
	|	СтатусыПубликацииТоваровЯндексМаркет.Номенклатура ЕСТЬ NULL";
	
	Запрос.Параметры.Вставить("ТекущаяДата", ТекущаяДатаСеанса());
	Запрос.Параметры.Вставить("БазовыйПрайсЛист", ЭтаФорма.ВидЦены);
	Запрос.Параметры.Вставить("ТаблицаДляЗагрузки", ТаблицаДляЗагрузки);
	Запрос.Параметры.Вставить("УчетнаяЗапись", УчетнаяЗапись);
	
	ЗапросВыборка = Запрос.Выполнить().Выбрать();
	
	Пока ЗапросВыборка.Следующий() Цикл
		
		Набор = РегистрыСведений.СтатусыПубликацииТоваровЯндексМаркет.СоздатьНаборЗаписей();
		Набор.Отбор.УчетнаяЗаписьМаркетплейса.Установить( УчетнаяЗапись );
		Набор.Отбор.Номенклатура.Установить( ЗапросВыборка.Номенклатура );
		Набор.Отбор.Характеристика.Установить( ЗапросВыборка.Характеристика );
		Набор.Прочитать();
		Если Набор.Количество() Тогда
			Запись = Набор[0];
			Запись.БазоваяЦена = ЗапросВыборка.Цена;
		Иначе 
			Запись = Набор.Добавить();
			Запись.УчетнаяЗаписьМаркетплейса = УчетнаяЗапись;
			Запись.Номенклатура = ЗапросВыборка.Номенклатура;
			Запись.Характеристика = ЗапросВыборка.Характеристика;
			Запись.БазоваяЦена = ЗапросВыборка.Цена;
		КонецЕсли;
		Набор.Записать();
		
	КонецЦикла;
	
КонецПроцедуры

&НаСервере
Функция ИдКампанийИзСкладовСтрокойПолучить()
	ИдКампанийСтрокой = "";
	Для Каждого ТаблицаСкладовСтрока Из ТаблицаСкладов Цикл
		ИдКампанийСтрокой = ИдКампанийСтрокой + ТаблицаСкладовСтрока.ИдентификаторКампанииМаркетплейса + ";";
	КонецЦикла;
	
	Возврат ИдКампанийСтрокой;
КонецФункции

&НаСервере
Процедура УчетнаяЗаписьНаименованиеПоУмолчаниюУстановить()

	Если ПустаяСтрока( Объект.Наименование ) Тогда
		Объект.Наименование = "Яндекс Маркет " + ТекущаяДатаСеанса();
	КонецЕсли;

КонецПроцедуры

&НаСервере
Процедура ЗаписатьИзмененияНаСервере( ЗаписатьДанныеАвторизацииЯндексМаркет = Ложь, ЗаписатьТаблицуСкладов = Истина )
	
	УчетнаяЗаписьНаименованиеПоУмолчаниюУстановить();
	
	ИдКампанийИзСкладовСтрокой = ИдКампанийИзСкладовСтрокойПолучить();
	Объект.ИдентификаторКлиента = ?(ПустаяСтрока(ИдКампанийИзСкладовСтрокой), "<Идентификатор кампании не задан>", ИдКампанийИзСкладовСтрокой );
	
	ЭтаФорма.Записать();

	УчетнаяЗапись = Объект.Ссылка;
	
	Если ЗаписатьДанныеАвторизацииЯндексМаркет = Истина Тогда
		ДанныеАвторизацииУстановлены = ИнтеграцияСЯндексМаркетСервер.ЗаписатьНастройкиАвторизации( УчетнаяЗапись, ЭтаФорма.ДанныеПриложенияЯндексМаркет );
		ЭтаФорма.ЯндексМаркетДанныеАвторизацииПомещеныВХранилище = ЯндексМаркетПроверитьДанныеАвторизацииПомещеныВХранилище( УчетнаяЗапись );
	КонецЕсли;
	
	Если ЗаписатьТаблицуСкладов = Истина Тогда
		ИнтеграцияСЯндексМаркетСервер.СкладыСоответствияЗаписать( УчетнаяЗапись, ТаблицаСкладов );
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Функция ЗаписатьИзмененияНаКлиенте( ПроверитьТаблицуСкладов = Истина )

	Если ПроверитьТаблицуСкладов = Истина И ТаблицаСкладовЗаполненаКорректно() <> Истина Тогда
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю( "Изменения не записаны." );
		Возврат Ложь;
	КонецЕсли;

	ЗаписатьИзмененияНаСервере();
	Оповестить( "ЗаписьИнтеграцииМаркетплейса", , Объект.Ссылка );
	
	Возврат Истина;
КонецФункции

&НаСервере
Функция АдресАвторизацииЯндекс()
	Возврат ИнтеграцияСЯндексМаркетСервер.АдресАвторизацииЯндекс();
КонецФункции

&НаСервереБезКонтекста
Функция НастройкиИзКонстантыПеренестиВСправочник() Экспорт
	
	// временно до удаления константы УдалитьНастройкиЯндексМаркета
	
	УстановитьПривилегированныйРежим( Истина );
	
	Если Метаданные.Константы.Найти( "УдалитьНастройкиЯндексМаркета" ) = Неопределено Тогда
		Возврат Неопределено;
	КонецЕсли;
	
	НастройкиСтрока = Константы.УдалитьНастройкиЯндексМаркета.Получить();
	Если ПустаяСтрока( НастройкиСтрока ) Тогда
		Возврат Неопределено;
	КонецЕсли;
	
	Попытка
		НастройкиЯндексМаркет = ЗначениеИзСтрокиВнутр( НастройкиСтрока );
	Исключение
		Возврат Неопределено;
	КонецПопытки;

	Если ТипЗнч( НастройкиЯндексМаркет ) <> Тип( "Структура" ) Тогда
		Возврат Неопределено;
	КонецЕсли;
	
	НастройкиПеренесеныВСправочник = ИнтеграцияСМаркетплейсамиСервер.СтруктураСвойствоЗначениеПолучить( НастройкиЯндексМаркет, "НастройкиПеренесеныВСправочник", Ложь );
	Если НастройкиПеренесеныВСправочник = Истина Тогда
		Возврат Неопределено;
	КонецЕсли;
	
	НомерМагазина = ИнтеграцияСМаркетплейсамиСервер.СтруктураСвойствоЗначениеПолучить( НастройкиЯндексМаркет, "НомерМагазина", "" );
	Если ПустаяСтрока( НомерМагазина ) Тогда
		Возврат Неопределено;
	КонецЕсли;
	
	Позиция = СтрНайти( НомерМагазина, "-" );
	Если Позиция > 0 Тогда
		НомерМагазина = Сред( НомерМагазина, Позиция + 1 );
	КонецЕсли;
	
	УчетнаяЗаписьСсылка = Справочники.УчетныеЗаписиМаркетплейсов.НайтиПоРеквизиту( "ИдентификаторКлиента", "" + НомерМагазина + ";" );
	Если ЗначениеЗаполнено( УчетнаяЗаписьСсылка ) Тогда
		Возврат Неопределено;
	КонецЕсли;
	
	УчетнаяЗаписьОбъект = Справочники.УчетныеЗаписиМаркетплейсов.СоздатьЭлемент();
	
	УчетнаяЗаписьОбъект.Наименование = "Яндекс маркет " + НомерМагазина;
	УчетнаяЗаписьОбъект.ИдентификаторКлиента = "" + НомерМагазина + ";";
	УчетнаяЗаписьОбъект.ДатаСоздания = ТекущаяДатаСеанса();
	УчетнаяЗаписьОбъект.ВидМаркетплейса = Перечисления.ВидыМаркетплейсов.МаркетплейсЯндексМаркет;
	УчетнаяЗаписьОбъект.Организация = "";

	НастройкаЗавершена = ИнтеграцияСМаркетплейсамиСервер.СтруктураСвойствоЗначениеПолучить( НастройкиЯндексМаркет, "НастройкаЗавершена", Ложь );
	УчетнаяЗаписьОбъект.НастройкаЗавершена = НастройкаЗавершена;
	
	ВидЦены = ИнтеграцияСМаркетплейсамиСервер.СтруктураСвойствоЗначениеПолучить( НастройкиЯндексМаркет, "ВидЦен", Неопределено );
	
	СостояниеНастроек = ИнтеграцияСМаркетплейсамиСервер.СтруктураСвойствоЗначениеПолучить( НастройкиЯндексМаркет, "СостояниеНастроек", Неопределено );
	Если ТипЗнч( СостояниеНастроек ) = Тип( "ТаблицаЗначений" )Тогда
		УчетнаяЗаписьОбъект.СостояниеНастроек.Загрузить( СостояниеНастроек ); 
	КонецЕсли;
	
	СостояниеНастроекСтрока = УчетнаяЗаписьОбъект.СостояниеНастроек.Добавить();
	СостояниеНастроекСтрока.ИмяСтраницы = "Склады";
	СостояниеНастроекСтрока.Статус = 2;
	
	УчетнаяЗаписьОбъект.Записать();
	
	УчетнаяЗаписьСсылка = УчетнаяЗаписьОбъект.Ссылка;
	
	// заполнение Измерения УчетнаяЗаписьМаркетплейса в регистре сведений СтатусыПубликацииТоваровЯндексМаркет
	СтатусыВыборка = РегистрыСведений.СтатусыПубликацииТоваровЯндексМаркет.Выбрать();
	Пока СтатусыВыборка.Следующий() Цикл
		Если ЗначениеЗаполнено( СтатусыВыборка.УчетнаяЗаписьМаркетплейса ) Тогда
			Продолжить;
		КонецЕсли;
		СтатусыМенеджер = СтатусыВыборка.ПолучитьМенеджерЗаписи();
		СтатусыМенеджер.Прочитать();
		СтатусыМенеджер.УчетнаяЗаписьМаркетплейса = УчетнаяЗаписьСсылка;
		СтатусыМенеджер.Записать();
	КонецЦикла;
	
	// добавим идентификатор кампании в склады
	СоответствияОбъектовМаркетплейсовЗапись = РегистрыСведений.СоответствияОбъектовМаркетплейсов.СоздатьМенеджерЗаписи();
	СоответствияОбъектовМаркетплейсовЗапись.УчетнаяЗаписьМаркетплейса = УчетнаяЗаписьСсылка;
	СоответствияОбъектовМаркетплейсовЗапись.ВидОбъектаМаркетплейса = Перечисления.ВидыОбъектовМаркетплейсов.Склад;
	СоответствияОбъектовМаркетплейсовЗапись.ИдентификаторВладельцаОбъектаМаркетплейса = НомерМагазина; // Идентификатор кампании маркетплейса
	СоответствияОбъектовМаркетплейсовЗапись.НаименованиеОбъектаМаркетплейса = "Необходимо заполнить все обязательные поля";
	СоответствияОбъектовМаркетплейсовЗапись.Записать();
	
	
	НастройкиЯндексМаркет.Вставить( "НастройкиПеренесеныВСправочник", Истина );
	Константы.УдалитьНастройкиЯндексМаркета.Установить( ЗначениеВСтрокуВнутр( НастройкиЯндексМаркет ) );
	
	// заменить данные авторизации в безопасном хранилище на ссылку УчетнаяЗапись
	// старые данные
	ДанныеАвторизацииРеквизиты = "access_token, access_token_expires, refresh_token, campaign_id";

	ДанныеАвторизации = ОбщегоНазначения.ПрочитатьДанныеИзБезопасногоХранилища(УчетнаяЗаписьСсылка, ДанныеАвторизацииРеквизиты, Ложь);
	Если Не ЗначениеЗаполнено( ДанныеАвторизации.access_token ) Тогда
		// нужно перенести
		ДанныеАвторизации = ОбщегоНазначения.ПрочитатьДанныеИзБезопасногоХранилища(
		"Организация/ЯндексМаркетВитринаПлюсФулфилмент",
		ДанныеАвторизацииРеквизиты, Ложь);
		
		ИнтеграцияСЯндексМаркетСервер.ЗаписатьНастройкиАвторизации(УчетнаяЗаписьСсылка, ДанныеАвторизации);
	КонецЕсли;
	
	УстановитьПривилегированныйРежим( Ложь );
	
	Возврат УчетнаяЗаписьСсылка;
КонецФункции

&НаСервере
Функция ФормаЭлементыОтборыУстановить(УчетнаяЗапись)

	ОбщегоНазначенияКлиентСервер.УстановитьЭлементОтбораДинамическогоСписка(
	СтатусыПубликацииТоваровЯндексМаркет, "УчетнаяЗаписьМаркетплейса",
	УчетнаяЗапись, ВидСравненияКомпоновкиДанных.Равно);
	
	Возврат Истина;
КонецФункции

&НаКлиенте
Процедура ПоказатьСтраницуДополнительно() 
	
	Если НЕ Объект.НастройкаЗавершена Тогда
		Возврат;
	КонецЕсли;
	
	ОбновитьПризнакПоПунктуНаКлиенте("Дополнительно");
КонецПроцедуры

&НаКлиенте
Процедура ПоказатьСтраницуПриветствие()
	
	Если НЕ Объект.НастройкаЗавершена Тогда
		Возврат;
	КонецЕсли;
	
	ОбновитьПризнакПоПунктуНаКлиенте("Приветствие");
КонецПроцедуры

&НаКлиенте
Процедура ОбновитьПризнакПоПунктуНаКлиенте(ИмяПункта)
	
	Для Каждого Стр Из Объект.СостояниеНастроек Цикл
		Если СтрНайти( ",СтатусыТовара,Ошибки,", "," + Стр.ИмяСтраницы + "," ) > 0 Тогда
			Продолжить;
		КонецЕсли;
	
		Если Стр.Статус = 2 Тогда
			СтатусДляОтображения = "0";
		Иначе
			СтатусДляОтображения = Стр.Статус;
		КонецЕсли;
		Элементы["СтраницыЭтапыНастройки" + Стр.ИмяСтраницы].ТекущаяСтраница = Элементы["Страница" + Стр.ИмяСтраницы + СтатусДляОтображения];
		Элементы["" + Стр.ИмяСтраницы + "Надпись"].Шрифт = Новый Шрифт();
	КонецЦикла;
	
	Элементы["СтраницыЭтапыНастройки" + ИмяПункта].ТекущаяСтраница = Элементы["Страница" + ИмяПункта + "1"];
	
	Элементы["" + ИмяПункта + "Надпись"].Шрифт = Новый Шрифт("Arial",8,Истина);
	
	Элементы.СтраницыПунктыМеню.ТекущаяСтраница = Элементы["Страница" + ИмяПункта];
	
	Если ИмяПункта = "Товары" Тогда
		Элементы.СтатусыПубликацииТоваровЯндексМаркет.Обновить();
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ПоказатьСтраницуТовары()
	
	Если НЕ Объект.НастройкаЗавершена Тогда
		Возврат;
	КонецЕсли;
	
	ОбновитьПризнакПоПунктуНаКлиенте("Товары");
КонецПроцедуры

&НаКлиенте
Процедура ПоказатьСтраницуСклады()
	
	Если НЕ Объект.НастройкаЗавершена Тогда
		Возврат;
	КонецЕсли;
	
	ОбновитьПризнакПоПунктуНаКлиенте("Склады");
КонецПроцедуры

&НаКлиенте
Процедура ОткрытьИнструкцию()
	
	ФайловаяСистемаКлиент.ОткрытьНавигационнуюСсылку("https://its.1c.ru/db/metod81#content:7953:hdoc");
	
КонецПроцедуры

&НаКлиенте
Процедура УдалениеНастройкиИнтеграцииЗавершение(Результат, ДополнительныеПараметры) Экспорт
	
	Если Результат = Истина Тогда
		
		Закрыть(Истина);
		
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ОбновитьДанныеФормыПослеВыполненияФоновогоЗадания(Результат, ДополнительныеПараметры) Экспорт

	Если ТипЗнч(Результат) = Тип("Структура") Тогда
		
		Если Результат.Свойство("АдресРезультата") Тогда
			
			РезультатВыполнения = ПолучитьИзВременногоХранилища(Результат.АдресРезультата);
			Если ТипЗнч( РезультатВыполнения ) = Тип( "Структура" ) Тогда
				
				Если РезультатВыполнения.Свойство( "Код" ) И ЗначениеЗаполнено( РезультатВыполнения.Код ) Тогда
					ОбщегоНазначенияКлиент.СообщитьПользователю(РезультатВыполнения.Описание);
				КонецЕсли;
				
				Если РезультатВыполнения.Свойство( "КодОшибки" ) И ЗначениеЗаполнено( РезультатВыполнения.КодОшибки ) Тогда
					ОбщегоНазначенияКлиент.СообщитьПользователю(РезультатВыполнения.ОписаниеОшибки);
				КонецЕсли;
				
			КонецЕсли;
			
		КонецЕсли;
		
		Если Результат.Свойство( "ПодробноеПредставлениеОшибки" ) И ЗначениеЗаполнено( Результат.ПодробноеПредставлениеОшибки ) Тогда
			ОбщегоНазначенияКлиент.СообщитьПользователю( Результат.ПодробноеПредставлениеОшибки );
		КонецЕсли;
		
		Если Результат.Свойство( "Сообщения" ) Тогда
			Для Каждого СообщениеЭлемент Из Результат.Сообщения Цикл
				ОбщегоНазначенияКлиент.СообщитьПользователю( СообщениеЭлемент.Текст );
			КонецЦикла;
		КонецЕсли;
		
	КонецЕсли;
	
	Элементы.СтатусыПубликацииТоваровЯндексМаркет.Обновить();
	
КонецПроцедуры

&НаКлиенте
Процедура КнопкаЛогОткрыть(Команда)
	ПараметрыФормы = Новый Структура( "УчетнаяЗапись", Объект.Ссылка );
	ОткрытьФорму( "РегистрСведений.ОбменСВнешнимиСистемамиЛогирование.ФормаСписка", ПараметрыФормы, , ЭтотОбъект.УникальныйИдентификатор );
КонецПроцедуры

&НаКлиенте
Процедура КнопкаОстаткиТоваровМаркетплейсовОткрыть(Команда)
	ОткрытьФорму( "РегистрСведений.ОстаткиТоваровМаркетплейсов.ФормаСписка" );
КонецПроцедуры

&НаКлиенте
Процедура КнопкаСоответствияОбъектовМаркетплейсовФормаСписка(Команда)
	ОткрытьФорму( "РегистрСведений.СоответствияОбъектовМаркетплейсов.ФормаСписка" );
КонецПроцедуры

&НаКлиенте
Процедура КнопкаСтатусыПубликацииТоваровЯндексМаркетФормаСписка(Команда)
	ОткрытьФорму( "РегистрСведений.СтатусыПубликацииТоваровЯндексМаркет.ФормаСписка" );
КонецПроцедуры

&НаКлиенте
Процедура КнопкаВыгруженныеЦеныМаркетплейсовОткрыть(Команда)
	ОткрытьФорму( "РегистрСведений.ВыгруженныеЦеныМаркетплейсов.ФормаСписка" );
КонецПроцедуры

&НаСервере
Процедура ПослеЗаписиНаСервере(ТекущийОбъект, ПараметрыЗаписи)
	ФормаЭлементыОтборыУстановить( ТекущийОбъект.Ссылка );
	
	УправлениеДоступом.ПослеЗаписиНаСервере(ЭтотОбъект, ТекущийОбъект, ПараметрыЗаписи);
КонецПроцедуры

&НаСервереБезКонтекста
Функция ЯндексМаркетПроверитьДанныеАвторизацииПомещеныВХранилище( УчетнаяЗапись )
	Возврат ИнтеграцияСЯндексМаркетСервер.ЯндексМаркетПроверитьДанныеАвторизацииПомещеныВХранилище(УчетнаяЗапись);
КонецФункции

&НаКлиентеНаСервереБезКонтекста
Функция СкладURLПолучить( МодельСклада, ИдентификаторКампанииМаркетплейса, СкладМаркетплейсИдентификатор )
    
    Если ПустаяСтрока( ИдентификаторКампанииМаркетплейса ) Тогда
    	Возврат "";
    КонецЕсли;
    
    Если МодельСклада = ПредопределенноеЗначение( "Перечисление.МоделиСкладовЯндексМаркета.FBY" ) Тогда
		URL = СтрШаблон( "https://partner.market.yandex.ru/supplier/%1/onboarding", ИдентификаторКампанииМаркетплейса );
	Иначе
		Если  ПустаяСтрока( СкладМаркетплейсИдентификатор )	Тогда
			URL = "";
		Иначе
			URL = СтрШаблон( "https://partner.market.yandex.ru/supplier/%1/warehouses/%2", ИдентификаторКампанииМаркетплейса, СкладМаркетплейсИдентификатор );
		КонецЕсли;
	КонецЕсли;
	
	Возврат URL;
КонецФункции

&НаКлиенте
Функция ТаблицаСкладовСтрокиУникальныПроверить()
	
	// проверка уникальности идентификаторов в строках таблицы складов
	
	КолонкиДляПроверкиИменаСтрокой = "ИдентификаторКампанииМаркетплейса, СкладМаркетплейсИдентификатор, Склад1С";

	ПроверкаУникальностиИдентификаторов = Новый Соответствие;
	КолонкиИмена = СтрРазделить( КолонкиДляПроверкиИменаСтрокой, ", ", Ложь );
	Для Каждого ТаблицаСкладовСтрока Из ТаблицаСкладов Цикл
	
		Для Каждого КолонкаИмя Из КолонкиИмена Цикл
			Значение = ПроверкаУникальностиИдентификаторов.Получить( ТаблицаСкладовСтрока[ КолонкаИмя ] );
			Если Не ЗначениеЗаполнено( Значение ) Тогда
				Продолжить;
			КонецЕсли;
			Если Значение <> Неопределено Тогда
				Возврат КолонкаИмя;
			КонецЕсли;
			ПроверкаУникальностиИдентификаторов.Вставить( ТаблицаСкладовСтрока[ КолонкаИмя ], Истина );
		КонецЦикла;
		
	КонецЦикла;

	Возврат Истина;
КонецФункции

&НаКлиенте
Функция ТаблицаСкладовЗаполненаКорректно()
   
	Если ТаблицаСкладов.Количество() = 0 Тогда
		Возврат Ложь;
	КонецЕсли;
	
	МодельFBY = ПредопределенноеЗначение("Перечисление.МоделиСкладовЯндексМаркета.FBY" );
	
	
	Для Каждого ТаблицаСкладовСтрока Из ТаблицаСкладов Цикл
		
		Если ПустаяСтрока( ТаблицаСкладовСтрока.ИдентификаторКампанииМаркетплейса )
			Или Не ЗначениеЗаполнено( ТаблицаСкладовСтрока.МодельСклада )
			Или ( ПустаяСтрока( ТаблицаСкладовСтрока.СкладМаркетплейсИдентификатор ) И  ТаблицаСкладовСтрока.МодельСклада <> МодельFBY )
			Или (Не ЗначениеЗаполнено( ТаблицаСкладовСтрока.Склад1С ) И ТаблицаСкладовСтрока.МодельСклада <> МодельFBY )
			Или Не ЗначениеЗаполнено( ТаблицаСкладовСтрока.ВидЦены )
			Тогда
			ОбщегоНазначенияКлиентСервер.СообщитьПользователю(НСтр( "ru = 'В таблице складов заполнены не все обязательные поля.'" ));
			Возврат Ложь;
		КонецЕсли;
		
		ТаблицаСкладовСтрокиУникальны = ТаблицаСкладовСтрокиУникальныПроверить();
		Если ТаблицаСкладовСтрокиУникальны <> Истина Тогда
			КолонкаИмя = ТаблицаСкладовСтрокиУникальны;
			ЭлементСНеуникальнымЗначением = Элементы[ "ТаблицаСкладов" + КолонкаИмя ];
			КолонкаЗаголовок = ЭлементСНеуникальнымЗначением.Заголовок;
			Значение = ТаблицаСкладовСтрока[ КолонкаИмя ];
			ОбщегоНазначенияКлиентСервер.СообщитьПользователю(
			НСтр( "ru = 'В таблице складов повторение значения """ + Значение + """ в колонке """ + КолонкаЗаголовок + """. Значения в разных строках должны быть уникальными.'" ));
			Возврат Ложь;
		КонецЕсли;
	КонецЦикла;
	
	Возврат Истина;
КонецФункции

&НаКлиенте
Процедура ПоКнопкеТаблицаСкладовURLПерейти(Команда)
	ТекущиеДанные = Элементы.ТаблицаСкладов.ТекущиеДанные;
	Если ТекущиеДанные = Неопределено Тогда
		Возврат;
	КонецЕсли;

	Если ПустаяСтрока( ТекущиеДанные.URL ) Тогда
		Возврат;
	КонецЕсли;
	
	ФайловаяСистемаКлиент.ОткрытьНавигационнуюСсылку( ТекущиеДанные.URL );
КонецПроцедуры

&НаКлиенте
Процедура ТаблицаСкладовВыбор( Элемент, ВыбраннаяСтрока, Поле, СтандартнаяОбработка )
	Если Поле.Имя = "ТаблицаСкладовURL" Тогда
		URL = Элементы.ТаблицаСкладов.ТекущиеДанные.URL;
		Если Не ПустаяСтрока( URL ) Тогда
			ФайловаяСистемаКлиент.ОткрытьНавигационнуюСсылку( URL );
		КонецЕсли;
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура ТаблицаСкладовПриНачалеРедактирования(Элемент, НоваяСтрока, Копирование)
	ТекущиеДанные = Элемент.ТекущиеДанные;
	Если Копирование = Истина Тогда
		ТекущиеДанные.ИдентификаторКампанииМаркетплейса = "";
		ТекущиеДанные.СкладМаркетплейсИдентификатор = "";
		ТекущиеДанные.Склад1С = Неопределено;
		ТекущиеДанные.URL = "";
	КонецЕсли;
КонецПроцедуры

&НаСервереБезКонтекста
Процедура СтатусыПубликацииТоваровЯндексМаркетПриПолученииДанныхНаСервере(ИмяЭлемента, Настройки, Строки)

	Если Строки.Количество() = 0 Тогда
		Возврат;
	КонецЕсли;
	
	ТаблицаТоваров = Новый ТаблицаЗначений;
	ТаблицаТоваров.Колонки.Добавить("УчетнаяЗаписьМаркетплейса", Новый ОписаниеТипов("СправочникСсылка.УчетныеЗаписиМаркетплейсов"));
	ТаблицаТоваров.Колонки.Добавить("Номенклатура", Новый ОписаниеТипов("СправочникСсылка.Номенклатура"));
	ТаблицаТоваров.Колонки.Добавить("Характеристика", Новый ОписаниеТипов("СправочникСсылка.ХарактеристикиНоменклатуры"));

	Для Каждого КлючЗаписи Из Строки.ПолучитьКлючи() Цикл
		ТаблицаТоваровСтрока = ТаблицаТоваров.Добавить();
		ЗаполнитьЗначенияСвойств( ТаблицаТоваровСтрока, КлючЗаписи );
	КонецЦикла;
    
    УчетнаяЗапись = ТаблицаТоваров[0].УчетнаяЗаписьМаркетплейса;
    
    ЗапросТекст = 
    "ВЫБРАТЬ
    |	ТаблицаТоваров.УчетнаяЗаписьМаркетплейса КАК УчетнаяЗаписьМаркетплейса,
    |	ТаблицаТоваров.Номенклатура КАК Номенклатура,
    |	ТаблицаТоваров.Характеристика КАК Характеристика
    |ПОМЕСТИТЬ ВТТовары
    |ИЗ
    |	&ТаблицаТоваров КАК ТаблицаТоваров
    |;
    |
    |////////////////////////////////////////////////////////////////////////////////
    |ВЫБРАТЬ
    |	ВыгруженныеЦеныМаркетплейсов.Номенклатура КАК Номенклатура,
    |	ВыгруженныеЦеныМаркетплейсов.Характеристика КАК Характеристика,
    |	МАКСИМУМ(ВыгруженныеЦеныМаркетплейсов.Цена) КАК ЦенаМаксимальная,
    |	МИНИМУМ(ВыгруженныеЦеныМаркетплейсов.Цена) КАК ЦенаМинимальная
    |ИЗ
    |	РегистрСведений.ВыгруженныеЦеныМаркетплейсов КАК ВыгруженныеЦеныМаркетплейсов
    |		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТТовары КАК ВТТовары
    |		ПО (ВТТовары.УчетнаяЗаписьМаркетплейса = ВыгруженныеЦеныМаркетплейсов.УчетнаяЗаписьМаркетплейса)
    |			И (ВТТовары.Номенклатура = ВыгруженныеЦеныМаркетплейсов.Номенклатура)
    |			И (ВТТовары.Характеристика = ВыгруженныеЦеныМаркетплейсов.Характеристика)
    |
    |СГРУППИРОВАТЬ ПО
    |	ВыгруженныеЦеныМаркетплейсов.Номенклатура,
    |	ВыгруженныеЦеныМаркетплейсов.Характеристика";
    
    Запрос = Новый Запрос( ЗапросТекст );
    Запрос.УстановитьПараметр( "ТаблицаТоваров", ТаблицаТоваров );
    
    ЗапросВыборка = Запрос.Выполнить().Выбрать();
    Если ЗапросВыборка.Количество() = 0 Тогда
    	Возврат;
    КонецЕсли;

	СтруктураОтбора = Новый Структура();
	СтруктураОтбора.Вставить( "УчетнаяЗаписьМаркетплейса", УчетнаяЗапись );
	СтруктураОтбора.Вставить( "Номенклатура" );
	СтруктураОтбора.Вставить( "Характеристика" );
    
    Пока ЗапросВыборка.Следующий() Цикл

		СтруктураОтбора.Номенклатура = ЗапросВыборка.Номенклатура;
		СтруктураОтбора.Характеристика = ЗапросВыборка.Характеристика;
		КлючЗаписи = РегистрыСведений.СтатусыПубликацииТоваровЯндексМаркет.СоздатьКлючЗаписи( СтруктураОтбора );
		
		ДанныеСтрокиСписка = Строки[ КлючЗаписи ].Данные;

		Если ЗапросВыборка.ЦенаМинимальная = ЗапросВыборка.ЦенаМаксимальная Тогда
			ДанныеСтрокиСписка.ВыгруженныеЦены = "" + ЗапросВыборка.ЦенаМинимальная;
		Иначе
			ДанныеСтрокиСписка.ВыгруженныеЦены = "" + ЗапросВыборка.ЦенаМинимальная + " - " + ЗапросВыборка.ЦенаМаксимальная;
		КонецЕсли;
    	
    КонецЦикла;
    
КонецПроцедуры

&НаКлиенте
Процедура ТаблицаСкладовМодельПриИзменении(Элемент)
	СкладыТекущиеДанные = Элементы.ТаблицаСкладов.ТекущиеДанные;
	Если СкладыТекущиеДанные.МодельСклада = ПредопределенноеЗначение( "Перечисление.МоделиСкладовЯндексМаркета.FBY" ) Тогда
		СкладыТекущиеДанные.Склад1С = Неопределено;
	КонецЕсли;
КонецПроцедуры

&НаСервере
Процедура ПолучитьСведенияОСкладахИзЯндексМаркетНаСервере( УчетнаяЗапись )
    
    ЭтаФорма.СкладыИзЯндексМаркета.Очистить();
    
	УчетнаяЗапись = Объект.Ссылка;
	Если УчетнаяЗапись.Пустая() Тогда
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю( "Учетная запись не записана." );
		Возврат;
	КонецЕсли;
	
	Кампании = ИнтеграцияСЯндексМаркетСервер.ОбменДаннымиКампанииПолучить( УчетнаяЗапись );
	Если ТипЗнч( Кампании ) <> Тип( "Массив" ) Тогда
		Возврат;
	КонецЕсли;

	Если Кампании.Количество() = 0 Тогда
		Возврат;
	КонецЕсли;
	
	Отбор = Новый Структура( "ИдентификаторКампанииМаркетплейса" );
	КоличествоДобавлено = 0;
	Для Каждого КампанияЭлемент Из Кампании Цикл
	
		Отбор.ИдентификаторКампанииМаркетплейса = КампанияЭлемент.ИдентификаторКампании;
		ТаблицаСкладовСтроки = ТаблицаСкладов.НайтиСтроки( Отбор );
		Если ТаблицаСкладовСтроки.Количество() > 0 Тогда
			Продолжить;
		КонецЕсли;

		Значение = Новый Структура( "НаименованиеМагазина, ИдентификаторКампании", 
		КампанияЭлемент.НаименованиеМагазина, КампанияЭлемент.ИдентификаторКампании );
		
		ЭтаФорма.СкладыИзЯндексМаркета.Добавить( Значение, "" + КампанияЭлемент.НаименованиеМагазина + ": " + КампанияЭлемент.ИдентификаторКампании );
	КонецЦикла;

КонецПроцедуры

&НаКлиенте
Процедура ПолучитьСведенияОСкладахИзЯндексМаркет()

	УчетнаяЗапись = Объект.Ссылка;
	Если УчетнаяЗапись.Пустая() Тогда
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю( "Учетная запись не записана." );
		Возврат;
	КонецЕсли;
	ПолучитьСведенияОСкладахИзЯндексМаркетНаСервере( УчетнаяЗапись );

КонецПроцедуры

&НаКлиенте
Процедура ТаблицаСкладовИдентификаторКампанииМаркетплейсаПослеВыбора( п1, п2 ) Экспорт
	Если п1 = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	ТекущиеДанные = Элементы.ТаблицаСкладов.ТекущиеДанные;
	Если ТекущиеДанные = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	ТекущиеДанные.ИдентификаторКампанииМаркетплейса = п1.Значение.ИдентификаторКампании;
	ТекущиеДанные.НаименованиеСкладаМаркетплейса = п1.Значение.НаименованиеМагазина;
КонецПроцедуры

&НаКлиенте
Процедура ТаблицаСкладовИдентификаторКампанииМаркетплейсаНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	
	ПолучитьСведенияОСкладахИзЯндексМаркет();
	
	Оповещение = Новый ОписаниеОповещения( "ТаблицаСкладовИдентификаторКампанииМаркетплейсаПослеВыбора", ЭтотОбъект );
	ПоказатьВыборИзСписка( Оповещение, ЭтаФорма.СкладыИзЯндексМаркета );
	
КонецПроцедуры

&НаКлиенте
Процедура ТаблицаСкладовПередОкончаниемРедактирования(Элемент, НоваяСтрока, ОтменаРедактирования, Отказ)

	ТекущиеДанные = Элементы.ТаблицаСкладов.ТекущиеДанные;
	Если ТекущиеДанные = Неопределено Тогда
		Возврат;
	КонецЕсли;

	ТекущиеДанные.URL = СкладURLПолучить( ТекущиеДанные.МодельСклада, ТекущиеДанные.ИдентификаторКампанииМаркетплейса, ТекущиеДанные.СкладМаркетплейсИдентификатор );

КонецПроцедуры

&НаСервереБезКонтекста
Функция ЯндексМаркетПриложениеДанныеПолучить()
	Возврат ИнтеграцияСЯндексМаркетСервер.ЯндексМаркетПриложениеДанныеПолучить();
КонецФункции

&НаКлиенте
Процедура УстановитьПараметрыПодключенияКЯндексМаркетНажатие(Элемент)
    УчетнаяЗапись = Объект.Ссылка;
    
	ПараметрыФормы = Новый Структура("ПараметрыПриложенияЯндекс, УчетнаяЗаписьМаркетплейса",
		ЯндексМаркетПриложениеДанныеПолучить(), УчетнаяЗапись);
	
	ОткрытьФорму("Справочник.УчетныеЗаписиМаркетплейсов.Форма.АвторизацияПриложенияЯндекс", ПараметрыФормы, ЭтаФорма );

КонецПроцедуры

&НаСервере
Процедура ПриЧтенииНаСервере(ТекущийОбъект)
	УправлениеДоступом.ПриЧтенииНаСервере(ЭтотОбъект, ТекущийОбъект);
КонецПроцедуры

#КонецОбласти




