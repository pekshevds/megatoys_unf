
#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	Если Параметры.Свойство("ПериодРегистрации") Тогда
		Объект.ПериодРегистрации = КонецМесяца(Параметры.ПериодРегистрации);
	Иначе
		Объект.ПериодРегистрации = КонецМесяца(ТекущаяДатаСеанса());
	КонецЕсли; 
	ОтображениеПериодаРегистрации = Формат(Объект.ПериодРегистрации, "ДФ='MMMM yyyy'");
	ЗаполнитьОрганизацииСЗадолженностями();
	Заголовок = НСтр("ru = 'Оформление передачи товаров между организациями (шаг 1/3)'");
	
КонецПроцедуры

&НаКлиенте
Процедура ОбработкаВыбора(ВыбранноеЗначение, ИсточникВыбора)
	
	Если ТипЗнч(ИсточникВыбора) = Тип("ФормаКлиентскогоПриложения")
		И СтрНайти(ИсточникВыбора.ИмяФормы, "ФормаКалендаря") > 0 Тогда
		
		Объект.ПериодРегистрации = КонецМесяца(ВыбранноеЗначение);
		ЗарплатаИПерсоналКлиент.ПриИзмененииПериодаРегистрации(ЭтаФорма);
		ЗаполнитьОрганизацииСЗадолженностями();
		
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ПередЗакрытием(Отказ, ЗавершениеРаботы, ТекстПредупреждения, СтандартнаяОбработка)
	
	Если СозданныеДокументы.Количество() > 0 Тогда
		Оповестить("СозданыДокументыПередачиМеждуОрганизациями");
	КонецЕсли; 
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовФормы

&НаКлиенте
Процедура ТаблицаПолучателейПриАктивизацииСтроки(Элемент)
	
	ТекДанные = Элементы.ТаблицаПолучателей.ТекущиеДанные;
	Если ТекДанные <> Неопределено И ТекДанные.Получатель <> Организация Тогда
		Организация = ТекДанные.Получатель;
		ОбщегоНазначенияКлиентСервер.УстановитьЭлементОтбораДинамическогоСписка( НастройкиПередачи, "ОрганизацияПродавец", Организация,
		ВидСравненияКомпоновкиДанных.Равно, НСтр("ru = 'Получатель'"), Истина);
		НастроитьЗаголовокИКнопкиПоУмолчанию();
		Элементы.ДекорацияНастройки.Заголовок = СтрШаблон(НСтр("ru = 'Настройки передачи организации %1:'"), 
			ТекДанные.Получатель);
	Иначе
		Элементы.ДекорацияНастройки.Заголовок = НСтр("ru = 'Настройки передачи выделенной организации-получателя:'");
	КонецЕсли;
	
КонецПроцедуры

// Процедура обработчик события начала ввода данных поля Объект.ПериодРегистрации
//
&НаКлиенте
Процедура ПериодРегистрацииНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	
	Если ЗначениеЗаполнено(Объект.ПериодРегистрации) Тогда
		ДатаКалендаряПриОткрытии = Объект.ПериодРегистрации;
	Иначе
		ДатаКалендаряПриОткрытии = ОбщегоНазначенияКлиент.ДатаСеанса();
	КонецЕсли;
	
	ОткрытьФорму("ОбщаяФорма.ФормаКалендаря", ОбщегоНазначенияУНФКлиент.ПараметрыОткрытияФормыКалендаря(
		ДатаКалендаряПриОткрытии), ЭтотОбъект);
	
КонецПроцедуры

// Процедура обработчик события регулирования поля Объект.ПериодРегистрации
//
&НаКлиенте
Процедура ПериодРегистрацииРегулирование(Элемент, Направление, СтандартнаяОбработка)
	
	ЗарплатаИПерсоналКлиент.ПриРегулированииПериодаРегистрации(ЭтаФорма, Направление);
	ЗарплатаИПерсоналКлиент.ПриИзмененииПериодаРегистрации(ЭтаФорма);
	ЗаполнитьОрганизацииСЗадолженностями();
	
КонецПроцедуры

&НаКлиенте
Процедура СозданныеДокументыВыбор(Элемент, ВыбраннаяСтрока, Поле, СтандартнаяОбработка)
	ПоказатьЗначение( ,Элементы.СозданныеДокументы.ТекущиеДанные.ДокументПередачаТоваров);
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура СформироватьДокументы(Команда)
	
	СформироватьДокументыСервер(Организация);
	НастроитьЗаголовокИКнопкиПоУмолчанию();
	
КонецПроцедуры

&НаКлиенте
Процедура ОбновитьПолучателей(Команда)
	
	ЗаполнитьОрганизацииСЗадолженностями(); 
	
КонецПроцедуры

&НаКлиенте
Процедура НазадКВыборуОрганизации(Команда)
	
	Элементы.Основная.ТекущаяСтраница = Элементы.ВыборОрганизации;
	НастроитьЗаголовокИКнопкиПоУмолчанию();
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаСервере
Процедура ЗаполнитьОрганизацииСЗадолженностями()
	
	Запрос = Новый Запрос(
	"ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	РезервыТоваровОрганизаций.Организация КАК Получатель
	|ИЗ
	|	РегистрНакопления.РезервыТоваровОрганизаций.ОстаткиИОбороты(
	|			,
	|			&ПериодРегистрации,
	|			Период,
	|			,
	|			Организация В
	|				(ВЫБРАТЬ
	|					РегистрСведений.НастройкаПередачиТоваровМеждуОрганизациями.ОрганизацияПродавец
	|				ИЗ
	|					РегистрСведений.НастройкаПередачиТоваровМеждуОрганизациями)) КАК РезервыТоваровОрганизаций
	|
	|СГРУППИРОВАТЬ ПО
	|	РезервыТоваровОрганизаций.Организация,
	|	РезервыТоваровОрганизаций.Номенклатура,
	|	РезервыТоваровОрганизаций.Характеристика,
	|	РезервыТоваровОрганизаций.Партия,
	|	РезервыТоваровОрганизаций.СтруктурнаяЕдиница,
	|	РезервыТоваровОрганизаций.Ячейка,
	|	РезервыТоваровОрганизаций.НомерГТД,
	|	РезервыТоваровОрганизаций.СтранаПроисхождения,
	|	РезервыТоваровОрганизаций.Серия
	|
	|ИМЕЮЩИЕ
	|	СУММА(РезервыТоваровОрганизаций.КоличествоПриход) <> 0");
	
	Запрос.УстановитьПараметр("ПериодРегистрации", КонецМесяца(Объект.ПериодРегистрации));
	ТаблицаПолучателей.Загрузить(Запрос.Выполнить().Выгрузить());
	
	Элементы.ГруппаТаблицы.Видимость = (ТаблицаПолучателей.Количество() > 0);
	Элементы.СформироватьДокументы.Видимость = (ТаблицаПолучателей.Количество() > 0);
	Если ТаблицаПолучателей.Количество() > 0 Тогда
		Элементы.ДекорацияПолучатель.Заголовок = НСтр("ru = 'Выберите организацию-получатель, для которой будут формироваться документы'");
	Иначе
		Элементы.ДекорацияПолучатель.Заголовок = НСтр("ru = 'Все запланированные передачи между организациями выполнены'");
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура СформироватьДокументыСервер(ОрганизацияПолучатель)
	
	СозданныеДокументы.Очистить();
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("Получатель", ОрганизацияПолучатель);
	Запрос.УстановитьПараметр("ПериодРегистрации", КонецМесяца(Объект.ПериодРегистрации));
	Запрос.Текст =
	"ВЫБРАТЬ
	|	НастройкаПередачиТоваровМеждуОрганизациями.ОрганизацияВладелец КАК ОрганизацияВладелец,
	|	НастройкаПередачиТоваровМеждуОрганизациями.ОрганизацияПродавец КАК ОрганизацияПродавец,
	|	НастройкаПередачиТоваровМеждуОрганизациями.КонтрагентВладельца КАК КонтрагентВладельца,
	|	НастройкаПередачиТоваровМеждуОрганизациями.КонтрагентПродавец КАК КонтрагентПродавец,
	|	НастройкаПередачиТоваровМеждуОрганизациями.СпособПередачиТоваров КАК СпособПередачиТоваров,
	|	НастройкаПередачиТоваровМеждуОрганизациями.СпособВозвратаТоваров КАК СпособВозвратаТоваров,
	|	НастройкаПередачиТоваровМеждуОрганизациями.ДатаНачалаУчетаВозвратов КАК ДатаНачалаУчетаВозвратов,
	|	НастройкаПередачиТоваровМеждуОрганизациями.Валюта КАК Валюта,
	|	НастройкаПередачиТоваровМеждуОрганизациями.Договор КАК Договор,
	|	НастройкаПередачиТоваровМеждуОрганизациями.ВидЦены КАК ВидЦены
	|ПОМЕСТИТЬ ВтНастройкаПередачиТоваровМеждуОрганизациями
	|ИЗ
	|	РегистрСведений.НастройкаПередачиТоваровМеждуОрганизациями КАК НастройкаПередачиТоваровМеждуОрганизациями
	|ГДЕ
	|	НастройкаПередачиТоваровМеждуОрганизациями.ОрганизацияПродавец = &Получатель
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	НАЧАЛОПЕРИОДА(Резервы.Период, ДЕНЬ) КАК Период,
	|	НастройкаПередачиТоваровМеждуОрганизациями.ОрганизацияВладелец КАК ОрганизацияВладелец,
	|	НастройкаПередачиТоваровМеждуОрганизациями.ОрганизацияПродавец КАК ОрганизацияПродавец,
	|	НастройкаПередачиТоваровМеждуОрганизациями.КонтрагентВладельца КАК КонтрагентВладельца,
	|	НастройкаПередачиТоваровМеждуОрганизациями.КонтрагентПродавец КАК КонтрагентПродавец,
	|	НастройкаПередачиТоваровМеждуОрганизациями.СпособПередачиТоваров КАК СпособПередачиТоваров,
	|	НастройкаПередачиТоваровМеждуОрганизациями.СпособВозвратаТоваров КАК СпособВозвратаТоваров,
	|	НастройкаПередачиТоваровМеждуОрганизациями.ДатаНачалаУчетаВозвратов КАК ДатаНачалаУчетаВозвратов,
	|	НастройкаПередачиТоваровМеждуОрганизациями.Валюта КАК Валюта,
	|	НастройкаПередачиТоваровМеждуОрганизациями.Договор КАК Договор,
	|	НастройкаПередачиТоваровМеждуОрганизациями.ВидЦены КАК ВидЦены,
	|	Резервы.Номенклатура КАК Номенклатура,
	|	Резервы.Характеристика КАК Характеристика,
	|	Резервы.Партия КАК Партия,
	|	Резервы.СтруктурнаяЕдиница КАК СтруктурнаяЕдиница,
	|	Резервы.Ячейка КАК Ячейка,
	|	Резервы.НомерГТД КАК НомерГТД,
	|	Резервы.СтранаПроисхождения КАК СтранаПроисхождения,
	|	Резервы.Серия КАК Серия,
	|	СУММА(Резервы.Количество) КАК Количество,
	|	ЕСТЬNULL(ЦеныНоменклатуры.Цена / ВЫБОР
	|			КОГДА ЦеныНоменклатуры.ЕдиницаИзмерения ССЫЛКА Справочник.ЕдиницыИзмерения
	|				ТОГДА ВЫРАЗИТЬ(ЦеныНоменклатуры.ЕдиницаИзмерения КАК Справочник.ЕдиницыИзмерения).Коэффициент
	|			ИНАЧЕ 1
	|		КОНЕЦ, 0) КАК Цена
	|ПОМЕСТИТЬ ВТРезультирующаяТаблица
	|ИЗ
	|	РегистрНакопления.РезервыТоваровОрганизаций КАК Резервы
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВтНастройкаПередачиТоваровМеждуОрганизациями КАК НастройкаПередачиТоваровМеждуОрганизациями
	|		ПО (Резервы.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход))
	|			И (Резервы.Период <= &ПериодРегистрации)
	|			И (Резервы.Организация = &Получатель)
	|			И (НастройкаПередачиТоваровМеждуОрганизациями.ОрганизацияПродавец = Резервы.Организация)
	|			И (НастройкаПередачиТоваровМеждуОрганизациями.ОрганизацияВладелец = Резервы.КорОрганизация)
	|		ЛЕВОЕ СОЕДИНЕНИЕ (ВЫБРАТЬ
	|			РезервыТоваровОрганизаций.Период КАК Период,
	|			ЦеныНоменклатуры.ВидЦен КАК ВидЦен,
	|			РезервыТоваровОрганизаций.Номенклатура КАК Номенклатура,
	|			РезервыТоваровОрганизаций.Характеристика КАК Характеристика,
	|			МАКСИМУМ(ЦеныНоменклатуры.Период) КАК ПериодЦены
	|		ИЗ
	|			РегистрНакопления.РезервыТоваровОрганизаций КАК РезервыТоваровОрганизаций
	|				ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВтНастройкаПередачиТоваровМеждуОрганизациями КАК ВтНастройкаПередачиТоваровМеждуОрганизациями
	|				ПО РезервыТоваровОрганизаций.Организация = ВтНастройкаПередачиТоваровМеждуОрганизациями.ОрганизацияВладелец
	|					И РезервыТоваровОрганизаций.КорОрганизация = ВтНастройкаПередачиТоваровМеждуОрганизациями.ОрганизацияПродавец
	|				ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ЦеныНоменклатуры КАК ЦеныНоменклатуры
	|				ПО (ВтНастройкаПередачиТоваровМеждуОрганизациями.ВидЦены = ЦеныНоменклатуры.ВидЦен)
	|					И РезервыТоваровОрганизаций.Номенклатура = ЦеныНоменклатуры.Номенклатура
	|					И РезервыТоваровОрганизаций.Характеристика = ЦеныНоменклатуры.Характеристика
	|					И (ЦеныНоменклатуры.Период <= РезервыТоваровОрганизаций.Период)
	|		ГДЕ
	|			РезервыТоваровОрганизаций.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход)
	|		
	|		СГРУППИРОВАТЬ ПО
	|			РезервыТоваровОрганизаций.Период,
	|			РезервыТоваровОрганизаций.Номенклатура,
	|			РезервыТоваровОрганизаций.Характеристика,
	|			ЦеныНоменклатуры.ВидЦен) КАК ПериодыЦен
	|			ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ЦеныНоменклатуры КАК ЦеныНоменклатуры
	|			ПО ПериодыЦен.ПериодЦены = ЦеныНоменклатуры.Период
	|				И ПериодыЦен.ВидЦен = ЦеныНоменклатуры.ВидЦен
	|				И ПериодыЦен.Номенклатура = ЦеныНоменклатуры.Номенклатура
	|				И ПериодыЦен.Характеристика = ЦеныНоменклатуры.Характеристика
	|		ПО Резервы.Период = ПериодыЦен.Период
	|			И (НастройкаПередачиТоваровМеждуОрганизациями.ВидЦены = ПериодыЦен.ВидЦен)
	|			И Резервы.Номенклатура = ПериодыЦен.Номенклатура
	|			И Резервы.Характеристика = ПериодыЦен.Характеристика
	|ГДЕ
	|	Резервы.СтруктурнаяЕдиница.ТипСтруктурнойЕдиницы В (ЗНАЧЕНИЕ(Перечисление.ТипыСтруктурныхЕдиниц.Склад), ЗНАЧЕНИЕ(Перечисление.ТипыСтруктурныхЕдиниц.Розница), ЗНАЧЕНИЕ(Перечисление.ТипыСтруктурныхЕдиниц.РозницаСуммовойУчет))
	|
	|СГРУППИРОВАТЬ ПО
	|	НАЧАЛОПЕРИОДА(Резервы.Период, ДЕНЬ),
	|	НастройкаПередачиТоваровМеждуОрганизациями.Договор,
	|	НастройкаПередачиТоваровМеждуОрганизациями.ВидЦены,
	|	НастройкаПередачиТоваровМеждуОрганизациями.КонтрагентВладельца,
	|	НастройкаПередачиТоваровМеждуОрганизациями.ОрганизацияПродавец,
	|	НастройкаПередачиТоваровМеждуОрганизациями.ОрганизацияВладелец,
	|	НастройкаПередачиТоваровМеждуОрганизациями.Валюта,
	|	НастройкаПередачиТоваровМеждуОрганизациями.КонтрагентПродавец,
	|	НастройкаПередачиТоваровМеждуОрганизациями.СпособПередачиТоваров,
	|	НастройкаПередачиТоваровМеждуОрганизациями.СпособВозвратаТоваров,
	|	НастройкаПередачиТоваровМеждуОрганизациями.ДатаНачалаУчетаВозвратов,
	|	Резервы.Номенклатура,
	|	Резервы.Характеристика,
	|	Резервы.Партия,
	|	Резервы.СтруктурнаяЕдиница,
	|	Резервы.Ячейка,
	|	Резервы.НомерГТД,
	|	Резервы.СтранаПроисхождения,
	|	Резервы.Серия,
	|	ЕСТЬNULL(ЦеныНоменклатуры.Цена / ВЫБОР
	|			КОГДА ЦеныНоменклатуры.ЕдиницаИзмерения ССЫЛКА Справочник.ЕдиницыИзмерения
	|				ТОГДА ВЫРАЗИТЬ(ЦеныНоменклатуры.ЕдиницаИзмерения КАК Справочник.ЕдиницыИзмерения).Коэффициент
	|			ИНАЧЕ 1
	|		КОНЕЦ, 0)
	|
	|ИМЕЮЩИЕ
	|	СУММА(ВЫБОР
	|			КОГДА Резервы.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)
	|				ТОГДА Резервы.Количество
	|			ИНАЧЕ 0
	|		КОНЕЦ) <> 0
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВТРезультирующаяТаблица.Период КАК Период,
	|	ВТРезультирующаяТаблица.ОрганизацияВладелец КАК ОрганизацияВладелец,
	|	ВТРезультирующаяТаблица.ОрганизацияПродавец КАК ОрганизацияПродавец,
	|	ВТРезультирующаяТаблица.КонтрагентВладельца КАК КонтрагентВладельца,
	|	ВТРезультирующаяТаблица.КонтрагентПродавец КАК КонтрагентПродавец,
	|	ВТРезультирующаяТаблица.СпособПередачиТоваров КАК СпособПередачиТоваров,
	|	ВТРезультирующаяТаблица.СпособВозвратаТоваров КАК СпособВозвратаТоваров,
	|	ВТРезультирующаяТаблица.ДатаНачалаУчетаВозвратов КАК ДатаНачалаУчетаВозвратов,
	|	ВТРезультирующаяТаблица.Валюта КАК Валюта,
	|	ВТРезультирующаяТаблица.Договор КАК Договор,
	|	ВТРезультирующаяТаблица.Договор.СпособЗачетаПредоплатыПоУмолчанию КАК СпособЗачетаПредоплаты,
	|	ВТРезультирующаяТаблица.ВидЦены КАК ВидЦены,
	|	ВТРезультирующаяТаблица.Номенклатура КАК Номенклатура,
	|	ВТРезультирующаяТаблица.Номенклатура.ЕдиницаИзмерения КАК ЕдиницаИзмерения,
	|	ВТРезультирующаяТаблица.Номенклатура.ВидСтавкиНДС КАК ВидСтавкиНДС,
	|	ВТРезультирующаяТаблица.Характеристика КАК Характеристика,
	|	ВТРезультирующаяТаблица.Партия КАК Партия,
	|	ВТРезультирующаяТаблица.СтруктурнаяЕдиница КАК СтруктурнаяЕдиница,
	|	ВТРезультирующаяТаблица.СтруктурнаяЕдиница.ОрдерныйСклад КАК ОрдерныйСклад,
	|	ВТРезультирующаяТаблица.Ячейка КАК Ячейка,
	|	ВТРезультирующаяТаблица.НомерГТД КАК НомерГТД,
	|	ВТРезультирующаяТаблица.СтранаПроисхождения КАК СтранаПроисхождения,
	|	ВТРезультирующаяТаблица.Серия КАК Серия,
	|	ВТРезультирующаяТаблица.Количество КАК КоличествоПлан,
	|	ВТРезультирующаяТаблица.Количество КАК Количество,
	|	ВТРезультирующаяТаблица.Цена КАК Цена,
	|	ВТРезультирующаяТаблица.ВидЦены.ЦенаВключаетНДС КАК ЦенаВключаетНДС
	|ИЗ
	|	ВТРезультирующаяТаблица КАК ВТРезультирующаяТаблица
	|
	|УПОРЯДОЧИТЬ ПО
	|	Период
	|ИТОГИ ПО
	|	Период,
	|	ОрганизацияВладелец";
	
	ИменаПолей = "Номенклатура, Характеристика, Партия, ЕдиницаИзмерения, СтруктурнаяЕдиница, Ячейка, НомерГТД, СтранаПроисхождения, КоличествоПлан, Количество, Цена";
	ПоляПоиска = "Номенклатура, Характеристика, Партия, СтруктурнаяЕдиница, Ячейка, НомерГТД, СтранаПроисхождения";
	СтруктураПоиска = Новый Структура(ПоляПоиска);
	Результат = Запрос.Выполнить();
	ВыборкаПоПериоду = Результат.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
	Пока ВыборкаПоПериоду.Следующий() Цикл
		ВыборкаПоОрганизации = ВыборкаПоПериоду.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
		Пока ВыборкаПоОрганизации.Следующий() Цикл
			
			ЕстьОшибкаЗаполнения = Ложь;
			ВыборкаПоНоменклатуре = ВыборкаПоОрганизации.Выбрать();
			ВыборкаПоНоменклатуре.Следующий();
			
			НеВыполнятьВозврат = (ВыборкаПоНоменклатуре.СпособВозвратаТоваров <> Перечисления.СпособыВозвратаТоваров.УменьшениеПередачи 
				ИЛИ ВыборкаПоНоменклатуре.Период < ВыборкаПоНоменклатуре.ДатаНачалаУчетаВозвратов);
			
			Если НеВыполнятьВозврат Тогда
				ДокументыПередачи = Новый Массив;
			Иначе
				ДокументыПередачи = ДокументыПередачиНаДату(ВыборкаПоНоменклатуре.Период, ВыборкаПоНоменклатуре.ОрганизацияВладелец, 
					ВыборкаПоНоменклатуре.ОрганизацияПродавец);	
				Если ДокументыПередачи.Количество() > 1 Тогда
					Удачно = ОбъединитьДокументыПередачи(ДокументыПередачи, ВыборкаПоНоменклатуре.Период);
					Если НЕ Удачно Тогда
						ДокументыПередачи = Новый Массив;
					КонецЕсли;
				КонецЕсли;
			КонецЕсли;
			
			Если ДокументыПередачи.Количество() = 0 Тогда
				// Создание нового документа
				ПередачаТоваровМеждуОрганизациями = Документы.ПередачаТоваровМеждуОрганизациями.СоздатьДокумент();
				ПередачаТоваровМеждуОрганизациями.Заполнить(Неопределено);
				ПередачаТоваровМеждуОрганизациями.Дата = ВыборкаПоНоменклатуре.Период;
				ПередачаТоваровМеждуОрганизациями.ВалютаДокумента = ВыборкаПоНоменклатуре.Валюта;
				Если НЕ ЗначениеЗаполнено(ПередачаТоваровМеждуОрганизациями.ВалютаДокумента) Тогда
					ПередачаТоваровМеждуОрганизациями.ВалютаДокумента = Константы.ВалютаУчета.Получить();
				КонецЕсли; 
				КурсыВалют = РаботаСКурсамиВалют.ПолучитьКурсВалюты(
					ПередачаТоваровМеждуОрганизациями.ВалютаДокумента, 
					ПередачаТоваровМеждуОрганизациями.Дата);
				ПередачаТоваровМеждуОрганизациями.Курс = КурсыВалют.Курс;
				ПередачаТоваровМеждуОрганизациями.Кратность = КурсыВалют.Кратность;
				ПередачаТоваровМеждуОрганизациями.Организация = ВыборкаПоНоменклатуре.ОрганизацияВладелец;
				ПередачаТоваровМеждуОрганизациями.ОрганизацияПолучатель = ВыборкаПоНоменклатуре.ОрганизацияПродавец;
				ПередачаТоваровМеждуОрганизациями.КонтрагентВладелец = ВыборкаПоНоменклатуре.КонтрагентВладельца;
				ПередачаТоваровМеждуОрганизациями.КонтрагентПолучатель = ВыборкаПоНоменклатуре.КонтрагентПродавец;
				ПередачаТоваровМеждуОрганизациями.НДСВключатьВСтоимость = Истина;
				ПередачаТоваровМеждуОрганизациями.СтруктурнаяЕдиница = ВыборкаПоНоменклатуре.СтруктурнаяЕдиница;
				ПередачаТоваровМеждуОрганизациями.СуммаВключаетНДС = Истина;
				ПередачаТоваровМеждуОрганизациями.НалогообложениеНДС = Перечисления.ТипыНалогообложенияНДС.ОблагаетсяНДС;
				ПередачаТоваровМеждуОрганизациями.ВидЦен = ВыборкаПоНоменклатуре.ВидЦены;
				
				ПередачаТоваровМеждуОрганизациями.Договор = ВыборкаПоНоменклатуре.Договор;
				ПередачаТоваровМеждуОрганизациями.СпособЗачетаПредоплаты = ВыборкаПоНоменклатуре.СпособЗачетаПредоплаты;
				ПередачаТоваровМеждуОрганизациями.СпособЗачетаПредоплатыПолучатель = ВыборкаПоНоменклатуре.СпособЗачетаПредоплаты;
				ПередачаТоваровМеждуОрганизациями.Автор = Пользователи.ТекущийПользователь();
				ПередачаТоваровМеждуОрганизациями.ВидОперации = Перечисления.ВидыОперацийПередачаТоваровМеждуОрганизациями.АвтоЗаполнен;
			Иначе
				ПередачаТоваровМеждуОрганизациями = ДокументыПередачи[0].ПолучитьОбъект(); 
			КонецЕсли;
			
			ВыборкаПоНоменклатуре.Сбросить();
			ТребуетсяВводОрдеров = Ложь;
			
			Пока ВыборкаПоНоменклатуре.Следующий() Цикл
				
				Если НеВыполнятьВозврат И ВыборкаПоНоменклатуре.КоличествоПлан <= 0 Тогда
					Продолжить;
				КонецЕсли;
				
				ЗаполнитьЗначенияСвойств(СтруктураПоиска, ВыборкаПоНоменклатуре);
				НайденныеСтроки = ПередачаТоваровМеждуОрганизациями.Запасы.НайтиСтроки(СтруктураПоиска);
				Если НайденныеСтроки.Количество() = 0 Тогда
					Если ВыборкаПоНоменклатуре.КоличествоПлан <= 0 Тогда
						Продолжить;	
					КонецЕсли;
					Если ВыборкаПоНоменклатуре.ОрдерныйСклад Тогда
						ТребуетсяВводОрдеров = Истина;
					КонецЕсли;
					НоваяСтрокаЗапасов = ПередачаТоваровМеждуОрганизациями.Запасы.Добавить();
					ЗаполнитьЗначенияСвойств(НоваяСтрокаЗапасов, ВыборкаПоНоменклатуре, ИменаПолей);
					НоваяСтрокаЗапасов.ТипНоменклатурыЗапас = Истина;
					НоваяСтрокаЗапасов.СтавкаНДС = Справочники.СтавкиНДС.СтавкаНДС(ВыборкаПоНоменклатуре.ВидСтавкиНДС);
					Если НоваяСтрокаЗапасов.Цена = 0 Тогда
						ЕстьОшибкаЗаполнения = Истина;
					КонецЕсли;
					Если ПередачаТоваровМеждуОрганизациями.СуммаВключаетНДС <> ВыборкаПоНоменклатуре.ЦенаВключаетНДС Тогда
						НоваяСтрокаЗапасов.Цена = ЦенообразованиеСервер.ПересчитатьСуммуПриИзмененииФлаговНДС(
							НоваяСтрокаЗапасов.Цена,
							ПередачаТоваровМеждуОрганизациями.СуммаВключаетНДС, 
							НоваяСтрокаЗапасов.СтавкаНДС);
					КонецЕсли;
				Иначе
					Если ВыборкаПоНоменклатуре.ОрдерныйСклад Тогда
						ТребуетсяВводОрдеров = Истина;
					КонецЕсли;
					НоваяСтрокаЗапасов = НайденныеСтроки[0];
					НоваяСтрокаЗапасов.Количество = НоваяСтрокаЗапасов.Количество + ВыборкаПоНоменклатуре.Количество;
					НоваяСтрокаЗапасов.КоличествоПлан = НоваяСтрокаЗапасов.КоличествоПлан + ВыборкаПоНоменклатуре.КоличествоПлан;
					Если НоваяСтрокаЗапасов.Количество <= 0 И НоваяСтрокаЗапасов.КоличествоПлан <= 0 Тогда
						ПередачаТоваровМеждуОрганизациями.Запасы.Удалить(НоваяСтрокаЗапасов);
						Продолжить;
					КонецЕсли;
					Если НоваяСтрокаЗапасов.Количество <= 0 Тогда
						НоваяСтрокаЗапасов.Количество = 0;
					КонецЕсли;
					Если НоваяСтрокаЗапасов.КоличествоПлан <= 0 Тогда
						НоваяСтрокаЗапасов.КоличествоПлан = 0;
					КонецЕсли;
				КонецЕсли;
				Если НЕ ЗначениеЗаполнено(НоваяСтрокаЗапасов.КлючСвязи) Тогда
					ТабличныеЧастиУНФКлиентСервер.ЗаполнитьКлючСвязи(ПередачаТоваровМеждуОрганизациями.Запасы, 
						НоваяСтрокаЗапасов, "КлючСвязи");
				КонецЕсли;
				Если ЗначениеЗаполнено(ВыборкаПоНоменклатуре.Серия) Тогда
					СтруктураПоискаСерии = Новый Структура("Серия, КлючСвязи");
					СтруктураПоискаСерии.Вставить("КлючСвязи", НоваяСтрокаЗапасов.КлючСвязи);
					СтруктураПоискаСерии.Вставить("Серия", ВыборкаПоНоменклатуре.Серия);
					СтрокиСерии = ПередачаТоваровМеждуОрганизациями.СерииНоменклатуры.НайтиСтроки(СтруктураПоискаСерии);
					Если СтрокиСерии.Количество() > 0 Тогда
						НоваяСтрокаСерии = СтрокиСерии[0];
						НоваяСтрокаСерии.Количество = НоваяСтрокаСерии.Количество + ВыборкаПоНоменклатуре.Количество;
						Если НоваяСтрокаСерии.Количество <= 0 Тогда
							ПередачаТоваровМеждуОрганизациями.СерииНоменклатуры.Удалить(НоваяСтрокаСерии);
						КонецЕсли;
					ИначеЕсли ВыборкаПоНоменклатуре.КоличествоПлан > 0 Тогда
						НоваяСтрокаСерии = ПередачаТоваровМеждуОрганизациями.СерииНоменклатуры.Добавить();
						НоваяСтрокаСерии.КлючСвязи = НоваяСтрокаЗапасов.КлючСвязи;
						ЗаполнитьЗначенияСвойств(НоваяСтрокаСерии, ВыборкаПоНоменклатуре, "Серия, Количество");
					КонецЕсли;
					СерииНоменклатурыУНФКлиентСервер.ОбновитьСтроковоеПредставлениеСерийНоменклатурыСтроки(НоваяСтрокаЗапасов, 
						ПередачаТоваровМеждуОрганизациями, "КлючСвязи"); 
				КонецЕсли;
				НоваяСтрокаЗапасов.Сумма = НоваяСтрокаЗапасов.Цена * НоваяСтрокаЗапасов.Количество;
				ТабличныеЧастиУНФКлиентСервер.РассчитатьСуммуНДСИВсего(НоваяСтрокаЗапасов, 
					Новый Структура("СуммаВключаетНДС", ПередачаТоваровМеждуОрганизациями.СуммаВключаетНДС));
				
				Если ВыборкаПоНоменклатуре.СтруктурнаяЕдиница <> ПередачаТоваровМеждуОрганизациями.СтруктурнаяЕдиница
					И ПередачаТоваровМеждуОрганизациями.ПоложениеСклада <> Перечисления.ПоложениеРеквизитаНаФорме.ВТабличнойЧасти Тогда
					ПередачаТоваровМеждуОрганизациями.ПоложениеСклада = Перечисления.ПоложениеРеквизитаНаФорме.ВТабличнойЧасти;
				КонецЕсли;
				
			КонецЦикла;
			
			УчестьОстаткиНаДатуПередачи(ПередачаТоваровМеждуОрганизациями);
			
			Если ПередачаТоваровМеждуОрганизациями.Запасы.Количество() = 0 
				И НЕ ЗначениеЗаполнено(ПередачаТоваровМеждуОрганизациями.Ссылка) Тогда
				// Пустой документ
				Продолжить;
			КонецЕсли; 
			
			Попытка
				Если ПередачаТоваровМеждуОрганизациями.Запасы.Количество() = 0 Тогда
					ПередачаТоваровМеждуОрганизациями.УстановитьПометкуУдаления(Истина);
				Иначе
					ПередачаТоваровМеждуОрганизациями.Записать(
						?(ЕстьОшибкаЗаполнения, РежимЗаписиДокумента.Запись, РежимЗаписиДокумента.Проведение));
				КонецЕсли;
			Исключение
				ПередачаТоваровМеждуОрганизациями.Записать(РежимЗаписиДокумента.Запись);
			КонецПопытки;
			
			Если ТребуетсяВводОрдеров Тогда
				СоздатьОрдера(ПередачаТоваровМеждуОрганизациями);
			КонецЕсли;
			
			НоваяСтрокаИтогов = СозданныеДокументы.Добавить();
			НоваяСтрокаИтогов.ДокументПередачаТоваров = ПередачаТоваровМеждуОрганизациями.Ссылка;
			Если ЕстьОшибкаЗаполнения Тогда
				НоваяСтрокаИтогов.Статус = НСтр("ru = 'Установите цены товаров в документе'");
			Иначе
				НоваяСтрокаИтогов.Статус = НСтр("ru = 'Документ создан успешно'");
			КонецЕсли;
		КонецЦикла;
	КонецЦикла;
	
	Элементы.Основная.ТекущаяСтраница = Элементы.СформированныеДокументы;
	
КонецПроцедуры

&НаСервере
Функция ДокументыПередачиНаДату(Период, ОрганизацияВладелец, ОрганизацияПродавец)

	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("Период", Период);
	Запрос.УстановитьПараметр("ОрганизацияВладелец", ОрганизацияВладелец);
	Запрос.УстановитьПараметр("ОрганизацияПродавец", ОрганизацияПродавец);
	Запрос.Текст =
	"ВЫБРАТЬ
	|	ПередачаТоваровМеждуОрганизациями.Ссылка КАК Ссылка
	|ИЗ
	|	Документ.ПередачаТоваровМеждуОрганизациями КАК ПередачаТоваровМеждуОрганизациями
	|ГДЕ
	|	ПередачаТоваровМеждуОрганизациями.Проведен
	|	И ПередачаТоваровМеждуОрганизациями.Дата МЕЖДУ НАЧАЛОПЕРИОДА(&Период, ДЕНЬ) И КОНЕЦПЕРИОДА(&Период, ДЕНЬ)
	|	И ПередачаТоваровМеждуОрганизациями.Организация = &ОрганизацияВладелец
	|	И ПередачаТоваровМеждуОрганизациями.ОрганизацияПолучатель = &ОрганизацияПродавец
	|	И ПередачаТоваровМеждуОрганизациями.ВидОперации = ЗНАЧЕНИЕ(Перечисление.ВидыОперацийПередачаТоваровМеждуОрганизациями.АвтоЗаполнен)";
	Возврат Запрос.Выполнить().Выгрузить().ВыгрузитьКолонку("Ссылка");
	
КонецФункции

&НаСервере
Процедура СоздатьОрдера(ПередачаТоваровМеждуОрганизациями)
	
	ПриходныйОрдер = Неопределено;
	РасходныйОрдер = Неопределено;
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("ДокументОснование", ПередачаТоваровМеждуОрганизациями.Ссылка);
	Запрос.Текст =
	"ВЫБРАТЬ
	|	ПриходныйОрдер.Ссылка КАК Ссылка
	|ИЗ
	|	Документ.ПриходныйОрдер КАК ПриходныйОрдер
	|ГДЕ
	|	ПриходныйОрдер.ДокументОснование = &ДокументОснование
	|	И НЕ ПриходныйОрдер.ПометкаУдаления
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	РасходныйОрдер.Ссылка
	|ИЗ
	|	Документ.РасходныйОрдер КАК РасходныйОрдер
	|ГДЕ
	|	РасходныйОрдер.ДокументОснование = &ДокументОснование
	|	И НЕ РасходныйОрдер.ПометкаУдаления";
	Выборка = Запрос.Выполнить().Выбрать();
	Пока Выборка.Следующий() Цикл
		Если ТипЗнч(Выборка.Ссылка) = Тип("ДокументСсылка.ПриходныйОрдер") Тогда
			Если ПриходныйОрдер = Неопределено Тогда
				ПриходныйОрдер = Выборка.Ссылка.ПолучитьОбъект();
				Если ПриходныйОрдер.Проведен Тогда
					ПриходныйОрдер.Записать(РежимЗаписиДокумента.ОтменаПроведения);
					ПриходныйОрдер = Выборка.Ссылка.ПолучитьОбъект();
				КонецЕсли;
			Иначе
				Выборка.Ссылка.ПолучитьОбъект().УстановитьПометкуУдаления(Истина);
			КонецЕсли;
		ИначеЕсли ТипЗнч(Выборка.Ссылка) = Тип("ДокументСсылка.РасходныйОрдер") Тогда
			Если РасходныйОрдер = Неопределено Тогда
				РасходныйОрдер = Выборка.Ссылка.ПолучитьОбъект();
				Если РасходныйОрдер.Проведен Тогда
					РасходныйОрдер.Записать(РежимЗаписиДокумента.ОтменаПроведения);
					РасходныйОрдер = Выборка.Ссылка.ПолучитьОбъект();
				КонецЕсли;
			Иначе
				Выборка.Ссылка.ПолучитьОбъект().УстановитьПометкуУдаления(Истина);
			КонецЕсли;
		КонецЕсли;	
	КонецЦикла;
	Если ПриходныйОрдер = Неопределено Тогда
		ПриходныйОрдер = Документы.ПриходныйОрдер.СоздатьДокумент();
	КонецЕсли;
	Если РасходныйОрдер = Неопределено Тогда
		РасходныйОрдер = Документы.РасходныйОрдер.СоздатьДокумент();
	КонецЕсли;
	
	ВыполнитьПриход = Истина;
	РасходныйОрдер.Заполнить(ПередачаТоваровМеждуОрганизациями.Ссылка);
	Если РасходныйОрдер.Запасы.Количество() > 0 Тогда
		РасходныйОрдер.Дата = ПередачаТоваровМеждуОрганизациями.Дата;
		Если ПередачаТоваровМеждуОрганизациями.Проведен Тогда
			Попытка
				РасходныйОрдер.Записать(РежимЗаписиДокумента.Проведение);
			Исключение
				ВыполнитьПриход = Ложь;
				ОбщегоНазначения.СообщитьПользователю(СтрШаблон(НСтр(
					"ru = 'Не удалось выполнить складские движения для документа %1. Ордера потребуется провести вручную, когда остатки станут доступны.'"), 
					Строка(ПередачаТоваровМеждуОрганизациями.Ссылка)), ПередачаТоваровМеждуОрганизациями.Ссылка);
				Если РасходныйОрдер.Проведен Тогда
					РасходныйОрдер.Записать(РежимЗаписиДокумента.ОтменаПроведения);
				Иначе
					РасходныйОрдер.Записать(РежимЗаписиДокумента.Запись);
				КонецЕсли;
			КонецПопытки;
		Иначе
			Если РасходныйОрдер.Проведен Тогда
				РасходныйОрдер.Записать(РежимЗаписиДокумента.ОтменаПроведения);
			Иначе
				РасходныйОрдер.Записать(РежимЗаписиДокумента.Запись);
			КонецЕсли;
		КонецЕсли;
	ИначеЕсли НЕ РасходныйОрдер.ЭтоНовый() Тогда
		РасходныйОрдер.УстановитьПометкуУдаления(Истина);
	КонецЕсли;
	
	ПриходныйОрдер.Заполнить(ПередачаТоваровМеждуОрганизациями.Ссылка);
	Если ПриходныйОрдер.Запасы.Количество() > 0 Тогда
		ПриходныйОрдер.Дата = ПередачаТоваровМеждуОрганизациями.Дата;
		Если ПередачаТоваровМеждуОрганизациями.Проведен И ВыполнитьПриход Тогда
			Попытка
				ПриходныйОрдер.Записать(РежимЗаписиДокумента.Проведение);
			Исключение
				Если ПриходныйОрдер.Проведен Тогда
					ПриходныйОрдер.Записать(РежимЗаписиДокумента.ОтменаПроведения);
				Иначе
					ПриходныйОрдер.Записать(РежимЗаписиДокумента.Запись);
				КонецЕсли;
			КонецПопытки;
		Иначе
			Если ПриходныйОрдер.Проведен Тогда
				ПриходныйОрдер.Записать(РежимЗаписиДокумента.ОтменаПроведения);
			Иначе
				ПриходныйОрдер.Записать(РежимЗаписиДокумента.Запись);
			КонецЕсли;
		КонецЕсли;
	ИначеЕсли НЕ ПриходныйОрдер.ЭтоНовый() Тогда
		ПриходныйОрдер.УстановитьПометкуУдаления(Истина);
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Функция ОбъединитьДокументыПередачи(ДокументыПередачи, Период)
	
	ПоляПоиска = "Номенклатура, Характеристика, Партия, СтруктурнаяЕдиница, Ячейка, НомерГТД, СтранаПроисхождения";
	СтруктураПоиска = Новый Структура(ПоляПоиска);
	
	НачатьТранзакцию();
	Попытка
		КонтрольОстатковВключен = Константы.КонтролироватьОстаткиПриПроведении.Получить();
		Если КонтрольОстатковВключен Тогда
			Константы.КонтролироватьОстаткиПриПроведении.Установить(Ложь);
		КонецЕсли;
		ОсновнойДокумент = ДокументыПередачи[0].ПолучитьОбъект();
		
		Для НомерДокумента = 2 По ДокументыПередачи.Количество() Цикл
			ДокументКопирования = ДокументыПередачи[НомерДокумента - 1];
			КлючиСвязи = Новый Соответствие;
			Для каждого СтрокаЗапасы Из ДокументКопирования.Запасы Цикл
				ЗаполнитьЗначенияСвойств(СтруктураПоиска, СтрокаЗапасы);
				Строки = ОсновнойДокумент.Запасы.НайтиСтроки(СтруктураПоиска);
				Если Строки.Количество() = 0 Тогда
					НоваяСтрока = ОсновнойДокумент.Запасы.Добавить();
					ЗаполнитьЗначенияСвойств(НоваяСтрока, СтрокаЗапасы, , "КлючСвязи");
					ТабличныеЧастиУНФКлиентСервер.ЗаполнитьКлючСвязи(ОсновнойДокумент.Запасы, НоваяСтрока, "КлючСвязи");
				Иначе
					НоваяСтрока = Строки[0];
					НоваяСтрока.Количество = НоваяСтрока.Количество + СтрокаЗапасы.Количество;
					НоваяСтрока.КоличествоПлан = НоваяСтрока.КоличествоПлан + СтрокаЗапасы.КоличествоПлан;
					НоваяСтрока.Сумма = НоваяСтрока.Цена * НоваяСтрока.Количество;
					ТабличныеЧастиУНФКлиентСервер.РассчитатьСуммуНДСИВсего(НоваяСтрока, 
						Новый Структура("СуммаВключаетНДС", ОсновнойДокумент.СуммаВключаетНДС));
				КонецЕсли;
				КлючиСвязи.Вставить(СтрокаЗапасы.КлючСвязи, НоваяСтрока.КлючСвязи);
			КонецЦикла;                                                            
			Для каждого СтрокаСерии Из ДокументКопирования.СерииНоменклатуры Цикл
				КлючСвязи = КлючиСвязи.Получить(СтрокаСерии.КлючСвязи);
				Если КлючСвязи = Неопределено Тогда
					Продолжить;	
				КонецЕсли;
				НоваяСтрока = ОсновнойДокумент.СерииНоменклатуры.Добавить();
				ЗаполнитьЗначенияСвойств(НоваяСтрока, СтрокаСерии, , "КлючСвязи");
				НоваяСтрока.КлючСвязи = КлючСвязи;
				СтрокиЗапасы = ТабличныеЧастиУНФКлиентСервер.СтрокиПоКлючуСвязи(ОсновнойДокумент.Запасы, КлючСвязи);
				Если СтрокиЗапасы.Количество() > 0 Тогда
					СтрокиЗапасы[0].СерииНоменклатуры = СтрокиЗапасы[0].СерииНоменклатуры 
						+ ?(ПустаяСтрока(СтрокиЗапасы[0].СерииНоменклатуры), "", "; ") 
						+ Строка(СтрокаСерии.Серия);
				КонецЕсли;
			КонецЦикла;
			Для каждого СтрокаПредоплата Из ДокументКопирования.Предоплата Цикл
				НоваяСтрока = ОсновнойДокумент.Предоплата.Добавить();
				ЗаполнитьЗначенияСвойств(НоваяСтрока, СтрокаПредоплата);
			КонецЦикла;
			Для каждого СтрокаПредоплата Из ДокументКопирования.ПредоплатаПолучатель Цикл
				НоваяСтрока = ОсновнойДокумент.ПредоплатаПолучатель.Добавить();
				ЗаполнитьЗначенияСвойств(НоваяСтрока, СтрокаПредоплата);
			КонецЦикла;
			ДокументКопирования.ПолучитьОбъект().УстановитьПометкуУдаления(Истина);
		КонецЦикла;
		
		Если КонтрольОстатковВключен Тогда
			Константы.КонтролироватьОстаткиПриПроведении.Установить(Истина);
		КонецЕсли;
		ОсновнойДокумент.Записать(РежимЗаписиДокумента.Проведение);
		
		ЗафиксироватьТранзакцию();
	Исключение
		ОтменитьТранзакцию();
		Шаблон = НСтр("ru = 'Не удалось объединить документы передачи за дату: %1.
        	|Возвраты этой датой учитываться не будут.'");
		ОбщегоНазначения.СообщитьПользователю(СтрШаблон(Шаблон, Формат(Период, "ДЛФ=D")));
	    Возврат Ложь;
	КонецПопытки;    
	
	Возврат Истина;
	
КонецФункции

&НаСервере
Процедура УчестьОстаткиНаДатуПередачи(ПередачаТоваровМеждуОрганизациями)
	
	ТаблицаЗапасов = ПередачаТоваровМеждуОрганизациями.Запасы.Выгрузить();
	ТаблицаСерий = ПередачаТоваровМеждуОрганизациями.СерииНоменклатуры.Выгрузить();
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("ТаблицаЗапасов", ТаблицаЗапасов);
	Запрос.УстановитьПараметр("ТаблицаСерий", ТаблицаСерий);
	Запрос.УстановитьПараметр("Ссылка", ПередачаТоваровМеждуОрганизациями.Ссылка);
	Запрос.УстановитьПараметр("Организация", ПередачаТоваровМеждуОрганизациями.ОрганизацияПолучатель);
	Запрос.УстановитьПараметр("ДатаСреза", 
		Новый Граница(КонецДня(ПередачаТоваровМеждуОрганизациями.Дата), ВидГраницы.Включая));
	Запрос.Текст =
	"ВЫБРАТЬ
	|	ТаблицаЗапасов.КлючСвязи КАК КлючСвязи,
	|	ТаблицаЗапасов.Номенклатура КАК Номенклатура,
	|	ТаблицаЗапасов.Характеристика КАК Характеристика,
	|	ТаблицаЗапасов.Партия КАК Партия,
	|	ТаблицаЗапасов.СтруктурнаяЕдиница КАК СтруктурнаяЕдиница,
	|	ТаблицаЗапасов.Ячейка КАК Ячейка,
	|	ТаблицаЗапасов.НомерГТД КАК НомерГТД,
	|	ТаблицаЗапасов.СтранаПроисхождения КАК СтранаПроисхождения
	|ПОМЕСТИТЬ ТаблицаЗапасов
	|ИЗ
	|	&ТаблицаЗапасов КАК ТаблицаЗапасов
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ТаблицаСерий.КлючСвязи КАК КлючСвязи,
	|	ТаблицаСерий.Серия КАК Серия
	|ПОМЕСТИТЬ ТаблицаСерий
	|ИЗ
	|	&ТаблицаСерий КАК ТаблицаСерий
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ТаблицаЗапасов.КлючСвязи КАК КлючСвязи,
	|	ТаблицаЗапасов.Номенклатура КАК Номенклатура,
	|	ТаблицаЗапасов.Характеристика КАК Характеристика,
	|	ТаблицаЗапасов.Партия КАК Партия,
	|	ТаблицаЗапасов.СтруктурнаяЕдиница КАК СтруктурнаяЕдиница,
	|	ТаблицаЗапасов.Ячейка КАК Ячейка,
	|	ТаблицаЗапасов.НомерГТД КАК НомерГТД,
	|	ТаблицаЗапасов.СтранаПроисхождения КАК СтранаПроисхождения,
	|	ЕСТЬNULL(ТаблицаСерий.Серия, ЗНАЧЕНИЕ(Справочник.СерииНоменклатуры.ПустаяСсылка)) КАК Серия
	|ПОМЕСТИТЬ ТаблицаИзмерений
	|ИЗ
	|	ТаблицаЗапасов КАК ТаблицаЗапасов
	|		ЛЕВОЕ СОЕДИНЕНИЕ ТаблицаСерий КАК ТаблицаСерий
	|		ПО ТаблицаЗапасов.КлючСвязи = ТаблицаСерий.КлючСвязи
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	РезервыТоваровОрганизацийОстатки.Организация КАК Организация,
	|	РезервыТоваровОрганизацийОстатки.Номенклатура КАК Номенклатура,
	|	РезервыТоваровОрганизацийОстатки.Характеристика КАК Характеристика,
	|	РезервыТоваровОрганизацийОстатки.Партия КАК Партия,
	|	РезервыТоваровОрганизацийОстатки.СтруктурнаяЕдиница КАК СтруктурнаяЕдиница,
	|	РезервыТоваровОрганизацийОстатки.Ячейка КАК Ячейка,
	|	РезервыТоваровОрганизацийОстатки.НомерГТД КАК НомерГТД,
	|	РезервыТоваровОрганизацийОстатки.СтранаПроисхождения КАК СтранаПроисхождения,
	|	РезервыТоваровОрганизацийОстатки.Серия КАК Серия,
	|	РезервыТоваровОрганизацийОстатки.КоличествоОстаток КАК Количество
	|ПОМЕСТИТЬ ОстаткиРезервов
	|ИЗ
	|	РегистрНакопления.РезервыТоваровОрганизаций.Остатки(&ДатаСреза, Организация = &Организация
	|	И (Номенклатура, Характеристика, Партия, СтруктурнаяЕдиница, Ячейка, НомерГТД, СтранаПроисхождения, Серия) В
	|		(ВЫБРАТЬ
	|			ТаблицаИзмерений.Номенклатура,
	|			ТаблицаИзмерений.Характеристика,
	|			ТаблицаИзмерений.Партия,
	|			ТаблицаИзмерений.СтруктурнаяЕдиница,
	|			ТаблицаИзмерений.Ячейка,
	|			ТаблицаИзмерений.НомерГТД,
	|			ТаблицаИзмерений.СтранаПроисхождения,
	|			ТаблицаИзмерений.Серия
	|		ИЗ
	|			ТаблицаИзмерений)) КАК РезервыТоваровОрганизацийОстатки
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	РезервыТоваровОрганизаций.Организация,
	|	РезервыТоваровОрганизаций.Номенклатура,
	|	РезервыТоваровОрганизаций.Характеристика,
	|	РезервыТоваровОрганизаций.Партия,
	|	РезервыТоваровОрганизаций.СтруктурнаяЕдиница,
	|	РезервыТоваровОрганизаций.Ячейка,
	|	РезервыТоваровОрганизаций.НомерГТД,
	|	РезервыТоваровОрганизаций.СтранаПроисхождения,
	|	РезервыТоваровОрганизаций.Серия,
	|	ВЫБОР
	|		КОГДА РезервыТоваровОрганизаций.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)
	|			ТОГДА -РезервыТоваровОрганизаций.Количество
	|		ИНАЧЕ РезервыТоваровОрганизаций.Количество
	|	КОНЕЦ
	|ИЗ
	|	РегистрНакопления.РезервыТоваровОрганизаций КАК РезервыТоваровОрганизаций
	|ГДЕ
	|	РезервыТоваровОрганизаций.Регистратор = &Ссылка
	|	И РезервыТоваровОрганизаций.Организация = &Организация
	|	И (РезервыТоваровОрганизаций.Номенклатура, РезервыТоваровОрганизаций.Характеристика,
	|		РезервыТоваровОрганизаций.Партия, РезервыТоваровОрганизаций.СтруктурнаяЕдиница, РезервыТоваровОрганизаций.Ячейка,
	|		РезервыТоваровОрганизаций.НомерГТД, РезервыТоваровОрганизаций.СтранаПроисхождения, РезервыТоваровОрганизаций.Серия)
	|		В
	|		(ВЫБРАТЬ
	|			ТаблицаИзмерений.Номенклатура,
	|			ТаблицаИзмерений.Характеристика,
	|			ТаблицаИзмерений.Партия,
	|			ТаблицаИзмерений.СтруктурнаяЕдиница,
	|			ТаблицаИзмерений.Ячейка,
	|			ТаблицаИзмерений.НомерГТД,
	|			ТаблицаИзмерений.СтранаПроисхождения,
	|			ТаблицаИзмерений.Серия
	|		ИЗ
	|			ТаблицаИзмерений)
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ОстаткиРезервов.Организация КАК Организация,
	|	ОстаткиРезервов.Номенклатура КАК Номенклатура,
	|	ОстаткиРезервов.Характеристика КАК Характеристика,
	|	ОстаткиРезервов.Партия КАК Партия,
	|	ОстаткиРезервов.СтруктурнаяЕдиница КАК СтруктурнаяЕдиница,
	|	ОстаткиРезервов.Ячейка КАК Ячейка,
	|	ОстаткиРезервов.НомерГТД КАК НомерГТД,
	|	ОстаткиРезервов.СтранаПроисхождения КАК СтранаПроисхождения,
	|	ОстаткиРезервов.Серия КАК Серия,
	|	СУММА(ОстаткиРезервов.Количество) КАК Количество
	|ИЗ
	|	ОстаткиРезервов КАК ОстаткиРезервов
	|СГРУППИРОВАТЬ ПО
	|	ОстаткиРезервов.Организация,
	|	ОстаткиРезервов.Номенклатура,
	|	ОстаткиРезервов.Характеристика,
	|	ОстаткиРезервов.Партия,
	|	ОстаткиРезервов.СтруктурнаяЕдиница,
	|	ОстаткиРезервов.Ячейка,
	|	ОстаткиРезервов.НомерГТД,
	|	ОстаткиРезервов.СтранаПроисхождения,
	|	ОстаткиРезервов.Серия";
	ТаблицаОстатков = Запрос.Выполнить().Выгрузить();
	ПоляПоиска = "Номенклатура, Характеристика, Партия, СтруктурнаяЕдиница, Ячейка, НомерГТД, СтранаПроисхождения, Серия";
	ТаблицаОстатков.Индексы.Добавить(ПоляПоиска);
	
	СтруктураПоиска = Новый Структура(ПоляПоиска);
	СтруктураПоискаСерий = Новый Структура("КлючСвязи");
	Для каждого СтрокаТабличнойЧасти Из ПередачаТоваровМеждуОрганизациями.Запасы Цикл
		Коэффициент = ?(ТипЗнч(СтрокаТабличнойЧасти.ЕдиницаИзмерения) = Тип("СправочникСсылка.ЕдиницыИзмерения"), 
			ОбщегоНазначения.ЗначениеРеквизитаОбъекта(СтрокаТабличнойЧасти.ЕдиницаИзмерения, "Коэффициент", Истина), 1);
		Коэффициент = ?(Коэффициент = 0, 1, Коэффициент);	
		ЗаполнитьЗначенияСвойств(СтруктураПоиска, СтрокаТабличнойЧасти);
		ЗаполнитьЗначенияСвойств(СтруктураПоискаСерий, СтрокаТабличнойЧасти);
		СтрокиСерии = ПередачаТоваровМеждуОрганизациями.СерииНоменклатуры.НайтиСтроки(СтруктураПоискаСерий);
		Если СтрокиСерии.Количество() = 0 Тогда
			СтрокиСерии = ОбщегоНазначенияКлиентСервер.ЗначениеВМассиве(
				Новый Структура("Серия, КлючСвязи, Количество", Справочники.СерииНоменклатуры.ПустаяСсылка(), 
				СтрокаТабличнойЧасти.КлючСвязи, СтрокаТабличнойЧасти.Количество));
		КонецЕсли;
		Для Каждого СтрокаСерии Из СтрокиСерии Цикл
			СтруктураПоиска.Серия = СтрокаСерии.Серия;
			СтрокиОстатков = ТаблицаОстатков.НайтиСтроки(СтруктураПоиска);
			Остаток = 0;
			Для каждого СтрокаОстатка Из СтрокиОстатков Цикл
				Остаток = Остаток + СтрокаОстатка.Количество;
			КонецЦикла;
			Если Остаток < 0 Тогда
				Остаток = 0;
			КонецЕсли; 
			Зачтено = СтрокаСерии.Количество * Коэффициент;
			Если Зачтено > Остаток Тогда
				Разница = Остаток / Коэффициент - СтрокаСерии.Количество;
				СтрокаСерии.Количество = СтрокаСерии.Количество + Разница;
				СтрокаТабличнойЧасти.КоличествоПлан = СтрокаТабличнойЧасти.КоличествоПлан + Разница;
				СтрокаТабличнойЧасти.Количество = СтрокаТабличнойЧасти.КоличествоПлан;
				РассчитатьСуммыВСтрокеТЧ(СтрокаТабличнойЧасти, ПередачаТоваровМеждуОрганизациями.СуммаВключаетНДС);
				Зачтено = Остаток;
			КонецЕсли;
			Если Зачтено > 0 Тогда
				Для каждого СтрокаОстатка Из СтрокиОстатков Цикл
					ПоСтроке = Мин(Зачтено, СтрокаОстатка.Количество);
					СтрокаОстатка.Количество = СтрокаОстатка.Количество - ПоСтроке;
					Зачтено = Зачтено - ПоСтроке;
				КонецЦикла;
			КонецЕсли; 
			
		КонецЦикла;
	КонецЦикла;
	
	УдалитьПустыеСтроки(ПередачаТоваровМеждуОрганизациями.Запасы, ПередачаТоваровМеждуОрганизациями.СерииНоменклатуры); 
	
КонецПроцедуры

&НаСервере
Процедура РассчитатьСуммыВСтрокеТЧ(СтрокаТабличнойЧасти, СуммаВключаетНДС)
	
	СтрокаТабличнойЧасти.Сумма = СтрокаТабличнойЧасти.Количество * СтрокаТабличнойЧасти.Цена;
	СтавкаНДС = УправлениеНебольшойФирмойПовтИсп.ПолучитьЗначениеСтавкиНДС(СтрокаТабличнойЧасти.СтавкаНДС);
	Если СуммаВключаетНДС Тогда
		СтрокаТабличнойЧасти.СуммаНДС = СтрокаТабличнойЧасти.Сумма - (СтрокаТабличнойЧасти.Сумма) / ((СтавкаНДС + 100) / 100);
	Иначе
		СтрокаТабличнойЧасти.СуммаНДС = СтрокаТабличнойЧасти.Сумма * СтавкаНДС / 100;
	КонецЕсли; 
	СтрокаТабличнойЧасти.Всего = СтрокаТабличнойЧасти.Сумма + ?(СуммаВключаетНДС, 0, СтрокаТабличнойЧасти.СуммаНДС);
	
КонецПроцедуры

&НаСервере
Процедура УдалитьПустыеСтроки(Запасы, СерииНоменклатуры)
		
	СтруктураПоиска = Новый Структура;
	СтруктураПоиска.Вставить("Количество", 0);
	Строки = Запасы.НайтиСтроки(СтруктураПоиска);
	Для каждого СтрокаТабличнойЧасти Из Строки Цикл
		Запасы.Удалить(СтрокаТабличнойЧасти);
	КонецЦикла;
	Строки = СерииНоменклатуры.НайтиСтроки(СтруктураПоиска);
	Для каждого СтрокаТабличнойЧасти Из Строки Цикл
		СерииНоменклатуры.Удалить(СтрокаТабличнойЧасти);
	КонецЦикла;
	
КонецПроцедуры

&НаКлиенте
Процедура НастроитьЗаголовокИКнопкиПоУмолчанию()
	
	Если Элементы.Основная.ТекущаяСтраница = Элементы.ВыборОрганизации Тогда
		Заголовок = НСтр("ru = 'Оформление передачи товаров между организациями (шаг 1/2)'");
		Элементы.СформироватьДокументы.КнопкаПоУмолчанию = Истина;
	ИначеЕсли Элементы.Основная.ТекущаяСтраница = Элементы.СформированныеДокументы Тогда
		Заголовок = НСтр("ru = 'Оформление передачи товаров между организациями (шаг 2/2)'");
		Элементы.Закрыть.КнопкаПоУмолчанию = Истина;
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

