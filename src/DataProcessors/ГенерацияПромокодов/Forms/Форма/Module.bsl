
&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	Параметры.Свойство("ШаблонПромокода", Объект.ШаблонПромокода);
	Параметры.Свойство("СкидкаНаценка", Объект.СкидкаНаценка);
	Параметры.Свойство("УсловиеПредоставленияСкидки", Объект.УсловиеПредоставленияСкидки);
	
	Если Параметры.Свойство("Документ") Тогда
		ОткрытаИзДокумента = Истина;
	КонецЕсли; 
	
	Если Не ЗначениеЗаполнено(Объект.ШаблонПромокода) 
		И ЗначениеЗаполнено(Объект.СкидкаНаценка) Тогда
		ЗаполнитьШаблонПоСкидке();
	КонецЕсли;
	Если Не ЗначениеЗаполнено(Объект.УсловиеПредоставленияСкидки) 
		И ЗначениеЗаполнено(Объект.СкидкаНаценка) Тогда
		ЗаполнитьУсловиеПоСкидке();
	КонецЕсли;
	
	Если Не ЗначениеЗаполнено(Объект.УсловиеПредоставленияСкидки) Тогда
		Отказ = Истина;
		Возврат;			
	КонецЕсли;
	
	Если ЗначениеЗаполнено(Объект.ШаблонПромокода) Тогда
		УстановитьПараметрыИзШаблонаНаСервере();
		Для Каждого ЭлементНастройки Из Элементы.ГруппаНастройкаГенерации.ПодчиненныеЭлементы Цикл
			Если Не ЭлементНастройки = Элементы.КоличествоПромокодов Тогда
				ЭлементНастройки.Доступность = Ложь;
			КонецЕсли;
		КонецЦикла;
	ИначеЕсли Объект.СловарьСимволов.Количество() = 0 Тогда
		ЗагрузитьСписокСимволов();
	КонецЕсли;
	
КонецПроцедуры

&НаСервереБезКонтекста
Функция СгенерироватьПромокодыНаСервере(Знач Словарь, Знач КоличествоСимволов, Знач КоличествоПромокодов)
	ДатаСоздания = ТекущаяДата();
	СловарьСимволов = Словарь.Выгрузить().ВыгрузитьКолонку("Символ");
	Промокоды = ПромокодыУНФ.СегенерироватьПромокоды(СловарьСимволов, КоличествоСимволов, КоличествоПромокодов);
	Возврат Промокоды; 
КонецФункции

&НаСервереБезКонтекста
Функция ПолучитьТекущуюДату()
	Возврат ТекущаяДата();
КонецФункции

&НаКлиенте
Процедура СгенерироватьПромокоды(Команда)
	СгенерироватьНаКлиенте();
КонецПроцедуры

&НаКлиенте
Процедура СгенерироватьНаКлиенте()
	Объект.Промокоды.Очистить();
	ДатаСоздания = ПолучитьТекущуюДату();
	ДатаДействуетС = Дата(1,1,1);
	ДатаДействуетДо = Дата(1,1,1);
	Если Объект.АктивироватьЧерезДней > 0 Тогда
		ДатаДействуетС = НачалоДня(ДатаСоздания + Объект.АктивироватьЧерезДней * 60 * 60 * 24);
	КонецЕсли;
	Если Объект.КоличествоДнейДействия > 0 Тогда
		ДатаДействуетДо = КонецДня(Макс(ДатаСоздания, ДатаДействуетС) + Объект.КоличествоДнейДействия * 60 * 60 * 24);
	КонецЕсли;
	
	НовыеПромокоды = СгенерироватьПромокодыНаСервере(Объект.СловарьСимволов, Объект.КоличествоСимволов, Объект.КоличествоПромокодов);
	Для Каждого НовыйПромокод Из НовыеПромокоды Цикл
		ПолныйТекстПромокода = СтрЗаменить(Объект.МаскаПромокода, "[Промокод]", НовыйПромокод);
		НовыйПромокод = Объект.Промокоды.Добавить();
		НовыйПромокод.Промокод = ПолныйТекстПромокода;
		НовыйПромокод.УсловиеПредоставленияСкидки = Объект.УсловиеПредоставленияСкидки;
		НовыйПромокод.Доступно = Объект.КоличествоРазПрименения;
		НовыйПромокод.ДействуетДо = ДатаДействуетДо;
		НовыйПромокод.ДействуетС = ДатаДействуетС;
	КонецЦикла;
	Элементы.Страницы.ТекущаяСтраница = Элементы.СтраницаПромокоды;
	СтраницыПриСменеСтраницы(Элементы.Страницы, Элементы.Страницы.ТекущаяСтраница);
КонецПроцедуры 

&НаСервере
Функция ЗаписатьПромокодыНаСервере()
	ДокументыАктивации = ПромокодыУНФ.АктивироватьПромокоды(Объект.Промокоды.Выгрузить());
	Объект.Промокоды.Очистить();
	Возврат ДокументыАктивации;
КонецФункции

&НаКлиенте
Процедура ЗаписатьПромокоды(Команда)
	Результат = Новый Структура("Успех", Истина);
	Если РежимНастройкиГенерации Тогда
		СгенерироватьНаКлиенте();
		Возврат;
	ИначеЕсли ОткрытаИзДокумента Тогда
		Результат.Вставить("АдресТаблицыПромокодов", ПоместитьРезультатВХранилище());
	Иначе
		ЗаписатьПромокодыНаСервере();
		ОповеститьОбИзменении(Тип("РегистрСведенийКлючЗаписи.Промокоды"));
	КонецЕсли;
	Закрыть(Результат);
КонецПроцедуры

&НаСервере 
Функция ПоместитьРезультатВХранилище()
	АдресТаблицыПромокодов = ПоместитьВоВременноеХранилище(Объект.Промокоды.Выгрузить());
	Возврат АдресТаблицыПромокодов;
КонецФункции

&НаКлиенте
Процедура МаскаПромокодаПриИзменении(Элемент)
	Если стрНайти(Объект.МаскаПромокода, "[Промокод]") = 0 Тогда
		Сообщение = Новый СообщениеПользователю();
		Сообщение.Поле = "МаскаПромокода";
		Сообщение.Текст = Нстр("ru = 'Маска промокода должна содержать секцию [Промокод], куда будет подставляться сгенерированное значение.'");
		Сообщение.Сообщить();
		Объект.МаскаПромокода = "[Промокод]";
	КонецЕсли;
КонецПроцедуры

&НаСервере
Процедура ЗагрузитьСписокСимволов()
	Объект.СловарьСимволов.Очистить();
	МассивСимволов = ПромокодыУНФ.БазовыйСловарьСимволов();
	Для Каждого Символ Из МассивСимволов Цикл
		СтрокаСловаря = Объект.СловарьСимволов.Добавить();
		СтрокаСловаря.Символ = Символ;
	КонецЦикла;
	
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	Если СтрНайти(Объект.МаскаПромокода, "[Промокод]") = 0 Тогда
		Объект.МаскаПромокода = "[Промокод]";
	КонецЕсли;
	Если Объект.КоличествоСимволов = 0 Тогда
		Объект.КоличествоСимволов = 6;
	КонецЕсли;
	Если Объект.КоличествоПромокодов = 0 Тогда
		Объект.КоличествоПромокодов = 10;
	КонецЕсли;
	УправлениеДоступностьюКоманд();

КонецПроцедуры

&НаКлиенте
Процедура СтраницыПриСменеСтраницы(Элемент, ТекущаяСтраница)
	
	Если Элементы.Страницы.ТекущаяСтраница = Элементы.СтраницаГенерацияПромокодов Тогда
		РежимНастройкиГенерации = Истина;
	Иначе
		РежимНастройкиГенерации = Ложь;
	КонецЕсли;
	УправлениеДоступностьюКоманд()
	
КонецПроцедуры

&НаКлиенте
Процедура УправлениеДоступностьюКоманд()
	ЭтаФорма.Заголовок = "Генерация промокодов для применения скидки";
	Если РежимНастройкиГенерации Тогда
		ЭтаФорма.Заголовок = "Настройки генерация промокодов";
		Элементы.ЗаписатьПромокоды.Заголовок = "Сгенерировать";		
	ИначеЕсли ОткрытаИзДокумента Тогда
		Элементы.ЗаписатьПромокоды.Заголовок = "Перенести в документ";
	Иначе
		Элементы.ЗаписатьПромокоды.Заголовок = "Записать и закрыть";
	КонецЕсли;
	Элементы.Отменить.Видимость = ОткрытаИзДокумента;
	Элементы.НастройкиГенерации.Видимость = Не РежимНастройкиГенерации;
	Элементы.СгенерироватьПромокоды.Видимость = Не РежимНастройкиГенерации;
	Элементы.Назад.Видимость = РежимНастройкиГенерации;
	
КонецПроцедуры

&НаКлиенте
Процедура ПромокодыПриНачалеРедактирования(Элемент, НоваяСтрока, Копирование)
	Если НоваяСтрока Тогда
		ТекСтрока = Элементы.Промокоды.ТекущиеДанные;
		Если Не ТекСтрока = Неопределено Тогда
			ТекСтрока.УсловиеПредоставленияСкидки = Объект.УсловиеПредоставленияСкидки;
		КонецЕсли;
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура НастройкиГенерации(Команда)
	РежимНастройкиГенерации = Истина;
	Элементы.Страницы.ТекущаяСтраница = Элементы.СтраницаГенерацияПромокодов;
	УправлениеДоступностьюКоманд();
КонецПроцедуры

&НаКлиенте
Процедура Назад(Команда)
	РежимНастройкиГенерации = Ложь;
	Элементы.Страницы.ТекущаяСтраница = Элементы.СтраницаПромокоды;
	УправлениеДоступностьюКоманд();
КонецПроцедуры

&НаКлиенте
Процедура ШаблонПромокодаПриИзменении(Элемент)
	ОбновитьНастройкиПоШаблону();
КонецПроцедуры

&НаКлиенте
Процедура ОбновитьНастройкиПоШаблону()
	Если ЗначениеЗаполнено(Объект.ШаблонПромокода) Тогда
		УстановитьПараметрыИзШаблонаНаСервере();
	Иначе
		ЗагрузитьСписокСимволов();
	КонецЕсли;
	ДоступностьПараметров = Не ЗначениеЗаполнено(Объект.ШаблонПромокода);
	Для Каждого ЭлементНастройки Из Элементы.ГруппаНастройкаГенерации.ПодчиненныеЭлементы Цикл
		Если Не ЭлементНастройки = Элементы.КоличествоПромокодов Тогда
			ЭлементНастройки.Доступность = ДоступностьПараметров;
		КонецЕсли;
	КонецЦикла;
КонецПроцедуры 

&НаСервере
Процедура УстановитьПараметрыИзШаблонаНаСервере()
	Если Не ЗначениеЗаполнено(Объект.ШаблонПромокода) Тогда
		Возврат;
	КонецЕсли;
	ЗаполнитьЗначенияСвойств(Объект, Объект.ШаблонПромокода, "МаскаПромокода, АктивироватьЧерезДней, КоличествоДнейДействия, КоличествоРазПрименения, КоличествоСимволов");
	Объект.СловарьСимволов.Загрузить(Объект.ШаблонПромокода.СловарьСимволов.Выгрузить());
КонецПроцедуры

&НаСервере
Процедура ЗаполнитьШаблонПоСкидке()
	
	ШаблонПромокода = Неопределено;
	УсловияСкидок = ПромокодыУнф.УсловияПримененияСкидокЗаПромокод(Объект.СкидкаНаценка);
	Если ЗначениеЗаполнено(УсловияСкидок[Объект.СкидкаНаценка]) Тогда
    	ШаблонПромокода = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(УсловияСкидок[Объект.СкидкаНаценка], "ШаблонПромокода");
	КонецЕсли;
	Если ЗначениеЗаполнено(ШаблонПромокода) Тогда
		Объект.ШаблонПромокода = ШаблонПромокода;
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура ЗаполнитьУсловиеПоСкидке()
	
	УсловияПредоставленияСкидок = ПромокодыУнф.УсловияПримененияСкидокЗаПромокод(Объект.СкидкаНаценка);
	Если ЗначениеЗаполнено(УсловияПредоставленияСкидок[Объект.СкидкаНаценка]) Тогда
		Объект.УсловиеПредоставленияСкидки = УсловияПредоставленияСкидок[Объект.СкидкаНаценка];
	КонецЕсли;
	
КонецПроцедуры