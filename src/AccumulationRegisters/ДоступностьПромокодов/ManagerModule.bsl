#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

Функция ДоступноПримененийПромокода(Промокод, ДатаПроверки = Неопределено, ТекстСообщения = "") Экспорт
	Результат = Неопределено;
	ДатаДействия = ТекущаяДатаСеанса();
	Если Не ДатаПроверки = Неопределено Тогда
		ДатаДействия = ДатаПроверки;
	КонецЕсли;
	
	// Срез последних используется всегда без даты, т.к. работа с промокодами происходит только в оперативном режиме. 
	// Записи прошлой или будущей датой запрещены.
	ТекстЗапроса = 
	"ВЫБРАТЬ
	|	&Промокод КАК Промокод,
	|	0 КАК Количество
	|ПОМЕСТИТЬ вт_ВременноЗаблокированныеПрименения
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ПромокодыКСписаниюСерверЛояльности.Промокод,
	|	1
	|ИЗ
	|	РегистрСведений.ПромокодыКСписаниюСерверЛояльности КАК ПромокодыКСписаниюСерверЛояльности
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ДоступностьПромокодов.Промокод КАК Промокод,
	|	ДоступностьПромокодов.ДоступноОстаток КАК ДоступноОстаток
	|ПОМЕСТИТЬ втДоступностьПромокодов
	|ИЗ
	|	РегистрНакопления.ДоступностьПромокодов.Остатки(, Промокод В (&Промокод)) КАК ДоступностьПромокодов
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ДоступныеПромокоды.Промокод КАК Промокод,
	|	МАКСИМУМ(ДоступныеПромокоды.ДействуетС) КАК ДействуетС,
	|	МИНИМУМ(ДоступныеПромокоды.ДействуетДо) КАК ДействуетДо,
	|	МАКСИМУМ(ДоступныеПромокоды.ДатаНачалаСкидки) КАК ДатаНачалаСкидки,
	|	МИНИМУМ(ДоступныеПромокоды.ДатаОкончанияСкидки) КАК ДатаОкончанияСкидки,
	|	МИНИМУМ(ДоступныеПромокоды.Конечный) КАК Конечный,
	|	СУММА(ВЫБОР
	|			КОГДА ДоступныеПромокоды.Конечный
	|				ТОГДА ДоступныеПромокоды.КоличествоДоступно
	|			ИНАЧЕ 99999
	|		КОНЕЦ) КАК КоличествоДоступно
	|ИЗ
	|	(ВЫБРАТЬ
	|		Промокоды.Промокод КАК Промокод,
	|		Промокоды.ДействуетС КАК ДействуетС,
	|		Промокоды.ДействуетДо КАК ДействуетДо,
	|		Скидка.ДатаНачала КАК ДатаНачалаСкидки,
	|		Скидка.ДатаОкончания КАК ДатаОкончанияСкидки,
	|		Промокоды.Конечный КАК Конечный,
	|		ЕСТЬNULL(ДоступностьПромокодов.ДоступноОстаток, 0) КАК КоличествоДоступно
	|	ИЗ
	|		РегистрСведений.Промокоды КАК Промокоды
	|			ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.АвтоматическиеСкидки.УсловияПредоставления КАК УсловияПредоставленияСкидки
	|			ПО Промокоды.УсловиеПредоставленияСкидки = УсловияПредоставленияСкидки.УсловиеПредоставления
	|			ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.АвтоматическиеСкидки КАК Скидка
	|			ПО (УсловияПредоставленияСкидки.Ссылка = Скидка.Ссылка)
	|			ЛЕВОЕ СОЕДИНЕНИЕ втДоступностьПромокодов КАК ДоступностьПромокодов
	|			ПО Промокоды.Промокод = ДоступностьПромокодов.Промокод
	|	ГДЕ
	|		Промокоды.Промокод В(&Промокод)
	|	
	|	ОБЪЕДИНИТЬ ВСЕ
	|	
	|	ВЫБРАТЬ
	|		Промокоды.Промокод,
	|		Промокоды.ДействуетС,
	|		Промокоды.ДействуетДо,
	|		Скидка.ДатаНачала,
	|		Скидка.ДатаОкончания,
	|		ИСТИНА,
	|		-Блокировки.Количество
	|	ИЗ
	|		вт_ВременноЗаблокированныеПрименения КАК Блокировки
	|			ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.Промокоды КАК Промокоды
	|			ПО (Промокоды.Промокод = Блокировки.Промокод)
	|			ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.АвтоматическиеСкидки.УсловияПредоставления КАК УсловияПредоставленияСкидки
	|			ПО (Промокоды.УсловиеПредоставленияСкидки = УсловияПредоставленияСкидки.УсловиеПредоставления)
	|			ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.АвтоматическиеСкидки КАК Скидка
	|			ПО (УсловияПредоставленияСкидки.Ссылка = Скидка.Ссылка)
	|	ГДЕ
	|		Блокировки.Промокод В(&Промокод)
	|		И Промокоды.Конечный) КАК ДоступныеПромокоды
	|
	|СГРУППИРОВАТЬ ПО
	|	ДоступныеПромокоды.Промокод";	
	Запрос = Новый Запрос;
	Запрос.Текст = ТекстЗапроса;
	Запрос.УстановитьПараметр("Промокод", Промокод);
	Запрос.УстановитьПараметр("ДатаДействия", ДатаДействия);
	ВыборкаПромокод = Запрос.Выполнить().Выбрать();
	Если ВыборкаПромокод.Следующий() Тогда
		Если ВыборкаПромокод.ДействуетДо < ДатаДействия
			И НЕ ВыборкаПромокод.ДействуетДо = Дата(1,1,1) Тогда
			ТекстСообщения = НСтр("ru = 'Срок действия промокода истек.'");
			Результат = 0;			
		ИначеЕсли ВыборкаПромокод.ДействуетС > ДатаДействия
			И НЕ ВыборкаПромокод.ДействуетС = Дата(1,1,1) Тогда
			ТекстСообщения = НСтр("ru = 'Промокод еще не активирован.'");
			Результат = 0;			
		ИначеЕсли ВыборкаПромокод.ДатаОкончанияСкидки < ДатаДействия 
			И НЕ ВыборкаПромокод.ДатаОкончанияСкидки = Дата(1,1,1) Тогда
			ТекстСообщения = НСтр("ru = 'Акция, связанная с промокодом, завершена.'");
			Результат = 0;
		ИначеЕсли ВыборкаПромокод.ДатаНачалаСкидки > ДатаДействия 
			И НЕ ВыборкаПромокод.ДатаНачалаСкидки = Дата(1,1,1) Тогда
			ТекстСообщения = НСтр("ru = 'Акция, связанная с промокодом, еще не началась.'");
			Результат = 0;
		ИначеЕсли ВыборкаПромокод.Конечный И ВыборкаПромокод.КоличествоДоступно <= 0 Тогда
			// Тут может оказаться активный промокод, который уже начали применять на другой кассе, и использовали последнее применение
			// Промокод еще не переведен в состояние погашен, но количество уже не доступно
			ТекстСообщения = НСтр("ru = 'Количество применений промкода исчерпано.'");
			Результат = 0;
		Иначе
			// Промокод доступен
			Результат = ВыборкаПромокод.КоличествоДоступно;
		КонецЕсли;
	Иначе
		ТекстСообщения = НСтр("ru = 'Промокод не найден.'");
		Результат = Неопределено;
	КонецЕсли;

	Возврат Результат;
	
КонецФункции

#КонецЕсли
