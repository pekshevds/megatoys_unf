#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	УстановитьПодменюПодсистемыПечати();
	
	ПечатьДокументовУНФ.УстановитьОтображениеПодменюПечати(Элементы.ВозвратКомитентуПодменюПечать);
	ПечатьДокументовУНФ.КорректировкаРазмещениеПодчиненнойГруппыКомандПечати(ЭтаФорма, Элементы.ВозвратКомитентуПодменюПечать, Элементы.ВозвратКомитентуПодменюПечатьФаксимиле);
	
	// УНФ.ОтборыСписка
	ОпределитьПорядокПредопределенныхОтборовНаСервере();
	ВосстановитьОтборыСписковПриСозданииНаСервере();
	
	Элементы.СтраницаОтчетКомитентуПраваяПанель.Ширина = 28;
	
	МассивИсключений = РаботаСОтборами.МассивИсключенийПоТипуДокумента("ОтчетКомитенту");
	РаботаСОтборами.ЗаполнитьСписокВыбораОтборОплата(ЭтаФорма, "ОтборОплата", Ложь, МассивИсключений);
	// Конец УНФ.ОтборыСписка
	
	УстановитьФорматДатыСписковПриСозданииНаСервере();
	УстановитьПанелиКонтактнойИнформацииПриСозданииНаСервере();
	
	Элементы.ЖурналПодменюЗаполнитьВозвратКомитенту.Видимость = Ложь;
	Элементы.ЖурналПодменюЗаполнитьОтчетКомитенту.Видимость = Ложь;
	Элементы.ЖурналПриемНаКомиссиюПодменюЗаполнить.Видимость = Ложь;
	
КонецПроцедуры

&НаКлиенте
Процедура ПриЗакрытии(ЗавершениеРаботы)
	Если НЕ ЗавершениеРаботы Тогда
		//УНФ.ОтборыСписка
		СохранитьНастройкиОтборов();
		//Конец УНФ.ОтборыСписка
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура ОбработкаОповещения(ИмяСобытия, Параметр, Источник)
	// УНФ.ПанельКонтактнойИнформации
	Если КонтактнаяИнформацияПанельУНФКлиент.ОбрабатыватьОповещения(ЭтотОбъект, ИмяСобытия, Параметр) Тогда
		ОбновитьПанельКонтактнойИнформации();
	КонецЕсли;
	// Конец УНФ.ПанельКонтактнойИнформации
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовФормы

&НаКлиенте
Процедура СписокОтчетКомитентуПриАктивизацииСтроки(Элемент)
	
	КонтактнаяИнформацияПанельУНФКлиент.ПриАктивизацииДинамическогоСписка(ЭтотОбъект, Элемент, ТекущийКонтрагент,
		"Контрагент");
	
КонецПроцедуры

&НаКлиенте
Процедура СписокПриАктивизацииСтроки(Элемент)
	
	Если ТипЗнч(Элемент.ТекущаяСтрока) <> Тип("СтрокаГруппировкиДинамическогоСписка") Тогда
		ПодключитьОбработчикОжидания("УстановитьВидимостьПодменюПоТипуОбъектаСтроки", 0.3, Истина);
	КонецЕсли;

КонецПроцедуры

&НаКлиенте
Процедура СписокПередНачаломДобавления(Элемент, Отказ, Копирование, Родитель, Группа, Параметр)
	
	Если Копирование Тогда
		Возврат;
	КонецЕсли;
	
	Если НЕ ЗначениеЗаполнено(Параметр) Тогда
		Возврат;
	КонецЕсли;
	
	Отказ = Истина;
	
	СтруктураПараметров = Новый Структура();
	РаботаСФормойДокументаКлиент.ДобавитьПоследнееЗначениеОтбораПоля(ДанныеМеток, СтруктураПараметров, "Контрагент");
	РаботаСФормойДокументаКлиент.ДобавитьПоследнееЗначениеОтбораПоля(ДанныеМеток, СтруктураПараметров, "Организация");
	
	ИмяФормыСтрока = РаботаСФормойДокументаКлиент.ИмяДокументаПоТипу(Параметр);
	
	ВидОперации = Неопределено;
	
	Если ИмяФормыСтрока = "РасходнаяНакладная" Тогда
		ВидОперации = ПредопределенноеЗначение("Перечисление.ВидыОперацийРасходнаяНакладная.ВозвратКомитенту");
	ИначеЕсли ИмяФормыСтрока = "ПриходнаяНакладная" Тогда
		ВидОперации = ПредопределенноеЗначение("Перечисление.ВидыОперацийПриходнаяНакладная.ПриемНаКомиссию");
	КонецЕсли;
	
	СтруктураПараметров.Вставить("ВидОперации", ВидОперации);
	
	ОткрытьФорму("Документ."+ИмяФормыСтрока+".ФормаОбъекта", Новый Структура("ЗначенияЗаполнения",СтруктураПараметров));
	
КонецПроцедуры

&НаКлиенте
Процедура ОтборОрганизацияОбработкаВыбора(Элемент, ВыбранноеЗначение, СтандартнаяОбработка)
	Если Не ЗначениеЗаполнено(ВыбранноеЗначение) Тогда
		Возврат;
	КонецЕсли;
	
	УстановитьМеткуИОтборСписка("Организация", Элемент.Родитель.Имя, ВыбранноеЗначение);
	ВыбранноеЗначение = Неопределено;
КонецПроцедуры

&НаКлиенте
Процедура ОтборОтветственныйОбработкаВыбора(Элемент, ВыбранноеЗначение, СтандартнаяОбработка)

	Если Не ЗначениеЗаполнено(ВыбранноеЗначение) Тогда
		Возврат;
	КонецЕсли;
	
	УстановитьМеткуИОтборСписка("Ответственный", Элемент.Родитель.Имя, ВыбранноеЗначение);
	ВыбранноеЗначение = Неопределено;
	
КонецПроцедуры

&НаКлиенте
Процедура ОтборКонтрагентОбработкаВыбора(Элемент, ВыбранноеЗначение, СтандартнаяОбработка)
	
	Если Не ЗначениеЗаполнено(ВыбранноеЗначение) Тогда
		Возврат;
	КонецЕсли;
	
	УстановитьМеткуИОтборСписка("Контрагент", Элемент.Родитель.Имя, ВыбранноеЗначение);
	ВыбранноеЗначение = Неопределено;

КонецПроцедуры

&НаКлиенте
Процедура ОтборОперацияОбработкаВыбора(Элемент, ВыбранноеЗначение, СтандартнаяОбработка)
	
	Если Не ЗначениеЗаполнено(ВыбранноеЗначение) Тогда
		Возврат;
	КонецЕсли;
	
	Если ВыбранноеЗначение = "ПриемНаКомиссию" Тогда
		ВыбранноеЗначение = ПредопределенноеЗначение("Перечисление.ВидыОперацийПриходнаяНакладная.ПриемНаКомиссию")
	ИначеЕсли ВыбранноеЗначение = "ВозвратКомитенту" Тогда
		ВыбранноеЗначение = ПредопределенноеЗначение("Перечисление.ВидыОперацийРасходнаяНакладная.ВозвратКомитенту")
	КонецЕсли;
	
	УстановитьМеткуИОтборСписка("Операция", Элемент.Родитель.Имя, ВыбранноеЗначение);
	ВыбранноеЗначение = Неопределено;
	
КонецПроцедуры

&НаКлиенте
Процедура СтраницаСписаниеЗапасовОтборОрганизацияОбработкаВыбора(Элемент, ВыбранноеЗначение, СтандартнаяОбработка)
	Если Не ЗначениеЗаполнено(ВыбранноеЗначение) Тогда
		Возврат;
	КонецЕсли;
	
	УстановитьМеткуИОтборСписка("Организация", Элемент.Родитель.Имя, ВыбранноеЗначение);
	ВыбранноеЗначение = Неопределено;
КонецПроцедуры

&НаКлиенте
Процедура ОтборОперацияСписанияОбработкаВыбора(Элемент, ВыбранноеЗначение, СтандартнаяОбработка)
	
	Если Не ЗначениеЗаполнено(ВыбранноеЗначение) Тогда
		Возврат;
	КонецЕсли;
	
	УстановитьМеткуИОтборСписка("Операция", Элемент.Родитель.Имя, ВыбранноеЗначение);
	ВыбранноеЗначение = Неопределено;
	
КонецПроцедуры

&НаКлиенте
Процедура СтраницаСписаниеЗапасовОтборОтветственныйОбработкаВыбора(Элемент, ВыбранноеЗначение, СтандартнаяОбработка)

	Если Не ЗначениеЗаполнено(ВыбранноеЗначение) Тогда
		Возврат;
	КонецЕсли;
	
	УстановитьМеткуИОтборСписка("Ответственный", Элемент.Родитель.Имя, ВыбранноеЗначение);
	ВыбранноеЗначение = Неопределено;
	
КонецПроцедуры

&НаКлиенте
Процедура СтраницаОтчетКомитентуОтборОрганизацияОбработкаВыбора(Элемент, ВыбранноеЗначение, СтандартнаяОбработка)
	Если Не ЗначениеЗаполнено(ВыбранноеЗначение) Тогда
		Возврат;
	КонецЕсли;
	
	УстановитьМеткуИОтборСписка("Организация", Элемент.Родитель.Имя, ВыбранноеЗначение);
	ВыбранноеЗначение = Неопределено;
КонецПроцедуры

&НаКлиенте
Процедура СтраницаОтчетКомитентуОтборОтветственныйОбработкаВыбора(Элемент, ВыбранноеЗначение, СтандартнаяОбработка)

	Если Не ЗначениеЗаполнено(ВыбранноеЗначение) Тогда
		Возврат;
	КонецЕсли;
	
	УстановитьМеткуИОтборСписка("Ответственный", Элемент.Родитель.Имя, ВыбранноеЗначение);
	ВыбранноеЗначение = Неопределено;
	
КонецПроцедуры

&НаКлиенте
Процедура СтраницаОтчетКомитентуОтборКонтрагентОбработкаВыбора(Элемент, ВыбранноеЗначение, СтандартнаяОбработка)
	
	Если Не ЗначениеЗаполнено(ВыбранноеЗначение) Тогда
		Возврат;
	КонецЕсли;
	
	УстановитьМеткуИОтборСписка("Контрагент", Элемент.Родитель.Имя, ВыбранноеЗначение);
	ВыбранноеЗначение = Неопределено;

КонецПроцедуры

&НаКлиенте
Процедура ОтборОплатаОбработкаВыбора(Элемент, ВыбранноеЗначение, СтандартнаяОбработка)
	
	Если Не ЗначениеЗаполнено(ВыбранноеЗначение) Тогда
		Возврат;
	КонецЕсли;
	Если ВыбранноеЗначение = НСтр("ru='Без оплаты'")
		Или ВыбранноеЗначение = НСтр("ru='Оплачен частично'")
		Или ВыбранноеЗначение = НСтр("ru='Оплачен полностью'") Тогда
		УстановитьМеткуИОтборСписка("СтатусОплаты", Элемент.Родитель.Имя, ВыбранноеЗначение);
	Иначе
		УстановитьМеткуИОтборСписка("НомерКартинкиОплаты", Элемент.Родитель.Имя, ВыбранноеЗначение);
	КонецЕсли;
	ВыбранноеЗначение = Неопределено;
	
КонецПроцедуры

&НаКлиенте
Процедура СтраницаВозвратКомитентуОтборОрганизацияОбработкаВыбора(Элемент, ВыбранноеЗначение, СтандартнаяОбработка)
	Если Не ЗначениеЗаполнено(ВыбранноеЗначение) Тогда
		Возврат;
	КонецЕсли;
	
	УстановитьМеткуИОтборСписка("Организация", Элемент.Родитель.Имя, ВыбранноеЗначение);
	ВыбранноеЗначение = Неопределено;
КонецПроцедуры

&НаКлиенте
Процедура СтраницаВозвратКомитентуОтборОтветственныйОбработкаВыбора(Элемент, ВыбранноеЗначение, СтандартнаяОбработка)

	Если Не ЗначениеЗаполнено(ВыбранноеЗначение) Тогда
		Возврат;
	КонецЕсли;
	
	УстановитьМеткуИОтборСписка("Ответственный", Элемент.Родитель.Имя, ВыбранноеЗначение);
	ВыбранноеЗначение = Неопределено;
	
КонецПроцедуры

&НаКлиенте
Процедура СтраницаВозвратКомитентуОтборКонтрагентОбработкаВыбора(Элемент, ВыбранноеЗначение, СтандартнаяОбработка)
	
	Если Не ЗначениеЗаполнено(ВыбранноеЗначение) Тогда
		Возврат;
	КонецЕсли;
	
	УстановитьМеткуИОтборСписка("Контрагент", Элемент.Родитель.Имя, ВыбранноеЗначение);
	ВыбранноеЗначение = Неопределено;

КонецПроцедуры

&НаКлиенте
Процедура СтраницаПриемНаКомиссиюОтборКонтрагентОбработкаВыбора(Элемент, ВыбранноеЗначение, СтандартнаяОбработка)
	
	Если Не ЗначениеЗаполнено(ВыбранноеЗначение) Тогда
		Возврат;
	КонецЕсли;
	
	УстановитьМеткуИОтборСписка("Контрагент", Элемент.Родитель.Имя, ВыбранноеЗначение);
	ВыбранноеЗначение = Неопределено;

КонецПроцедуры

&НаКлиенте
Процедура СтраницаПриемНаКомиссиюОтборОтветственныйОбработкаВыбора(Элемент, ВыбранноеЗначение, СтандартнаяОбработка)
	
	Если Не ЗначениеЗаполнено(ВыбранноеЗначение) Тогда
		Возврат;
	КонецЕсли;
	
	УстановитьМеткуИОтборСписка("Ответственный", Элемент.Родитель.Имя, ВыбранноеЗначение);
	ВыбранноеЗначение = Неопределено;

КонецПроцедуры

&НаКлиенте
Процедура СтраницаПриемНаКомиссиюОтборОрганизацияОбработкаВыбора(Элемент, ВыбранноеЗначение, СтандартнаяОбработка)
	
	Если Не ЗначениеЗаполнено(ВыбранноеЗначение) Тогда
		Возврат;
	КонецЕсли;
	
	УстановитьМеткуИОтборСписка("Организация", Элемент.Родитель.Имя, ВыбранноеЗначение);
	ВыбранноеЗначение = Неопределено;

КонецПроцедуры

&НаКлиенте
Процедура СвернутьОтборыНажатие(Элемент)
	СвернутьОтборы();
КонецПроцедуры

&НаКлиенте
Процедура СтраницаСписаниеЗапасовСвернутьОтборыОбработкаНавигационнойСсылки(Элемент, НавигационнаяСсылкаФорматированнойСтроки, СтандартнаяОбработка)
	СвернутьОтборы();
КонецПроцедуры

&НаКлиенте
Процедура ДекорацияРазвернутьОтборыНажатие(Элемент)
	РазвернутьОтборы();
КонецПроцедуры

&НаКлиенте
Процедура СтраницаСписаниеЗапасовДекорацияРазвернутьОтборыНажатие(Элемент)
	РазвернутьОтборы();
КонецПроцедуры

&НаКлиенте
Процедура СтраницаОтчетКомитентуСвернутьОтборыНажатие(Элемент)
	СвернутьОтборы();
КонецПроцедуры

&НаКлиенте
Процедура СтраницаВозвратКомитентуСвернутьОтборыНажатие(Элемент)
	СвернутьОтборы();
КонецПроцедуры

&НаКлиенте
Процедура СтраницаОтчетКомитентуДекорацияРазвернутьОтборыНажатие(Элемент)
	РазвернутьОтборы();
КонецПроцедуры

&НаКлиенте
Процедура СтраницаПриемНаКомиссиюДекорацияРазвернутьОтборыНажатие(Элемент)
	РазвернутьОтборы();
КонецПроцедуры

&НаКлиенте
Процедура СтраницаПриемНаКомиссиюСвернутьОтборыНажатие(Элемент)
	СвернутьОтборы();
КонецПроцедуры

&НаКлиенте
Процедура СтраницаВозвратКомитентуДекорацияРазвернутьОтборыНажатие(Элемент)
	РазвернутьОтборы();
КонецПроцедуры

&НаКлиенте
Процедура СписокВозвратКомитентуПередНачаломДобавления(Элемент, Отказ, Копирование, Родитель, Группа, Параметр)
	Если Копирование Тогда
		Возврат;
	КонецЕсли;
	
	Если НЕ ЗначениеЗаполнено(Параметр) Тогда
		Возврат;
	КонецЕсли;
	
	Отказ = Истина;
	
	СтруктураПараметров = Новый Структура();
	РаботаСФормойДокументаКлиент.ДобавитьПоследнееЗначениеОтбораПоля(ДанныеМетокВозвратКомитенту, СтруктураПараметров, "Контрагент");
	РаботаСФормойДокументаКлиент.ДобавитьПоследнееЗначениеОтбораПоля(ДанныеМетокВозвратКомитенту, СтруктураПараметров, "Организация");
	
	ИмяФормыСтрока = РаботаСФормойДокументаКлиент.ИмяДокументаПоТипу(Параметр);
	
	ВидОперации = Неопределено;
	
	ВидОперации = ПредопределенноеЗначение("Перечисление.ВидыОперацийРасходнаяНакладная.ВозвратКомитенту");
	
	СтруктураПараметров.Вставить("ВидОперации", ВидОперации);
	
	ОткрытьФорму("Документ."+ИмяФормыСтрока+".ФормаОбъекта", Новый Структура("ЗначенияЗаполнения",СтруктураПараметров));

КонецПроцедуры

&НаКлиенте
Процедура СписокОтчетКомитентуПередНачаломДобавления(Элемент, Отказ, Копирование, Родитель, Группа, Параметр)
		Если Копирование Тогда
		Возврат;
	КонецЕсли;
	
	Если НЕ ЗначениеЗаполнено(Параметр) Тогда
		Возврат;
	КонецЕсли;
	
	Отказ = Истина;
	
	СтруктураПараметров = Новый Структура();
	РаботаСФормойДокументаКлиент.ДобавитьПоследнееЗначениеОтбораПоля(ДанныеМетокОтчетКомитенту, СтруктураПараметров, "Контрагент");
	РаботаСФормойДокументаКлиент.ДобавитьПоследнееЗначениеОтбораПоля(ДанныеМетокОтчетКомитенту, СтруктураПараметров, "Организация");
	
	ИмяФормыСтрока = РаботаСФормойДокументаКлиент.ИмяДокументаПоТипу(Параметр);
	
	ОткрытьФорму("Документ."+ИмяФормыСтрока+".ФормаОбъекта", Новый Структура("ЗначенияЗаполнения",СтруктураПараметров));

КонецПроцедуры

&НаКлиенте
Процедура СписокПереоценкаУКомиссионераПередНачаломДобавления(Элемент, Отказ, Копирование, Родитель, Группа, Параметр)
	Если Копирование Тогда
		Возврат;
	КонецЕсли;
	
	Если НЕ ЗначениеЗаполнено(Параметр) Тогда
		Возврат;
	КонецЕсли;
	
	Отказ = Истина;
	
	СтруктураПараметров = Новый Структура();
	РаботаСФормойДокументаКлиент.ДобавитьПоследнееЗначениеОтбораПоля(ДанныеМетокСписаниеЗапасов, СтруктураПараметров, "Контрагент");
	РаботаСФормойДокументаКлиент.ДобавитьПоследнееЗначениеОтбораПоля(ДанныеМетокСписаниеЗапасов, СтруктураПараметров, "Организация");
	
	ИмяФормыСтрока = РаботаСФормойДокументаКлиент.ИмяДокументаПоТипу(Параметр);
	
	ОткрытьФорму("Документ."+ИмяФормыСтрока+".ФормаОбъекта", Новый Структура("ЗначенияЗаполнения",СтруктураПараметров));

КонецПроцедуры

&НаКлиенте
Процедура СписокСписаниеЗапасовПриАктивизацииСтроки(Элемент)

	ТекущиеДанные = Элементы.СписокСписаниеЗапасов.ТекущиеДанные;
	
	Если ТекущиеДанные = Неопределено Тогда
		Элементы.СписокСписаниеЗапасовПодменюЗаполнить.Видимость = Ложь;
		Возврат;
	КонецЕсли;

	ОбщегоНазначенияКлиентСервер.УстановитьСвойствоЭлементаФормы(Элементы, "СписокСписаниеЗапасовДокументПриходныйОрдерСоздатьНаОсновании", "Видимость", Не ТипЗнч(ТекущиеДанные.Ссылка) = Тип("ДокументСсылка.СписаниеЗапасов"));
	
КонецПроцедуры

&НаКлиенте
Процедура СписокПриемНаКомиссиюПередНачаломДобавления(Элемент, Отказ, Копирование, Родитель, Группа, Параметр)
	Если Копирование Тогда
		Возврат;
	КонецЕсли;
	
	Если НЕ ЗначениеЗаполнено(Параметр) Тогда
		Возврат;
	КонецЕсли;
	
	Отказ = Истина;
	
	СтруктураПараметров = Новый Структура();
	РаботаСФормойДокументаКлиент.ДобавитьПоследнееЗначениеОтбораПоля(ДанныеМетокПриемНаКомиссию, СтруктураПараметров, "Контрагент");
	РаботаСФормойДокументаКлиент.ДобавитьПоследнееЗначениеОтбораПоля(ДанныеМетокПриемНаКомиссию, СтруктураПараметров, "Организация");
	
	ИмяФормыСтрока = РаботаСФормойДокументаКлиент.ИмяДокументаПоТипу(Параметр);
	
	ВидОперации = Неопределено;
	
	ВидОперации = ПредопределенноеЗначение("Перечисление.ВидыОперацийПриходнаяНакладная.ПриемНаКомиссию");
	
	СтруктураПараметров.Вставить("ВидОперации", ВидОперации);
	
	ОткрытьФорму("Документ."+ИмяФормыСтрока+".ФормаОбъекта", Новый Структура("ЗначенияЗаполнения",СтруктураПараметров));
КонецПроцедуры

&НаКлиенте
Процедура ДекорацияТоварыПринятыеНажатие(Элемент)
	ОткрытьОтчетТоварыПринятыеНаКомиссию()
КонецПроцедуры

&НаКлиенте
Процедура ДекорацияРасчетыНажатие(Элемент)
	ОткрытьОтчетРасчетыСКомитентами()
КонецПроцедуры

&НаКлиенте
Процедура ДекорацияТоварыПринятые1Нажатие(Элемент)
	ОткрытьОтчетТоварыПринятыеНаКомиссию()
КонецПроцедуры

&НаКлиенте
Процедура ДекорацияРасчеты1Нажатие(Элемент)
	ОткрытьОтчетРасчетыСКомитентами()
КонецПроцедуры

&НаКлиенте
Процедура ДекорацияТоварыПринятые3Нажатие(Элемент)
	ОткрытьОтчетТоварыПринятыеНаКомиссию()
КонецПроцедуры

&НаКлиенте
Процедура ДекорацияРасчеты3Нажатие(Элемент)
	ОткрытьОтчетРасчетыСКомитентами()
КонецПроцедуры

&НаКлиенте
Процедура ДекорацияТоварыПринятые4Нажатие(Элемент)
	ОткрытьОтчетТоварыПринятыеНаКомиссию()
КонецПроцедуры

&НаКлиенте
Процедура ДекорацияРасчеты4Нажатие(Элемент)
	ОткрытьОтчетРасчетыСКомитентами()
КонецПроцедуры

#КонецОбласти


#Область СлужебныеПроцедурыИФункции

&НаКлиенте
Процедура ОткрытьОтчетТоварыПринятыеНаКомиссию()
	
	ТекущиеДанные = ТекущиеДанныеСпискаСтраницы();
	
	Если ТекущиеДанные = Неопределено Тогда Возврат КонецЕсли;
	
	Вариант = РаботаСФормойДокументаКлиентСервер.ВариантОтчета("ЗапасыПринятые", "Ведомость");
	
	ПараметрыОткрытия = Новый Структура;
	ПараметрыОткрытия.Вставить("СформироватьПриОткрытии", Истина);
	ОтборРасшифровки = Новый Соответствие;
	ОтборРасшифровки.Вставить("Контрагент", ТекущиеДанные.Контрагент);
	ПараметрыОткрытия.Вставить("ОтборРасшифровки", ОтборРасшифровки);
	
	ВариантыОтчетовКлиент.ОткрытьФормуОтчета(, Вариант, ПараметрыОткрытия)

КонецПроцедуры

&НаКлиенте
Процедура ОткрытьОтчетРасчетыСКомитентами()
	
	ТекущиеДанные = ТекущиеДанныеСпискаСтраницы();
	
	Если ТекущиеДанные = Неопределено Тогда Возврат КонецЕсли;
	
	Вариант = РаботаСФормойДокументаКлиентСервер.ВариантОтчета("РасчетыСКомитентами", "РасчетыСКомитентами");
	
	ПараметрыОткрытия = Новый Структура;
	ПараметрыОткрытия.Вставить("СформироватьПриОткрытии", Истина);
	ОтборРасшифровки = Новый Соответствие;
	ОтборРасшифровки.Вставить("Контрагент", ТекущиеДанные.Контрагент);
	ПараметрыОткрытия.Вставить("ОтборРасшифровки", ОтборРасшифровки);
	
	ВариантыОтчетовКлиент.ОткрытьФормуОтчета(, Вариант, ПараметрыОткрытия)

КонецПроцедуры
	
&НаСервере
Процедура УстановитьПодменюПодсистемыПечати()
	
	УстановитьПодменюПодсистемыПечатиЖурнала();
	
	Массив = Новый Массив;
	Массив.Добавить(Тип("ДокументСсылка.ПриходнаяНакладная"));
	
	ТипИсточника = Новый ОписаниеТипов(Массив);
	
	ПараметрыРазмещения = ПодключаемыеКоманды.ПараметрыРазмещения();
	
	ПараметрыРазмещения.Источники = ТипИсточника;
	ПараметрыРазмещения.КоманднаяПанель = Элементы.ГруппаВажныеКомандыПриемНаКомиссию;
	ПараметрыРазмещения.ПрефиксГрупп = "ПриемНаКомиссию";
	ПодключаемыеКоманды.ПриСозданииНаСервере(ЭтотОбъект, ПараметрыРазмещения);
	
	Массив.Очистить();
	Массив.Добавить(Тип("ДокументСсылка.РасходнаяНакладная"));
	
	ТипИсточника = Новый ОписаниеТипов(Массив);
	
	ПараметрыРазмещения.Источники = ТипИсточника;
	ПараметрыРазмещения.КоманднаяПанель = Элементы.ГруппаВажныеКомандыВозвратКомитенту;
	ПараметрыРазмещения.ПрефиксГрупп = "ВозвратКомитенту";
	ПодключаемыеКоманды.ПриСозданииНаСервере(ЭтотОбъект, ПараметрыРазмещения);
	
	Массив.Очистить();
	Массив.Добавить(Тип("ДокументСсылка.ОтчетКомитенту"));
	
	ТипИсточника = Новый ОписаниеТипов(Массив);
	
	ПараметрыРазмещения.Источники = ТипИсточника;
	ПараметрыРазмещения.КоманднаяПанель = Элементы.ГруппаВажныеКомандыОтчетКомитенту;
	ПараметрыРазмещения.ПрефиксГрупп = "ОтчетКомитенту";
	ПодключаемыеКоманды.ПриСозданииНаСервере(ЭтотОбъект, ПараметрыРазмещения);
	
	ПечатьДокументовУНФ.УстановитьОтображениеПодменюПечати(Элементы.ОтчетКомитентуПодменюПечать);
	
	Массив.Очистить();
	Массив.Добавить(Тип("ДокументСсылка.СписаниеЗапасов"));
	Массив.Добавить(Тип("ДокументСсылка.ПересортицаЗапасов"));
	
	ТипИсточника = Новый ОписаниеТипов(Массив);
	
	ПараметрыРазмещения.Источники = ТипИсточника;
	ПараметрыРазмещения.КоманднаяПанель = Элементы.ГруппаВажныеКомандыСписаниеЗапасов;
	ПараметрыРазмещения.ПрефиксГрупп = "СписаниеЗапасов";
	ПодключаемыеКоманды.ПриСозданииНаСервере(ЭтотОбъект, ПараметрыРазмещения);
	
	ПечатьДокументовУНФ.УстановитьОтображениеПодменюПечати(Элементы.СписаниеЗапасовПодменюПечать);
	
КонецПроцедуры

&НаСервере
Процедура УстановитьПодменюПодсистемыПечатиЖурнала()
	
	Массив = Новый Массив;
	Массив.Добавить(Тип("ДокументСсылка.ПриходнаяНакладная"));
	
	ТипИсточника = Новый ОписаниеТипов(Массив);
	
	ПараметрыРазмещения = ПодключаемыеКоманды.ПараметрыРазмещения();
	
	ПараметрыРазмещения.Источники = ТипИсточника;
	ПараметрыРазмещения.КоманднаяПанель = Элементы.ГруппаВажныеКоманды;
	ПараметрыРазмещения.ПрефиксГрупп = "ПН";
	ПодключаемыеКоманды.ПриСозданииНаСервере(ЭтотОбъект, ПараметрыРазмещения);
	
	Массив.Очистить();
	Массив.Добавить(Тип("ДокументСсылка.РасходнаяНакладная"));
	
	ТипИсточника = Новый ОписаниеТипов(Массив);
	
	ПараметрыРазмещения.Источники = ТипИсточника;
	ПараметрыРазмещения.КоманднаяПанель = Элементы.ГруппаВажныеКоманды;
	ПараметрыРазмещения.ПрефиксГрупп = "РН";
	ПодключаемыеКоманды.ПриСозданииНаСервере(ЭтотОбъект, ПараметрыРазмещения);
	
	Массив.Очистить();
	Массив.Добавить(Тип("ДокументСсылка.ОтчетКомитенту"));
	
	ТипИсточника = Новый ОписаниеТипов(Массив);
	
	ПараметрыРазмещения.Источники = ТипИсточника;
	ПараметрыРазмещения.КоманднаяПанель = Элементы.ГруппаВажныеКоманды;
	ПараметрыРазмещения.ПрефиксГрупп = "Отчет";
	ПодключаемыеКоманды.ПриСозданииНаСервере(ЭтотОбъект, ПараметрыРазмещения);
	
	ПечатьДокументовУНФ.УстановитьОтображениеПодменюПечати(Элементы.ОтчетПодменюПечать);
	
	Массив.Очистить();
	Массив.Добавить(Тип("ДокументСсылка.ПересортицаЗапасов"));
	
	ТипИсточника = Новый ОписаниеТипов(Массив);
	
	ПараметрыРазмещения.Источники = ТипИсточника;
	ПараметрыРазмещения.КоманднаяПанель = Элементы.ГруппаВажныеКоманды;
	ПараметрыРазмещения.ПрефиксГрупп = "Пересортица";
	ПодключаемыеКоманды.ПриСозданииНаСервере(ЭтотОбъект, ПараметрыРазмещения);
	
	ПечатьДокументовУНФ.УстановитьОтображениеПодменюПечати(Элементы.ПересортицаПодменюПечать);
	
	Массив.Очистить();
	Массив.Добавить(Тип("ДокументСсылка.СписаниеЗапасов"));
	
	ТипИсточника = Новый ОписаниеТипов(Массив);
	
	ПараметрыРазмещения.Источники = ТипИсточника;
	ПараметрыРазмещения.КоманднаяПанель = Элементы.ГруппаВажныеКоманды;
	ПараметрыРазмещения.ПрефиксГрупп = "Списание";
	ПодключаемыеКоманды.ПриСозданииНаСервере(ЭтотОбъект, ПараметрыРазмещения);
	
	ПечатьДокументовУНФ.УстановитьОтображениеПодменюПечати(Элементы.СписаниеПодменюПечать);
	
КонецПроцедуры

&НаКлиенте
Функция ТекущиеДанныеСпискаСтраницы()
	
	ИмяСтраницы = Элементы.ГруппаСтраницы.ТекущаяСтраница.Имя;
	
	Если ИмяСтраницы = "СтраницаВозвратКомитенту" Тогда Возврат Элементы.СписокВозвратКомитенту.ТекущиеДанные;
	ИначеЕсли ИмяСтраницы = "СтраницаОтчетКомитенту" Тогда Возврат Элементы.СписокОтчетКомитенту.ТекущиеДанные;
	ИначеЕсли ИмяСтраницы = "СтраницаСписаниеЗапасов" Тогда Возврат Элементы.СписокСписаниеЗапасов.ТекущиеДанные;
	ИначеЕсли ИмяСтраницы = "СтраницаПриемНаКомиссию" Тогда Возврат Элементы.СписокПриемНаКомиссию.ТекущиеДанные;
	ИначеЕсли ИмяСтраницы = "СтраницаЖурнал" Тогда Возврат Элементы.Список.ТекущиеДанные;
	КонецЕсли;
	
	Возврат Неопределено;
	
КонецФункции

&НаСервере
Процедура ВосстановитьОтборыСписковПриСозданииНаСервере()
	
	РаботаСОтборами.ВосстановитьНастройкиОтборов(ЭтотОбъект, Список, "Список");
	
	СтруктураИменЭлементов = Новый Структура("ФильтрыНастройкиИДопИнфо, ДекорацияРазвернутьОтборы, ПраваяПанель, ОтборПериод, ПредставлениеПериода");
	
	СтруктураИменЭлементов.ФильтрыНастройкиИДопИнфо = "СтраницаОтчетКомитентуФильтрыНастройкиДопИнфо";
	СтруктураИменЭлементов.ДекорацияРазвернутьОтборы = "СтраницаОтчетКомитентуДекорацияРазвернутьОтборы";
	СтруктураИменЭлементов.ПраваяПанель = "СтраницаОтчетКомитентуПраваяПанель";
	СтруктураИменЭлементов.ОтборПериод = "ОтборПериодОтчетКомитенту";
	СтруктураИменЭлементов.ПредставлениеПериода = "ПредставлениеПериодаОтчетКомитенту";
	
	РаботаСОтборами.ВосстановитьНастройкиОтборов(ЭтотОбъект, СписокОтчетКомитенту, "СписокОтчетКомитенту", СтруктураИменЭлементов,,,, "ДанныеМетокОтчетКомитенту",, "ДанныеОтборовОтчетКомитенту", "ГруппаОтборыОтчетКомитенту");
	
	СтруктураИменЭлементов.ФильтрыНастройкиИДопИнфо = "СтраницаВозвратКомитентуФильтрыНастройкиДопИнфо";
	СтруктураИменЭлементов.ДекорацияРазвернутьОтборы = "СтраницаВозвратКомитентуДекорацияРазвернутьОтборы";
	СтруктураИменЭлементов.ПраваяПанель = "СтраницаВозвратКомитентуПраваяПанель";
	СтруктураИменЭлементов.ОтборПериод = "ОтборПериодВозвратКомитенту";
	СтруктураИменЭлементов.ПредставлениеПериода = "ПредставлениеПериодаВозвратКомитенту";
	
	РаботаСОтборами.ВосстановитьНастройкиОтборов(ЭтотОбъект, СписокВозвратКомитенту, "СписокВозвратКомитенту", СтруктураИменЭлементов,,,, "ДанныеМетокВозвратКомитенту",, "ДанныеОтборовВозвратКомитенту", "ГруппаОтборыВозвратКомитенту");
	
	СтруктураИменЭлементов.ФильтрыНастройкиИДопИнфо = "СтраницаСписаниеЗапасовФильтрыНастройкиДопИнфо";
	СтруктураИменЭлементов.ДекорацияРазвернутьОтборы = "СтраницаСписаниеЗапасовДекорацияРазвернутьОтборы";
	СтруктураИменЭлементов.ПраваяПанель = "СтраницаСписаниеЗапасовПраваяПанель";
	СтруктураИменЭлементов.ОтборПериод = "ОтборПериодСписаниеЗапасов";
	СтруктураИменЭлементов.ПредставлениеПериода = "ПредставлениеПериодаСписаниеЗапасов";
	
	РаботаСОтборами.ВосстановитьНастройкиОтборов(ЭтотОбъект, СписокСписаниеЗапасов, "СписокСписаниеЗапасов", СтруктураИменЭлементов,,,, "ДанныеМетокСписаниеЗапасов",, "ДанныеОтборовСписаниеЗапасов", "ГруппаОтборыСписаниеЗапасов");
	
	СтруктураИменЭлементов.ФильтрыНастройкиИДопИнфо = "СтраницаПриемНаКомиссиюФильтрыНастройкиДопИнфо";
	СтруктураИменЭлементов.ДекорацияРазвернутьОтборы = "СтраницаПриемНаКомиссиюДекорацияРазвернутьОтборы";
	СтруктураИменЭлементов.ПраваяПанель = "СтраницаПриемНаКомиссиюПраваяПанель";
	СтруктураИменЭлементов.ОтборПериод = "ОтборПериодПриемНаКомиссию";
	СтруктураИменЭлементов.ПредставлениеПериода = "ПредставлениеПериодаПриемНаКомиссию";
	
	РаботаСОтборами.ВосстановитьНастройкиОтборов(ЭтотОбъект, СписокПриемНаКомиссию, "СписокПриемНаКомиссию", СтруктураИменЭлементов,,,, "ДанныеМетокПриемНаКомиссию",, "ДанныеОтборовПриемНаКомиссию", "ГруппаОтборыПриемНаКомиссию");
	
КонецПроцедуры

&НаСервере
Процедура ОпределитьПорядокПредопределенныхОтборовНаСервере()
	
	РаботаСОтборами.ОпределитьПорядокПредопределенныхОтборов(ЭтотОбъект);
	РаботаСОтборами.ОпределитьПорядокПредопределенныхОтборов(ЭтотОбъект, "ГруппаОтборыПриемНаКомиссию", "ПредопределенныеОтборыПоУмолчаниюПриемНаКомиссию");
	РаботаСОтборами.ОпределитьПорядокПредопределенныхОтборов(ЭтотОбъект, "ГруппаОтборыОтчетКомитенту", "ПредопределенныеОтборыПоУмолчаниюОтчетКомитенту");
	РаботаСОтборами.ОпределитьПорядокПредопределенныхОтборов(ЭтотОбъект, "ГруппаОтборыВозвратКомитенту", "ПредопределенныеОтборыПоУмолчаниюВозвратКомитенту");
	РаботаСОтборами.ОпределитьПорядокПредопределенныхОтборов(ЭтотОбъект, "ГруппаОтборыСписаниеЗапасов", "ПредопределенныеОтборыПоУмолчаниюСписаниеЗапасов");
	
КонецПроцедуры

&НаСервере
Процедура УстановитьФорматДатыСписковПриСозданииНаСервере()
	
	ДинамическиеСпискиУНФ.ОтображатьТолькоВремяДляТекущейДаты(Список);
	ДинамическиеСпискиУНФ.ОтображатьТолькоВремяДляТекущейДаты(СписокОтчетКомитенту);
	ДинамическиеСпискиУНФ.ОтображатьТолькоВремяДляТекущейДаты(СписокВозвратКомитенту);
	ДинамическиеСпискиУНФ.ОтображатьТолькоВремяДляТекущейДаты(СписокСписаниеЗапасов);
	ДинамическиеСпискиУНФ.ОтображатьТолькоВремяДляТекущейДаты(СписокПриемНаКомиссию);
	
КонецПроцедуры

&НаСервере
Процедура УстановитьПанелиКонтактнойИнформацииПриСозданииНаСервере()
	// УНФ.ПанельКонтактнойИнформации
	КонтактнаяИнформацияПанельУНФ.ПриСозданииНаСервере(ЭтотОбъект, "КонтактнаяИнформация", "СписокОтчетКомитентуКонтекстноеМеню");
	КонтактнаяИнформацияПанельУНФ.ПриСозданииНаСервере(ЭтотОбъект, "КонтактнаяИнформацияПриемНаКомиссию", "СписокПриемНаКомиссиюКонтекстноеМеню");
	КонтактнаяИнформацияПанельУНФ.ПриСозданииНаСервере(ЭтотОбъект, "КонтактнаяИнформацияВозвратКомитенту", "СписокВозвратКомитентуКонтекстноеМеню");
	// Конец УНФ.ПанельКонтактнойИнформации
КонецПроцедуры

&НаКлиенте
Процедура СвернутьОтборы()
	ИмяГруппы = ПолучитьИмяГруппыПанели();
	НовоеЗначениеВидимость = НЕ Элементы[ИмяГруппы].Видимость;
	РаботаСОтборамиКлиент.СвернутьРазвернутьПанельОтборов(ЭтотОбъект, НовоеЗначениеВидимость, СтруктураИменЭлементовПанелиОтборов());
КонецПроцедуры

&НаКлиенте
Процедура РазвернутьОтборы()
	ИмяГруппы = ПолучитьИмяГруппыПанели();
	НовоеЗначениеВидимость = НЕ Элементы[ИмяГруппы].Видимость;
	РаботаСОтборамиКлиент.СвернутьРазвернутьПанельОтборов(ЭтотОбъект, НовоеЗначениеВидимость, СтруктураИменЭлементовПанелиОтборов());
КонецПроцедуры

&НаКлиенте
Функция ПолучитьИмяГруппыПанели()
	
	ИмяСтраницы = Элементы.ГруппаСтраницы.ТекущаяСтраница.Имя;
	
	Если ИмяСтраницы = "СтраницаВозвратКомитенту" Тогда Возврат "СтраницаВозвратКомитентуФильтрыНастройкиДопИнфо"
	ИначеЕсли ИмяСтраницы = "СтраницаОтчетКомитенту" Тогда Возврат "СтраницаОтчетКомитентуФильтрыНастройкиДопИнфо"
	ИначеЕсли ИмяСтраницы = "СтраницаСписаниеЗапасов" Тогда Возврат "СтраницаСписаниеЗапасовФильтрыНастройкиДопИнфо"
	ИначеЕсли ИмяСтраницы = "СтраницаПриемНаКомиссию" Тогда Возврат "СтраницаПриемНаКомиссиюФильтрыНастройкиДопИнфо"
	ИначеЕсли ИмяСтраницы = "СтраницаЖурнал" Тогда Возврат "ФильтрыНастройкиИДопИнфо"
	КонецЕсли;
	
	Возврат "";
	
КонецФункции

&НаКлиенте
Функция ИмяСписка()
	
	ИмяСтраницы = Элементы.ГруппаСтраницы.ТекущаяСтраница.Имя;
	
	Если ИмяСтраницы = "СтраницаВозвратКомитенту" Тогда Возврат "СписокВозвратКомитенту"
	ИначеЕсли ИмяСтраницы = "СтраницаОтчетКомитенту" Тогда Возврат "СписокОтчетКомитенту"
	ИначеЕсли ИмяСтраницы = "СтраницаСписаниеЗапасов" Тогда Возврат "СписокСписаниеЗапасов"
	ИначеЕсли ИмяСтраницы = "СтраницаПриемНаКомиссию" Тогда Возврат "СписокПриемНаКомиссию"
	ИначеЕсли ИмяСтраницы = "СтраницаЖурнал" Тогда Возврат "Список"
	КонецЕсли;
	
	Возврат "";
	
КонецФункции

&НаСервере
Функция ИмяСпискаСервер()
	
	ИмяСтраницы = Элементы.ГруппаСтраницы.ТекущаяСтраница.Имя;
	
	Если ИмяСтраницы = "СтраницаВозвратКомитенту" Тогда Возврат "СписокВозвратКомитенту"
	ИначеЕсли ИмяСтраницы = "СтраницаОтчетКомитенту" Тогда Возврат "СписокОтчетКомитенту"
	ИначеЕсли ИмяСтраницы = "СтраницаСписаниеЗапасов" Тогда Возврат "СписокСписаниеЗапасов"
	ИначеЕсли ИмяСтраницы = "СтраницаПриемНаКомиссию" Тогда Возврат "СписокПриемНаКомиссию"
	ИначеЕсли ИмяСтраницы = "СтраницаЖурнал" Тогда Возврат "Список"
	КонецЕсли;
	
	Возврат "";
	
КонецФункции

&НаКлиенте
Функция СтруктураИменЭлементовПанелиОтборов()
	
	ИмяСтраницы = Элементы.ГруппаСтраницы.ТекущаяСтраница.Имя;
	
	СтруктураИменПолей = Новый Структура("ФильтрыНастройкиИДопИнфо, ДекорацияРазвернутьОтборы, ПраваяПанель");
	
	Если ИмяСтраницы = "СтраницаВозвратКомитенту" Тогда
		
		СтруктураИменПолей.ФильтрыНастройкиИДопИнфо = "СтраницаВозвратКомитентуФильтрыНастройкиДопИнфо";
		СтруктураИменПолей.ДекорацияРазвернутьОтборы = "СтраницаВозвратКомитентуДекорацияРазвернутьОтборы";
		СтруктураИменПолей.ПраваяПанель = "СтраницаВозвратКомитентуПраваяПанель";
		
		Возврат СтруктураИменПолей;
		
	ИначеЕсли ИмяСтраницы = "СтраницаОтчетКомитенту" Тогда
		
		СтруктураИменПолей.ФильтрыНастройкиИДопИнфо = "СтраницаОтчетКомитентуФильтрыНастройкиДопИнфо";
		СтруктураИменПолей.ДекорацияРазвернутьОтборы = "СтраницаОтчетКомитентуДекорацияРазвернутьОтборы";
		СтруктураИменПолей.ПраваяПанель = "СтраницаОтчетКомитентуПраваяПанель";
		
		Возврат СтруктураИменПолей;

	ИначеЕсли ИмяСтраницы = "СтраницаСписаниеЗапасов" Тогда
		
		СтруктураИменПолей.ФильтрыНастройкиИДопИнфо = "СтраницаСписаниеЗапасовФильтрыНастройкиДопИнфо";
		СтруктураИменПолей.ДекорацияРазвернутьОтборы = "СтраницаСписаниеЗапасовДекорацияРазвернутьОтборы";
		СтруктураИменПолей.ПраваяПанель = "СтраницаСписаниеЗапасовПраваяПанель";
		
		Возврат СтруктураИменПолей;
		
	ИначеЕсли ИмяСтраницы = "СтраницаПриемНаКомиссию" Тогда 
		
		СтруктураИменПолей.ФильтрыНастройкиИДопИнфо = "СтраницаПриемНаКомиссиюФильтрыНастройкиДопИнфо";
		СтруктураИменПолей.ДекорацияРазвернутьОтборы = "СтраницаПриемНаКомиссиюДекорацияРазвернутьОтборы";
		СтруктураИменПолей.ПраваяПанель = "СтраницаПриемНаКомиссиюПраваяПанель";
		
		Возврат СтруктураИменПолей;

	ИначеЕсли ИмяСтраницы = "СтраницаЖурнал" Тогда 
		
		Возврат Неопределено;

	КонецЕсли;
	
	Возврат СтруктураИменПолей;
	
КонецФункции

&НаКлиенте
Функция СтруктураИменПредставленияПериода()
	
	ИмяСтраницы = Элементы.ГруппаСтраницы.ТекущаяСтраница.Имя;
	
	Если ИмяСтраницы = "СтраницаВозвратКомитенту" Тогда 
		Возврат Новый Структура("ОтборПериод, ПредставлениеПериода", "ОтборПериодВозвратКомитенту", "ПредставлениеПериодаВозвратКомитенту");
	ИначеЕсли ИмяСтраницы = "СтраницаОтчетКомитенту" Тогда
		Возврат Новый Структура("ОтборПериод, ПредставлениеПериода", "ОтборПериодОтчетКомитенту", "ПредставлениеПериодаОтчетКомитенту");
	ИначеЕсли ИмяСтраницы = "СтраницаСписаниеЗапасов" Тогда
		Возврат Новый Структура("ОтборПериод, ПредставлениеПериода", "ОтборПериодСписаниеЗапасов", "ПредставлениеПериодаСписаниеЗапасов");
	ИначеЕсли ИмяСтраницы = "СтраницаПриемНаКомиссию" Тогда
		Возврат Новый Структура("ОтборПериод, ПредставлениеПериода", "ОтборПериодПриемНаКомиссию", "ПредставлениеПериодаПриемНаКомиссию");
	ИначеЕсли ИмяСтраницы = "СтраницаЖурнал" Тогда 
		Возврат Новый Структура("ОтборПериод, ПредставлениеПериода", "ОтборПериод", "ПредставлениеПериода");
	КонецЕсли;
	
	Возврат Новый Структура("ОтборПериод, ПредставлениеПериода");
	
КонецФункции

&НаСервере
Функция ИмяТчДанныхМетокСервер()
	
	ИмяСтраницы = Элементы.ГруппаСтраницы.ТекущаяСтраница.Имя;
	
	Если ИмяСтраницы = "СтраницаВозвратКомитенту" Тогда Возврат "ДанныеМетокВозвратКомитенту"
	ИначеЕсли ИмяСтраницы = "СтраницаОтчетКомитенту" Тогда Возврат "ДанныеМетокОтчетКомитенту"
	ИначеЕсли ИмяСтраницы = "СтраницаСписаниеЗапасов" Тогда Возврат "ДанныеМетокСписаниеЗапасов"
	ИначеЕсли ИмяСтраницы = "СтраницаПриемНаКомиссию" Тогда Возврат "ДанныеМетокПриемНаКомиссию"
	ИначеЕсли ИмяСтраницы = "СтраницаЖурнал" Тогда Возврат "ДанныеМеток"
	КонецЕсли;
	
	Возврат "";
	
КонецФункции

&НаСервере
Функция ИмяПанелиМетокОтбора()
	
	ИмяСтраницы = Элементы.ГруппаСтраницы.ТекущаяСтраница.Имя;
	
	Если ИмяСтраницы = "СтраницаВозвратКомитенту" Тогда Возврат "СтраницаВозвратКомитентуПраваяПанель"
	ИначеЕсли ИмяСтраницы = "СтраницаОтчетКомитенту" Тогда Возврат "СтраницаОтчетКомитентуПраваяПанель"
	ИначеЕсли ИмяСтраницы = "СтраницаСписаниеЗапасов" Тогда Возврат "СтраницаСписаниеЗапасовПраваяПанель"
	ИначеЕсли ИмяСтраницы = "СтраницаПриемНаКомиссию" Тогда Возврат "СтраницаПриемНаКомиссиюПраваяПанель"
	ИначеЕсли ИмяСтраницы = "СтраницаЖурнал" Тогда Возврат "ПраваяПанель"
	КонецЕсли;
	
	Возврат "";
	
КонецФункции

&НаКлиенте
Процедура УстановитьВидимостьПодменюПоТипуОбъектаСтроки()
	
	ТекущиеДанные = Элементы.Список.ТекущиеДанные;
	
	Если ТекущиеДанные = Неопределено Тогда
		
		ОбщегоНазначенияКлиентСервер.УстановитьСвойствоЭлементаФормы(Элементы, "ПНПодменюПечать", "Видимость", Ложь);
		ОбщегоНазначенияКлиентСервер.УстановитьСвойствоЭлементаФормы(Элементы, "РНПодменюПечать", "Видимость", Ложь);
		ОбщегоНазначенияКлиентСервер.УстановитьСвойствоЭлементаФормы(Элементы, "ПересортицаПодменюПечать", "Видимость", Ложь);
		ОбщегоНазначенияКлиентСервер.УстановитьСвойствоЭлементаФормы(Элементы, "ОтчетПодменюПечать", "Видимость", Ложь);
		ОбщегоНазначенияКлиентСервер.УстановитьСвойствоЭлементаФормы(Элементы, "СписаниеПодменюПечать", "Видимость", Ложь);
		ОбщегоНазначенияКлиентСервер.УстановитьСвойствоЭлементаФормы(Элементы, "ПНПодменюОтчеты", "Видимость", Ложь);
		ОбщегоНазначенияКлиентСервер.УстановитьСвойствоЭлементаФормы(Элементы, "РНПодменюОтчеты", "Видимость", Ложь);
		ОбщегоНазначенияКлиентСервер.УстановитьСвойствоЭлементаФормы(Элементы, "ПересортицаПодменюОтчеты", "Видимость", Ложь);
		ОбщегоНазначенияКлиентСервер.УстановитьСвойствоЭлементаФормы(Элементы, "ОтчетПодменюОтчеты", "Видимость", Ложь);
		ОбщегоНазначенияКлиентСервер.УстановитьСвойствоЭлементаФормы(Элементы, "ЖурналПодменюЗаполнитьВозвратКомитенту", "Видимость", Ложь);
		ОбщегоНазначенияКлиентСервер.УстановитьСвойствоЭлементаФормы(Элементы, "ЖурналПодменюЗаполнитьОтчетКомитенту", "Видимость", Ложь);
		ОбщегоНазначенияКлиентСервер.УстановитьСвойствоЭлементаФормы(Элементы, "ЖурналПриемНаКомиссиюПодменюЗаполнить", "Видимость", Ложь);
		ОбщегоНазначенияКлиентСервер.УстановитьСвойствоЭлементаФормы(Элементы, "ЖурналПодменюЗаполнитьСписаниеЗапасов", "Видимость", Ложь);
		ОбщегоНазначенияКлиентСервер.УстановитьСвойствоЭлементаФормы(Элементы, "СписаниеПодменюОтчеты", "Видимость", Ложь);
		
		Возврат
	КонецЕсли;
	
	Операция = ТекущиеДанные.Операция;
	
	ПодчиненныеЭлементыГруппы = Элементы.ГруппаВажныеКоманды.ПодчиненныеЭлементы;
	
	Для Каждого ЭлементМенюПечати Из ПодчиненныеЭлементыГруппы Цикл
		
		Если Не СтрЗаканчиваетсяНа(ЭлементМенюПечати.Имя, "Печать") Тогда Продолжить КонецЕсли;
		
		ОбщегоНазначенияКлиентСервер.УстановитьСвойствоЭлементаФормы(Элементы, "ПНПодменюПечать", "Видимость", ?(Операция = ПредопределенноеЗначение("Перечисление.ВидыОперацийПриходнаяНакладная.ПриемНаКомиссию"), Истина, Ложь));
		ОбщегоНазначенияКлиентСервер.УстановитьСвойствоЭлементаФормы(Элементы, "РНПодменюПечать", "Видимость", ?(Операция = ПредопределенноеЗначение("Перечисление.ВидыОперацийРасходнаяНакладная.ВозвратКомитенту"), Истина, Ложь));
		ОбщегоНазначенияКлиентСервер.УстановитьСвойствоЭлементаФормы(Элементы, "ОтчетПодменюПечать", "Видимость", ?(Операция = НСтр("ru='Отчет комитенту'"), Истина, Ложь));
		ОбщегоНазначенияКлиентСервер.УстановитьСвойствоЭлементаФормы(Элементы, "СписаниеПодменюПечать", "Видимость", ?(Операция = НСтр("ru='Списание запасов'"), Истина, Ложь));
		ОбщегоНазначенияКлиентСервер.УстановитьСвойствоЭлементаФормы(Элементы, "ПересортицаПодменюПечать", "Видимость", ?(Операция = НСтр("ru='Пересортица запасов'"), Истина, Ложь));
		ОбщегоНазначенияКлиентСервер.УстановитьСвойствоЭлементаФормы(Элементы, "ЖурналПодменюЗаполнитьВозвратКомитенту", "Видимость", ?(Операция = ПредопределенноеЗначение("Перечисление.ВидыОперацийРасходнаяНакладная.ВозвратКомитенту"), Истина, Ложь));
		ОбщегоНазначенияКлиентСервер.УстановитьСвойствоЭлементаФормы(Элементы, "ЖурналПодменюЗаполнитьОтчетКомитенту", "Видимость", ?(Операция = НСтр("ru='Отчет комитенту'"), Истина, Ложь));
		ОбщегоНазначенияКлиентСервер.УстановитьСвойствоЭлементаФормы(Элементы, "ЖурналПриемНаКомиссиюПодменюЗаполнить", "Видимость", ?(Операция = ПредопределенноеЗначение("Перечисление.ВидыОперацийПриходнаяНакладная.ПриемНаКомиссию"), Истина, Ложь));
		ОбщегоНазначенияКлиентСервер.УстановитьСвойствоЭлементаФормы(Элементы, "ЖурналПодменюЗаполнитьСписаниеЗапасов", "Видимость", ?(Операция = НСтр("ru='Списание запасов'") Или Операция = НСтр("ru='Пересортица запасов'"), Истина, Ложь));
		ОбщегоНазначенияКлиентСервер.УстановитьСвойствоЭлементаФормы(Элементы, "СписокДокументПриходныйОрдерСоздатьНаОсновании", "Видимость", ?(Операция = НСтр("ru='Пересортица запасов'"), Истина, Ложь));
		
	КонецЦикла;
	
	ПодчиненныеЭлементыГруппы = Элементы.ГруппаВажныеКоманды.ПодчиненныеЭлементы;
	
	Для Каждого ЭлементМенюПечати Из ПодчиненныеЭлементыГруппы Цикл
		
		Если Не СтрЗаканчиваетсяНа(ЭлементМенюПечати.Имя, "Отчеты") Тогда Продолжить КонецЕсли;
		
		ОбщегоНазначенияКлиентСервер.УстановитьСвойствоЭлементаФормы(Элементы, "ПНПодменюОтчеты", "Видимость", ?(ТипЗнч(ТекущиеДанные.Ссылка) = Тип("ДокументСсылка.ПриходнаяНакладная"), Истина, Ложь));
		ОбщегоНазначенияКлиентСервер.УстановитьСвойствоЭлементаФормы(Элементы, "РНПодменюОтчеты", "Видимость", ?(ТипЗнч(ТекущиеДанные.Ссылка) = Тип("ДокументСсылка.РасходнаяНакладная"), Истина, Ложь));
		ОбщегоНазначенияКлиентСервер.УстановитьСвойствоЭлементаФормы(Элементы, "ОтчетПодменюОтчеты", "Видимость", ?(ТипЗнч(ТекущиеДанные.Ссылка) = Тип("ДокументСсылка.ОтчетКомитенту"), Истина, Ложь));
		ОбщегоНазначенияКлиентСервер.УстановитьСвойствоЭлементаФормы(Элементы, "СписаниеПодменюОтчеты", "Видимость", ?(ТипЗнч(ТекущиеДанные.Ссылка) = Тип("ДокументСсылка.СписаниеЗапасов"), Истина, Ложь));
		ОбщегоНазначенияКлиентСервер.УстановитьСвойствоЭлементаФормы(Элементы, "ПересортицаПодменюОтчеты", "Видимость", ?(ТипЗнч(ТекущиеДанные.Ссылка) = Тип("ДокументСсылка.ПересортицаЗапасов"), Истина, Ложь));
		
	КонецЦикла;
	
КонецПроцедуры

#КонецОбласти

#Область Отборы

&НаСервере
Процедура УстановитьМеткуИОтборСписка(ИмяПоляОтбораСписка, ГруппаРодительМетки, ВыбранноеЗначение, ПредставлениеЗначения="")
	
	Если ПредставлениеЗначения="" Тогда
		ПредставлениеЗначения=Строка(ВыбранноеЗначение);
	КонецЕсли; 
	
	ИмяСписка = ИмяСпискаСервер();
	
	ИмяТчМеток = ИмяТчДанныхМетокСервер();
	
	Если ГруппаРодительМетки = "ГруппаОтборОплата" Тогда
		ПредставлениеЗначения = РаботаСОтборами.СформироватьПредставлениеМеткиОплата(ВыбранноеЗначение);
		Если ИмяПоляОтбораСписка = "НомерКартинкиОплаты" Тогда
			ВыбранноеЗначение = РаботаСОтборами.НомерКартинкиПоСтатусуОплаты(ВыбранноеЗначение);
		КонецЕсли;
	ИначеЕсли ПредставлениеЗначения="" Тогда
		ПредставлениеЗначения=Строка(ВыбранноеЗначение);
	КонецЕсли;
	
	РаботаСОтборами.ПрикрепитьМеткуОтбора(ЭтотОбъект, ИмяПоляОтбораСписка, ГруппаРодительМетки, ВыбранноеЗначение, ПредставлениеЗначения,,,ИмяТчМеток);
	РаботаСОтборами.УстановитьОтборСписка(ЭтотОбъект, ЭтотОбъект[ИмяСписка], ИмяПоляОтбораСписка,,,ИмяТчМеток);
	
КонецПроцедуры

//@skip-warning
&НаКлиенте
Процедура Подключаемый_МеткаОбработкаНавигационнойСсылки(Элемент, НавигационнаяСсылкаФорматированнойСтроки,
	СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	
	СмещениеНаименованияМетки = ?(Элементы.ГруппаСтраницы.ТекущаяСтраница.Имя = "СтраницаЖурнал", 1, 3);
	
	МеткаИД = Сред(Элемент.Имя, СтрДлина("Метка_") + СмещениеНаименованияМетки);
	УдалитьМеткуОтбора(МеткаИД);
	
КонецПроцедуры

&НаСервере
Процедура УдалитьМеткуОтбора(МеткаИД)
	
	ИмяСписка = ИмяСпискаСервер();
	ИмяПравойПанели = ИмяПанелиМетокОтбора();
	
	РаботаСОтборами.УдалитьМеткуОтбораСервер(ЭтотОбъект, ЭтотОбъект[ИмяСписка], МеткаИД, ИмяСписка, ИмяТчДанныхМетокСервер(),,ИмяПравойПанели);

КонецПроцедуры

&НаКлиенте
Процедура ПредставлениеПериодаНажатие(Элемент, СтандартнаяОбработка)
	ПолучитьПредставлениеПериода(СтандартнаяОбработка);
КонецПроцедуры

&НаКлиенте
Процедура ПолучитьПредставлениеПериода(СтандартнаяОбработка)
	ИмяСписка = ИмяСписка();
	СтандартнаяОбработка = Ложь;
	РаботаСОтборамиКлиент.ПредставлениеПериодаВыбратьПериод(ЭтотОбъект, ИмяСписка, "Дата", СтруктураИменПредставленияПериода());
КонецПроцедуры

&НаКлиенте
Процедура СтраницаПриемНаКомиссиюПредставлениеПериодаНажатие(Элемент, СтандартнаяОбработка)
	ИмяСписка = ИмяСписка();
	СтандартнаяОбработка = Ложь;
	РаботаСОтборамиКлиент.ПредставлениеПериодаВыбратьПериод(ЭтотОбъект, ИмяСписка, "Дата", СтруктураИменПредставленияПериода());
КонецПроцедуры

&НаКлиенте
Процедура СтраницаСписаниеЗапасовПредставлениеПериодаНажатие(Элемент, СтандартнаяОбработка)
	ПолучитьПредставлениеПериода(СтандартнаяОбработка);
КонецПроцедуры

&НаКлиенте
Процедура СтраницаОтчетКомитентуПредставлениеПериодаНажатие(Элемент, СтандартнаяОбработка)
	ПолучитьПредставлениеПериода(СтандартнаяОбработка);
КонецПроцедуры

&НаКлиенте
Процедура СтраницаВозвратКомитентуПредставлениеПериодаНажатие(Элемент, СтандартнаяОбработка)
	ПолучитьПредставлениеПериода(СтандартнаяОбработка);
КонецПроцедуры

&НаСервере
Процедура СохранитьНастройкиОтборов()
	
	РаботаСОтборами.СохранитьНастройкиОтборов(ЭтотОбъект, "Список");
	
	СтруктураИменЭлементов = Новый Структура("ФильтрыНастройкиИДопИнфо, ДекорацияРазвернутьОтборы, ПраваяПанель, ОтборПериод");
	
	СтруктураИменЭлементов.ФильтрыНастройкиИДопИнфо = "СтраницаОтчетКомитентуФильтрыНастройкиДопИнфо";
	СтруктураИменЭлементов.ДекорацияРазвернутьОтборы = "СтраницаОтчетКомитентуДекорацияРазвернутьОтборы";
	СтруктураИменЭлементов.ПраваяПанель = "СтраницаОтчетКомитентуПраваяПанель";
	СтруктураИменЭлементов.ОтборПериод = "ОтборПериодОтчетКомитенту";
	
	РаботаСОтборами.СохранитьНастройкиОтборов(ЭтотОбъект, "СписокОтчетКомитенту", СтруктураИменЭлементов,,, "ДанныеМетокОтчетКомитенту", "ДанныеОтборовОтчетКомитенту", "ГруппаОтборыОтчетКомитенту");
	
	СтруктураИменЭлементов.ФильтрыНастройкиИДопИнфо = "СтраницаВозвратКомитентуФильтрыНастройкиДопИнфо";
	СтруктураИменЭлементов.ДекорацияРазвернутьОтборы = "СтраницаВозвратКомитентуДекорацияРазвернутьОтборы";
	СтруктураИменЭлементов.ПраваяПанель = "СтраницаВозвратКомитентуПраваяПанель";
	СтруктураИменЭлементов.ОтборПериод = "ОтборПериодВозвратКомитенту";
	
	РаботаСОтборами.СохранитьНастройкиОтборов(ЭтотОбъект, "СписокВозвратКомитенту", СтруктураИменЭлементов,,, "ДанныеМетокВозвратКомитенту", "ДанныеОтборовВозвратКомитенту", "ГруппаОтборыВозвратКомитенту");
	
	СтруктураИменЭлементов.ФильтрыНастройкиИДопИнфо = "СтраницаСписаниеЗапасовФильтрыНастройкиДопИнфо";
	СтруктураИменЭлементов.ДекорацияРазвернутьОтборы = "СтраницаСписаниеЗапасовДекорацияРазвернутьОтборы";
	СтруктураИменЭлементов.ПраваяПанель = "СтраницаСписаниеЗапасовПраваяПанель";
	СтруктураИменЭлементов.ОтборПериод = "ОтборПериодСписаниеЗапасов";
	
	РаботаСОтборами.СохранитьНастройкиОтборов(ЭтотОбъект, "СписокСписаниеЗапасов", СтруктураИменЭлементов,,, "ДанныеМетокСписаниеЗапасов", "ДанныеОтборовСписаниеЗапасов", "ГруппаОтборыСписаниеЗапасов");
	
	СтруктураИменЭлементов.ФильтрыНастройкиИДопИнфо = "СтраницаПриемНаКомиссиюФильтрыНастройкиДопИнфо";
	СтруктураИменЭлементов.ДекорацияРазвернутьОтборы = "СтраницаПриемНаКомиссиюДекорацияРазвернутьОтборы";
	СтруктураИменЭлементов.ПраваяПанель = "СтраницаПриемНаКомиссиюПраваяПанель";
	СтруктураИменЭлементов.ОтборПериод = "ОтборПериодПриемНаКомиссию";
	
	РаботаСОтборами.СохранитьНастройкиОтборов(ЭтотОбъект, "СписокПриемНаКомиссию", СтруктураИменЭлементов,,, "ДанныеМетокПриемНаКомиссию", "ДанныеОтборовПриемНаКомиссию", "ГруппаОтборыПриемНаКомиссию");
	
КонецПроцедуры

&НаКлиенте
Процедура НастроитьОтборы(Команда)
	
	ИмяМетки = СтрЗаменить(ЭтаФорма.ТекущийЭлемент.Имя, "НастроитьОтборы", "");
	
	ИмяРеквизитаСписка = "Список" + ИмяМетки;
	ИмяТЧДанныеМеток = "ДанныеМеток" + ИмяМетки;
	ИмяТЧДанныеОтборов = "ДанныеОтборов" + ИмяМетки;
	ИмяГруппыОтборов = "ГруппаОтборы" + ИмяМетки;
	ИмяПредопределенныеОтборыПоУмолчанию = "ПредопределенныеОтборыПоУмолчанию" + ИмяМетки;
	
	ДополнительныеПараметры = Новый Структура;
	ДополнительныеПараметры.Вставить("ИмяРеквизитаСписка", ИмяРеквизитаСписка);
	ДополнительныеПараметры.Вставить("ИмяТЧДанныеМеток", ИмяТЧДанныеМеток);
	ДополнительныеПараметры.Вставить("ИмяТЧДанныеОтборов", ИмяТЧДанныеОтборов);
	ДополнительныеПараметры.Вставить("ИмяГруппыОтборов", ИмяГруппыОтборов);
	ДополнительныеПараметры.Вставить("ИмяПредопределенныеОтборыПоУмолчанию", ИмяПредопределенныеОтборыПоУмолчанию);
	
	РаботаСОтборамиКлиент.НастроитьОтборыНажатие(ЭтотОбъект, ПараметрыОткрытияФормыСНастройкамиОтборов(ДополнительныеПараметры), ДополнительныеПараметры);
	
КонецПроцедуры

&НаСервере
Функция ПараметрыОткрытияФормыСНастройкамиОтборов(ДополнительныеПараметры)
	
	Возврат РаботаСОтборами.ПараметрыДляОткрытияФормыСНастройкамиОтборов(ЭтотОбъект, ДополнительныеПараметры);
	
КонецФункции

&НаКлиенте
Процедура НастройкаОтборовЗавершение(Результат, ДополнительныеПараметры) Экспорт
	
	Если Результат = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	НастройкаОтборовЗавершениеНаСервере(Результат.АдресВыбранныеОтборы, Результат.АдресУдаленныеОтборы, ДополнительныеПараметры);
	
КонецПроцедуры

&НаСервере
Процедура НастройкаОтборовЗавершениеНаСервере(АдресВыбранныеОтборы, АдресУдаленныеОтборы, ДополнительныеПараметры)
	
	Если ДополнительныеПараметры = Неопределено Тогда
		ИмяРеквизитаСписка = "Список";
		ИмяТЧДанныеМеток = "ДанныеМеток";
		ИмяТЧДанныеОтборов = "ДанныеОтборов";
	Иначе
		ИмяРеквизитаСписка = ДополнительныеПараметры.ИмяРеквизитаСписка;
		ИмяТЧДанныеМеток = ДополнительныеПараметры.ИмяТЧДанныеМеток;
		ИмяТЧДанныеОтборов = ДополнительныеПараметры.ИмяТЧДанныеОтборов;
	КонецЕсли;
	
	РаботаСОтборами.НастройкаОтборовЗавершение(ЭтотОбъект, АдресВыбранныеОтборы, АдресУдаленныеОтборы, ДополнительныеПараметры);
	
КонецПроцедуры

// @skip-warning
&НаКлиенте
Процедура Подключаемый_ОтборПриИзменении(Элемент)
	
	Подключаемый_ОтборПриИзмененииНаСервере(Элемент.Имя, Элемент.Родитель.Имя)
	
КонецПроцедуры

&НаСервере
Процедура Подключаемый_ОтборПриИзмененииНаСервере(ЭлементИмя, ЭлементРодительИмя)
	
	ПоискМетки = Элементы.ГруппаСтраницы.ТекущаяСтраница.Имя;
	Если СтрЗаканчиваетсяНа(ПоискМетки, "ПриемНаКомиссию") Тогда
		ИмяРеквизитаСписка = "СписокПриемНаКомиссию";
		ИмяТЧДанныеМеток = "ДанныеМетокПриемНаКомиссию";
		ИмяТЧДанныеОтборов = "ДанныеОтборовПриемНаКомиссию";
	ИначеЕсли СтрЗаканчиваетсяНа(ПоискМетки, "ОтчетКомитенту") Тогда
		ИмяРеквизитаСписка = "СписокОтчетКомитенту";
		ИмяТЧДанныеМеток = "ДанныеМетокОтчетКомитенту";
		ИмяТЧДанныеОтборов = "ДанныеОтборовОтчетКомитенту";
	ИначеЕсли СтрЗаканчиваетсяНа(ПоискМетки, "ВозвратКомитенту") Тогда
		ИмяРеквизитаСписка = "СписокВозвратКомитенту";
		ИмяТЧДанныеМеток = "ДанныеМетокВозвратКомитенту";
		ИмяТЧДанныеОтборов = "ДанныеОтборовВозвратКомитенту";
	ИначеЕсли СтрЗаканчиваетсяНа(ПоискМетки, "СписаниеЗапасов") Тогда
		ИмяРеквизитаСписка = "СписокСписаниеЗапасов";
		ИмяТЧДанныеМеток = "ДанныеМетокСписаниеЗапасов";
		ИмяТЧДанныеОтборов = "ДанныеОтборовСписаниеЗапасов";
	Иначе
		ИмяРеквизитаСписка = "Список";
		ИмяТЧДанныеМеток = "ДанныеМеток";
		ИмяТЧДанныеОтборов = "ДанныеОтборов";
	КонецЕсли;
	
	РаботаСОтборами.Подключаемый_ОтборПриИзменении(ЭтотОбъект, ЭлементИмя, ЭлементРодительИмя, ИмяРеквизитаСписка, ИмяТЧДанныеМеток, ИмяТЧДанныеОтборов);
	
КонецПроцедуры

// @skip-warning
&НаКлиенте
Процедура Подключаемый_ОтборОчистка(Элемент)
	
	Подключаемый_ОтборОчисткаНаСервере(Элемент.Имя, Элемент.Родитель.Имя)
	
КонецПроцедуры

&НаСервере
Процедура Подключаемый_ОтборОчисткаНаСервере(ЭлементИмя, ЭлементРодительИмя)
	
	ПоискМетки = Элементы.ГруппаСтраницы.ТекущаяСтраница.Имя;
	Если СтрЗаканчиваетсяНа(ПоискМетки, "ПриемНаКомиссию") Тогда
		ИмяРеквизитаСписка = "СписокПриемНаКомиссию";
		ИмяТЧДанныеМеток = "ДанныеМетокПриемНаКомиссию";
		ИмяТЧДанныеОтборов = "ДанныеОтборовПриемНаКомиссию";
	ИначеЕсли СтрЗаканчиваетсяНа(ПоискМетки, "ОтчетКомитенту") Тогда
		ИмяРеквизитаСписка = "СписокОтчетКомитенту";
		ИмяТЧДанныеМеток = "ДанныеМетокОтчетКомитенту";
		ИмяТЧДанныеОтборов = "ДанныеОтборовОтчетКомитенту";
	ИначеЕсли СтрЗаканчиваетсяНа(ПоискМетки, "ВозвратКомитенту") Тогда
		ИмяРеквизитаСписка = "СписокВозвратКомитенту";
		ИмяТЧДанныеМеток = "ДанныеМетокВозвратКомитенту";
		ИмяТЧДанныеОтборов = "ДанныеОтборовВозвратКомитенту";
	ИначеЕсли СтрЗаканчиваетсяНа(ПоискМетки, "СписаниеЗапасов") Тогда
		ИмяРеквизитаСписка = "СписокСписаниеЗапасов";
		ИмяТЧДанныеМеток = "ДанныеМетокСписаниеЗапасов";
		ИмяТЧДанныеОтборов = "ДанныеОтборовСписаниеЗапасов";
	Иначе
		ИмяРеквизитаСписка = "Список";
		ИмяТЧДанныеМеток = "ДанныеМеток";
		ИмяТЧДанныеОтборов = "ДанныеОтборов";
	КонецЕсли;
	
	РаботаСОтборами.Подключаемый_ОтборОчистка(ЭтотОбъект, ЭлементИмя, ИмяРеквизитаСписка, ИмяТЧДанныеМеток, ИмяТЧДанныеОтборов);

КонецПроцедуры

&НаКлиенте
Процедура СброситьВсеОтборы(Команда)
	
	ИмяМетки = СтрЗаменить(ЭтаФорма.ТекущийЭлемент.Имя, "СброситьВсеОтборы", "");
	
	ИмяРеквизитаСписка = "Список" + ИмяМетки;
	ИмяТЧДанныеМеток = "ДанныеМеток" + ИмяМетки;
	ИмяТЧДанныеОтборов = "ДанныеОтборов" + ИмяМетки;
	
	СтруктураИменПредставленияПериода = СтруктураИменПредставленияПериода();
	
	РаботаСОтборамиКлиент.СброситьОтборПоПериоду(ЭтотОбъект, ИмяРеквизитаСписка, "Дата", СтруктураИменПредставленияПериода);
	СброситьВсеМеткиОтбораНаСервере(ИмяРеквизитаСписка, ИмяТЧДанныеМеток, СтруктураИменПредставленияПериода, ИмяТЧДанныеОтборов);
	
КонецПроцедуры

&НаСервере
Процедура СброситьВсеМеткиОтбораНаСервере(ИмяРеквизитаСписка, ИмяТЧДанныеМеток, СтруктураИменПредставленияПериода, ИмяТЧДанныеОтборов)
	РаботаСОтборами.УдалитьМеткиОтбораСервер(ЭтотОбъект, ЭтаФорма[ИмяРеквизитаСписка],,ИмяРеквизитаСписка, ИмяТЧДанныеМеток, СтруктураИменПредставленияПериода, ИмяТЧДанныеОтборов);
КонецПроцедуры

#КонецОбласти

#Область ПанельКонтактнойИнформации

// УНФ.ПанельКонтактнойИнформации
&НаКлиенте
Процедура Подключаемый_ОбработатьАктивизациюСтрокиСписка()
	
	ОбновитьПанельКонтактнойИнформации();
	
КонецПроцедуры

&НаКлиенте
Процедура ОбновитьПанельКонтактнойИнформации()
	
	ДанныеПанелиКИ = ДанныеПанелиКонтактнойИнформации(ТекущийКонтрагент);
	КонтактнаяИнформацияПанельУНФКлиент.ЗаполнитьДанныеПанелиКИ(ЭтотОбъект, ДанныеПанелиКИ);
	
КонецПроцедуры

&НаСервереБезКонтекста
Функция ДанныеПанелиКонтактнойИнформации(Контрагент)
	
	Возврат КонтактнаяИнформацияПанельУНФ.ДанныеПанелиКонтактнойИнформации(Контрагент);
	
КонецФункции

//@skip-warning
&НаКлиенте
Процедура Подключаемый_ДанныеПанелиКонтактнойИнформацииВыбор(Элемент, ВыбраннаяСтрока, Поле, СтандартнаяОбработка)
	
	КонтактнаяИнформацияПанельУНФКлиент.ДанныеПанелиКонтактнойИнформацииВыбор(ЭтотОбъект, Элемент, ВыбраннаяСтрока,
		Поле, СтандартнаяОбработка);
	
КонецПроцедуры

//@skip-warning
&НаКлиенте
Процедура Подключаемый_ДанныеПанелиКонтактнойИнформацииПриАктивизацииСтроки(Элемент)
	
	КонтактнаяИнформацияПанельУНФКлиент.ДанныеПанелиКонтактнойИнформацииПриАктивизацииСтроки(ЭтотОбъект, Элемент);
	
КонецПроцедуры

//@skip-warning
&НаКлиенте
Процедура Подключаемый_ДанныеПанелиКонтактнойИнформацииВыполнитьКоманду(Команда)
	
	КонтактнаяИнформацияПанельУНФКлиент.ВыполнитьКоманду(ЭтотОбъект, Команда, ТекущийКонтрагент);
	
КонецПроцедуры
// Конец УНФ.ПанельКонтактнойИнформации

#КонецОбласти

#Область ОбработчикиБиблиотек

// СтандартныеПодсистемы.ПодключаемыеКоманды
//@skip-warning
&НаКлиенте
Процедура Подключаемый_ВыполнитьКоманду(Команда)
	ИмяТекущегоСписка = ИмяСписка();
	ПодключаемыеКомандыКлиент.ВыполнитьКоманду(ЭтотОбъект, Команда, Элементы[ИмяТекущегоСписка]);
КонецПроцедуры

&НаСервере
Процедура Подключаемый_ВыполнитьКомандуНаСервере(Контекст, Результат) Экспорт
	ИмяТекущегоСписка = ИмяСпискаСервер();
	ПодключаемыеКоманды.ВыполнитьКоманду(ЭтотОбъект, Контекст, Элементы[ИмяТекущегоСписка], Результат);
КонецПроцедуры

//@skip-warning
&НаКлиенте
Процедура Подключаемый_ОбновитьКоманды()
	ИмяТекущегоСписка = ИмяСписка();
	ПодключаемыеКомандыКлиентСервер.ОбновитьКоманды(ЭтотОбъект, Элементы[ИмяТекущегоСписка]);
КонецПроцедуры

// Конец СтандартныеПодсистемы.ПодключаемыеКоманды

#КонецОбласти
