
#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	КОплате				= Параметры.КОплате;
	СтруктурнаяЕдиница	= Параметры.СтруктурнаяЕдиница;
	
	ПереданныеПараметры = ИнтеграцияСПлатежнымиСистемамиРМККлиентСервер.ПараметрыИнициализации();
    ПереданныеПараметры.Вставить("СуммаОперации", 0);
	
	ЗаполнитьЗначенияСвойств(ПереданныеПараметры, Параметры);
	
	Если ПереданныеПараметры.ВидОперацииПродажа Тогда
		ПереданныеПараметры.ДокументОплаты		= Параметры.Документ.Ссылка;
	Иначе

		ПереданныеПараметры.ДокументОплаты		= Параметры.ДокументОплаты;
		ПереданныеПараметры.ДокументВозврата	= Параметры.Документ.Ссылка;
		
		Если ЗначениеЗаполнено(ПереданныеПараметры.ДокументОплаты) Тогда
			
			ДанныеОперации 		= ПереводыСБПc2b.ДанныеОперации(ПереданныеПараметры.ДокументОплаты);
			СуммаОплаты 		= ?(ДанныеОперации = Неопределено, 0, ДанныеОперации.СуммаОперации);
            КОплате 			= Мин(СуммаОплаты, КОплате);
			
			СтруктурнаяЕдиница  = ?(Не ЗначениеЗаполнено(СтруктурнаяЕдиница) 
				И ЗначениеЗаполнено(ПереданныеПараметры.ДокументОплаты),
					ОпределитьСтруктурнуюЕдиницуПродажи(ПереданныеПараметры.ДокументОплаты),
					СтруктурнаяЕдиница);
			
		КонецЕсли;
		
	КонецЕсли;
	
	ПереданныеПараметры.СуммаОперации 			= КОплате;
	ПереданныеПараметры.ИтогПоОрганизации 		= КОплате;
	ПереданныеПараметры.Организация				= Параметры.Документ.Организация;
	ПереданныеПараметры.Магазин 				= СтруктурнаяЕдиница;
	ПереданныеПараметры.КассаККМ				= Параметры.КассаККМ;
	ПереданныеПараметры.Оплачивается			= Параметры.Оплачивается;
	
	НастройкиИнтеграции 						= ИнтеграцияСПлатежнымиСистемамиУНФ.НастройкиИнтеграции(
														ПереданныеПараметры.Организация, 
														ПереданныеПараметры.Магазин);
	
	Если НастройкиИнтеграции <> Неопределено Тогда
		
		Если Не ПереданныеПараметры.ВидОперацииПродажа Тогда
		
			ПараметрыВозврата = ИнтеграцияСПлатежнымиСистемамиУНФ.ПолучитьПараметрыДокументаОплаты(ПереданныеПараметры.ДокументОплаты);
		
			Если ЗначениеЗаполнено(ПараметрыВозврата.ВидОплатыВозврата) Тогда

				ПлатежнаяСистема_ИдентификаторОплаты = ПараметрыВозврата.ИдентификаторОплаты;
            	ПлатежнаяСистема_ИдентификаторПС	 = ПараметрыВозврата.ИдентификаторПС;
			
				ЗаполнитьЗначенияСвойств(ПереданныеПараметры, ПараметрыВозврата);

				НастройкиИнтеграции = НастройкиИнтеграции.Скопировать(Новый Структура("ИдентификаторПС", ПараметрыВозврата.ИдентификаторПС));
				
			КонецЕсли;

		КонецЕсли;
		
		Если ПереданныеПараметры.Оплачивается Тогда
			
			ТорговыеТочкиОперации = ПереводыСБПc2b.НастройкиПодключенияОперации(ПереданныеПараметры.ДокументОплаты);
			
			Если ТорговыеТочкиОперации.Количество() Тогда
				НастройкиИнтеграции = НастройкиИнтеграции.Скопировать(Новый Структура("Интеграция", ТорговыеТочкиОперации[0]));
			КонецЕсли;
			
		КонецЕсли;
		
		Для Каждого СтрокаНастроек Из НастройкиИнтеграции Цикл
			
			СтрокаВидыОплат = ПлатежнаяСистема_ВидыОплат.Добавить();
			
			ЗаполнитьЗначенияСвойств(СтрокаВидыОплат, СтрокаНастроек);
			
		КонецЦикла;

	Иначе
		ТекстОшибки = НСтр("ru = 'По документу не определены настройки интеграции с СБП. Операция не выполнена'");
		ОбщегоНазначения.СообщитьПользователю(ТекстОшибки, , , , Отказ);
	КонецЕсли;
	
	#Область НастройкаФормы
	ПереданныеПараметры.КраткоеПредставлениеКоманд = Ложь;
	
	Если ПереданныеПараметры.ВидОперацииПродажа Тогда
		
		ШаблонДекорации						  = НСтр("ru = 'Сумма оплаты: %1 руб.'");
		
		Элементы.ДекорацияСуммаЧека.Заголовок = СтрШаблон(ШаблонДекорации, 
			Формат(ПереданныеПараметры.ИтогПоОрганизации, "ЧДЦ=2; ЧГ="));
			
	Иначе
		
		Для Каждого СтрокаВидОплаты Из ПлатежнаяСистема_ВидыОплат Цикл
			Элементы.ПлатежнаяСистема_ИдентификаторПС.СписокВыбора.Добавить(СтрокаВидОплаты.ИдентификаторПС, СтрокаВидОплаты.Представление);
		КонецЦикла;
		
	КонецЕсли;
	
	Если ПлатежнаяСистема_ВидыОплат.Количество() > 0 Тогда
		
		Элементы.ФормаЗавершитьОплату.КнопкаПоУмолчанию	= Истина;
		
		Если ПлатежнаяСистема_ВидыОплат.Количество() = 1 Тогда

			ПлатежнаяСистема_ВидОплаты 			= ПлатежнаяСистема_ВидыОплат[0].ВидОплаты;
			ПлатежнаяСистема_ИдентификаторПС	= ПлатежнаяСистема_ВидыОплат[0].ИдентификаторПС;
			
			ПереданныеПараметры.Вставить("ВидОплатыПлатежнойСистемы", 		ПлатежнаяСистема_ВидОплаты);
			ПереданныеПараметры.Вставить("СпособОплатыПлатежнойСистемы", 	ПлатежнаяСистема_ВидыОплат[0].СпособОплаты);
			ПереданныеПараметры.Вставить("ИдентификаторПС", 				ПлатежнаяСистема_ИдентификаторПС);
			
			Элементы.ПлатежнаяСистема_ИдентификаторПС.Видимость = Ложь;
			
		КонецЕсли;
		
	КонецЕсли;
	#КонецОбласти
	
	#Область ПраваПользователей
	ПереданныеПараметры.РазрешитьОплатуВозвратБезПодтвержденияОтПлатежнойСистемы = 
		Пользователи.РолиДоступны("РазрешитьОплатуВозвратБезПодтвержденияОтПлатежнойСистемы");
	#КонецОбласти
	
	ПереданныеПараметры.Товары = Новый Массив;
	
	Если Параметры.Свойство("Документ") 
		И ОбщегоНазначенияКлиентСервер.ЕстьРеквизитИлиСвойствоОбъекта(Параметры.Документ, "Запасы") Тогда
		
		Для Каждого Товар Из Параметры.Документ.Запасы Цикл
			
			НовыйТовар = ИнтеграцияСПлатежнымиСистемамиРМККлиентСервер.СтрокаТоваров();
			ЗаполнитьЗначенияСвойств(НовыйТовар, Товар);
			
			НовыйТовар.ЕдиницаИзмерения = Товар.ЕдиницаИзмерения;
			НовыйТовар.СуммаСкидки 		= Товар.СуммаСкидкиНаценки;
			НовыйТовар.Наименование 	= Товар.Номенклатура.Наименование;
			НовыйТовар.Артикул 			= Товар.Номенклатура.Артикул;
			
			ПереданныеПараметры.Товары.Добавить(НовыйТовар);
			
		КонецЦикла;
		
	КонецЕсли;
	
	ИнтеграцияСПлатежнымиСистемамиРМККлиентСервер.ИнициализироватьПараметры(ЭтотОбъект, ПереданныеПараметры, ПлатежнаяСистема_ВидыОплат);
	
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	
	// ПодключаемоеОборудование
	ОповещенияПриПодключении = Новый ОписаниеОповещения("ПодключитьОборудованиеЗавершение", ЭтотОбъект);
	МенеджерОборудованияКлиент.НачатьПодключениеОборудованиеПриОткрытииФормы(ОповещенияПриПодключении, ЭтотОбъект, "СканерШтрихкода, СчитывательМагнитныхКарт, ДисплейПокупателя");
	// Конец ПодключаемоеОборудование
	
	ИнтеграцияСПлатежнымиСистемамиРМККлиент.ПриОткрытии(ЭтотОбъект, Отказ);
	
КонецПроцедуры

&НаКлиенте
Процедура ВнешнееСобытие(Источник, Событие, Данные)
	
	Если ОбщегоНазначенияРМККлиент.ИспользоватьВнешнееСобытие() Тогда
		
		Если Событие = "Штрихкод" Или Событие = "ПолученШтрихкод" Или Событие = "ScanData" Тогда
			ПлатежнаяСистема_ИдентификаторОплаты			 = Данные;
			ПлатежнаяСистема_НоваяЗаявка.ИдентификаторОплаты = Данные;
		КонецЕсли;
		
	КонецЕсли;

КонецПроцедуры

&НаКлиенте
Процедура ПередЗакрытием(Отказ, ЗавершениеРаботы, ТекстПредупреждения, СтандартнаяОбработка)
	
	ИнтеграцияСПлатежнымиСистемамиРМККлиент.ОбработкаПрерыванияОперацииПлатежнойСистемы(
		ЭтотОбъект, 
		Отказ,
		Новый ОписаниеОповещения("ЗавершитьОплатуВозвратПлатежнойСистемой", ЭтотОбъект));
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовШапкиФормы

&НаКлиенте
Процедура ВидыОплатВыбор(Элемент, ВыбраннаяСтрока, Поле, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	
	ЗавершитьОплату(Элемент);
	
КонецПроцедуры

&НаКлиенте
Процедура ИдентификаторПСПриИзменении(Элемент)

	ПлатежнаяСистема_ВидОплаты 	= ИнтеграцияСПлатежнымиСистемамиРМККлиент.ОпределитьВидОплаты(ЭтотОбъект, 	 ПлатежнаяСистема_ВидыОплат);
	СпособОплаты 		 		= ИнтеграцияСПлатежнымиСистемамиРМККлиент.ОпределитьСпособОплаты(ЭтотОбъект, ПлатежнаяСистема_ВидыОплат);
			
	ПлатежнаяСистема_НоваяЗаявка.Вставить("ВидОплатыПлатежнойСистемы", 		ПлатежнаяСистема_ВидОплаты);
	ПлатежнаяСистема_НоваяЗаявка.Вставить("СпособОплатыПлатежнойСистемы", 	СпособОплаты);
	ПлатежнаяСистема_НоваяЗаявка.Вставить("ИдентификаторПС", 				ПлатежнаяСистема_ИдентификаторПС);
			
	ИнтеграцияСПлатежнымиСистемамиРМККлиентСервер.НастроитьФормуПоВидуОплаты(ЭтотОбъект, ПлатежнаяСистема_ВидыОплат);
	
КонецПроцедуры

&НаКлиенте
Процедура ДекорацияОписаниеОшибкиОбработкаНавигационнойСсылки(
		Элемент,
		НавигационнаяСсылкаФорматированнойСтроки,
		СтандартнаяОбработка)
	
	Если НавигационнаяСсылкаФорматированнойСтроки = "open:log" Тогда
		СтандартнаяОбработка = Ложь;
		ЖурналРегистрацииКлиент.ОткрытьЖурналРегистрации();
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ИтогПоОрганизацииПриИзменении(Элемент)
	
	ПлатежнаяСистема_НоваяЗаявка.ИтогПоОрганизации = ИтогПоОрганизации;
	
КонецПроцедуры

&НаКлиенте
Процедура ИдентификаторОплатыПриИзменении(Элемент)
	
	ПлатежнаяСистема_НоваяЗаявка.ИдентификаторОплаты = ПлатежнаяСистема_ИдентификаторОплаты;
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура КомандаЗавершитьПринудительно(Команда)
	
	ОповещениеЗавершитьОплату = Новый ОписаниеОповещения("ЗавершитьОплатуВозвратПлатежнойСистемой", ЭтотОбъект);
	
	Если ПлатежнаяСистема_НоваяЗаявка.ВидОперацииПродажа Тогда
		
		ТекстИнформации 	= НСтр("ru = 'Проверьте выполнение операции оплаты платежной системы.'") + Символы.ПС;
		ТекстИнформации 	= ТекстИнформации + НСтр("ru = 'Сумма операции:'")        + " "+ ИтогПоОрганизации  + Символы.ПС;

		ЗаголовокИнформации = НСтр("ru = 'Операция оплаты прошла успешно?'");

		ПоказатьВопрос(ОповещениеЗавершитьОплату, ТекстИнформации, РежимДиалогаВопрос.ДаНет,,, ЗаголовокИнформации);
		
	Иначе
		
		ТекстИнформации 	= НСтр("ru = 'Проверьте выполнение операции возврата платежной системы.'") + Символы.ПС;
		ТекстИнформации 	= ТекстИнформации + НСтр("ru = 'Сумма операции:'")        + " "+ ИтогПоОрганизации + Символы.ПС;

		ЗаголовокИнформации = НСтр("ru = 'Операция возврата оплаты прошла успешно?'");
		
		ПоказатьВопрос(ОповещениеЗавершитьОплату, ТекстИнформации, РежимДиалогаВопрос.ДаНет,,, ЗаголовокИнформации);
		
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ЗавершитьОплату(Команда)
	
	ГруппаСтраницы 							= Элементы.ГруппаСтраницы;
	ОповещениеЗавершитьОплату 				= Новый ОписаниеОповещения("ЗавершитьОплатуВозвратПлатежнойСистемой", ЭтотОбъект);
	
	Если ГруппаСтраницы.ТекущаяСтраница = Элементы.ГруппаОсновнаяСтраница Тогда
		
		Если ПлатежнаяСистема_НоваяЗаявка.ВидОперацииПродажа Тогда
		
			ТекущаяСтрока = Элементы.ВидыОплатПС.ТекущаяСтрока;
		
			Если ТекущаяСтрока = Неопределено Тогда
			
				ТекстСообщения = НСтр("ru = 'Не выбран способ оплаты'");
				ОбщегоНазначенияКлиент.СообщитьПользователю(ТекстСообщения);

				Возврат;
			
			КонецЕсли;
		
			ПлатежнаяСистема_ВидОплаты 		 = ПлатежнаяСистема_ВидыОплат.НайтиПоИдентификатору(ТекущаяСтрока).ВидОплаты;
			ПлатежнаяСистема_ИдентификаторПС = ПлатежнаяСистема_ВидыОплат.НайтиПоИдентификатору(ТекущаяСтрока).ИдентификаторПС;
			ПлатежнаяСистема_ОписаниеОплаты  = ПлатежнаяСистема_ВидыОплат.НайтиПоИдентификатору(ТекущаяСтрока).Представление;
			СпособОплаты 		 			 = ПлатежнаяСистема_ВидыОплат.НайтиПоИдентификатору(ТекущаяСтрока).СпособОплаты;
			
			ПлатежнаяСистема_НоваяЗаявка.Вставить("ВидОплатыПлатежнойСистемы", 		ПлатежнаяСистема_ВидОплаты);
			ПлатежнаяСистема_НоваяЗаявка.Вставить("СпособОплатыПлатежнойСистемы", 	СпособОплаты);
			ПлатежнаяСистема_НоваяЗаявка.Вставить("ИдентификаторПС", 				ПлатежнаяСистема_ИдентификаторПС);
			
			ИнтеграцияСПлатежнымиСистемамиРМККлиентСервер.НастроитьФормуПоВидуОплаты(ЭтотОбъект, ПлатежнаяСистема_ВидыОплат);
			
			Если ПлатежнаяСистема_НоваяЗаявка.Оплачивается Тогда
				ПодключитьОбработчикОжидания("ОпределитьСтатусОплаты", 0.1, Истина);
			Иначе
				ПодключитьОбработчикОжидания("ПолучитьИдентификаторОплаты", 0.1, Истина);
			КонецЕсли;
			
		Иначе
			
			Если ПлатежнаяСистема_НоваяЗаявка.Оплачивается Тогда
				
				ПодключитьОбработчикОжидания("ОпределитьСтатусВозврата", 0.1, Истина);
				
			ИначеЕсли ЗначениеЗаполнено(ПлатежнаяСистема_НоваяЗаявка.ДокументОплаты)
				И Не ЗначениеЗаполнено(ПлатежнаяСистема_ИдентификаторОплаты) Тогда
				
				ПодключитьОбработчикОжидания("ОпределитьСтатусОплаты", 0.1, Истина);
				
			Иначе
				ПодключитьОбработчикОжидания("ВыполнитьВозвратПлатежнойСистемой", 0.1, Истина);
			КонецЕсли;
			
		КонецЕсли;
		
	ИначеЕсли ГруппаСтраницы.ТекущаяСтраница = Элементы.ГруппаПодтверждение Тогда
		
		ИнтеграцияСПлатежнымиСистемамиРМККлиент.ПодтвердитьВозврат(ЭтотОбъект, ОповещениеЗавершитьОплату);
		
	ИначеЕсли ГруппаСтраницы.ТекущаяСтраница = Элементы.ГруппаQRКод Тогда
		
		ИнтеграцияСПлатежнымиСистемамиРМККлиент.ПечатьПречека(ЭтотОбъект, Истина);
		
	ИначеЕсли ГруппаСтраницы.ТекущаяСтраница = Элементы.ГруппаВыполняется Тогда
		
		Если ПлатежнаяСистема_НоваяЗаявка.ВидОперацииПродажа Тогда
			ПодключитьОбработчикОжидания("ОпределитьСтатусОплаты", 0.1, Истина);
		Иначе
			ПодключитьОбработчикОжидания("ОпределитьСтатусВозврата", 0.1, Истина);
		КонецЕсли;
		
	ИначеЕсли ГруппаСтраницы.ТекущаяСтраница = Элементы.ГруппаОшибкаПолученияСтатуса Тогда
		
		Если ПлатежнаяСистема_НоваяЗаявка.ВидОперацииПродажа Тогда
			ПодключитьОбработчикОжидания("ОпределитьСтатусОплаты", 0.1, Истина);
		Иначе
			ПодключитьОбработчикОжидания("ОпределитьСтатусВозврата", 0.1, Истина);
		КонецЕсли;
		
	ИначеЕсли ГруппаСтраницы.ТекущаяСтраница = Элементы.ГруппаОшибка Тогда

		Если Не ПлатежнаяСистема_НоваяЗаявка.ВидОперацииПродажа Тогда

			ДокументВозврата	= ПлатежнаяСистема_НоваяЗаявка.ДокументВозврата;
			Интеграция 			= ПлатежнаяСистема_НоваяЗаявка.Интеграция;
			
			ОтменитьОперациюВозврата(ДокументВозврата, Интеграция);
			
		КонецЕсли;
		
		ВыполнитьОбработкуОповещения(ОповещениеЗавершитьОплату, "ОтменитьЧек");
		
	Иначе
		
		ВыполнитьОбработкуОповещения(ОповещениеЗавершитьОплату, "ЗакрытьЧек");
		
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура КомандаИнструкция(Команда)
	
	ГруппаСтраницы	= Элементы.ГруппаСтраницы;
	
	Если ГруппаСтраницы.ТекущаяСтраница = Элементы.ГруппаQRКод Тогда
		ГруппаСтраницы.ТекущаяСтраница = Элементы.ГруппаИнструкция;
	Иначе
		ГруппаСтраницы.ТекущаяСтраница = Элементы.ГруппаQRКод;
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ОтменитьОплату(Команда)
	
	ГруппаСтраницы 			  = Элементы.ГруппаСтраницы;
	ОповещениеЗавершитьОплату = Новый ОписаниеОповещения("ЗавершитьОплатуВозвратПлатежнойСистемой", ЭтотОбъект);
	
	Если ГруппаСтраницы.ТекущаяСтраница = Элементы.ГруппаОшибка Тогда
		
		ВыполнитьОбработкуОповещения(ОповещениеЗавершитьОплату, "ОтменитьЧек");
		
	Иначе
		
		Отказ = Ложь;
		
		ИнтеграцияСПлатежнымиСистемамиРМККлиент.ОтменитьОперацию(ЭтотОбъект, ОповещениеЗавершитьОплату, Отказ);
		
		Если Не Отказ Тогда
			ВыполнитьОбработкуОповещения(ОповещениеЗавершитьОплату, "ОтменитьЧек");
		КонецЕсли;
		
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура КомандаОтложить(Команда)
	
	ОповещениеОтложитьЧек = Новый ОписаниеОповещения("ЗавершитьОплатуВозвратПлатежнойСистемой", ЭтотОбъект);
		
	ИнтеграцияСПлатежнымиСистемамиРМККлиент.ОтложитьЧек(ЭтотОбъект, ОповещениеОтложитьЧек);
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаКлиенте
Процедура ПодключитьОборудованиеЗавершение(РезультатВыполнения, Параметры) Экспорт
	
	Если НЕ РезультатВыполнения.Результат Тогда
		ЗаголовокИнформации = НСтр("ru = 'При подключении оборудования произошла ошибка:'");
		ТекстИнформации     = РезультатВыполнения.ОписаниеОшибки;
		ПоказатьПредупреждение(, ЗаголовокИнформации, ТекстИнформации);
		
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ЗавершитьОплатуВозвратПлатежнойСистемой(Действие, ДополнительныеПараметры = Неопределено) Экспорт
	
	Если Действие = "ОтложитьЧек" Тогда
		
		ПлатежнаяСистема_СанкционированноеЗакрытие = Истина;
	
		СтрокаОплаты = Новый Структура;
		СтрокаОплаты.Вставить("ВидОплаты",		ПлатежнаяСистема_ВидОплаты);
		СтрокаОплаты.Вставить("Оплачивается",	Истина);
		
		Закрыть(СтрокаОплаты);
		
	ИначеЕсли Действие = "ОтменитьЧек" Тогда

		ПлатежнаяСистема_СанкционированноеЗакрытие = Истина;
		Закрыть();
		
	ИначеЕсли Действие = "ДобавитьВидОплаты" Тогда
		
		ПлатежнаяСистема_НоваяЗаявка.БылоПодтверждениеПлатежнойСистемы = Истина;
		ИнтеграцияСПлатежнымиСистемамиРМККлиентСервер.НастроитьФормуПоИнтеграции(ЭтотОбъект);
		
	ИначеЕсли Действие = "ЗакрытьЧек"
		ИЛИ Строка(Действие) = "Да" Тогда
		
		Если Строка(Действие) = "Да" Тогда
		
			Элементы.ГруппаСтраницы.ТекущаяСтраница = Элементы.ГруппаЗавершение;
			ИнтеграцияСПлатежнымиСистемамиРМККлиентСервер.НастроитьФормуПоИнтеграции(ЭтотОбъект);
			
		КонецЕсли;
		
		ЗавершитьОплатуФрагмент();
		
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ЗавершитьОплатуФрагмент()
	
	ПлатежнаяСистема_СанкционированноеЗакрытие = Истина;
		
	Если ПлатежнаяСистема_НоваяЗаявка.БылоПодтверждениеПлатежнойСистемы Тогда
		
		Если ПлатежнаяСистема_НоваяЗаявка.ВидОперацииПродажа Тогда
			СсылочныйНомер	  			= ИнтеграцияСПлатежнымиСистемамиРМКВызовСервера.ИдентификаторыОперацииОплаты(
				ПлатежнаяСистема_НоваяЗаявка.Интеграция, 
				ПлатежнаяСистема_НоваяЗаявка.ДокументОплаты);
		Иначе
			СсылочныйНомер	  			= ИнтеграцияСПлатежнымиСистемамиРМКВызовСервера.ИдентификаторыОперацииОплаты(
				ПлатежнаяСистема_НоваяЗаявка.Интеграция, 
				ПлатежнаяСистема_НоваяЗаявка.ДокументВозврата);
		КонецЕсли;
		
	КонецЕсли;
	
	СпособОплаты = ИнтеграцияСПлатежнымиСистемамиРМККлиент.ОпределитьСпособОплаты(
		ЭтотОбъект,
		ПлатежнаяСистема_ВидыОплат,
		ПлатежнаяСистема_НоваяЗаявка.Организация);

	Комиссия	= ИнтеграцияСПлатежнымиСистемамиРМККлиент.ОпределитьКомиссию(
		ЭтотОбъект,
		ПлатежнаяСистема_ВидыОплат,
		ПлатежнаяСистема_НоваяЗаявка.Организация,
		ПлатежнаяСистема_НоваяЗаявка.ВидОперацииПродажа);
		
	СтрокаОплаты = Новый Структура;
	СтрокаОплаты.Вставить("ВидОплаты",						ПлатежнаяСистема_ВидОплаты);
	СтрокаОплаты.Вставить("ИдентификаторПлатежнойСистемы",	ПлатежнаяСистема_ИдентификаторПС);
	СтрокаОплаты.Вставить("ЭквайринговыйТерминал",			СпособОплаты);   
	СтрокаОплаты.Вставить("ВидПлатежнойКарты",				ИнтеграцияСПлатежнымиСистемамиУНФКлиентСервер.ВидПлатежнойКартыСБП());
	СтрокаОплаты.Вставить("Сумма",							ПлатежнаяСистема_НоваяЗаявка.СуммаОперации);
	СтрокаОплаты.Вставить("СуммаКомиссии",					ПлатежнаяСистема_НоваяЗаявка.СуммаОперации * Комиссия / 100);
	СтрокаОплаты.Вставить("СсылочныйНомер",					СсылочныйНомер);     
	СтрокаОплаты.Вставить("Результат",						Истина); // для обработки возврата
		
	Если ПлатежнаяСистема_НоваяЗаявка.ВидОперацииПродажа Тогда   
		СтрокаОплаты.Вставить("ОтложенныйЧек", ПлатежнаяСистема_НоваяЗаявка.ДокументОплаты);
	Иначе
		СтрокаОплаты.Вставить("ОтложенныйЧек", ПлатежнаяСистема_НоваяЗаявка.ДокументВозврата);
	КонецЕсли;
	
	Закрыть(СтрокаОплаты);
	
КонецПроцедуры

&НаКлиенте
Процедура ПолучитьИдентификаторОплаты()
	
	ОповещениеЗавершитьОплату 				= Новый ОписаниеОповещения("ЗавершитьОплатуВозвратПлатежнойСистемой", ЭтотОбъект);
	
	ИнтеграцияСПлатежнымиСистемамиРМККлиент.ПолучитьИдентификаторОплаты(ЭтотОбъект, ОповещениеЗавершитьОплату);
	
КонецПроцедуры

&НаКлиенте
Процедура ОпределитьСтатусОплаты()
	
	ОповещениеЗавершитьОплату 				= Новый ОписаниеОповещения("ЗавершитьОплатуВозвратПлатежнойСистемой", ЭтотОбъект);
	
	ИнтеграцияСПлатежнымиСистемамиРМККлиент.ОпределитьСтатусОплаты(ЭтотОбъект, ОповещениеЗавершитьОплату);
	
КонецПроцедуры

&НаКлиенте
Процедура ОпределитьСтатусВозврата()
	
	ОповещениеЗавершитьОплату 				= Новый ОписаниеОповещения("ЗавершитьОплатуВозвратПлатежнойСистемой", ЭтотОбъект);
	
	ИнтеграцияСПлатежнымиСистемамиРМККлиент.ОпределитьСтатусВозврата(ЭтотОбъект, ОповещениеЗавершитьОплату);
	
КонецПроцедуры

&НаКлиенте
Процедура ВыполнитьВозвратПлатежнойСистемой()
	
	ОповещениеЗавершитьОплату = Новый ОписаниеОповещения("ЗавершитьОплатуВозвратПлатежнойСистемой", ЭтотОбъект);
	ИнтеграцияСПлатежнымиСистемамиРМККлиент.ВозвратОплаты(ЭтотОбъект, ОповещениеЗавершитьОплату);
	
КонецПроцедуры

&НаСервере
Функция ОпределитьСтруктурнуюЕдиницуПродажи(ДокументОплаты)
	
	ВариантыСтруктурнойЕдиницы = Новый Массив;
	ВариантыСтруктурнойЕдиницы.Добавить("Подразделение");
	ВариантыСтруктурнойЕдиницы.Добавить("СтруктурнаяЕдиницаПродажи");
	ВариантыСтруктурнойЕдиницы.Добавить("СтруктурнаяЕдиница");
	
	МетаданныеДокумента = ДокументОплаты.Метаданные();

	Для Каждого ИмяРеквизита Из ВариантыСтруктурнойЕдиницы Цикл
		
		Если ОбщегоНазначения.ЕстьРеквизитОбъекта(ИмяРеквизита, МетаданныеДокумента) Тогда
			СтруктурнаяЕдиница = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(ДокументОплаты, ИмяРеквизита);
			Прервать;
		КонецЕсли
		
	КонецЦикла;

	Возврат СтруктурнаяЕдиница;	
	
КонецФункции

&НаСервереБезКонтекста
Процедура ОтменитьОперациюВозврата(ДокументВозврата, Интеграция)
	
	НастройкиИнтеграции = ИнтеграцияСПлатежнымиСистемамиУНФ.НастройкиТорговойТочки(Интеграция);
	
	// Перед отменой нужно определить статус оплаты.
	РезультатОперации = ПереводыСБПc2b.СтатусВозврата(ДокументВозврата, Интеграция, Ложь);
	
	// В зависимости от статуса оплаты выполняется соответствующая операция.
	Если РезультатОперации.СтатусОперации = СистемаБыстрыхПлатежейКлиентСервер.СтатусОперацииОтменена() Тогда
		ПереводыСБПc2b.УдалитьИдентификаторыОперации(ДокументВозврата);
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

