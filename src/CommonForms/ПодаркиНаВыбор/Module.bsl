
#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
		
	ЛокализованныйЗаголовокЗакрыть = НСтр("ru = 'Закрыть'");
	ЛокализованныйЗаголовокДалее = НСтр("ru = 'Далее >>'");	
	ЦветКнопкиВажное = ЦветаСтиля.ЦветВажного;
	ЦветКнопкиОбычный = ЦветаСтиля.ЦветФонаКнопки;
	
	Если Параметры.Свойство("АдресВоВременномХранилище", АдресВоВременномХранилище) Тогда
		
		ТаблицаПодарков = ПолучитьИзВременногоХранилища(Параметры.АдресВоВременномХранилище);
		СформироватьДеревоПодарков(ТаблицаПодарков);
		
		МассивНомеровВариантовКП = Неопределено;
		Если Параметры.Свойство("НомераВариантовКП", МассивНомеровВариантовКП) Тогда
			Для Каждого НомерКП Из МассивНомеровВариантовКП Цикл
				НомераВариантовКП.Добавить(НомерКП,  НСтр("ru = 'Подарки для варианта КП №'") + НомерКП);				
			КонецЦикла;
		Иначе
			НомераВариантовКП.Добавить(0);
		КонецЕсли;
		НомерТекущегоКП = НомераВариантовКП[0].Значение;		
	Иначе
		
		Отказ = Истина;
		
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовТаблицыФормыДеревоПодарков

&НаКлиенте
Процедура ДеревоПодарковПередНачаломИзменения(Элемент, Отказ)
	
	Если Элемент.ТекущиеДанные = Неопределено
		ИЛИ НЕ ЗначениеЗаполнено(Элемент.ТекущиеДанные.Номенклатура) Тогда
		Отказ = Истина;
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ДеревоПодарковПриИзменении(Элемент)
	
	ТекущаяСтрокаДерева = Элементы.ДеревоПодарков.ТекущиеДанные;
	Если ТекущаяСтрокаДерева  = Неопределено
		ИЛИ НЕ ЗначениеЗаполнено(ТекущаяСтрокаДерева.Номенклатура) Тогда
		Возврат;
	КонецЕсли;
	Если ТекущаяСтрокаДерева.Выбран Тогда
		ТекущийРодитель = ТекущаяСтрокаДерева.ПолучитьРодителя();
		ПодчиненныеСтроки = ТекущийРодитель.ПолучитьЭлементы();
		Для Каждого ПодчиненнаяСтрока Из ПодчиненныеСтроки Цикл
			Если ПодчиненнаяСтрока.Выбран
				И ПодчиненнаяСтрока <> ТекущаяСтрокаДерева Тогда
				ПодчиненнаяСтрока.Выбран = Ложь;
			КонецЕсли;
		КонецЦикла;	
	КонецЕсли;
	
	ОбновитьДоступностьКнопкиДалее();
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура ВыдатьПодарки(Команда)
	
	АдресПодарков = ПоместитьПодаркиВоВременноеХранилище();
	Закрыть(АдресПодарков);
	
КонецПроцедуры

&НаКлиенте
Процедура Назад(Команда)
	
	СохранитьДеревоПодарковТекущегоКП();
	НомерТекущегоКП = НомерТекущегоКП - 1;
	ОбновлениеФормы();
	
КонецПроцедуры

&НаКлиенте
Процедура Далее(Команда)
		
	СохранитьДеревоПодарковТекущегоКП();
	Если Элементы.Далее.Заголовок = ЛокализованныйЗаголовокЗакрыть Тогда
		ВыдатьПодарки(Неопределено);
	Иначе
		НомерТекущегоКП = НомерТекущегоКП + 1;
		ОбновлениеФормы();
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаСервере
Функция ПоместитьПодаркиВоВременноеХранилище()
	
	ТаблицаПодарков = СкидкиНаценкиСервер.ПустаяТаблицаПодарков();
	ТаблицаПодарков.Колонки.Добавить("НомерВариантаКП", Новый ОписаниеТипов("Число"));
	ЭлементыДерева = ДеревоПодарков.ПолучитьЭлементы();
	Для Каждого СтрокаДерева Из ЭлементыДерева Цикл
		ПодчиненныеСтроки = СтрокаДерева.ПолучитьЭлементы();
		Если ПодчиненныеСтроки.Количество() = 0 Тогда 
			НоваяСтрока = ТаблицаПодарков.Добавить();
			ЗаполнитьЗначенияСвойств(НоваяСтрока, СтрокаДерева);
		КонецЕсли;
		Для Каждого ПодчиненнаяСтрока Из ПодчиненныеСтроки Цикл
			Если ПодчиненнаяСтрока.Выбран Тогда
				НоваяСтрока = ТаблицаПодарков.Добавить();
				ЗаполнитьЗначенияСвойств(НоваяСтрока, ПодчиненнаяСтрока);
			КонецЕсли;
		КонецЦикла;
	КонецЦикла;
	
	Адрес = ПоместитьВоВременноеХранилище(ТаблицаПодарков, Новый УникальныйИдентификатор);
	
	Возврат Адрес;
	
КонецФункции

&НаСервере
Процедура СформироватьДеревоПодарков(ТаблицаПодарков)
	
	ЭлементыДерева = ДеревоПодарков.ПолучитьЭлементы();
	Если ТаблицаПодарков.Колонки.Найти("НомерВариантаКП") = Неопределено Тогда
		// В таблице не используются разные наборы коммерческих предложений (актуально для заказа покупателя)
		ТаблицаПодарков.Колонки.Добавить("НомерВариантаКП", Новый ОписаниеТипов("Число"));
	КонецЕсли;
	Для Каждого СтрокаПодарка Из ТаблицаПодарков Цикл
		Если СтрокаПодарка.КлючСвязи = 0 Тогда
			ТабличныеЧастиУНФКлиентСервер.ЗаполнитьКлючСвязи(ТаблицаПодарков, СтрокаПодарка, "КлючСвязи");
		КонецЕсли;
	КонецЦикла;
		
	Для Каждого СтрокаПодарка Из ТаблицаПодарков Цикл
		СтрокаНайдена = Ложь;
		Для Каждого СтрокаДерева Из ЭлементыДерева Цикл
			Если СтрокаДерева.СкидкаНаценка = СтрокаПодарка.СкидкаНаценка 
				И СтрокаДерева.НомерВариантаКП = СтрокаПодарка.НомерВариантаКП Тогда
				СтрокаНайдена = Истина;
				Прервать;
			КонецЕсли;
		КонецЦикла;
		Если НЕ СтрокаНайдена Тогда
			СтрокаДерева = ЭлементыДерева.Добавить();
			СтрокаДерева.СкидкаНаценка = СтрокаПодарка.СкидкаНаценка;
			СтрокаДерева.НомерВариантаКП = СтрокаПодарка.НомерВариантаКП;
		КонецЕсли;
		ПодчиненныеСтроки = СтрокаДерева.ПолучитьЭлементы();
		НоваяСтрока = ПодчиненныеСтроки.Добавить();
		ЗаполнитьЗначенияСвойств(НоваяСтрока, СтрокаПодарка);
	КонецЦикла;
	
КонецПроцедуры

&НаКлиенте
Процедура СформироватьДеревоПодарковТекущегоКП()
	
	// Наполним текущее дерево для следующего КП
	ЭлементыОбщегоДерева = ДеревоПодарков.ПолучитьЭлементы();
	ЭлементыДереваТекущегоКП = ДеревоПодарковТекущегоКП.ПолучитьЭлементы();	
	ЭлементыДереваТекущегоКП.Очистить();
	Для Каждого СтрокаОбщегоДерева Из ЭлементыОбщегоДерева Цикл
		Если СтрокаОбщегоДерева.НомерВариантаКП = НомерТекущегоКП Тогда
			НоваяСтрокаТекущегоКП = ЭлементыДереваТекущегоКП.Добавить();
			ЗаполнитьЗначенияСвойств(НоваяСтрокаТекущегоКП, СтрокаОбщегоДерева);
			ПодчиненныеСтрокиТекущегоКП = НоваяСтрокаТекущегоКП.ПолучитьЭлементы();			
			ПодчиненныеСтрокиОбщегоДерева = СтрокаОбщегоДерева.ПолучитьЭлементы();
			Для Каждого ПодчиненнаяСтрокаОбщегоДерева Из ПодчиненныеСтрокиОбщегоДерева  Цикл
				ПодчиненнаяСтрокаТекущегоКП = ПодчиненныеСтрокиТекущегоКП.Добавить();
				ЗаполнитьЗначенияСвойств(ПодчиненнаяСтрокаТекущегоКП, ПодчиненнаяСтрокаОбщегоДерева);
			КонецЦикла;
		КонецЕсли;
	КонецЦикла;
	Для Каждого КорневаяСтрока Из ДеревоПодарковТекущегоКП.ПолучитьЭлементы() Цикл
		ИДСтроки = КорневаяСтрока.ПолучитьИдентификатор();
		Если НЕ ИДСтроки = Неопределено Тогда
			Элементы.ДеревоПодарков.Развернуть(ИДСтроки, Истина);
		КонецЕсли;
	КонецЦикла;
	
КонецПроцедуры

&НаКлиенте
Процедура СохранитьДеревоПодарковТекущегоКП()
	ЭлементыОбщегоДерева = ДеревоПодарков.ПолучитьЭлементы();
	ЭлементыДереваТекущегоКП = ДеревоПодарковТекущегоКП.ПолучитьЭлементы();
	// Перенесем выбор в общее дерево
	Для Каждого СтрокаТекущегоКП Из ЭлементыДереваТекущегоКП Цикл
		Для Каждого СтрокаОбщегоДерева Из ЭлементыОбщегоДерева Цикл
			Если СтрокаОбщегоДерева.НомерВариантаКП = НомерТекущегоКП 
				И СтрокаОбщегоДерева.СкидкаНаценка = СтрокаТекущегоКП.СкидкаНаценка Тогда
				СтрокаОбщегоДерева.Выбран = СтрокаТекущегоКП.Выбран;
				ПодчиненныеСтрокиОбщегоДерева = СтрокаОбщегоДерева.ПолучитьЭлементы(); 
				ПодчиненныеСтрокиТекущегоДерева = СтрокаТекущегоКП.ПолучитьЭлементы();
				Для Каждого ПодчиненнаяСтрокаТекущегоКП Из ПодчиненныеСтрокиТекущегоДерева Цикл
					Для Каждого ПодчиненнаяСтрокаОбщегоДерева Из ПодчиненныеСтрокиОбщегоДерева Цикл
						Если ПодчиненнаяСтрокаОбщегоДерева.КлючСвязи = ПодчиненнаяСтрокаТекущегоКП.КлючСвязи Тогда
							ПодчиненнаяСтрокаОбщегоДерева.Выбран = ПодчиненнаяСтрокаТекущегоКП.Выбран;
							Прервать;
						КонецЕсли;
					КонецЦикла;
				КонецЦикла;
			КонецЕсли;
		КонецЦикла;
	КонецЦикла;
КонецПроцедуры

&НаКлиенте
Процедура ОбновлениеФормы() 
	
	Сообщение = НомераВариантовКП.НайтиПоЗначению(НомерТекущегоКП);
	Если Сообщение = Неопределено Тогда
		Возврат;
	КонецЕсли;
	ИндексСообщения = НомераВариантовКП.Индекс(Сообщение);
	Элементы.Назад.Доступность = ИндексСообщения >= 1;

	Если (НомераВариантовКП.Количество() - 1) <= ИндексСообщения Тогда
		Элементы.Далее.Заголовок = ЛокализованныйЗаголовокЗакрыть;
		ИндексСообщения = НомераВариантовКП.Количество() - 1;		
		Элементы.Далее.ЦветФона = ЦветКнопкиВажное;
	Иначе
		Элементы.Далее.Заголовок = ЛокализованныйЗаголовокДалее;
		Элементы.Далее.ЦветФона = ЦветКнопкиОбычный;
	КонецЕсли;
	
	ТекущееКП = НомераВариантовКП[ИндексСообщения];
	НомерТекущегоКП = ТекущееКП.Значение;
	Если ЗначениеЗаполнено(ТекущееКП.Представление) Тогда
		Заголовок = ТекущееКП.Представление;
	Иначе
		Заголовок = НСтр("ru = 'Подарки'");
	КонецЕсли;
	СформироватьДеревоПодарковТекущегоКП();
	ОбновитьДоступностьКнопкиДалее();
	
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	ОбновлениеФормы();
КонецПроцедуры 

&НаКлиенте
Процедура ОбновитьДоступностьКнопкиДалее()
	ПодарокВыбран = ПоискОтметкиВыбранРекурсивно(ДеревоПодарковТекущегоКП);	
	Элементы.Далее.Доступность = ПодарокВыбран;
КонецПроцедуры

&НаКлиентеНаСервереБезКонтекста	
Функция ПоискОтметкиВыбранРекурсивно(УзелДерева)
	Результат = Ложь;
	ПодчиненныеСтроки = УзелДерева.ПолучитьЭлементы();
	Для Каждого ПодчиненнаяСтрока Из ПодчиненныеСтроки Цикл
		Если ПодчиненнаяСтрока.Выбран Тогда
			Результат = Истина;
			Прервать;
		Иначе
			Результат = ПоискОтметкиВыбранРекурсивно(ПодчиненнаяСтрока)
		КонецЕсли;
		Если Результат Тогда
			Возврат Результат;
		КонецЕсли;
	КонецЦикла;
	Возврат Результат;
	
КонецФункции
#КонецОбласти