
&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	Если Параметры.Свойство("Организация") Тогда
		Организация = Параметры.Организация;
	КонецЕсли;
	
	СтруктураОрганизацияКассаККМ = Новый Структура("Организация, КассаККМ", Организация, КассаККМ);
	ЭлектронныеСертификатыНСПКРМКПереопределяемый.ЗаполнитьЗначенияФормыНастроек(СтруктураОрганизацияКассаККМ);
	ЗаполнитьЗначенияСвойств(ЭтотОбъект, СтруктураОрганизацияКассаККМ);
	
	ЗаполнитьЗначенияНастроекНСПК();
	
КонецПроцедуры

&НаКлиенте
Процедура ОрганизацияПриИзменении(Элемент)
	
	ЗаполнитьЗначенияНастроекНСПК();
	
КонецПроцедуры

&НаКлиенте
Процедура КассаККМПриИзменении(Элемент)
	
	ЗаполнитьЗначенияНастроекНСПК();
	
КонецПроцедуры

&НаКлиенте
Процедура ПроверятьКорневыеСертификатыНСПКПриИзменении(Элемент)
	
	ПроверятьКорневыеСертификатыНСПКПриИзмененииНаСервере();
	
КонецПроцедуры

&НаСервере
Процедура ПроверятьКорневыеСертификатыНСПКПриИзмененииНаСервере()
	
	Константы.ПроверятьКорневыеСертификатыНСПК.Установить(ПроверятьКорневыеСертификатыНСПК);
	
КонецПроцедуры

#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура ТестовоеПодключениеНСПК(Команда)
	
	Если Модифицированность Тогда
		ПоказатьПредупреждение(, НСтр("ru = 'Перед тестом подключения необходимо записать изменения.'"));
		Возврат;
	КонецЕсли;
	
	Если ПроверитьЗаполнениеНаКлиенте() Тогда
		ОчиститьСообщения();
		ПараметрыОперации = ПолучитьПараметрыОперации();
		ОповещениеМетода = Новый ОписаниеОповещения("ТестовоеПодключениеЗавершение", ЭтотОбъект, ПараметрыОперации);
		ЭлектронныеСертификатыНСПККлиент.НачатьТестовоеПодключение(ОповещениеМетода, ПараметрыОперации);
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура СохранитьИзменения(Команда)
	
	Если ПроверитьЗаполнениеНаКлиенте() Тогда
		СохранитьИзмененияНаСервере();
		Закрыть();
	КонецЕсли
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаКлиенте
Функция ПроверитьЗаполнениеНаКлиенте()
	
	Результат = Истина;
	Если Не ЗначениеЗаполнено(Организация) Тогда
		ТекстСообщения = НСтр("ru='Необходимо указать организацию'");
		Результат = Ложь;
	ИначеЕсли Не ЗначениеЗаполнено(КассаККМ) Тогда
		ТекстСообщения = НСтр("ru='Необходимо указать кассу ККМ'");
		Результат = Ложь;
	КонецЕсли;
	
	Если Не Результат Тогда
		ОбщегоНазначенияКлиент.СообщитьПользователю(ТекстСообщения);
	КонецЕсли;
	
	Возврат Результат;
	
КонецФункции

&НаКлиенте
Процедура ТестовоеПодключениеЗавершение(РезультатВыполнения, ДополнительныеПараметры) Экспорт 
	
	Если РезультатВыполнения.Результат Тогда
		ОбщегоНазначенияКлиент.СообщитьПользователю(НСтр("ru='Тест подключения выполнен успешно'"));
	Иначе
		ОписаниеОшибки = НСтр("ru='ОШИБКА: (%1) %2'");
		ОписаниеОшибки = СтрШаблон(ОписаниеОшибки, РезультатВыполнения.КодРезультата, РезультатВыполнения.ОписаниеОшибки); 
		ОбщегоНазначенияКлиент.СообщитьПользователю(ОписаниеОшибки);
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Функция ПолучитьПараметрыОперации()
	
	ПараметрыОперации = ЭлектронныеСертификатыНСПК.ПараметрыОперацииНСПК();
	ЭлектронныеСертификатыНСПКРМКПереопределяемый.ЗаполнитьПараметрыОперацииНСПКПоКассеККМ(ПараметрыОперации, КассаККМ);
	
	Возврат ПараметрыОперации;
	
КонецФункции

&НаСервере
Процедура ЗаполнитьЗначенияНастроекНСПК()
	
	Если ЗначениеЗаполнено(Организация) Тогда
		ПараметрыПодключенияНСПК = Новый Структура("КлючОрганизацииНСПК");
		ЭлектронныеСертификатыНСПКРМКПереопределяемый.ЗаполнитьПараметрыПодключенияОрганизацииНСПК(ПараметрыПодключенияНСПК, Организация);
		
		КлючОрганизацииНСПК = ПараметрыПодключенияНСПК.КлючОрганизацииНСПК;
	КонецЕсли;
	
	Если ЗначениеЗаполнено(КассаККМ) Тогда
		ПараметрыПодключенияНСПК = Новый Структура("ИдентификаторНСПК, КлючКассыНСПК");
		ЭлектронныеСертификатыНСПКРМКПереопределяемый.ЗаполнитьПараметрыПодключенияКассыНСПК(ПараметрыПодключенияНСПК, КассаККМ);
		
		ИдентификаторНСПК = ПараметрыПодключенияНСПК.ИдентификаторНСПК;
		КлючКассыНСПК = ПараметрыПодключенияНСПК.КлючКассыНСПК;
	КонецЕсли;
	
	ПроверятьКорневыеСертификатыНСПК = Константы.ПроверятьКорневыеСертификатыНСПК.Получить();
	
КонецПроцедуры

&НаСервере
Процедура СохранитьИзмененияНаСервере()
	
	Если ЗначениеЗаполнено(КлючОрганизацииНСПК) Тогда
		ОбщегоНазначения.ЗаписатьДанныеВБезопасноеХранилище(Организация, КлючОрганизацииНСПК, "КлючОрганизацииНСПК");
	Иначе
		ОбщегоНазначения.УдалитьДанныеИзБезопасногоХранилища(Организация, "ИдентификаторНСПК");
	КонецЕсли;
	
	Если ЗначениеЗаполнено(ИдентификаторНСПК) Тогда
		ОбщегоНазначения.ЗаписатьДанныеВБезопасноеХранилище(КассаККМ, ИдентификаторНСПК, "ИдентификаторНСПК");
	Иначе
		ОбщегоНазначения.УдалитьДанныеИзБезопасногоХранилища(КассаККМ, "ИдентификаторНСПК");
	КонецЕсли;
	
	Если ЗначениеЗаполнено(КлючКассыНСПК) Тогда
		ОбщегоНазначения.ЗаписатьДанныеВБезопасноеХранилище(КассаККМ, КлючКассыНСПК, "КлючКассыНСПК");
	Иначе
		ОбщегоНазначения.УдалитьДанныеИзБезопасногоХранилища(КассаККМ, "КлючКассыНСПК");
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти
