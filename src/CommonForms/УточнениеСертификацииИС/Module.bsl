#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	Если Параметры.Свойство("АвтоТест") Тогда // Возврат при получении формы для анализа.
		Возврат;
	КонецЕсли;
	
	ВариантУточненияДанных = Параметры.ВариантУточненияДанных;
	
	Если ВариантУточненияДанных = "Лицензия" Тогда
		
		Элементы.СтраницаЛицензии.Видимость      = Истина;
		Элементы.СтраницаСертификация.Видимость  = Ложь;
		Элементы.СтраницаДанныеИмпорта.Видимость = Ложь;
		
		НомерЛицензии = Параметры.НомерЛицензии;
		ДатаЛицензии  = Параметры.ДатаЛицензии;
		
	ИначеЕсли ВариантУточненияДанных = "ДанныеИмпорта" Тогда
		
		Элементы.СтраницаЛицензии.Видимость      = Ложь;
		Элементы.СтраницаСертификация.Видимость  = Ложь;
		Элементы.СтраницаДанныеИмпорта.Видимость = Истина;
		
		Импортер                       = Параметры.Импортер;
		РегистрационныйНомерДекларации = Параметры.РегистрационныйНомерДекларации;
		ДатаДекларации                 = Параметры.ДатаДекларации;
		
	Иначе
		
		Элементы.СтраницаЛицензии.Видимость      = Ложь;
		Элементы.СтраницаСертификация.Видимость  = Истина;
		Элементы.СтраницаДанныеИмпорта.Видимость = Ложь;
		
		ВидСертификации   = Параметры.ВидСертификации;
		ДатаСертификации  = Параметры.ДатаСертификации;
		НомерСертификации = Параметры.НомерСертификации;
		
		ИспользоватьНомерСкважины = Параметры.ИспользоватьНомерСкважины;
		Элементы.НомерСкважины.Видимость = ИспользоватьНомерСкважины;
		
		Если ИспользоватьНомерСкважины Тогда
			НомерСкважины = Параметры.НомерСкважины;
		КонецЕсли;
		
		Если Не ЗначениеЗаполнено(ВидСертификации) Тогда
			ВидСертификации = Перечисления.ВидыДокументовОбязательнойСертификацииИС.СертификатСоответствия;
		КонецЕсли;
		
		ЗаполнитьДоступныеВидыДокументовСертификации(Параметры.ВидПродукции);
		
		Если Элементы.ВидСертификации.СписокВыбора.Количество() = 1 Тогда
			ВидСертификации = Элементы.ВидСертификации.СписокВыбора.Получить(0).Значение;
		КонецЕсли;
		
	КонецЕсли;
	
	СброситьРазмерыИПоложениеОкна();
	
	СобытияФормИСПереопределяемый.ПриСозданииНаСервере(ЭтотОбъект, Отказ, СтандартнаяОбработка);
	
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	
	Если ВариантУточненияДанных = "ДанныеИмпорта" Тогда
		СобытияФормИСМПКлиентПереопределяемый.УстановитьПараметрыВыбораКонтрагента(ЭтотОбъект, Истина, "Импортер");
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура Готово(Команда)
	
	Отказ = Ложь;
	ПроверитьЗаполнениеРеквизитов(Отказ);
	
	Если Отказ Тогда
		Возврат;
	КонецЕсли;
	
	Результат = Новый Структура;
	Если ВариантУточненияДанных = "Лицензия" Тогда
		Результат.Вставить("НомерЛицензии",     НомерЛицензии);
		Результат.Вставить("ДатаЛицензии",      ДатаЛицензии);
	ИначеЕсли ВариантУточненияДанных = "ДанныеИмпорта" Тогда
		Результат.Вставить("Импортер",                       Импортер);
		Результат.Вставить("РегистрационныйНомерДекларации", РегистрационныйНомерДекларации);
		Результат.Вставить("ДатаДекларации",                 ДатаДекларации);
	Иначе
		Результат.Вставить("ВидСертификации",   ВидСертификации);
		Результат.Вставить("ДатаСертификации",  ДатаСертификации);
		Результат.Вставить("НомерСертификации", НомерСертификации);
		Результат.Вставить("НомерСкважины",     Строка(НомерСкважины));
	КонецЕсли;
	
	Закрыть(Результат);
	
КонецПроцедуры

&НаКлиенте
Процедура Отмена(Команда)
	
	Закрыть();
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаСервере
Процедура СброситьРазмерыИПоложениеОкна()
	
	ИмяПользователя = ПользователиИнформационнойБазы.ТекущийПользователь().Имя;
	Если ПравоДоступа("СохранениеДанныхПользователя", Метаданные) Тогда
		ХранилищеСистемныхНастроек.Удалить("ОбщаяФорма.УточнениеСертификацииИС", "", ИмяПользователя);
	КонецЕсли;
	КлючСохраненияПоложенияОкна = Строка(Новый УникальныйИдентификатор);
	
КонецПроцедуры

&НаКлиенте
Процедура ПроверитьЗаполнениеРеквизитов(Отказ)
	
	ОчиститьСообщения();
	
	ШаблонСообщения = Нстр("ru='Поле ""%1"" не заполнено'");
	Если ВариантУточненияДанных = "Лицензия" Тогда
		
		Если Не ЗначениеЗаполнено(НомерЛицензии) Тогда
			ТекстСообщения = СтрШаблон(ШаблонСообщения, "Номер лицензии");
			ОбщегоНазначенияКлиент.СообщитьПользователю(ТекстСообщения,,"НомерЛицензии",,Отказ);
		КонецЕсли;
		
		Если Не ЗначениеЗаполнено(ДатаЛицензии) Тогда
			ТекстСообщения = СтрШаблон(ШаблонСообщения, "Дата лицензии");
			ОбщегоНазначенияКлиент.СообщитьПользователю(ТекстСообщения,,"ДатаЛицензии",,Отказ);
		КонецЕсли;
		
	ИначеЕсли ВариантУточненияДанных = "ДанныеИмпорта" Тогда
		
		Если Не ЗначениеЗаполнено(Импортер) Тогда
			ТекстСообщения = СтрШаблон(ШаблонСообщения, "Импортер");
			ОбщегоНазначенияКлиент.СообщитьПользователю(ТекстСообщения,,"Импортер",,Отказ);
		КонецЕсли;
		
		Если Не ЗначениеЗаполнено(РегистрационныйНомерДекларации) Тогда
			ТекстСообщения = СтрШаблон(ШаблонСообщения, "Регистрационный номер декларации");
			ОбщегоНазначенияКлиент.СообщитьПользователю(ТекстСообщения,,"РегистрационныйНомерДекларации",,Отказ);
		КонецЕсли;
		
		Если Не ЗначениеЗаполнено(ДатаДекларации) Тогда
			ТекстСообщения = СтрШаблон(ШаблонСообщения, "Дата декларации");
			ОбщегоНазначенияКлиент.СообщитьПользователю(ТекстСообщения,,"ДатаДекларации",,Отказ);
		КонецЕсли;
		
	Иначе
		
		Если Не ЗначениеЗаполнено(ВидСертификации) Тогда
			ТекстСообщения = СтрШаблон(ШаблонСообщения, "Вид Сертификации");
			ОбщегоНазначенияКлиент.СообщитьПользователю(ТекстСообщения,,"ВидСертификации",,Отказ);
		КонецЕсли;
		
		Если Не ЗначениеЗаполнено(НомерСертификации) Тогда
			ТекстСообщения = СтрШаблон(ШаблонСообщения, "Номер сертификации");
			ОбщегоНазначенияКлиент.СообщитьПользователю(ТекстСообщения,,"НомерСертификации",,Отказ);
		КонецЕсли;
		
		Если Не ЗначениеЗаполнено(ДатаСертификации) Тогда
			ТекстСообщения = СтрШаблон(ШаблонСообщения, "Дата сертификации");
			ОбщегоНазначенияКлиент.СообщитьПользователю(ТекстСообщения,,"ДатаСертификации",,Отказ);
		КонецЕсли;
		
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура ЗаполнитьДоступныеВидыДокументовСертификации(ВидПродукции)
	
	Элементы.ВидСертификации.СписокВыбора.Очистить();
	
	Если ВидПродукции = Перечисления.ВидыПродукцииИС.Пиво Тогда
		
		Элементы.ВидСертификации.СписокВыбора.Добавить(
			Перечисления.ВидыДокументовОбязательнойСертификацииИС.ДекларацияСоответствия);
		
	Иначе
		
		Элементы.ВидСертификации.СписокВыбора.Добавить(
			Перечисления.ВидыДокументовОбязательнойСертификацииИС.СертификатСоответствия);
		Элементы.ВидСертификации.СписокВыбора.Добавить(
			Перечисления.ВидыДокументовОбязательнойСертификацииИС.ДекларацияСоответствия);
			
		Если ИнтеграцияИСКлиентСервер.ВидПродукцииИспользуетСвидетельствоОГосударственнойРегистрации(ВидПродукции) Тогда
			Элементы.ВидСертификации.СписокВыбора.Добавить(
				Перечисления.ВидыДокументовОбязательнойСертификацииИС.СвидетельствоОГосударственнойРегистрации);
		КонецЕсли;
		
	КонецЕсли;
	
	
КонецПроцедуры

#КонецОбласти