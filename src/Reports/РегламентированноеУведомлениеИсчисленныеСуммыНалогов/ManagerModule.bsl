#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область ПрограммныйИнтерфейс

//Данные - структура
//			Организация
//			РегистрацияВИФНС
//			ЛистыА - массив структур
//			ЛистыБ - массив структур
//			ЛистыВ - массив структур
//			Стр01 - структура
//			Стр02 - структура
Функция СформироватьНовоеУведомление(РедакцияФормы, Данные) Экспорт
	Если РедакцияФормы = "Форма2022_1" Тогда
		Возврат СформироватьНовоеУведомление_2022_1(Данные);
	ИначеЕсли РедакцияФормы = "Форма2023_1" Тогда
		Возврат СформироватьНовоеУведомление_2023_1(Данные);
	КонецЕсли;
КонецФункции

// Возвращает актуальную форму отчета
//
// Возвращаемое значение:
//  Строка
//
Функция ПолучитьФормуПоУмолчанию() Экспорт
	Возврат "";
КонецФункции

Функция СформироватьСписокЛистов(Объект) Экспорт
	Если Объект.ИмяФормы = "Форма2022_1" Тогда 
		Возврат СформироватьСписокЛистовФорма2022_1(Объект);
	ИначеЕсли Объект.ИмяФормы = "Форма2023_1" Тогда 
		Возврат СформироватьСписокЛистовФорма2023_1(Объект);
	КонецЕсли;
КонецФункции

Функция ДействующаяРедакцияФормы(Дата) Экспорт
	
	Возврат ?(Дата >= НачалоДня(Дата('20230101')), "Форма2023_1", "Форма2022_1");
	
КонецФункции

#КонецОбласти

#Область СлужебныеПроцедурыИФункции
Функция ПолучитьТаблицуПримененияФорматов() Экспорт 
	Результат = Документы.УведомлениеОСпецрежимахНалогообложения.ПолучитьПустуюТаблицуПримененияФорматов();
	
	Стр = Результат.Добавить();
	Стр.ИмяФормы = "Форма2022_1";
	Стр.КНД = "1110355";
	Стр.ВерсияФормата = "5.01";
	
	Стр = Результат.Добавить();
	Стр.ИмяФормы = "Форма2023_1";
	Стр.КНД = "1110355";
	Стр.ВерсияФормата = "5.02";
	
	Возврат Результат;
КонецФункции

Функция ДанноеУведомлениеДоступноДляОрганизации() Экспорт 
	Возврат Истина;
КонецФункции

Функция ДанноеУведомлениеДоступноДляИП() Экспорт 
	Возврат Истина;
КонецФункции

Функция ПолучитьОсновнуюФорму() Экспорт 
	Возврат "";
КонецФункции

Функция ПолучитьТаблицуФорм() Экспорт 
	Результат = Документы.УведомлениеОСпецрежимахНалогообложения.ПолучитьПустуюТаблицуФормУведомления();
	
	Стр = Результат.Добавить();
	Стр.ИмяФормы = "Форма2023_1";
	Стр.ОписаниеФормы = "В соответствии с приказом ФНС России от 02.11.2022 № ЕД-7-8/1047@ в формате 5.02";
	Стр.ДатаНачала = '20230101';
	Стр.ДатаКонца = '20991231';
	
	Возврат Результат;
КонецФункции

Функция СформироватьМакет(Объект, ИмяФормы) Экспорт
	ВызватьИсключение НСтр("ru = 'Печатная форма не реализована'");
	Возврат Неопределено;
КонецФункции

Функция ЭлектронноеПредставление(Объект, ИмяФормы, УникальныйИдентификатор) Экспорт
	Если ИмяФормы = "Форма2022_1" Тогда
		Возврат ЭлектронноеПредставление_Форма2022_1(Объект, УникальныйИдентификатор);
	ИначеЕсли ИмяФормы = "Форма2023_1" Тогда
		Возврат ЭлектронноеПредставление_Форма2023_1(Объект, УникальныйИдентификатор);
	КонецЕсли;
	Возврат Неопределено;
КонецФункции

Функция ПроверитьДокумент(Объект, ИмяФормы, УникальныйИдентификатор) Экспорт
КонецФункции

Функция ПроверитьДокументСВыводомВТаблицу(Объект, ИмяФормы, УникальныйИдентификатор) Экспорт 
	Если ИмяФормы = "Форма2022_1" Тогда 
		Возврат ПроверитьДокументСВыводомВТаблицу_Форма2022_1(
			УведомлениеОСпецрежимахНалогообложения.ДанныеУведомленияДляВыгрузки(Объект), УникальныйИдентификатор);
	ИначеЕсли ИмяФормы = "Форма2023_1" Тогда 
		Возврат ПроверитьДокументСВыводомВТаблицу_Форма2023_1(
			УведомлениеОСпецрежимахНалогообложения.ДанныеУведомленияДляВыгрузки(Объект), УникальныйИдентификатор);
	КонецЕсли;
КонецФункции

Функция ИдентификаторФайлаЭлектронногоПредставления_Форма2022_1(СведенияОтправки)
	Префикс = "UT_UVISCHSUMNAL";
	Возврат Документы.УведомлениеОСпецрежимахНалогообложения.ИдентификаторФайлаЭлектронногоПредставления(Префикс, СведенияОтправки);
КонецФункции

Функция ПроверитьДокументСВыводомВТаблицу_Форма2022_1(Данные, УникальныйИдентификатор)
	ТаблицаОшибок = Новый СписокЗначений;
	ТаблицаОшибок.Добавить(Документы.УведомлениеОСпецрежимахНалогообложения.ПолучитьПустуюСтруктуруНавигацииПоОшибкам(
		"Формат 5.01 более не принимается", "Титульная", "ДАТА_ПОДПИСИ"));
	Возврат ТаблицаОшибок;
КонецФункции

Функция ПроверитьДокументСВыводомВТаблицу_Форма2023_1(Данные, УникальныйИдентификатор)
	ТаблицаОшибок = Новый СписокЗначений;
	УведомлениеОСпецрежимахНалогообложения.ПроверкаАктуальностиФормыПриВыгрузке(
		Данные.Объект.ИмяФормы, ТаблицаОшибок, ПолучитьТаблицуФорм());
		
	УведомлениеОСпецрежимахНалогообложения.ПроверкаДатВУведомлении(Данные, ТаблицаОшибок);
	УведомлениеОСпецрежимахНалогообложения.ПолнаяПроверкаЗаполненныхПоказателейНаСоотвествиеСписку(
		"СпискиВыбора2023_1", "СхемаВыгрузкиФорма2023_1", Данные.Объект.ИмяОтчета, ТаблицаОшибок, Данные);
	
	Титульная = Данные.ДанныеУведомления.Титульная;
	ЭтоЮЛ = РегламентированнаяОтчетностьПереопределяемый.ЭтоЮридическоеЛицо(Данные.Организация);
	УведомлениеОСпецрежимахНалогообложения.ПроверкаИННКПП(ЭтоЮЛ, Титульная, ТаблицаОшибок);
	
	Если Не ЗначениеЗаполнено(Титульная.ПРИЗНАК_НП_ПОДВАЛ) Тогда 
		ТаблицаОшибок.Добавить(Документы.УведомлениеОСпецрежимахНалогообложения.ПолучитьПустуюСтруктуруНавигацииПоОшибкам(
			"Не указан признак подписанта", "Титульная", "ПРИЗНАК_НП_ПОДВАЛ"));
	КонецЕсли;
	Если Не ЗначениеЗаполнено(Титульная.ДАТА_ПОДПИСИ) Тогда 
		ТаблицаОшибок.Добавить(Документы.УведомлениеОСпецрежимахНалогообложения.ПолучитьПустуюСтруктуруНавигацииПоОшибкам(
			"Не указана дата подписи", "Титульная", "ДАТА_ПОДПИСИ"));
	КонецЕсли;
	УведомлениеОСпецрежимахНалогообложения.ПроверкаПодписантаНалоговойОтчетности(Данные, ТаблицаОшибок, "Титульная", Истина);
	Если (Титульная.ПРИЗНАК_НП_ПОДВАЛ = "2" Или ЗначениеЗаполнено(Титульная.НаимОргПред)) И Не ЗначениеЗаполнено(Титульная.НаимДок) Тогда 
		ТаблицаОшибок.Добавить(Документы.УведомлениеОСпецрежимахНалогообложения.ПолучитьПустуюСтруктуруНавигацииПоОшибкам(
			"Не указан документ представителя", "Титульная", "НаимДок"));
	КонецЕсли;
	УведомлениеОСпецрежимахНалогообложения.ПроверкаКодаНО(Титульная.КодНО, ТаблицаОшибок, "Титульная");
	
	Для Каждого Стр Из Данные.ДанныеМногостраничныхРазделов.СумИсчНалог Цикл 
		СумИсчНалог = Стр.Значение;
		УведомлениеОСпецрежимахНалогообложения.ПроверкаКПП(СумИсчНалог, ТаблицаОшибок, "СумИсчНалог", "КППДекл", ЭтоЮЛ);
		УведомлениеОСпецрежимахНалогообложения.ПроверкаОКТМО(СумИсчНалог, ТаблицаОшибок, "СумИсчНалог", "ОКТМО", Истина);
		УведомлениеОСпецрежимахНалогообложения.ПроверкаКБК(СумИсчНалог, ТаблицаОшибок, "СумИсчНалог", "КБК", Истина);
		Если Не ЗначениеЗаполнено(СумИсчНалог.Период) Тогда 
			ТаблицаОшибок.Добавить(Документы.УведомлениеОСпецрежимахНалогообложения.ПолучитьПустуюСтруктуруНавигацииПоОшибкам(
				"Не указан отчетный (налоговый) период", "СумИсчНалог", "Период", СумИсчНалог.УИД));
		КонецЕсли;
		Если Не ЗначениеЗаполнено(СумИсчНалог.НомерМесКварт) Тогда 
			ТаблицаОшибок.Добавить(Документы.УведомлениеОСпецрежимахНалогообложения.ПолучитьПустуюСтруктуруНавигацииПоОшибкам(
				"Не указан номер месяца (квартала)", "СумИсчНалог", "НомерМесКварт", СумИсчНалог.УИД));
		КонецЕсли;
		УведомлениеОСпецрежимахНалогообложения.ПроверкаГода(СумИсчНалог, ТаблицаОшибок, "СумИсчНалог", "Год", Истина);
	КонецЦикла;
	
	ПроверятьКС = Ложь И Не ЗначениеЗаполнено(ОбщегоНазначенияКлиентСервер.СвойствоСтруктуры(Данные, "ДокументОснование", Неопределено))
					И Не ОбщегоНазначенияКлиентСервер.СвойствоСтруктуры(Данные, "РазрешитьВыгружатьСОшибками", Ложь)
					И ТаблицаОшибок.Количество() = 0;
	Если ПроверятьКС Тогда
		КонтекстФормы = Новый Структура("УникальныйИдентификатор", ПоместитьВоВременноеХранилище(Неопределено, Новый УникальныйИдентификатор));
		ПроверкиКС = КонтрольныеСоотношенияИсчисленныеСуммыНалогов.ПроверитьКонтрольныеСоотношенияВОтчете(КонтекстФормы, Данные.Объект.Ссылка);
		Если ПроверкиКС.ЧислоОшибок > 0 Тогда 
			ТаблицаОшибок.Добавить(Документы.УведомлениеОСпецрежимахНалогообложения.ПолучитьПустуюСтруктуруНавигацииПоОшибкам(
				"При проверке контрольных соотношений произошли ошибки", "ПроверкаКС", ""));
		КонецЕсли;
	КонецЕсли;
	
	Возврат ТаблицаОшибок;
КонецФункции

Функция ОсновныеСведенияЭлектронногоПредставления_Форма2022_1(Объект, УникальныйИдентификатор)
	ОсновныеСведения = Документы.УведомлениеОСпецрежимахНалогообложения.НачальнаяИнициализацияОбщихРеквизитовВыгрузки(Объект);
	
	Данные = Объект.ДанныеУведомления.Получить();
	ИдентификаторФайла = ИдентификаторФайлаЭлектронногоПредставления_Форма2022_1(ОсновныеСведения);
	ОсновныеСведения.Вставить("ИдФайл", ИдентификаторФайла);
	
	Возврат ОсновныеСведения;
КонецФункции

Функция ЭлектронноеПредставление_Форма2022_1(Объект, УникальныйИдентификатор)
	СведенияЭлектронногоПредставления = УведомлениеОСпецрежимахНалогообложения.СведенияЭлектронногоПредставления();
	ДанныеУведомления = УведомлениеОСпецрежимахНалогообложения.ДанныеУведомленияДляВыгрузки(Объект);
	Ошибки = ПроверитьДокументСВыводомВТаблицу_Форма2022_1(ДанныеУведомления, УникальныйИдентификатор);
	УведомлениеОСпецрежимахНалогообложения.СообщитьОшибкиПриПроверкеВыгрузки(Объект, Ошибки, ДанныеУведомления);
	
	ОсновныеСведения = ОсновныеСведенияЭлектронногоПредставления_Форма2022_1(Объект, УникальныйИдентификатор);
	СтруктураВыгрузки = Документы.УведомлениеОСпецрежимахНалогообложения.ИзвлечьСтруктуруXMLУведомления(Объект.ИмяОтчета, "СхемаВыгрузкиФорма2022_1");
	УведомлениеОСпецрежимахНалогообложения.ТиповоеЗаполнениеДанными(ДанныеУведомления, ОсновныеСведения, СтруктураВыгрузки);
	УведомлениеОСпецрежимахНалогообложения.ВыгрузитьДеревоВТаблицу(СтруктураВыгрузки, ОсновныеСведения, СведенияЭлектронногоПредставления);
	Возврат СведенияЭлектронногоПредставления;
КонецФункции

Функция ЭлектронноеПредставление_Форма2023_1(Объект, УникальныйИдентификатор)
	СведенияЭлектронногоПредставления = УведомлениеОСпецрежимахНалогообложения.СведенияЭлектронногоПредставления();
	ДанныеУведомления = УведомлениеОСпецрежимахНалогообложения.ДанныеУведомленияДляВыгрузки(Объект);
	Ошибки = ПроверитьДокументСВыводомВТаблицу_Форма2023_1(ДанныеУведомления, УникальныйИдентификатор);
	УведомлениеОСпецрежимахНалогообложения.СообщитьОшибкиПриПроверкеВыгрузки(Объект, Ошибки, ДанныеУведомления);
	
	ОсновныеСведения = ОсновныеСведенияЭлектронногоПредставления_Форма2022_1(Объект, УникальныйИдентификатор);
	СтруктураВыгрузки = Документы.УведомлениеОСпецрежимахНалогообложения.ИзвлечьСтруктуруXMLУведомления(Объект.ИмяОтчета, "СхемаВыгрузкиФорма2023_1");
	УведомлениеОСпецрежимахНалогообложения.ТиповоеЗаполнениеДанными(ДанныеУведомления, ОсновныеСведения, СтруктураВыгрузки);
	УведомлениеОСпецрежимахНалогообложения.ВыгрузитьДеревоВТаблицу(СтруктураВыгрузки, ОсновныеСведения, СведенияЭлектронногоПредставления);
	Возврат СведенияЭлектронногоПредставления;
КонецФункции

Функция СформироватьСписокЛистовФорма2022_1(Объект) Экспорт
	Листы = Новый СписокЗначений;
	
	ПечатнаяФорма = УведомлениеОСпецрежимахНалогообложения.НовыйПустойЛист();
	СтруктураПараметров = Объект.Ссылка.ДанныеУведомления.Получить();
	ИННКПП = Новый Структура();
	ИННКПП.Вставить("ИНН", СтруктураПараметров.ДанныеУведомления.Титульная.ИНН);
	ИННКПП.Вставить("КПП", СтруктураПараметров.ДанныеУведомления.Титульная.КПП);
	ИННКПП.Вставить("НаимОргПред", СтруктураПараметров.ДанныеУведомления.Титульная.НаимОргПред);
	ИННКПП.Вставить("НаимДок", СтруктураПараметров.ДанныеУведомления.Титульная.НаимДок);
	ИННКПП.Вставить("КодНО", СтруктураПараметров.ДанныеУведомления.Титульная.КодНО);
	ИННКПП.Вставить("ПРИЗНАК_НП_ПОДВАЛ", СтруктураПараметров.ДанныеУведомления.Титульная.ПРИЗНАК_НП_ПОДВАЛ);
	ИННКПП.Вставить("НомСтр", 0);
	УведомлениеОСпецрежимахНалогообложения.ДополнитьСтруктуруПодписантами(Объект, ИННКПП);
	
	ЕстьЗаполненныеЛисты = Ложь;
	Для Каждого Стр Из СтруктураПараметров.ДанныеМногостраничныхРазделов.СумИсчНалог Цикл 
		СумИсчНалог = Стр.Значение;
		Если Не УведомлениеОСпецрежимахНалогообложения.СтраницаЗаполнена(СумИсчНалог) Тогда 
			Продолжить;
		КонецЕсли;
		ЕстьЗаполненныеЛисты = Истина;
		
		УведомлениеОСпецрежимахНалогообложения.РазбитьДатуДляПечатиВПрямоугольники(СумИсчНалог, "СрокУпл");
		СумИсчНалог.Вставить("НомСтр000", Формат((ИННКПП.НомСтр + 1), "ЧЦ=3; ЧВН="));
		УведомлениеОСпецрежимахНалогообложения.НапечататьДанные(Объект.ИмяОтчета,
			СумИсчНалог, "Печать_Форма2022_1_Титульная", ПечатнаяФорма, ИННКПП);
		УведомлениеОСпецрежимахНалогообложения.ПоложитьПФВСписокЛистов(Объект, Листы, ПечатнаяФорма, ИННКПП.НомСтр, Ложь);
	КонецЦикла;
	
	Если Не ЕстьЗаполненныеЛисты Тогда
		УведомлениеОСпецрежимахНалогообложения.НапечататьДанные(Объект.ИмяОтчета,
			СтруктураПараметров.ДанныеУведомления.Титульная, "Печать_Форма2022_1_Титульная", ПечатнаяФорма, ИННКПП);
		УведомлениеОСпецрежимахНалогообложения.ПоложитьПФВСписокЛистов(Объект, Листы, ПечатнаяФорма, ИННКПП.НомСтр, Ложь);
	КонецЕсли;
	Возврат Листы;
КонецФункции

Функция СформироватьСписокЛистовФорма2023_1(Объект) Экспорт
	СписокИспользуемыхМакетов = УведомлениеОСпецрежимахНалогообложения.ЗагрузитьМакетыИзАрхива(Объект, "БланкиПечати_");
	Листы = Новый СписокЗначений;
	
	ПечатнаяФорма = УведомлениеОСпецрежимахНалогообложения.НовыйПустойЛист();
	СтруктураПараметров = Объект.Ссылка.ДанныеУведомления.Получить();
	ИННКПП = Новый Структура();
	ИННКПП.Вставить("ИНН", СтруктураПараметров.ДанныеУведомления.Титульная.ИНН);
	ИННКПП.Вставить("КПП", СтруктураПараметров.ДанныеУведомления.Титульная.КПП);
	ИННКПП.Вставить("ТекстовоеПредставлениеДатыПодписи", Формат(СтруктураПараметров.ДанныеУведомления.Титульная.ДАТА_ПОДПИСИ, "ДЛФ=DD; ДП="));
	
	НомСтр = 0;
	УведомлениеОСпецрежимахНалогообложения.НапечататьСтруктуру(Объект.ИмяОтчета, СтруктураПараметров.ДанныеУведомления["Титульная"], НомСтр,
		УведомлениеОСпецрежимахНалогообложения.ПустойМакетИзСписка(Объект, СписокИспользуемыхМакетов, "Печать_Форма2023_1_Титульная"), ПечатнаяФорма, ИННКПП);
	УведомлениеОСпецрежимахНалогообложения.ВывестиСтрокуНаПечать(Объект.ПодписантФамилия, "ПодпФ", ПечатнаяФорма.Области, "-");
	УведомлениеОСпецрежимахНалогообложения.ВывестиСтрокуНаПечать(Объект.ПодписантИмя, "ПодпИ", ПечатнаяФорма.Области, "-");
	УведомлениеОСпецрежимахНалогообложения.ВывестиСтрокуНаПечать(Объект.ПодписантОтчество, "ПодпО", ПечатнаяФорма.Области, "-");
	УведомлениеОСпецрежимахНалогообложения.ПоложитьПФВСписокЛистов(Объект, Листы, ПечатнаяФорма, НомСтр, Ложь);
	
	УведомлениеОСпецрежимахНалогообложения.ТиповаяПечатьНесколькихСтраницНаОдинБланк(
		Объект, Листы, СтруктураПараметров, "СумИсчНалог", 4, "Печать_Форма2023_1_СумИсчНалог", НомСтр, ИННКПП);
	Возврат Листы;
КонецФункции

#Область СозданиеЗаполненногоУведомления

Процедура ОбновитьСтатусСданного(ДокОбъект)
	Попытка
		ВыборкаЖОКО = РегистрыСведений.ЖурналОтправокВКонтролирующиеОрганы.Выбрать(Новый Структура("Ссылка", ДокОбъект.Ссылка));
		Если ВыборкаЖОКО.Следующий() Тогда
			Если НРег(ВыборкаЖОКО.СтатусОтправки) = "сдано" Тогда 
				СтатусОтправки = Неопределено;
				СостояниеСдачиОтчетности = Неопределено;
				ЭлектронныйДокументооборотСКонтролирующимиОрганами.ОпределитьСтатусИСостояниеСдачиОтчетности(
					ДокОбъект.Ссылка, ДокОбъект.Организация, Перечисления.ТипыКонтролирующихОрганов.ФНС, СостояниеСдачиОтчетности, СтатусОтправки);
				СтатусОтправкиВЖурнале = УведомлениеОСпецрежимахНалогообложения.СохраненныйСтатусОтправкиУведомления(ДокОбъект);
				
				Если (СтрНайти(СтатусОтправки, СтатусОтправкиВЖурнале) = 1)
					И (СостояниеСдачиОтчетности = Перечисления.СостояниеСдачиОтчетности.ПоложительныйРезультатДокументооборота) Тогда 
					ТекущееСостояние = РегламентированнаяОтчетность.ТекущееСостояниеОтправки(ДокОбъект.Ссылка, Перечисления.ТипыКонтролирующихОрганов.ФНС);
					ЦиклОбмена = ДокументооборотСКОВызовСервера.ПолучитьПоследнийЦиклОбмена(ДокОбъект.Ссылка);
					Если ТекущееСостояние <> Неопределено И ЗначениеЗаполнено(ЦиклОбмена) Тогда
						ЗаписьЖОКО = ВыборкаЖОКО.ПолучитьМенеджерЗаписи();
						ЗаписьЖОКО.СтатусОтправки = НСтр("ru = 'Сдан, модифицирован'");
						ЗаписьЖОКО.Записать();
					КонецЕсли;
				КонецЕсли;
			КонецЕсли;
		КонецЕсли;
	Исключение
		ЗаписьЖурналаРегистрации("РегламентированноеУведомлениеИсчисленныеСуммыНалогов.ОбновитьСтатусСданного", УровеньЖурналаРегистрации.Предупреждение,, ДокОбъект.Ссылка);
	КонецПопытки;
КонецПроцедуры

Функция СформироватьНовоеУведомление_2022_1(Данные) Экспорт 
	
	Попытка
		
		Если Данные.Свойство("СсылкаНаДокумент")
			И ТипЗнч(Данные.СсылкаНаДокумент) = Тип("ДокументСсылка.УведомлениеОСпецрежимахНалогообложения") Тогда
			
			ДокОбъект = Данные.СсылкаНаДокумент.ПолучитьОбъект();
			ОбновитьСтатусСданного(ДокОбъект);
		Иначе
			ДокОбъект = Документы.УведомлениеОСпецрежимахНалогообложения.СоздатьДокумент();
		КонецЕсли;
		ДокументОснование = Неопределено;
		Если Данные.Свойство("ДокументОснование") Тогда
			ДокументОснование = Данные.ДокументОснование;
		КонецЕсли;
		
		ДокОбъект.ВидУведомления = Перечисления.ВидыУведомленийОСпецрежимахНалогообложения.ИсчисленныеСуммыНалогов;
		Данные.Свойство("Организация", ДокОбъект.Организация);
		ДокОбъект.ИмяФормы = "Форма2022_1";
		ДокОбъект.ИмяОтчета = "РегламентированноеУведомлениеИсчисленныеСуммыНалогов";
		ДокОбъект.ДатаПодписи = ТекущаяДатаСеанса();
		ДокОбъект.Дата = ТекущаяДатаСеанса();
		
		Если ЗначениеЗаполнено(ДокументОснование) Тогда
			ДокОбъект.ДатаПодписи    = Данные.ДатаОснования;
			ДокОбъект.Дата           = Данные.ДатаОснования;
			ДокОбъект.Комментарий    = Данные.КомментарийОснования;
		КонецЕсли;
		
		Данные.Свойство("Организация",       ДокОбъект.Организация);
		Данные.Свойство("ПодписантИмя",      ДокОбъект.ПодписантИмя);
		Данные.Свойство("ПодписантФамилия",  ДокОбъект.ПодписантФамилия);
		Данные.Свойство("ПодписантОтчество", ДокОбъект.ПодписантОтчество);
		Данные.Свойство("РегистрацияВИФНС",  ДокОбъект.РегистрацияВИФНС);
		
		СтруктураПараметров = Новый Структура;
		
		ДанныеУведомления = Новый Структура;
		ДанныеМногостраничныхРазделов = Новый Структура;
		ИдентификаторыОбычныхСтраниц = Новый Структура;
		
		СтруктураПараметров.Вставить("ДеревоСтраниц", СформироватьДеревоСтраницПоДанным_2022_1(Данные));
		ПараметрыИнициализацииФормы = Новый Структура;
		ПараметрыИнициализацииФормы.Вставить("ДанныеУведомления");
		ПараметрыИнициализацииФормы.Вставить("ДанныеМногостраничныхРазделов");
		ПараметрыИнициализацииФормы.Вставить("ДанныеДопСтрок");
		ПараметрыИнициализацииФормы.Вставить("ДанныеДопСтрокСтраницы");
		ПараметрыИнициализацииФормы.Вставить("ИдентификаторыОбычныхСтраниц");
		ПараметрыИнициализацииФормы.Вставить("ИмяФормы", "Отчет.РегламентированноеУведомлениеИсчисленныеСуммыНалогов.Форма.Форма2022_1");
		ПараметрыИнициализацииФормы.Вставить("ДеревоСтраниц", СтруктураПараметров.ДеревоСтраниц);
		
		ПараметрыИнициализацииФормы.Вставить("Объект", Новый Структура("ИмяОтчета, ИмяФормы", "РегламентированноеУведомлениеИсчисленныеСуммыНалогов", "Форма2022_1"));
		ПараметрыИнициализацииФормы.Вставить("ИмяМакетаАрхиваТабличныхДокументов", "");
		УведомлениеОСпецрежимахНалогообложения.СформироватьСтруктуруДанныхУведомленияНовогоОбразца(ПараметрыИнициализацииФормы);
		
		Пока ПараметрыИнициализацииФормы.ДанныеМногостраничныхРазделов["СумИсчНалог"].Количество() < Данные.СумИсчНалог.Количество() Цикл 
			СтруктураСтраницы = ОбщегоНазначенияКлиентСервер.СкопироватьСтруктуру(ПараметрыИнициализацииФормы.ДанныеМногостраничныхРазделов["СумИсчНалог"][0].Значение);
			ПараметрыИнициализацииФормы.ДанныеМногостраничныхРазделов["СумИсчНалог"].Добавить(СтруктураСтраницы);
		КонецЦикла;
		Для Инд = 0 По Данные.СумИсчНалог.Количество() - 1 Цикл 
			СумИсчНалог = Данные.СумИсчНалог[Инд];
			ЗаполнитьЗначенияСвойств(ПараметрыИнициализацииФормы.ДанныеМногостраничныхРазделов["СумИсчНалог"][Инд].Значение, СумИсчНалог);
			ПараметрыИнициализацииФормы.ДанныеМногостраничныхРазделов["СумИсчНалог"][Инд].Значение.УИД = СтруктураПараметров.ДеревоСтраниц.Строки[1].Строки[Инд].УИД;
		КонецЦикла;
		
		ЗаполнитьЗначенияСвойств(ПараметрыИнициализацииФормы.ДанныеУведомления["Титульная"], Данные.Титульная);
		
		СтруктураПараметров.Вставить("ДанныеМногостраничныхРазделов", ПараметрыИнициализацииФормы.ДанныеМногостраничныхРазделов);
		СтруктураПараметров.Вставить("ДанныеУведомления", ПараметрыИнициализацииФормы.ДанныеУведомления);
		СтруктураПараметров.Вставить("ИдентификаторыОбычныхСтраниц", ПараметрыИнициализацииФормы.ИдентификаторыОбычныхСтраниц);
		СтруктураПараметров.Вставить("ДанныеДопСтрокБД", Новый Структура);
		СтруктураПараметров.Вставить("РазрешитьВыгружатьСОшибками", Ложь);
		СтруктураПараметров.Вставить("ДокументОснование", ДокументОснование);
		
		ДокОбъект.ДанныеУведомления = Новый ХранилищеЗначения(СтруктураПараметров);
		
		ДокОбъект.Записать();
		Возврат ДокОбъект.Ссылка;
	Исключение
	КонецПопытки;
	
КонецФункции

Функция СформироватьДеревоСтраницПоДанным_2022_1(Данные) Экспорт 
	ДеревоСтраниц = УведомлениеОСпецрежимахНалогообложения.ПустоеДеревоСтраницУведомления();
	
	Стр001 = ДеревоСтраниц.Строки.Добавить();
	Стр001.Наименование = "Титульная страница";
	Стр001.ИндексКартинки = 1;
	Стр001.ИмяМакета = "Титульная_2022";
	Стр001.Многостраничность = Ложь;
	Стр001.Многострочность = Ложь;
	Стр001.УИД = Новый УникальныйИдентификатор;
	Стр001.ИДНаименования = "Титульная";
	Стр001.МакетыПФ = "Печать_Форма2022_1_Титульная";
	
	Стр002 = ДеревоСтраниц.Строки.Добавить();
	Стр002.Наименование = "Сведения о" + Символы.ПС + "суммах налогов";
	Стр002.ИндексКартинки = 1;
	Стр002.Многостраничность = Истина;
	Стр002.Многострочность = Истина;
	
	Для Инд = 1 По Макс(Данные.СумИсчНалог.Количество(), 1) Цикл 
		СтрРег = Стр002.Строки.Добавить();
		СтрРег.Наименование = "Стр. " + Инд;
		СтрРег.ИндексКартинки = 1;
		СтрРег.ИмяМакета = "СумИсчНалог_2022";
		СтрРег.Многостраничность = Истина;
		СтрРег.Многострочность = Ложь;
		СтрРег.УИД = Новый УникальныйИдентификатор;
		СтрРег.ИДНаименования = "СумИсчНалог";
	КонецЦикла;
	
	Возврат ДеревоСтраниц;
КонецФункции

Функция СформироватьНовоеУведомление_2023_1(Данные) Экспорт 
	
	Попытка
		
		Если Данные.Свойство("СсылкаНаДокумент")
			И ТипЗнч(Данные.СсылкаНаДокумент) = Тип("ДокументСсылка.УведомлениеОСпецрежимахНалогообложения") Тогда
			
			ДокОбъект = Данные.СсылкаНаДокумент.ПолучитьОбъект();
			ОбновитьСтатусСданного(ДокОбъект);
		Иначе
			ДокОбъект = Документы.УведомлениеОСпецрежимахНалогообложения.СоздатьДокумент();
		КонецЕсли;
		ДокументОснование = Неопределено;
		Если Данные.Свойство("ДокументОснование") Тогда
			ДокументОснование = Данные.ДокументОснование;
		КонецЕсли;
		
		ДокОбъект.ВидУведомления = Перечисления.ВидыУведомленийОСпецрежимахНалогообложения.ИсчисленныеСуммыНалогов;
		Данные.Свойство("Организация",          ДокОбъект.Организация);
		Данные.Свойство("ПодписантИмя",         ДокОбъект.ПодписантИмя);
		Данные.Свойство("ПодписантФамилия",     ДокОбъект.ПодписантФамилия);
		Данные.Свойство("ПодписантОтчество",    ДокОбъект.ПодписантОтчество);
		Данные.Свойство("РегистрацияВИФНС",     ДокОбъект.РегистрацияВИФНС);
		Данные.Свойство("КомментарийОснования", ДокОбъект.Комментарий);
		ДокОбъект.ИмяФормы = "Форма2023_1";
		ДокОбъект.ИмяОтчета = "РегламентированноеУведомлениеИсчисленныеСуммыНалогов";
		ДокОбъект.ДатаПодписи = ТекущаяДатаСеанса();
		ДокОбъект.Дата = ТекущаяДатаСеанса();
		
		Если ЗначениеЗаполнено(ДокументОснование) Тогда
			ДокОбъект.ДатаПодписи    = Данные.ДатаОснования;
			ДокОбъект.Дата           = Данные.ДатаОснования;
			ДокОбъект.Комментарий    = Данные.КомментарийОснования;
		КонецЕсли;
		
		СтруктураПараметров = Новый Структура;
		
		ДанныеУведомления = Новый Структура;
		ДанныеМногостраничныхРазделов = Новый Структура;
		ИдентификаторыОбычныхСтраниц = Новый Структура;
		
		СтруктураПараметров.Вставить("ДеревоСтраниц", СформироватьДеревоСтраницПоДанным_2023_1(Данные));
		ПараметрыИнициализацииФормы = Новый Структура;
		ПараметрыИнициализацииФормы.Вставить("ДанныеУведомления");
		ПараметрыИнициализацииФормы.Вставить("ДанныеМногостраничныхРазделов");
		ПараметрыИнициализацииФормы.Вставить("ДанныеДопСтрок");
		ПараметрыИнициализацииФормы.Вставить("ДанныеДопСтрокСтраницы");
		ПараметрыИнициализацииФормы.Вставить("ИдентификаторыОбычныхСтраниц");
		ПараметрыИнициализацииФормы.Вставить("ИмяФормы", "Отчет.РегламентированноеУведомлениеИсчисленныеСуммыНалогов.Форма.Форма2023_1");
		ПараметрыИнициализацииФормы.Вставить("ДеревоСтраниц", СтруктураПараметров.ДеревоСтраниц);
		
		ПараметрыИнициализацииФормы.Вставить("Объект", Новый Структура("ИмяОтчета, ИмяФормы",
			"РегламентированноеУведомлениеИсчисленныеСуммыНалогов", "Форма2023_1"));
		ПараметрыИнициализацииФормы.Вставить("ИмяМакетаАрхиваТабличныхДокументов", "");
		УведомлениеОСпецрежимахНалогообложения.СформироватьСтруктуруДанныхУведомленияНовогоОбразца(ПараметрыИнициализацииФормы);
		
		Пока ПараметрыИнициализацииФормы.ДанныеМногостраничныхРазделов["СумИсчНалог"].Количество() < Данные.СумИсчНалог.Количество() Цикл 
			СтруктураСтраницы = ОбщегоНазначенияКлиентСервер.СкопироватьСтруктуру(
				ПараметрыИнициализацииФормы.ДанныеМногостраничныхРазделов["СумИсчНалог"][0].Значение);
			ПараметрыИнициализацииФормы.ДанныеМногостраничныхРазделов["СумИсчНалог"].Добавить(СтруктураСтраницы);
		КонецЦикла;
		Для Инд = 0 По Данные.СумИсчНалог.Количество() - 1 Цикл 
			СумИсчНалог = Данные.СумИсчНалог[Инд];
			ЗаполнитьЗначенияСвойств(ПараметрыИнициализацииФормы.ДанныеМногостраничныхРазделов["СумИсчНалог"][Инд].Значение, СумИсчНалог);
			ПараметрыИнициализацииФормы.ДанныеМногостраничныхРазделов["СумИсчНалог"][Инд].Значение.УИД 
				= СтруктураПараметров.ДеревоСтраниц.Строки[1].Строки[Инд].УИД;
		КонецЦикла;
		
		ЗаполнитьЗначенияСвойств(ПараметрыИнициализацииФормы.ДанныеУведомления["Титульная"], Данные.Титульная);
		
		СтруктураПараметров.Вставить("ДанныеМногостраничныхРазделов", ПараметрыИнициализацииФормы.ДанныеМногостраничныхРазделов);
		СтруктураПараметров.Вставить("ДанныеУведомления", ПараметрыИнициализацииФормы.ДанныеУведомления);
		СтруктураПараметров.Вставить("ИдентификаторыОбычныхСтраниц", ПараметрыИнициализацииФормы.ИдентификаторыОбычныхСтраниц);
		СтруктураПараметров.Вставить("ДанныеДопСтрокБД", Новый Структура);
		СтруктураПараметров.Вставить("РазрешитьВыгружатьСОшибками", 
			Данные.Свойство("РазрешитьВыгружатьСОшибками") И Данные.РазрешитьВыгружатьСОшибками = Истина);
		СтруктураПараметров.Вставить("ДокументОснование", ДокументОснование);
		
		ДокОбъект.ДанныеУведомления = Новый ХранилищеЗначения(СтруктураПараметров);
		ДокОбъект.Основание = ДокументОснование;
		ДокОбъект.Записать();
		Возврат ДокОбъект.Ссылка;
	Исключение
	КонецПопытки;
	
КонецФункции

Функция СформироватьДеревоСтраницПоДанным_2023_1(Данные) Экспорт 
	ДеревоСтраниц = УведомлениеОСпецрежимахНалогообложения.ПустоеДеревоСтраницУведомления();
	
	Стр001 = ДеревоСтраниц.Строки.Добавить();
	Стр001.Наименование = "Титульная страница";
	Стр001.ИндексКартинки = 1;
	Стр001.ИмяМакета = "Титульная_2023";
	Стр001.Многостраничность = Ложь;
	Стр001.Многострочность = Ложь;
	Стр001.УИД = Новый УникальныйИдентификатор;
	Стр001.ИДНаименования = "Титульная";
	Стр001.МакетыПФ = "Печать_Форма2023_1_Титульная";
	
	Стр002 = ДеревоСтраниц.Строки.Добавить();
	Стр002.Наименование = "Сведения о" + Символы.ПС + "суммах налогов";
	Стр002.ИндексКартинки = 1;
	Стр002.Многостраничность = Истина;
	Стр002.Многострочность = Истина;
	
	Для Инд = 1 По Макс(Данные.СумИсчНалог.Количество(), 1) Цикл 
		СтрРег = Стр002.Строки.Добавить();
		СтрРег.Наименование = "Стр. " + Инд;
		СтрРег.ИндексКартинки = 1;
		СтрРег.ИмяМакета = "СумИсчНалог_2023";
		СтрРег.Многостраничность = Истина;
		СтрРег.Многострочность = Ложь;
		СтрРег.УИД = Новый УникальныйИдентификатор;
		СтрРег.ИДНаименования = "СумИсчНалог";
		СтрРег.МакетыПФ = "Печать_Форма2023_1_СумИсчНалог";
	КонецЦикла;
	
	Возврат ДеревоСтраниц;
КонецФункции

#КонецОбласти

#Область Загрузка
Функция ПустаяТаблицаДанных(ИмяФормы) Экспорт
	Если ИмяФормы = "Форма2023_1" Тогда 
		Возврат ПустаяТаблицаДанных_Форма2023_1();
	КонецЕсли;
КонецФункции

Функция ПустаяТаблицаДанных_Форма2023_1()
	Результат = Новый ТаблицаЗначений;
	Результат.Колонки.Добавить("КППДекл", ОбщегоНазначения.ОписаниеТипаСтрока(9));
	Результат.Колонки.Добавить("ОКТМО", ОбщегоНазначения.ОписаниеТипаСтрока(11));
	Результат.Колонки.Добавить("КБК", ОбщегоНазначения.ОписаниеТипаСтрока(20));
	Результат.Колонки.Добавить("Период", ОбщегоНазначения.ОписаниеТипаСтрока(2));
	Результат.Колонки.Добавить("НомерМесКварт", ОбщегоНазначения.ОписаниеТипаСтрока(2));
	Результат.Колонки.Добавить("Год", ОбщегоНазначения.ОписаниеТипаСтрока(4));
	Результат.Колонки.Добавить("СумНалогАванс", ОбщегоНазначения.ОписаниеТипаЧисло(17, 2));
	Возврат Результат;
КонецФункции

Процедура КонсолидироватьВФоне(КонтекстЗаполнения, АдресХранилища) Экспорт
	Если КонтекстЗаполнения.ИмяФормы = "Форма2023_1" Тогда 
		КонсолидироватьВФоне_Форма2023_1(КонтекстЗаполнения, АдресХранилища)
	КонецЕсли;
КонецПроцедуры

Процедура КонсолидироватьВФоне_Форма2023_1(КонтекстЗаполнения, АдресХранилища) Экспорт
	Результат = ПустаяТаблицаДанных(КонтекстЗаполнения.ИмяФормы);
	Для Каждого Стр Из КонтекстЗаполнения.ФайлыВыгрузки Цикл 
		СтрокаДокумент = УведомлениеОСпецрежимахНалогообложения.НайтиУзелВДеревеПоПути(Стр.ДеревоЗагрузки, "Файл/Документ", "ИмяЭлемента");
		Если СтрокаДокумент = Неопределено Тогда 
			Продолжить;
		КонецЕсли;
		СтрокиДанных = СтрокаДокумент.Строки.НайтиСтроки(Новый Структура("ИмяЭлемента", "УвИсчСумНалог"));
		Для Каждого СтрокаДанных Из СтрокиДанных Цикл 
			НовСтр = Результат.Добавить();
			Для Каждого КолонкаСтроки Из СтрокаДанных.Строки Цикл 
				Если ТипЗнч(Результат.Колонки.Найти(КолонкаСтроки.ИмяЭлемента)) = Тип("КолонкаТаблицыЗначений") Тогда 
					Если ТипЗнч(НовСтр[КолонкаСтроки.ИмяЭлемента]) = Тип("Число") Тогда 
						НовСтр[КолонкаСтроки.ИмяЭлемента] = КонтекстЗаполнения.ОТЧ.ПривестиЗначение(КолонкаСтроки.ЗначениеЭлемента);
					ИначеЕсли ТипЗнч(НовСтр[КолонкаСтроки.ИмяЭлемента]) = Тип("Дата") Тогда 
						НовСтр[КолонкаСтроки.ИмяЭлемента] = РегламентированнаяОтчетностьЗагрузка.ДатаИзСтрокиЛюбогоФормата(КолонкаСтроки.ЗначениеЭлемента);
					Иначе
						НовСтр[КолонкаСтроки.ИмяЭлемента] = КолонкаСтроки.ЗначениеЭлемента;
					КонецЕсли;
				КонецЕсли;
			КонецЦикла;
		КонецЦикла;
	КонецЦикла;
	
	Результат.Свернуть("КППДекл,ОКТМО,КБК,Период,НомерМесКварт,Год", "СумНалогАванс");
	КонтекстЗаполнения.Вставить("Результат", Результат);
	КонтекстЗаполнения.Удалить("ФайлыВыгрузки");
	ПоместитьВоВременноеХранилище(КонтекстЗаполнения, АдресХранилища);
КонецПроцедуры

#КонецОбласти

#Область КонвертацияИзРегОтчета

Процедура КонвертацияИзРегламентированногоОтчета(ВыборкаСтрока) Экспорт
	Попытка
		Если ВыборкаСтрока.ВыбраннаяФорма = "ФормаОтчета2023Кв1" Тогда
			КонвертироватьНаСервере_2023(ВыборкаСтрока.Ссылка);
		КонецЕсли;
	Исключение
	КонецПопытки;
КонецПроцедуры

Процедура КонвертироватьНаСервере_2023(РегОтчет)
	Попытка
		РО = ОбщегоНазначения.ЗначенияРеквизитовОбъекта(РегОтчет, "КодНалоговогоОргана,ДанныеОтчета,ДатаПодписи,Организация,Дата");
		ДанныеОтчета = РО.ДанныеОтчета.Получить();
		
		Уведомление = Документы.УведомлениеОСпецрежимахНалогообложения.СоздатьДокумент();
		Уведомление.ВидУведомления = Перечисления.ВидыУведомленийОСпецрежимахНалогообложения.ИсчисленныеСуммыНалогов;
		Уведомление.Организация = РО.Организация;
		Уведомление.ИмяОтчета = "РегламентированноеУведомлениеИсчисленныеСуммыНалогов";
		Уведомление.ИмяФормы = "Форма2023_1";
		Уведомление.ПодписантФамилия = ДанныеОтчета.ПоказателиОтчета.ПолеТабличногоДокументаТитульный.ПодпФ;
		Уведомление.ПодписантИмя = ДанныеОтчета.ПоказателиОтчета.ПолеТабличногоДокументаТитульный.ПодпИ;
		Уведомление.ПодписантОтчество = ДанныеОтчета.ПоказателиОтчета.ПолеТабличногоДокументаТитульный.ПодпО;
		Уведомление.ДатаПодписи = РО.Дата;
		Уведомление.Дата = ТекущаяДатаСеанса();
		
		ДанныеУведомления = Новый Структура;
		Титульный = Новый Структура("УИД", Новый УникальныйИдентификатор);
		Для Каждого КЗ Из ДанныеОтчета.ПоказателиОтчета.ПолеТабличногоДокументаТитульный Цикл 
			Титульный.Вставить(КЗ.Ключ, КЗ.Значение);
		КонецЦикла;
		Титульный.Вставить("ФИО_РУКОВОДИТЕЛЯ_ПРЕДСТАВИТЕЛЯ", СокрЛП(Титульный.ПодпФ + " " + Титульный.ПодпИ + " " + Титульный.ПодпО));
		ДанныеУведомления.Вставить("Титульная", Титульный);
		
		ДеревоСтраниц = СформироватьДеревоСтраницПоДанным_2023_1(ДанныеОтчета.ДанныеМногостраничныхРазделов);
		ДеревоСтраниц.Строки[0].УИД = Титульный["УИД"];
		
		ДанныеМногостраничныхРазделов = Новый Структура("СумИсчНалог", Новый СписокЗначений);
		Для Инд = 1 По ДанныеОтчета.ДанныеМногостраничныхРазделов.СумИсчНалог.Количество() Цикл 
			СумИсчНалог = Новый Структура("УИД", ДеревоСтраниц.Строки[1].Строки[Инд - 1].УИД);
			Для Каждого КЗ Из ДанныеОтчета.ДанныеМногостраничныхРазделов.СумИсчНалог[Инд - 1].Данные Цикл 
				СумИсчНалог.Вставить(КЗ.Ключ, КЗ.Значение);
			КонецЦикла;
			ДанныеМногостраничныхРазделов["СумИсчНалог"].Добавить(СумИсчНалог);
		КонецЦикла;
		
		Уведомление.РегистрацияВИФНС = УведомлениеОСпецрежимахНалогообложенияПовтИсп.ПолучитьРегистрациюВИФНСПоКоду(Титульный.КодНО, РО.Организация);
		СтруктураПараметров = Новый Структура;
		СтруктураПараметров.Вставить("ДеревоСтраниц", ДеревоСтраниц);
		СтруктураПараметров.Вставить("ДанныеУведомления", ДанныеУведомления);
		СтруктураПараметров.Вставить("ДанныеМногостраничныхРазделов", ДанныеМногостраничныхРазделов);
		СтруктураПараметров.Вставить("РазрешитьВыгружатьСОшибками", Ложь);
		СтруктураПараметров.Вставить("ИдентификаторыОбычныхСтраниц", Новый Структура("Титульная", Титульный["УИД"]));
		Уведомление.ДанныеУведомления = Новый ХранилищеЗначения(СтруктураПараметров);
		ОбновлениеИнформационнойБазы.ЗаписатьОбъект(Уведомление);
		
		ЗаписьСоответствия = РегистрыСведений["СоответствиеРегОтчетовУведомлениям"].СоздатьМенеджерЗаписи();
		ЗаписьСоответствия.РегОтчет = РегОтчет.Ссылка;
		ЗаписьСоответствия.Прочитать();
		ЗаписьСоответствия.РегОтчет = РегОтчет.Ссылка;
		ЗаписьСоответствия.Уведомление = Уведомление.Ссылка;
		ЗаписьСоответствия.Записать(Истина);
	Исключение
	КонецПопытки;
КонецПроцедуры

#КонецОбласти

#КонецОбласти
#КонецЕсли
