#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	УстановитьНачальноеОтображениеЭлементовУправления();
	Если Параметры.Ключ.Пустая() Тогда
		// Поле НДФЛ
		ОблагаетсяНДФЛ = Число(ЗначениеЗаполнено(Объект.КодДоходаНДФЛ));
		УстановитьДоступностьКодаДоходаНДФЛ(ЭтотОбъект);
		// Поле ВидНачисленияПоНУ
		ВключаетсяВРасходыПоСт255НКРФ = Число(ЗначениеЗаполнено(Объект.ВидНачисленияДляНУ));
		УстановитьДоступностьВидаНачисленияДляНУ(ЭтотОбъект);
		ЗаполнитьКатегорииДоходовНДФЛ();
		УстановитьСвойстваКатегорииДоходаНДФЛ(ЭтотОбъект);
	КонецЕсли;
	
	// СтандартныеПодсистемы.Свойства
	ДополнительныеПараметры = Новый Структура;
	ДополнительныеПараметры.Вставить("ИмяЭлементаДляРазмещения", "ГруппаДополнительныеРеквизиты");
	УправлениеСвойствами.ПриСозданииНаСервере(ЭтотОбъект, ДополнительныеПараметры);
	// Конец СтандартныеПодсистемы.Свойства
	
	УстановитьВидимостьВидДоходаСтраховыеВзносыИнфо(ЭтотОбъект);
	
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	
	// СтандартныеПодсистемы.Свойства
	УправлениеСвойствамиКлиент.ПослеЗагрузкиДополнительныхРеквизитов(ЭтотОбъект);
	// Конец СтандартныеПодсистемы.Свойства
	
КонецПроцедуры

&НаСервере
Процедура ПриЧтенииНаСервере(ТекущийОбъект)
	
	// СтандартныеПодсистемы.Свойства
	УправлениеСвойствами.ПриЧтенииНаСервере(ЭтотОбъект, ТекущийОбъект);
	// Конец СтандартныеПодсистемы.Свойства
	
	// Поле НДФЛ
	ОблагаетсяНДФЛ = Число(ЗначениеЗаполнено(ТекущийОбъект.КодДоходаНДФЛ));
	УстановитьДоступностьКодаДоходаНДФЛ(ЭтотОбъект);
	
	// Поле ВидНачисленияПоНУ
	ВключаетсяВРасходыПоСт255НКРФ = Число(ЗначениеЗаполнено(ТекущийОбъект.ВидНачисленияДляНУ));
	УстановитьДоступностьВидаНачисленияДляНУ(ЭтотОбъект);
	
	ЗаполнитьКатегорииДоходовНДФЛ();
	УстановитьСвойстваКатегорииДоходаНДФЛ(ЭтотОбъект);
	
КонецПроцедуры

&НаКлиенте
Процедура ПередЗаписью(Отказ, ПараметрыЗаписи)
	
	ОценкаПроизводительностиКлиент.ЗамерВремени("ЗаписьЭлементаПланаВидовРасчетаНачисления");
	
КонецПроцедуры

&НаСервере
Процедура ПередЗаписьюНаСервере(Отказ, ТекущийОбъект, ПараметрыЗаписи)
	
	// СтандартныеПодсистемы.Свойства
	УправлениеСвойствами.ПередЗаписьюНаСервере(ЭтотОбъект, ТекущийОбъект);
	// Конец СтандартныеПодсистемы.Свойства
	
КонецПроцедуры

&НаСервере
Процедура ПослеЗаписиНаСервере(ТекущийОбъект, ПараметрыЗаписи)
	ОбновитьПовторноИспользуемыеЗначения();
КонецПроцедуры

&НаКлиенте
Процедура ОбработкаОповещения(ИмяСобытия, Параметр, Источник)
	
	// СтандартныеПодсистемы.Свойства 
	Если УправлениеСвойствамиКлиент.ОбрабатыватьОповещения(ЭтотОбъект, ИмяСобытия, Параметр) Тогда
		ОбновитьЭлементыДополнительныхРеквизитов();
		УправлениеСвойствамиКлиент.ПослеЗагрузкиДополнительныхРеквизитов(ЭтотОбъект);
	КонецЕсли;
	// Конец СтандартныеПодсистемы.Свойства
	
	Если ИмяСобытия = "ИзмененыВидыДоходаСтраховыхВзносов" И Источник = ЭтотОбъект Тогда 
		ЗаполнитьЗначенияСвойств(Объект, Параметр);
		УстановитьВидимостьВидДоходаСтраховыеВзносыИнфо(ЭтотОбъект);
		
	КонецЕсли;
	
	Если ИмяСобытия = "ИзмененКодДоходаНДФЛ" И Источник = Объект.КодДоходаНДФЛ Тогда
		ЗаполнитьКатегорииДоходовНДФЛ();
		УстановитьСвойстваКатегорииДоходаНДФЛ(ЭтотОбъект);
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура ОбработкаПроверкиЗаполненияНаСервере(Отказ, ПроверяемыеРеквизиты)
	
	// СтандартныеПодсистемы.Свойства
	УправлениеСвойствами.ОбработкаПроверкиЗаполнения(ЭтотОбъект, Отказ, ПроверяемыеРеквизиты);
	// Конец СтандартныеПодсистемы.Свойства
	
	Если ОблагаетсяНДФЛ = 1 И Не ЗначениеЗаполнено(Объект.КодДоходаНДФЛ) Тогда
		ОбщегоНазначения.СообщитьПользователю(НСтр("ru = 'Код дохода НДФЛ не заполнен.'"), , , "Объект.КодДоходаНДФЛ" , Отказ);
	КонецЕсли;
	
	Если ОблагаетсяНДФЛ = 1 И Не ЗначениеЗаполнено(Объект.КатегорияДохода) Тогда
		ОбщегоНазначения.СообщитьПользователю(НСтр("ru = 'Категория дохода НДФЛ не заполнена.'"), , , "Объект.КатегорияДохода" , Отказ);
	КонецЕсли;
	
	Если ВключаетсяВРасходыПоСт255НКРФ = 1 И Не ЗначениеЗаполнено(Объект.ВидНачисленияДляНУ) Тогда
		ОбщегоНазначения.СообщитьПользователю(НСтр("ru = 'Вид расхода по ст. 255 НК РФ не заполнен.'"), , , "Объект.ВидНачисленияДляНУ" , Отказ);
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовШапкиФормы

&НаКлиенте
Процедура ВидНачисленияДляНУПриИзменении(Элемент)
	ОбновитьИнформационныеНадписи(ЭтотОбъект);
КонецПроцедуры

&НаКлиенте
Процедура ОблагаетсяНДФЛПриИзменении(Элемент)
	УстановитьДоступностьКодаДоходаНДФЛ(ЭтотОбъект);
	УстановитьСвойстваКатегорииДоходаНДФЛ(ЭтотОбъект);
КонецПроцедуры

&НаКлиенте
Процедура ВключаетсяВРасходыПоСт255НКРФПриИзменении(Элемент)
	УстановитьДоступностьВидаНачисленияДляНУ(ЭтотОбъект);
КонецПроцедуры

&НаКлиенте
Процедура КодДоходаСтраховыеВзносыПриИзменении(Элемент)
	
	Если Не Элементы.ВидДоходаСтраховыеВзносыИнфо.Видимость Тогда
		Объект.КодДоходаСтраховыеВзносы = Объект.КодДоходаСтраховыеВзносы2017;
	КонецЕсли;
	УстановитьВидимостьВидДоходаСтраховыеВзносыИнфо(ЭтотОбъект);
	
КонецПроцедуры

&НаКлиенте
Процедура КодДоходаНДФЛПриИзменении(Элемент)
	УстановитьСвойстваКатегорииДоходаНДФЛ(ЭтотОбъект);
	Объект.СтрокаРаздела2Расчета6НДФЛ = УчетНДФЛКлиентПовтИсп.СтрокаРаздела2Расчета6НДФЛПоКодуДохода(Объект.КодДоходаНДФЛ);
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы

// СтандартныеПодсистемы.Свойства
&НаКлиенте
Процедура Подключаемый_СвойстваВыполнитьКоманду(ЭлементИлиКоманда, НавигационнаяСсылка = Неопределено, СтандартнаяОбработка = Неопределено)
	УправлениеСвойствамиКлиент.ВыполнитьКоманду(ЭтотОбъект, ЭлементИлиКоманда, СтандартнаяОбработка);
КонецПроцедуры
// Конец СтандартныеПодсистемы.Свойства

&НаКлиенте
Процедура ИзменитьВидДоходаСтраховыхВзносов(Команда)
	ПараметрыФормы = Новый Структура("КодДоходаСтраховыеВзносы2017, КодДоходаСтраховыеВзносы, ПараметрыВыбора");
	ПараметрыФормы.КодДоходаСтраховыеВзносы2017 = Объект.КодДоходаСтраховыеВзносы2017;
	ПараметрыФормы.КодДоходаСтраховыеВзносы = Объект.КодДоходаСтраховыеВзносы;
	ПараметрыФормы.ПараметрыВыбора = ЭтотОбъект.Элементы.КодДоходаСтраховыеВзносы.ПараметрыВыбора;
	
	ОткрытьФорму("ПланВидовРасчета.Начисления.Форма.ВидДоходаСтраховыхВзносов", ПараметрыФормы, ЭтотОбъект,,,,, РежимОткрытияОкнаФормы.БлокироватьОкноВладельца);
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

// СтандартныеПодсистемы.Свойства 

&НаКлиенте
Процедура ОбновитьЗависимостиДополнительныхРеквизитов()
	УправлениеСвойствамиКлиент.ОбновитьЗависимостиДополнительныхРеквизитов(ЭтотОбъект);
КонецПроцедуры

&НаКлиенте
Процедура Подключаемый_ПриИзмененииДополнительногоРеквизита(Элемент)
	УправлениеСвойствамиКлиент.ОбновитьЗависимостиДополнительныхРеквизитов(ЭтотОбъект);
КонецПроцедуры

&НаСервере
Процедура ОбновитьЭлементыДополнительныхРеквизитов()
	УправлениеСвойствами.ОбновитьЭлементыДополнительныхРеквизитов(ЭтотОбъект, РеквизитФормыВЗначение("Объект"));
КонецПроцедуры

// Конец СтандартныеПодсистемы.Свойства

&НаКлиентеНаСервереБезКонтекста
Процедура ОбновитьИнформационныеНадписи(Форма)
	Форма.ПредставлениеВидаНачисленияПоНКРФ = ЗарплатаКадрыКлиентСервер.ПредставлениеВидаНачисленияПоНКРФ(Форма.Объект.ВидНачисленияДляНУ);
КонецПроцедуры

&НаСервере
Процедура УстановитьНачальноеОтображениеЭлементовУправления()
	
	Если Объект.КатегорияНачисленияИлиНеоплаченногоВремени = Перечисления.КатегорииНачисленийИНеоплаченногоВремени.РайонныйКоэффициент
		ИЛИ Объект.КатегорияНачисленияИлиНеоплаченногоВремени = Перечисления.КатегорииНачисленийИНеоплаченногоВремени.СевернаяНадбавка Тогда
		
		ОбщегоНазначенияКлиентСервер.УстановитьСвойствоЭлементаФормы(
			Элементы,
			"ВходитВБазуРКИСН",
			"Видимость",
			Ложь);
			
		ОбщегоНазначенияКлиентСервер.УстановитьСвойствоЭлементаФормы(
			Элементы,
			"ЯвляетсяДоходомВНатуральнойФорме",
			"Видимость",
			Ложь);	
			
	ИначеЕсли Объект.КатегорияНачисленияИлиНеоплаченногоВремени = Перечисления.КатегорииНачисленийИНеоплаченногоВремени.ПовременнаяОплатаТруда
		Или Объект.КатегорияНачисленияИлиНеоплаченногоВремени = Перечисления.КатегорииНачисленийИНеоплаченногоВремени.ОплатаОтпуска
		Или Объект.КатегорияНачисленияИлиНеоплаченногоВремени = Перечисления.КатегорииНачисленийИНеоплаченногоВремени.ОтпускПоБеременностиИРодам
		Или Объект.КатегорияНачисленияИлиНеоплаченногоВремени = Перечисления.КатегорииНачисленийИНеоплаченногоВремени.ОплатаБольничногоЛистаЗаСчетРаботодателя
		Или Объект.КатегорияНачисленияИлиНеоплаченногоВремени = Перечисления.КатегорииНачисленийИНеоплаченногоВремени.ОплатаБольничногоЛиста
		Или Объект.КатегорияНачисленияИлиНеоплаченногоВремени = Перечисления.КатегорииНачисленийИНеоплаченногоВремени.ОплатаБольничногоПрофзаболевание
		Или Объект.КатегорияНачисленияИлиНеоплаченногоВремени = Перечисления.КатегорииНачисленийИНеоплаченногоВремени.ОплатаБольничногоНесчастныйСлучайНаПроизводстве
		Или Объект.КатегорияНачисленияИлиНеоплаченногоВремени = Перечисления.КатегорииНачисленийИНеоплаченногоВремени.БолезньБезОплаты Тогда
		
		ОбщегоНазначенияКлиентСервер.УстановитьСвойствоЭлементаФормы(
			Элементы,
			"ВходитВБазуРКИСН",
			"ТолькоПросмотр",
			Истина);
		
		ОбщегоНазначенияКлиентСервер.УстановитьСвойствоЭлементаФормы(
			Элементы,
			"ЯвляетсяДоходомВНатуральнойФорме",
			"Видимость",
			Ложь);
		
	КонецЕсли;
		
	Если Объект.КатегорияНачисленияИлиНеоплаченногоВремени = Перечисления.КатегорииНачисленийИНеоплаченногоВремени.ОтпускПоБеременностиИРодам
		Или Объект.КатегорияНачисленияИлиНеоплаченногоВремени = Перечисления.КатегорииНачисленийИНеоплаченногоВремени.ОплатаБольничногоЛиста
		Или Объект.КатегорияНачисленияИлиНеоплаченногоВремени = Перечисления.КатегорииНачисленийИНеоплаченногоВремени.ОплатаБольничногоПрофзаболевание
		Или Объект.КатегорияНачисленияИлиНеоплаченногоВремени = Перечисления.КатегорииНачисленийИНеоплаченногоВремени.ОплатаБольничногоНесчастныйСлучайНаПроизводстве
		Или Объект.КатегорияНачисленияИлиНеоплаченногоВремени = Перечисления.КатегорииНачисленийИНеоплаченногоВремени.БолезньБезОплаты Тогда
		
		Элементы.ОтражениеВБухучетеСтраницы.ТекущаяСтраница = Элементы.ОтражениеВБухучетеБольничный;
	Иначе
		Элементы.ОтражениеВБухучетеСтраницы.ТекущаяСтраница = Элементы.ОтражениеВБухучетеНастройки;
	КонецЕсли;
	
	ОбновитьИнформационныеНадписи(ЭтотОбъект);
	
	ДатаИзмененийК353ФЗ = ЗарплатаКадрыПовтИсп.ДатаВступленияВСилуНА("ИзмененияК353ФЗ");
	
	ОбщегоНазначенияКлиентСервер.УстановитьСвойствоЭлементаФормы(
		Элементы,
		"ВидДоходаИсполнительногоПроизводства",
		"Заголовок",
		СтрШаблон(НСтр("ru = 'Вид дохода до %1'"), Формат(ДатаИзмененийК353ФЗ,"ДФ='dd.MM.yyyy ""г.""'")));
		
	ОбщегоНазначенияКлиентСервер.УстановитьСвойствоЭлементаФормы(
		Элементы,
		"ВидДоходаИсполнительногоПроизводства2022",
		"Заголовок",
		СтрШаблон(НСтр("ru = 'Вид дохода с %1'"), Формат(ДатаИзмененийК353ФЗ,"ДФ='dd.MM.yyyy ""г.""'")));
	
	ВидыДоходовИсполнительногоПроизводстваКлиентСервер.НастроитьПолеВидДоходаДляВыплатыЗарплаты(ЭтотОбъект,ДатаИзмененийК353ФЗ - 1);
	ВидыДоходовИсполнительногоПроизводстваКлиентСервер.НастроитьПолеВидДоходаДляВыплатыЗарплаты(ЭтотОбъект,ДатаИзмененийК353ФЗ, "ВидДоходаИсполнительногоПроизводства2022"); 
	
	Если ОбщегоНазначения.ПодсистемаСуществует("ЗарплатаКадрыПриложения.ЗарплатаКадрыДляНебольшихОрганизаций.РасчетЗарплаты") Тогда
		МодульРасчетЗарплатыДляНебольшихОрганизаций = ОбщегоНазначения.ОбщийМодуль("РасчетЗарплатыДляНебольшихОрганизаций");
		МодульРасчетЗарплатыДляНебольшихОрганизаций.УстановитьОтображениеЭлементовУправленияФормыНачисления(ЭтотОбъект);
	КонецЕсли;
	
КонецПроцедуры

&НаКлиентеНаСервереБезКонтекста
Процедура УстановитьДоступностьКодаДоходаНДФЛ(Форма)
	
	Форма.Элементы.КодДоходаНДФЛ.Доступность = Форма.ОблагаетсяНДФЛ = 1;
	Форма.Элементы.КодДоходаНДФЛ.АвтоОтметкаНезаполненного = Форма.ОблагаетсяНДФЛ = 1;
	Форма.Элементы.КодДоходаНДФЛ.ОтметкаНезаполненного = Не ЗначениеЗаполнено(Форма.Объект.КодДоходаНДФЛ);
	
	Если Не Форма.Элементы.КодДоходаНДФЛ.Доступность Тогда
		Форма.Объект.КодДоходаНДФЛ = Неопределено;
	КонецЕсли;
	
КонецПроцедуры

&НаКлиентеНаСервереБезКонтекста
Процедура УстановитьДоступностьВидаНачисленияДляНУ(Форма)
	
	Форма.Элементы.ВидНачисленияДляНУ.Доступность = Форма.ВключаетсяВРасходыПоСт255НКРФ = 1;
	Форма.Элементы.ВидНачисленияДляНУ.АвтоОтметкаНезаполненного = Форма.ВключаетсяВРасходыПоСт255НКРФ = 1;
	Форма.Элементы.ВидНачисленияДляНУ.ОтметкаНезаполненного = Не ЗначениеЗаполнено(Форма.Объект.ВидНачисленияДляНУ);
	
	Если Не Форма.Элементы.ВидНачисленияДляНУ.Доступность Тогда
		Форма.Объект.ВидНачисленияДляНУ = Неопределено;
		ОбновитьИнформационныеНадписи(Форма);
	КонецЕсли;
	
КонецПроцедуры

&НаКлиентеНаСервереБезКонтекста
Процедура УстановитьВидимостьВидДоходаСтраховыеВзносыИнфо(Форма)
	Видимость = Форма.Объект.КодДоходаСтраховыеВзносы <> Форма.Объект.КодДоходаСтраховыеВзносы2017;
	Форма.Элементы.ВидДоходаСтраховыеВзносыИнфо.Видимость = Видимость;
КонецПроцедуры

&НаСервере
Процедура ЗаполнитьКатегорииДоходовНДФЛ()
	
	КодыИКатегорииНДФЛ = УчетФактическиПолученныхДоходов.СопоставлениеКодовИКатегорийДоходовНДФЛ();
	
	СоответствиеКодовИКатегорий = Новый Соответствие;
	КодыСКатегориейНачислений = Новый Соответствие;
	
	Для Каждого Строка Из КодыИКатегорииНДФЛ Цикл
		Ключ = Строка.КодДохода;
		СписокКатегорий = СоответствиеКодовИКатегорий.Получить(Ключ);
		Если ЗначениеЗаполнено(Строка.КатегорияНачисления) Тогда
			Если СписокКатегорий = Неопределено Тогда
				СписокКатегорий = Новый Соответствие;
			ИначеЕсли ТипЗнч(СписокКатегорий) = Тип("Массив") Тогда
				// отмечен как соответствующий оплате труда
				Продолжить;
			КонецЕсли;
			КодыСКатегориейНачислений.Вставить(Ключ, Истина);
			МассивПоКатегорииНачисления = СписокКатегорий.Получить(Строка.КатегорияНачисления);
			Если МассивПоКатегорииНачисления = Неопределено Тогда
				МассивПоКатегорииНачисления = Новый Массив;
			КонецЕсли;
			МассивПоКатегорииНачисления.Добавить(Строка.КатегорияДохода);
			СписокКатегорий.Вставить(Строка.КатегорияНачисления, МассивПоКатегорииНачисления)
		Иначе
			Если СписокКатегорий = Неопределено Тогда
				СписокКатегорий = Новый Массив;
			ИначеЕсли ТипЗнч(СписокКатегорий) <> Тип("Массив") Тогда
				СписокКатегорий = Новый Массив;
				КодыСКатегориейНачислений.Вставить(Ключ, Ложь);
			КонецЕсли;
			СписокКатегорий.Добавить(Строка.КатегорияДохода);
		КонецЕсли;
		
		СоответствиеКодовИКатегорий.Вставить(Ключ, СписокКатегорий);
	КонецЦикла;
	
	Для Каждого КодПоКатегорииНачисления Из КодыСКатегориейНачислений Цикл
		Если КодПоКатегорииНачисления.Значение Тогда
			СоответствиеКодовИКатегорий.Вставить(КодПоКатегорииНачисления.Ключ, Новый ФиксированноеСоответствие(СоответствиеКодовИКатегорий.Получить(КодПоКатегорииНачисления.Ключ))); 
		КонецЕсли;
	КонецЦикла;
	
	КатегорииДоходовНДФЛ = Новый ФиксированноеСоответствие(СоответствиеКодовИКатегорий);
	
КонецПроцедуры

&НаКлиентеНаСервереБезКонтекста
Процедура УстановитьСвойстваКатегорииДоходаНДФЛ(Форма)
	
	Форма.Элементы.КатегорияДохода.РежимВыбораИзСписка = Истина;
	
	Если Форма.ОблагаетсяНДФЛ = 0 
		Или Не ЗначениеЗаполнено(Форма.Объект.КодДоходаНДФЛ) Тогда
		Форма.Объект.КатегорияДохода = Неопределено;
		Форма.Элементы.КатегорияДохода.АвтоОтметкаНезаполненного = Ложь;
		Форма.Элементы.КатегорияДохода.ОтметкаНезаполненного = Ложь;
		Форма.Элементы.КатегорияДохода.Доступность = Ложь;
		Возврат;
	КонецЕсли;
	
	ДоступныеКатегорииДохода = Форма.КатегорииДоходовНДФЛ.Получить(Форма.Объект.КодДоходаНДФЛ);
	Если ДоступныеКатегорииДохода <> Неопределено И ТипЗнч(ДоступныеКатегорииДохода) <> Тип("Массив") Тогда
		ДоступныеКатегорииДохода = ДоступныеКатегорииДохода.Получить(Форма.Объект.КатегорияНачисленияИлиНеоплаченногоВремени);
	КонецЕсли;
	
	Форма.Элементы.КатегорияДохода.СписокВыбора.Очистить();
	Если ДоступныеКатегорииДохода = Неопределено 
		Или ДоступныеКатегорииДохода.Количество() = 0 Тогда 
		Форма.Элементы.КатегорияДохода.РежимВыбораИзСписка = Ложь;
	ИначеЕсли ДоступныеКатегорииДохода.Количество() = 1 Тогда
		Форма.Элементы.КатегорияДохода.СписокВыбора.Добавить(ДоступныеКатегорииДохода[0]);
		Форма.Объект.КатегорияДохода = ДоступныеКатегорииДохода[0];
		Форма.Элементы.КатегорияДохода.АвтоОтметкаНезаполненного = Ложь;
		Форма.Элементы.КатегорияДохода.ОтметкаНезаполненного = Ложь;
		Форма.Элементы.КатегорияДохода.Доступность = Ложь;
	Иначе
		Для Каждого ДоступнаяКатегория Из ДоступныеКатегорииДохода Цикл
			Форма.Элементы.КатегорияДохода.СписокВыбора.Добавить(ДоступнаяКатегория);
		КонецЦикла;
		Форма.Элементы.КатегорияДохода.Доступность = Истина;
		Если Не ЗначениеЗаполнено(Форма.Объект.КатегорияДохода) Тогда
			Форма.Элементы.КатегорияДохода.АвтоОтметкаНезаполненного = Истина;
			Форма.Элементы.КатегорияДохода.ОтметкаНезаполненного = Истина;
		Иначе
			Если ДоступныеКатегорииДохода.Найти(Форма.Объект.КатегорияДохода) = Неопределено Тогда
				Форма.Объект.КатегорияДохода = Неопределено;
				Форма.Элементы.КатегорияДохода.АвтоОтметкаНезаполненного = Истина;
				Форма.Элементы.КатегорияДохода.ОтметкаНезаполненного = Истина;
			Иначе
				Форма.Элементы.КатегорияДохода.АвтоОтметкаНезаполненного = Ложь;
				Форма.Элементы.КатегорияДохода.ОтметкаНезаполненного = Ложь;
			КонецЕсли;
		КонецЕсли;
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти
