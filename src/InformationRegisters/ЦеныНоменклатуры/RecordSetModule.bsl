///////////////////////////////////////////////////////////////////////////////////////////////////////
// Copyright (c) 2021, ООО 1С-Софт
// Все права защищены. Эта программа и сопроводительные материалы предоставляются 
// в соответствии с условиями лицензии Attribution 4.0 International (CC BY 4.0)
// Текст лицензии доступен по ссылке:
// https://creativecommons.org/licenses/by/4.0/legalcode
///////////////////////////////////////////////////////////////////////////////////////////////////////

#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область ОбработчикиСобытий

Процедура ПередЗаписью(Отказ, Замещение)
	
	Если ОбменДанными.Загрузка Тогда
		Возврат;
	КонецЕсли;

	ЭтоУдаление 			= Количество() = 0;
	ЭтоОтменаПроведения 	= ?(ДополнительныеСвойства.Свойство("ОтменаПроведения"), 
		ДополнительныеСвойства.ОтменаПроведения, Ложь);
	ЭтоПроведение 			= ?(ДополнительныеСвойства.Свойство("Проведение"), 
		ДополнительныеСвойства.Проведение, Ложь);
	ЭтоПодпискаНаСобытие	= ?(ДополнительныеСвойства.Свойство("ЭтоРаботаПодпискиНаСобытие"), 
		ДополнительныеСвойства.ЭтоРаботаПодпискиНаСобытие, Ложь);
	
	Если ЭтоУдаление 
		И НЕ ЭтоОтменаПроведения 
		И НЕ ЭтоПроведение 
		И НЕ ЭтоПодпискаНаСобытие Тогда
		
		Прочитать();
		МассивДокументов = ОбщегоНазначенияКлиентСервер.СвернутьМассив(ВыгрузитьКолонку("ДокументУстановки"));
		Если МассивДокументов.Количество() > 0 Тогда
			Если ЗначениеЗаполнено(МассивДокументов[0]) Тогда
				Отказ = Истина;
			КонецЕсли;
		КонецЕсли;
		Очистить();
		Если Отказ Тогда
			ШаблонТекста = НСтр("ru = 'Нет возможности удалить запись цены, которая сформирована документом %1'");
			ТекстСообщения = СтрШаблон(ШаблонТекста, МассивДокументов[0]);
			ЗаписьЖурналаРегистрации(НСтр("ru='Удаление цены'", ОбщегоНазначения.КодОсновногоЯзыка()), 
				УровеньЖурналаРегистрации.Ошибка, , , ТекстСообщения);
			ВызватьИсключение ТекстСообщения;
		КонецЕсли;
		
	КонецЕсли;
	
	Если НЕ (ЭтоУдаление Или ЭтоПроведение) Тогда
		
		РезультатПодготовки = ПодготовитьНаборДляЗаписи(ЭтотОбъект);
		Если РезультатПодготовки.Отказ Тогда
			Отказ = Истина;
			ЗаписьЖурналаРегистрации(НСтр("ru='Запись цены'", ОбщегоНазначения.КодОсновногоЯзыка()), 
				УровеньЖурналаРегистрации.Ошибка, , , РезультатПодготовки.ПричинаОтказа);
			ВызватьИсключение РезультатПодготовки.ПричинаОтказа;
		КонецЕсли;
		
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

Функция ПодготовитьНаборДляЗаписи(НаборЗаписей)
	
	Результат = Новый Структура("Отказ, ПричинаОтказа", Ложь, "");
	Если ПолучитьФункциональнуюОпцию("ИспользоватьХарактеристики") Тогда
		
		Для каждого Запись Из НаборЗаписей Цикл
		
			Если Запись.Номенклатура.ПроверятьЗаполнениеХарактеристики
				И НЕ ЗначениеЗаполнено(Запись.Характеристика) Тогда
				
				Результат.Отказ = Истина;
				ПричинаОтказа = СтрШаблон(НСтр(
					"ru='Нельзя записать цену для номенклатуры ""%1"" установлено обязательное заполнение характеристик'"),
					Запись.Номенклатура);
				Результат.ПричинаОтказа = ПричинаОтказа;
				
			КонецЕсли;
			
			Если Не ЗначениеЗаполнено(Запись.ВалютаЦены) Тогда
				Запись.ВалютаЦены = Запись.ВидЦен.ВалютаЦены;
			КонецЕсли;
		
		КонецЦикла;
		
	КонецЕсли;
	
	Возврат Результат;
	
КонецФункции

#КонецОбласти

#Иначе
ВызватьИсключение НСтр("ru = 'Недопустимый вызов объекта на клиенте.'");
#КонецЕсли