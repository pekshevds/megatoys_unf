&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	Если Параметры.Отбор.Свойство( "НастройкаИнтеграцииСИнтернетМагазином" )
	И ЗначениеЗаполнено( Параметры.Отбор.НастройкаИнтеграцииСИнтернетМагазином ) Тогда
		ОтборНастройкаИнтеграцииСИнтернетМагазином = Параметры.Отбор.НастройкаИнтеграцииСИнтернетМагазином;
		УчетнаяЗапись = ОтборНастройкаИнтеграцииСИнтернетМагазином;
		Элементы.НастройкаИнтеграцииСИнтернетМагазином.Видимость = Ложь;
	КонецЕсли;

	СтатистикаПоТоварамЗаполнитьНаФорме();
	
	// УНФ.ОтборыСписка
	УстановитьВидимостьОтборов();
	ЗаполнитьСписокВыбораКаталоги();
	ЗаполнитьСписокВыбораДействия();
	РаботаСОтборами.ОпределитьПорядокПредопределенныхОтборов(ЭтотОбъект);
	РаботаСОтборами.ВосстановитьНастройкиОтборов(ЭтотОбъект, Список);
	Если Элементы.ФильтрыНастройкиИДопИнфо.Видимость Тогда
		Элементы.ПраваяПанель.Ширина = 28;
	КонецЕсли;
	// Конец УНФ.ОтборыСписка
	
КонецПроцедуры

&НаКлиенте
Процедура СписокВыбор(Элемент, ВыбраннаяСтрока, Поле, СтандартнаяОбработка)
	Если Поле.Имя = "Номенклатура" Тогда
		Ссылка = Элементы.Список.ТекущиеДанные.Номенклатура;
		Если ЗначениеЗаполнено( Ссылка ) Тогда
			СтандартнаяОбработка = Ложь;
			ПоказатьЗначение( , Ссылка );
		КонецЕсли;
	ИначеЕсли Поле.Имя = "Характеристика" Тогда
		Ссылка = Элементы.Список.ТекущиеДанные.Характеристика;
		Если ЗначениеЗаполнено( Ссылка ) Тогда
			СтандартнаяОбработка = Ложь;
			ПоказатьЗначение( , Ссылка );
		КонецЕсли;
	КонецЕсли;
КонецПроцедуры

&НаСервереБезКонтекста
Функция СтатистикаПоВыгруженнымТоварамПолучить( УчетнаяЗапись )
	
	ЗапросТекст = 
	"ВЫБРАТЬ
	|	ВыгруженныеТоварыИнтернетМагазина.НастройкаИнтеграцииСИнтернетМагазином КАК НастройкаИнтеграцииСИнтернетМагазином,
	|	ВыгруженныеТоварыИнтернетМагазина.ИдентификаторКаталога КАК ИдентификаторКаталога,
	|	ВыгруженныеТоварыИнтернетМагазина.Действие КАК Действие,
	|	СУММА(1) КАК Количество
	|ИЗ
	|	РегистрСведений.ВыгруженныеТоварыИнтернетМагазина КАК ВыгруженныеТоварыИнтернетМагазина
	|ГДЕ
	|	ВыгруженныеТоварыИнтернетМагазина.НастройкаИнтеграцииСИнтернетМагазином = &УчетнаяЗапись
	|
	|СГРУППИРОВАТЬ ПО
	|	ВыгруженныеТоварыИнтернетМагазина.НастройкаИнтеграцииСИнтернетМагазином,
	|	ВыгруженныеТоварыИнтернетМагазина.ИдентификаторКаталога,
	|	ВыгруженныеТоварыИнтернетМагазина.Действие";
	
	ЗапросОбъект = Новый Запрос( ЗапросТекст );
	ЗапросОбъект.УстановитьПараметр( "УчетнаяЗапись", УчетнаяЗапись );
	ВыгруженныеТоварыИнтернетМагазина = ЗапросОбъект.Выполнить().Выгрузить();
	
	ВыгруженныеТоварыИнтернетМагазина.Колонки.Добавить( "КаталогНаименование" );
	
	СохраненнаяТаблицаКаталогов = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(
	УчетнаяЗапись,
	"СохраненнаяТаблицаКаталогов");
	Каталоги = СохраненнаяТаблицаКаталогов.Получить();

	Для Каждого ВыгруженныеТоварыИнтернетМагазинаСтрока Из ВыгруженныеТоварыИнтернетМагазина Цикл
		КаталогиСтрока = Каталоги.Найти( ВыгруженныеТоварыИнтернетМагазинаСтрока.ИдентификаторКаталога, "ИдентификаторКаталога" );
		Если КаталогиСтрока = Неопределено Тогда
			ВыгруженныеТоварыИнтернетМагазинаСтрока.КаталогНаименование = "<Удаленный каталог>";
		Иначе
			ВыгруженныеТоварыИнтернетМагазинаСтрока.КаталогНаименование = СокрЛП( КаталогиСтрока.Каталог );
		КонецЕсли;
	КонецЦикла;

	ВыгруженныеТоварыИнтернетМагазина.Сортировать( "КаталогНаименование" );
	
	Результат = Новый Соответствие;
	
	Для Каждого ВыгруженныеТоварыИнтернетМагазинаСтрока Из ВыгруженныеТоварыИнтернетМагазина Цикл
		
		КаталогЭлемент = Результат.Получить( ВыгруженныеТоварыИнтернетМагазинаСтрока.ИдентификаторКаталога );
		Если КаталогЭлемент = Неопределено Тогда
			КаталогЭлемент = Новый Соответствие;
			КаталогЭлемент.Вставить( "ИдентификаторКаталога", ВыгруженныеТоварыИнтернетМагазинаСтрока.ИдентификаторКаталога );
			КаталогЭлемент.Вставить( "КаталогНаименование", ВыгруженныеТоварыИнтернетМагазинаСтрока.КаталогНаименование );

			Результат.Вставить( ВыгруженныеТоварыИнтернетМагазинаСтрока.ИдентификаторКаталога, КаталогЭлемент );
		КонецЕсли;
		
		КаталогЭлемент.Вставить( ВыгруженныеТоварыИнтернетМагазинаСтрока.Действие, ВыгруженныеТоварыИнтернетМагазинаСтрока.Количество );
		
	КонецЦикла;
	
	Возврат Результат;	
КонецФункции

&НаСервере
Процедура СтатистикаПоТоварамЗаполнитьНаФорме()

	Элементы.СтатистикаПоТоварам.Заголовок = "";
	Элементы.ГруппаСтатистикаПоТоварам.Видимость = Ложь;
	
	Если Не ЗначениеЗаполнено( УчетнаяЗапись ) Тогда	
		Возврат;
	КонецЕсли;
	
	Элементы.ГруппаСтатистикаПоТоварам.Видимость = Истина;
	
	Статистика = СтатистикаПоВыгруженнымТоварамПолучить( УчетнаяЗапись );
	Если Статистика.Количество() = 0 Тогда
		Возврат;
	КонецЕсли;
	
	Стр = "" + УчетнаяЗапись;
	Для Каждого СтатистикаЭлемент Из Статистика Цикл
	
	    Если ТипЗнч( СтатистикаЭлемент.Значение ) <> Тип( "Соответствие" ) Тогда
	    	Продолжить;
	    КонецЕсли;
	    
		Значения = СтатистикаЭлемент.Значение;
		
		Стр = Стр + Символы.ПС + Значения.Получить( "КаталогНаименование" ) + ":";
		
		Добавлено = Значения.Получить( Перечисления.ОбменСВнешнимиСистемамиЛогированиеДействия.ТоварДобавить );
		Если Добавлено = Неопределено Тогда
			Добавлено = 0;
		КонецЕсли;

		Изменено = Значения.Получить( Перечисления.ОбменСВнешнимиСистемамиЛогированиеДействия.ТоварИзменить );
		Если Изменено = Неопределено Тогда
			Изменено = 0;
		КонецЕсли;

		Удалено = Значения.Получить( Перечисления.ОбменСВнешнимиСистемамиЛогированиеДействия.ТоварУдалить );
		Если Удалено = Неопределено Тогда
			Удалено = 0;
		КонецЕсли;
		
		Стр = Стр + " добавлено " + Добавлено + ", изменено " + Изменено + ", удалено " + Удалено + ".";
		
	КонецЦикла;
	
	Элементы.СтатистикаПоТоварам.Заголовок = Стр;
	
КонецПроцедуры

&НаСервереБезКонтекста
Процедура СписокПриПолученииДанныхНаСервере(ИмяЭлемента, Настройки, Строки)

	// заполним наименования каталогов
    УчетныеЗаписиИКаталоги = Новый Соответствие;
	Для Каждого СписокСтрока Из Строки Цикл
		
		УчетнаяЗапись = СписокСтрока.Ключ.НастройкаИнтеграцииСИнтернетМагазином;
		
		Если УчетныеЗаписиИКаталоги.Получить( УчетнаяЗапись ) <> Неопределено Тогда
			Продолжить;
		КонецЕсли;
		
		КаталогиЭлемент = Новый Соответствие;
		СохраненнаяТаблицаКаталогов = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(
		УчетнаяЗапись,
		"СохраненнаяТаблицаКаталогов");
		Каталоги = СохраненнаяТаблицаКаталогов.Получить();
		Для Каждого Каталог Из Каталоги Цикл
			КаталогиЭлемент.Вставить( Каталог.ИдентификаторКаталога, Каталог.Каталог );
		КонецЦикла;

		УчетныеЗаписиИКаталоги.Вставить( УчетнаяЗапись, КаталогиЭлемент );
		
	КонецЦикла;
	
	
	// отобразим наименование каталогов
	Для Каждого СписокСтрока Из Строки Цикл
		
		Данные = СписокСтрока.Значение.Данные;
		УчетнаяЗапись = СписокСтрока.Ключ.НастройкаИнтеграцииСИнтернетМагазином;
		ИдентификаторКаталога = СписокСтрока.Ключ.ИдентификаторКаталога;
		
		// заполним наименование каталога в списке
		УчетныеЗаписиИКаталогиЭлемент = УчетныеЗаписиИКаталоги.Получить( УчетнаяЗапись );
		КаталогНаименование = УчетныеЗаписиИКаталогиЭлемент.Получить( ИдентификаторКаталога );
		Данные.КаталогНаименование = КаталогНаименование;
		
	КонецЦикла;
	
КонецПроцедуры

&НаКлиенте
Процедура СвернутьРазвернутьПанельОтборов(Элемент)
	
	НовоеЗначениеВидимость = НЕ Элементы.ФильтрыНастройкиИДопИнфо.Видимость;
	РаботаСОтборамиКлиент.СвернутьРазвернутьПанельОтборов(ЭтотОбъект, НовоеЗначениеВидимость);
	
	Если Элементы.ФильтрыНастройкиИДопИнфо.Видимость Тогда
		Элементы.ПраваяПанель.Ширина = 28;
	КонецЕсли;
		
КонецПроцедуры

&НаКлиенте
Процедура ОтборНастройкаИнтеграцииСИнтернетМагазиномОбработкаВыбора(Элемент, ВыбранноеЗначение, СтандартнаяОбработка)
	
	Если Не ЗначениеЗаполнено(ВыбранноеЗначение) Тогда
		Возврат;
	КонецЕсли;
	
	УстановитьМеткуИОтборСписка("НастройкаИнтеграцииСИнтернетМагазином", Элемент.Родитель.Имя, ВыбранноеЗначение);
	ВыбранноеЗначение = Неопределено;

КонецПроцедуры

&НаКлиенте
Процедура ОтборНоменклатураОбработкаВыбора(Элемент, ВыбранноеЗначение, СтандартнаяОбработка)
	
	Если Не ЗначениеЗаполнено(ВыбранноеЗначение) Тогда
		Возврат;
	КонецЕсли;
	
	УстановитьМеткуИОтборСписка("Номенклатура", Элемент.Родитель.Имя, ВыбранноеЗначение);
	ВыбранноеЗначение = Неопределено;

КонецПроцедуры

&НаКлиенте
Процедура ОтборХарактеристикаОбработкаВыбора(Элемент, ВыбранноеЗначение, СтандартнаяОбработка)
	
	Если Не ЗначениеЗаполнено(ВыбранноеЗначение) Тогда
		Возврат;
	КонецЕсли;
	
	УстановитьМеткуИОтборСписка("Характеристика", Элемент.Родитель.Имя, ВыбранноеЗначение);
	ВыбранноеЗначение = Неопределено;

КонецПроцедуры

&НаКлиенте
Процедура ОтборДействиеОбработкаВыбора(Элемент, ВыбранноеЗначение, СтандартнаяОбработка)
	
	Если Не ЗначениеЗаполнено(ВыбранноеЗначение) Тогда
		Возврат;
	КонецЕсли;
	
	УстановитьМеткуИОтборСписка("Действие", Элемент.Родитель.Имя, ВыбранноеЗначение);
	ВыбранноеЗначение = Неопределено;

КонецПроцедуры

&НаКлиенте
Процедура ОтборКаталогОбработкаВыбора(Элемент, ВыбранноеЗначение, СтандартнаяОбработка)
	
	Если Не ЗначениеЗаполнено(ВыбранноеЗначение) Тогда
		Возврат;
	КонецЕсли;
	
	СписокЭлемент = Элемент.СписокВыбора.НайтиПоЗначению( ВыбранноеЗначение );
	Если СписокЭлемент <> Неопределено Тогда
		ЗначениеПредставление = СписокЭлемент.Представление;
	Иначе
		ЗначениеПредставление = ВыбранноеЗначение;
	КонецЕсли;
	
	УстановитьМеткуИОтборСписка("ИдентификаторКаталога", Элемент.Родитель.Имя, ВыбранноеЗначение, ЗначениеПредставление );
	ВыбранноеЗначение = Неопределено;

КонецПроцедуры

&НаСервере
Процедура УстановитьМеткуИОтборСписка(ИмяПоляОтбораСписка, ГруппаРодительМетки, ВыбранноеЗначение, ПредставлениеЗначения="")
	
	Если ПредставлениеЗначения = "" Тогда
		ПредставлениеЗначения = Строка( ВыбранноеЗначение );
	КонецЕсли;
	
	РаботаСОтборами.ПрикрепитьМеткуОтбора(ЭтотОбъект, ИмяПоляОтбораСписка, ГруппаРодительМетки, ВыбранноеЗначение, ПредставлениеЗначения);
	РаботаСОтборами.УстановитьОтборСписка(ЭтотОбъект, Список, ИмяПоляОтбораСписка);
	
КонецПроцедуры

&НаСервере
Процедура ЗаполнитьСписокВыбораКаталоги()
	
	УчетныеЗаписи = Новый Массив;
	Если Параметры.Отбор.Свойство( "НастройкаИнтеграцииСИнтернетМагазином" ) 
	И ЗначениеЗаполнено( Параметры.Отбор.НастройкаИнтеграцииСИнтернетМагазином ) Тогда
	
		УчетнаяЗапись = Параметры.Отбор.НастройкаИнтеграцииСИнтернетМагазином;
		
		СохраненнаяТаблицаКаталогов = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(
		УчетнаяЗапись, "СохраненнаяТаблицаКаталогов" );
		Значение = Новый Структура( "УчетнаяЗапись, СохраненнаяТаблицаКаталогов", УчетнаяЗапись, СохраненнаяТаблицаКаталогов );
		УчетныеЗаписи.Добавить( Значение );
		
	Иначе
		ЗапросТекст =
		"ВЫБРАТЬ
		|	НастройкиИнтеграцииСИнтернетМагазином.Ссылка КАК УчетнаяЗапись,
		|	НастройкиИнтеграцииСИнтернетМагазином.СохраненнаяТаблицаКаталогов КАК СохраненнаяТаблицаКаталогов
		|ИЗ
		|	Справочник.НастройкиИнтеграцииСИнтернетМагазином КАК НастройкиИнтеграцииСИнтернетМагазином
		|ГДЕ
		|	НастройкиИнтеграцииСИнтернетМагазином.НастройкаЗавершена = ИСТИНА
		|	И НастройкиИнтеграцииСИнтернетМагазином.ПометкаУдаления = ЛОЖЬ";
		ЗапросОбъект = Новый Запрос( ЗапросТекст );
		ЗапросВыборка = ЗапросОбъект.Выполнить().Выбрать();
		Пока ЗапросВыборка.Следующий() Цикл
			Значение = Новый Структура( "УчетнаяЗапись, СохраненнаяТаблицаКаталогов", ЗапросВыборка.УчетнаяЗапись, ЗапросВыборка.СохраненнаяТаблицаКаталогов );
			УчетныеЗаписи.Добавить( Значение );
		КонецЦикла;
	КонецЕсли;

	КаталогиСписокВыбора = Элементы.ОтборКаталог.СписокВыбора;
	УчетныеЗаписиКоличество = УчетныеЗаписи.Количество();
	Для Каждого УчетнаяЗаписьЭлемент Из УчетныеЗаписи Цикл		
		Каталоги = УчетнаяЗаписьЭлемент.СохраненнаяТаблицаКаталогов.Получить();
		Для Каждого Каталог Из Каталоги Цикл
			Дополнение = ?( УчетныеЗаписиКоличество > 1, " ( " + УчетнаяЗаписьЭлемент.УчетнаяЗапись + " )", "" );
			КаталогиСписокВыбора.Добавить( Каталог.ИдентификаторКаталога, Каталог.Каталог + Дополнение );
		КонецЦикла;
	КонецЦикла;	
	
КонецПроцедуры

&НаСервере
Процедура ЗаполнитьСписокВыбораДействия()

	ДействияСписокВыбора = Элементы.ОтборДействие.СписокВыбора;
	
	ДействияСписокВыбора.Добавить( Перечисления.ОбменСВнешнимиСистемамиЛогированиеДействия.ТоварДобавить );
	ДействияСписокВыбора.Добавить( Перечисления.ОбменСВнешнимиСистемамиЛогированиеДействия.ТоварИзменить );
	ДействияСписокВыбора.Добавить( Перечисления.ОбменСВнешнимиСистемамиЛогированиеДействия.ТоварУдалить );
	
КонецПроцедуры

&НаСервере
Процедура УстановитьВидимостьОтборов()
	
	Если Параметры.Отбор.Свойство( "НастройкаИнтеграцииСИнтернетМагазином" ) 
	И ЗначениеЗаполнено( Параметры.Отбор.НастройкаИнтеграцииСИнтернетМагазином ) Тогда
		ВидимостьОтбораПоУчетнойЗаписи = Ложь;
	Иначе
		ВидимостьОтбораПоУчетнойЗаписи = Истина;
	КонецЕсли;
	
	Элементы.ГруппаОтборНастройкаИнтеграцииСИнтернетМагазином.Видимость = ВидимостьОтбораПоУчетнойЗаписи;
КонецПроцедуры

&НаКлиенте
Процедура ПриЗакрытии(ЗавершениеРаботы)
	Если НЕ ЗавершениеРаботы Тогда
		//УНФ.ОтборыСписка
		СохранитьНастройкиОтборов();
		//Конец УНФ.ОтборыСписка
	КонецЕсли;
КонецПроцедуры

&НаСервере
Процедура СохранитьНастройкиОтборов()
	
	РаботаСОтборами.СохранитьНастройкиОтборов(ЭтотОбъект);
	
КонецПроцедуры

&НаКлиенте
Процедура СброситьВсеОтборы(Команда)
	РаботаСОтборамиКлиент.СброситьОтборПоПериоду(ЭтотОбъект, "Список", "Дата");
	СброситьВсеМеткиОтбораНаСервере();
КонецПроцедуры

&НаСервере
Процедура СброситьВсеМеткиОтбораНаСервере()
	РаботаСОтборами.УдалитьМеткиОтбораСервер(ЭтотОбъект, Список);
КонецПроцедуры

&НаКлиенте
Процедура НастроитьОтборы(Команда)
	
	ИмяРеквизитаСписка = "Список";
	ИмяТЧДанныеМеток = "ДанныеМеток";
	ИмяТЧДанныеОтборов = "ДанныеОтборов";
	ИмяГруппыОтборов = "ГруппаОтборы";
	ИмяПредопределенныеОтборыПоУмолчанию = "ПредопределенныеОтборыПоУмолчанию";
	
	ДополнительныеПараметры = Новый Структура;
	ДополнительныеПараметры.Вставить("ИмяРеквизитаСписка", ИмяРеквизитаСписка);
	ДополнительныеПараметры.Вставить("ИмяТЧДанныеМеток", ИмяТЧДанныеМеток);
	ДополнительныеПараметры.Вставить("ИмяТЧДанныеОтборов", ИмяТЧДанныеОтборов);
	ДополнительныеПараметры.Вставить("ИмяГруппыОтборов", ИмяГруппыОтборов);
	ДополнительныеПараметры.Вставить("ИмяПредопределенныеОтборыПоУмолчанию", ИмяПредопределенныеОтборыПоУмолчанию);
	
	РаботаСОтборамиКлиент.НастроитьОтборыНажатие(ЭтотОбъект, ПараметрыОткрытияФормыСНастройкамиОтборов(ДополнительныеПараметры), ДополнительныеПараметры);
	
КонецПроцедуры

&НаСервере
Функция ПараметрыОткрытияФормыСНастройкамиОтборов(ДополнительныеПараметры)
	
	Возврат РаботаСОтборами.ПараметрыДляОткрытияФормыСНастройкамиОтборов(ЭтотОбъект, ДополнительныеПараметры);
	
КонецФункции

&НаКлиенте
Процедура НастройкаОтборовЗавершение(Результат, ДополнительныеПараметры) Экспорт
	
	Если Результат = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	НастройкаОтборовЗавершениеНаСервере(Результат.АдресВыбранныеОтборы, Результат.АдресУдаленныеОтборы, ДополнительныеПараметры);
	
КонецПроцедуры

&НаСервере
Процедура НастройкаОтборовЗавершениеНаСервере(АдресВыбранныеОтборы, АдресУдаленныеОтборы, ДополнительныеПараметры)
	
	Если ДополнительныеПараметры = Неопределено Тогда
		ИмяРеквизитаСписка = "Список";
		ИмяТЧДанныеМеток = "ДанныеМеток";
		ИмяТЧДанныеОтборов = "ДанныеОтборов";
	Иначе
		ИмяРеквизитаСписка = ДополнительныеПараметры.ИмяРеквизитаСписка;
		ИмяТЧДанныеМеток = ДополнительныеПараметры.ИмяТЧДанныеМеток;
		ИмяТЧДанныеОтборов = ДополнительныеПараметры.ИмяТЧДанныеОтборов;
	КонецЕсли;
	
	РаботаСОтборами.НастройкаОтборовЗавершение(ЭтотОбъект, АдресВыбранныеОтборы, АдресУдаленныеОтборы, ДополнительныеПараметры);
	
КонецПроцедуры

&НаКлиенте
Процедура Подключаемый_МеткаОбработкаНавигационнойСсылки(Элемент, НавигационнаяСсылкаФорматированнойСтроки,
	СтандартнаяОбработка)

	СтандартнаяОбработка = Ложь;

	МеткаИД = Сред(Элемент.Имя, СтрДлина("Метка_") + 1);
	УдалитьМеткуОтбора(МеткаИД);

КонецПроцедуры

&НаСервере
Процедура УдалитьМеткуОтбора(МеткаИД)
	
	РаботаСОтборами.УдалитьМеткуОтбораСервер(ЭтотОбъект, Список, МеткаИД);
	
КонецПроцедуры

&НаКлиенте
Процедура Подключаемый_ОтборОчистка(Элемент)
	
	Подключаемый_ОтборОчисткаНаСервере(Элемент.Имя, Элемент.Родитель.Имя)
	
КонецПроцедуры

&НаСервере
Процедура Подключаемый_ОтборОчисткаНаСервере(ЭлементИмя, ЭлементРодительИмя)
	
	РаботаСОтборами.Подключаемый_ОтборОчистка(ЭтотОбъект, ЭлементИмя);

КонецПроцедуры

&НаКлиенте
Процедура Подключаемый_ОтборПриИзменении(Элемент)
	
	Подключаемый_ОтборПриИзмененииНаСервере(Элемент.Имя, Элемент.Родитель.Имя)
	
КонецПроцедуры

&НаСервере
Процедура Подключаемый_ОтборПриИзмененииНаСервере(ЭлементИмя, ЭлементРодительИмя)
	
	РаботаСОтборами.Подключаемый_ОтборПриИзменении(ЭтотОбъект, ЭлементИмя, ЭлементРодительИмя);
	
КонецПроцедуры

&НаКлиенте
Процедура КнопкаСтатистикаПоТоварамОбновить(Команда)
	СтатистикаПоТоварамЗаполнитьНаФорме();
КонецПроцедуры
