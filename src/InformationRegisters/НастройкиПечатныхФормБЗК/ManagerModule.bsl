#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область СлужебныеПроцедурыИФункции

Функция Настройки() Экспорт
	
	НастройкиФорм = Новый Соответствие;
	
	Запрос = Новый Запрос;
	Запрос.Текст =
		"ВЫБРАТЬ
		|	НастройкиПечатныхФорм.ИдентификаторПечатнойФормы КАК ИдентификаторПечатнойФормы,
		|	НастройкиПечатныхФорм.СодержимоеДокумента КАК СодержимоеДокумента,
		|	НастройкиПечатныхФорм.БлокировкаСУсловием КАК БлокировкаСУсловием,
		|	НастройкиПечатныхФорм.НаСписокСотрудников КАК НаСписокСотрудников,
		|	НастройкиПечатныхФорм.КодДокументаКадровогоМероприятия КАК КодДокументаКадровогоМероприятия
		|ИЗ
		|	РегистрСведений.НастройкиПечатныхФормБЗК КАК НастройкиПечатныхФорм";
	
	УстановитьПривилегированныйРежим(Истина);
	Выборка = Запрос.Выполнить().Выбрать();
	УстановитьПривилегированныйРежим(Ложь);
	Пока Выборка.Следующий() Цикл
		НастройкиФорм.Вставить(Выборка.ИдентификаторПечатнойФормы,
			Новый Структура("СодержимоеДокумента, БлокировкаСУсловием, НаСписокСотрудников, КодДокументаКадровогоМероприятия",
				Выборка.СодержимоеДокумента, Выборка.БлокировкаСУсловием, Выборка.НаСписокСотрудников, Выборка.КодДокументаКадровогоМероприятия));
	КонецЦикла;
	
	Возврат НастройкиФорм;
	
КонецФункции

Процедура ЗаполнитьНастройки() Экспорт
	
	ОбновитьНастройкиПечатныхФорм();
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

Процедура ОбновитьНастройкиПечатныхФорм(ОбновитьЗаписи = Ложь)
	
	НачатьТранзакцию();
	Попытка
		
		Блокировка = Новый БлокировкаДанных;
		ЭлементБлокировки = Блокировка.Добавить("РегистрСведений.НастройкиПечатныхФормБЗК");
		Блокировка.Заблокировать();
		
		НаборЗаписей = РегистрыСведений.НастройкиПечатныхФормБЗК.СоздатьНаборЗаписей();
		НаборЗаписей.Прочитать();
		
		ТаблицаНабора = НаборЗаписей.Выгрузить();
		
		ЗаписатьНабор = Ложь;
		НастройкиПечатныхФормПоУмолчанию = КадровыйЭДО.ОписанияНастроекПечатныхФормПоУмолчанию();
		Для Каждого НастройкиПечатнойФормы Из НастройкиПечатныхФормПоУмолчанию Цикл
			
			ЗаписьИдентификатора = ТаблицаНабора.Найти(НастройкиПечатнойФормы.ИдентификаторПечатнойФормы, "ИдентификаторПечатнойФормы");
			Если ЗаписьИдентификатора = Неопределено Тогда
				ЗаписатьНабор = Истина;
				ЗаполнитьЗначенияСвойств(ТаблицаНабора.Добавить(), НастройкиПечатнойФормы);
			ИначеЕсли ОбновитьЗаписи Тогда
				ЗаписатьНабор = Истина;
				ЗаполнитьЗначенияСвойств(ЗаписьИдентификатора, НастройкиПечатнойФормы);
			Иначе
				Для Каждого Колонка Из НастройкиПечатныхФормПоУмолчанию.Колонки Цикл
					Если Не ЗначениеЗаполнено(ЗаписьИдентификатора[Колонка.Имя])
						И ЗначениеЗаполнено(НастройкиПечатнойФормы[Колонка.Имя]) Тогда
						
						ЗаписатьНабор = Истина;
						ЗаписьИдентификатора[Колонка.Имя] = НастройкиПечатнойФормы[Колонка.Имя];
					КонецЕсли;
				КонецЦикла;
			КонецЕсли;
			
		КонецЦикла;
		
		Если ЗаписатьНабор Тогда
			НаборЗаписей.Загрузить(ТаблицаНабора);
			ОбновлениеИнформационнойБазы.ЗаписатьНаборЗаписей(НаборЗаписей);
		КонецЕсли;
		
		ЗафиксироватьТранзакцию();
		
	Исключение
		ОтменитьТранзакцию();
		ЗаписьЖурналаРегистрации(
			КадровыйЭДО.ИмяСобытияЖурналаРегистрации(
				НСтр("ru = 'Ошибка заполнения настроек печатных форм'", ОбщегоНазначения.КодОсновногоЯзыка())),
			УровеньЖурналаРегистрации.Ошибка,
			Метаданные.РегистрыСведений.НастройкиПечатныхФормБЗК,
			,
			ПодробноеПредставлениеОшибки(ИнформацияОбОшибке()));
	КонецПопытки;
	
КонецПроцедуры

#КонецОбласти

#КонецЕсли
