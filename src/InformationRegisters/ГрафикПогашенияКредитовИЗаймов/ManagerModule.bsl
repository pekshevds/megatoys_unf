
#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область ПрограммныйИнтерфейс

#Область ДляВызоваИзДругихПодсистем

// СтандартныеПодсистемы.УправлениеДоступом

// Параметры:
//   Ограничение - см. УправлениеДоступомПереопределяемый.ПриЗаполненииОграниченияДоступа.Ограничение.
//
Процедура ПриЗаполненииОграниченияДоступа(Ограничение) Экспорт

	Ограничение.Текст =
	"РазрешитьЧтениеИзменение
	|ГДЕ
	|	ДоговорКредитаЗайма.ВидДоговора = ЗНАЧЕНИЕ(Перечисление.ВидыДоговоровКредитаИЗайма.ДоговорЗаймаСотруднику)";

КонецПроцедуры

// Конец СтандартныеПодсистемы.УправлениеДоступом

#КонецОбласти

// Возвращает остатки задолженности по договору кредита (займа) согласно графику погашения.
//
// Параметры:
//  ДоговорКредитаЗайма - ДокументСсылка.ДоговорКредитаЗайма - договору кредита (займа).
// 
//  Дата - Дата - дата, на которую нужно получить остатки.
// 
// Возвращаемое значение:
//  Выборка - результат выборки.
//
Функция ОстаткиЗадолженностиПоГрафикуКредитаЗайма(ДоговорКредитаЗайма, Дата) Экспорт

	Результат = Новый Структура("СуммаОсновногоДолга, СуммаПроцентов, СуммаКомиссии", 0, 0, 0);
	
	Запрос = Новый Запрос("ВЫБРАТЬ
	                      |	СУММА(ЕСТЬNULL(ГрафикПогашенияКредитовИЗаймов.СуммаОсновногоДолга, 0)) КАК СуммаОсновногоДолга,
	                      |	СУММА(ЕСТЬNULL(ГрафикПогашенияКредитовИЗаймов.СуммаПроцентов, 0)) КАК СуммаПроцентов,
	                      |	СУММА(ЕСТЬNULL(ГрафикПогашенияКредитовИЗаймов.СуммаКомиссии, 0)) КАК СуммаКомиссии
	                      |ИЗ
	                      |	РегистрСведений.ГрафикПогашенияКредитовИЗаймов КАК ГрафикПогашенияКредитовИЗаймов
	                      |ГДЕ
	                      |	ГрафикПогашенияКредитовИЗаймов.ДоговорКредитаЗайма = &ДоговорКредитаЗайма
	                      |	И ГрафикПогашенияКредитовИЗаймов.Период > &Дата
	                      |	И ГрафикПогашенияКредитовИЗаймов.Активность");
	
	Запрос.УстановитьПараметр("ДоговорКредитаЗайма", ДоговорКредитаЗайма);
	Запрос.УстановитьПараметр("Дата", Дата);
	
	РезультатЗапроса = Запрос.Выполнить();
	Выборка = Запрос.Выполнить().Выбрать();
	
	Если Не РезультатЗапроса.Пустой() Тогда
		Выборка = РезультатЗапроса.Выбрать();
		Выборка.Следующий();
		ЗаполнитьЗначенияСвойств(Результат, Выборка);
	КонецЕсли;	
	
	Возврат Результат;
	
КонецФункции

#КонецОбласти

#КонецЕсли
