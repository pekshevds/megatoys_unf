
#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	ЗаполнитьСписокУчетныхЗаписей();
	
	НастроитьЭлементыФормы();
	
	КлючСохраненияПоложенияОкна = Заголовок;
	
КонецПроцедуры

&НаКлиенте
Процедура ОбработкаОповещения(ИмяСобытия, Параметр, Источник)
	
	Если ИмяСобытия = ЭлектроннаяПочтаУНФКлиентСервер.ИмяСобытияУчетнаяЗаписьОбновлена() Тогда
		ОбработатьПодключениеПочтовойСлужбыНаСервере(Параметр);
	ИначеЕсли ИмяСобытия = ЭлектроннаяПочтаУНФКлиентСервер.ИмяСобытияУчетнаяЗаписьЗаписана() Тогда
		ЗаполнитьСписокУчетныхЗаписей();
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовФормы

&НаКлиенте
Процедура УчетныеЗаписиВыбор(Элемент, ВыбраннаяСтрока, Поле, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	
	Если Поле = Элементы.Комментарий Тогда
		ТекущаяУчетнаяЗапись = Элементы.УчетныеЗаписи.ТекущиеДанные.УчетнаяЗапись;
		ОткрытьФорму("РегистрСведений.ОшибкиПодключенияЭлектроннойПочтыУНФ.ФормаСписка",
		Новый Структура("УчетнаяЗапись", ТекущаяУчетнаяЗапись));
	ИначеЕсли Поле = Элементы.УчетныеЗаписиСписокВсехОшибок Тогда
		ТекущаяУчетнаяЗапись = Элементы.УчетныеЗаписи.ТекущиеДанные.УчетнаяЗапись;
		ТекстОшибки = ПолучитьТекстПоследнейОшибки(ТекущаяУчетнаяЗапись);
		РаботаСПочтовымиСообщениямиКлиент.СообщитьОбОшибкеПодключения(ТекущаяУчетнаяЗапись, 
			НСтр("ru = 'Ошибки при подключении учетной записи'"), ТекстОшибки);	
	Иначе
		ОткрытьФорму("Справочник.УчетныеЗаписиЭлектроннойПочты.ФормаОбъекта",
		Новый Структура("Ключ", Элементы.УчетныеЗаписи.ТекущиеДанные.УчетнаяЗапись),
		ЭтотОбъект);
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ЗагружатьПочтуПриИзменении(Элемент)
	
	УстановитьПризнакЗагружатьПочту(
	Элементы.УчетныеЗаписи.ТекущиеДанные.УчетнаяЗапись,
	Элементы.УчетныеЗаписи.ТекущиеДанные.ЗагружатьПочту);
	
	Элементы.УчетныеЗаписи.ТекущиеДанные.Комментарий = "";
	
	Оповестить(ЭлектроннаяПочтаУНФКлиентСервер.ИмяСобытияИзмененСоставПодключенныхУчетныхЗаписей(),,
	ЭтотОбъект);
	
КонецПроцедуры

&НаКлиенте
Процедура ОсновнаяДляОтправкиПочтыПриИзменении(Элемент)
	
	Если Не Элементы.УчетныеЗаписи.ТекущиеДанные.ОсновнаяДляОтправкиПочты Тогда
		УстановитьОсновнуюУчетнуюЗапись(ПредопределенноеЗначение("Справочник.УчетныеЗаписиЭлектроннойПочты.ПустаяСсылка"));
		Возврат;
	КонецЕсли;
	
	Для Каждого ТекСтрока Из УчетныеЗаписи Цикл
		Если ТекСтрока.УчетнаяЗапись <> Элементы.УчетныеЗаписи.ТекущиеДанные.УчетнаяЗапись Тогда
			ТекСтрока.ОсновнаяДляОтправкиПочты = Не Элементы.УчетныеЗаписи.ТекущиеДанные.ОсновнаяДляОтправкиПочты
		КонецЕсли;
	КонецЦикла;
	
	УстановитьОсновнуюУчетнуюЗапись(Элементы.УчетныеЗаписи.ТекущиеДанные.УчетнаяЗапись);
	
КонецПроцедуры

&НаКлиенте
Процедура ПодключитьУчетнуюЗаписьОбработкаНавигационнойСсылки(Элемент, НавигационнаяСсылкаФорматированнойСтроки, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	
	Если НавигационнаяСсылкаФорматированнойСтроки = "IMAP" Тогда
		ОткрытьФорму("Справочник.УчетныеЗаписиЭлектроннойПочты.ФормаОбъекта");
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаСервере
Функция ПолучитьТекстПоследнейОшибки(УчетнаяЗапись)
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ ПЕРВЫЕ 1
	|	РегистрОшибок.ПодробноеПредставлениеОшибки КАК ПодробноеПредставлениеОшибки
	|ИЗ
	|	РегистрСведений.ОшибкиПодключенияЭлектроннойПочтыУНФ КАК РегистрОшибок
	|ГДЕ
	|	РегистрОшибок.УчетнаяЗапись = &УчетнаяЗапись
	|
	|УПОРЯДОЧИТЬ ПО
	|	РегистрОшибок.ДатаОшибки УБЫВ";
	
	Запрос.УстановитьПараметр("УчетнаяЗапись", УчетнаяЗапись);
	Выборка = Запрос.Выполнить().Выбрать();
	Пока Выборка.Следующий() Цикл
		Возврат Выборка.ПодробноеПредставлениеОшибки;
	КонецЦикла;
	
	Возврат "";
	
КонецФункции

&НаСервере
Процедура ЗаполнитьСписокУчетныхЗаписей()
	
	УчетныеЗаписи.Загрузить(
	РегистрыСведений.УчетныеЗаписиПользователя.НастройкаПользователя(
	Пользователи.ТекущийПользователь()));
	
	УчетнаяЗаписьДляОтправкиПочты = УправлениеНебольшойФирмойПовтИсп.ПолучитьЗначениеНастройки("ОсновнаяУчетнаяЗаписьЭлектроннойПочты");
	
	Для Каждого ТекУчетнаяЗапись Из УчетныеЗаписи Цикл
		
		Если ТекУчетнаяЗапись.УчетнаяЗапись = УчетнаяЗаписьДляОтправкиПочты Тогда
			ТекУчетнаяЗапись.ОсновнаяДляОтправкиПочты = Истина;
		КонецЕсли;
		
		ОтобразитьКомментарий(ТекУчетнаяЗапись)
		
	КонецЦикла;
	
	Если ЗначениеЗаполнено(УчетныеЗаписи) Тогда
		Элементы.УчетныеЗаписи.Видимость = Истина;
		Заголовок = НСтр("ru = 'Мои учетные записи'");
	Иначе
		Элементы.УчетныеЗаписи.Видимость = Ложь;
		Заголовок = НСтр("ru = 'Учетные записи не подключены'");
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура ОтобразитьКомментарий(ТекУчетнаяЗапись)
	
	КоличествоОшибокПодключения = РегистрыСведений.ОшибкиПодключенияЭлектроннойПочтыУНФ.КоличествоОшибокПодключения(ТекУчетнаяЗапись.УчетнаяЗапись);
	Если Не ЗначениеЗаполнено(КоличествоОшибокПодключения) Тогда
		Возврат;
	КонецЕсли;
	
	Если ТекУчетнаяЗапись.ЗагружатьПочту Тогда
		
		ФорматнаяСтрокаСклонения = ";%1 ошибка подключения;;%1 ошибки  подключения;%1 ошибок подключения;%1 ошибки  подключения";
		ТекУчетнаяЗапись.Комментарий = СтроковыеФункцииКлиентСервер.СтрокаСЧисломДляЛюбогоЯзыка(ФорматнаяСтрокаСклонения, КоличествоОшибокПодключения);
		ТекУчетнаяЗапись.СписокВсехОшибок = НСтр("ru = 'Инструкция по устранению'");
		
	Иначе
		
		ТекУчетнаяЗапись.Комментарий = НСтр("ru = 'Отключена из-за множественных ошибок'");
		
	КонецЕсли;
	
	Элементы.Комментарий.Видимость = Истина;
	Элементы.УчетныеЗаписиСписокВсехОшибок.Видимость = Истина;
	
КонецПроцедуры

&НаСервере
Процедура НастроитьЭлементыФормы()
	
	Элементы.УчетныеЗаписи.ТолькоПросмотр = Не ПравоДоступа("Редактирование",
	Метаданные.РегистрыСведений.УчетныеЗаписиПользователя);
	
	Элементы.ПодключитьПочтовуюСлужбу.Видимость = ПравоДоступа("Добавление",
	Метаданные.Справочники.УчетныеЗаписиЭлектроннойПочты);
	
КонецПроцедуры

&НаСервереБезКонтекста
Процедура УстановитьПризнакЗагружатьПочту(Знач УчетнаяЗапись, Знач ЗагружатьПочту)
	
	РегистрыСведений.ОшибкиПодключенияЭлектроннойПочтыУНФ.ОчиститьЗарегистрированныеОшибки(
	УчетнаяЗапись);
	
	РегистрыСведений.УчетныеЗаписиПользователя.УстановитьПризнакЗагружатьПочту(
	Пользователи.ТекущийПользователь(),
	УчетнаяЗапись,
	ЗагружатьПочту);
	
	Если ЗагружатьПочту Тогда
		УстановитьПризнакИспользоватьДляПолучения(УчетнаяЗапись);
	КонецЕсли;
	
КонецПроцедуры

&НаСервереБезКонтекста
Процедура УстановитьПризнакИспользоватьДляПолучения(Знач УчетнаяЗапись)
	
	УстановитьПривилегированныйРежим(Истина);
	
	УчетнаяЗаписьОбъект = УчетнаяЗапись.ПолучитьОбъект();
	УчетнаяЗаписьОбъект.ИспользоватьДляПолучения = Истина;
	УчетнаяЗаписьОбъект.Записать();

КонецПроцедуры

&НаСервереБезКонтекста
Процедура УстановитьОсновнуюУчетнуюЗапись(УчетнаяЗапись)
	
	РегистрыСведений.НастройкиПользователей.Установить(
	УчетнаяЗапись, 
	"ОсновнаяУчетнаяЗаписьЭлектроннойПочты",
	Пользователи.ТекущийПользователь());
	
	Если Не ЗначениеЗаполнено(УчетнаяЗапись) Тогда
		Возврат;
	КонецЕсли;
	
	Если Не ОбщегоНазначения.ЗначениеРеквизитаОбъекта(УчетнаяЗапись, "ИспользоватьДляОтправки") Тогда
		УчетнаяЗаписьОбъект = УчетнаяЗапись.ПолучитьОбъект();
		УчетнаяЗаписьОбъект.ИспользоватьДляОтправки = Истина;
		УчетнаяЗаписьОбъект.Записать();
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура ОбработатьПодключениеПочтовойСлужбыНаСервере(Знач УчетнаяЗапись)
	
	УстановитьПризнакЗагружатьПочту(УчетнаяЗапись, Истина);
	
	ЗаполнитьСписокУчетныхЗаписей();
	
	НайденныеСтроки = УчетныеЗаписи.НайтиСтроки(Новый Структура("УчетнаяЗапись", УчетнаяЗапись));
	Если ЗначениеЗаполнено(НайденныеСтроки) Тогда
		Элементы.УчетныеЗаписи.ТекущаяСтрока = НайденныеСтроки[0].ПолучитьИдентификатор();
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти