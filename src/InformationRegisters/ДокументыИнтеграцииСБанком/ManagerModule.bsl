#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область ПрограммныйИнтерфейс

// Возращает номер с префиксми и лидирующими нулями.
//
// Параметры:
//   Номер - Строка - номер без префиксов и лидирующих нулей;
//   Префикс - Строка
//
// Возвращаемое значение
//   Строка - номер объекта с префиксами и лидирующими нулями.
//
Функция НомерОбъектаСПрефиксомБанкаИнтеграции(Знач Номер, Организация, БанковскийСчет) Экспорт
	
	Банк = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(БанковскийСчет, "Банк");
	
	ПрефиксНомера = ПрефиксНомераОрганизации(Организация, ИнтеграцияСБанкамиПовтИсп.ПрефиксБанкаИнтеграции(Банк));
	ШаблонНомера = "[Префикс][Номер]";
	ШаблонНомера = СтрЗаменить(ШаблонНомера, "[Префикс]", ПрефиксНомера);
	
	ДополнитьСтрокуНулямиСлева(Номер, 6);
	Номер = СтрЗаменить(ШаблонНомера, "[Номер]", Номер);
	
	Возврат Номер;
	
КонецФункции

// Устанавливает для объекта интеграции статус "Обмен завершен".
//
// Параметры:
//  Документ - ДокументСсылка - документ, для которого нужно установить статус "ОбменЗавершен".
//
Процедура УстановитьСостояниеОбменЗавершен(Документ) Экспорт
	
	СостояниеИнтеграцииСБанком = СостояниеИнтеграцииСБанкомПоДаннымБазы(Документ);
	
	Если НЕ ЗначениеЗаполнено(СостояниеИнтеграцииСБанком)
		ИЛИ СостояниеИнтеграцииСБанком.Состояние = Перечисления.СостоянияДокументовИнтеграцииСБанком.ОбменЗавершен Тогда
		Возврат;
	КонецЕсли;
	
	СостояниеИнтеграцииСБанком.Состояние   = Перечисления.СостоянияДокументовИнтеграцииСБанком.ОбменЗавершен;
	СостояниеИнтеграцииСБанком.ТекстОшибки = "";
	
	ЗаписатьДокументИнтеграцииСБанком(Документ, СостояниеИнтеграцииСБанком);
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

Функция СостояниеИнтеграцииСБанкомПоДаннымБазы(Документ)
	
	Запрос = Новый Запрос();
	Запрос.Параметры.Вставить("Документ", Документ);
	Запрос.Текст =
	"ВЫБРАТЬ
	|	ДокументыИнтеграцииСБанком.Состояние КАК Состояние,
	|	ДокументыИнтеграцииСБанком.Идентификатор КАК Идентификатор,
	|	ДокументыИнтеграцииСБанком.ХешСумма КАК ХешСумма,
	|	ДокументыИнтеграцииСБанком.НастройкаИнтеграции КАК НастройкаИнтеграции,
	|	ДокументыИнтеграцииСБанком.ТекстОшибки КАК ТекстОшибки
	|ИЗ
	|	РегистрСведений.ДокументыИнтеграцииСБанком КАК ДокументыИнтеграцииСБанком
	|ГДЕ
	|	ДокументыИнтеграцииСБанком.Документ = &Документ";
	
	Выборка = Запрос.Выполнить().Выбрать();
	Если Выборка.Следующий() Тогда
		СостояниеИнтеграцииСБанком = НовыйСостояниеИнтеграцииСБанком();
		ЗаполнитьЗначенияСвойств(СостояниеИнтеграцииСБанком, Выборка);
		Возврат СостояниеИнтеграцииСБанком;
	КонецЕсли;
	
	Возврат Неопределено;
	
КонецФункции

Функция НовыйСостояниеИнтеграцииСБанком()
	
	СостояниеИнтеграцииСБанком = Новый Структура();
	СостояниеИнтеграцииСБанком.Вставить("Состояние",     Перечисления.СостоянияДокументовИнтеграцииСБанком.ПустаяСсылка());
	СостояниеИнтеграцииСБанком.Вставить("Идентификатор", "");
	СостояниеИнтеграцииСБанком.Вставить("ХешСумма",      0);
	СостояниеИнтеграцииСБанком.Вставить("НастройкаИнтеграции", Справочники.НастройкиИнтеграцииСБанками.ПустаяСсылка());
	СостояниеИнтеграцииСБанком.Вставить("ТекстОшибки",   "");
	Возврат СостояниеИнтеграцииСБанком;
	
КонецФункции

Процедура ЗаписатьДокументИнтеграцииСБанком(Документ, СостояниеИнтеграции);
	
	РеквизитыДокумента = ОбщегоНазначения.ЗначенияРеквизитовОбъекта(Документ, "Организация, Дата");
	
	Набор = РегистрыСведений.ДокументыИнтеграцииСБанком.СоздатьНаборЗаписей();
	Набор.Отбор.Документ.Установить(Документ);
	Запись = Набор.Добавить();
	Запись.Документ    = Документ;
	Запись.Организация = РеквизитыДокумента.Организация;
	Запись.Дата        = РеквизитыДокумента.Дата;
	ЗаполнитьЗначенияСвойств(Запись, СостояниеИнтеграции);
	Набор.Записать();
	
КонецПроцедуры

#Область ОбработкаДополнительнойИнформации

// Возращает префикс номера организации, с учетом переданного префикса.
//
// Параметры:
//   Организация - СправочникСсылка.Организации - организация, для которой нужно получить префикс номера;
//   ПрефиксИБ - Строка - префикс, устанавливаемый на место префикса информационной базы
//
// Возвращаемое значение
//   Строка - префикс номера, с учетом префикса организации и переданного префикса.
//
Функция ПрефиксНомераОрганизации(Организация, Знач ПрефиксИБ)
	
	Префикс = "";
	ДополнитьСтрокуНулямиСлева(ПрефиксИБ, 2);
	
	ПрефиксОрганизации = "";
	ПрефиксацияОбъектовСобытия.ПриОпределенииПрефиксаОрганизации(Организация, ПрефиксОрганизации);
	ДополнитьСтрокуНулямиСлева(ПрефиксОрганизации, 2);
	
	ШаблонПрефикса = "[ОР][ИБ]-[Префикс]";
	ШаблонПрефикса = СтрЗаменить(ШаблонПрефикса, "[ОР]", ПрефиксОрганизации);
	ШаблонПрефикса = СтрЗаменить(ШаблонПрефикса, "[ИБ]", ПрефиксИБ);
	
	Префикс = СтрЗаменить(ШаблонПрефикса, "[Префикс]", Префикс);
	
	Возврат Префикс;
	
КонецФункции

Процедура ДополнитьСтрокуНулямиСлева(Строка, ДлинаСтроки)
	
	Строка = СтроковыеФункцииКлиентСервер.ДополнитьСтроку(Строка, ДлинаСтроки, "0", "Слева");
	
КонецПроцедуры

#КонецОбласти

#КонецОбласти

#КонецЕсли
