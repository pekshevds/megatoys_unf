
#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	ПроверитьУстановитьФункциональныеОпцииДляПЦ();
	
	РазделениеВключено = ОбщегоНазначения.РазделениеВключено();
	ПроверитьАдресПубликацииНаСервере();
	
	КлиентПодключенЧерезВебСервер = ОбщегоНазначения.КлиентПодключенЧерезВебСервер();
	
	Если Не РазделениеВключено И ЗначениеЗаполнено(АдресПубликации) И Не КлиентПодключенЧерезВебСервер Тогда
		ПроверитьПубликациюВебСервисовНаСервере(); 
	ИначеЕсли РазделениеВключено Или КлиентПодключенЧерезВебСервер Тогда
		ВебСервисыОпубликованы = Истина;
		Элементы.ГруппаПроверкаВебСервисов.Видимость = Ложь;
	Иначе
		Элементы.ГруппаПроверкаВебСервисов.Видимость = Ложь;
	КонецЕсли;
	
	Если Запись.ИсходныйКлючЗаписи.Пустой() Тогда
		
		Запись.Пользователь = Пользователи.ТекущийПользователь();
		
	 	ТекущаяВерсия =ВерсияКонфигурацииЧислом();
		Запрос = Новый Запрос;
		Если ТекущаяВерсия >= 1627 Тогда
			Запрос.Текст = 
			"ВЫБРАТЬ
			|	КОЛИЧЕСТВО(РАЗЛИЧНЫЕ ПодключаемоеОборудование.Ссылка) КАК КоличествоОборудований
			|ПОМЕСТИТЬ ВТ_Объединение
			|ИЗ
			|	Справочник.ПодключаемоеОборудование КАК ПодключаемоеОборудование
			|ГДЕ
			|	ПодключаемоеОборудование.Наименование ПОДОБНО &Наименование
			|
			|ОБЪЕДИНИТЬ ВСЕ
			|
			|ВЫБРАТЬ
			|	КОЛИЧЕСТВО(РАЗЛИЧНЫЕ ОфлайнОборудование.Ссылка)
			|ИЗ
			|	Справочник.ОфлайнОборудование КАК ОфлайнОборудование
			|ГДЕ
			|	ОфлайнОборудование.Наименование ПОДОБНО &Наименование
			|;
			|
			|////////////////////////////////////////////////////////////////////////////////
			|ВЫБРАТЬ
			|	СУММА(ВТ_Объединение.КоличествоОборудований) КАК КоличествоОборудований
			|ИЗ
			|	ВТ_Объединение КАК ВТ_Объединение";   
		Иначе
			Запрос.Текст = 
			"ВЫБРАТЬ
			|	КОЛИЧЕСТВО(РАЗЛИЧНЫЕ ПодключаемоеОборудование.Ссылка) КАК КоличествоОборудований
			|ИЗ
			|	Справочник.ПодключаемоеОборудование КАК ПодключаемоеОборудование
			|ГДЕ
			|	ПодключаемоеОборудование.Наименование ПОДОБНО &Наименование";   
		КонецЕсли;
		
		Запрос.УстановитьПараметр("Наименование", "1С:Проверка ценников%");
		
		РезультатЗапроса = Запрос.Выполнить();
		
		ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
		
		КоличествоОборудований = 0;
		Если ВыборкаДетальныеЗаписи.Следующий() Тогда
			КоличествоОборудований = ВыборкаДетальныеЗаписи.КоличествоОборудований;
		КонецЕсли;
		
		ИдентификаторWebСервисОборудования = "PriceChecker";
		НомерНовогоОборудования = 1;
		Если КоличествоОборудований > 0 Тогда
			НомерНовогоОборудования = Строка(КоличествоОборудований);
			ИдентификаторWebСервисОборудования = ИдентификаторWebСервисОборудования + " #" + НомерНовогоОборудования;
		КонецЕсли;
		
		Если Не ИдентификаторОборудованияУникален(ИдентификаторWebСервисОборудования) Тогда
			ИдентификаторWebСервисОборудования = Строка(Новый УникальныйИдентификатор);
		КонецЕсли;
		
		Наименование = НСтр("ru='%1 (%2)'");
		Запись.Наименование = СтрШаблон(Наименование, ИмяДляВхода, ИдентификаторWebСервисОборудования);
		
		
		УстановитьПривилегированныйРежим(Истина);
		СвойстваПользователя = Пользователи.СвойстваПользователяИБ(ОбщегоНазначения.ЗначениеРеквизитаОбъекта(Запись.Пользователь, "ИдентификаторПользователяИБ"));
		ИмяДляВхода = СвойстваПользователя.Имя;
		УстановитьПривилегированныйРежим(Ложь);
		
		ЭтаФорма.ПоложениеКоманднойПанели = ПоложениеКоманднойПанелиФормы.Нет;
		Элементы.ГруппаQRКод.Видимость = Ложь;
		Элементы.Декорация3.Видимость = Ложь;
		
		РабочееМесто = МенеджерОборудованияВызовСервера.РабочееМестоКлиента();
		
	Иначе
		
		Если ТипЗнч(Запись.ПодключаемоеОборудование) = Тип("СправочникСсылка.ПодключаемоеОборудование") Тогда
			ДанныеОборудования = ОбщегоНазначения.ЗначенияРеквизитовОбъекта(Запись.ПодключаемоеОборудование, "РабочееМесто, ПравилоОбмена, УдалитьИдентификаторWebСервисОборудования, Параметры");
			ИдентификаторWebСервисОборудования = ДанныеОборудования.УдалитьИдентификаторWebСервисОборудования;
		ИначеЕсли ТипЗнч(Запись.ПодключаемоеОборудование) = Тип("СправочникСсылка.ОфлайнОборудование") Тогда	
			ДанныеОборудования = ОбщегоНазначения.ЗначенияРеквизитовОбъекта(Запись.ПодключаемоеОборудование, "РабочееМесто, ПравилоОбмена, ИдентификаторWebСервисОборудования, Параметры");
			ИдентификаторWebСервисОборудования = ДанныеОборудования.ИдентификаторWebСервисОборудования;
		КонецЕсли;
		
		РабочееМесто = ДанныеОборудования.РабочееМесто;
		ПравилоОбмена = ДанныеОборудования.ПравилоОбмена;
		КоличествоЭлементовВПакете = ДанныеОборудования.Параметры.Получить().КоличествоЭлементовВПакете;
		
		УстановитьПривилегированныйРежим(Истина);
		СвойстваПользователя = Пользователи.СвойстваПользователяИБ(ОбщегоНазначения.ЗначениеРеквизитаОбъекта(Запись.Пользователь, "ИдентификаторПользователяИБ"));
		ИмяДляВхода = СвойстваПользователя.Имя;
		УстановитьПривилегированныйРежим(Ложь);
		
		УстановитьQRКод();
		
		Элементы.ГруппаСоздатьQRКод.Видимость = Ложь;
		Элементы.Группа12.Видимость = Ложь;
		
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ОбработкаОповещения(ИмяСобытия, Параметр, Источник)
	
	Если ИмяСобытия = "Запись_НаборКонстант" Тогда 
		ПроверитьАдресПубликацииНаСервере();
		Если Не ПустаяСтрока(АдресПубликации) И Не РазделениеВключено И Не КлиентПодключенЧерезВебСервер Тогда
			ПроверитьПубликациюВебСервисовНаСервере();
		КонецЕсли
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура ПослеЗаписиНаСервере(ТекущийОбъект, ПараметрыЗаписи)
	УстановитьQRКод();
КонецПроцедуры

&НаСервере
Процедура ПередЗаписьюНаСервере(Отказ, ТекущийОбъект, ПараметрыЗаписи)
	
	ТекущаяВерсия =ВерсияКонфигурацииЧислом();
	Если Запись.ИсходныйКлючЗаписи.Пустой() Тогда
		
		Если Не ИдентификаторОборудованияУникален(ИдентификаторWebСервисОборудования) Тогда
			ИдентификаторWebСервисОборудования = Строка(Новый УникальныйИдентификатор);
		КонецЕсли;
		
		Наименование = НСтр("ru='%1 (%2)'");
		ТекущийОбъект.Наименование = СтрШаблон(Наименование, ИмяДляВхода, ИдентификаторWebСервисОборудования);
		
		СтруктураКлючевыхПараметров = Новый Структура;  
		СтруктураКлючевыхПараметров.Вставить("ТипОборудования", ПредопределенноеЗначение("Перечисление.ТипыПодключаемогоОборудования.УдалитьККМОфлайн"));				
		СтруктураКлючевыхПараметров.Вставить("РабочееМесто", РабочееМесто);				
		СтруктураКлючевыхПараметров.Вставить("УдалитьИдентификаторWebСервисОборудования", ИдентификаторWebСервисОборудования);				
		Если ТекущаяВерсия >= 1627 Тогда
			СтруктураКлючевыхПараметров.Вставить("ТипОфлайнОборудования", ПредопределенноеЗначение("Перечисление.ТипыОфлайнОборудования.ПрайсЧекер"));				
			СтруктураКлючевыхПараметров.Вставить("ОбработчикОфлайнОборудования", ПредопределенноеЗначение("Перечисление.ОбработчикиОфлайнОборудования.Обработчик1СККМОфлайн"));				
			СтруктураКлючевыхПараметров.Вставить("ИдентификаторWebСервисОборудования", ИдентификаторWebСервисОборудования);				
		КонецЕсли;
		
		НачатьТранзакцию();
		Попытка
			Если ТекущаяВерсия >= 1627 Тогда
				БлокировкаДанных = Новый БлокировкаДанных;
				ЭлементБлокировкиДанных = БлокировкаДанных.Добавить("Справочник.ОфлайнОборудование");
				ЭлементБлокировкиДанных.Режим = РежимБлокировкиДанных.Разделяемый;
				БлокировкаДанных.Заблокировать();
				
				ОфлайнОборудованиеОбъект = Справочники["ОфлайнОборудование"].СоздатьЭлемент();
				
				ЗаполнитьЗначенияСвойств(ОфлайнОборудованиеОбъект, СтруктураКлючевыхПараметров);
				ОфлайнОборудованиеОбъект.Организация = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(ПравилоОбмена, "Организация");
				Наименование = НСтр("ru='1С:Проверка ценников (%1)'");
				ОфлайнОборудованиеОбъект.Наименование = СтрШаблон(Наименование, ИдентификаторWebСервисОборудования);
				ОфлайнОборудованиеОбъект.ПравилоОбмена = ПравилоОбмена;
				ОфлайнОборудованиеОбъект.Записать();     
				
				ПараметрыОборудования = Новый Структура;
				ПараметрыОборудования.Вставить("ВерсияФорматаОбмена", 1007);
				ПараметрыОборудования.Вставить("ВидТранспортаОфлайнОбмена", Перечисления.ВидыТранспортаОфлайнОбмена.WS);
				ПараметрыОборудования.Вставить("УдалитьИдентификаторWebСервисОборудования", ИдентификаторWebСервисОборудования);
				ПараметрыОборудования.Вставить("КоличествоЭлементовВПакете", КоличествоЭлементовВПакете);
				
				МодульМенеджерОфлайнОборудованияВызовСервера = ОбщегоНазначения.ОбщийМодуль("МенеджерОфлайнОборудованияВызовСервера");
				РезультатЗаписиНастроек = МодульМенеджерОфлайнОборудованияВызовСервера.СохранитьПараметрыУстройства(ОфлайнОборудованиеОбъект.Ссылка, ПараметрыОборудования);
				
				Если НЕ РезультатЗаписиНастроек Тогда 
					СообщениеОбОшибке = НСтр("ru='Не удалось сохранить параметры устройства.'");
					ВызватьИсключение СообщениеОбОшибке;
				КонецЕсли;     
				
			Иначе
				БлокировкаДанных = Новый БлокировкаДанных;
				ЭлементБлокировкиДанных = БлокировкаДанных.Добавить("Справочник.ПодключаемоеОборудование");
				ЭлементБлокировкиДанных.Режим = РежимБлокировкиДанных.Разделяемый;
				БлокировкаДанных.Заблокировать();
				
				ПодключаемоеОборудованиеОбъект = Справочники.ПодключаемоеОборудование.СоздатьЭлемент();
				
				ЗаполнитьЗначенияСвойств(ПодключаемоеОборудованиеОбъект, СтруктураКлючевыхПараметров);
				ПодключаемоеОборудованиеОбъект.Организация = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(ПравилоОбмена, "Организация");
				Наименование = НСтр("ru='1С:Проверка ценников (%1)'");
				ПодключаемоеОборудованиеОбъект.Наименование = СтрШаблон(Наименование, ИдентификаторWebСервисОборудования);
				ПодключаемоеОборудованиеОбъект.УстройствоИспользуется = Истина;
				ПодключаемоеОборудованиеОбъект.ПравилоОбмена = ПравилоОбмена;
				ПодключаемоеОборудованиеОбъект.Записать();     
				
				ПараметрыОборудования = Новый Структура;
				ПараметрыОборудования.Вставить("ВерсияФорматаОбмена", 1007);
				ПараметрыОборудования.Вставить("ВидТранспортаОфлайнОбмена", Перечисления.ВидыТранспортаОфлайнОбмена.WS);
				ПараметрыОборудования.Вставить("УдалитьИдентификаторWebСервисОборудования", ИдентификаторWebСервисОборудования);
				ПараметрыОборудования.Вставить("КоличествоЭлементовВПакете", КоличествоЭлементовВПакете);
				
				РезультатЗаписиНастроек = МенеджерОборудованияВызовСервера.СохранитьПараметрыУстройства(ПодключаемоеОборудованиеОбъект.Ссылка, ПараметрыОборудования);
				
				Если НЕ РезультатЗаписиНастроек Тогда 
					СообщениеОбОшибке = НСтр("ru='Не удалось сохранить параметры устройства.'");
					ВызватьИсключение СообщениеОбОшибке;
				КонецЕсли; 
			КонецЕсли; 
				
			ЗафиксироватьТранзакцию();
		Исключение   
			ОтменитьТранзакцию();
			ОбщегоНазначения.СообщитьПользователю(КраткоеПредставлениеОшибки(ИнформацияОбОшибке()));    
			Отказ = Истина;
			Возврат;
		КонецПопытки;   
		
		ТекущийОбъект.ПодключаемоеОборудование = ОфлайнОборудованиеОбъект.Ссылка;
	Иначе
		
		НачатьТранзакцию();
		Попытка
			Если ТекущаяВерсия >= 1627 Тогда 
				                          
				Если ТипЗнч(Запись.ПодключаемоеОборудование) = Тип("СправочникСсылка.ОфлайнОборудование") Тогда	
					ОфлайнОборудованиеОбъект = Запись.ПодключаемоеОборудование.ПолучитьОбъект();      
					
					Блокировка = Новый БлокировкаДанных;
					ЭлементБлокировки = Блокировка.Добавить("Справочник.ОфлайнОборудование");
					ЭлементБлокировки.УстановитьЗначение("Ссылка", Запись.ПодключаемоеОборудование);
					ЭлементБлокировки.Режим = РежимБлокировкиДанных.Исключительный;
					Блокировка.Заблокировать();
				Иначе   
					
					ОфлайнОборудованиеОбъект = Справочники["ОфлайнОборудование"].СоздатьЭлемент();
					СсылкаНового = Справочники["ОфлайнОборудование"].ПолучитьСсылку(); 
					ОфлайнОборудованиеОбъект.УстановитьСсылкуНового(СсылкаНового); 
					ТекущийОбъект.ПодключаемоеОборудование = СсылкаНового;   
					
					БлокировкаДанных = Новый БлокировкаДанных;
					ЭлементБлокировкиДанных = БлокировкаДанных.Добавить("Справочник.ОфлайнОборудование");
					ЭлементБлокировкиДанных.Режим = РежимБлокировкиДанных.Разделяемый;
					БлокировкаДанных.Заблокировать();
				КонецЕсли;
				
				Наименование = НСтр("ru='1С:Проверка ценников (%1)'");
				ОфлайнОборудованиеОбъект.Наименование = СтрШаблон(Наименование, ИдентификаторWebСервисОборудования);
				ОфлайнОборудованиеОбъект.ИдентификаторWebСервисОборудования = ИдентификаторWebСервисОборудования; 
				
				ОфлайнОборудованиеОбъект.РабочееМесто = РабочееМесто;
				ОфлайнОборудованиеОбъект.Организация = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(ПравилоОбмена, "Организация");
				ОфлайнОборудованиеОбъект.ПравилоОбмена = ПравилоОбмена;
				ОфлайнОборудованиеОбъект.ТипОфлайнОборудования = Перечисления.ТипыОфлайнОборудования.ПрайсЧекер;				
				ОфлайнОборудованиеОбъект.ОбработчикОфлайнОборудования = Перечисления.ОбработчикиОфлайнОборудования.Обработчик1СККМОфлайн;				
				ОфлайнОборудованиеОбъект.Записать();     
					
				ПараметрыОборудования = Новый Структура;
				ПараметрыОборудования.Вставить("ВерсияФорматаОбмена", 1007);
				ПараметрыОборудования.Вставить("ВидТранспортаОфлайнОбмена", Перечисления.ВидыТранспортаОфлайнОбмена.WS);
				ПараметрыОборудования.Вставить("УдалитьИдентификаторWebСервисОборудования", ИдентификаторWebСервисОборудования);
				ПараметрыОборудования.Вставить("КоличествоЭлементовВПакете", КоличествоЭлементовВПакете);
				
				МодульМенеджерОфлайнОборудованияВызовСервера = ОбщегоНазначения.ОбщийМодуль("МенеджерОфлайнОборудованияВызовСервера");
				РезультатЗаписиНастроек = МодульМенеджерОфлайнОборудованияВызовСервера.СохранитьПараметрыУстройства(ОфлайнОборудованиеОбъект.Ссылка, ПараметрыОборудования);
				
				Наименование = НСтр("ru='%1 (%2)'");
				ТекущийОбъект.Наименование = СтрШаблон(Наименование, ИмяДляВхода, ИдентификаторWebСервисОборудования);
				
				Если НЕ РезультатЗаписиНастроек Тогда 
					СообщениеОбОшибке = НСтр("ru='Не удалось сохранить параметры устройства.'");
					ВызватьИсключение СообщениеОбОшибке;
				КонецЕсли;    
				
			Иначе 
				Блокировка = Новый БлокировкаДанных;
				ЭлементБлокировки = Блокировка.Добавить("Справочник.ПодключаемоеОборудование");
				ЭлементБлокировки.УстановитьЗначение("Ссылка", Запись.ПодключаемоеОборудование);
				ЭлементБлокировки.Режим = РежимБлокировкиДанных.Исключительный;
				Блокировка.Заблокировать();
				ПодключаемоеОборудованиеОбъект = Запись.ПодключаемоеОборудование.ПолучитьОбъект();  
				
				Наименование = НСтр("ru='1С:Проверка ценников (%1)'");
				ПодключаемоеОборудованиеОбъект.Наименование = СтрШаблон(Наименование, ИдентификаторWebСервисОборудования);
				
				ПодключаемоеОборудованиеОбъект.РабочееМесто = РабочееМесто;
				ПодключаемоеОборудованиеОбъект.Организация = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(ПравилоОбмена, "Организация");
				ПодключаемоеОборудованиеОбъект.ПравилоОбмена = ПравилоОбмена;
				ПодключаемоеОборудованиеОбъект.Записать();     
				
				ПараметрыОборудования = Новый Структура;
				ПараметрыОборудования.Вставить("ВерсияФорматаОбмена", 1007);
				ПараметрыОборудования.Вставить("ВидТранспортаОфлайнОбмена", Перечисления.ВидыТранспортаОфлайнОбмена.WS);
				ПараметрыОборудования.Вставить("УдалитьИдентификаторWebСервисОборудования", ИдентификаторWebСервисОборудования);
				ПараметрыОборудования.Вставить("КоличествоЭлементовВПакете", КоличествоЭлементовВПакете);
				
				РезультатЗаписиНастроек = МенеджерОборудованияВызовСервера.СохранитьПараметрыУстройства(ПодключаемоеОборудованиеОбъект.Ссылка, ПараметрыОборудования);
				
				Наименование = НСтр("ru='%1 (%2)'");
				ТекущийОбъект.Наименование = СтрШаблон(Наименование, ИмяДляВхода, ИдентификаторWebСервисОборудования);
				
				Если НЕ РезультатЗаписиНастроек Тогда 
					СообщениеОбОшибке = НСтр("ru='Не удалось сохранить параметры устройства.'");
					ВызватьИсключение СообщениеОбОшибке;
				КонецЕсли;
				
			КонецЕсли;
			
			ЗафиксироватьТранзакцию();
		Исключение   
			ОтменитьТранзакцию();
			ОбщегоНазначения.СообщитьПользователю(КраткоеПредставлениеОшибки(ИнформацияОбОшибке()));    
			Отказ = Истина;
			Возврат;
		КонецПопытки;
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура ОбработкаПроверкиЗаполненияНаСервере(Отказ, ПроверяемыеРеквизиты)
	
	Если Не ЗначениеЗаполнено(ПравилоОбмена) Тогда
		ОбщегоНазначения.СообщитьПользователю(
		НСтр("ru = 'Поле ""Правило обмена"" не заполнено'"),
		,
		"ПравилоОбмена");
		Отказ = Истина;
	КонецЕсли;
	
	Если Не ЗначениеЗаполнено(Запись.Пользователь) Тогда
		ОбщегоНазначения.СообщитьПользователю(
		НСтр("ru = 'Поле ""Пользователь"" не заполнено'"),
		,
		"Запись.Пользователь");
		Отказ = Истина;
	КонецЕсли;
	
	Если Не ЗначениеЗаполнено(РабочееМесто) Тогда
		ОбщегоНазначения.СообщитьПользователю(
		НСтр("ru = 'Поле ""Рабочее место"" не заполнено'"),
		,
		"РабочееМесто");
		Отказ = Истина;
	КонецЕсли;
	
	Если Не ЗначениеЗаполнено(АдресПубликации) Тогда
		ОбщегоНазначения.СообщитьПользователю(
		НСтр("ru = 'Адрес публикации информационной базы не создан'"),
		,
		"ДекорацияQRКодНадпись");
		Элементы.ДекорацияQRКодКартинка.Видимость = Истина;
		Отказ = Истина; 
		Возврат;
	КонецЕсли;
	
	Если НЕ РазделениеВключено И Не ВебСервисыОпубликованы Тогда
		ОбщегоНазначения.СообщитьПользователю(
		НСтр("ru = 'Не опубликованы веб-сервисы EquipmentService и MobileService'"),
		,
		"ДекорацияВебСервисыНадпись");
		Элементы.ГруппаПроверкаВебСервисов.Видимость = Истина;
		Элементы.ДекорацияПроверкаВебСервиса.Видимость = Истина;
		Отказ = Истина;
	КонецЕсли;

КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовШапкиФормы

&НаКлиенте
Процедура Декорация4Нажатие(Элемент)
	
	Оповещение = Новый ОписаниеОповещения("ПослеВводаСтроки", ЭтотОбъект);
	
	ПоказатьВводСтроки(Оповещение, ИдентификаторWebСервисОборудования, "Идентификатор оборудования", 36, Ложь);
	
КонецПроцедуры

&НаКлиенте
Процедура ДекорацияQRКодНадписьОбработкаНавигационнойСсылки(Элемент, НавигационнаяСсылкаФорматированнойСтроки, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	
	ОткрытьФорму(
	"Обработка.ПанельАдминистрированияБСП.Форма.ОбщиеНастройки",
	Новый Структура,
	,
	"Обработка.ПанельАдминистрированияБСП.Форма.ОбщиеНастройки.ОтдельноеОкно");
	
КонецПроцедуры

&НаКлиенте
Процедура ПользовательПриИзменении(Элемент)
	ПользовательПриИзмененииНаСервере();
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаСервере
Процедура ПроверитьАдресПубликацииНаСервере()
	
	Если НЕ РазделениеВключено Тогда 
		АдресПубликации = Константы.АдресПубликацииИнформационнойБазыВИнтернете.Получить();
		Если ПустаяСтрока(АдресПубликации) Тогда
			Элементы.ГруппаQRПредупреждение.Видимость = Истина;
		Иначе
			Элементы.ГруппаQRПредупреждение.Видимость = Ложь;
		КонецЕсли; 
	Иначе
		АдресПубликации = ПолучитьНавигационнуюСсылкуИнформационнойБазы();
		Элементы.ГруппаQRПредупреждение.Видимость = Ложь;
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура УстановитьQRКод()
	
	QRСтрока = "PriceChecker" + ";" + АдресПубликации + ";" + ИдентификаторWebСервисОборудования + ";" + ИмяДляВхода;
	ДанныеQRКода = ГенерацияШтрихкода.ДанныеQRКода(QRСтрока, 0, 190);
	QRКод = ПоместитьВоВременноеХранилище(ДанныеQRКода, УникальныйИдентификатор);
	
	Элементы.Группа4.Видимость = Ложь;
	Элементы.ГруппаДанныеДляВхода.Видимость = Истина;
	
	Элементы.ГруппаQRКод.Видимость = Истина;
	Элементы.Декорация3.Видимость = Истина;
	
	Элементы.ГруппаСоздатьQRКод.Видимость = Ложь;
	
	ЭтаФорма.ПоложениеКоманднойПанели = ПоложениеКоманднойПанелиФормы.Авто; 
	
	Элементы.Группа12.Видимость = Ложь;
КонецПроцедуры

&НаКлиенте
Процедура ПослеВводаСтроки(Результат, Параметры) Экспорт
	
	Если Результат = Неопределено Тогда
	
		Возврат
	
	КонецЕсли;
	
	Если НЕ ИдентификаторОборудованияУникален(Результат) Тогда
		
		ПоказатьПредупреждение(, НСтр("ru = 'Введенный идентификатор занят другим подключаемым оборудованием.'"));
		Возврат;
		
	КонецЕсли;
	
	ИдентификаторWebСервисОборудования = Результат;
	
	Наименование = НСтр("ru='%1 (%2)'");
	Запись.Наименование = СтрШаблон(Наименование, ИмяДляВхода, ИдентификаторWebСервисОборудования);
	
КонецПроцедуры

&НаСервере
Процедура ПользовательПриИзмененииНаСервере()
	УстановитьПривилегированныйРежим(Истина);
	СвойстваПользователя = Пользователи.СвойстваПользователяИБ(ОбщегоНазначения.ЗначениеРеквизитаОбъекта(Запись.Пользователь, "ИдентификаторПользователяИБ"));
	ИмяДляВхода = СвойстваПользователя.Имя;
	УстановитьПривилегированныйРежим(Ложь);
КонецПроцедуры

&НаСервере
Функция ИдентификаторОборудованияУникален(Идентификатор)   
	
 	ТекущаяВерсия =ВерсияКонфигурацииЧислом();
	Запрос = Новый Запрос;
	Если ТекущаяВерсия >= 1627 Тогда
		Запрос.Текст = 
		"ВЫБРАТЬ
		|	ПодключаемоеОборудование.Ссылка КАК Ссылка
		|ИЗ
		|	Справочник.ПодключаемоеОборудование КАК ПодключаемоеОборудование
		|ГДЕ
		|	ПодключаемоеОборудование.УдалитьИдентификаторWebСервисОборудования = &ИдентификаторWebСервисОборудования
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ
		|	ОфлайнОборудование.Ссылка
		|ИЗ
		|	Справочник.ОфлайнОборудование КАК ОфлайнОборудование
		|ГДЕ
		|	ОфлайнОборудование.ИдентификаторWebСервисОборудования = &ИдентификаторWebСервисОборудования";  
	Иначе
		Запрос.Текст = 
		"ВЫБРАТЬ
		|	ПодключаемоеОборудование.Ссылка КАК Ссылка
		|ИЗ
		|	Справочник.ПодключаемоеОборудование КАК ПодключаемоеОборудование
		|ГДЕ
		|	ПодключаемоеОборудование.УдалитьИдентификаторWebСервисОборудования = &ИдентификаторWebСервисОборудования";  
	КонецЕсли;
	
	Запрос.УстановитьПараметр("ИдентификаторWebСервисОборудования", Идентификатор);
	
	РезультатЗапроса = Запрос.Выполнить();
	
	ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
	
	Если ВыборкаДетальныеЗаписи.Следующий() Тогда
		Возврат Ложь;
	Иначе
		Возврат Истина
	КонецЕсли;
	
КонецФункции

&НаКлиенте
Процедура ПравилоОбменаАвтоПодбор(Элемент, Текст, ДанныеВыбора, ПараметрыПолученияДанных, Ожидание, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	
	ПараметрыПолученияДанных.Отбор.Вставить("ЭтоМППроверкаЦенников", Истина);
	ДанныеВыбора = ПолучитьДанныеВыбора(Тип("СправочникСсылка.ПравилаОбменаСПодключаемымОборудованиемOffline"), ПараметрыПолученияДанных);
	
КонецПроцедуры

&НаКлиенте
Процедура ПравилоОбменаСоздание(Элемент, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	
	ПараметрыФормы = Новый Структура;
	ПараметрыФормы.Вставить("ЭтоМППроверкаЦенников", Истина);
	
	ОткрытьФорму("Справочник.ПравилаОбменаСПодключаемымОборудованиемOffline.ФормаОбъекта", ПараметрыФормы, Элемент);
	
КонецПроцедуры

&НаКлиенте
Процедура ПравилоОбменаНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	
	ПараметрыФормы = Новый Структура;
	ПараметрыФормы.Вставить("ТипПодключаемогоОборудования", ПредопределенноеЗначение("Перечисление.ТипыПодключаемогоОборудования.УдалитьККМОфлайн"));
	ПараметрыФормы.Вставить("ЭтоМППроверкаЦенников", Истина);
	
	ОткрытьФорму("Справочник.ПравилаОбменаСПодключаемымОборудованиемOffline.ФормаВыбора", ПараметрыФормы, Элемент);
	
КонецПроцедуры

&НаСервере
Процедура ПроверитьУстановитьФункциональныеОпцииДляПЦ()

	ИспользоватьПодключаемоеОборудование = Константы.ФункциональнаяОпцияИспользоватьПодключаемоеОборудование.Получить();
	
	Если Не ИспользоватьПодключаемоеОборудование Тогда
		Константы.ФункциональнаяОпцияИспользоватьПодключаемоеОборудование.Установить(Истина);
	КонецЕсли;
	
	ИспользоватьОбменСПодключаемымОборудованиемOffline = Константы.ИспользоватьОбменСПодключаемымОборудованиемOffline.Получить();
	
	Если Не ИспользоватьОбменСПодключаемымОборудованиемOffline Тогда
		Константы.ИспользоватьОбменСПодключаемымОборудованиемOffline.Установить(Истина);
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Функция ВерсияКонфигурацииЧислом()
   	ВерсияМассив  = СтрРазделить(Метаданные.Версия, ".", Истина);
	Возврат ВерсияМассив[0] * 1000 + ВерсияМассив[1] * 100+ ВерсияМассив[2];
КонецФункции

&НаКлиенте
Процедура Проверить(Команда)
	
	Если Элементы.Проверить.Отображение = ОтображениеКнопки.Картинка Тогда
		Возврат;
	КонецЕсли;
	
	Элементы.ДекорацияВебСервисыНадпись.Видимость = Ложь;
	Элементы.ДекорацияВебСервисыИдетПроверка.Видимость = Истина;
	Элементы.ДекорацияПроверкаВебСервиса.Видимость = Ложь;
	Элементы.Проверить.Отображение = ОтображениеКнопки.Картинка;
	
	ПодключитьОбработчикОжидания("ПроверитьПубликациюВебСервисов", 1, Истина);
	
КонецПроцедуры

&НаКлиенте
Процедура ПроверитьПубликациюВебСервисов()
	
	ПроверитьПубликациюВебСервисовНаСервере();
	
	Если Не ВебСервисыОпубликованы Тогда
		Элементы.ДекорацияПроверкаВебСервиса.Видимость = Истина;
		Элементы.Проверить.Отображение = ОтображениеКнопки.Текст;
	КонецЕсли;
	
	Если Элементы.Проверить.Заголовок = ЗаголовокКнопкиПроверить() Тогда
		Элементы.Проверить.Заголовок = НСтр("ru = 'Проверить еще раз'");
	КонецЕсли;
	
	Элементы.ДекорацияВебСервисыНадпись.Видимость = Истина;
	Элементы.ДекорацияВебСервисыИдетПроверка.Видимость = Ложь;
	
КонецПроцедуры

&НаКлиентеНаСервереБезКонтекста
Функция ЗаголовокКнопкиПроверить()
	
	Возврат НСтр("ru = 'Проверить'");
	
КонецФункции

&НаСервере
Процедура ПроверитьПубликациюВебСервисовНаСервере()
	
	ВебСервис1Опубликован = Ложь;
	ВебСервис2Опубликован = Ложь;
	
	ВебСервис1 = "ws/EquipmentService/Ping";
	ВебСервис2 = "ws/MobileService/Ping";

	ПараметрыОтправки = ОтправкаЗапросов.НовыйПараметрыОтправки();
	ПараметрыОтправки.Url = АдресПубликации + "/" + ВебСервис1;
	
	Попытка
		Ответ = ОтправкаЗапросов.ОтправитьЗапрос(ПараметрыОтправки);
	Исключение
		ВебСервисыОпубликованы = Ложь;
		Возврат;
	КонецПопытки;
	
	Если Ответ.КодСостояния = 401 Тогда
		ВебСервис1Опубликован = Истина;
	Иначе
		ВебСервисыОпубликованы = Ложь;
		Возврат;
	КонецЕсли;
	
	ПараметрыОтправки.Url = АдресПубликации + "/" + ВебСервис2;
	
	Ответ = ОтправкаЗапросов.ОтправитьЗапрос(ПараметрыОтправки);
	
	Если Ответ.КодСостояния = 401 Тогда
		ВебСервис2Опубликован = Истина;
	КонецЕсли;
	
	ВебСервисыОпубликованы = ВебСервис1Опубликован И ВебСервис2Опубликован;
	
	Элементы.ГруппаПроверкаВебСервисов.Видимость = Не ВебСервисыОпубликованы;
	
КонецПроцедуры

#КонецОбласти




