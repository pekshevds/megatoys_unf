#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область ПрограммныйИнтерфейс

// Записывает результат обмена.
//	Параметры:
//		Событие - Структура
//			* Приложение
//			* ВидСобытия
//			* ДатаНачала - Дата
//			* ДатаОкончания - Дата
//			* БылиОшибки - булево - если в ходе обмена были ошибки, то Истина.
//
Процедура ЗаписатьСобытиеОбмена(СобытиеОбмена) Экспорт
	
	МенеджерЗаписи = РегистрыСведений.СобытияОбменаУпралениеПерсоналом.СоздатьМенеджерЗаписи();
	ЗаполнитьЗначенияСвойств(МенеджерЗаписи, СобытиеОбмена);
	МенеджерЗаписи.Записать();
	
КонецПроцедуры

// Возвращает информацию о последнем событии.
//
// 	Пареметры
// 		Приложение - ПеречислениеСсылка.ПриложенияДляИнтеграции
// 		ВидСобытия - ПеречислениеСсылка.СобытияОбменаУправлениеПерсоналом
//
// 	Возвращаемое значение:
//		Структура
//			* Приложение - ПеречислениеСсылка.ПриложенияДляИнтеграции
//			* ВидСобытия - ПеречислениеСсылка.СобытияОбменаУправлениеПерсоналом
//			* ДатаНачала - Дата
//			* ДатаОкончания - Дата
//			* БылиОшибки - булево - если в ходе обмена были ошибки, то Истина.
//
Функция СобытиеОбмена(Приложение, ВидСобытия) Экспорт
	
	СобытиеОбмена = РегистрыСведений.СобытияОбменаУпралениеПерсоналом.СоздатьМенеджерЗаписи();
	СобытиеОбмена.Приложение 	= Приложение;
	СобытиеОбмена.ВидСобытия 	= ВидСобытия;
	СобытиеОбмена.Прочитать();
	
	СтруктураСобытиеОбмена = ОбщегоНазначения.СтруктураПоМенеджеруЗаписи(
							СобытиеОбмена, Метаданные.РегистрыСведений.СобытияОбменаУпралениеПерсоналом);
							
	Если Не ЗначениеЗаполнено(СтруктураСобытиеОбмена.Приложение) Тогда
		СтруктураСобытиеОбмена.Приложение = Приложение;
	КонецЕсли;
	Если Не ЗначениеЗаполнено(СтруктураСобытиеОбмена.ВидСобытия) Тогда
		СтруктураСобытиеОбмена.ВидСобытия = ВидСобытия;
	КонецЕсли;
	
	Возврат СтруктураСобытиеОбмена;
	
КонецФункции

#КонецОбласти
	
#КонецЕсли
