#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область СлужебныйПрограммныйИнтерфейс

// Возвращает данные, записанные в регистре сведений ДанныеСобытийВнешнихКалендарей
// 
// Параметры:
//  Идентификатор - Строка - идентификатор события
// 
// Возвращаемое значение:
//  Структура - МенеджерЗаписи - данные записанные в регистре сведений ДанныеСобытийВнешнихКалендарей
//
Функция НайтиПоИдентификаторуСобытия(Идентификатор) Экспорт
	
	Запрос = Новый Запрос(
	"ВЫБРАТЬ ПЕРВЫЕ 1
	|	ДанныеСобытийВнешнихКалендарей.Источник КАК Источник,
	|	ДанныеСобытийВнешнихКалендарей.Календарь КАК Календарь,
	|	ДанныеСобытийВнешнихКалендарей.Идентификатор КАК Идентификатор,
	|	ДанныеСобытийВнешнихКалендарей.ИдентификаторКалендаря КАК ИдентификаторКалендаря,
	|	ДанныеСобытийВнешнихКалендарей.ОтпечатокОбъекта КАК ОтпечатокОбъекта
	|ИЗ
	|	РегистрСведений.ДанныеСобытийВнешнихКалендарей КАК ДанныеСобытийВнешнихКалендарей
	|ГДЕ
	|	ДанныеСобытийВнешнихКалендарей.Идентификатор = &Идентификатор");
	
	Запрос.УстановитьПараметр("Идентификатор", Идентификатор);
	
	РезультатЗапроса = Запрос.Выполнить();
	
	Если Не РезультатЗапроса.Пустой() Тогда
		Выборка = РезультатЗапроса.Выбрать();
		Выборка.Следующий();
		МенеджерЗаписи = РегистрыСведений.ДанныеСобытийВнешнихКалендарей.СоздатьМенеджерЗаписи();
		МенеджерЗаписи.Источник = Выборка.Источник;
		Возврат МенеджерЗаписи;
	Иначе
		Возврат Неопределено;
	КонецЕсли;
	
КонецФункции

// Удаление всех данных учетной записи внешнего сервиса из регистра сведений ДанныеСобытийВнешнихКалендарей
// 
// Параметры:
//  УчетнаяЗаписьВнешнегоКалендаря - СправочникСсылка.УчетныеЗаписиВнешнихКалендарей - ссылка на запись в справочнике УчетныеЗаписиВнешнихКалендарей
//
Процедура УдалитьСобытияПоУчетнойЗаписиВнешнегоКалендаря(УчетнаяЗаписьВнешнегоКалендаря) Экспорт
	
	Запрос = Новый Запрос("
	|ВЫБРАТЬ
	|	ДанныеСобытийВнешнихКалендарей.Источник КАК Источник,
	|	ДанныеСобытийВнешнихКалендарей.Идентификатор КАК Идентификатор,
	|	НастройкиСинхронизацииСВнешнимиКалендарями.КодВнешнегоКалендаря КАК КодВнешнегоКалендаря
	|ИЗ
	|	РегистрСведений.ДанныеСобытийВнешнихКалендарей КАК ДанныеСобытийВнешнихКалендарей
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.НастройкиСинхронизацииСВнешнимиКалендарями КАК НастройкиСинхронизацииСВнешнимиКалендарями
	|		ПО (ДанныеСобытийВнешнихКалендарей.ИдентификаторКалендаря = НастройкиСинхронизацииСВнешнимиКалендарями.КодВнешнегоКалендаря)
	|ГДЕ
	|	НастройкиСинхронизацииСВнешнимиКалендарями.УчетнаяЗаписьВнешнегоКалендаря = &УчетнаяЗаписьВнешнегоКалендаря");
	Запрос.УстановитьПараметр("УчетнаяЗаписьВнешнегоКалендаря", УчетнаяЗаписьВнешнегоКалендаря);
	
	РезультатЗапроса = Запрос.Выполнить();
	
	Если Не РезультатЗапроса.Пустой() Тогда
		
		ВыборкаСобытийПоУчетнойЗаписи = РезультатЗапроса.Выбрать();
		
		Пока ВыборкаСобытийПоУчетнойЗаписи.Следующий() Цикл
			НаборЗаписей = РегистрыСведений.ДанныеСобытийВнешнихКалендарей.СоздатьНаборЗаписей();
			НаборЗаписей.Отбор.Источник.Установить(ВыборкаСобытийПоУчетнойЗаписи.Источник);
			НаборЗаписей.Записать();
		КонецЦикла;
		
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#КонецЕсли



