#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область ПрограммныйИнтерфейс

// Функция возвращает ФИО по указанному физ. лицу.
// 
// Параметры:
// 	ДатаАктуальности - Дата - дата актуальности,
// 	ФизЛицо - СправочникСсылка.ФизическиеЛица - физическое лицо.
// Возвращаемое значение:
// 	Строка - Фамилия, инициалы физ. лица.
Функция ФИОФизЛица(ДатаАктуальности, ФизЛицо) Экспорт

	Запрос = Новый Запрос(
	"ВЫБРАТЬ
	|	ФИОФизЛицСрезПоследних.Фамилия КАК Фамилия,
	|	ФИОФизЛицСрезПоследних.Имя КАК Имя,
	|	ФИОФизЛицСрезПоследних.Отчество КАК Отчество
	|ИЗ
	|	РегистрСведений.ФИОФизическихЛиц.СрезПоследних(&ДатаАктуальности, ФизическоеЛицо = &ФизЛицо) КАК ФИОФизЛицСрезПоследних");

	Запрос.УстановитьПараметр("ДатаАктуальности", ДатаАктуальности);
	Запрос.УстановитьПараметр("ФизЛицо", ФизЛицо);

	РезультатЗапроса = Запрос.Выполнить();

	Если РезультатЗапроса.Пустой() Тогда

		Возврат "";

	КонецЕсли;

	Выборка = РезультатЗапроса.Выбрать();
	Выборка.Следующий();

	Возврат ФизическиеЛицаКлиентСервер.ФамилияИнициалы(Выборка);

КонецФункции

// Обновить последнюю запись физ лица.
// 
// Параметры:
//  ФизЛицо - СправочникСсылка.ФизическиеЛица - Физ лицо
//  СтруктураИмени - Структура - Структура имени
//  Период - Дата
//
Процедура ОбновитьПоследнююЗаписьФизЛица(ФизЛицо, СтруктураИмени, Период) Экспорт
	
	Если Период = Неопределено Тогда
		ПериодСреза = ТекущаяДатаСеанса();
	КонецЕсли;
	
	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ
	|	ФИОФизЛицСрезПоследних.Период,
	|	ФИОФизЛицСрезПоследних.ФизическоеЛицо,
	|	ФИОФизЛицСрезПоследних.Фамилия,
	|	ФИОФизЛицСрезПоследних.Имя,
	|	ФИОФизЛицСрезПоследних.Отчество
	|ИЗ
	|	РегистрСведений.ФИОФизическихЛиц.СрезПоследних(&Период, ФизическоеЛицо = &ФизЛицо) КАК ФИОФизЛицСрезПоследних";
	Запрос.УстановитьПараметр("Период", ПериодСреза);
	Запрос.УстановитьПараметр("ФизЛицо", ФизЛицо);
	Результат = Запрос.Выполнить();
	НоваяЗапись = СоздатьМенеджерЗаписи();
	Если Результат.Пустой() Или Период <> Неопределено Тогда
		НоваяЗапись.Период = Период;
	Иначе
		Выборка = Результат.Выбрать();
		Выборка.Следующий();
		ЗаполнитьЗначенияСвойств(НоваяЗапись, Выборка);
	КонецЕсли;
	
	ЗаполнитьЗначенияСвойств(НоваяЗапись, СтруктураИмени);
	НоваяЗапись.ФизическоеЛицо = ФизЛицо;
	НоваяЗапись.Записать(Истина);
	
КонецПроцедуры

#Область ДляВызоваИзДругихПодсистем

// СтандартныеПодсистемы.УправлениеДоступом

// См. УправлениеДоступомПереопределяемый.ПриЗаполненииСписковСОграничениемДоступа.
Процедура ПриЗаполненииОграниченияДоступа(Ограничение) Экспорт
	Ограничение.Текст =
	"РазрешитьЧтениеИзменение
	|ГДЕ
	|	ЗначениеРазрешено(ФизическоеЛицо)";
КонецПроцедуры

// Конец СтандартныеПодсистемы.УправлениеДоступом

#КонецОбласти

#КонецОбласти

#Область СлужебныйПрограммныйИнтерфейс

// Добавляет запись ФИО физического лица.
// 
// Параметры:
//  ФизическоеЛицо - СправочникСсылка.ФизическиеЛица
//  ФИО - Структура:
//   * Фамилия - Строка
//   * Имя - Строка
//   * Отчество - Строка
//  Период - Дата
Процедура ДобавитьФИОФизическогоЛица(ФизическоеЛицо, ФИО, Период = Неопределено) Экспорт
	
	Набор = РегистрыСведений.ФИОФизическихЛиц.СоздатьНаборЗаписей();
	Набор.Отбор.ФизическоеЛицо.Установить(ФизическоеЛицо);
	
	Запись = Набор.Добавить();
	ЗаполнитьЗначенияСвойств(Запись, ФИО, "Фамилия, Имя, Отчество");
	Запись.ФизическоеЛицо = ФизическоеЛицо;
	Запись.Период = ?(Период = Неопределено, ЗарплатаКадрыКлиентСервер.ДатаОтсчетаПериодическихСведений(), Период);
	
	Набор.Записать();
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

#Область ОбработчикиОбновления

Процедура ЗаполнитьФИОСлужебные(ПараметрыОбновления) Экспорт 
	
	Запрос = Новый Запрос;
	
	Запрос.Текст =
		"ВЫБРАТЬ РАЗЛИЧНЫЕ ПЕРВЫЕ 1000
		|	ФИОФизическихЛиц.ФизическоеЛицо КАК ФизическоеЛицо
		|ИЗ
		|	РегистрСведений.ФИОФизическихЛиц КАК ФИОФизическихЛиц
		|ГДЕ
		|	ФИОФизическихЛиц.ФИОСлужебные = """"
		|	И ФИОФизическихЛиц.Фамилия + ФИОФизическихЛиц.Имя + ФИОФизическихЛиц.Отчество <> """"";
	
	Выборка = Запрос.Выполнить().Выбрать();
	Если Выборка.Количество() = 0 Тогда
		ОбновлениеИнформационнойБазыЗарплатаКадрыБазовый.УстановитьПараметрОбновления(ПараметрыОбновления, "ОбработкаЗавершена", Истина);
		Возврат;
	КонецЕсли;
	
	ОбновлениеИнформационнойБазыЗарплатаКадрыБазовый.УстановитьПараметрОбновления(ПараметрыОбновления, "ОбработкаЗавершена", Ложь);
	
	Пока Выборка.Следующий() Цикл
		
		Если Не ОбновлениеИнформационнойБазыЗарплатаКадрыБазовый.ПодготовитьОбновлениеДанных(ПараметрыОбновления, "РегистрСведений.ФИОФизическихЛиц", "ФизическоеЛицо", Выборка.ФизическоеЛицо) Тогда
			Продолжить;
		КонецЕсли;
		
		НаборЗаписей = РегистрыСведений.ФИОФизическихЛиц.СоздатьНаборЗаписей();
		НаборЗаписей.Отбор.ФизическоеЛицо.Установить(Выборка.ФизическоеЛицо);
		НаборЗаписей.Прочитать();
		
		ОбновлениеИнформационнойБазы.ЗаписатьНаборЗаписей(НаборЗаписей);
		ОбновлениеИнформационнойБазыЗарплатаКадрыБазовый.ЗавершитьОбновлениеДанных(ПараметрыОбновления);
		
	КонецЦикла;
	
КонецПроцедуры

Процедура ЗаполнитьИнициалы(ПараметрыОбновления = Неопределено) Экспорт
	
	Запрос = Новый Запрос;
	
	Запрос.Текст =
		"ВЫБРАТЬ РАЗЛИЧНЫЕ ПЕРВЫЕ 1000
		|	ФИОФизическихЛиц.ФизическоеЛицо КАК ФизическоеЛицо
		|ИЗ
		|	РегистрСведений.ФИОФизическихЛиц КАК ФИОФизическихЛиц
		|ГДЕ
		|	ФИОФизическихЛиц.Инициалы = """"
		|	И ФИОФизическихЛиц.Имя <> """"";
	
	Если ПараметрыОбновления = Неопределено Тогда
		Запрос.Текст = СтрЗаменить(Запрос.Текст, "ПЕРВЫЕ 1000","");
	КонецЕсли;
	
	// АПК:1328-выкл Блокировку выполнит ОбновлениеИнформационнойБазыЗарплатаКадрыБазовый.ПодготовитьОбновлениеДанных
	Выборка = Запрос.Выполнить().Выбрать();
	// АПК:1328-вкл
	
	Если Выборка.Количество() = 0 Тогда
		ОбновлениеИнформационнойБазыЗарплатаКадрыБазовый.ЗавершитьОбработчик(ПараметрыОбновления);
		Возврат;
	КонецЕсли;
	
	ОбновлениеИнформационнойБазыЗарплатаКадрыБазовый.ПродолжитьОбработчик(ПараметрыОбновления);
	
	Пока Выборка.Следующий() Цикл
		
		Если Не ОбновлениеИнформационнойБазыЗарплатаКадрыБазовый.ПодготовитьОбновлениеДанных(
				ПараметрыОбновления, "РегистрСведений.ФИОФизическихЛиц", "ФизическоеЛицо", Выборка.ФизическоеЛицо) Тогда
			Продолжить;
		КонецЕсли;
		
		НаборЗаписей = РегистрыСведений.ФИОФизическихЛиц.СоздатьНаборЗаписей();
		НаборЗаписей.Отбор.ФизическоеЛицо.Установить(Выборка.ФизическоеЛицо);
		НаборЗаписей.Прочитать();
		
		Для каждого Запись Из НаборЗаписей Цикл
			
			Если ПустаяСтрока(Запись.Инициалы) Тогда
				
				Если Не ПустаяСтрока(Запись.Имя) Тогда
					
					Запись.Инициалы = ФизическиеЛицаЗарплатаКадрыКлиентСервер.ИнициалыПоИмениОтчеству(
						Запись.Имя, Запись.Отчество);
					
				КонецЕсли;
				
			КонецЕсли;
			
		КонецЦикла;
		
		// АПК:1327-выкл Блокировка выполнена ОбновлениеИнформационнойБазыЗарплатаКадрыБазовый.ПодготовитьОбновлениеДанных
		ОбновлениеИнформационнойБазы.ЗаписатьНаборЗаписей(НаборЗаписей);
		// АПК:1327-вкл
		ОбновлениеИнформационнойБазыЗарплатаКадрыБазовый.ЗавершитьОбновлениеДанных(ПараметрыОбновления);
		
	КонецЦикла;
	
КонецПроцедуры

#КонецОбласти

#КонецОбласти

#КонецЕсли
