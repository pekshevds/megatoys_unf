// @strict-types

#Область ОписаниеПеременных

&НаКлиенте
Перем ТекущаяДоверенность; // ОпределяемыйТип.МашиночитаемаяДоверенность

#КонецОбласти

#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	ДобавлениеИзменениеМЧДОрганизацийЭДО = Справочники.МашиночитаемыеДоверенностиОрганизаций.ЕстьПравоИзменения();
	ЕстьПравоИзменения = МашиночитаемыеДоверенности.ИмеетсяПравоИзмененияМЧД();
	Элементы.ЗагрузитьИзРеестраФНС.Видимость = ЕстьПравоИзменения;
	Элементы.ЗагрузитьИзФайла.Видимость = ЕстьПравоИзменения;
	Элементы.СоздатьЗаявлениеНаРегистрацию.Видимость = ЕстьПравоИзменения И ДобавлениеИзменениеМЧДОрганизацийЭДО;
	
	Поля = Новый Массив; // Массив Из Строка
	Поля.Добавить("ВсеДоверители, ВсеПредставители");
	Список.УстановитьОграниченияИспользованияВОтборе(Поля);
	УстановитьПоказыватьПомеченныеНаУдаление();
	УстановитьУсловноеОформление();
	РежимВыбора = ОбщегоНазначенияКлиентСервер.СвойствоСтруктуры(Параметры, "РежимВыбора", Ложь);
	Элементы.Выбрать.Видимость = РежимВыбора;
	
КонецПроцедуры

&НаКлиенте
Процедура ОбработкаПерехода(ОбъектПерехода, СтандартнаяОбработка)
	ВыделитьДоверенность(ОбъектПерехода);
КонецПроцедуры

&НаКлиенте
Процедура ОбработкаОповещения(ИмяСобытия, Параметр, Источник)
	Если ИмяСобытия = "ПоказатьДоверенностиОрганизации" И Параметр <> ВыбраннаяОрганизация Тогда
		ВыбраннаяОрганизация = Параметр;
		ОбновитьОтборПоОрганизации();
	КонецЕсли;
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовШапкиФормы

&НаКлиенте
Процедура ДекорацияОтборПоОрганизацииОбработкаНавигационнойСсылки(Элемент, НавигационнаяСсылкаФорматированнойСтроки, СтандартнаяОбработка)
	СтандартнаяОбработка = Ложь;
	ВыбраннаяОрганизация = Неопределено;
	ОбновитьОтборПоОрганизации();
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовТаблицыФормыСписок

&НаСервереБезКонтекста
Процедура СписокПриПолученииДанныхНаСервере(ИмяЭлемента, Настройки, КлючЗаписиИСтрокиДинамическогоСписка)
	
	Для Каждого КлючИЗначение Из КлючЗаписиИСтрокиДинамическогоСписка Цикл
		
		СтрокаСписка = КлючИЗначение.Значение; // СтрокаДинамическогоСписка
		УстановитьОформлениеСубъектаДоверенности(СтрокаСписка, "ВсеДоверители");
		УстановитьОформлениеСубъектаДоверенности(СтрокаСписка, "ВсеПредставители");
		
		Если СтрокаСписка.Данные.ДатаОкончанияДействия < ТекущаяДатаСеанса() Тогда
			ДатаОкончанияДействия = СтрокаСписка.Оформление.Получить("ДатаОкончанияДействия");
			Если ЗначениеЗаполнено(ДатаОкончанияДействия) Тогда
				ДатаОкончанияДействия.УстановитьЗначениеПараметра("ЦветТекста", ЦветаСтиля.ЦветОтрицательногоЧисла);
			КонецЕсли;
		КонецЕсли;
		
	КонецЦикла;
	
КонецПроцедуры

&НаКлиенте
Процедура СписокВыбор(Элемент, ВыбраннаяСтрока, Поле, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	
	ТекущиеДанные = Элемент.ТекущиеДанные;
	Если ТекущиеДанные <> Неопределено И ЗначениеЗаполнено(ТекущиеДанные.Доверенность) Тогда
		РежимВыбора = ОбщегоНазначенияКлиентСервер.СвойствоСтруктуры(Параметры, "РежимВыбора", Ложь); // Булево
		Если РежимВыбора Тогда
			ОповеститьОВыборе(ТекущиеДанные.Доверенность);
		Иначе
			ОбработкаВыбора = Новый ОписаниеОповещения("ВыборДоверенностиЗавершение", ЭтотОбъект);
			ПоказатьЗначение(ОбработкаВыбора, ТекущиеДанные.Доверенность);
		КонецЕсли;
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура СписокПриАктивизацииСтроки(Элемент)
	
	Если Элементы.Список.ТекущиеДанные <> Неопределено Тогда
		Если Элементы.ГруппаПредпросмотра.Видимость И ТекущаяДоверенность <> Элементы.Список.ТекущиеДанные.Доверенность Тогда
			ПодключитьОбработчикОжидания("Подключаемый_ОбновитьОбластьПредпросмотра", 0.2, Истина);
		КонецЕсли;
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы

#Область ДействияНадДоверенностями

&НаКлиенте
Процедура СоздатьЗаявлениеНаРегистрацию(Команда)
	
	ОбработчикПослеСоздания = Новый ОписаниеОповещения("Подключаемый_СоздатьДоверенностьЗавершение", ЭтотОбъект);
	МашиночитаемыеДоверенностиКлиент.СоздатьМЧД(ОбработчикПослеСоздания);
	
КонецПроцедуры

&НаКлиенте
Процедура ЗагрузитьИзРеестраФНС(Команда)
	
	ОбработчикПослеЗагрузки = Новый ОписаниеОповещения("Подключаемый_ЗагрузитьДоверенностьИзРеестраЗавершение",
		ЭтотОбъект);
	МашиночитаемыеДоверенностиКлиент.ПолучитьДанныеМЧД(ОбработчикПослеЗагрузки, ЭтотОбъект);
	
КонецПроцедуры

&НаКлиенте
Процедура ЗагрузитьИзФайла(Команда)
	
	ОбработчикПослеЗагрузки = Новый ОписаниеОповещения("Подключаемый_ЗагрузитьДоверенностьИзФайлаЗавершение",
		ЭтотОбъект);
	ПараметрыЗагрузки = ФайловаяСистемаКлиент.ПараметрыЗагрузкиФайла();
	ПараметрыЗагрузки.ИдентификаторФормы = УникальныйИдентификатор;
	ПараметрыЗагрузки.Диалог.Фильтр = НСтр("ru = 'Архив'") + " (*.zip)|*.zip";
	ПараметрыЗагрузки.Диалог.Заголовок = НСтр("ru = 'Выберите архив с доверенностью и подписью'");
	ФайловаяСистемаКлиент.ЗагрузитьФайл(ОбработчикПослеЗагрузки, ПараметрыЗагрузки);
	
КонецПроцедуры

&НаКлиенте
Процедура ВыбратьДоверенность(Команда)
	ТекущиеДанные = Элементы.Список.ТекущиеДанные;
	Если ТекущиеДанные <> Неопределено Тогда
		ОповеститьОВыборе(ТекущиеДанные.Доверенность);
	КонецЕсли;
КонецПроцедуры

#КонецОбласти

#Область ПрочиеКоманды

&НаКлиенте
Процедура ПоказыватьПомеченныеНаУдаление(Команда)
	УстановитьПоказыватьПомеченныеНаУдаление(Не Элементы.ПоказыватьПомеченныеНаУдаление.Пометка);
КонецПроцедуры

&НаКлиенте
Процедура Предпросмотр(Команда)
	
	Если Элементы.ГруппаПредпросмотра.Видимость Тогда
		Элементы.ГруппаПредпросмотра.Видимость = Ложь;
		Элементы.Предпросмотр.Пометка = Ложь;
		ОтключитьОбработчикОжидания("Подключаемый_ОбновитьОбластьПредпросмотра");
	Иначе
		Элементы.ГруппаПредпросмотра.Видимость = Истина;
		Элементы.Предпросмотр.Пометка = Истина;
		ПодключитьОбработчикОжидания("Подключаемый_ОбновитьОбластьПредпросмотра", 0.2, Истина);
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ОткрытьКлассификаторПолномочий(Команда)
	ОткрытьФорму("Справочник.КлассификаторПолномочийФНСМЧД003.ФормаСписка");
КонецПроцедуры

&НаКлиенте
Процедура Поиск(Команда)
	ТекущийЭлемент = Элементы.ПоисковаяСтрока;
КонецПроцедуры

#КонецОбласти

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

#Область ОформлениеКолонокДинамическогоСписка

#Область ПредставлениеСубъектов

// Сформировать представление субъекта.
// 
// Параметры:
//  Субъект - См. РегистрыСведений.ЖурналМашиночитаемыхДоверенностей.НовыйДоверитель
//          - См. РегистрыСведений.ЖурналМашиночитаемыхДоверенностей.НовыйПредставитель
// 
// Возвращаемое значение:
//  Строка -  Сформировать представление субъекта
&НаСервереБезКонтекста
Функция СформироватьПредставлениеСубъекта(Субъект)
	
	Журнал = РегистрыСведений.ЖурналМашиночитаемыхДоверенностей;
	ТипыДоверителей = Журнал.ТипыДоверителей();
	ТипыПредставителей = Журнал.ТипыПредставителей();
	
	Если Субъект.Тип = ТипыДоверителей.ЮридическоеЛицо
		Или Субъект.Тип = ТипыПредставителей.ЮридическоеЛицо Тогда
		Возврат ПредставлениеЮридическогоЛица(Субъект.ДанныеЮридическогоЛица);
	ИначеЕсли Субъект.Тип = ТипыДоверителей.ИндивидуальныйПредприниматель 
		Или Субъект.Тип = ТипыПредставителей.ИндивидуальныйПредприниматель Тогда
		Возврат ПредставлениеИндивидуальногоПредпринимателя(Субъект.ДанныеИндивидуальногоПредпринимателя);
	ИначеЕсли Субъект.Тип = ТипыДоверителей.ФизическоеЛицо
		Или Субъект.Тип = ТипыПредставителей.ФизическоеЛицо Тогда
		Возврат ПредставлениеФизическогоЛица(Субъект.ДанныеФизическогоЛица);
	ИначеЕсли Субъект.Тип = ТипыДоверителей.ИностраннаяОрганизация Тогда
		Возврат ПредставлениеИностраннойОрганизации(Субъект.ДанныеИностраннойОрганизации);
	ИначеЕсли Субъект.Тип = ТипыПредставителей.ФилиалИностраннойОрганизации Тогда
		Возврат ПредставлениеИностраннойОрганизации(Субъект.ДанныеФилиалаИностраннойОрганизации);
	ИначеЕсли Субъект.Тип = ТипыПредставителей.ФилиалЮридическогоЛица Тогда
		Возврат ПредставлениеЮридическогоЛица(Субъект.ДанныеФилиалаЮридическогоЛица);
	Иначе
		Возврат "";
	КонецЕсли;
	
КонецФункции

&НаСервереБезКонтекста
Функция ПредставлениеЮридическогоЛица(Знач Данные)
	
	ЗаполнитьПустыеПоля(Данные, "КПП");
	Шаблон = НСтр("ru='[Наименование] ИНН: [ИНН] КПП: [КПП]';");
	
	Возврат СтроковыеФункцииКлиентСервер.ВставитьПараметрыВСтроку(Шаблон, Данные);
	
КонецФункции

&НаСервереБезКонтекста
Функция ПредставлениеИндивидуальногоПредпринимателя(Знач Данные)
	
	ЗаполнитьПустыеПоля(Данные, "СНИЛС");
	Шаблон = НСтр("ru='[Наименование] ИНН: [ИНН] СНИЛС: [СНИЛС]';");
	
	Возврат СтроковыеФункцииКлиентСервер.ВставитьПараметрыВСтроку(Шаблон, Данные);
	
КонецФункции

&НаСервереБезКонтекста
Функция ПредставлениеФизическогоЛица(Знач Данные)
	
	ЗаполнитьПустыеПоля(Данные, "ИНН, СНИЛС");
	Шаблон = НСтр("ru='[ФИО] ИНН: [ИНН] СНИЛС: [СНИЛС]';");
	
	Возврат СтроковыеФункцииКлиентСервер.ВставитьПараметрыВСтроку(Шаблон, Данные);
	
КонецФункции

&НаСервереБезКонтекста
Функция ПредставлениеИностраннойОрганизации(Знач Данные)
	
	ЗаполнитьПустыеПоля(Данные, "КПП");
	Шаблон = НСтр("ru='[Наименование] ИНН: [ИНН] КПП: [КПП]';");
	
	Возврат СтроковыеФункцииКлиентСервер.ВставитьПараметрыВСтроку(Шаблон, Данные);
	
КонецФункции

&НаСервереБезКонтекста
Процедура ЗаполнитьПустыеПоля(Структура, КлючиСтрокой)
	
	Ключи = СтрРазделить(КлючиСтрокой, ", ", Ложь);
	Для Каждого Ключ Из Ключи Цикл
		Если Не ЗначениеЗаполнено(Структура[Ключ]) Тогда
			Структура[Ключ] = " -- ";
		КонецЕсли;
	КонецЦикла;
	
КонецПроцедуры

#КонецОбласти

&НаСервереБезКонтекста
Процедура УстановитьОформлениеСубъектаДоверенности(СтрокаСписка, ПолеОписанияСубъекта)
	
	ДанныеСубъекта = ОбщегоНазначенияБЭД.JSONЗначение(СтрокаСписка.Данные[ПолеОписанияСубъекта]);
	Если ЗначениеЗаполнено(ДанныеСубъекта) Тогда
		Массив = Новый Массив;
		Для Каждого Субъект Из ДанныеСубъекта Цикл
			Массив.Добавить(СформироватьПредставлениеСубъекта(Субъект));
		КонецЦикла;
		КоличествоСубъектов = Массив.Количество();
		Если КоличествоСубъектов > 1 Тогда
			Массив[0] = СтрШаблон("[%2] %1", Массив[0], КоличествоСубъектов);
		КонецЕсли;
		СтрокаСписка.Данные[ПолеОписанияСубъекта] = СтрСоединить(Массив, "; ");
	Иначе
		СтрокаСписка.Данные[ПолеОписанияСубъекта] = "";
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКоманд

&НаКлиенте
Процедура Подключаемый_СоздатьДоверенностьЗавершение(Доверенность, ДополнительныеПараметры = Неопределено) Экспорт
	
	Если ЗначениеЗаполнено(Доверенность) Тогда
		ОбновитьСписокИСфокусироватьсяНаДоверенности(Доверенность);
		
		ТекущиеДанные = Элементы.Список.ТекущиеДанные;
		Если ТекущиеДанные <> Неопределено И Не ТекущиеДанные.Действует Тогда
			Текст = НСтр("ru = 'Не удалось обновить статус доверенности.
				|Обновить вручную статус можно в форме доверенности по кнопке ""Обновить статус из реестра ФНС"".'");
			
			ОбщегоНазначенияКлиент.СообщитьПользователю(Текст);
		КонецЕсли;
		
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура ОбновитьСписокИСфокусироватьсяНаДоверенности(Доверенность)
	Элементы.Список.Обновить();
	ВыделитьДоверенность(Доверенность);
КонецПроцедуры

&НаСервере
Процедура ВыделитьДоверенность(Доверенность)
	КлючЗаписи = РегистрыСведений.ЖурналМашиночитаемыхДоверенностей.СоздатьКлючЗаписи(Новый Структура("Хеш",
		ОбщегоНазначения.ЗначениеРеквизитаОбъекта(Доверенность, "ХешФайла")));
	Элементы.Список.ТекущаяСтрока = КлючЗаписи;
КонецПроцедуры

&НаКлиенте
Процедура Подключаемый_ОтозватьДоверенностьЗавершение(Результат, ДополнительныеПараметры = Неопределено) Экспорт
	
	Элементы.Список.Обновить();
	
КонецПроцедуры

&НаКлиенте
Процедура Подключаемый_ЗагрузитьДоверенностьИзРеестраЗавершение(Результат, ДополнительныеПараметры) Экспорт
	
	Если ЗначениеЗаполнено(Результат.СсылкаНаДоверенность) Тогда
		ПоказатьЗначение(Новый ОписаниеОповещения, Результат.СсылкаНаДоверенность);
		Элементы.Список.Обновить();
	ИначеЕсли Результат.Свойство("ТекстОшибки") Тогда
		МашиночитаемыеДоверенностиКлиент.ПоказатьПредупреждениеПриЗагрузкеМЧД(Результат.ТекстОшибки);
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура Подключаемый_ЗагрузитьДоверенностьИзФайлаЗавершение(ПомещенныйФайл, ДополнительныеПараметры) Экспорт
	
	Если ПомещенныйФайл = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	АдресВоВременномХранилище = ПомещенныйФайл.Хранение;
	МашиночитаемыеДоверенностиКлиент.ЗагрузитьМЧДИзФайла(АдресВоВременномХранилище);
	Элементы.Список.Обновить();
	
КонецПроцедуры

&НаКлиенте
Процедура Подключаемый_СохранитьДоверенностьЗавершение(ПолученныеФайлы, ДополнительныеПараметры = Неопределено) Экспорт
	
	Если ЗначениеЗаполнено(ПолученныеФайлы) Тогда
		ШаблонСообщения = НСтр(
			"ru = 'Подписанная доверенность сохранена в файл %1 и может быть передана контрагентам любым удобным способом.'");
		ТекстСообщения = СтрШаблон(ШаблонСообщения, ПолученныеФайлы[0].ПолноеИмя);
		ОбщегоНазначенияКлиент.СообщитьПользователю(ТекстСообщения);
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ВыборДоверенностиЗавершение(Результат, ДополнительныеПараметры = Неопределено) Экспорт
	Элементы.Список.Обновить();
КонецПроцедуры

#КонецОбласти

#Область ОбластьПредпросмотра

&НаКлиенте
Процедура Подключаемый_ОбновитьОбластьПредпросмотра() Экспорт
	
	ТекущиеДанные = Элементы.Список.ТекущиеДанные;
	Если ТекущиеДанные <> Неопределено И ЗначениеЗаполнено(ТекущиеДанные.Доверенность) Тогда
		ОбновитьОбластьПредпросмотра(ТекущиеДанные.Доверенность);
		ПоказатьСтатусыДоверенности();
		ТекущаяДоверенность = ТекущиеДанные.Доверенность;
	Иначе
		ТабличныйДокументПредпросмотра = Новый ТабличныйДокумент;
		ТекущаяДоверенность = Неопределено;
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура ОбновитьОбластьПредпросмотра(Знач Ссылка)
	
	Попытка
		ТабличныйДокументПредпросмотра = МашиночитаемыеДоверенности.ТабличныйДокументМЧДПоСсылке(Ссылка);
		СтатусыДоверенности = ПолучитьСтатусыДоверенности(Ссылка);
	Исключение
		ТабличныйДокументПредпросмотра = Новый ТабличныйДокумент;
		СтатусыДоверенности = Неопределено;
	КонецПопытки;
	
КонецПроцедуры

&НаКлиенте
Процедура ПоказатьСтатусыДоверенности()
	
	Если СтатусыДоверенности <> Неопределено Тогда
		Элементы.ГруппаСостоянияИСтатусы.Видимость = Истина;
		
		ИнтерфейсДокументовЭДОКлиент.ОформитьГруппуСостоянияИСтатусыМЧД(ЭтотОбъект, СтатусыДоверенности.Подписана,
			СтатусыДоверенности.Верна, СтатусыДоверенности.Отозвана, СтатусыДоверенности.ДатаОтзыва,
			СтатусыДоверенности.СтатусВРеестреФНС);
	Иначе
		Элементы.ГруппаСостоянияИСтатусы.Видимость = Ложь;;
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область Прочее

&НаСервереБезКонтекста
Функция КлючПараметраПоказыватьПомеченныеНаУдаление()
	Возврат "ПоказыватьПомеченныеНаУдаление";
КонецФункции

&НаСервере
Процедура ОбновитьИспользованиеПараметровСписка(ПоказыватьПомеченныеНаУдаление)
	ПараметрПоказыватьПомеченныеНаУдаление = Новый ПараметрКомпоновкиДанных("ПоказыватьПомеченныеНаУдаление");
	ПараметрыДанных = Список.КомпоновщикНастроек.Настройки.ПараметрыДанных;
	ЗначениеПараметра = ПараметрыДанных.НайтиЗначениеПараметра(ПараметрПоказыватьПомеченныеНаУдаление);
	ЗначениеПараметра.Значение = ПоказыватьПомеченныеНаУдаление;
	ЗначениеПараметра.Использование = Не ПоказыватьПомеченныеНаУдаление;
КонецПроцедуры

&НаСервере
Процедура УстановитьПоказыватьПомеченныеНаУдаление(ЗначениеПараметра = Неопределено)
	
	Если ЗначениеПараметра = Неопределено Тогда
		ЗначениеПараметра = ОбщегоНазначения.ХранилищеНастроекДанныхФормЗагрузить(ИмяФормы,
			КлючПараметраПоказыватьПомеченныеНаУдаление(), Ложь);
	Иначе
		ОбщегоНазначения.ХранилищеНастроекДанныхФормСохранить(ИмяФормы,
			КлючПараметраПоказыватьПомеченныеНаУдаление(), ЗначениеПараметра);
	КонецЕсли;
	
	Элементы.ПоказыватьПомеченныеНаУдаление.Пометка = ЗначениеПараметра;
	ОбновитьИспользованиеПараметровСписка(ЗначениеПараметра);
КонецПроцедуры

&НаСервере
Процедура ОбновитьОтборПоОрганизации()
	СвойстваДинамическогоСписка = ОбщегоНазначения.СтруктураСвойствДинамическогоСписка();
	СвойстваДинамическогоСписка.ДинамическоеСчитываниеДанных = Истина;
	СвойстваДинамическогоСписка.ОсновнаяТаблица = "РегистрСведений.ЖурналМашиночитаемыхДоверенностей";
	Если ЗначениеЗаполнено(ВыбраннаяОрганизация) Тогда
		Элементы.ДекорацияОтборПоОрганизации.Заголовок = СтроковыеФункции.ФорматированнаяСтрока(НСтр(
			"ru='<b>Отбор:</b> %1 <a href=""ОтменитьОтбор"" ><img src=""ПолеВводаОчистить""></a>';"),
			ВыбраннаяОрганизация);
		Элементы.ДекорацияОтборПоОрганизации.Видимость = Истина;
		ТекстЗапроса =
		"ВЫБРАТЬ РАЗРЕШЕННЫЕ
		|	ДанныеОрганизации.Ссылка,
		|	&РеквизитИНН КАК ИНН,
		|	&РеквизитКПП КАК КПП
		|ПОМЕСТИТЬ ВТ_ДанныеОрганизации
		|ИЗ
		|	#ТаблицаОрганизации КАК ДанныеОрганизации
		|ГДЕ
		|	ДанныеОрганизации.Ссылка = &Организация
		|;
		|
		|ВЫБРАТЬ
		|	ДанныеДоверенности.Ссылка
		|ПОМЕСТИТЬ ВТ_ДоверенностиОрганизации
		|ИЗ
		|	Справочник.МашиночитаемыеДоверенностиОрганизаций КАК ДанныеДоверенности
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТ_ДанныеОрганизации КАК ДанныеОрганизации
		|		ПО ДанныеДоверенности.Организация = ДанныеОрганизации.Ссылка
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ
		|	ДанныеДоверенности.Ссылка
		|ИЗ
		|	Справочник.МЧД003.Доверители КАК ДанныеДоверенности
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТ_ДанныеОрганизации КАК ДанныеОрганизации
		|		ПО ДанныеДоверенности.ИНН = ДанныеОрганизации.ИНН
		|		И ДанныеДоверенности.КПП = ДанныеОрганизации.КПП
		|;
		|
		|ВЫБРАТЬ РАЗРЕШЕННЫЕ
		|	ЖурналМашиночитаемыхДоверенностей.Хеш,
		|	ЖурналМашиночитаемыхДоверенностей.Номер,
		|	ЖурналМашиночитаемыхДоверенностей.ВсеДоверители,
		|	ЖурналМашиночитаемыхДоверенностей.ВсеПредставители,
		|	ЖурналМашиночитаемыхДоверенностей.ДатаВыдачи,
		|	ЖурналМашиночитаемыхДоверенностей.ДатаОкончанияДействия,
		|	ЖурналМашиночитаемыхДоверенностей.Верна,
		|	ЖурналМашиночитаемыхДоверенностей.Действует,
		|	ЖурналМашиночитаемыхДоверенностей.ПометкаУдаления,
		|	ЖурналМашиночитаемыхДоверенностей.Доверенность,
		|	ЖурналМашиночитаемыхДоверенностей.ДатаИзменения
		|ИЗ
		|	РегистрСведений.ЖурналМашиночитаемыхДоверенностей КАК ЖурналМашиночитаемыхДоверенностей
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТ_ДоверенностиОрганизации КАК ДоверенностиОрганизации
		|		ПО ЖурналМашиночитаемыхДоверенностей.Доверенность = ДоверенностиОрганизации.Ссылка
		|{ГДЕ
		|	ЖурналМашиночитаемыхДоверенностей.ПометкаУдаления = &ПоказыватьПомеченныеНаУдаление}
		|";
		ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "&РеквизитИНН", СтрШаблон("ДанныеОрганизации.%1",
			ИнтеграцияЭДО.ИмяНаличиеОбъектаРеквизитаВПрикладномРешении("ИННОрганизации")));
		ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "&РеквизитКПП", СтрШаблон("ДанныеОрганизации.%1",
			ИнтеграцияЭДО.ИмяНаличиеОбъектаРеквизитаВПрикладномРешении("КППОрганизации")));
		СвойстваДинамическогоСписка.ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "#ТаблицаОрганизации", СтрШаблон(
			"Справочник.%1", ИнтеграцияЭДО.ИмяПрикладногоСправочника("Организации")));
		ОбщегоНазначения.УстановитьСвойстваДинамическогоСписка(Элементы.Список, СвойстваДинамическогоСписка);
		Список.Параметры.УстановитьЗначениеПараметра("Организация", ВыбраннаяОрганизация);
	Иначе
		Элементы.ДекорацияОтборПоОрганизации.Видимость = Ложь;
		СвойстваДинамическогоСписка.ТекстЗапроса =
		"ВЫБРАТЬ РАЗРЕШЕННЫЕ
		|	ЖурналМашиночитаемыхДоверенностей.Хеш,
		|	ЖурналМашиночитаемыхДоверенностей.Номер,
		|	ЖурналМашиночитаемыхДоверенностей.ВсеДоверители,
		|	ЖурналМашиночитаемыхДоверенностей.ВсеПредставители,
		|	ЖурналМашиночитаемыхДоверенностей.ДатаВыдачи,
		|	ЖурналМашиночитаемыхДоверенностей.ДатаОкончанияДействия,
		|	ЖурналМашиночитаемыхДоверенностей.Верна,
		|	ЖурналМашиночитаемыхДоверенностей.Действует,
		|	ЖурналМашиночитаемыхДоверенностей.ПометкаУдаления,
		|	ЖурналМашиночитаемыхДоверенностей.Доверенность,
		|	ЖурналМашиночитаемыхДоверенностей.ДатаИзменения
		|ИЗ
		|	РегистрСведений.ЖурналМашиночитаемыхДоверенностей КАК ЖурналМашиночитаемыхДоверенностей
		|{ГДЕ
		|	ЖурналМашиночитаемыхДоверенностей.ПометкаУдаления = &ПоказыватьПомеченныеНаУдаление}";
		ОбщегоНазначения.УстановитьСвойстваДинамическогоСписка(Элементы.Список, СвойстваДинамическогоСписка);
	КонецЕсли;
КонецПроцедуры

&НаСервере
Процедура УстановитьУсловноеОформление()
	
	УсловноеОформление.Элементы.Очистить();
	ОформлениеПроблемныхЗаписей = УсловноеОформление.Элементы.Добавить();
	ПоляСписка = ОформлениеПроблемныхЗаписей.Поля.Элементы.Добавить();
	ПоляСписка.Поле = Новый ПолеКомпоновкиДанных(Элементы.Список.Имя);
	ГруппаУсловий = ОформлениеПроблемныхЗаписей.Отбор.Элементы.Добавить(Тип("ГруппаЭлементовОтбораКомпоновкиДанных"));
	ГруппаУсловий.ТипГруппы = ТипГруппыЭлементовОтбораКомпоновкиДанных.ГруппаИли;
	УсловиеНеВерна = ГруппаУсловий.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));
	УсловиеНеВерна.ЛевоеЗначение = Новый ПолеКомпоновкиДанных("Список.Верна");
	УсловиеНеВерна.ПравоеЗначение = Ложь;
	УсловиеНеВерна.ВидСравнения = ВидСравненияКомпоновкиДанных.Равно;
	УсловиеНеДействует = ГруппаУсловий.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));
	УсловиеНеДействует.ЛевоеЗначение = Новый ПолеКомпоновкиДанных("Список.Действует");
	УсловиеНеДействует.ПравоеЗначение = Ложь;
	УсловиеНеДействует.ВидСравнения = ВидСравненияКомпоновкиДанных.Равно;
	ОформлениеПроблемныхЗаписей.Оформление.УстановитьЗначениеПараметра("ЦветТекста", ЦветаСтиля.ЦветОтрицательногоЧисла);

	ОформлениеПомеченныхНаУдаление = УсловноеОформление.Элементы.Добавить();
	ПоляСписка = ОформлениеПомеченныхНаУдаление.Поля.Элементы.Добавить();
	ПоляСписка.Поле = Новый ПолеКомпоновкиДанных(Элементы.Список.Имя);
	УсловиеПометкаУдаления = ОформлениеПомеченныхНаУдаление.Отбор.Элементы.Добавить(Тип(
		"ЭлементОтбораКомпоновкиДанных"));
	УсловиеПометкаУдаления.ЛевоеЗначение = Новый ПолеКомпоновкиДанных("Список.ПометкаУдаления");
	УсловиеПометкаУдаления.ПравоеЗначение = Истина;
	УсловиеПометкаУдаления.ВидСравнения = ВидСравненияКомпоновкиДанных.Равно;
	ОформлениеПомеченныхНаУдаление.Оформление.УстановитьЗначениеПараметра("Шрифт", ШрифтыСтиля.ЗачеркнутыйШрифтБЭД);
	
КонецПроцедуры

&НаКлиенте
Процедура ОткрытьКлассификаторПолномочий002(Команда)
	ОткрытьФорму("Справочник.КлассификаторПолномочийФНСМЧД002.ФормаСписка");
КонецПроцедуры

&НаСервереБезКонтекста
Функция ПолучитьСтатусыДоверенности(Ссылка)
	
	Если ТипЗнч(Ссылка) = Тип("СправочникСсылка.МЧД003") Тогда
		СтатусыДоверенности = ОбщегоНазначения.ЗначенияРеквизитовОбъекта(Ссылка,
			"Подписана, Верна, СтатусВРеестреФНС, ДатаПрекращения");
			
		СтатусыДоверенности.Вставить("ДатаОтзыва", СтатусыДоверенности.ДатаПрекращения);
		СтатусыДоверенности.Вставить("Отозвана", СтатусыДоверенности.ДатаПрекращения > Дата(1, 1, 1));
	Иначе
		СтатусыДоверенности = ОбщегоНазначения.ЗначенияРеквизитовОбъекта(Ссылка,
			"Подписана, Верна, СтатусВРеестреФНС, ДатаОтзыва, Отозвана");
	КонецЕсли;
	
	Возврат СтатусыДоверенности;
	
КонецФункции

#КонецОбласти

#КонецОбласти