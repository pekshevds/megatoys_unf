#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область ПрограммныйИнтерфейс

#Область ДляВызоваИзДругихПодсистем

// СтандартныеПодсистемы.УправлениеДоступом

// См. УправлениеДоступомПереопределяемый.ПриЗаполненииСписковСОграничениемДоступа.
Процедура ПриЗаполненииОграниченияДоступа(Ограничение) Экспорт
	Ограничение.Текст =
	"РазрешитьЧтениеИзменение
	|ГДЕ
	|	ЗначениеРазрешено(Организация)";
КонецПроцедуры

// Конец СтандартныеПодсистемы.УправлениеДоступом

#КонецОбласти

Функция ЕстьНастройкаПодключенияЕНС(Организация = Неопределено)Экспорт
	
	УстановитьПривилегированныйРежим(Истина);
	
	Запрос = Новый Запрос;
	ТекстЗапроса =
	"ВЫБРАТЬ
	|	СостоянияПодключенияЕНС.Организация КАК Организация
	|ИЗ
	|	РегистрСведений.СостоянияПодключенияЕНС КАК СостоянияПодключенияЕНС
	|ГДЕ
	|	&УсловиеОрганизация";
	
	Если ЗначениеЗаполнено(Организация) Тогда
		ГоловнаяОрганизация = РегламентированнаяОтчетность.ГоловнаяОрганизация(Организация);
		Запрос.УстановитьПараметр("Организация", ГоловнаяОрганизация);
		ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "&УсловиеОрганизация", "СостоянияПодключенияЕНС.Организация = &Организация");
	Иначе
		ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "&УсловиеОрганизация", "Истина");
		
	КонецЕсли;
	Запрос.Текст = ТекстЗапроса;
	
	Результат = Запрос.Выполнить();
	
	ЕстьПодключенияЕНС = Не Результат.Пустой();
	
	УстановитьПривилегированныйРежим(Ложь);
	
	Возврат ЕстьПодключенияЕНС;
	
КонецФункции

Процедура СохранитьПервичнуюНастройкуПодключения(Организация) Экспорт
	
	Если ЕстьНастройкаПодключенияЕНС(Организация) Тогда
		Возврат;
	КонецЕсли;
	
	УстановитьПривилегированныйРежим(Истина);
	МенеджерЗаписи = РегистрыСведений.СостоянияПодключенияЕНС.СоздатьМенеджерЗаписи();
	МенеджерЗаписи.Организация = Организация;
	МенеджерЗаписи.Записать();
	УстановитьПривилегированныйРежим(Ложь);
	
КонецПроцедуры

Процедура СохранитьФактРегистрацииСервисом(Организация) Экспорт
	
	МенеджерЗаписи = РегистрыСведений.СостоянияПодключенияЕНС.СоздатьМенеджерЗаписи();
	МенеджерЗаписи.Организация = Организация;
	МенеджерЗаписи.Прочитать();
	Если Не МенеджерЗаписи.Выбран() Тогда
		МенеджерЗаписи.Организация = Организация;
	КонецЕсли;
	МенеджерЗаписи.ИнтеграцияПодключена = Истина;
	МенеджерЗаписи.Записать();
	
КонецПроцедуры

Процедура УстановитьСостояниеПодключения(Организация, ПараметрыСостояния) Экспорт
	
	МенеджерЗаписи = РегистрыСведений.СостоянияПодключенияЕНС.СоздатьМенеджерЗаписи();
	МенеджерЗаписи.Организация = Организация;
	МенеджерЗаписи.Прочитать();
	Если МенеджерЗаписи.Выбран() Тогда
		ЗаполнитьЗначенияСвойств(МенеджерЗаписи, ПараметрыСостояния);
		МенеджерЗаписи.Записать();
	КонецЕсли;
	
КонецПроцедуры

Функция ПолучитьСостяниеПодключения(Организация) Экспорт
	
	СтруктураПараметров = СтруктураПараметровСостоянияПодключения();
	МенеджерЗаписи = РегистрыСведений.СостоянияПодключенияЕНС.СоздатьМенеджерЗаписи();
	МенеджерЗаписи.Организация = Организация;
	МенеджерЗаписи.Прочитать();
	ЗаполнитьЗначенияСвойств(СтруктураПараметров, МенеджерЗаписи);
	
	Возврат СтруктураПараметров;
	
КонецФункции

Функция СтруктураПараметровСостоянияПодключения() Экспорт
	
	СтруктураПараметров = Новый Структура;
	СтруктураПараметров.Вставить("ИнтеграцияПодключена", Ложь);
	СтруктураПараметров.Вставить("ИспользоватьФоновыйРежим", Ложь);
	СтруктураПараметров.Вставить("ИспользоватьЖурналирование", Ложь);
	
	Возврат СтруктураПараметров;
	
КонецФункции

#КонецОбласти

#КонецЕсли