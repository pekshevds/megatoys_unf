
#Область ОбработчикиСобытий

&НаКлиенте
Процедура ОбработкаКоманды(ПараметрКоманды, ПараметрыВыполненияКоманды)
	
	Для Каждого ОснованиеФискальнойОперации Из ПараметрКоманды Цикл
		Если НЕ ПроверитьВозможностьОтправкиПодтвержденияНСПК(ОснованиеФискальнойОперации) Тогда
			СообщениеПользователю = СтрШаблон(
				НСтр("ru = 'В документе %1 не выбраны товары из классификатора ФСС, либо у товаров не указан код ТРУ ФСС.'")
				, ОснованиеФискальнойОперации);
			ОбщегоНазначенияКлиент.СообщитьПользователю(СообщениеПользователю);
			Продолжить;
		КонецЕсли;
		
		СуммаОплатыСертификатамиНСПК = СуммаОплатыСертификатамиНСПК(ОснованиеФискальнойОперации);
		
		Если СуммаОплатыСертификатамиНСПК = 0 Тогда
			СообщениеПользователю = СтрШаблон(
				НСтр("ru = 'В документе %1 электронный сертификат не использовался для оплаты. Отправлять подтверждение не требуется.'")
				, ОснованиеФискальнойОперации);
			ОбщегоНазначенияКлиент.СообщитьПользователю(СообщениеПользователю);
			Продолжить;
		КонецЕсли;
		
		Если НЕ ЕстьОшибкаОтправкиНСПК(ОснованиеФискальнойОперации) Тогда
			ПоказатьВопрос(Новый ОписаниеОповещения("ОповещениеВопросОтправитьПодтверждениеНСПК", ЭтотОбъект, ОснованиеФискальнойОперации),
			СтрШаблон(НСтр("ru = 'Подтверждение для %1 
				|уже было отправлено на сервер. Повторить отправку подтверждения?'"), ОснованиеФискальнойОперации),
					РежимДиалогаВопрос.ПовторитьОтмена);
		Иначе
			ОповещениеВопросОтправитьПодтверждениеНСПК(КодВозвратаДиалога.Повторить, ОснованиеФискальнойОперации);
		КонецЕсли;
	КонецЦикла;
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаКлиенте
Процедура ОповещениеВопросОтправитьПодтверждениеНСПК(Знач Результат = Неопределено, Знач ДополнительныеПараметры = Неопределено) Экспорт
	
	Если Результат <> КодВозвратаДиалога.Повторить Тогда
		Возврат;
	КонецЕсли;
	
	ПараметрыОперации = ПолучитьПараметрыФискальнойОперацииНСПКНаСервере(ДополнительныеПараметры);
	
	Если ПараметрыОперации = Неопределено Тогда
		Сообщение = СтрШаблон(НСтр("ru = 'Отсутствуют данные о фискализации чека: %1'"), СокрЛП(ДополнительныеПараметры));
		ПоказатьПредупреждение(,Сообщение,, НСтр("ru = 'Оплата сертификатом'"));
	Иначе
		ОповещениеМетода = Новый ОписаниеОповещения("ПередатьДанныеФискальногоЧекаНСПКЗавершение", ЭтотОбъект, ПараметрыОперации);
		ЭлектронныеСертификатыНСПККлиент.НачатьПередачуДанныхФискальногоЧека(ОповещениеМетода, ПараметрыОперации);
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Функция ПолучитьПараметрыФискальнойОперацииНСПКНаСервере(ЧекККМ)
	
	ПараметрыФискальнойОперации = ЭлектронныеСертификатыНСПК.ПараметрыОперацииНСПК();
	ЭлектронныеСертификатыНСПКРМКПереопределяемый.ЗаполнитьПараметрыФискальнойОперацииНСПК(ПараметрыФискальнойОперации, ЧекККМ);
	
	Возврат ПараметрыФискальнойОперации;
	
КонецФункции

&НаКлиенте
Процедура ПередатьДанныеФискальногоЧекаНСПКЗавершение(РезультатВыполнения, ДополнительныеПараметры) Экспорт 
	
	РезультатПередачи = Новый Структура("Результат, КодРезультата, ОписаниеОшибки", Ложь, 999, "");
	ЗаполнитьЗначенияСвойств(РезультатПередачи, РезультатВыполнения);
	
	Если РезультатПередачи.Результат Тогда
		Сообщение = СтрШаблон(
			НСтр("ru = '%1 Подтверждение операции %2 успешно отправлено на сервер'", ОбщегоНазначенияКлиент.КодОсновногоЯзыка()),
			ДополнительныеПараметры.ОснованиеФискальнойОперации,
			ДополнительныеПараметры.ИдентификаторКорзины);
	Иначе
		Сообщение = СтрШаблон(
			НСтр("ru = '%1 При отправке подтверждения операции %2 на сервер произошла ошибка (код %3):
			|%4'", ОбщегоНазначенияКлиент.КодОсновногоЯзыка()),
			ДополнительныеПараметры.ОснованиеФискальнойОперации,
			ДополнительныеПараметры.ИдентификаторКорзины,
			Строка(РезультатПередачи.КодРезультата),
			РезультатПередачи.ОписаниеОшибки);
	КонецЕсли;
	
	СообщениеПользователю = Новый СообщениеПользователю;
	СообщениеПользователю.Текст = Сообщение;
	СообщениеПользователю.Сообщить();
	
	ОповеститьОбИзменении(ДополнительныеПараметры.ОснованиеФискальнойОперации);
	
КонецПроцедуры

&НаСервере
Функция СуммаОплатыСертификатамиНСПК(ЧекККМ)
	
	СуммаОплатыСертификатамиНСПК = 0;
	ЭлектронныеСертификатыНСПКРМКПереопределяемый.ЗаполнитьСуммуОплатыСертификатамиНСПК(СуммаОплатыСертификатамиНСПК, ЧекККМ);
	
	Возврат СуммаОплатыСертификатамиНСПК;
	
КонецФункции

&НаСервере
Функция ПроверитьВозможностьОтправкиПодтвержденияНСПК(ЧекККМ)
	
	Результат = Ложь;
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	ЕСТЬNULL(ЧекККМЗапасы.Номенклатура.КодТРУ, &ПустаяСтрока) КАК КодТРУ
	|ИЗ
	|	Документ.ЧекККМ.Запасы КАК ЧекККМЗапасы
	|ГДЕ
	|	ЧекККМЗапасы.Ссылка = &Ссылка
	|	И ЕСТЬNULL(ЧекККМЗапасы.Номенклатура.КодТРУ, &ПустаяСтрока) <> &ПустаяСтрока
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ЕСТЬNULL(ЧекККМЗапасы.Номенклатура.КодТРУ, &ПустаяСтрока)
	|ИЗ
	|	Документ.ЧекККМВозврат.Запасы КАК ЧекККМЗапасы
	|ГДЕ
	|	ЧекККМЗапасы.Ссылка = &Ссылка
	|	И ЕСТЬNULL(ЧекККМЗапасы.Номенклатура.КодТРУ, &ПустаяСтрока) <> &ПустаяСтрока";
	Запрос.УстановитьПараметр("Ссылка", ЧекККМ);
	Запрос.УстановитьПараметр("ПустаяСтрока", НСтр("ru=''"));
	
	РезультатЗапроса = Запрос.Выполнить();
	
	Если НЕ РезультатЗапроса.Пустой() Тогда
		Результат = Истина;
	Иначе
		Результат = Ложь;
	КонецЕсли;
	
	Возврат Результат;
	
КонецФункции

&НаСервере
Функция ЕстьОшибкаОтправкиНСПК(ЧекККМ)
	
	ПредставлениеОшибкиНСПК = ЭлектронныеСертификатыНСПК.ПолучитьПредставлениеОшибкиНСПК(ЧекККМ);
	Возврат ЗначениеЗаполнено(ПредставлениеОшибкиНСПК);
	
КонецФункции

#КонецОбласти